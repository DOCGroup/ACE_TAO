--- orig/InterfaceS.h	Fri Mar 09 00:47:29 2001
+++ ../../orbsvcs/IFR_Service/InterfaceS.h	Thu Mar 01 15:34:32 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -19,23 +19,24 @@
 // Information about TAO is available at:
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
-#ifndef _TAO_IDL_ORIG_INTERFACES_H_
-#define _TAO_IDL_ORIG_INTERFACES_H_
-
+#ifndef TAO_IDL_INTERFACES_H
+#define TAO_IDL_INTERFACES_H
 #include "ace/pre.h"
-#include "InterfaceC.h"
 
+#include "tao/IFR_Client/InterfaceC.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "tao/PortableServer/PortableServer.h"
-#include "tao/PortableServer/Servant_Base.h"
-#include "tao/PortableServer/Collocated_Object.h"
+#include "tao/PortableServer/Operation_Table.h"
+#include "tao/PortableServer/Object_Adapter.h"
 #include "tao/PortableServer/ThruPOA_Object_Proxy_Impl.h"
-#include "tao/PortableServer/Direct_Object_Proxy_Impl.h"
 #include "tao/PortableServer/ServerRequestInfo.h"
+#include "tao/PortableInterceptor.h"
+#include "tao/Stub.h"
+#include "tao/ORB_Core.h"
+#include "tao/TAO_Server_Request.h"
 
 #if defined(_MSC_VER)
 #if (_MSC_VER >= 1200)
@@ -48,28 +49,20 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
-TAO_NAMESPACE  POA_IR
-{
-}
-TAO_NAMESPACE_CLOSE
-
-TAO_NAMESPACE  POA_CORBA
-{
-  class IRObject;
-  typedef IRObject *IRObject_ptr;
+class POA_CORBA_IRObject;
+typedef POA_CORBA_IRObject *POA_CORBA_IRObject_ptr;
   // Forward Classes Declaration
   class _TAO_IRObject_ThruPOA_Proxy_Impl;
   class _TAO_IRObject_Strategized_Proxy_Broker;
   
-  class TAO_IFR_Client_Export IRObject :  public virtual PortableServer::ServantBase
+class POA_CORBA_IRObject : public virtual PortableServer::ServantBase
   {
   protected:
-    IRObject (void);
+  POA_CORBA_IRObject (void);
 
   public:
-    IRObject (const IRObject& rhs);
-    virtual ~IRObject (void);
-
+  POA_CORBA_IRObject (const POA_CORBA_IRObject& rhs);
+  virtual ~POA_CORBA_IRObject (void);
 
     virtual CORBA::Boolean _is_a (
         const char* logical_type_id,
@@ -111,7 +104,7 @@
 
     virtual const char* _interface_repository_id (void) const;
 
-    virtual IR::DefinitionKind def_kind (
+  virtual IR_DefinitionKind def_kind (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       )
@@ -143,7 +136,6 @@
           TAO_default_environment ()
       );
 
-    
 #if (TAO_HAS_INTERCEPTORS == 1)
     // Generation of interceptors related RequestInfo classes per operation.
     // This needed to be able to store the arguments, exceptions, contexts
@@ -152,10 +144,10 @@
     class TAO_ServerRequestInfo_CORBA_IRObject_def_kind_get : public TAO_ServerRequestInfo
     {
     public:
-      friend class POA_CORBA::IRObject;
+    friend class POA_CORBA_IRObject;
       TAO_ServerRequestInfo_CORBA_IRObject_def_kind_get (
         TAO_ServerRequest &_tao_server_request,
-        POA_CORBA::IRObject *tao_impl
+      POA_CORBA_IRObject *tao_impl
         ,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
@@ -194,19 +186,19 @@
       void operator= (const TAO_ServerRequestInfo_CORBA_IRObject_def_kind_get &);
       
     private:
-      POA_CORBA::IRObject *_tao_impl;
+    POA_CORBA_IRObject *_tao_impl;
       void result (IR::DefinitionKind        result);
  // update the result 
-IR::DefinitionKind  _result;
+    IR_DefinitionKind  _result;
 };
 
 class TAO_ServerRequestInfo_CORBA_IRObject_destroy : public TAO_ServerRequestInfo
 {
 public:
-  friend class POA_CORBA::IRObject;
+    friend class POA_CORBA_IRObject;
   TAO_ServerRequestInfo_CORBA_IRObject_destroy (
     TAO_ServerRequest &_tao_server_request,
-    POA_CORBA::IRObject *tao_impl
+      POA_CORBA_IRObject *tao_impl
     ,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -245,27 +237,27 @@
   void operator= (const TAO_ServerRequestInfo_CORBA_IRObject_destroy &);
   
 private:
-  POA_CORBA::IRObject *_tao_impl;
+    POA_CORBA_IRObject *_tao_impl;
   };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_IRObject_Strategized_Proxy_Broker : public virtual ::CORBA::_TAO_IRObject_Proxy_Broker
+class _TAO_IRObject_Strategized_Proxy_Broker 
+  : public virtual _TAO_IRObject_Proxy_Broker
 {
 public: 
   _TAO_IRObject_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_IRObject_Strategized_Proxy_Broker (void);
   
-  virtual ::CORBA::_TAO_IRObject_Proxy_Impl &select_proxy (
-    ::CORBA::IRObject *object,
+  virtual _TAO_IRObject_Proxy_Impl &select_proxy (
+    CORBA_IRObject *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -283,8 +275,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::CORBA::_TAO_IRObject_Proxy_Impl
-   *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
+  _TAO_IRObject_Proxy_Impl *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
 // This funxtion is used to get an handle to the unique instance
@@ -305,8 +296,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_IRObject_ThruPOA_Proxy_Impl : 
-  public virtual ::CORBA::_TAO_IRObject_Proxy_Impl,
+class _TAO_IRObject_ThruPOA_Proxy_Impl 
+  : public virtual _TAO_IRObject_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl
 {
 public:
@@ -314,7 +305,7 @@
   
   virtual ~_TAO_IRObject_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::DefinitionKind def_kind (
+    virtual IR_DefinitionKind def_kind (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -332,77 +323,10 @@
 
 };
 
-
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
-#if defined (ACE_HAS_USING_KEYWORD)
-// TIE class: Refer to CORBA v2.2, Section 20.34.4
-template <class T>
-class TAO_IFR_Client_Export IRObject_tie : public IRObject
-{
-public:
-  IRObject_tie (T &t);
-  // the T& ctor
-  IRObject_tie (T &t, PortableServer::POA_ptr poa);
-  // ctor taking a POA
-  IRObject_tie (T *tp, CORBA::Boolean release=1);
-  // ctor taking pointer and an ownership flag
-  IRObject_tie (T *tp, PortableServer::POA_ptr poa, CORBA::Boolean release=1);
-  // ctor with T*, ownership flag and a POA
-  ~IRObject_tie (void);
-  // dtor
-  
-  // TIE specific functions
-  T *_tied_object (void);
-  // return the underlying object
-  void _tied_object (T &obj);
-  // set the underlying object
-  void _tied_object (T *obj, CORBA::Boolean release=1);
-  // set the underlying object and the ownership flag
-  CORBA::Boolean _is_owner (void);
-  // do we own it
-  void _is_owner (CORBA::Boolean b);
-  // set the ownership
-  
-  // overridden ServantBase operations
-  PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  IR::DefinitionKind def_kind (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    ));
-
-  void destroy (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    ));
-
-private:
-  T *ptr_;
-  PortableServer::POA_var poa_;
-  CORBA::Boolean rel_;
-  
-  // copy and assignment are not allowed
-  IRObject_tie (const IRObject_tie &);
-  void operator= (const IRObject_tie &);
-};
-
-#endif /* ACE_HAS_USING_KEYWORD */
-
-}
-TAO_NAMESPACE_CLOSE
-
 TAO_NAMESPACE  POA_IR
 {
   class Contained;
@@ -411,7 +335,7 @@
   class _TAO_Contained_ThruPOA_Proxy_Impl;
   class _TAO_Contained_Strategized_Proxy_Broker;
   
-  class TAO_IFR_Client_Export Contained : public virtual POA_CORBA::IRObject
+  class Contained : public virtual POA_CORBA_IRObject
   {
   protected:
     Contained (void);
@@ -420,7 +344,6 @@
     Contained (const Contained& rhs);
     virtual ~Contained (void);
 
-
     virtual CORBA::Boolean _is_a (
         const char* logical_type_id,
         CORBA::Environment &ACE_TRY_ENV = 
@@ -454,7 +377,7 @@
           TAO_default_environment ()
       );
 
-    ::IR::Contained *_this (
+    IR_Contained *_this (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
@@ -560,7 +483,7 @@
           TAO_default_environment ()
       );
 
-    virtual IR::Container_ptr defined_in (
+    virtual IR_Container_ptr defined_in (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       )
@@ -592,7 +515,7 @@
           TAO_default_environment ()
       );
 
-    virtual IR::Repository_ptr containing_repository (
+    virtual IR_Repository_ptr containing_repository (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       )
@@ -608,7 +531,7 @@
           TAO_default_environment ()
       );
 
-    virtual IR::Contained::Description * describe (
+    virtual IR_Contained::Description *describe (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       )
@@ -625,7 +548,7 @@
       );
 
     virtual void move (
-        IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
         const char * new_name,
         const char * new_version,
         CORBA::Environment &ACE_TRY_ENV = 
@@ -647,7 +570,7 @@
         TAO_ServerRequest &req,
         void *obj,
         void *context,
-        CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
           TAO_default_environment ()
       );
 
@@ -655,11 +578,10 @@
         TAO_ServerRequest &req, 
         void *obj,
         void *context,
-        CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
           TAO_default_environment ()
       );
 
-    
 #if (TAO_HAS_INTERCEPTORS == 1)
     // Generation of interceptors related RequestInfo classes per operation.
     // This needed to be able to store the arguments, exceptions, contexts
@@ -1016,7 +938,7 @@
   POA_IR::Contained *_tao_impl;
   void result (IR::Container_ptr    result);
  // update the result 
-IR::Container_ptr  _result;
+      IR_Container_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Contained_absolute_name_get : public TAO_ServerRequestInfo
@@ -1118,7 +1040,7 @@
   POA_IR::Contained *_tao_impl;
   void result (IR::Repository_ptr    result);
  // update the result 
-IR::Repository_ptr  _result;
+      IR_Repository_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Contained_describe : public TAO_ServerRequestInfo
@@ -1169,7 +1091,7 @@
   POA_IR::Contained *_tao_impl;
   void result (IR::Contained::Description *    result);
  // update the result 
-IR::Contained::Description *  _result;
+      IR_Contained::Description *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Contained_move : public TAO_ServerRequestInfo
@@ -1180,7 +1102,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::Contained *tao_impl
     ,
-    IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV = 
@@ -1221,7 +1143,7 @@
   
 private:
   POA_IR::Contained *_tao_impl;
-  IR::Container_ptr new_container_;
+      IR_Container_ptr new_container_;
 const char * new_name_;
 const char * new_version_;
 };
@@ -1230,20 +1152,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_Contained_Strategized_Proxy_Broker : public virtual ::IR::_TAO_Contained_Proxy_Broker
+class _TAO_Contained_Strategized_Proxy_Broker : public virtual _TAO_Contained_Proxy_Broker
 {
 public: 
   _TAO_Contained_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_Contained_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_Contained_Proxy_Impl &select_proxy (
-    ::IR::Contained *object,
+  virtual _TAO_Contained_Proxy_Impl &select_proxy (
+    IR_Contained *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -1261,7 +1182,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_Contained_Proxy_Impl
+  _TAO_Contained_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -1273,7 +1194,6 @@
   static _TAO_Contained_Strategized_Proxy_Broker *the_TAO_Contained_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -1283,10 +1203,10 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_Contained_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_Contained_Proxy_Impl,
+class _TAO_Contained_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_Contained_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
-  public virtual ::POA_CORBA::_TAO_IRObject_ThruPOA_Proxy_Impl
+  public virtual _TAO_IRObject_ThruPOA_Proxy_Impl
   
 {
 public:
@@ -1345,7 +1265,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::Container_ptr defined_in (
+  virtual IR_Container_ptr defined_in   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -1361,7 +1281,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::Repository_ptr containing_repository (
+  virtual IR_Repository_ptr containing_repository   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -1369,7 +1289,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::Contained::Description * describe (
+  virtual IR_Contained::Description * describe   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -1379,7 +1299,7 @@
 
   virtual void move (
       CORBA_Object *_collocated_tao_target_,
-      IR::Container_ptr new_container,
+      IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV
@@ -1395,11 +1315,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export Contained_tie : public Contained
+  class Contained_tie : public Contained
 {
 public:
   Contained_tie (T &t);
@@ -1427,7 +1346,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   char * id (
@@ -1481,7 +1400,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1497,7 +1416,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1505,7 +1424,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1514,7 +1433,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -1524,7 +1443,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1558,7 +1477,7 @@
 class _TAO_Container_ThruPOA_Proxy_Impl;
 class _TAO_Container_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export Container : public virtual POA_CORBA::IRObject
+  class Container : public virtual POA_CORBA_IRObject
 {
 protected:
   Container (void);
@@ -1601,14 +1520,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::Container *_this (
+    IR_Container *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::Contained_ptr lookup (
+    virtual IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -1625,8 +1544,8 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    virtual IR_ContainedSeq *contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -1643,10 +1562,10 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ContainedSeq * lookup_name (
+    virtual IR_ContainedSeq *lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -1663,8 +1582,8 @@
         TAO_default_environment ()
     );
 
-  virtual IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    virtual IR_Container::DescriptionSeq *describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -1682,7 +1601,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ModuleDef_ptr create_module (
+    virtual IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -1701,11 +1620,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ConstantDef_ptr create_constant (
+    virtual IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -1722,11 +1641,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::StructDef_ptr create_struct (
+    virtual IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq &members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1742,12 +1661,12 @@
         TAO_default_environment ()
     );
 
-  virtual IR::UnionDef_ptr create_union (
+    virtual IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq &members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1763,11 +1682,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::EnumDef_ptr create_enum (
+    virtual IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq &members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1783,11 +1702,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::AliasDef_ptr create_alias (
+    virtual IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1803,11 +1722,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::InterfaceDef_ptr create_interface (
+    virtual IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq &base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -1825,17 +1744,17 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ValueDef_ptr create_value (
+    virtual IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq &abstract_base_values,
+        const IR_InterfaceDefSeq &supported_interfaces,
+        const IR_InitializerSeq &initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1851,11 +1770,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ValueBoxDef_ptr create_value_box (
+    virtual IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1871,11 +1790,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ExceptionDef_ptr create_exception (
+    virtual IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq &members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -1891,7 +1810,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::NativeDef_ptr create_native (
+    virtual IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -1914,7 +1833,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -1922,11 +1841,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -1982,7 +1900,7 @@
     const char * search_name_;
 void result (IR::Contained_ptr      result);
  // update the result 
-IR::Contained_ptr  _result;
+      IR_Contained_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_contents : public TAO_ServerRequestInfo
@@ -1993,7 +1911,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::Container *tao_impl
     ,
-    IR::DefinitionKind & limit_type,
+        IR_DefinitionKind & limit_type,
     const CORBA::Boolean & exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -2033,11 +1951,11 @@
   
 private:
   POA_IR::Container *_tao_impl;
-  const IR::DefinitionKind & limit_type_;
+      const IR_DefinitionKind & limit_type_;
 const CORBA::Boolean & exclude_inherited_;
 void result (IR::ContainedSeq *    result);
  // update the result 
-IR::ContainedSeq *  _result;
+      IR_ContainedSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_lookup_name : public TAO_ServerRequestInfo
@@ -2050,7 +1968,7 @@
     ,
     const char * search_name,
     const CORBA::Long & levels_to_search,
-    IR::DefinitionKind & limit_type,
+        IR_DefinitionKind & limit_type,
     const CORBA::Boolean & exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -2092,11 +2010,11 @@
   POA_IR::Container *_tao_impl;
   const char * search_name_;
 const CORBA::Long & levels_to_search_;
-const IR::DefinitionKind & limit_type_;
+      const IR_DefinitionKind & limit_type_;
 const CORBA::Boolean & exclude_inherited_;
 void result (IR::ContainedSeq *    result);
  // update the result 
-IR::ContainedSeq *  _result;
+      IR_ContainedSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_describe_contents : public TAO_ServerRequestInfo
@@ -2107,7 +2025,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::Container *tao_impl
     ,
-    IR::DefinitionKind & limit_type,
+        IR_DefinitionKind & limit_type,
     const CORBA::Boolean & exclude_inherited,
     const CORBA::Long & max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV = 
@@ -2148,12 +2066,12 @@
   
 private:
   POA_IR::Container *_tao_impl;
-  const IR::DefinitionKind & limit_type_;
+      const IR_DefinitionKind & limit_type_;
 const CORBA::Boolean & exclude_inherited_;
 const CORBA::Long & max_returned_objs_;
 void result (IR::Container::DescriptionSeq *    result);
  // update the result 
-IR::Container::DescriptionSeq *  _result;
+      IR_Container::DescriptionSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_module : public TAO_ServerRequestInfo
@@ -2210,7 +2128,7 @@
 const char * version_;
 void result (IR::ModuleDef_ptr    result);
  // update the result 
-IR::ModuleDef_ptr  _result;
+      IR_ModuleDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_constant : public TAO_ServerRequestInfo
@@ -2224,7 +2142,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -2267,11 +2185,11 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr type_;
+      IR_IDLType_ptr type_;
 const CORBA::Any & value_;
 void result (IR::ConstantDef_ptr    result);
  // update the result 
-IR::ConstantDef_ptr  _result;
+      IR_ConstantDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_struct : public TAO_ServerRequestInfo
@@ -2285,7 +2203,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -2327,10 +2245,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-const IR::StructMemberSeq & members_;
+      const IR_StructMemberSeq & members_;
 void result (IR::StructDef_ptr    result);
  // update the result 
-IR::StructDef_ptr  _result;
+      IR_StructDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_union : public TAO_ServerRequestInfo
@@ -2344,8 +2262,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -2387,11 +2305,11 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr discriminator_type_;
-const IR::UnionMemberSeq & members_;
+      IR_IDLType_ptr discriminator_type_;
+      const IR_UnionMemberSeq & members_;
 void result (IR::UnionDef_ptr    result);
  // update the result 
-IR::UnionDef_ptr  _result;
+      IR_UnionDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_enum : public TAO_ServerRequestInfo
@@ -2405,7 +2323,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -2447,10 +2365,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-const IR::EnumMemberSeq & members_;
+      const IR_EnumMemberSeq & members_;
 void result (IR::EnumDef_ptr    result);
  // update the result 
-IR::EnumDef_ptr  _result;
+      IR_EnumDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_alias : public TAO_ServerRequestInfo
@@ -2464,7 +2382,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -2506,10 +2424,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr original_type_;
+      IR_IDLType_ptr original_type_;
 void result (IR::AliasDef_ptr    result);
  // update the result 
-IR::AliasDef_ptr  _result;
+      IR_AliasDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_interface : public TAO_ServerRequestInfo
@@ -2523,7 +2441,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
     const CORBA::Boolean & is_abstract,
     const CORBA::Boolean & is_local,
     CORBA::Environment &ACE_TRY_ENV = 
@@ -2567,12 +2485,12 @@
   const char * id_;
 const char * name_;
 const char * version_;
-const IR::InterfaceDefSeq & base_interfaces_;
+      const IR_InterfaceDefSeq & base_interfaces_;
 const CORBA::Boolean & is_abstract_;
 const CORBA::Boolean & is_local_;
 void result (IR::InterfaceDef_ptr    result);
  // update the result 
-IR::InterfaceDef_ptr  _result;
+      IR_InterfaceDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_value : public TAO_ServerRequestInfo
@@ -2588,11 +2506,11 @@
     const char * version,
     const CORBA::Boolean & is_custom,
     const CORBA::Boolean & is_abstract,
-    IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
     const CORBA::Boolean & is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -2636,14 +2554,14 @@
 const char * version_;
 const CORBA::Boolean & is_custom_;
 const CORBA::Boolean & is_abstract_;
-IR::ValueDef_ptr base_value_;
+      IR_ValueDef_ptr base_value_;
 const CORBA::Boolean & is_truncatable_;
-const IR::ValueDefSeq & abstract_base_values_;
-const IR::InterfaceDefSeq & supported_interfaces_;
-const IR::InitializerSeq & initializers_;
+      const IR_ValueDefSeq & abstract_base_values_;
+      const IR_InterfaceDefSeq & supported_interfaces_;
+      const IR_InitializerSeq & initializers_;
 void result (IR::ValueDef_ptr    result);
  // update the result 
-IR::ValueDef_ptr  _result;
+      IR_ValueDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_value_box : public TAO_ServerRequestInfo
@@ -2657,7 +2575,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -2699,10 +2617,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr original_type_def_;
+      IR_IDLType_ptr original_type_def_;
 void result (IR::ValueBoxDef_ptr    result);
  // update the result 
-IR::ValueBoxDef_ptr  _result;
+      IR_ValueBoxDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_exception : public TAO_ServerRequestInfo
@@ -2716,7 +2634,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -2758,10 +2676,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-const IR::StructMemberSeq & members_;
+      const IR_StructMemberSeq & members_;
 void result (IR::ExceptionDef_ptr    result);
  // update the result 
-IR::ExceptionDef_ptr  _result;
+      IR_ExceptionDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Container_create_native : public TAO_ServerRequestInfo
@@ -2818,27 +2736,26 @@
 const char * version_;
 void result (IR::NativeDef_ptr    result);
  // update the result 
-IR::NativeDef_ptr  _result;
+      IR_NativeDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_Container_Strategized_Proxy_Broker : public virtual ::IR::_TAO_Container_Proxy_Broker
+class _TAO_Container_Strategized_Proxy_Broker : public virtual _TAO_Container_Proxy_Broker
 {
 public: 
   _TAO_Container_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_Container_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_Container_Proxy_Impl &select_proxy (
-    ::IR::Container *object,
+  virtual _TAO_Container_Proxy_Impl &select_proxy (
+    IR_Container *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -2856,7 +2773,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_Container_Proxy_Impl
+  _TAO_Container_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -2868,7 +2785,6 @@
   static _TAO_Container_Strategized_Proxy_Broker *the_TAO_Container_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -2878,10 +2794,10 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_Container_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_Container_Proxy_Impl,
+class _TAO_Container_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_Container_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
-  public virtual ::POA_CORBA::_TAO_IRObject_ThruPOA_Proxy_Impl
+  public virtual _TAO_IRObject_ThruPOA_Proxy_Impl
   
 {
 public:
@@ -2889,7 +2805,7 @@
   
   virtual ~_TAO_Container_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::Contained_ptr lookup (
+  virtual IR_Contained_ptr lookup   (
       CORBA_Object *_collocated_tao_target_,
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV
@@ -2898,9 +2814,9 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ContainedSeq * contents (
+  virtual IR_ContainedSeq * contents   (
       CORBA_Object *_collocated_tao_target_,
-      IR::DefinitionKind limit_type,
+      IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -2908,11 +2824,11 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ContainedSeq * lookup_name (
+  virtual IR_ContainedSeq * lookup_name   (
       CORBA_Object *_collocated_tao_target_,
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+      IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -2920,9 +2836,9 @@
       CORBA::SystemException
     ));
 
-  virtual IR::Container::DescriptionSeq * describe_contents (
+  virtual IR_Container::DescriptionSeq * describe_contents   (
       CORBA_Object *_collocated_tao_target_,
-      IR::DefinitionKind limit_type,
+      IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV
@@ -2931,7 +2847,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ModuleDef_ptr create_module (
+  virtual IR_ModuleDef_ptr create_module   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
@@ -2942,12 +2858,12 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ConstantDef_ptr create_constant (
+  virtual IR_ConstantDef_ptr create_constant   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+      IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -2955,61 +2871,61 @@
       CORBA::SystemException
     ));
 
-  virtual IR::StructDef_ptr create_struct (
+  virtual IR_StructDef_ptr create_struct   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+      const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::UnionDef_ptr create_union (
+  virtual IR_UnionDef_ptr create_union   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+      IR_IDLType_ptr discriminator_type,
+      const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::EnumDef_ptr create_enum (
+  virtual IR_EnumDef_ptr create_enum   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+      const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::AliasDef_ptr create_alias (
+  virtual IR_AliasDef_ptr create_alias   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+      IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::InterfaceDef_ptr create_interface (
+  virtual IR_InterfaceDef_ptr create_interface   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+      const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV
@@ -3018,49 +2934,49 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ValueDef_ptr create_value (
+  virtual IR_ValueDef_ptr create_value   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+      IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+      const IR_ValueDefSeq & abstract_base_values,
+      const IR_InterfaceDefSeq & supported_interfaces,
+      const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ValueBoxDef_ptr create_value_box (
+  virtual IR_ValueBoxDef_ptr create_value_box   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+      IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ExceptionDef_ptr create_exception (
+  virtual IR_ExceptionDef_ptr create_exception   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+      const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::NativeDef_ptr create_native (
+  virtual IR_NativeDef_ptr create_native   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
@@ -3078,11 +2994,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export Container_tie : public Container
+  class Container_tie : public Container
 {
 public:
   Container_tie (T &t);
@@ -3110,10 +3025,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -3122,8 +3037,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -3132,10 +3047,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -3144,8 +3059,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -3155,7 +3070,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -3166,11 +3081,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -3179,11 +3094,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3191,12 +3106,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3204,11 +3119,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3216,11 +3131,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3228,11 +3143,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -3242,17 +3157,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3260,11 +3175,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3272,11 +3187,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3284,7 +3199,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -3295,7 +3210,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3329,7 +3244,7 @@
 class _TAO_IDLType_ThruPOA_Proxy_Impl;
 class _TAO_IDLType_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export IDLType : public virtual POA_CORBA::IRObject
+  class IDLType : public virtual POA_CORBA_IRObject
 {
 protected:
   IDLType (void);
@@ -3372,7 +3287,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::IDLType *_this (
+    IR_IDLType *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -3399,7 +3314,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3407,7 +3322,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3472,20 +3387,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_IDLType_Strategized_Proxy_Broker : public virtual ::IR::_TAO_IDLType_Proxy_Broker
+class _TAO_IDLType_Strategized_Proxy_Broker : public virtual _TAO_IDLType_Proxy_Broker
 {
 public: 
   _TAO_IDLType_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_IDLType_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_IDLType_Proxy_Impl &select_proxy (
-    ::IR::IDLType *object,
+  virtual _TAO_IDLType_Proxy_Impl &select_proxy (
+    IR_IDLType *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -3503,7 +3417,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_IDLType_Proxy_Impl
+  _TAO_IDLType_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -3515,7 +3429,6 @@
   static _TAO_IDLType_Strategized_Proxy_Broker *the_TAO_IDLType_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -3525,10 +3438,10 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_IDLType_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_IDLType_Proxy_Impl,
+class _TAO_IDLType_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_IDLType_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
-  public virtual ::POA_CORBA::_TAO_IRObject_ThruPOA_Proxy_Impl
+  public virtual _TAO_IRObject_ThruPOA_Proxy_Impl
   
 {
 public:
@@ -3551,11 +3464,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export IDLType_tie : public IDLType
+  class IDLType_tie : public IDLType
 {
 public:
   IDLType_tie (T &t);
@@ -3583,7 +3495,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr type (
@@ -3594,7 +3506,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3628,7 +3540,7 @@
 class _TAO_Repository_ThruPOA_Proxy_Impl;
 class _TAO_Repository_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export Repository : public virtual Container
+  class Repository : public virtual Container
 {
 protected:
   Repository (void);
@@ -3671,14 +3583,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::Repository *_this (
+    IR_Repository *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::Contained_ptr lookup_id (
+    virtual IR_Contained_ptr lookup_id (
       const char * search_id,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -3712,8 +3624,8 @@
         TAO_default_environment ()
     );
 
-  virtual IR::PrimitiveDef_ptr get_primitive (
-      IR::PrimitiveKind kind,
+    virtual IR_PrimitiveDef_ptr get_primitive (
+        IR_PrimitiveKind kind,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3729,7 +3641,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::StringDef_ptr create_string (
+    virtual IR_StringDef_ptr create_string (
       CORBA::ULong bound,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -3746,7 +3658,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::WstringDef_ptr create_wstring (
+    virtual IR_WstringDef_ptr create_wstring (
       CORBA::ULong bound,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -3763,9 +3675,9 @@
         TAO_default_environment ()
     );
 
-  virtual IR::SequenceDef_ptr create_sequence (
+    virtual IR_SequenceDef_ptr create_sequence (
       CORBA::ULong bound,
-      IR::IDLType_ptr element_type,
+        IR_IDLType_ptr element_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3781,9 +3693,9 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ArrayDef_ptr create_array (
+    virtual IR_ArrayDef_ptr create_array (
       CORBA::ULong length,
-      IR::IDLType_ptr element_type,
+        IR_IDLType_ptr element_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -3799,7 +3711,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::FixedDef_ptr create_fixed (
+    virtual IR_FixedDef_ptr create_fixed (
       CORBA::UShort digits,
       CORBA::Short scale,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -3821,7 +3733,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3829,7 +3741,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3837,7 +3749,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3845,7 +3757,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3853,7 +3765,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3861,7 +3773,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3869,7 +3781,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3877,7 +3789,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3885,7 +3797,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3893,7 +3805,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3901,7 +3813,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3909,7 +3821,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3917,7 +3829,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3925,7 +3837,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3933,7 +3845,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3941,7 +3853,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -3949,11 +3861,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -4009,7 +3920,7 @@
     const char * search_id_;
 void result (IR::Contained_ptr      result);
  // update the result 
-IR::Contained_ptr  _result;
+      IR_Contained_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Repository_get_canonical_typecode : public TAO_ServerRequestInfo
@@ -4073,7 +3984,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::Repository *tao_impl
     ,
-    IR::PrimitiveKind & kind,
+        IR_PrimitiveKind & kind,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -4112,10 +4023,10 @@
   
 private:
   POA_IR::Repository *_tao_impl;
-  const IR::PrimitiveKind & kind_;
+      const IR_PrimitiveKind & kind_;
 void result (IR::PrimitiveDef_ptr    result);
  // update the result 
-IR::PrimitiveDef_ptr  _result;
+      IR_PrimitiveDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Repository_create_string : public TAO_ServerRequestInfo
@@ -4168,7 +4079,7 @@
   const CORBA::ULong & bound_;
 void result (IR::StringDef_ptr    result);
  // update the result 
-IR::StringDef_ptr  _result;
+      IR_StringDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Repository_create_wstring : public TAO_ServerRequestInfo
@@ -4221,7 +4132,7 @@
   const CORBA::ULong & bound_;
 void result (IR::WstringDef_ptr    result);
  // update the result 
-IR::WstringDef_ptr  _result;
+      IR_WstringDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Repository_create_sequence : public TAO_ServerRequestInfo
@@ -4233,7 +4144,7 @@
     POA_IR::Repository *tao_impl
     ,
     const CORBA::ULong & bound,
-    IR::IDLType_ptr element_type,
+        IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -4273,10 +4184,10 @@
 private:
   POA_IR::Repository *_tao_impl;
   const CORBA::ULong & bound_;
-IR::IDLType_ptr element_type_;
+      IR_IDLType_ptr element_type_;
 void result (IR::SequenceDef_ptr    result);
  // update the result 
-IR::SequenceDef_ptr  _result;
+      IR_SequenceDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Repository_create_array : public TAO_ServerRequestInfo
@@ -4288,7 +4199,7 @@
     POA_IR::Repository *tao_impl
     ,
     const CORBA::ULong & length,
-    IR::IDLType_ptr element_type,
+        IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -4328,10 +4239,10 @@
 private:
   POA_IR::Repository *_tao_impl;
   const CORBA::ULong & length_;
-IR::IDLType_ptr element_type_;
+      IR_IDLType_ptr element_type_;
 void result (IR::ArrayDef_ptr    result);
  // update the result 
-IR::ArrayDef_ptr  _result;
+      IR_ArrayDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_Repository_create_fixed : public TAO_ServerRequestInfo
@@ -4386,27 +4297,26 @@
 const CORBA::Short & scale_;
 void result (IR::FixedDef_ptr    result);
  // update the result 
-IR::FixedDef_ptr  _result;
+      IR_FixedDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_Repository_Strategized_Proxy_Broker : public virtual ::IR::_TAO_Repository_Proxy_Broker
+class _TAO_Repository_Strategized_Proxy_Broker : public virtual _TAO_Repository_Proxy_Broker
 {
 public: 
   _TAO_Repository_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_Repository_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_Repository_Proxy_Impl &select_proxy (
-    ::IR::Repository *object,
+  virtual _TAO_Repository_Proxy_Impl &select_proxy (
+    IR_Repository *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -4424,7 +4334,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_Repository_Proxy_Impl
+  _TAO_Repository_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -4436,7 +4346,6 @@
   static _TAO_Repository_Strategized_Proxy_Broker *the_TAO_Repository_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -4446,10 +4355,10 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_Repository_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_Repository_Proxy_Impl,
+class _TAO_Repository_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_Repository_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
-  public virtual ::POA_IR::_TAO_Container_ThruPOA_Proxy_Impl
+  public virtual _TAO_Container_ThruPOA_Proxy_Impl
   
 {
 public:
@@ -4457,7 +4366,7 @@
   
   virtual ~_TAO_Repository_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::Contained_ptr lookup_id (
+    virtual IR_Contained_ptr lookup_id   (
       CORBA_Object *_collocated_tao_target_,
       const char * search_id,
       CORBA::Environment &ACE_TRY_ENV
@@ -4475,16 +4384,16 @@
       CORBA::SystemException
     ));
 
-  virtual IR::PrimitiveDef_ptr get_primitive (
+  virtual IR_PrimitiveDef_ptr get_primitive   (
       CORBA_Object *_collocated_tao_target_,
-      IR::PrimitiveKind kind,
+      IR_PrimitiveKind kind,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::StringDef_ptr create_string (
+  virtual IR_StringDef_ptr create_string   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::ULong bound,
       CORBA::Environment &ACE_TRY_ENV
@@ -4493,7 +4402,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::WstringDef_ptr create_wstring (
+  virtual IR_WstringDef_ptr create_wstring   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::ULong bound,
       CORBA::Environment &ACE_TRY_ENV
@@ -4502,27 +4411,27 @@
       CORBA::SystemException
     ));
 
-  virtual IR::SequenceDef_ptr create_sequence (
+  virtual IR_SequenceDef_ptr create_sequence   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::ULong bound,
-      IR::IDLType_ptr element_type,
+      IR_IDLType_ptr element_type,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ArrayDef_ptr create_array (
+  virtual IR_ArrayDef_ptr create_array   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::ULong length,
-      IR::IDLType_ptr element_type,
+      IR_IDLType_ptr element_type,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::FixedDef_ptr create_fixed (
+  virtual IR_FixedDef_ptr create_fixed   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::UShort digits,
       CORBA::Short scale,
@@ -4539,11 +4448,11 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export Repository_tie : public Repository
+  class Repository_tie : public virtual Repository,
+                         public virtual PortableServer::RefCountServantBase
 {
 public:
   Repository_tie (T &t);
@@ -4571,10 +4480,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::Contained_ptr lookup_id (
+    IR_Contained_ptr lookup_id (
       const char * search_id,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -4592,8 +4501,8 @@
       CORBA::SystemException
     ));
 
-  IR::PrimitiveDef_ptr get_primitive (
-      IR::PrimitiveKind kind,
+    IR_PrimitiveDef_ptr get_primitive (
+        IR_PrimitiveKind kind,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4601,7 +4510,7 @@
       CORBA::SystemException
     ));
 
-  IR::StringDef_ptr create_string (
+    IR_StringDef_ptr create_string (
       CORBA::ULong bound,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -4610,7 +4519,7 @@
       CORBA::SystemException
     ));
 
-  IR::WstringDef_ptr create_wstring (
+    IR_WstringDef_ptr create_wstring (
       CORBA::ULong bound,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -4619,9 +4528,9 @@
       CORBA::SystemException
     ));
 
-  IR::SequenceDef_ptr create_sequence (
+    IR_SequenceDef_ptr create_sequence (
       CORBA::ULong bound,
-      IR::IDLType_ptr element_type,
+        IR_IDLType_ptr element_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4629,9 +4538,9 @@
       CORBA::SystemException
     ));
 
-  IR::ArrayDef_ptr create_array (
+    IR_ArrayDef_ptr create_array (
       CORBA::ULong length,
-      IR::IDLType_ptr element_type,
+        IR_IDLType_ptr element_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4639,7 +4548,7 @@
       CORBA::SystemException
     ));
 
-  IR::FixedDef_ptr create_fixed (
+    IR_FixedDef_ptr create_fixed (
       CORBA::UShort digits,
       CORBA::Short scale,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -4649,7 +4558,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -4658,8 +4567,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -4668,10 +4577,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -4680,8 +4589,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -4691,7 +4600,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -4702,11 +4611,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -4715,11 +4624,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4727,12 +4636,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4740,11 +4649,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4752,11 +4661,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4764,11 +4673,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -4778,17 +4687,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4796,11 +4705,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4808,11 +4717,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4820,7 +4729,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -4831,7 +4740,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4865,7 +4774,7 @@
 class _TAO_ComponentRepository_ThruPOA_Proxy_Impl;
 class _TAO_ComponentRepository_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ComponentRepository : public virtual Repository
+  class ComponentRepository : public virtual Repository
 {
 protected:
   ComponentRepository (void);
@@ -4908,19 +4817,19 @@
         TAO_default_environment ()
     );
 
-  ::IR::ComponentRepository *_this (
+    IR_ComponentRepository *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::ComponentDef_ptr create_component (
+    virtual IR_ComponentDef_ptr create_component (
       const char * id,
       const char * name,
       const char * version,
-      IR::ComponentDef_ptr base_component,
-      const IR::InterfaceDefSeq & supports_interfaces,
+        IR_ComponentDef_ptr base_component,
+        const IR_InterfaceDefSeq & supports_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4936,13 +4845,13 @@
         TAO_default_environment ()
     );
 
-  virtual IR::HomeDef_ptr create_home (
+    virtual IR_HomeDef_ptr create_home (
       const char * id,
       const char * name,
       const char * version,
-      IR::HomeDef_ptr base_home,
-      IR::ComponentDef_ptr managed_component,
-      IR::ValueDef_ptr primary_key,
+        IR_HomeDef_ptr base_home,
+        IR_ComponentDef_ptr managed_component,
+        IR_ValueDef_ptr primary_key,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4962,7 +4871,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -4970,7 +4879,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -4978,7 +4887,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -4986,7 +4895,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -4994,7 +4903,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5002,7 +4911,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5010,7 +4919,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5018,7 +4927,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5026,7 +4935,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5034,7 +4943,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5042,7 +4951,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5050,7 +4959,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5058,7 +4967,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5066,7 +4975,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5074,7 +4983,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5082,7 +4991,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5090,7 +4999,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5098,7 +5007,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5106,7 +5015,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5114,7 +5023,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5122,7 +5031,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5130,7 +5039,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5138,7 +5047,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5146,7 +5055,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5154,11 +5063,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -5175,8 +5083,8 @@
       const char * id,
       const char * name,
       const char * version,
-      IR::ComponentDef_ptr base_component,
-      const IR::InterfaceDefSeq & supports_interfaces,
+        IR_ComponentDef_ptr base_component,
+        const IR_InterfaceDefSeq & supports_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -5218,11 +5126,11 @@
     const char * id_;
 const char * name_;
 const char * version_;
-IR::ComponentDef_ptr base_component_;
-const IR::InterfaceDefSeq & supports_interfaces_;
+      IR_ComponentDef_ptr base_component_;
+      const IR_InterfaceDefSeq & supports_interfaces_;
 void result (IR::ComponentDef_ptr      result);
  // update the result 
-IR::ComponentDef_ptr  _result;
+      IR_ComponentDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentRepository_create_home : public TAO_ServerRequestInfo
@@ -5236,9 +5144,9 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::HomeDef_ptr base_home,
-    IR::ComponentDef_ptr managed_component,
-    IR::ValueDef_ptr primary_key,
+        IR_HomeDef_ptr base_home,
+        IR_ComponentDef_ptr managed_component,
+        IR_ValueDef_ptr primary_key,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -5280,32 +5188,31 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::HomeDef_ptr base_home_;
-IR::ComponentDef_ptr managed_component_;
-IR::ValueDef_ptr primary_key_;
+      IR_HomeDef_ptr base_home_;
+      IR_ComponentDef_ptr managed_component_;
+      IR_ValueDef_ptr primary_key_;
 void result (IR::HomeDef_ptr    result);
  // update the result 
-IR::HomeDef_ptr  _result;
+      IR_HomeDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ComponentRepository_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ComponentRepository_Proxy_Broker
+class _TAO_ComponentRepository_Strategized_Proxy_Broker : public virtual _TAO_ComponentRepository_Proxy_Broker
 {
 public: 
   _TAO_ComponentRepository_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ComponentRepository_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ComponentRepository_Proxy_Impl &select_proxy (
-    ::IR::ComponentRepository *object,
+  virtual _TAO_ComponentRepository_Proxy_Impl &select_proxy (
+    IR_ComponentRepository *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -5323,7 +5230,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ComponentRepository_Proxy_Impl
+  _TAO_ComponentRepository_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -5335,7 +5242,6 @@
   static _TAO_ComponentRepository_Strategized_Proxy_Broker *the_TAO_ComponentRepository_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -5345,8 +5251,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ComponentRepository_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ComponentRepository_Proxy_Impl,
+class _TAO_ComponentRepository_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ComponentRepository_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Repository_ThruPOA_Proxy_Impl
   
@@ -5356,33 +5262,32 @@
   
   virtual ~_TAO_ComponentRepository_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::ComponentDef_ptr create_component (
+    virtual IR_ComponentDef_ptr create_component   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::ComponentDef_ptr base_component,
-      const IR::InterfaceDefSeq & supports_interfaces,
+      IR_ComponentDef_ptr base_component,
+      const IR_InterfaceDefSeq & supports_interfaces,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::HomeDef_ptr create_home (
+  virtual IR_HomeDef_ptr create_home   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::HomeDef_ptr base_home,
-      IR::ComponentDef_ptr managed_component,
-      IR::ValueDef_ptr primary_key,
+      IR_HomeDef_ptr base_home,
+      IR_ComponentDef_ptr managed_component,
+      IR_ValueDef_ptr primary_key,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
-
 };
 
 
@@ -5390,11 +5295,12 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ComponentRepository_tie : public ComponentRepository
+  class ComponentRepository_tie
+    : public virtual ComponentRepository,
+      public virtual PortableServer::RefCountServantBase
 {
 public:
   ComponentRepository_tie (T &t);
@@ -5422,15 +5328,15 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::ComponentDef_ptr create_component (
+    IR_ComponentDef_ptr create_component (
       const char * id,
       const char * name,
       const char * version,
-      IR::ComponentDef_ptr base_component,
-      const IR::InterfaceDefSeq & supports_interfaces,
+        IR_ComponentDef_ptr base_component,
+        const IR_InterfaceDefSeq & supports_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5438,13 +5344,13 @@
       CORBA::SystemException
     ));
 
-  IR::HomeDef_ptr create_home (
+    IR_HomeDef_ptr create_home (
       const char * id,
       const char * name,
       const char * version,
-      IR::HomeDef_ptr base_home,
-      IR::ComponentDef_ptr managed_component,
-      IR::ValueDef_ptr primary_key,
+        IR_HomeDef_ptr base_home,
+        IR_ComponentDef_ptr managed_component,
+        IR_ValueDef_ptr primary_key,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5452,7 +5358,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup_id (
+    IR_Contained_ptr lookup_id (
       const char * search_id,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -5470,8 +5376,8 @@
       CORBA::SystemException
     ));
 
-  IR::PrimitiveDef_ptr get_primitive (
-      IR::PrimitiveKind kind,
+    IR_PrimitiveDef_ptr get_primitive (
+        IR_PrimitiveKind kind,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5479,7 +5385,7 @@
       CORBA::SystemException
     ));
 
-  IR::StringDef_ptr create_string (
+    IR_StringDef_ptr create_string (
       CORBA::ULong bound,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -5488,7 +5394,7 @@
       CORBA::SystemException
     ));
 
-  IR::WstringDef_ptr create_wstring (
+    IR_WstringDef_ptr create_wstring (
       CORBA::ULong bound,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -5497,9 +5403,9 @@
       CORBA::SystemException
     ));
 
-  IR::SequenceDef_ptr create_sequence (
+    IR_SequenceDef_ptr create_sequence (
       CORBA::ULong bound,
-      IR::IDLType_ptr element_type,
+        IR_IDLType_ptr element_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5507,9 +5413,9 @@
       CORBA::SystemException
     ));
 
-  IR::ArrayDef_ptr create_array (
+    IR_ArrayDef_ptr create_array (
       CORBA::ULong length,
-      IR::IDLType_ptr element_type,
+        IR_IDLType_ptr element_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5517,7 +5423,7 @@
       CORBA::SystemException
     ));
 
-  IR::FixedDef_ptr create_fixed (
+    IR_FixedDef_ptr create_fixed (
       CORBA::UShort digits,
       CORBA::Short scale,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -5527,7 +5433,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -5536,8 +5442,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -5546,10 +5452,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -5558,8 +5464,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -5569,7 +5475,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -5580,11 +5486,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -5593,11 +5499,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5605,12 +5511,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5618,11 +5524,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5630,11 +5536,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5642,11 +5548,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -5656,17 +5562,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5674,11 +5580,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5686,11 +5592,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5698,7 +5604,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -5709,7 +5615,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5743,7 +5649,8 @@
 class _TAO_ModuleDef_ThruPOA_Proxy_Impl;
 class _TAO_ModuleDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ModuleDef : public virtual Container, public virtual Contained
+  class ModuleDef : public virtual Container, 
+                    public virtual Contained
 {
 protected:
   ModuleDef (void);
@@ -5786,7 +5693,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::ModuleDef *_this (
+    IR_ModuleDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -5797,7 +5704,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5805,7 +5712,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5813,7 +5720,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5821,7 +5728,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5829,7 +5736,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5837,7 +5744,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5845,7 +5752,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5853,7 +5760,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5861,7 +5768,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5869,7 +5776,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5877,7 +5784,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5885,7 +5792,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5893,7 +5800,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5901,7 +5808,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5909,7 +5816,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5917,7 +5824,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5925,7 +5832,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5933,7 +5840,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5941,7 +5848,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5949,7 +5856,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5957,7 +5864,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5965,7 +5872,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5973,7 +5880,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5981,7 +5888,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5989,7 +5896,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -5997,7 +5904,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6005,7 +5912,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6013,11 +5920,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -6027,20 +5933,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ModuleDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ModuleDef_Proxy_Broker
+class _TAO_ModuleDef_Strategized_Proxy_Broker : public virtual _TAO_ModuleDef_Proxy_Broker
 {
 public: 
   _TAO_ModuleDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ModuleDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ModuleDef_Proxy_Impl &select_proxy (
-    ::IR::ModuleDef *object,
+  virtual _TAO_ModuleDef_Proxy_Impl &select_proxy (
+    IR_ModuleDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -6058,7 +5963,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ModuleDef_Proxy_Impl
+  _TAO_ModuleDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -6070,7 +5975,6 @@
   static _TAO_ModuleDef_Strategized_Proxy_Broker *the_TAO_ModuleDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -6080,8 +5984,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ModuleDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ModuleDef_Proxy_Impl,
+class _TAO_ModuleDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ModuleDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Container_ThruPOA_Proxy_Impl, 
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
@@ -6099,11 +6003,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ModuleDef_tie : public ModuleDef
+  class ModuleDef_tie : public ModuleDef
 {
 public:
   ModuleDef_tie (T &t);
@@ -6131,10 +6034,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -6143,8 +6046,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -6153,10 +6056,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -6165,8 +6068,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -6176,7 +6079,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -6187,11 +6090,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -6200,11 +6103,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6212,12 +6115,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6225,11 +6128,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6237,11 +6140,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6249,11 +6152,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -6263,17 +6166,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6281,11 +6184,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6293,11 +6196,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6305,7 +6208,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -6367,7 +6270,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6383,7 +6286,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6391,7 +6294,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6400,7 +6303,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -6410,7 +6313,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6444,7 +6347,7 @@
 class _TAO_ConstantDef_ThruPOA_Proxy_Impl;
 class _TAO_ConstantDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ConstantDef : public virtual Contained
+  class ConstantDef : public virtual Contained
 {
 protected:
   ConstantDef (void);
@@ -6487,7 +6390,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::ConstantDef *_this (
+    IR_ConstantDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -6510,7 +6413,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::IDLType_ptr type_def (
+    virtual IR_IDLType_ptr type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6527,7 +6430,7 @@
     );
 
   virtual void type_def (
-      IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -6580,7 +6483,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6588,7 +6491,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6596,7 +6499,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6604,7 +6507,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6612,7 +6515,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6620,7 +6523,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6628,7 +6531,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6636,7 +6539,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6644,7 +6547,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6652,7 +6555,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6660,7 +6563,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6668,7 +6571,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -6676,11 +6579,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -6785,7 +6687,7 @@
   POA_IR::ConstantDef *_tao_impl;
   void result (IR::IDLType_ptr    result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ConstantDef_type_def_set : public TAO_ServerRequestInfo
@@ -6796,7 +6698,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ConstantDef *tao_impl
     ,
-    IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -6835,7 +6737,7 @@
   
 private:
   POA_IR::ConstantDef *_tao_impl;
-  IR::IDLType_ptr type_def_;
+      IR_IDLType_ptr type_def_;
 };
 
 class TAO_ServerRequestInfo_IR_ConstantDef_value_get : public TAO_ServerRequestInfo
@@ -6943,20 +6845,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ConstantDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ConstantDef_Proxy_Broker
+class _TAO_ConstantDef_Strategized_Proxy_Broker : public virtual _TAO_ConstantDef_Proxy_Broker
 {
 public: 
   _TAO_ConstantDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ConstantDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ConstantDef_Proxy_Impl &select_proxy (
-    ::IR::ConstantDef *object,
+  virtual _TAO_ConstantDef_Proxy_Impl &select_proxy (
+    IR_ConstantDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -6974,7 +6875,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ConstantDef_Proxy_Impl
+  _TAO_ConstantDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -6986,7 +6887,6 @@
   static _TAO_ConstantDef_Strategized_Proxy_Broker *the_TAO_ConstantDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -6996,8 +6896,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ConstantDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ConstantDef_Proxy_Impl,
+class _TAO_ConstantDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ConstantDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
   
@@ -7015,7 +6915,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::IDLType_ptr type_def (
+  virtual IR_IDLType_ptr type_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -7025,7 +6925,7 @@
 
   virtual void type_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr type_def,
+      IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -7056,11 +6956,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ConstantDef_tie : public ConstantDef
+  class ConstantDef_tie : public ConstantDef
 {
 public:
   ConstantDef_tie (T &t);
@@ -7088,7 +6987,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr type (
@@ -7099,7 +6998,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr type_def (
+    IR_IDLType_ptr type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7108,7 +7007,7 @@
     ));
 
   void type_def (
-      IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7184,7 +7083,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7200,7 +7099,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7208,7 +7107,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7217,7 +7116,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -7227,7 +7126,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7261,7 +7160,7 @@
 class _TAO_TypedefDef_ThruPOA_Proxy_Impl;
 class _TAO_TypedefDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export TypedefDef : public virtual Contained, public virtual IDLType
+  class TypedefDef : public virtual Contained, public virtual IDLType
 {
 protected:
   TypedefDef (void);
@@ -7304,7 +7203,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::TypedefDef *_this (
+    IR_TypedefDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -7315,7 +7214,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7323,7 +7222,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7331,7 +7230,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7339,7 +7238,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7347,7 +7246,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7355,7 +7254,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7363,7 +7262,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7371,7 +7270,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7379,7 +7278,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7387,7 +7286,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7395,7 +7294,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7403,7 +7302,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7411,7 +7310,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7419,11 +7318,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -7433,20 +7331,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_TypedefDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_TypedefDef_Proxy_Broker
+class _TAO_TypedefDef_Strategized_Proxy_Broker : public virtual _TAO_TypedefDef_Proxy_Broker
 {
 public: 
   _TAO_TypedefDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_TypedefDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_TypedefDef_Proxy_Impl &select_proxy (
-    ::IR::TypedefDef *object,
+  virtual _TAO_TypedefDef_Proxy_Impl &select_proxy (
+    IR_TypedefDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -7464,7 +7361,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_TypedefDef_Proxy_Impl
+  _TAO_TypedefDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -7476,7 +7373,6 @@
   static _TAO_TypedefDef_Strategized_Proxy_Broker *the_TAO_TypedefDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -7486,8 +7382,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_TypedefDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_TypedefDef_Proxy_Impl,
+class _TAO_TypedefDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_TypedefDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl, 
   public virtual ::POA_IR::_TAO_IDLType_ThruPOA_Proxy_Impl
@@ -7505,11 +7401,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export TypedefDef_tie : public TypedefDef
+  class TypedefDef_tie : public TypedefDef
 {
 public:
   TypedefDef_tie (T &t);
@@ -7537,7 +7432,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   char * id (
@@ -7591,7 +7486,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7607,7 +7502,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7615,7 +7510,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7624,7 +7519,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -7642,7 +7537,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7676,7 +7571,7 @@
 class _TAO_StructDef_ThruPOA_Proxy_Impl;
 class _TAO_StructDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export StructDef : public virtual TypedefDef, public virtual Container
+  class StructDef : public virtual TypedefDef, public virtual Container
 {
 protected:
   StructDef (void);
@@ -7719,14 +7614,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::StructDef *_this (
+    IR_StructDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::StructMemberSeq * members (
+    virtual IR_StructMemberSeq * members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7743,7 +7638,7 @@
     );
 
   virtual void members (
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -7763,7 +7658,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7771,7 +7666,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7779,7 +7674,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7787,7 +7682,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7795,7 +7690,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7803,7 +7698,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7811,7 +7706,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7819,7 +7714,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7827,7 +7722,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7835,7 +7730,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7843,7 +7738,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7851,7 +7746,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7859,7 +7754,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7867,7 +7762,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7875,7 +7770,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7883,7 +7778,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7891,7 +7786,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7899,7 +7794,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7907,7 +7802,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7915,7 +7810,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7923,7 +7818,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7931,7 +7826,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7939,7 +7834,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7947,7 +7842,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7955,7 +7850,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7963,7 +7858,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7971,7 +7866,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7979,7 +7874,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -7987,11 +7882,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -8045,7 +7939,7 @@
     POA_IR::StructDef *_tao_impl;
     void result (IR::StructMemberSeq *      result);
  // update the result 
-IR::StructMemberSeq *  _result;
+      IR_StructMemberSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_StructDef_members_set : public TAO_ServerRequestInfo
@@ -8056,7 +7950,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::StructDef *tao_impl
     ,
-    const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -8095,27 +7989,26 @@
   
 private:
   POA_IR::StructDef *_tao_impl;
-  const IR::StructMemberSeq & members_;
+      const IR_StructMemberSeq & members_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_StructDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_StructDef_Proxy_Broker
+class _TAO_StructDef_Strategized_Proxy_Broker : public virtual _TAO_StructDef_Proxy_Broker
 {
 public: 
   _TAO_StructDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_StructDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_StructDef_Proxy_Impl &select_proxy (
-    ::IR::StructDef *object,
+  virtual _TAO_StructDef_Proxy_Impl &select_proxy (
+    IR_StructDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -8133,7 +8026,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_StructDef_Proxy_Impl
+  _TAO_StructDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -8145,7 +8038,6 @@
   static _TAO_StructDef_Strategized_Proxy_Broker *the_TAO_StructDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -8155,8 +8047,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_StructDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_StructDef_Proxy_Impl,
+class _TAO_StructDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_StructDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_TypedefDef_ThruPOA_Proxy_Impl, 
   public virtual ::POA_IR::_TAO_Container_ThruPOA_Proxy_Impl
@@ -8167,7 +8059,7 @@
   
   virtual ~_TAO_StructDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::StructMemberSeq * members (
+    virtual IR_StructMemberSeq * members   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -8177,7 +8069,7 @@
 
   virtual void members (
       CORBA_Object *_collocated_tao_target_,
-      const IR::StructMemberSeq & members,
+      const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -8191,11 +8083,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export StructDef_tie : public StructDef
+  class StructDef_tie : public StructDef
 {
 public:
   StructDef_tie (T &t);
@@ -8223,10 +8114,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::StructMemberSeq * members (
+    IR_StructMemberSeq * members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8235,7 +8126,7 @@
     ));
 
   void members (
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8243,7 +8134,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -8252,8 +8143,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -8262,10 +8153,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -8274,8 +8165,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -8285,7 +8176,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -8296,11 +8187,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -8309,11 +8200,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8321,12 +8212,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8334,11 +8225,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8346,11 +8237,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8358,11 +8249,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -8372,17 +8263,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8390,11 +8281,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8402,11 +8293,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8414,7 +8305,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -8476,7 +8367,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8492,7 +8383,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8500,7 +8391,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8509,7 +8400,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -8527,7 +8418,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8561,7 +8452,7 @@
 class _TAO_UnionDef_ThruPOA_Proxy_Impl;
 class _TAO_UnionDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export UnionDef : public virtual TypedefDef, public virtual Container
+  class UnionDef : public virtual TypedefDef, public virtual Container
 {
 protected:
   UnionDef (void);
@@ -8604,7 +8495,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::UnionDef *_this (
+    IR_UnionDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -8627,7 +8518,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::IDLType_ptr discriminator_type_def (
+    virtual IR_IDLType_ptr discriminator_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8644,7 +8535,7 @@
     );
 
   virtual void discriminator_type_def (
-      IR::IDLType_ptr discriminator_type_def,
+        IR_IDLType_ptr discriminator_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8660,7 +8551,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::UnionMemberSeq * members (
+    virtual IR_UnionMemberSeq * members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8677,7 +8568,7 @@
     );
 
   virtual void members (
-      const IR::UnionMemberSeq & members,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -8697,7 +8588,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8705,7 +8596,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8713,7 +8604,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8721,7 +8612,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8729,7 +8620,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8737,7 +8628,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8745,7 +8636,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8753,7 +8644,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8761,7 +8652,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8769,7 +8660,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8777,7 +8668,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8785,7 +8676,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8793,7 +8684,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8801,7 +8692,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8809,7 +8700,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8817,7 +8708,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8825,7 +8716,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8833,7 +8724,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8841,7 +8732,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8849,7 +8740,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8857,7 +8748,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8865,7 +8756,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8873,7 +8764,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8881,7 +8772,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8889,7 +8780,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8897,7 +8788,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8905,7 +8796,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8913,7 +8804,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -8921,11 +8812,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -9030,7 +8920,7 @@
   POA_IR::UnionDef *_tao_impl;
   void result (IR::IDLType_ptr    result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_UnionDef_discriminator_type_def_set : public TAO_ServerRequestInfo
@@ -9041,7 +8931,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::UnionDef *tao_impl
     ,
-    IR::IDLType_ptr discriminator_type_def,
+        IR_IDLType_ptr discriminator_type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -9080,7 +8970,7 @@
   
 private:
   POA_IR::UnionDef *_tao_impl;
-  IR::IDLType_ptr discriminator_type_def_;
+      IR_IDLType_ptr discriminator_type_def_;
 };
 
 class TAO_ServerRequestInfo_IR_UnionDef_members_get : public TAO_ServerRequestInfo
@@ -9131,7 +9021,7 @@
   POA_IR::UnionDef *_tao_impl;
   void result (IR::UnionMemberSeq *    result);
  // update the result 
-IR::UnionMemberSeq *  _result;
+      IR_UnionMemberSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_UnionDef_members_set : public TAO_ServerRequestInfo
@@ -9142,7 +9032,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::UnionDef *tao_impl
     ,
-    const IR::UnionMemberSeq & members,
+        const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -9181,27 +9071,26 @@
   
 private:
   POA_IR::UnionDef *_tao_impl;
-  const IR::UnionMemberSeq & members_;
+      const IR_UnionMemberSeq & members_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_UnionDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_UnionDef_Proxy_Broker
+class _TAO_UnionDef_Strategized_Proxy_Broker : public virtual _TAO_UnionDef_Proxy_Broker
 {
 public: 
   _TAO_UnionDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_UnionDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_UnionDef_Proxy_Impl &select_proxy (
-    ::IR::UnionDef *object,
+  virtual _TAO_UnionDef_Proxy_Impl &select_proxy (
+    IR_UnionDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -9219,7 +9108,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_UnionDef_Proxy_Impl
+  _TAO_UnionDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -9231,7 +9120,6 @@
   static _TAO_UnionDef_Strategized_Proxy_Broker *the_TAO_UnionDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -9241,8 +9129,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_UnionDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_UnionDef_Proxy_Impl,
+class _TAO_UnionDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_UnionDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_TypedefDef_ThruPOA_Proxy_Impl, 
   public virtual ::POA_IR::_TAO_Container_ThruPOA_Proxy_Impl
@@ -9261,7 +9149,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::IDLType_ptr discriminator_type_def (
+  virtual IR_IDLType_ptr discriminator_type_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -9271,14 +9159,14 @@
 
   virtual void discriminator_type_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr discriminator_type_def,
+      IR_IDLType_ptr discriminator_type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::UnionMemberSeq * members (
+  virtual IR_UnionMemberSeq * members   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -9288,7 +9176,7 @@
 
   virtual void members (
       CORBA_Object *_collocated_tao_target_,
-      const IR::UnionMemberSeq & members,
+      const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -9302,11 +9190,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export UnionDef_tie : public UnionDef
+  class UnionDef_tie : public UnionDef
 {
 public:
   UnionDef_tie (T &t);
@@ -9334,7 +9221,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr discriminator_type (
@@ -9345,7 +9232,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr discriminator_type_def (
+    IR_IDLType_ptr discriminator_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9354,7 +9241,7 @@
     ));
 
   void discriminator_type_def (
-      IR::IDLType_ptr discriminator_type_def,
+        IR_IDLType_ptr discriminator_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9362,7 +9249,7 @@
       CORBA::SystemException
     ));
 
-  IR::UnionMemberSeq * members (
+    IR_UnionMemberSeq * members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9371,7 +9258,7 @@
     ));
 
   void members (
-      const IR::UnionMemberSeq & members,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9379,7 +9266,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -9388,8 +9275,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -9398,10 +9285,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -9410,8 +9297,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -9421,7 +9308,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -9432,11 +9319,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -9445,11 +9332,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9457,12 +9344,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9470,11 +9357,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9482,11 +9369,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9494,11 +9381,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -9508,17 +9395,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9526,11 +9413,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9538,11 +9425,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9550,7 +9437,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -9612,7 +9499,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9628,7 +9515,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9636,7 +9523,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9645,7 +9532,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -9663,7 +9550,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9697,7 +9584,7 @@
 class _TAO_EnumDef_ThruPOA_Proxy_Impl;
 class _TAO_EnumDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export EnumDef : public virtual TypedefDef
+  class EnumDef : public virtual TypedefDef
 {
 protected:
   EnumDef (void);
@@ -9740,14 +9627,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::EnumDef *_this (
+    IR_EnumDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::EnumMemberSeq * members (
+    virtual IR_EnumMemberSeq * members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9764,7 +9651,7 @@
     );
 
   virtual void members (
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -9784,7 +9671,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9792,7 +9679,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9800,7 +9687,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9808,7 +9695,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9816,7 +9703,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9824,7 +9711,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9832,7 +9719,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9840,7 +9727,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9848,7 +9735,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9856,7 +9743,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9864,7 +9751,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9872,7 +9759,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9880,7 +9767,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -9888,11 +9775,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -9946,7 +9832,7 @@
     POA_IR::EnumDef *_tao_impl;
     void result (IR::EnumMemberSeq *      result);
  // update the result 
-IR::EnumMemberSeq *  _result;
+      IR_EnumMemberSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_EnumDef_members_set : public TAO_ServerRequestInfo
@@ -9957,7 +9843,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::EnumDef *tao_impl
     ,
-    const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -9996,27 +9882,26 @@
   
 private:
   POA_IR::EnumDef *_tao_impl;
-  const IR::EnumMemberSeq & members_;
+      const IR_EnumMemberSeq & members_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_EnumDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_EnumDef_Proxy_Broker
+class _TAO_EnumDef_Strategized_Proxy_Broker : public virtual _TAO_EnumDef_Proxy_Broker
 {
 public: 
   _TAO_EnumDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_EnumDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_EnumDef_Proxy_Impl &select_proxy (
-    ::IR::EnumDef *object,
+  virtual _TAO_EnumDef_Proxy_Impl &select_proxy (
+    IR_EnumDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -10034,7 +9919,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_EnumDef_Proxy_Impl
+  _TAO_EnumDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -10046,7 +9931,6 @@
   static _TAO_EnumDef_Strategized_Proxy_Broker *the_TAO_EnumDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -10056,8 +9940,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_EnumDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_EnumDef_Proxy_Impl,
+class _TAO_EnumDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_EnumDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_TypedefDef_ThruPOA_Proxy_Impl
   
@@ -10067,7 +9951,7 @@
   
   virtual ~_TAO_EnumDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::EnumMemberSeq * members (
+    virtual IR_EnumMemberSeq * members   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -10077,7 +9961,7 @@
 
   virtual void members (
       CORBA_Object *_collocated_tao_target_,
-      const IR::EnumMemberSeq & members,
+      const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -10091,11 +9975,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export EnumDef_tie : public EnumDef
+  class EnumDef_tie : public EnumDef
 {
 public:
   EnumDef_tie (T &t);
@@ -10123,10 +10006,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::EnumMemberSeq * members (
+    IR_EnumMemberSeq * members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10135,7 +10018,7 @@
     ));
 
   void members (
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10194,7 +10077,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10210,7 +10093,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10218,7 +10101,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10227,7 +10110,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -10245,7 +10128,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10279,7 +10162,7 @@
 class _TAO_AliasDef_ThruPOA_Proxy_Impl;
 class _TAO_AliasDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export AliasDef : public virtual TypedefDef
+  class AliasDef : public virtual TypedefDef
 {
 protected:
   AliasDef (void);
@@ -10322,14 +10205,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::AliasDef *_this (
+    IR_AliasDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::IDLType_ptr original_type_def (
+    virtual IR_IDLType_ptr original_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10346,7 +10229,7 @@
     );
 
   virtual void original_type_def (
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10366,7 +10249,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10374,7 +10257,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10382,7 +10265,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10390,7 +10273,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10398,7 +10281,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10406,7 +10289,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10414,7 +10297,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10422,7 +10305,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10430,7 +10313,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10438,7 +10321,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10446,7 +10329,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10454,7 +10337,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10462,7 +10345,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10470,11 +10353,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -10528,7 +10410,7 @@
     POA_IR::AliasDef *_tao_impl;
     void result (IR::IDLType_ptr      result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_AliasDef_original_type_def_set : public TAO_ServerRequestInfo
@@ -10539,7 +10421,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::AliasDef *tao_impl
     ,
-    IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -10578,27 +10460,26 @@
   
 private:
   POA_IR::AliasDef *_tao_impl;
-  IR::IDLType_ptr original_type_def_;
+      IR_IDLType_ptr original_type_def_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_AliasDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_AliasDef_Proxy_Broker
+class _TAO_AliasDef_Strategized_Proxy_Broker : public virtual _TAO_AliasDef_Proxy_Broker
 {
 public: 
   _TAO_AliasDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_AliasDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_AliasDef_Proxy_Impl &select_proxy (
-    ::IR::AliasDef *object,
+  virtual _TAO_AliasDef_Proxy_Impl &select_proxy (
+    IR_AliasDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -10616,7 +10497,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_AliasDef_Proxy_Impl
+  _TAO_AliasDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -10628,7 +10509,6 @@
   static _TAO_AliasDef_Strategized_Proxy_Broker *the_TAO_AliasDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -10638,8 +10518,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_AliasDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_AliasDef_Proxy_Impl,
+class _TAO_AliasDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_AliasDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_TypedefDef_ThruPOA_Proxy_Impl
   
@@ -10649,7 +10529,7 @@
   
   virtual ~_TAO_AliasDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::IDLType_ptr original_type_def (
+    virtual IR_IDLType_ptr original_type_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -10659,7 +10539,7 @@
 
   virtual void original_type_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr original_type_def,
+      IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -10673,11 +10553,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export AliasDef_tie : public AliasDef
+  class AliasDef_tie : public AliasDef
 {
 public:
   AliasDef_tie (T &t);
@@ -10705,10 +10584,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::IDLType_ptr original_type_def (
+    IR_IDLType_ptr original_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10717,7 +10596,7 @@
     ));
 
   void original_type_def (
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10776,7 +10655,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10792,7 +10671,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10800,7 +10679,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10809,7 +10688,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -10827,7 +10706,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -10861,7 +10740,7 @@
 class _TAO_NativeDef_ThruPOA_Proxy_Impl;
 class _TAO_NativeDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export NativeDef : public virtual TypedefDef
+  class NativeDef : public virtual TypedefDef
 {
 protected:
   NativeDef (void);
@@ -10904,7 +10783,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::NativeDef *_this (
+    IR_NativeDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -10915,7 +10794,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10923,7 +10802,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10931,7 +10810,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10939,7 +10818,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10947,7 +10826,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10955,7 +10834,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10963,7 +10842,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10971,7 +10850,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10979,7 +10858,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10987,7 +10866,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -10995,7 +10874,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -11003,7 +10882,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -11011,7 +10890,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -11019,11 +10898,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -11033,20 +10911,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_NativeDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_NativeDef_Proxy_Broker
+class _TAO_NativeDef_Strategized_Proxy_Broker : public virtual _TAO_NativeDef_Proxy_Broker
 {
 public: 
   _TAO_NativeDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_NativeDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_NativeDef_Proxy_Impl &select_proxy (
-    ::IR::NativeDef *object,
+  virtual _TAO_NativeDef_Proxy_Impl &select_proxy (
+    IR_NativeDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -11064,7 +10941,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_NativeDef_Proxy_Impl
+  _TAO_NativeDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -11076,7 +10953,6 @@
   static _TAO_NativeDef_Strategized_Proxy_Broker *the_TAO_NativeDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -11086,8 +10962,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_NativeDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_NativeDef_Proxy_Impl,
+class _TAO_NativeDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_NativeDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_TypedefDef_ThruPOA_Proxy_Impl
   
@@ -11104,11 +10980,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export NativeDef_tie : public NativeDef
+  class NativeDef_tie : public NativeDef
 {
 public:
   NativeDef_tie (T &t);
@@ -11136,7 +11011,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   char * id (
@@ -11190,7 +11065,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -11206,7 +11081,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -11214,7 +11089,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -11223,7 +11098,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -11241,7 +11116,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -11275,7 +11150,7 @@
 class _TAO_PrimitiveDef_ThruPOA_Proxy_Impl;
 class _TAO_PrimitiveDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export PrimitiveDef : public virtual IDLType
+  class PrimitiveDef : public virtual IDLType
 {
 protected:
   PrimitiveDef (void);
@@ -11318,14 +11193,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::PrimitiveDef *_this (
+    IR_PrimitiveDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::PrimitiveKind kind (
+    virtual IR_PrimitiveKind kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -11345,7 +11220,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -11353,7 +11228,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -11361,11 +11236,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -11419,27 +11293,26 @@
     POA_IR::PrimitiveDef *_tao_impl;
     void result (IR::PrimitiveKind      result);
  // update the result 
-IR::PrimitiveKind  _result;
+      IR_PrimitiveKind  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_PrimitiveDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_PrimitiveDef_Proxy_Broker
+class _TAO_PrimitiveDef_Strategized_Proxy_Broker : public virtual _TAO_PrimitiveDef_Proxy_Broker
 {
 public: 
   _TAO_PrimitiveDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_PrimitiveDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_PrimitiveDef_Proxy_Impl &select_proxy (
-    ::IR::PrimitiveDef *object,
+  virtual _TAO_PrimitiveDef_Proxy_Impl &select_proxy (
+    IR_PrimitiveDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -11457,7 +11330,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_PrimitiveDef_Proxy_Impl
+  _TAO_PrimitiveDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -11469,7 +11342,6 @@
   static _TAO_PrimitiveDef_Strategized_Proxy_Broker *the_TAO_PrimitiveDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -11479,8 +11351,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_PrimitiveDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_PrimitiveDef_Proxy_Impl,
+class _TAO_PrimitiveDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_PrimitiveDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_IDLType_ThruPOA_Proxy_Impl
   
@@ -11490,7 +11362,7 @@
   
   virtual ~_TAO_PrimitiveDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::PrimitiveKind kind (
+    virtual IR_PrimitiveKind kind   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -11505,11 +11377,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export PrimitiveDef_tie : public PrimitiveDef
+  class PrimitiveDef_tie : public PrimitiveDef
 {
 public:
   PrimitiveDef_tie (T &t);
@@ -11537,10 +11408,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::PrimitiveKind kind (
+    IR_PrimitiveKind kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -11556,7 +11427,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -11590,7 +11461,7 @@
 class _TAO_StringDef_ThruPOA_Proxy_Impl;
 class _TAO_StringDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export StringDef : public virtual IDLType
+  class StringDef : public virtual IDLType
 {
 protected:
   StringDef (void);
@@ -11633,7 +11504,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::StringDef *_this (
+    IR_StringDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -11677,7 +11548,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -11685,7 +11556,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -11693,11 +11564,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -11808,20 +11678,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_StringDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_StringDef_Proxy_Broker
+class _TAO_StringDef_Strategized_Proxy_Broker : public virtual _TAO_StringDef_Proxy_Broker
 {
 public: 
   _TAO_StringDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_StringDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_StringDef_Proxy_Impl &select_proxy (
-    ::IR::StringDef *object,
+  virtual _TAO_StringDef_Proxy_Impl &select_proxy (
+    IR_StringDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -11839,7 +11708,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_StringDef_Proxy_Impl
+  _TAO_StringDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -11851,7 +11720,6 @@
   static _TAO_StringDef_Strategized_Proxy_Broker *the_TAO_StringDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -11861,8 +11729,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_StringDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_StringDef_Proxy_Impl,
+class _TAO_StringDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_StringDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_IDLType_ThruPOA_Proxy_Impl
   
@@ -11896,11 +11764,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export StringDef_tie : public StringDef
+  class StringDef_tie : public StringDef
 {
 public:
   StringDef_tie (T &t);
@@ -11928,7 +11795,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::ULong bound (
@@ -11956,7 +11823,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -11990,7 +11857,7 @@
 class _TAO_WstringDef_ThruPOA_Proxy_Impl;
 class _TAO_WstringDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export WstringDef : public virtual IDLType
+  class WstringDef : public virtual IDLType
 {
 protected:
   WstringDef (void);
@@ -12033,7 +11900,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::WstringDef *_this (
+    IR_WstringDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -12077,7 +11944,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -12085,7 +11952,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -12093,11 +11960,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -12208,20 +12074,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_WstringDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_WstringDef_Proxy_Broker
+class _TAO_WstringDef_Strategized_Proxy_Broker : public virtual _TAO_WstringDef_Proxy_Broker
 {
 public: 
   _TAO_WstringDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_WstringDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_WstringDef_Proxy_Impl &select_proxy (
-    ::IR::WstringDef *object,
+  virtual _TAO_WstringDef_Proxy_Impl &select_proxy (
+    IR_WstringDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -12239,7 +12104,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_WstringDef_Proxy_Impl
+  _TAO_WstringDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -12251,7 +12116,6 @@
   static _TAO_WstringDef_Strategized_Proxy_Broker *the_TAO_WstringDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -12261,8 +12125,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_WstringDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_WstringDef_Proxy_Impl,
+class _TAO_WstringDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_WstringDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_IDLType_ThruPOA_Proxy_Impl
   
@@ -12296,11 +12160,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export WstringDef_tie : public WstringDef
+  class WstringDef_tie : public WstringDef
 {
 public:
   WstringDef_tie (T &t);
@@ -12328,7 +12191,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::ULong bound (
@@ -12356,7 +12219,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -12390,7 +12253,7 @@
 class _TAO_FixedDef_ThruPOA_Proxy_Impl;
 class _TAO_FixedDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export FixedDef : public virtual IDLType
+  class FixedDef : public virtual IDLType
 {
 protected:
   FixedDef (void);
@@ -12433,7 +12296,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::FixedDef *_this (
+    IR_FixedDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -12510,7 +12373,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -12518,7 +12381,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -12526,11 +12389,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -12742,20 +12604,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_FixedDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_FixedDef_Proxy_Broker
+class _TAO_FixedDef_Strategized_Proxy_Broker : public virtual _TAO_FixedDef_Proxy_Broker
 {
 public: 
   _TAO_FixedDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_FixedDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_FixedDef_Proxy_Impl &select_proxy (
-    ::IR::FixedDef *object,
+  virtual _TAO_FixedDef_Proxy_Impl &select_proxy (
+    IR_FixedDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -12773,7 +12634,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_FixedDef_Proxy_Impl
+  _TAO_FixedDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -12785,7 +12646,6 @@
   static _TAO_FixedDef_Strategized_Proxy_Broker *the_TAO_FixedDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -12795,8 +12655,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_FixedDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_FixedDef_Proxy_Impl,
+class _TAO_FixedDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_FixedDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_IDLType_ThruPOA_Proxy_Impl
   
@@ -12847,11 +12707,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export FixedDef_tie : public FixedDef
+  class FixedDef_tie : public FixedDef
 {
 public:
   FixedDef_tie (T &t);
@@ -12879,7 +12738,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::UShort digits (
@@ -12924,7 +12783,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -12958,7 +12817,7 @@
 class _TAO_SequenceDef_ThruPOA_Proxy_Impl;
 class _TAO_SequenceDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export SequenceDef : public virtual IDLType
+  class SequenceDef : public virtual IDLType
 {
 protected:
   SequenceDef (void);
@@ -13001,7 +12860,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::SequenceDef *_this (
+    IR_SequenceDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -13057,7 +12916,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::IDLType_ptr element_type_def (
+    virtual IR_IDLType_ptr element_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -13074,7 +12933,7 @@
     );
 
   virtual void element_type_def (
-      IR::IDLType_ptr element_type_def,
+        IR_IDLType_ptr element_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -13094,7 +12953,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -13102,7 +12961,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -13110,11 +12969,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -13320,7 +13178,7 @@
   POA_IR::SequenceDef *_tao_impl;
   void result (IR::IDLType_ptr    result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_SequenceDef_element_type_def_set : public TAO_ServerRequestInfo
@@ -13331,7 +13189,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::SequenceDef *tao_impl
     ,
-    IR::IDLType_ptr element_type_def,
+        IR_IDLType_ptr element_type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -13370,27 +13228,26 @@
   
 private:
   POA_IR::SequenceDef *_tao_impl;
-  IR::IDLType_ptr element_type_def_;
+      IR_IDLType_ptr element_type_def_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_SequenceDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_SequenceDef_Proxy_Broker
+class _TAO_SequenceDef_Strategized_Proxy_Broker : public virtual _TAO_SequenceDef_Proxy_Broker
 {
 public: 
   _TAO_SequenceDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_SequenceDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_SequenceDef_Proxy_Impl &select_proxy (
-    ::IR::SequenceDef *object,
+  virtual _TAO_SequenceDef_Proxy_Impl &select_proxy (
+    IR_SequenceDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -13408,7 +13265,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_SequenceDef_Proxy_Impl
+  _TAO_SequenceDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -13420,7 +13277,6 @@
   static _TAO_SequenceDef_Strategized_Proxy_Broker *the_TAO_SequenceDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -13430,8 +13286,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_SequenceDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_SequenceDef_Proxy_Impl,
+class _TAO_SequenceDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_SequenceDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_IDLType_ThruPOA_Proxy_Impl
   
@@ -13466,7 +13322,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::IDLType_ptr element_type_def (
+  virtual IR_IDLType_ptr element_type_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -13476,7 +13332,7 @@
 
   virtual void element_type_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr element_type_def,
+      IR_IDLType_ptr element_type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -13490,11 +13346,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export SequenceDef_tie : public SequenceDef
+  class SequenceDef_tie : public SequenceDef
 {
 public:
   SequenceDef_tie (T &t);
@@ -13522,7 +13377,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::ULong bound (
@@ -13550,7 +13405,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr element_type_def (
+    IR_IDLType_ptr element_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -13559,7 +13414,7 @@
     ));
 
   void element_type_def (
-      IR::IDLType_ptr element_type_def,
+        IR_IDLType_ptr element_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -13575,7 +13430,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -13609,7 +13464,7 @@
 class _TAO_ArrayDef_ThruPOA_Proxy_Impl;
 class _TAO_ArrayDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ArrayDef : public virtual IDLType
+  class ArrayDef : public virtual IDLType
 {
 protected:
   ArrayDef (void);
@@ -13652,7 +13507,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::ArrayDef *_this (
+    IR_ArrayDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -13708,7 +13563,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::IDLType_ptr element_type_def (
+    virtual IR_IDLType_ptr element_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -13725,7 +13580,7 @@
     );
 
   virtual void element_type_def (
-      IR::IDLType_ptr element_type_def,
+        IR_IDLType_ptr element_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -13745,7 +13600,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -13753,7 +13608,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -13761,11 +13616,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -13971,7 +13825,7 @@
   POA_IR::ArrayDef *_tao_impl;
   void result (IR::IDLType_ptr    result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ArrayDef_element_type_def_set : public TAO_ServerRequestInfo
@@ -13982,7 +13836,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ArrayDef *tao_impl
     ,
-    IR::IDLType_ptr element_type_def,
+        IR_IDLType_ptr element_type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -14021,27 +13875,26 @@
   
 private:
   POA_IR::ArrayDef *_tao_impl;
-  IR::IDLType_ptr element_type_def_;
+      IR_IDLType_ptr element_type_def_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ArrayDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ArrayDef_Proxy_Broker
+class _TAO_ArrayDef_Strategized_Proxy_Broker : public virtual _TAO_ArrayDef_Proxy_Broker
 {
 public: 
   _TAO_ArrayDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ArrayDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ArrayDef_Proxy_Impl &select_proxy (
-    ::IR::ArrayDef *object,
+  virtual _TAO_ArrayDef_Proxy_Impl &select_proxy (
+    IR_ArrayDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -14059,7 +13912,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ArrayDef_Proxy_Impl
+  _TAO_ArrayDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -14071,7 +13924,6 @@
   static _TAO_ArrayDef_Strategized_Proxy_Broker *the_TAO_ArrayDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -14081,8 +13933,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ArrayDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ArrayDef_Proxy_Impl,
+class _TAO_ArrayDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ArrayDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_IDLType_ThruPOA_Proxy_Impl
   
@@ -14117,7 +13969,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::IDLType_ptr element_type_def (
+  virtual IR_IDLType_ptr element_type_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -14127,7 +13979,7 @@
 
   virtual void element_type_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr element_type_def,
+      IR_IDLType_ptr element_type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -14141,11 +13993,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ArrayDef_tie : public ArrayDef
+  class ArrayDef_tie : public ArrayDef
 {
 public:
   ArrayDef_tie (T &t);
@@ -14173,7 +14024,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::ULong length (
@@ -14201,7 +14052,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr element_type_def (
+    IR_IDLType_ptr element_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14210,7 +14061,7 @@
     ));
 
   void element_type_def (
-      IR::IDLType_ptr element_type_def,
+        IR_IDLType_ptr element_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14226,7 +14077,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14260,7 +14111,7 @@
 class _TAO_ExceptionDef_ThruPOA_Proxy_Impl;
 class _TAO_ExceptionDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ExceptionDef : public virtual Contained, public virtual Container
+  class ExceptionDef : public virtual Contained, public virtual Container
 {
 protected:
   ExceptionDef (void);
@@ -14303,7 +14154,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::ExceptionDef *_this (
+    IR_ExceptionDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -14326,7 +14177,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::StructMemberSeq * members (
+    virtual IR_StructMemberSeq * members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14343,7 +14194,7 @@
     );
 
   virtual void members (
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14363,7 +14214,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14371,7 +14222,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14379,7 +14230,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14387,7 +14238,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14395,7 +14246,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14403,7 +14254,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14411,7 +14262,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14419,7 +14270,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14427,7 +14278,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14435,7 +14286,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14443,7 +14294,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14451,7 +14302,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14459,7 +14310,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14467,7 +14318,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14475,7 +14326,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14483,7 +14334,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14491,7 +14342,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14499,7 +14350,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14507,7 +14358,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14515,7 +14366,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14523,7 +14374,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14531,7 +14382,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14539,7 +14390,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14547,7 +14398,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14555,7 +14406,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14563,7 +14414,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14571,7 +14422,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -14579,11 +14430,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -14688,7 +14538,7 @@
   POA_IR::ExceptionDef *_tao_impl;
   void result (IR::StructMemberSeq *    result);
  // update the result 
-IR::StructMemberSeq *  _result;
+      IR_StructMemberSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ExceptionDef_members_set : public TAO_ServerRequestInfo
@@ -14699,7 +14549,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ExceptionDef *tao_impl
     ,
-    const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -14738,27 +14588,26 @@
   
 private:
   POA_IR::ExceptionDef *_tao_impl;
-  const IR::StructMemberSeq & members_;
+      const IR_StructMemberSeq & members_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ExceptionDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ExceptionDef_Proxy_Broker
+class _TAO_ExceptionDef_Strategized_Proxy_Broker : public virtual _TAO_ExceptionDef_Proxy_Broker
 {
 public: 
   _TAO_ExceptionDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ExceptionDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ExceptionDef_Proxy_Impl &select_proxy (
-    ::IR::ExceptionDef *object,
+  virtual _TAO_ExceptionDef_Proxy_Impl &select_proxy (
+    IR_ExceptionDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -14776,7 +14625,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ExceptionDef_Proxy_Impl
+  _TAO_ExceptionDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -14788,7 +14637,6 @@
   static _TAO_ExceptionDef_Strategized_Proxy_Broker *the_TAO_ExceptionDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -14798,8 +14646,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ExceptionDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ExceptionDef_Proxy_Impl,
+class _TAO_ExceptionDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ExceptionDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl, 
   public virtual ::POA_IR::_TAO_Container_ThruPOA_Proxy_Impl
@@ -14818,7 +14666,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::StructMemberSeq * members (
+  virtual IR_StructMemberSeq * members   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -14828,7 +14676,7 @@
 
   virtual void members (
       CORBA_Object *_collocated_tao_target_,
-      const IR::StructMemberSeq & members,
+      const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -14842,11 +14690,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ExceptionDef_tie : public ExceptionDef
+  class ExceptionDef_tie : public ExceptionDef
 {
 public:
   ExceptionDef_tie (T &t);
@@ -14874,7 +14721,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr type (
@@ -14885,7 +14732,7 @@
       CORBA::SystemException
     ));
 
-  IR::StructMemberSeq * members (
+    IR_StructMemberSeq * members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14894,7 +14741,7 @@
     ));
 
   void members (
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14953,7 +14800,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14969,7 +14816,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14977,7 +14824,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -14986,7 +14833,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -14996,7 +14843,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -15005,8 +14852,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -15015,10 +14862,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -15027,8 +14874,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -15038,7 +14885,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -15049,11 +14896,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -15062,11 +14909,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15074,12 +14921,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15087,11 +14934,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15099,11 +14946,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15111,11 +14958,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -15125,17 +14972,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15143,11 +14990,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15155,11 +15002,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15167,7 +15014,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -15178,7 +15025,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15212,7 +15059,7 @@
 class _TAO_AttributeDef_ThruPOA_Proxy_Impl;
 class _TAO_AttributeDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export AttributeDef : public virtual Contained
+  class AttributeDef : public virtual Contained
 {
 protected:
   AttributeDef (void);
@@ -15255,7 +15102,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::AttributeDef *_this (
+    IR_AttributeDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -15278,7 +15125,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::IDLType_ptr type_def (
+    virtual IR_IDLType_ptr type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15295,7 +15142,7 @@
     );
 
   virtual void type_def (
-      IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15311,7 +15158,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::AttributeMode mode (
+    virtual IR_AttributeMode mode (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15328,7 +15175,7 @@
     );
 
   virtual void mode (
-      IR::AttributeMode mode,
+        IR_AttributeMode mode,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15348,7 +15195,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15356,7 +15203,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15364,7 +15211,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15372,7 +15219,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15380,7 +15227,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15388,7 +15235,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15396,7 +15243,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15404,7 +15251,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15412,7 +15259,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15420,7 +15267,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15428,7 +15275,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15436,7 +15283,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -15444,11 +15291,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -15553,7 +15399,7 @@
   POA_IR::AttributeDef *_tao_impl;
   void result (IR::IDLType_ptr    result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_AttributeDef_type_def_set : public TAO_ServerRequestInfo
@@ -15564,7 +15410,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::AttributeDef *tao_impl
     ,
-    IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -15603,7 +15449,7 @@
   
 private:
   POA_IR::AttributeDef *_tao_impl;
-  IR::IDLType_ptr type_def_;
+      IR_IDLType_ptr type_def_;
 };
 
 class TAO_ServerRequestInfo_IR_AttributeDef_mode_get : public TAO_ServerRequestInfo
@@ -15654,7 +15500,7 @@
   POA_IR::AttributeDef *_tao_impl;
   void result (IR::AttributeMode    result);
  // update the result 
-IR::AttributeMode  _result;
+      IR_AttributeMode  _result;
 };
 
 class TAO_ServerRequestInfo_IR_AttributeDef_mode_set : public TAO_ServerRequestInfo
@@ -15665,7 +15511,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::AttributeDef *tao_impl
     ,
-    IR::AttributeMode & mode,
+        IR_AttributeMode & mode,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -15704,27 +15550,26 @@
   
 private:
   POA_IR::AttributeDef *_tao_impl;
-  const IR::AttributeMode & mode_;
+      const IR_AttributeMode & mode_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_AttributeDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_AttributeDef_Proxy_Broker
+class _TAO_AttributeDef_Strategized_Proxy_Broker : public virtual _TAO_AttributeDef_Proxy_Broker
 {
 public: 
   _TAO_AttributeDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_AttributeDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_AttributeDef_Proxy_Impl &select_proxy (
-    ::IR::AttributeDef *object,
+  virtual _TAO_AttributeDef_Proxy_Impl &select_proxy (
+    IR_AttributeDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -15742,7 +15587,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_AttributeDef_Proxy_Impl
+  _TAO_AttributeDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -15754,7 +15599,6 @@
   static _TAO_AttributeDef_Strategized_Proxy_Broker *the_TAO_AttributeDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -15764,8 +15608,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_AttributeDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_AttributeDef_Proxy_Impl,
+class _TAO_AttributeDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_AttributeDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
   
@@ -15783,7 +15627,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::IDLType_ptr type_def (
+  virtual IR_IDLType_ptr type_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -15793,14 +15637,14 @@
 
   virtual void type_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr type_def,
+      IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::AttributeMode mode (
+  virtual IR_AttributeMode mode   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -15810,7 +15654,7 @@
 
   virtual void mode (
       CORBA_Object *_collocated_tao_target_,
-      IR::AttributeMode mode,
+      IR_AttributeMode mode,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -15824,11 +15668,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export AttributeDef_tie : public AttributeDef
+  class AttributeDef_tie : public AttributeDef
 {
 public:
   AttributeDef_tie (T &t);
@@ -15856,7 +15699,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr type (
@@ -15867,7 +15710,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr type_def (
+    IR_IDLType_ptr type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15876,7 +15719,7 @@
     ));
 
   void type_def (
-      IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15884,7 +15727,7 @@
       CORBA::SystemException
     ));
 
-  IR::AttributeMode mode (
+    IR_AttributeMode mode (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15893,7 +15736,7 @@
     ));
 
   void mode (
-      IR::AttributeMode mode,
+        IR_AttributeMode mode,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15952,7 +15795,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15968,7 +15811,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15976,7 +15819,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -15985,7 +15828,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -15995,7 +15838,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16029,7 +15872,7 @@
 class _TAO_OperationDef_ThruPOA_Proxy_Impl;
 class _TAO_OperationDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export OperationDef : public virtual Contained
+  class OperationDef : public virtual Contained
 {
 protected:
   OperationDef (void);
@@ -16072,7 +15915,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::OperationDef *_this (
+    IR_OperationDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -16095,7 +15938,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::IDLType_ptr result_def (
+    virtual IR_IDLType_ptr result_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16112,7 +15955,7 @@
     );
 
   virtual void result_def (
-      IR::IDLType_ptr result_def,
+        IR_IDLType_ptr result_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16128,7 +15971,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ParDescriptionSeq * params (
+    virtual IR_ParDescriptionSeq * params (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16145,7 +15988,7 @@
     );
 
   virtual void params (
-      const IR::ParDescriptionSeq & params,
+        const IR_ParDescriptionSeq & params,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16161,7 +16004,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::OperationMode mode (
+    virtual IR_OperationMode mode (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16178,7 +16021,7 @@
     );
 
   virtual void mode (
-      IR::OperationMode mode,
+        IR_OperationMode mode,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16194,7 +16037,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ContextIdSeq * contexts (
+    virtual IR_ContextIdSeq * contexts (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16211,7 +16054,7 @@
     );
 
   virtual void contexts (
-      const IR::ContextIdSeq & contexts,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16227,7 +16070,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ExceptionDefSeq * exceptions (
+    virtual IR_ExceptionDefSeq * exceptions (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16244,7 +16087,7 @@
     );
 
   virtual void exceptions (
-      const IR::ExceptionDefSeq & exceptions,
+        const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -16264,7 +16107,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16272,7 +16115,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16280,7 +16123,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16288,7 +16131,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16296,7 +16139,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16304,7 +16147,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16312,7 +16155,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16320,7 +16163,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16328,7 +16171,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16336,7 +16179,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16344,7 +16187,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16352,7 +16195,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -16360,11 +16203,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -16469,7 +16311,7 @@
   POA_IR::OperationDef *_tao_impl;
   void result (IR::IDLType_ptr    result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_result_def_set : public TAO_ServerRequestInfo
@@ -16480,7 +16322,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::OperationDef *tao_impl
     ,
-    IR::IDLType_ptr result_def,
+        IR_IDLType_ptr result_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -16519,7 +16361,7 @@
   
 private:
   POA_IR::OperationDef *_tao_impl;
-  IR::IDLType_ptr result_def_;
+      IR_IDLType_ptr result_def_;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_params_get : public TAO_ServerRequestInfo
@@ -16570,7 +16412,7 @@
   POA_IR::OperationDef *_tao_impl;
   void result (IR::ParDescriptionSeq *    result);
  // update the result 
-IR::ParDescriptionSeq *  _result;
+      IR_ParDescriptionSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_params_set : public TAO_ServerRequestInfo
@@ -16581,7 +16423,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::OperationDef *tao_impl
     ,
-    const IR::ParDescriptionSeq & params,
+        const IR_ParDescriptionSeq & params,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -16620,7 +16462,7 @@
   
 private:
   POA_IR::OperationDef *_tao_impl;
-  const IR::ParDescriptionSeq & params_;
+      const IR_ParDescriptionSeq & params_;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_mode_get : public TAO_ServerRequestInfo
@@ -16671,7 +16513,7 @@
   POA_IR::OperationDef *_tao_impl;
   void result (IR::OperationMode    result);
  // update the result 
-IR::OperationMode  _result;
+      IR_OperationMode  _result;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_mode_set : public TAO_ServerRequestInfo
@@ -16682,7 +16524,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::OperationDef *tao_impl
     ,
-    IR::OperationMode & mode,
+        IR_OperationMode & mode,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -16721,7 +16563,7 @@
   
 private:
   POA_IR::OperationDef *_tao_impl;
-  const IR::OperationMode & mode_;
+      const IR_OperationMode & mode_;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_contexts_get : public TAO_ServerRequestInfo
@@ -16772,7 +16614,7 @@
   POA_IR::OperationDef *_tao_impl;
   void result (IR::ContextIdSeq *    result);
  // update the result 
-IR::ContextIdSeq *  _result;
+      IR_ContextIdSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_contexts_set : public TAO_ServerRequestInfo
@@ -16783,7 +16625,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::OperationDef *tao_impl
     ,
-    const IR::ContextIdSeq & contexts,
+        const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -16822,7 +16664,7 @@
   
 private:
   POA_IR::OperationDef *_tao_impl;
-  const IR::ContextIdSeq & contexts_;
+      const IR_ContextIdSeq & contexts_;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_exceptions_get : public TAO_ServerRequestInfo
@@ -16873,7 +16715,7 @@
   POA_IR::OperationDef *_tao_impl;
   void result (IR::ExceptionDefSeq *    result);
  // update the result 
-IR::ExceptionDefSeq *  _result;
+      IR_ExceptionDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_OperationDef_exceptions_set : public TAO_ServerRequestInfo
@@ -16884,7 +16726,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::OperationDef *tao_impl
     ,
-    const IR::ExceptionDefSeq & exceptions,
+        const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -16923,27 +16765,26 @@
   
 private:
   POA_IR::OperationDef *_tao_impl;
-  const IR::ExceptionDefSeq & exceptions_;
+      const IR_ExceptionDefSeq & exceptions_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_OperationDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_OperationDef_Proxy_Broker
+class _TAO_OperationDef_Strategized_Proxy_Broker : public virtual _TAO_OperationDef_Proxy_Broker
 {
 public: 
   _TAO_OperationDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_OperationDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_OperationDef_Proxy_Impl &select_proxy (
-    ::IR::OperationDef *object,
+  virtual _TAO_OperationDef_Proxy_Impl &select_proxy (
+    IR_OperationDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -16961,7 +16802,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_OperationDef_Proxy_Impl
+  _TAO_OperationDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -16973,7 +16814,6 @@
   static _TAO_OperationDef_Strategized_Proxy_Broker *the_TAO_OperationDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -16983,8 +16823,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_OperationDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_OperationDef_Proxy_Impl,
+class _TAO_OperationDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_OperationDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
   
@@ -17002,7 +16842,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::IDLType_ptr result_def (
+  virtual IR_IDLType_ptr result_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -17012,14 +16852,14 @@
 
   virtual void result_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr result_def,
+      IR_IDLType_ptr result_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ParDescriptionSeq * params (
+  virtual IR_ParDescriptionSeq * params   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -17029,14 +16869,14 @@
 
   virtual void params (
       CORBA_Object *_collocated_tao_target_,
-      const IR::ParDescriptionSeq & params,
+      const IR_ParDescriptionSeq & params,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::OperationMode mode (
+  virtual IR_OperationMode mode   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -17046,14 +16886,14 @@
 
   virtual void mode (
       CORBA_Object *_collocated_tao_target_,
-      IR::OperationMode mode,
+      IR_OperationMode mode,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ContextIdSeq * contexts (
+  virtual IR_ContextIdSeq * contexts   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -17063,14 +16903,14 @@
 
   virtual void contexts (
       CORBA_Object *_collocated_tao_target_,
-      const IR::ContextIdSeq & contexts,
+      const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ExceptionDefSeq * exceptions (
+  virtual IR_ExceptionDefSeq * exceptions   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -17080,7 +16920,7 @@
 
   virtual void exceptions (
       CORBA_Object *_collocated_tao_target_,
-      const IR::ExceptionDefSeq & exceptions,
+      const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -17094,11 +16934,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export OperationDef_tie : public OperationDef
+  class OperationDef_tie : public OperationDef
 {
 public:
   OperationDef_tie (T &t);
@@ -17126,7 +16965,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr result (
@@ -17137,7 +16976,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr result_def (
+    IR_IDLType_ptr result_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17146,7 +16985,7 @@
     ));
 
   void result_def (
-      IR::IDLType_ptr result_def,
+        IR_IDLType_ptr result_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17154,7 +16993,7 @@
       CORBA::SystemException
     ));
 
-  IR::ParDescriptionSeq * params (
+    IR_ParDescriptionSeq * params (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17163,7 +17002,7 @@
     ));
 
   void params (
-      const IR::ParDescriptionSeq & params,
+        const IR_ParDescriptionSeq & params,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17171,7 +17010,7 @@
       CORBA::SystemException
     ));
 
-  IR::OperationMode mode (
+    IR_OperationMode mode (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17180,7 +17019,7 @@
     ));
 
   void mode (
-      IR::OperationMode mode,
+        IR_OperationMode mode,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17188,7 +17027,7 @@
       CORBA::SystemException
     ));
 
-  IR::ContextIdSeq * contexts (
+    IR_ContextIdSeq * contexts (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17197,7 +17036,7 @@
     ));
 
   void contexts (
-      const IR::ContextIdSeq & contexts,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17205,7 +17044,7 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDefSeq * exceptions (
+    IR_ExceptionDefSeq * exceptions (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17214,7 +17053,7 @@
     ));
 
   void exceptions (
-      const IR::ExceptionDefSeq & exceptions,
+        const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17273,7 +17112,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17289,7 +17128,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17297,7 +17136,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17306,7 +17145,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -17316,7 +17155,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17350,7 +17189,7 @@
 class _TAO_InterfaceDef_ThruPOA_Proxy_Impl;
 class _TAO_InterfaceDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export InterfaceDef : public virtual Container, public virtual Contained, public virtual IDLType
+  class InterfaceDef : public virtual Container, public virtual Contained, public virtual IDLType
 {
 protected:
   InterfaceDef (void);
@@ -17393,14 +17232,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::InterfaceDef *_this (
+    IR_InterfaceDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::InterfaceDefSeq * base_interfaces (
+    virtual IR_InterfaceDefSeq * base_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17417,7 +17256,7 @@
     );
 
   virtual void base_interfaces (
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17516,14 +17355,14 @@
         TAO_default_environment ()
     );
 
-  virtual IR::AttributeDef_ptr create_attribute (
+    virtual IR_AttributeDef_ptr create_attribute (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
-      IR::AttributeMode mode,
-      const IR::ExceptionDefSeq & get_exceptions,
-      const IR::ExceptionDefSeq & put_exceptions,
+        IR_IDLType_ptr type,
+        IR_AttributeMode mode,
+        const IR_ExceptionDefSeq & get_exceptions,
+        const IR_ExceptionDefSeq & put_exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17539,15 +17378,15 @@
         TAO_default_environment ()
     );
 
-  virtual IR::OperationDef_ptr create_operation (
+    virtual IR_OperationDef_ptr create_operation (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr result,
-      IR::OperationMode mode,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
-      const IR::ContextIdSeq & contexts,
+        IR_IDLType_ptr result,
+        IR_OperationMode mode,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -17567,7 +17406,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17575,7 +17414,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17583,7 +17422,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17591,7 +17430,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17599,7 +17438,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17607,7 +17446,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17615,7 +17454,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17623,7 +17462,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17631,7 +17470,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17639,7 +17478,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17647,7 +17486,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17655,7 +17494,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17663,7 +17502,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17671,7 +17510,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17679,7 +17518,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17687,7 +17526,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17695,7 +17534,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17703,7 +17542,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17711,7 +17550,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17719,7 +17558,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17727,7 +17566,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17735,7 +17574,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17743,7 +17582,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17751,7 +17590,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17759,7 +17598,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17767,7 +17606,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17775,7 +17614,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17783,7 +17622,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -17791,11 +17630,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -17849,7 +17687,7 @@
     POA_IR::InterfaceDef *_tao_impl;
     void result (IR::InterfaceDefSeq *      result);
  // update the result 
-IR::InterfaceDefSeq *  _result;
+      IR_InterfaceDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_InterfaceDef_base_interfaces_set : public TAO_ServerRequestInfo
@@ -17860,7 +17698,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::InterfaceDef *tao_impl
     ,
-    const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -17899,7 +17737,7 @@
   
 private:
   POA_IR::InterfaceDef *_tao_impl;
-  const IR::InterfaceDefSeq & base_interfaces_;
+      const IR_InterfaceDefSeq & base_interfaces_;
 };
 
 class TAO_ServerRequestInfo_IR_InterfaceDef_is_abstract_get : public TAO_ServerRequestInfo
@@ -18168,10 +18006,10 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode & mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+        IR_IDLType_ptr type,
+        IR_AttributeMode & mode,
+        const IR_ExceptionDefSeq & get_exceptions,
+        const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -18213,13 +18051,13 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr type_;
-const IR::AttributeMode & mode_;
-const IR::ExceptionDefSeq & get_exceptions_;
-const IR::ExceptionDefSeq & put_exceptions_;
+      IR_IDLType_ptr type_;
+      const IR_AttributeMode & mode_;
+      const IR_ExceptionDefSeq & get_exceptions_;
+      const IR_ExceptionDefSeq & put_exceptions_;
 void result (IR::AttributeDef_ptr    result);
  // update the result 
-IR::AttributeDef_ptr  _result;
+      IR_AttributeDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_InterfaceDef_create_operation : public TAO_ServerRequestInfo
@@ -18233,11 +18071,11 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode & mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+        IR_IDLType_ptr result,
+        IR_OperationMode & mode,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
+        const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -18279,34 +18117,33 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr result_;
-const IR::OperationMode & mode_;
-const IR::ParDescriptionSeq & params_;
-const IR::ExceptionDefSeq & exceptions_;
-const IR::ContextIdSeq & contexts_;
+      IR_IDLType_ptr result_;
+      const IR_OperationMode & mode_;
+      const IR_ParDescriptionSeq & params_;
+      const IR_ExceptionDefSeq & exceptions_;
+      const IR_ContextIdSeq & contexts_;
 void result (IR::OperationDef_ptr    result);
  // update the result 
-IR::OperationDef_ptr  _result;
+      IR_OperationDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_InterfaceDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_InterfaceDef_Proxy_Broker
+class _TAO_InterfaceDef_Strategized_Proxy_Broker : public virtual _TAO_InterfaceDef_Proxy_Broker
 {
 public: 
   _TAO_InterfaceDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_InterfaceDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_InterfaceDef_Proxy_Impl &select_proxy (
-    ::IR::InterfaceDef *object,
+  virtual _TAO_InterfaceDef_Proxy_Impl &select_proxy (
+    IR_InterfaceDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -18324,7 +18161,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_InterfaceDef_Proxy_Impl
+  _TAO_InterfaceDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -18336,7 +18173,6 @@
   static _TAO_InterfaceDef_Strategized_Proxy_Broker *the_TAO_InterfaceDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -18346,8 +18182,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_InterfaceDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_InterfaceDef_Proxy_Impl,
+class _TAO_InterfaceDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_InterfaceDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Container_ThruPOA_Proxy_Impl, 
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl, 
@@ -18359,7 +18195,7 @@
   
   virtual ~_TAO_InterfaceDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::InterfaceDefSeq * base_interfaces (
+    virtual IR_InterfaceDefSeq * base_interfaces   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -18369,7 +18205,7 @@
 
   virtual void base_interfaces (
       CORBA_Object *_collocated_tao_target_,
-      const IR::InterfaceDefSeq & base_interfaces,
+      const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -18419,31 +18255,31 @@
       CORBA::SystemException
     ));
 
-  virtual IR::AttributeDef_ptr create_attribute (
+  virtual IR_AttributeDef_ptr create_attribute   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
-      IR::AttributeMode mode,
-      const IR::ExceptionDefSeq & get_exceptions,
-      const IR::ExceptionDefSeq & put_exceptions,
+      IR_IDLType_ptr type,
+      IR_AttributeMode mode,
+      const IR_ExceptionDefSeq & get_exceptions,
+      const IR_ExceptionDefSeq & put_exceptions,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::OperationDef_ptr create_operation (
+  virtual IR_OperationDef_ptr create_operation   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr result,
-      IR::OperationMode mode,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
-      const IR::ContextIdSeq & contexts,
+      IR_IDLType_ptr result,
+      IR_OperationMode mode,
+      const IR_ParDescriptionSeq & params,
+      const IR_ExceptionDefSeq & exceptions,
+      const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -18457,11 +18293,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export InterfaceDef_tie : public InterfaceDef
+  class InterfaceDef_tie : public InterfaceDef
 {
 public:
   InterfaceDef_tie (T &t);
@@ -18489,10 +18324,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::InterfaceDefSeq * base_interfaces (
+    IR_InterfaceDefSeq * base_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18501,7 +18336,7 @@
     ));
 
   void base_interfaces (
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18552,14 +18387,14 @@
       CORBA::SystemException
     ));
 
-  IR::AttributeDef_ptr create_attribute (
+    IR_AttributeDef_ptr create_attribute (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
-      IR::AttributeMode mode,
-      const IR::ExceptionDefSeq & get_exceptions,
-      const IR::ExceptionDefSeq & put_exceptions,
+        IR_IDLType_ptr type,
+        IR_AttributeMode mode,
+        const IR_ExceptionDefSeq & get_exceptions,
+        const IR_ExceptionDefSeq & put_exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18567,15 +18402,15 @@
       CORBA::SystemException
     ));
 
-  IR::OperationDef_ptr create_operation (
+    IR_OperationDef_ptr create_operation (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr result,
-      IR::OperationMode mode,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
-      const IR::ContextIdSeq & contexts,
+        IR_IDLType_ptr result,
+        IR_OperationMode mode,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18583,7 +18418,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -18592,8 +18427,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -18602,10 +18437,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -18614,8 +18449,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -18625,7 +18460,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -18636,11 +18471,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -18649,11 +18484,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18661,12 +18496,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18674,11 +18509,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18686,11 +18521,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18698,11 +18533,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -18712,17 +18547,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18730,11 +18565,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18742,11 +18577,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18754,7 +18589,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -18816,7 +18651,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18832,7 +18667,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18840,7 +18675,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18849,7 +18684,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -18867,7 +18702,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18901,7 +18736,7 @@
 class _TAO_ValueMemberDef_ThruPOA_Proxy_Impl;
 class _TAO_ValueMemberDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ValueMemberDef : public virtual Contained
+  class ValueMemberDef : public virtual Contained
 {
 protected:
   ValueMemberDef (void);
@@ -18944,7 +18779,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::ValueMemberDef *_this (
+    IR_ValueMemberDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -18967,7 +18802,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::IDLType_ptr type_def (
+    virtual IR_IDLType_ptr type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -18984,7 +18819,7 @@
     );
 
   virtual void type_def (
-      IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19037,7 +18872,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19045,7 +18880,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19053,7 +18888,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19061,7 +18896,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19069,7 +18904,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19077,7 +18912,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19085,7 +18920,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19093,7 +18928,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19101,7 +18936,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19109,7 +18944,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19117,7 +18952,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19125,7 +18960,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -19133,11 +18968,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -19242,7 +19076,7 @@
   POA_IR::ValueMemberDef *_tao_impl;
   void result (IR::IDLType_ptr    result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ValueMemberDef_type_def_set : public TAO_ServerRequestInfo
@@ -19253,7 +19087,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ValueMemberDef *tao_impl
     ,
-    IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -19292,7 +19126,7 @@
   
 private:
   POA_IR::ValueMemberDef *_tao_impl;
-  IR::IDLType_ptr type_def_;
+      IR_IDLType_ptr type_def_;
 };
 
 class TAO_ServerRequestInfo_IR_ValueMemberDef_access_get : public TAO_ServerRequestInfo
@@ -19400,20 +19234,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ValueMemberDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ValueMemberDef_Proxy_Broker
+class _TAO_ValueMemberDef_Strategized_Proxy_Broker : public virtual _TAO_ValueMemberDef_Proxy_Broker
 {
 public: 
   _TAO_ValueMemberDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ValueMemberDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ValueMemberDef_Proxy_Impl &select_proxy (
-    ::IR::ValueMemberDef *object,
+  virtual _TAO_ValueMemberDef_Proxy_Impl &select_proxy (
+    IR_ValueMemberDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -19431,7 +19264,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ValueMemberDef_Proxy_Impl
+  _TAO_ValueMemberDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -19443,7 +19276,6 @@
   static _TAO_ValueMemberDef_Strategized_Proxy_Broker *the_TAO_ValueMemberDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -19453,8 +19285,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ValueMemberDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ValueMemberDef_Proxy_Impl,
+class _TAO_ValueMemberDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ValueMemberDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
   
@@ -19472,7 +19304,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::IDLType_ptr type_def (
+  virtual IR_IDLType_ptr type_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -19482,7 +19314,7 @@
 
   virtual void type_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr type_def,
+      IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -19513,11 +19345,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ValueMemberDef_tie : public ValueMemberDef
+  class ValueMemberDef_tie : public ValueMemberDef
 {
 public:
   ValueMemberDef_tie (T &t);
@@ -19545,7 +19376,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr type (
@@ -19556,7 +19387,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr type_def (
+    IR_IDLType_ptr type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19565,7 +19396,7 @@
     ));
 
   void type_def (
-      IR::IDLType_ptr type_def,
+        IR_IDLType_ptr type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19641,7 +19472,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19657,7 +19488,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19665,7 +19496,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19674,7 +19505,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -19684,7 +19515,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19718,7 +19549,7 @@
 class _TAO_ValueDef_ThruPOA_Proxy_Impl;
 class _TAO_ValueDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ValueDef : public virtual Container, public virtual Contained, public virtual IDLType
+  class ValueDef : public virtual Container, public virtual Contained, public virtual IDLType
 {
 protected:
   ValueDef (void);
@@ -19761,14 +19592,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::ValueDef *_this (
+    IR_ValueDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::InterfaceDefSeq * supported_interfaces (
+    virtual IR_InterfaceDefSeq * supported_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19785,7 +19616,7 @@
     );
 
   virtual void supported_interfaces (
-      const IR::InterfaceDefSeq & supported_interfaces,
+        const IR_InterfaceDefSeq & supported_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19801,7 +19632,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::InitializerSeq * initializers (
+    virtual IR_InitializerSeq * initializers (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19818,7 +19649,7 @@
     );
 
   virtual void initializers (
-      const IR::InitializerSeq & initializers,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19834,7 +19665,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ValueDef_ptr base_value (
+    virtual IR_ValueDef_ptr base_value (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19851,7 +19682,7 @@
     );
 
   virtual void base_value (
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19867,7 +19698,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ValueDefSeq * abstract_base_values (
+    virtual IR_ValueDefSeq * abstract_base_values (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -19884,7 +19715,7 @@
     );
 
   virtual void abstract_base_values (
-      const IR::ValueDefSeq & abstract_base_values,
+        const IR_ValueDefSeq & abstract_base_values,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -20016,11 +19847,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ValueMemberDef_ptr create_value_member (
+    virtual IR_ValueMemberDef_ptr create_value_member (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       CORBA::Visibility access,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -20037,14 +19868,14 @@
         TAO_default_environment ()
     );
 
-  virtual IR::AttributeDef_ptr create_attribute (
+    virtual IR_AttributeDef_ptr create_attribute (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
-      IR::AttributeMode mode,
-      const IR::ExceptionDefSeq & get_exceptions,
-      const IR::ExceptionDefSeq & put_exceptions,
+        IR_IDLType_ptr type,
+        IR_AttributeMode mode,
+        const IR_ExceptionDefSeq & get_exceptions,
+        const IR_ExceptionDefSeq & put_exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -20060,15 +19891,15 @@
         TAO_default_environment ()
     );
 
-  virtual IR::OperationDef_ptr create_operation (
+    virtual IR_OperationDef_ptr create_operation (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr result,
-      IR::OperationMode mode,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
-      const IR::ContextIdSeq & contexts,
+        IR_IDLType_ptr result,
+        IR_OperationMode mode,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -20088,7 +19919,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20096,7 +19927,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20104,7 +19935,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20112,7 +19943,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20120,7 +19951,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20128,7 +19959,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20136,7 +19967,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20144,7 +19975,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20152,7 +19983,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20160,7 +19991,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20168,7 +19999,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20176,7 +20007,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20184,7 +20015,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20192,7 +20023,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20200,7 +20031,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20208,7 +20039,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20216,7 +20047,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20224,7 +20055,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20232,7 +20063,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20240,7 +20071,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20248,7 +20079,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20256,7 +20087,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20264,7 +20095,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20272,7 +20103,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20280,7 +20111,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20288,7 +20119,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20296,7 +20127,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20304,7 +20135,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -20312,11 +20143,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -20370,7 +20200,7 @@
     POA_IR::ValueDef *_tao_impl;
     void result (IR::InterfaceDefSeq *      result);
  // update the result 
-IR::InterfaceDefSeq *  _result;
+      IR_InterfaceDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_supported_interfaces_set : public TAO_ServerRequestInfo
@@ -20381,7 +20211,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ValueDef *tao_impl
     ,
-    const IR::InterfaceDefSeq & supported_interfaces,
+        const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -20420,7 +20250,7 @@
   
 private:
   POA_IR::ValueDef *_tao_impl;
-  const IR::InterfaceDefSeq & supported_interfaces_;
+      const IR_InterfaceDefSeq & supported_interfaces_;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_initializers_get : public TAO_ServerRequestInfo
@@ -20471,7 +20301,7 @@
   POA_IR::ValueDef *_tao_impl;
   void result (IR::InitializerSeq *    result);
  // update the result 
-IR::InitializerSeq *  _result;
+      IR_InitializerSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_initializers_set : public TAO_ServerRequestInfo
@@ -20482,7 +20312,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ValueDef *tao_impl
     ,
-    const IR::InitializerSeq & initializers,
+        const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -20521,7 +20351,7 @@
   
 private:
   POA_IR::ValueDef *_tao_impl;
-  const IR::InitializerSeq & initializers_;
+      const IR_InitializerSeq & initializers_;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_base_value_get : public TAO_ServerRequestInfo
@@ -20572,7 +20402,7 @@
   POA_IR::ValueDef *_tao_impl;
   void result (IR::ValueDef_ptr    result);
  // update the result 
-IR::ValueDef_ptr  _result;
+      IR_ValueDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_base_value_set : public TAO_ServerRequestInfo
@@ -20583,7 +20413,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ValueDef *tao_impl
     ,
-    IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -20622,7 +20452,7 @@
   
 private:
   POA_IR::ValueDef *_tao_impl;
-  IR::ValueDef_ptr base_value_;
+      IR_ValueDef_ptr base_value_;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_abstract_base_values_get : public TAO_ServerRequestInfo
@@ -20673,7 +20503,7 @@
   POA_IR::ValueDef *_tao_impl;
   void result (IR::ValueDefSeq *    result);
  // update the result 
-IR::ValueDefSeq *  _result;
+      IR_ValueDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_abstract_base_values_set : public TAO_ServerRequestInfo
@@ -20684,7 +20514,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ValueDef *tao_impl
     ,
-    const IR::ValueDefSeq & abstract_base_values,
+        const IR_ValueDefSeq & abstract_base_values,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -20723,7 +20553,7 @@
   
 private:
   POA_IR::ValueDef *_tao_impl;
-  const IR::ValueDefSeq & abstract_base_values_;
+      const IR_ValueDefSeq & abstract_base_values_;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_is_abstract_get : public TAO_ServerRequestInfo
@@ -21093,7 +20923,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
     const CORBA::Visibility & access,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -21136,11 +20966,11 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr type_;
+      IR_IDLType_ptr type_;
 const CORBA::Visibility & access_;
 void result (IR::ValueMemberDef_ptr    result);
  // update the result 
-IR::ValueMemberDef_ptr  _result;
+      IR_ValueMemberDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_create_attribute : public TAO_ServerRequestInfo
@@ -21154,10 +20984,10 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode & mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+        IR_IDLType_ptr type,
+        IR_AttributeMode & mode,
+        const IR_ExceptionDefSeq & get_exceptions,
+        const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -21199,13 +21029,13 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr type_;
-const IR::AttributeMode & mode_;
-const IR::ExceptionDefSeq & get_exceptions_;
-const IR::ExceptionDefSeq & put_exceptions_;
+      IR_IDLType_ptr type_;
+      const IR_AttributeMode & mode_;
+      const IR_ExceptionDefSeq & get_exceptions_;
+      const IR_ExceptionDefSeq & put_exceptions_;
 void result (IR::AttributeDef_ptr    result);
  // update the result 
-IR::AttributeDef_ptr  _result;
+      IR_AttributeDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ValueDef_create_operation : public TAO_ServerRequestInfo
@@ -21219,11 +21049,11 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode & mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+        IR_IDLType_ptr result,
+        IR_OperationMode & mode,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
+        const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -21265,34 +21095,33 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::IDLType_ptr result_;
-const IR::OperationMode & mode_;
-const IR::ParDescriptionSeq & params_;
-const IR::ExceptionDefSeq & exceptions_;
-const IR::ContextIdSeq & contexts_;
+      IR_IDLType_ptr result_;
+      const IR_OperationMode & mode_;
+      const IR_ParDescriptionSeq & params_;
+      const IR_ExceptionDefSeq & exceptions_;
+      const IR_ContextIdSeq & contexts_;
 void result (IR::OperationDef_ptr    result);
  // update the result 
-IR::OperationDef_ptr  _result;
+      IR_OperationDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ValueDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ValueDef_Proxy_Broker
+class _TAO_ValueDef_Strategized_Proxy_Broker : public virtual _TAO_ValueDef_Proxy_Broker
 {
 public: 
   _TAO_ValueDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ValueDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ValueDef_Proxy_Impl &select_proxy (
-    ::IR::ValueDef *object,
+  virtual _TAO_ValueDef_Proxy_Impl &select_proxy (
+    IR_ValueDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -21310,7 +21139,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ValueDef_Proxy_Impl
+  _TAO_ValueDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -21322,7 +21151,6 @@
   static _TAO_ValueDef_Strategized_Proxy_Broker *the_TAO_ValueDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -21332,8 +21160,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ValueDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ValueDef_Proxy_Impl,
+class _TAO_ValueDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ValueDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Container_ThruPOA_Proxy_Impl, 
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl, 
@@ -21345,7 +21173,7 @@
   
   virtual ~_TAO_ValueDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::InterfaceDefSeq * supported_interfaces (
+    virtual IR_InterfaceDefSeq * supported_interfaces   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -21355,14 +21183,14 @@
 
   virtual void supported_interfaces (
       CORBA_Object *_collocated_tao_target_,
-      const IR::InterfaceDefSeq & supported_interfaces,
+      const IR_InterfaceDefSeq & supported_interfaces,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::InitializerSeq * initializers (
+  virtual IR_InitializerSeq * initializers   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -21372,14 +21200,14 @@
 
   virtual void initializers (
       CORBA_Object *_collocated_tao_target_,
-      const IR::InitializerSeq & initializers,
+      const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ValueDef_ptr base_value (
+  virtual IR_ValueDef_ptr base_value   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -21389,14 +21217,14 @@
 
   virtual void base_value (
       CORBA_Object *_collocated_tao_target_,
-      IR::ValueDef_ptr base_value,
+      IR_ValueDef_ptr base_value,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ValueDefSeq * abstract_base_values (
+  virtual IR_ValueDefSeq * abstract_base_values   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -21406,7 +21234,7 @@
 
   virtual void abstract_base_values (
       CORBA_Object *_collocated_tao_target_,
-      const IR::ValueDefSeq & abstract_base_values,
+      const IR_ValueDefSeq & abstract_base_values,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -21473,12 +21301,12 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ValueMemberDef_ptr create_value_member (
+  virtual IR_ValueMemberDef_ptr create_value_member   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+      IR_IDLType_ptr type,
       CORBA::Visibility access,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -21486,31 +21314,31 @@
       CORBA::SystemException
     ));
 
-  virtual IR::AttributeDef_ptr create_attribute (
+  virtual IR_AttributeDef_ptr create_attribute   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
-      IR::AttributeMode mode,
-      const IR::ExceptionDefSeq & get_exceptions,
-      const IR::ExceptionDefSeq & put_exceptions,
+      IR_IDLType_ptr type,
+      IR_AttributeMode mode,
+      const IR_ExceptionDefSeq & get_exceptions,
+      const IR_ExceptionDefSeq & put_exceptions,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::OperationDef_ptr create_operation (
+  virtual IR_OperationDef_ptr create_operation   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr result,
-      IR::OperationMode mode,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
-      const IR::ContextIdSeq & contexts,
+      IR_IDLType_ptr result,
+      IR_OperationMode mode,
+      const IR_ParDescriptionSeq & params,
+      const IR_ExceptionDefSeq & exceptions,
+      const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -21524,11 +21352,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ValueDef_tie : public ValueDef
+  class ValueDef_tie : public ValueDef
 {
 public:
   ValueDef_tie (T &t);
@@ -21556,10 +21383,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::InterfaceDefSeq * supported_interfaces (
+    IR_InterfaceDefSeq * supported_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21568,7 +21395,7 @@
     ));
 
   void supported_interfaces (
-      const IR::InterfaceDefSeq & supported_interfaces,
+        const IR_InterfaceDefSeq & supported_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21576,7 +21403,7 @@
       CORBA::SystemException
     ));
 
-  IR::InitializerSeq * initializers (
+    IR_InitializerSeq * initializers (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21585,7 +21412,7 @@
     ));
 
   void initializers (
-      const IR::InitializerSeq & initializers,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21593,7 +21420,7 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr base_value (
+    IR_ValueDef_ptr base_value (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21602,7 +21429,7 @@
     ));
 
   void base_value (
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21610,7 +21437,7 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDefSeq * abstract_base_values (
+    IR_ValueDefSeq * abstract_base_values (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21619,7 +21446,7 @@
     ));
 
   void abstract_base_values (
-      const IR::ValueDefSeq & abstract_base_values,
+        const IR_ValueDefSeq & abstract_base_values,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21687,11 +21514,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueMemberDef_ptr create_value_member (
+    IR_ValueMemberDef_ptr create_value_member (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       CORBA::Visibility access,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -21700,14 +21527,14 @@
       CORBA::SystemException
     ));
 
-  IR::AttributeDef_ptr create_attribute (
+    IR_AttributeDef_ptr create_attribute (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
-      IR::AttributeMode mode,
-      const IR::ExceptionDefSeq & get_exceptions,
-      const IR::ExceptionDefSeq & put_exceptions,
+        IR_IDLType_ptr type,
+        IR_AttributeMode mode,
+        const IR_ExceptionDefSeq & get_exceptions,
+        const IR_ExceptionDefSeq & put_exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21715,15 +21542,15 @@
       CORBA::SystemException
     ));
 
-  IR::OperationDef_ptr create_operation (
+    IR_OperationDef_ptr create_operation (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr result,
-      IR::OperationMode mode,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
-      const IR::ContextIdSeq & contexts,
+        IR_IDLType_ptr result,
+        IR_OperationMode mode,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21731,7 +21558,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -21740,8 +21567,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -21750,10 +21577,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -21762,8 +21589,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -21773,7 +21600,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -21784,11 +21611,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -21797,11 +21624,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21809,12 +21636,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21822,11 +21649,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21834,11 +21661,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21846,11 +21673,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -21860,17 +21687,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21878,11 +21705,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21890,11 +21717,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21902,7 +21729,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -21964,7 +21791,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21980,7 +21807,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21988,7 +21815,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -21997,7 +21824,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -22015,7 +21842,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22049,7 +21876,7 @@
 class _TAO_ValueBoxDef_ThruPOA_Proxy_Impl;
 class _TAO_ValueBoxDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ValueBoxDef : public virtual TypedefDef
+  class ValueBoxDef : public virtual TypedefDef
 {
 protected:
   ValueBoxDef (void);
@@ -22092,14 +21919,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::ValueBoxDef *_this (
+    IR_ValueBoxDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::IDLType_ptr original_type_def (
+    virtual IR_IDLType_ptr original_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22116,7 +21943,7 @@
     );
 
   virtual void original_type_def (
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22136,7 +21963,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22144,7 +21971,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22152,7 +21979,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22160,7 +21987,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22168,7 +21995,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22176,7 +22003,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22184,7 +22011,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22192,7 +22019,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22200,7 +22027,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22208,7 +22035,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22216,7 +22043,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22224,7 +22051,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22232,7 +22059,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22240,11 +22067,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -22298,7 +22124,7 @@
     POA_IR::ValueBoxDef *_tao_impl;
     void result (IR::IDLType_ptr      result);
  // update the result 
-IR::IDLType_ptr  _result;
+      IR_IDLType_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ValueBoxDef_original_type_def_set : public TAO_ServerRequestInfo
@@ -22309,7 +22135,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ValueBoxDef *tao_impl
     ,
-    IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -22348,27 +22174,26 @@
   
 private:
   POA_IR::ValueBoxDef *_tao_impl;
-  IR::IDLType_ptr original_type_def_;
+      IR_IDLType_ptr original_type_def_;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ValueBoxDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ValueBoxDef_Proxy_Broker
+class _TAO_ValueBoxDef_Strategized_Proxy_Broker : public virtual _TAO_ValueBoxDef_Proxy_Broker
 {
 public: 
   _TAO_ValueBoxDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ValueBoxDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ValueBoxDef_Proxy_Impl &select_proxy (
-    ::IR::ValueBoxDef *object,
+  virtual _TAO_ValueBoxDef_Proxy_Impl &select_proxy (
+    IR_ValueBoxDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -22386,7 +22211,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ValueBoxDef_Proxy_Impl
+  _TAO_ValueBoxDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -22398,7 +22223,6 @@
   static _TAO_ValueBoxDef_Strategized_Proxy_Broker *the_TAO_ValueBoxDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -22408,8 +22232,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ValueBoxDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ValueBoxDef_Proxy_Impl,
+class _TAO_ValueBoxDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ValueBoxDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_TypedefDef_ThruPOA_Proxy_Impl
   
@@ -22419,7 +22243,7 @@
   
   virtual ~_TAO_ValueBoxDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::IDLType_ptr original_type_def (
+    virtual IR_IDLType_ptr original_type_def   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -22429,7 +22253,7 @@
 
   virtual void original_type_def (
       CORBA_Object *_collocated_tao_target_,
-      IR::IDLType_ptr original_type_def,
+      IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -22443,11 +22267,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ValueBoxDef_tie : public ValueBoxDef
+  class ValueBoxDef_tie : public ValueBoxDef
 {
 public:
   ValueBoxDef_tie (T &t);
@@ -22475,10 +22298,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::IDLType_ptr original_type_def (
+    IR_IDLType_ptr original_type_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22487,7 +22310,7 @@
     ));
 
   void original_type_def (
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22546,7 +22369,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22562,7 +22385,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22570,7 +22393,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22579,7 +22402,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -22597,7 +22420,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22631,7 +22454,7 @@
 class _TAO_ProvidesDef_ThruPOA_Proxy_Impl;
 class _TAO_ProvidesDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ProvidesDef : public virtual Contained
+  class ProvidesDef : public virtual Contained
 {
 protected:
   ProvidesDef (void);
@@ -22674,14 +22497,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::ProvidesDef *_this (
+    IR_ProvidesDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::InterfaceDef_ptr interface_type (
+    virtual IR_InterfaceDef_ptr interface_type (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -22701,7 +22524,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22709,7 +22532,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22717,7 +22540,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22725,7 +22548,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22733,7 +22556,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22741,7 +22564,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22749,7 +22572,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22757,7 +22580,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22765,7 +22588,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22773,7 +22596,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22781,7 +22604,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22789,7 +22612,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -22797,11 +22620,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -22855,27 +22677,26 @@
     POA_IR::ProvidesDef *_tao_impl;
     void result (IR::InterfaceDef_ptr      result);
  // update the result 
-IR::InterfaceDef_ptr  _result;
+      IR_InterfaceDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ProvidesDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ProvidesDef_Proxy_Broker
+class _TAO_ProvidesDef_Strategized_Proxy_Broker : public virtual _TAO_ProvidesDef_Proxy_Broker
 {
 public: 
   _TAO_ProvidesDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ProvidesDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ProvidesDef_Proxy_Impl &select_proxy (
-    ::IR::ProvidesDef *object,
+  virtual _TAO_ProvidesDef_Proxy_Impl &select_proxy (
+    IR_ProvidesDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -22893,7 +22714,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ProvidesDef_Proxy_Impl
+  _TAO_ProvidesDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -22905,7 +22726,6 @@
   static _TAO_ProvidesDef_Strategized_Proxy_Broker *the_TAO_ProvidesDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -22915,8 +22735,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ProvidesDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ProvidesDef_Proxy_Impl,
+class _TAO_ProvidesDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ProvidesDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
   
@@ -22926,7 +22746,7 @@
   
   virtual ~_TAO_ProvidesDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::InterfaceDef_ptr interface_type (
+    virtual IR_InterfaceDef_ptr interface_type   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -22941,11 +22761,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ProvidesDef_tie : public ProvidesDef
+  class ProvidesDef_tie : public ProvidesDef
 {
 public:
   ProvidesDef_tie (T &t);
@@ -22973,10 +22792,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::InterfaceDef_ptr interface_type (
+    IR_InterfaceDef_ptr interface_type (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23035,7 +22854,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23051,7 +22870,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23059,7 +22878,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23068,7 +22887,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -23078,7 +22897,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23112,7 +22931,7 @@
 class _TAO_UsesDef_ThruPOA_Proxy_Impl;
 class _TAO_UsesDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export UsesDef : public virtual Contained
+  class UsesDef : public virtual Contained
 {
 protected:
   UsesDef (void);
@@ -23155,14 +22974,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::UsesDef *_this (
+    IR_UsesDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::InterfaceDef_ptr interface_type (
+    virtual IR_InterfaceDef_ptr interface_type (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23198,7 +23017,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23206,7 +23025,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23214,7 +23033,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23222,7 +23041,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23230,7 +23049,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23238,7 +23057,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23246,7 +23065,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23254,7 +23073,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23262,7 +23081,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23270,7 +23089,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23278,7 +23097,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23286,7 +23105,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23294,11 +23113,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -23352,7 +23170,7 @@
     POA_IR::UsesDef *_tao_impl;
     void result (IR::InterfaceDef_ptr      result);
  // update the result 
-IR::InterfaceDef_ptr  _result;
+      IR_InterfaceDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_UsesDef_is_multiple_get : public TAO_ServerRequestInfo
@@ -23410,20 +23228,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_UsesDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_UsesDef_Proxy_Broker
+class _TAO_UsesDef_Strategized_Proxy_Broker : public virtual _TAO_UsesDef_Proxy_Broker
 {
 public: 
   _TAO_UsesDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_UsesDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_UsesDef_Proxy_Impl &select_proxy (
-    ::IR::UsesDef *object,
+  virtual _TAO_UsesDef_Proxy_Impl &select_proxy (
+    IR_UsesDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -23441,7 +23258,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_UsesDef_Proxy_Impl
+  _TAO_UsesDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -23453,7 +23270,6 @@
   static _TAO_UsesDef_Strategized_Proxy_Broker *the_TAO_UsesDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -23463,8 +23279,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_UsesDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_UsesDef_Proxy_Impl,
+class _TAO_UsesDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_UsesDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
   
@@ -23474,7 +23290,7 @@
   
   virtual ~_TAO_UsesDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::InterfaceDef_ptr interface_type (
+    virtual IR_InterfaceDef_ptr interface_type   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -23497,11 +23313,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export UsesDef_tie : public UsesDef
+  class UsesDef_tie : public UsesDef
 {
 public:
   UsesDef_tie (T &t);
@@ -23529,10 +23344,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::InterfaceDef_ptr interface_type (
+    IR_InterfaceDef_ptr interface_type (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23599,7 +23414,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23615,7 +23430,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23623,7 +23438,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23632,7 +23447,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -23642,7 +23457,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23676,7 +23491,7 @@
 class _TAO_EventDef_ThruPOA_Proxy_Impl;
 class _TAO_EventDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export EventDef : public virtual Contained
+  class EventDef : public virtual Contained
 {
 protected:
   EventDef (void);
@@ -23719,7 +23534,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::EventDef *_this (
+    IR_EventDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -23743,7 +23558,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ValueDef_ptr event (
+    virtual IR_ValueDef_ptr event (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -23763,7 +23578,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23771,7 +23586,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23779,7 +23594,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23787,7 +23602,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23795,7 +23610,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23803,7 +23618,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23811,7 +23626,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23819,7 +23634,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23827,7 +23642,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23835,7 +23650,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23843,7 +23658,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23851,7 +23666,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -23859,11 +23674,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -23970,27 +23784,26 @@
   POA_IR::EventDef *_tao_impl;
   void result (IR::ValueDef_ptr    result);
  // update the result 
-IR::ValueDef_ptr  _result;
+      IR_ValueDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_EventDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_EventDef_Proxy_Broker
+class _TAO_EventDef_Strategized_Proxy_Broker : public virtual _TAO_EventDef_Proxy_Broker
 {
 public: 
   _TAO_EventDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_EventDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_EventDef_Proxy_Impl &select_proxy (
-    ::IR::EventDef *object,
+  virtual _TAO_EventDef_Proxy_Impl &select_proxy (
+    IR_EventDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -24008,7 +23821,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_EventDef_Proxy_Impl
+  _TAO_EventDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -24020,7 +23833,6 @@
   static _TAO_EventDef_Strategized_Proxy_Broker *the_TAO_EventDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -24030,8 +23842,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_EventDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_EventDef_Proxy_Impl,
+class _TAO_EventDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_EventDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
   
@@ -24050,7 +23862,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ValueDef_ptr event (
+  virtual IR_ValueDef_ptr event   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -24065,11 +23877,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export EventDef_tie : public EventDef
+  class EventDef_tie : public EventDef
 {
 public:
   EventDef_tie (T &t);
@@ -24097,7 +23908,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::Boolean is_a (
@@ -24109,7 +23920,7 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr event (
+    IR_ValueDef_ptr event (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24168,7 +23979,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24184,7 +23995,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24192,7 +24003,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24201,7 +24012,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -24211,7 +24022,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24245,7 +24056,7 @@
 class _TAO_EmitsDef_ThruPOA_Proxy_Impl;
 class _TAO_EmitsDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export EmitsDef : public virtual EventDef
+  class EmitsDef : public virtual EventDef
 {
 protected:
   EmitsDef (void);
@@ -24288,7 +24099,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::EmitsDef *_this (
+    IR_EmitsDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -24299,7 +24110,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24307,7 +24118,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24315,7 +24126,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24323,7 +24134,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24331,7 +24142,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24339,7 +24150,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24347,7 +24158,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24355,7 +24166,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24363,7 +24174,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24371,7 +24182,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24379,7 +24190,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24387,7 +24198,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24395,7 +24206,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24403,7 +24214,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24411,11 +24222,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -24425,20 +24235,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_EmitsDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_EmitsDef_Proxy_Broker
+class _TAO_EmitsDef_Strategized_Proxy_Broker : public virtual _TAO_EmitsDef_Proxy_Broker
 {
 public: 
   _TAO_EmitsDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_EmitsDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_EmitsDef_Proxy_Impl &select_proxy (
-    ::IR::EmitsDef *object,
+  virtual _TAO_EmitsDef_Proxy_Impl &select_proxy (
+    IR_EmitsDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -24456,7 +24265,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_EmitsDef_Proxy_Impl
+  _TAO_EmitsDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -24468,7 +24277,6 @@
   static _TAO_EmitsDef_Strategized_Proxy_Broker *the_TAO_EmitsDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -24478,8 +24286,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_EmitsDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_EmitsDef_Proxy_Impl,
+class _TAO_EmitsDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_EmitsDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_EventDef_ThruPOA_Proxy_Impl
   
@@ -24496,11 +24304,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export EmitsDef_tie : public EmitsDef
+  class EmitsDef_tie : public EmitsDef
 {
 public:
   EmitsDef_tie (T &t);
@@ -24528,7 +24335,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::Boolean is_a (
@@ -24540,7 +24347,7 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr event (
+    IR_ValueDef_ptr event (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24599,7 +24406,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24615,7 +24422,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24623,7 +24430,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24632,7 +24439,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -24642,7 +24449,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -24676,7 +24483,7 @@
 class _TAO_PublishesDef_ThruPOA_Proxy_Impl;
 class _TAO_PublishesDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export PublishesDef : public virtual EventDef
+  class PublishesDef : public virtual EventDef
 {
 protected:
   PublishesDef (void);
@@ -24719,7 +24526,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::PublishesDef *_this (
+    IR_PublishesDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -24730,7 +24537,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24738,7 +24545,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24746,7 +24553,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24754,7 +24561,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24762,7 +24569,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24770,7 +24577,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24778,7 +24585,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24786,7 +24593,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24794,7 +24601,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24802,7 +24609,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24810,7 +24617,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24818,7 +24625,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24826,7 +24633,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24834,7 +24641,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -24842,11 +24649,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -24856,20 +24662,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_PublishesDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_PublishesDef_Proxy_Broker
+class _TAO_PublishesDef_Strategized_Proxy_Broker : public virtual _TAO_PublishesDef_Proxy_Broker
 {
 public: 
   _TAO_PublishesDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_PublishesDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_PublishesDef_Proxy_Impl &select_proxy (
-    ::IR::PublishesDef *object,
+  virtual _TAO_PublishesDef_Proxy_Impl &select_proxy (
+    IR_PublishesDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -24887,7 +24692,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_PublishesDef_Proxy_Impl
+  _TAO_PublishesDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -24899,7 +24704,6 @@
   static _TAO_PublishesDef_Strategized_Proxy_Broker *the_TAO_PublishesDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -24909,8 +24713,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_PublishesDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_PublishesDef_Proxy_Impl,
+class _TAO_PublishesDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_PublishesDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_EventDef_ThruPOA_Proxy_Impl
   
@@ -24927,11 +24731,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export PublishesDef_tie : public PublishesDef
+  class PublishesDef_tie : public PublishesDef
 {
 public:
   PublishesDef_tie (T &t);
@@ -24959,7 +24762,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::Boolean is_a (
@@ -24971,7 +24774,7 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr event (
+    IR_ValueDef_ptr event (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25030,7 +24833,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25046,7 +24849,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25054,7 +24857,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25063,7 +24866,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -25073,7 +24876,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25107,7 +24910,7 @@
 class _TAO_ConsumesDef_ThruPOA_Proxy_Impl;
 class _TAO_ConsumesDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ConsumesDef : public virtual EventDef
+  class ConsumesDef : public virtual EventDef
 {
 protected:
   ConsumesDef (void);
@@ -25150,7 +24953,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::ConsumesDef *_this (
+    IR_ConsumesDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -25161,7 +24964,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25169,7 +24972,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25177,7 +24980,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25185,7 +24988,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25193,7 +24996,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25201,7 +25004,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25209,7 +25012,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25217,7 +25020,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25225,7 +25028,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25233,7 +25036,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25241,7 +25044,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25249,7 +25052,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25257,7 +25060,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25265,7 +25068,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25273,11 +25076,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -25287,20 +25089,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ConsumesDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ConsumesDef_Proxy_Broker
+class _TAO_ConsumesDef_Strategized_Proxy_Broker : public virtual _TAO_ConsumesDef_Proxy_Broker
 {
 public: 
   _TAO_ConsumesDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ConsumesDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ConsumesDef_Proxy_Impl &select_proxy (
-    ::IR::ConsumesDef *object,
+  virtual _TAO_ConsumesDef_Proxy_Impl &select_proxy (
+    IR_ConsumesDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -25318,7 +25119,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ConsumesDef_Proxy_Impl
+  _TAO_ConsumesDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -25330,7 +25131,6 @@
   static _TAO_ConsumesDef_Strategized_Proxy_Broker *the_TAO_ConsumesDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -25340,8 +25140,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ConsumesDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ConsumesDef_Proxy_Impl,
+class _TAO_ConsumesDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ConsumesDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_EventDef_ThruPOA_Proxy_Impl
   
@@ -25358,11 +25158,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ConsumesDef_tie : public ConsumesDef
+  class ConsumesDef_tie : public ConsumesDef
 {
 public:
   ConsumesDef_tie (T &t);
@@ -25390,7 +25189,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::Boolean is_a (
@@ -25402,7 +25201,7 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr event (
+    IR_ValueDef_ptr event (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25461,7 +25260,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25477,7 +25276,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25485,7 +25284,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25494,7 +25293,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -25504,7 +25303,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25538,7 +25337,7 @@
 class _TAO_ComponentDef_ThruPOA_Proxy_Impl;
 class _TAO_ComponentDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export ComponentDef : public virtual InterfaceDef
+  class ComponentDef : public virtual InterfaceDef
 {
 protected:
   ComponentDef (void);
@@ -25581,14 +25380,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::ComponentDef *_this (
+    IR_ComponentDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::InterfaceDefSeq * supported_interfaces (
+    virtual IR_InterfaceDefSeq * supported_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25605,7 +25404,7 @@
     );
 
   virtual void supported_interfaces (
-      const IR::InterfaceDefSeq & supported_interfaces,
+        const IR_InterfaceDefSeq & supported_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25621,7 +25420,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ComponentDef_ptr base_component (
+    virtual IR_ComponentDef_ptr base_component (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25637,7 +25436,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ProvidesDefSeq * provides_interfaces (
+    virtual IR_ProvidesDefSeq * provides_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25653,7 +25452,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::UsesDefSeq * uses_interfaces (
+    virtual IR_UsesDefSeq * uses_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25669,7 +25468,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::EmitsDefSeq * emits_events (
+    virtual IR_EmitsDefSeq * emits_events (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25685,7 +25484,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::PublishesDefSeq * publishes_events (
+    virtual IR_PublishesDefSeq * publishes_events (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25701,7 +25500,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ConsumesDefSeq * consumes_events (
+    virtual IR_ConsumesDefSeq * consumes_events (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25733,11 +25532,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ProvidesDef_ptr create_provides (
+    virtual IR_ProvidesDef_ptr create_provides (
       const char * id,
       const char * name,
       const char * version,
-      IR::InterfaceDef_ptr interface_type,
+        IR_InterfaceDef_ptr interface_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25753,11 +25552,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::UsesDef_ptr create_uses (
+    virtual IR_UsesDef_ptr create_uses (
       const char * id,
       const char * name,
       const char * version,
-      IR::InterfaceDef_ptr interface_type,
+        IR_InterfaceDef_ptr interface_type,
       CORBA::Boolean is_multiple,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -25774,11 +25573,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::EmitsDef_ptr create_emits (
+    virtual IR_EmitsDef_ptr create_emits (
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25794,11 +25593,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::PublishesDef_ptr create_publishes (
+    virtual IR_PublishesDef_ptr create_publishes (
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25814,11 +25613,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ConsumesDef_ptr create_consumes (
+    virtual IR_ConsumesDef_ptr create_consumes (
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -25838,7 +25637,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25846,7 +25645,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25854,7 +25653,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25862,7 +25661,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25870,7 +25669,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25878,7 +25677,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25886,7 +25685,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25894,7 +25693,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25902,7 +25701,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25910,7 +25709,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25918,7 +25717,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25926,7 +25725,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25934,7 +25733,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25942,7 +25741,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25950,7 +25749,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25958,7 +25757,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25966,7 +25765,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25974,7 +25773,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25982,7 +25781,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25990,7 +25789,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -25998,7 +25797,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26006,7 +25805,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26014,7 +25813,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26022,7 +25821,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26030,7 +25829,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26038,7 +25837,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26046,7 +25845,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26054,7 +25853,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26062,7 +25861,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26070,7 +25869,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26078,7 +25877,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26086,7 +25885,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26094,7 +25893,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26102,7 +25901,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26110,7 +25909,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26118,7 +25917,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26126,7 +25925,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -26134,11 +25933,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -26192,7 +25990,7 @@
     POA_IR::ComponentDef *_tao_impl;
     void result (IR::InterfaceDefSeq *      result);
  // update the result 
-IR::InterfaceDefSeq *  _result;
+      IR_InterfaceDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_supported_interfaces_set : public TAO_ServerRequestInfo
@@ -26203,7 +26001,7 @@
     TAO_ServerRequest &_tao_server_request,
     POA_IR::ComponentDef *tao_impl
     ,
-    const IR::InterfaceDefSeq & supported_interfaces,
+        const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -26242,7 +26040,7 @@
   
 private:
   POA_IR::ComponentDef *_tao_impl;
-  const IR::InterfaceDefSeq & supported_interfaces_;
+      const IR_InterfaceDefSeq & supported_interfaces_;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_base_component_get : public TAO_ServerRequestInfo
@@ -26293,7 +26091,7 @@
   POA_IR::ComponentDef *_tao_impl;
   void result (IR::ComponentDef_ptr    result);
  // update the result 
-IR::ComponentDef_ptr  _result;
+      IR_ComponentDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_provides_interfaces_get : public TAO_ServerRequestInfo
@@ -26344,7 +26142,7 @@
   POA_IR::ComponentDef *_tao_impl;
   void result (IR::ProvidesDefSeq *    result);
  // update the result 
-IR::ProvidesDefSeq *  _result;
+      IR_ProvidesDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_uses_interfaces_get : public TAO_ServerRequestInfo
@@ -26395,7 +26193,7 @@
   POA_IR::ComponentDef *_tao_impl;
   void result (IR::UsesDefSeq *    result);
  // update the result 
-IR::UsesDefSeq *  _result;
+      IR_UsesDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_emits_events_get : public TAO_ServerRequestInfo
@@ -26446,7 +26244,7 @@
   POA_IR::ComponentDef *_tao_impl;
   void result (IR::EmitsDefSeq *    result);
  // update the result 
-IR::EmitsDefSeq *  _result;
+      IR_EmitsDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_publishes_events_get : public TAO_ServerRequestInfo
@@ -26497,7 +26295,7 @@
   POA_IR::ComponentDef *_tao_impl;
   void result (IR::PublishesDefSeq *    result);
  // update the result 
-IR::PublishesDefSeq *  _result;
+      IR_PublishesDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_consumes_events_get : public TAO_ServerRequestInfo
@@ -26548,7 +26346,7 @@
   POA_IR::ComponentDef *_tao_impl;
   void result (IR::ConsumesDefSeq *    result);
  // update the result 
-IR::ConsumesDefSeq *  _result;
+      IR_ConsumesDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_is_basic_get : public TAO_ServerRequestInfo
@@ -26613,7 +26411,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+        IR_InterfaceDef_ptr interface_type,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -26655,10 +26453,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::InterfaceDef_ptr interface_type_;
+      IR_InterfaceDef_ptr interface_type_;
 void result (IR::ProvidesDef_ptr    result);
  // update the result 
-IR::ProvidesDef_ptr  _result;
+      IR_ProvidesDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_create_uses : public TAO_ServerRequestInfo
@@ -26672,7 +26470,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+        IR_InterfaceDef_ptr interface_type,
     const CORBA::Boolean & is_multiple,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -26715,11 +26513,11 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::InterfaceDef_ptr interface_type_;
+      IR_InterfaceDef_ptr interface_type_;
 const CORBA::Boolean & is_multiple_;
 void result (IR::UsesDef_ptr    result);
  // update the result 
-IR::UsesDef_ptr  _result;
+      IR_UsesDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_create_emits : public TAO_ServerRequestInfo
@@ -26733,7 +26531,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -26775,10 +26573,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::ValueDef_ptr value_;
+      IR_ValueDef_ptr value_;
 void result (IR::EmitsDef_ptr    result);
  // update the result 
-IR::EmitsDef_ptr  _result;
+      IR_EmitsDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_create_publishes : public TAO_ServerRequestInfo
@@ -26792,7 +26590,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -26834,10 +26632,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::ValueDef_ptr value_;
+      IR_ValueDef_ptr value_;
 void result (IR::PublishesDef_ptr    result);
  // update the result 
-IR::PublishesDef_ptr  _result;
+      IR_PublishesDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_ComponentDef_create_consumes : public TAO_ServerRequestInfo
@@ -26851,7 +26649,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -26893,30 +26691,29 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::ValueDef_ptr value_;
+      IR_ValueDef_ptr value_;
 void result (IR::ConsumesDef_ptr    result);
  // update the result 
-IR::ConsumesDef_ptr  _result;
+      IR_ConsumesDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_ComponentDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_ComponentDef_Proxy_Broker
+class _TAO_ComponentDef_Strategized_Proxy_Broker : public virtual _TAO_ComponentDef_Proxy_Broker
 {
 public: 
   _TAO_ComponentDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_ComponentDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_ComponentDef_Proxy_Impl &select_proxy (
-    ::IR::ComponentDef *object,
+  virtual _TAO_ComponentDef_Proxy_Impl &select_proxy (
+    IR_ComponentDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -26934,7 +26731,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_ComponentDef_Proxy_Impl
+  _TAO_ComponentDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -26946,7 +26743,6 @@
   static _TAO_ComponentDef_Strategized_Proxy_Broker *the_TAO_ComponentDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -26956,8 +26752,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_ComponentDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_ComponentDef_Proxy_Impl,
+class _TAO_ComponentDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_ComponentDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_InterfaceDef_ThruPOA_Proxy_Impl
   
@@ -26967,7 +26763,7 @@
   
   virtual ~_TAO_ComponentDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::InterfaceDefSeq * supported_interfaces (
+    virtual IR_InterfaceDefSeq * supported_interfaces   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -26977,14 +26773,14 @@
 
   virtual void supported_interfaces (
       CORBA_Object *_collocated_tao_target_,
-      const IR::InterfaceDefSeq & supported_interfaces,
+      const IR_InterfaceDefSeq & supported_interfaces,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ComponentDef_ptr base_component (
+  virtual IR_ComponentDef_ptr base_component   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -26992,7 +26788,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ProvidesDefSeq * provides_interfaces (
+  virtual IR_ProvidesDefSeq * provides_interfaces   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -27000,7 +26796,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::UsesDefSeq * uses_interfaces (
+  virtual IR_UsesDefSeq * uses_interfaces   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -27008,7 +26804,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::EmitsDefSeq * emits_events (
+  virtual IR_EmitsDefSeq * emits_events   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -27016,7 +26812,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::PublishesDefSeq * publishes_events (
+  virtual IR_PublishesDefSeq * publishes_events   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -27024,7 +26820,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ConsumesDefSeq * consumes_events (
+  virtual IR_ConsumesDefSeq * consumes_events   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -27040,24 +26836,24 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ProvidesDef_ptr create_provides (
+  virtual IR_ProvidesDef_ptr create_provides   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::InterfaceDef_ptr interface_type,
+      IR_InterfaceDef_ptr interface_type,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::UsesDef_ptr create_uses (
+  virtual IR_UsesDef_ptr create_uses   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::InterfaceDef_ptr interface_type,
+      IR_InterfaceDef_ptr interface_type,
       CORBA::Boolean is_multiple,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -27065,36 +26861,36 @@
       CORBA::SystemException
     ));
 
-  virtual IR::EmitsDef_ptr create_emits (
+  virtual IR_EmitsDef_ptr create_emits   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+      IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::PublishesDef_ptr create_publishes (
+  virtual IR_PublishesDef_ptr create_publishes   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+      IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::ConsumesDef_ptr create_consumes (
+  virtual IR_ConsumesDef_ptr create_consumes   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+      IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -27108,11 +26904,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export ComponentDef_tie : public ComponentDef
+  class ComponentDef_tie : public ComponentDef
 {
 public:
   ComponentDef_tie (T &t);
@@ -27140,10 +26935,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::InterfaceDefSeq * supported_interfaces (
+    IR_InterfaceDefSeq * supported_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27152,7 +26947,7 @@
     ));
 
   void supported_interfaces (
-      const IR::InterfaceDefSeq & supported_interfaces,
+        const IR_InterfaceDefSeq & supported_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27160,7 +26955,7 @@
       CORBA::SystemException
     ));
 
-  IR::ComponentDef_ptr base_component (
+    IR_ComponentDef_ptr base_component (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27168,7 +26963,7 @@
       CORBA::SystemException
     ));
 
-  IR::ProvidesDefSeq * provides_interfaces (
+    IR_ProvidesDefSeq * provides_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27176,7 +26971,7 @@
       CORBA::SystemException
     ));
 
-  IR::UsesDefSeq * uses_interfaces (
+    IR_UsesDefSeq * uses_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27184,7 +26979,7 @@
       CORBA::SystemException
     ));
 
-  IR::EmitsDefSeq * emits_events (
+    IR_EmitsDefSeq * emits_events (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27192,7 +26987,7 @@
       CORBA::SystemException
     ));
 
-  IR::PublishesDefSeq * publishes_events (
+    IR_PublishesDefSeq * publishes_events (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27200,7 +26995,7 @@
       CORBA::SystemException
     ));
 
-  IR::ConsumesDefSeq * consumes_events (
+    IR_ConsumesDefSeq * consumes_events (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27216,11 +27011,11 @@
       CORBA::SystemException
     ));
 
-  IR::ProvidesDef_ptr create_provides (
+    IR_ProvidesDef_ptr create_provides (
       const char * id,
       const char * name,
       const char * version,
-      IR::InterfaceDef_ptr interface_type,
+        IR_InterfaceDef_ptr interface_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27228,11 +27023,11 @@
       CORBA::SystemException
     ));
 
-  IR::UsesDef_ptr create_uses (
+    IR_UsesDef_ptr create_uses (
       const char * id,
       const char * name,
       const char * version,
-      IR::InterfaceDef_ptr interface_type,
+        IR_InterfaceDef_ptr interface_type,
       CORBA::Boolean is_multiple,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -27241,11 +27036,11 @@
       CORBA::SystemException
     ));
 
-  IR::EmitsDef_ptr create_emits (
+    IR_EmitsDef_ptr create_emits (
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27253,11 +27048,11 @@
       CORBA::SystemException
     ));
 
-  IR::PublishesDef_ptr create_publishes (
+    IR_PublishesDef_ptr create_publishes (
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27265,11 +27060,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConsumesDef_ptr create_consumes (
+    IR_ConsumesDef_ptr create_consumes (
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr value,
+        IR_ValueDef_ptr value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27277,7 +27072,7 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDefSeq * base_interfaces (
+    IR_InterfaceDefSeq * base_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27286,7 +27081,7 @@
     ));
 
   void base_interfaces (
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27337,14 +27132,14 @@
       CORBA::SystemException
     ));
 
-  IR::AttributeDef_ptr create_attribute (
+    IR_AttributeDef_ptr create_attribute (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
-      IR::AttributeMode mode,
-      const IR::ExceptionDefSeq & get_exceptions,
-      const IR::ExceptionDefSeq & put_exceptions,
+        IR_IDLType_ptr type,
+        IR_AttributeMode mode,
+        const IR_ExceptionDefSeq & get_exceptions,
+        const IR_ExceptionDefSeq & put_exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27352,15 +27147,15 @@
       CORBA::SystemException
     ));
 
-  IR::OperationDef_ptr create_operation (
+    IR_OperationDef_ptr create_operation (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr result,
-      IR::OperationMode mode,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
-      const IR::ContextIdSeq & contexts,
+        IR_IDLType_ptr result,
+        IR_OperationMode mode,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27368,7 +27163,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -27377,8 +27172,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -27387,10 +27182,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -27399,8 +27194,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -27410,7 +27205,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -27421,11 +27216,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -27434,11 +27229,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27446,12 +27241,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27459,11 +27254,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27471,11 +27266,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27483,11 +27278,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -27497,17 +27292,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27515,11 +27310,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27527,11 +27322,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27539,7 +27334,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -27601,7 +27396,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27617,7 +27412,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27625,7 +27420,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27634,7 +27429,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -27652,7 +27447,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27686,7 +27481,7 @@
 class _TAO_PrimaryKeyDef_ThruPOA_Proxy_Impl;
 class _TAO_PrimaryKeyDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export PrimaryKeyDef : public virtual Contained
+  class PrimaryKeyDef : public virtual Contained
 {
 protected:
   PrimaryKeyDef (void);
@@ -27729,7 +27524,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::PrimaryKeyDef *_this (
+    IR_PrimaryKeyDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -27753,7 +27548,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ValueDef_ptr primary_key (
+    virtual IR_ValueDef_ptr primary_key (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -27773,7 +27568,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27781,7 +27576,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27789,7 +27584,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27797,7 +27592,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27805,7 +27600,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27813,7 +27608,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27821,7 +27616,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27829,7 +27624,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27837,7 +27632,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27845,7 +27640,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27853,7 +27648,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27861,7 +27656,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -27869,11 +27664,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -27980,27 +27774,26 @@
   POA_IR::PrimaryKeyDef *_tao_impl;
   void result (IR::ValueDef_ptr    result);
  // update the result 
-IR::ValueDef_ptr  _result;
+      IR_ValueDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_PrimaryKeyDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_PrimaryKeyDef_Proxy_Broker
+class _TAO_PrimaryKeyDef_Strategized_Proxy_Broker : public virtual _TAO_PrimaryKeyDef_Proxy_Broker
 {
 public: 
   _TAO_PrimaryKeyDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_PrimaryKeyDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_PrimaryKeyDef_Proxy_Impl &select_proxy (
-    ::IR::PrimaryKeyDef *object,
+  virtual _TAO_PrimaryKeyDef_Proxy_Impl &select_proxy (
+    IR_PrimaryKeyDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -28018,7 +27811,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_PrimaryKeyDef_Proxy_Impl
+  _TAO_PrimaryKeyDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -28030,7 +27823,6 @@
   static _TAO_PrimaryKeyDef_Strategized_Proxy_Broker *the_TAO_PrimaryKeyDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -28040,8 +27832,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_PrimaryKeyDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_PrimaryKeyDef_Proxy_Impl,
+class _TAO_PrimaryKeyDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_PrimaryKeyDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_Contained_ThruPOA_Proxy_Impl
   
@@ -28060,7 +27852,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ValueDef_ptr primary_key (
+  virtual IR_ValueDef_ptr primary_key   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -28075,11 +27867,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export PrimaryKeyDef_tie : public PrimaryKeyDef
+  class PrimaryKeyDef_tie : public PrimaryKeyDef
 {
 public:
   PrimaryKeyDef_tie (T &t);
@@ -28107,7 +27898,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::Boolean is_a (
@@ -28119,7 +27910,7 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr primary_key (
+    IR_ValueDef_ptr primary_key (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28178,7 +27969,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28194,7 +27985,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28202,7 +27993,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28211,7 +28002,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -28221,7 +28012,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28255,7 +28046,7 @@
 class _TAO_FactoryDef_ThruPOA_Proxy_Impl;
 class _TAO_FactoryDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export FactoryDef : public virtual OperationDef
+  class FactoryDef : public virtual OperationDef
 {
 protected:
   FactoryDef (void);
@@ -28298,7 +28089,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::FactoryDef *_this (
+    IR_FactoryDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -28309,7 +28100,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28317,7 +28108,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28325,7 +28116,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28333,7 +28124,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28341,7 +28132,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28349,7 +28140,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28357,7 +28148,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28365,7 +28156,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28373,7 +28164,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28381,7 +28172,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28389,7 +28180,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28397,7 +28188,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28405,7 +28196,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28413,7 +28204,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28421,7 +28212,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28429,7 +28220,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28437,7 +28228,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28445,7 +28236,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28453,7 +28244,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28461,7 +28252,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28469,7 +28260,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28477,7 +28268,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28485,7 +28276,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28493,11 +28284,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -28507,20 +28297,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_FactoryDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_FactoryDef_Proxy_Broker
+class _TAO_FactoryDef_Strategized_Proxy_Broker : public virtual _TAO_FactoryDef_Proxy_Broker
 {
 public: 
   _TAO_FactoryDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_FactoryDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_FactoryDef_Proxy_Impl &select_proxy (
-    ::IR::FactoryDef *object,
+  virtual _TAO_FactoryDef_Proxy_Impl &select_proxy (
+    IR_FactoryDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -28538,7 +28327,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_FactoryDef_Proxy_Impl
+  _TAO_FactoryDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -28550,7 +28339,6 @@
   static _TAO_FactoryDef_Strategized_Proxy_Broker *the_TAO_FactoryDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -28560,8 +28348,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_FactoryDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_FactoryDef_Proxy_Impl,
+class _TAO_FactoryDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_FactoryDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_OperationDef_ThruPOA_Proxy_Impl
   
@@ -28578,11 +28366,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export FactoryDef_tie : public FactoryDef
+  class FactoryDef_tie : public FactoryDef
 {
 public:
   FactoryDef_tie (T &t);
@@ -28610,7 +28397,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr result (
@@ -28621,7 +28408,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr result_def (
+    IR_IDLType_ptr result_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28630,7 +28417,7 @@
     ));
 
   void result_def (
-      IR::IDLType_ptr result_def,
+        IR_IDLType_ptr result_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28638,7 +28425,7 @@
       CORBA::SystemException
     ));
 
-  IR::ParDescriptionSeq * params (
+    IR_ParDescriptionSeq * params (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28647,7 +28434,7 @@
     ));
 
   void params (
-      const IR::ParDescriptionSeq & params,
+        const IR_ParDescriptionSeq & params,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28655,7 +28442,7 @@
       CORBA::SystemException
     ));
 
-  IR::OperationMode mode (
+    IR_OperationMode mode (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28664,7 +28451,7 @@
     ));
 
   void mode (
-      IR::OperationMode mode,
+        IR_OperationMode mode,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28672,7 +28459,7 @@
       CORBA::SystemException
     ));
 
-  IR::ContextIdSeq * contexts (
+    IR_ContextIdSeq * contexts (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28681,7 +28468,7 @@
     ));
 
   void contexts (
-      const IR::ContextIdSeq & contexts,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28689,7 +28476,7 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDefSeq * exceptions (
+    IR_ExceptionDefSeq * exceptions (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28698,7 +28485,7 @@
     ));
 
   void exceptions (
-      const IR::ExceptionDefSeq & exceptions,
+        const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28757,7 +28544,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28773,7 +28560,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28781,7 +28568,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28790,7 +28577,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -28800,7 +28587,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -28834,7 +28621,7 @@
 class _TAO_FinderDef_ThruPOA_Proxy_Impl;
 class _TAO_FinderDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export FinderDef : public virtual OperationDef
+  class FinderDef : public virtual OperationDef
 {
 protected:
   FinderDef (void);
@@ -28877,7 +28664,7 @@
         TAO_default_environment ()
     );
 
-  ::IR::FinderDef *_this (
+    IR_FinderDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
@@ -28888,7 +28675,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28896,7 +28683,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28904,7 +28691,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28912,7 +28699,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28920,7 +28707,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28928,7 +28715,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28936,7 +28723,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28944,7 +28731,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28952,7 +28739,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28960,7 +28747,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28968,7 +28755,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28976,7 +28763,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28984,7 +28771,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -28992,7 +28779,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29000,7 +28787,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29008,7 +28795,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29016,7 +28803,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29024,7 +28811,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29032,7 +28819,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29040,7 +28827,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29048,7 +28835,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29056,7 +28843,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29064,7 +28851,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29072,11 +28859,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -29086,20 +28872,19 @@
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_FinderDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_FinderDef_Proxy_Broker
+class _TAO_FinderDef_Strategized_Proxy_Broker : public virtual _TAO_FinderDef_Proxy_Broker
 {
 public: 
   _TAO_FinderDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_FinderDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_FinderDef_Proxy_Impl &select_proxy (
-    ::IR::FinderDef *object,
+  virtual _TAO_FinderDef_Proxy_Impl &select_proxy (
+    IR_FinderDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -29117,7 +28902,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_FinderDef_Proxy_Impl
+  _TAO_FinderDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -29129,7 +28914,6 @@
   static _TAO_FinderDef_Strategized_Proxy_Broker *the_TAO_FinderDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -29139,8 +28923,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_FinderDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_FinderDef_Proxy_Impl,
+class _TAO_FinderDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_FinderDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_OperationDef_ThruPOA_Proxy_Impl
   
@@ -29157,11 +28941,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export FinderDef_tie : public FinderDef
+  class FinderDef_tie : public FinderDef
 {
 public:
   FinderDef_tie (T &t);
@@ -29189,7 +28972,7 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
   CORBA::TypeCode_ptr result (
@@ -29200,7 +28983,7 @@
       CORBA::SystemException
     ));
 
-  IR::IDLType_ptr result_def (
+    IR_IDLType_ptr result_def (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29209,7 +28992,7 @@
     ));
 
   void result_def (
-      IR::IDLType_ptr result_def,
+        IR_IDLType_ptr result_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29217,7 +29000,7 @@
       CORBA::SystemException
     ));
 
-  IR::ParDescriptionSeq * params (
+    IR_ParDescriptionSeq * params (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29226,7 +29009,7 @@
     ));
 
   void params (
-      const IR::ParDescriptionSeq & params,
+        const IR_ParDescriptionSeq & params,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29234,7 +29017,7 @@
       CORBA::SystemException
     ));
 
-  IR::OperationMode mode (
+    IR_OperationMode mode (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29243,7 +29026,7 @@
     ));
 
   void mode (
-      IR::OperationMode mode,
+        IR_OperationMode mode,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29251,7 +29034,7 @@
       CORBA::SystemException
     ));
 
-  IR::ContextIdSeq * contexts (
+    IR_ContextIdSeq * contexts (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29260,7 +29043,7 @@
     ));
 
   void contexts (
-      const IR::ContextIdSeq & contexts,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29268,7 +29051,7 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDefSeq * exceptions (
+    IR_ExceptionDefSeq * exceptions (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29277,7 +29060,7 @@
     ));
 
   void exceptions (
-      const IR::ExceptionDefSeq & exceptions,
+        const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29336,7 +29119,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29352,7 +29135,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29360,7 +29143,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29369,7 +29152,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -29379,7 +29162,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29413,7 +29196,7 @@
 class _TAO_HomeDef_ThruPOA_Proxy_Impl;
 class _TAO_HomeDef_Strategized_Proxy_Broker;
 
-class TAO_IFR_Client_Export HomeDef : public virtual InterfaceDef
+  class HomeDef : public virtual InterfaceDef
 {
 protected:
   HomeDef (void);
@@ -29456,14 +29239,14 @@
         TAO_default_environment ()
     );
 
-  ::IR::HomeDef *_this (
+    IR_HomeDef *_this (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual IR::HomeDef_ptr base_home (
+    virtual IR_HomeDef_ptr base_home (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29479,7 +29262,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::ComponentDef_ptr managed_component (
+    virtual IR_ComponentDef_ptr managed_component (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29495,7 +29278,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::PrimaryKeyDef_ptr primary_key (
+    virtual IR_PrimaryKeyDef_ptr primary_key (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29511,7 +29294,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::FactoryDefSeq * factories (
+    virtual IR_FactoryDefSeq * factories (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29527,7 +29310,7 @@
         TAO_default_environment ()
     );
 
-  virtual IR::FinderDefSeq * finders (
+    virtual IR_FinderDefSeq * finders (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29559,11 +29342,11 @@
         TAO_default_environment ()
     );
 
-  virtual IR::PrimaryKeyDef_ptr create_primary_key (
+    virtual IR_PrimaryKeyDef_ptr create_primary_key (
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr primary_key,
+        IR_ValueDef_ptr primary_key,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29579,12 +29362,12 @@
         TAO_default_environment ()
     );
 
-  virtual IR::FactoryDef_ptr create_factory (
+    virtual IR_FactoryDef_ptr create_factory (
       const char * id,
       const char * name,
       const char * version,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29600,12 +29383,12 @@
         TAO_default_environment ()
     );
 
-  virtual IR::FinderDef_ptr create_finder (
+    virtual IR_FinderDef_ptr create_finder (
       const char * id,
       const char * name,
       const char * version,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -29625,7 +29408,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29633,7 +29416,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29641,7 +29424,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29649,7 +29432,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29657,7 +29440,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29665,7 +29448,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29673,7 +29456,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29681,7 +29464,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29689,7 +29472,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29697,7 +29480,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29705,7 +29488,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29713,7 +29496,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29721,7 +29504,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29729,7 +29512,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29737,7 +29520,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29745,7 +29528,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29753,7 +29536,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29761,7 +29544,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29769,7 +29552,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29777,7 +29560,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29785,7 +29568,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29793,7 +29576,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29801,7 +29584,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29809,7 +29592,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29817,7 +29600,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29825,7 +29608,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29833,7 +29616,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29841,7 +29624,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29849,7 +29632,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29857,7 +29640,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29865,7 +29648,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29873,7 +29656,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29881,7 +29664,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29889,7 +29672,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29897,7 +29680,7 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29905,7 +29688,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29913,7 +29696,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
@@ -29921,11 +29704,10 @@
       TAO_ServerRequest &req, 
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV =
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
 
-  
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -29979,7 +29761,7 @@
     POA_IR::HomeDef *_tao_impl;
     void result (IR::HomeDef_ptr      result);
  // update the result 
-IR::HomeDef_ptr  _result;
+      IR_HomeDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_HomeDef_managed_component_get : public TAO_ServerRequestInfo
@@ -30030,7 +29812,7 @@
   POA_IR::HomeDef *_tao_impl;
   void result (IR::ComponentDef_ptr    result);
  // update the result 
-IR::ComponentDef_ptr  _result;
+      IR_ComponentDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_HomeDef_primary_key_get : public TAO_ServerRequestInfo
@@ -30081,7 +29863,7 @@
   POA_IR::HomeDef *_tao_impl;
   void result (IR::PrimaryKeyDef_ptr    result);
  // update the result 
-IR::PrimaryKeyDef_ptr  _result;
+      IR_PrimaryKeyDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_HomeDef_factories_get : public TAO_ServerRequestInfo
@@ -30132,7 +29914,7 @@
   POA_IR::HomeDef *_tao_impl;
   void result (IR::FactoryDefSeq *    result);
  // update the result 
-IR::FactoryDefSeq *  _result;
+      IR_FactoryDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_HomeDef_finders_get : public TAO_ServerRequestInfo
@@ -30183,7 +29965,7 @@
   POA_IR::HomeDef *_tao_impl;
   void result (IR::FinderDefSeq *    result);
  // update the result 
-IR::FinderDefSeq *  _result;
+      IR_FinderDefSeq *  _result;
 };
 
 class TAO_ServerRequestInfo_IR_HomeDef_is_basic_get : public TAO_ServerRequestInfo
@@ -30248,7 +30030,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr primary_key,
+        IR_ValueDef_ptr primary_key,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -30290,10 +30072,10 @@
   const char * id_;
 const char * name_;
 const char * version_;
-IR::ValueDef_ptr primary_key_;
+      IR_ValueDef_ptr primary_key_;
 void result (IR::PrimaryKeyDef_ptr    result);
  // update the result 
-IR::PrimaryKeyDef_ptr  _result;
+      IR_PrimaryKeyDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_HomeDef_create_factory : public TAO_ServerRequestInfo
@@ -30307,8 +30089,8 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -30350,11 +30132,11 @@
   const char * id_;
 const char * name_;
 const char * version_;
-const IR::ParDescriptionSeq & params_;
-const IR::ExceptionDefSeq & exceptions_;
+      const IR_ParDescriptionSeq & params_;
+      const IR_ExceptionDefSeq & exceptions_;
 void result (IR::FactoryDef_ptr    result);
  // update the result 
-IR::FactoryDef_ptr  _result;
+      IR_FactoryDef_ptr  _result;
 };
 
 class TAO_ServerRequestInfo_IR_HomeDef_create_finder : public TAO_ServerRequestInfo
@@ -30368,8 +30150,8 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
   );
@@ -30411,31 +30193,30 @@
   const char * id_;
 const char * name_;
 const char * version_;
-const IR::ParDescriptionSeq & params_;
-const IR::ExceptionDefSeq & exceptions_;
+      const IR_ParDescriptionSeq & params_;
+      const IR_ExceptionDefSeq & exceptions_;
 void result (IR::FinderDef_ptr    result);
  // update the result 
-IR::FinderDef_ptr  _result;
+      IR_FinderDef_ptr  _result;
 };
 
 #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
-
 ///////////////////////////////////////////////////////////////////////
 //               Strategized Proxy Broker Declaration 
 //
 
-class TAO_IFR_Client_Export _TAO_HomeDef_Strategized_Proxy_Broker : public virtual ::IR::_TAO_HomeDef_Proxy_Broker
+class _TAO_HomeDef_Strategized_Proxy_Broker : public virtual _TAO_HomeDef_Proxy_Broker
 {
 public: 
   _TAO_HomeDef_Strategized_Proxy_Broker (void);
   
   virtual ~_TAO_HomeDef_Strategized_Proxy_Broker (void);
   
-  virtual ::IR::_TAO_HomeDef_Proxy_Impl &select_proxy (
-    ::IR::HomeDef *object,
+  virtual _TAO_HomeDef_Proxy_Impl &select_proxy (
+    IR_HomeDef *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
   );
 
@@ -30453,7 +30234,7 @@
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
-  ::IR::_TAO_HomeDef_Proxy_Impl
+  _TAO_HomeDef_Proxy_Impl
    *proxy_cache_[TAO_ORB_Core::COLLOCATION_STRATEGIES_NUM];
   
   TAO_SYNCH_MUTEX mutex_;
@@ -30465,7 +30246,6 @@
   static _TAO_HomeDef_Strategized_Proxy_Broker *the_TAO_HomeDef_Strategized_Proxy_Broker (void);
 };
 
-
 //
 //            End Strategized Proxy Broker Declaration 
 ///////////////////////////////////////////////////////////////////////
@@ -30475,8 +30255,8 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_HomeDef_ThruPOA_Proxy_Impl : 
-  public virtual ::IR::_TAO_HomeDef_Proxy_Impl,
+class _TAO_HomeDef_ThruPOA_Proxy_Impl : 
+  public virtual _TAO_HomeDef_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
   public virtual ::POA_IR::_TAO_InterfaceDef_ThruPOA_Proxy_Impl
   
@@ -30486,7 +30266,7 @@
   
   virtual ~_TAO_HomeDef_ThruPOA_Proxy_Impl (void) { }
   
-    virtual IR::HomeDef_ptr base_home (
+    virtual IR_HomeDef_ptr base_home   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -30494,7 +30274,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::ComponentDef_ptr managed_component (
+  virtual IR_ComponentDef_ptr managed_component   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -30502,7 +30282,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::PrimaryKeyDef_ptr primary_key (
+  virtual IR_PrimaryKeyDef_ptr primary_key   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -30510,7 +30290,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::FactoryDefSeq * factories (
+  virtual IR_FactoryDefSeq * factories   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -30518,7 +30298,7 @@
       CORBA::SystemException
     ));
 
-  virtual IR::FinderDefSeq * finders (
+  virtual IR_FinderDefSeq * finders   (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -30534,38 +30314,38 @@
       CORBA::SystemException
     ));
 
-  virtual IR::PrimaryKeyDef_ptr create_primary_key (
+  virtual IR_PrimaryKeyDef_ptr create_primary_key   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr primary_key,
+      IR_ValueDef_ptr primary_key,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::FactoryDef_ptr create_factory (
+  virtual IR_FactoryDef_ptr create_factory   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
+      const IR_ParDescriptionSeq & params,
+      const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
     ));
 
-  virtual IR::FinderDef_ptr create_finder (
+  virtual IR_FinderDef_ptr create_finder   (
       CORBA_Object *_collocated_tao_target_,
       const char * id,
       const char * name,
       const char * version,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
+      const IR_ParDescriptionSeq & params,
+      const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV
     )
     ACE_THROW_SPEC ((
@@ -30579,11 +30359,10 @@
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 #if defined (ACE_HAS_USING_KEYWORD)
 // TIE class: Refer to CORBA v2.2, Section 20.34.4
 template <class T>
-class TAO_IFR_Client_Export HomeDef_tie : public HomeDef
+  class HomeDef_tie : public HomeDef
 {
 public:
   HomeDef_tie (T &t);
@@ -30611,10 +30390,10 @@
   
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &env =
         TAO_default_environment ()
     );
-  IR::HomeDef_ptr base_home (
+    IR_HomeDef_ptr base_home (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30622,7 +30401,7 @@
       CORBA::SystemException
     ));
 
-  IR::ComponentDef_ptr managed_component (
+    IR_ComponentDef_ptr managed_component (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30630,7 +30409,7 @@
       CORBA::SystemException
     ));
 
-  IR::PrimaryKeyDef_ptr primary_key (
+    IR_PrimaryKeyDef_ptr primary_key (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30638,7 +30417,7 @@
       CORBA::SystemException
     ));
 
-  IR::FactoryDefSeq * factories (
+    IR_FactoryDefSeq * factories (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30646,7 +30425,7 @@
       CORBA::SystemException
     ));
 
-  IR::FinderDefSeq * finders (
+    IR_FinderDefSeq * finders (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30662,11 +30441,11 @@
       CORBA::SystemException
     ));
 
-  IR::PrimaryKeyDef_ptr create_primary_key (
+    IR_PrimaryKeyDef_ptr create_primary_key (
       const char * id,
       const char * name,
       const char * version,
-      IR::ValueDef_ptr primary_key,
+        IR_ValueDef_ptr primary_key,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30674,12 +30453,12 @@
       CORBA::SystemException
     ));
 
-  IR::FactoryDef_ptr create_factory (
+    IR_FactoryDef_ptr create_factory (
       const char * id,
       const char * name,
       const char * version,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30687,12 +30466,12 @@
       CORBA::SystemException
     ));
 
-  IR::FinderDef_ptr create_finder (
+    IR_FinderDef_ptr create_finder (
       const char * id,
       const char * name,
       const char * version,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30700,7 +30479,7 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDefSeq * base_interfaces (
+    IR_InterfaceDefSeq * base_interfaces (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30709,7 +30488,7 @@
     ));
 
   void base_interfaces (
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30760,14 +30539,14 @@
       CORBA::SystemException
     ));
 
-  IR::AttributeDef_ptr create_attribute (
+    IR_AttributeDef_ptr create_attribute (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
-      IR::AttributeMode mode,
-      const IR::ExceptionDefSeq & get_exceptions,
-      const IR::ExceptionDefSeq & put_exceptions,
+        IR_IDLType_ptr type,
+        IR_AttributeMode mode,
+        const IR_ExceptionDefSeq & get_exceptions,
+        const IR_ExceptionDefSeq & put_exceptions,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30775,15 +30554,15 @@
       CORBA::SystemException
     ));
 
-  IR::OperationDef_ptr create_operation (
+    IR_OperationDef_ptr create_operation (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr result,
-      IR::OperationMode mode,
-      const IR::ParDescriptionSeq & params,
-      const IR::ExceptionDefSeq & exceptions,
-      const IR::ContextIdSeq & contexts,
+        IR_IDLType_ptr result,
+        IR_OperationMode mode,
+        const IR_ParDescriptionSeq & params,
+        const IR_ExceptionDefSeq & exceptions,
+        const IR_ContextIdSeq & contexts,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30791,7 +30570,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained_ptr lookup (
+    IR_Contained_ptr lookup (
       const char * search_name,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -30800,8 +30579,8 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * contents (
-      IR::DefinitionKind limit_type,
+    IR_ContainedSeq * contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -30810,10 +30589,10 @@
       CORBA::SystemException
     ));
 
-  IR::ContainedSeq * lookup_name (
+    IR_ContainedSeq * lookup_name (
       const char * search_name,
       CORBA::Long levels_to_search,
-      IR::DefinitionKind limit_type,
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -30822,8 +30601,8 @@
       CORBA::SystemException
     ));
 
-  IR::Container::DescriptionSeq * describe_contents (
-      IR::DefinitionKind limit_type,
+    IR_Container::DescriptionSeq * describe_contents (
+        IR_DefinitionKind limit_type,
       CORBA::Boolean exclude_inherited,
       CORBA::Long max_returned_objs,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -30833,7 +30612,7 @@
       CORBA::SystemException
     ));
 
-  IR::ModuleDef_ptr create_module (
+    IR_ModuleDef_ptr create_module (
       const char * id,
       const char * name,
       const char * version,
@@ -30844,11 +30623,11 @@
       CORBA::SystemException
     ));
 
-  IR::ConstantDef_ptr create_constant (
+    IR_ConstantDef_ptr create_constant (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr type,
+        IR_IDLType_ptr type,
       const CORBA::Any & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -30857,11 +30636,11 @@
       CORBA::SystemException
     ));
 
-  IR::StructDef_ptr create_struct (
+    IR_StructDef_ptr create_struct (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30869,12 +30648,12 @@
       CORBA::SystemException
     ));
 
-  IR::UnionDef_ptr create_union (
+    IR_UnionDef_ptr create_union (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr discriminator_type,
-      const IR::UnionMemberSeq & members,
+        IR_IDLType_ptr discriminator_type,
+        const IR_UnionMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30882,11 +30661,11 @@
       CORBA::SystemException
     ));
 
-  IR::EnumDef_ptr create_enum (
+    IR_EnumDef_ptr create_enum (
       const char * id,
       const char * name,
       const char * version,
-      const IR::EnumMemberSeq & members,
+        const IR_EnumMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30894,11 +30673,11 @@
       CORBA::SystemException
     ));
 
-  IR::AliasDef_ptr create_alias (
+    IR_AliasDef_ptr create_alias (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type,
+        IR_IDLType_ptr original_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30906,11 +30685,11 @@
       CORBA::SystemException
     ));
 
-  IR::InterfaceDef_ptr create_interface (
+    IR_InterfaceDef_ptr create_interface (
       const char * id,
       const char * name,
       const char * version,
-      const IR::InterfaceDefSeq & base_interfaces,
+        const IR_InterfaceDefSeq & base_interfaces,
       CORBA::Boolean is_abstract,
       CORBA::Boolean is_local,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -30920,17 +30699,17 @@
       CORBA::SystemException
     ));
 
-  IR::ValueDef_ptr create_value (
+    IR_ValueDef_ptr create_value (
       const char * id,
       const char * name,
       const char * version,
       CORBA::Boolean is_custom,
       CORBA::Boolean is_abstract,
-      IR::ValueDef_ptr base_value,
+        IR_ValueDef_ptr base_value,
       CORBA::Boolean is_truncatable,
-      const IR::ValueDefSeq & abstract_base_values,
-      const IR::InterfaceDefSeq & supported_interfaces,
-      const IR::InitializerSeq & initializers,
+        const IR_ValueDefSeq & abstract_base_values,
+        const IR_InterfaceDefSeq & supported_interfaces,
+        const IR_InitializerSeq & initializers,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30938,11 +30717,11 @@
       CORBA::SystemException
     ));
 
-  IR::ValueBoxDef_ptr create_value_box (
+    IR_ValueBoxDef_ptr create_value_box (
       const char * id,
       const char * name,
       const char * version,
-      IR::IDLType_ptr original_type_def,
+        IR_IDLType_ptr original_type_def,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30950,11 +30729,11 @@
       CORBA::SystemException
     ));
 
-  IR::ExceptionDef_ptr create_exception (
+    IR_ExceptionDef_ptr create_exception (
       const char * id,
       const char * name,
       const char * version,
-      const IR::StructMemberSeq & members,
+        const IR_StructMemberSeq & members,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -30962,7 +30741,7 @@
       CORBA::SystemException
     ));
 
-  IR::NativeDef_ptr create_native (
+    IR_NativeDef_ptr create_native (
       const char * id,
       const char * name,
       const char * version,
@@ -31024,7 +30803,7 @@
       CORBA::SystemException
     ));
 
-  IR::Container_ptr defined_in (
+    IR_Container_ptr defined_in (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -31040,7 +30819,7 @@
       CORBA::SystemException
     ));
 
-  IR::Repository_ptr containing_repository (
+    IR_Repository_ptr containing_repository (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -31048,7 +30827,7 @@
       CORBA::SystemException
     ));
 
-  IR::Contained::Description * describe (
+    IR_Contained::Description * describe (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -31057,7 +30836,7 @@
     ));
 
   void move (
-      IR::Container_ptr new_container,
+        IR_Container_ptr new_container,
       const char * new_name,
       const char * new_version,
       CORBA::Environment &ACE_TRY_ENV = 
@@ -31075,7 +30854,7 @@
       CORBA::SystemException
     ));
 
-  IR::DefinitionKind def_kind (
+    IR_DefinitionKind def_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -31121,4 +30900,4 @@
 #endif /* __BORLANDC__ */
 
 #include "ace/post.h"
-#endif /* ifndef */
+#endif /* ifndef TAO_IDL_INTERFACES_H */
