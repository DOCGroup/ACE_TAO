--- InterfaceS_T.i	Fri Dec 01 16:26:23 2000
+++ ..\..\..\orbsvcs\IFR_Service\InterfaceS_T.i	Mon Nov 27 00:02:07 2000
@@ -1,133 +1,16 @@
-// -*- C++ -*-
-//
-// $Id$
+/* -*- C++ -*- */
+//$Id$
 
-// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
-// TAO and the TAO IDL Compiler have been developed by:
-//       Center for Distributed Object Computing
-//       Washington University
-//       St. Louis, MO
-//       USA
-//       http://www.cs.wustl.edu/~schmidt/doc-center.html
-// and
-//       Distributed Object Computing Laboratory
-//       University of California at Irvine
-//       Irvine, CA
-//       USA
-//       http://doc.ece.uci.edu/
+// ******  Code generated by the The ACE ORB (TAO) IDL Compiler *******
+// TAO and the TAO IDL Compiler have been developed by the Center for
+// Distributed Object Computing at Washington University, St. Louis.
 //
 // Information about TAO is available at:
-//     http://www.cs.wustl.edu/~schmidt/TAO.html
+//                 http://www.cs.wustl.edu/~schmidt/TAO.html
 
 
 #if defined (ACE_HAS_USING_KEYWORD)
 template <class T> ACE_INLINE
-POA_CORBA::IRObject_tie<T>::IRObject_tie (T &t)
-	: ptr_ (&t),
-	  poa_ (PortableServer::POA::_nil ()),
-	  rel_ (0)
-{}
-
-template <class T> ACE_INLINE
-POA_CORBA::IRObject_tie<T>::IRObject_tie (T &t, PortableServer::POA_ptr poa)
-	: ptr_ (&t),
-	  poa_ (PortableServer::POA::_duplicate (poa)),
-	  rel_ (0)
-{}
-
-template <class T> ACE_INLINE
-POA_CORBA::IRObject_tie<T>::IRObject_tie (T *tp, CORBA::Boolean release)
-	: ptr_ (tp),
-	  poa_ (PortableServer::POA::_nil ()),
-	  rel_ (release)
-{}
-
-template <class T> ACE_INLINE
-POA_CORBA::IRObject_tie<T>::IRObject_tie (T *tp, PortableServer::POA_ptr poa, CORBA::Boolean release)
-	: ptr_ (tp),
-	  poa_ (PortableServer::POA::_duplicate (poa)),
-	  rel_ (release)
-{}
-
-template <class T> ACE_INLINE
-POA_CORBA::IRObject_tie<T>::~IRObject_tie (void)
-{
-  if (this->rel_) delete this->ptr_;
-}
-
-template <class T> ACE_INLINE T *
-POA_CORBA::IRObject_tie<T>::_tied_object (void)
-{
-  return this->ptr_;
-}
-
-template <class T> ACE_INLINE void
-POA_CORBA::IRObject_tie<T>::_tied_object (T &obj)
-{
-  if (this->rel_) delete this->ptr_;
-  this->ptr_ = &obj;
-  this->rel_ = 0;
-}
-
-template <class T> ACE_INLINE void
-POA_CORBA::IRObject_tie<T>::_tied_object (T *obj, CORBA::Boolean release)
-{
-  if (this->rel_) delete this->ptr_;
-  this->ptr_ = obj;
-  this->rel_ = release;
-}
-
-template <class T> ACE_INLINE CORBA::Boolean
-POA_CORBA::IRObject_tie<T>::_is_owner (void)
-{
-  return this->rel_;
-}
-
-template <class T> ACE_INLINE void
-POA_CORBA::IRObject_tie<T>::_is_owner (CORBA::Boolean b)
-{
-  this->rel_ = b;
-}
-
-template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_CORBA::IRObject_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
-{
-  if (!CORBA::is_nil (this->poa_.in ()))
-    return PortableServer::POA::_duplicate (this->poa_.in ());
-
-  return this->IRObject::_default_POA (ACE_TRY_ENV);
-}
-
-template <class T> ACE_INLINE
-IR::DefinitionKind POA_CORBA::IRObject_tie<T>::def_kind  (
-    CORBA::Environment &ACE_TRY_ENV
-  )
-  ACE_THROW_SPEC ((
-    CORBA::SystemException
-  ))
-{
-  return this->ptr_->def_kind (
-ACE_TRY_ENV
-  );
-}
-
-template <class T> ACE_INLINE
-void POA_CORBA::IRObject_tie<T>::destroy  (
-    CORBA::Environment &ACE_TRY_ENV
-  )
-  ACE_THROW_SPEC ((
-    CORBA::SystemException
-  ))
-{
-  this->ptr_->destroy (
-ACE_TRY_ENV
-  );
-}
-
-#endif /* ACE_HAS_USING_KEYWORD */
-
-#if defined (ACE_HAS_USING_KEYWORD)
-template <class T> ACE_INLINE
 POA_IR::Contained_tie<T>::Contained_tie (T &t)
 	: ptr_ (&t),
 	  poa_ (PortableServer::POA::_nil ()),
@@ -196,12 +79,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::Contained_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::Contained_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->Contained::_default_POA (ACE_TRY_ENV);
+  return this->Contained::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -213,7 +96,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -227,7 +110,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -241,7 +124,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -255,7 +138,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -269,7 +152,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -283,7 +166,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -297,7 +180,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -310,7 +193,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -323,7 +206,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -336,13 +219,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::Contained_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -352,7 +235,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -368,7 +251,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -381,7 +264,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -457,12 +340,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::Container_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::Container_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->Container::_default_POA (ACE_TRY_ENV);
+  return this->Container::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -475,14 +358,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::Container_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -491,7 +374,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -501,7 +384,7 @@
 IR::ContainedSeq * POA_IR::Container_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -510,7 +393,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -520,7 +403,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::Container_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -530,7 +413,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -549,7 +432,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -561,7 +444,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -570,7 +453,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -584,7 +467,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -592,7 +475,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -605,8 +488,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -614,7 +497,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -628,7 +511,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -636,7 +519,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -649,7 +532,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -657,7 +540,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -670,7 +553,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -680,7 +563,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -697,11 +580,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -709,7 +592,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -728,7 +611,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -736,7 +619,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -749,7 +632,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -757,7 +640,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -777,7 +660,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -793,7 +676,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -806,7 +689,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -882,12 +765,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::IDLType_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::IDLType_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->IDLType::_default_POA (ACE_TRY_ENV);
+  return this->IDLType::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -899,7 +782,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -912,7 +795,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -925,7 +808,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -1001,12 +884,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::Repository_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::Repository_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->Repository::_default_POA (ACE_TRY_ENV);
+  return this->Repository::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -1019,7 +902,7 @@
   ))
 {
   return this->ptr_->lookup_id (
-search_id,
+    search_id,
     ACE_TRY_ENV
   );
 }
@@ -1034,14 +917,14 @@
   ))
 {
   return this->ptr_->get_canonical_typecode (
-tc,
+    tc,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::PrimitiveDef_ptr POA_IR::Repository_tie<T>::get_primitive  (
-    IR::PrimitiveKind kind,
+    IR_PrimitiveKind kind,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1049,7 +932,7 @@
   ))
 {
   return this->ptr_->get_primitive (
-kind,
+    kind,
     ACE_TRY_ENV
   );
 }
@@ -1064,7 +947,7 @@
   ))
 {
   return this->ptr_->create_string (
-bound,
+    bound,
     ACE_TRY_ENV
   );
 }
@@ -1079,7 +962,7 @@
   ))
 {
   return this->ptr_->create_wstring (
-bound,
+    bound,
     ACE_TRY_ENV
   );
 }
@@ -1087,7 +970,7 @@
 template <class T> ACE_INLINE
 IR::SequenceDef_ptr POA_IR::Repository_tie<T>::create_sequence  (
     CORBA::ULong bound,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1095,7 +978,7 @@
   ))
 {
   return this->ptr_->create_sequence (
-bound,
+    bound,
     element_type,
     ACE_TRY_ENV
   );
@@ -1104,7 +987,7 @@
 template <class T> ACE_INLINE
 IR::ArrayDef_ptr POA_IR::Repository_tie<T>::create_array  (
     CORBA::ULong length,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1112,7 +995,7 @@
   ))
 {
   return this->ptr_->create_array (
-length,
+    length,
     element_type,
     ACE_TRY_ENV
   );
@@ -1129,7 +1012,7 @@
   ))
 {
   return this->ptr_->create_fixed (
-digits,
+    digits,
     scale,
     ACE_TRY_ENV
   );
@@ -1145,14 +1028,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::Repository_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1161,7 +1044,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -1171,7 +1054,7 @@
 IR::ContainedSeq * POA_IR::Repository_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1180,7 +1063,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -1190,7 +1073,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::Repository_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -1200,7 +1083,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -1219,7 +1102,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -1231,7 +1114,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1240,7 +1123,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -1254,7 +1137,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1262,7 +1145,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -1275,8 +1158,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1284,7 +1167,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -1298,7 +1181,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1306,7 +1189,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -1319,7 +1202,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1327,7 +1210,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -1340,7 +1223,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -1350,7 +1233,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -1367,11 +1250,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1379,7 +1262,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -1398,7 +1281,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1406,7 +1289,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -1419,7 +1302,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1427,7 +1310,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -1447,7 +1330,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -1463,7 +1346,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -1476,7 +1359,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -1552,12 +1435,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ComponentRepository_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ComponentRepository_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ComponentRepository::_default_POA (ACE_TRY_ENV);
+  return this->ComponentRepository::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -1565,8 +1448,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ComponentDef_ptr base_component,
-    const IR::InterfaceDefSeq & supports_interfaces,
+    IR_ComponentDef_ptr base_component,
+    const IR_InterfaceDefSeq & supports_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1574,7 +1457,7 @@
   ))
 {
   return this->ptr_->create_component (
-id,
+    id,
     name,
     version,
     base_component,
@@ -1588,9 +1471,9 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::HomeDef_ptr base_home,
-    IR::ComponentDef_ptr managed_component,
-    IR::ValueDef_ptr primary_key,
+    IR_HomeDef_ptr base_home,
+    IR_ComponentDef_ptr managed_component,
+    IR_ValueDef_ptr primary_key,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1598,7 +1481,7 @@
   ))
 {
   return this->ptr_->create_home (
-id,
+    id,
     name,
     version,
     base_home,
@@ -1618,7 +1501,7 @@
   ))
 {
   return this->ptr_->lookup_id (
-search_id,
+    search_id,
     ACE_TRY_ENV
   );
 }
@@ -1633,14 +1516,14 @@
   ))
 {
   return this->ptr_->get_canonical_typecode (
-tc,
+    tc,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::PrimitiveDef_ptr POA_IR::ComponentRepository_tie<T>::get_primitive  (
-    IR::PrimitiveKind kind,
+    IR_PrimitiveKind kind,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1648,7 +1531,7 @@
   ))
 {
   return this->ptr_->get_primitive (
-kind,
+    kind,
     ACE_TRY_ENV
   );
 }
@@ -1663,7 +1546,7 @@
   ))
 {
   return this->ptr_->create_string (
-bound,
+    bound,
     ACE_TRY_ENV
   );
 }
@@ -1678,7 +1561,7 @@
   ))
 {
   return this->ptr_->create_wstring (
-bound,
+    bound,
     ACE_TRY_ENV
   );
 }
@@ -1686,7 +1569,7 @@
 template <class T> ACE_INLINE
 IR::SequenceDef_ptr POA_IR::ComponentRepository_tie<T>::create_sequence  (
     CORBA::ULong bound,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1694,7 +1577,7 @@
   ))
 {
   return this->ptr_->create_sequence (
-bound,
+    bound,
     element_type,
     ACE_TRY_ENV
   );
@@ -1703,7 +1586,7 @@
 template <class T> ACE_INLINE
 IR::ArrayDef_ptr POA_IR::ComponentRepository_tie<T>::create_array  (
     CORBA::ULong length,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1711,7 +1594,7 @@
   ))
 {
   return this->ptr_->create_array (
-length,
+    length,
     element_type,
     ACE_TRY_ENV
   );
@@ -1728,7 +1611,7 @@
   ))
 {
   return this->ptr_->create_fixed (
-digits,
+    digits,
     scale,
     ACE_TRY_ENV
   );
@@ -1744,14 +1627,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::ComponentRepository_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1760,7 +1643,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -1770,7 +1653,7 @@
 IR::ContainedSeq * POA_IR::ComponentRepository_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1779,7 +1662,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -1789,7 +1672,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::ComponentRepository_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -1799,7 +1682,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -1818,7 +1701,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -1830,7 +1713,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1839,7 +1722,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -1853,7 +1736,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1861,7 +1744,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -1874,8 +1757,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1883,7 +1766,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -1897,7 +1780,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1905,7 +1788,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -1918,7 +1801,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1926,7 +1809,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -1939,7 +1822,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -1949,7 +1832,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -1966,11 +1849,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -1978,7 +1861,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -1997,7 +1880,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2005,7 +1888,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -2018,7 +1901,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2026,7 +1909,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -2046,7 +1929,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -2062,7 +1945,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2075,7 +1958,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2151,12 +2034,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ModuleDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ModuleDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ModuleDef::_default_POA (ACE_TRY_ENV);
+  return this->ModuleDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -2169,14 +2052,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::ModuleDef_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -2185,7 +2068,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -2195,7 +2078,7 @@
 IR::ContainedSeq * POA_IR::ModuleDef_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -2204,7 +2087,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -2214,7 +2097,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::ModuleDef_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -2224,7 +2107,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -2243,7 +2126,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -2255,7 +2138,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -2264,7 +2147,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -2278,7 +2161,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2286,7 +2169,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -2299,8 +2182,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2308,7 +2191,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -2322,7 +2205,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2330,7 +2213,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -2343,7 +2226,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2351,7 +2234,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -2364,7 +2247,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -2374,7 +2257,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -2391,11 +2274,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2403,7 +2286,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -2422,7 +2305,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2430,7 +2313,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -2443,7 +2326,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2451,7 +2334,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -2471,7 +2354,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -2487,7 +2370,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2501,7 +2384,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -2515,7 +2398,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2529,7 +2412,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -2543,7 +2426,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2557,7 +2440,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -2571,7 +2454,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2584,7 +2467,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2597,7 +2480,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2610,13 +2493,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ModuleDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -2626,7 +2509,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -2642,7 +2525,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2655,7 +2538,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2731,12 +2614,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ConstantDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ConstantDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ConstantDef::_default_POA (ACE_TRY_ENV);
+  return this->ConstantDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -2748,7 +2631,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2761,13 +2644,13 @@
   ))
 {
   return this->ptr_->type_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ConstantDef_tie<T>::type_def  (
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2775,7 +2658,7 @@
   ))
 {
   this->ptr_->type_def (
-type_def,
+    type_def,
     ACE_TRY_ENV
   );
 }
@@ -2789,7 +2672,7 @@
   ))
 {
   return this->ptr_->value (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2803,7 +2686,7 @@
   ))
 {
   this->ptr_->value (
-value,
+    value,
     ACE_TRY_ENV
   );
 }
@@ -2817,7 +2700,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2831,7 +2714,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -2845,7 +2728,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2859,7 +2742,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -2873,7 +2756,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2887,7 +2770,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -2901,7 +2784,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2914,7 +2797,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2927,7 +2810,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2940,13 +2823,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ConstantDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -2956,7 +2839,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -2972,7 +2855,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -2985,7 +2868,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3061,12 +2944,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::TypedefDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::TypedefDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->TypedefDef::_default_POA (ACE_TRY_ENV);
+  return this->TypedefDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -3078,7 +2961,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3092,7 +2975,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -3106,7 +2989,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3120,7 +3003,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -3134,7 +3017,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3148,7 +3031,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -3162,7 +3045,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3175,7 +3058,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3188,7 +3071,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3201,13 +3084,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::TypedefDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -3217,7 +3100,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -3233,7 +3116,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3246,7 +3129,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3259,7 +3142,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3335,12 +3218,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::StructDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::StructDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->StructDef::_default_POA (ACE_TRY_ENV);
+  return this->StructDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -3352,13 +3235,13 @@
   ))
 {
   return this->ptr_->members (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::StructDef_tie<T>::members  (
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3366,7 +3249,7 @@
   ))
 {
   this->ptr_->members (
-members,
+    members,
     ACE_TRY_ENV
   );
 }
@@ -3381,14 +3264,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::StructDef_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -3397,7 +3280,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -3407,7 +3290,7 @@
 IR::ContainedSeq * POA_IR::StructDef_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -3416,7 +3299,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -3426,7 +3309,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::StructDef_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -3436,7 +3319,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -3455,7 +3338,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -3467,7 +3350,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -3476,7 +3359,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -3490,7 +3373,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3498,7 +3381,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -3511,8 +3394,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3520,7 +3403,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -3534,7 +3417,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3542,7 +3425,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -3555,7 +3438,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3563,7 +3446,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -3576,7 +3459,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -3586,7 +3469,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -3603,11 +3486,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3615,7 +3498,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -3634,7 +3517,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3642,7 +3525,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -3655,7 +3538,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3663,7 +3546,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -3683,7 +3566,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -3699,7 +3582,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3713,7 +3596,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -3727,7 +3610,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3741,7 +3624,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -3755,7 +3638,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3769,7 +3652,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -3783,7 +3666,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3796,7 +3679,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3809,7 +3692,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3822,13 +3705,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::StructDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -3838,7 +3721,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -3854,7 +3737,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3867,7 +3750,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3880,7 +3763,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3956,12 +3839,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::UnionDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::UnionDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->UnionDef::_default_POA (ACE_TRY_ENV);
+  return this->UnionDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -3973,7 +3856,7 @@
   ))
 {
   return this->ptr_->discriminator_type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -3986,13 +3869,13 @@
   ))
 {
   return this->ptr_->discriminator_type_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::UnionDef_tie<T>::discriminator_type_def  (
-    IR::IDLType_ptr discriminator_type_def,
+    IR_IDLType_ptr discriminator_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4000,7 +3883,7 @@
   ))
 {
   this->ptr_->discriminator_type_def (
-discriminator_type_def,
+    discriminator_type_def,
     ACE_TRY_ENV
   );
 }
@@ -4014,13 +3897,13 @@
   ))
 {
   return this->ptr_->members (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::UnionDef_tie<T>::members  (
-    const IR::UnionMemberSeq & members,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4028,7 +3911,7 @@
   ))
 {
   this->ptr_->members (
-members,
+    members,
     ACE_TRY_ENV
   );
 }
@@ -4043,14 +3926,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::UnionDef_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -4059,7 +3942,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -4069,7 +3952,7 @@
 IR::ContainedSeq * POA_IR::UnionDef_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -4078,7 +3961,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -4088,7 +3971,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::UnionDef_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -4098,7 +3981,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -4117,7 +4000,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -4129,7 +4012,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -4138,7 +4021,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -4152,7 +4035,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4160,7 +4043,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -4173,8 +4056,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4182,7 +4065,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -4196,7 +4079,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4204,7 +4087,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -4217,7 +4100,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4225,7 +4108,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -4238,7 +4121,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -4248,7 +4131,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -4265,11 +4148,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4277,7 +4160,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -4296,7 +4179,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4304,7 +4187,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -4317,7 +4200,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4325,7 +4208,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -4345,7 +4228,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -4361,7 +4244,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4375,7 +4258,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -4389,7 +4272,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4403,7 +4286,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -4417,7 +4300,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4431,7 +4314,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -4445,7 +4328,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4458,7 +4341,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4471,7 +4354,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4484,13 +4367,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::UnionDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -4500,7 +4383,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -4516,7 +4399,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4529,7 +4412,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4542,7 +4425,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4618,12 +4501,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::EnumDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::EnumDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->EnumDef::_default_POA (ACE_TRY_ENV);
+  return this->EnumDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -4635,13 +4518,13 @@
   ))
 {
   return this->ptr_->members (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::EnumDef_tie<T>::members  (
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4649,7 +4532,7 @@
   ))
 {
   this->ptr_->members (
-members,
+    members,
     ACE_TRY_ENV
   );
 }
@@ -4663,7 +4546,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4677,7 +4560,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -4691,7 +4574,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4705,7 +4588,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -4719,7 +4602,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4733,7 +4616,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -4747,7 +4630,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4760,7 +4643,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4773,7 +4656,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4786,13 +4669,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::EnumDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -4802,7 +4685,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -4818,7 +4701,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4831,7 +4714,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4844,7 +4727,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4920,12 +4803,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::AliasDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::AliasDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->AliasDef::_default_POA (ACE_TRY_ENV);
+  return this->AliasDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -4937,13 +4820,13 @@
   ))
 {
   return this->ptr_->original_type_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::AliasDef_tie<T>::original_type_def  (
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -4951,7 +4834,7 @@
   ))
 {
   this->ptr_->original_type_def (
-original_type_def,
+    original_type_def,
     ACE_TRY_ENV
   );
 }
@@ -4965,7 +4848,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -4979,7 +4862,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -4993,7 +4876,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5007,7 +4890,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -5021,7 +4904,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5035,7 +4918,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -5049,7 +4932,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5062,7 +4945,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5075,7 +4958,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5088,13 +4971,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::AliasDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -5104,7 +4987,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -5120,7 +5003,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5133,7 +5016,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5146,7 +5029,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5222,12 +5105,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::NativeDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::NativeDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->NativeDef::_default_POA (ACE_TRY_ENV);
+  return this->NativeDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -5239,7 +5122,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5253,7 +5136,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -5267,7 +5150,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5281,7 +5164,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -5295,7 +5178,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5309,7 +5192,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -5323,7 +5206,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5336,7 +5219,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5349,7 +5232,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5362,13 +5245,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::NativeDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -5378,7 +5261,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -5394,7 +5277,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5407,7 +5290,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5420,7 +5303,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5496,12 +5379,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::PrimitiveDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::PrimitiveDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->PrimitiveDef::_default_POA (ACE_TRY_ENV);
+  return this->PrimitiveDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -5513,7 +5396,7 @@
   ))
 {
   return this->ptr_->kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5526,7 +5409,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5539,7 +5422,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5552,7 +5435,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5628,12 +5511,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::StringDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::StringDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->StringDef::_default_POA (ACE_TRY_ENV);
+  return this->StringDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -5645,7 +5528,7 @@
   ))
 {
   return this->ptr_->bound (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5659,7 +5542,7 @@
   ))
 {
   this->ptr_->bound (
-bound,
+    bound,
     ACE_TRY_ENV
   );
 }
@@ -5673,7 +5556,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5686,7 +5569,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5699,7 +5582,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5775,12 +5658,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::WstringDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::WstringDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->WstringDef::_default_POA (ACE_TRY_ENV);
+  return this->WstringDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -5792,7 +5675,7 @@
   ))
 {
   return this->ptr_->bound (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5806,7 +5689,7 @@
   ))
 {
   this->ptr_->bound (
-bound,
+    bound,
     ACE_TRY_ENV
   );
 }
@@ -5820,7 +5703,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5833,7 +5716,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5846,7 +5729,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5922,12 +5805,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::FixedDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::FixedDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->FixedDef::_default_POA (ACE_TRY_ENV);
+  return this->FixedDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -5939,7 +5822,7 @@
   ))
 {
   return this->ptr_->digits (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5953,7 +5836,7 @@
   ))
 {
   this->ptr_->digits (
-digits,
+    digits,
     ACE_TRY_ENV
   );
 }
@@ -5967,7 +5850,7 @@
   ))
 {
   return this->ptr_->scale (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -5981,7 +5864,7 @@
   ))
 {
   this->ptr_->scale (
-scale,
+    scale,
     ACE_TRY_ENV
   );
 }
@@ -5995,7 +5878,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6008,7 +5891,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6021,7 +5904,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6097,12 +5980,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::SequenceDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::SequenceDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->SequenceDef::_default_POA (ACE_TRY_ENV);
+  return this->SequenceDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -6114,7 +5997,7 @@
   ))
 {
   return this->ptr_->bound (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6128,7 +6011,7 @@
   ))
 {
   this->ptr_->bound (
-bound,
+    bound,
     ACE_TRY_ENV
   );
 }
@@ -6142,7 +6025,7 @@
   ))
 {
   return this->ptr_->element_type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6155,13 +6038,13 @@
   ))
 {
   return this->ptr_->element_type_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::SequenceDef_tie<T>::element_type_def  (
-    IR::IDLType_ptr element_type_def,
+    IR_IDLType_ptr element_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6169,7 +6052,7 @@
   ))
 {
   this->ptr_->element_type_def (
-element_type_def,
+    element_type_def,
     ACE_TRY_ENV
   );
 }
@@ -6183,7 +6066,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6196,7 +6079,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6209,7 +6092,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6285,12 +6168,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ArrayDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ArrayDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ArrayDef::_default_POA (ACE_TRY_ENV);
+  return this->ArrayDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -6302,7 +6185,7 @@
   ))
 {
   return this->ptr_->length (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6316,7 +6199,7 @@
   ))
 {
   this->ptr_->length (
-length,
+    length,
     ACE_TRY_ENV
   );
 }
@@ -6330,7 +6213,7 @@
   ))
 {
   return this->ptr_->element_type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6343,13 +6226,13 @@
   ))
 {
   return this->ptr_->element_type_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ArrayDef_tie<T>::element_type_def  (
-    IR::IDLType_ptr element_type_def,
+    IR_IDLType_ptr element_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6357,7 +6240,7 @@
   ))
 {
   this->ptr_->element_type_def (
-element_type_def,
+    element_type_def,
     ACE_TRY_ENV
   );
 }
@@ -6371,7 +6254,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6384,7 +6267,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6397,7 +6280,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6473,12 +6356,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ExceptionDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ExceptionDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ExceptionDef::_default_POA (ACE_TRY_ENV);
+  return this->ExceptionDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -6490,7 +6373,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6503,13 +6386,13 @@
   ))
 {
   return this->ptr_->members (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ExceptionDef_tie<T>::members  (
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6517,7 +6400,7 @@
   ))
 {
   this->ptr_->members (
-members,
+    members,
     ACE_TRY_ENV
   );
 }
@@ -6531,7 +6414,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6545,7 +6428,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -6559,7 +6442,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6573,7 +6456,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -6587,7 +6470,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6601,7 +6484,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -6615,7 +6498,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6628,7 +6511,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6641,7 +6524,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -6654,13 +6537,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ExceptionDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -6670,7 +6553,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -6687,14 +6570,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::ExceptionDef_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -6703,7 +6586,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -6713,7 +6596,7 @@
 IR::ContainedSeq * POA_IR::ExceptionDef_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -6722,7 +6605,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -6732,7 +6615,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::ExceptionDef_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -6742,7 +6625,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -6761,7 +6644,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -6773,7 +6656,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -6782,7 +6665,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -6796,7 +6679,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6804,7 +6687,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -6817,8 +6700,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6826,7 +6709,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -6840,7 +6723,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6848,7 +6731,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -6861,7 +6744,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6869,7 +6752,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -6882,7 +6765,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -6892,7 +6775,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -6909,11 +6792,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6921,7 +6804,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -6940,7 +6823,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6948,7 +6831,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -6961,7 +6844,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -6969,7 +6852,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -6989,7 +6872,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -7005,7 +6888,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7018,7 +6901,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7094,12 +6977,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::AttributeDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::AttributeDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->AttributeDef::_default_POA (ACE_TRY_ENV);
+  return this->AttributeDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -7111,7 +6994,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7124,13 +7007,13 @@
   ))
 {
   return this->ptr_->type_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::AttributeDef_tie<T>::type_def  (
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7138,7 +7021,7 @@
   ))
 {
   this->ptr_->type_def (
-type_def,
+    type_def,
     ACE_TRY_ENV
   );
 }
@@ -7152,13 +7035,13 @@
   ))
 {
   return this->ptr_->mode (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::AttributeDef_tie<T>::mode  (
-    IR::AttributeMode mode,
+    IR_AttributeMode mode,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7166,7 +7049,7 @@
   ))
 {
   this->ptr_->mode (
-mode,
+    mode,
     ACE_TRY_ENV
   );
 }
@@ -7180,7 +7063,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7194,7 +7077,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -7208,7 +7091,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7222,7 +7105,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -7236,7 +7119,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7250,7 +7133,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -7264,7 +7147,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7277,7 +7160,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7290,7 +7173,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7303,13 +7186,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::AttributeDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -7319,7 +7202,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -7335,7 +7218,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7348,7 +7231,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7424,12 +7307,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::OperationDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::OperationDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->OperationDef::_default_POA (ACE_TRY_ENV);
+  return this->OperationDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -7441,7 +7324,7 @@
   ))
 {
   return this->ptr_->result (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7454,13 +7337,13 @@
   ))
 {
   return this->ptr_->result_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::OperationDef_tie<T>::result_def  (
-    IR::IDLType_ptr result_def,
+    IR_IDLType_ptr result_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7468,7 +7351,7 @@
   ))
 {
   this->ptr_->result_def (
-result_def,
+    result_def,
     ACE_TRY_ENV
   );
 }
@@ -7482,13 +7365,13 @@
   ))
 {
   return this->ptr_->params (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::OperationDef_tie<T>::params  (
-    const IR::ParDescriptionSeq & params,
+    const IR_ParDescriptionSeq & params,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7496,7 +7379,7 @@
   ))
 {
   this->ptr_->params (
-params,
+    params,
     ACE_TRY_ENV
   );
 }
@@ -7510,13 +7393,13 @@
   ))
 {
   return this->ptr_->mode (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::OperationDef_tie<T>::mode  (
-    IR::OperationMode mode,
+    IR_OperationMode mode,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7524,7 +7407,7 @@
   ))
 {
   this->ptr_->mode (
-mode,
+    mode,
     ACE_TRY_ENV
   );
 }
@@ -7538,13 +7421,13 @@
   ))
 {
   return this->ptr_->contexts (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::OperationDef_tie<T>::contexts  (
-    const IR::ContextIdSeq & contexts,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7552,7 +7435,7 @@
   ))
 {
   this->ptr_->contexts (
-contexts,
+    contexts,
     ACE_TRY_ENV
   );
 }
@@ -7566,13 +7449,13 @@
   ))
 {
   return this->ptr_->exceptions (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::OperationDef_tie<T>::exceptions  (
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7580,7 +7463,7 @@
   ))
 {
   this->ptr_->exceptions (
-exceptions,
+    exceptions,
     ACE_TRY_ENV
   );
 }
@@ -7594,7 +7477,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7608,7 +7491,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -7622,7 +7505,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7636,7 +7519,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -7650,7 +7533,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7664,7 +7547,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -7678,7 +7561,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7691,7 +7574,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7704,7 +7587,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7717,13 +7600,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::OperationDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -7733,7 +7616,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -7749,7 +7632,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7762,7 +7645,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7838,12 +7721,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::InterfaceDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::InterfaceDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->InterfaceDef::_default_POA (ACE_TRY_ENV);
+  return this->InterfaceDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -7855,13 +7738,13 @@
   ))
 {
   return this->ptr_->base_interfaces (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::InterfaceDef_tie<T>::base_interfaces  (
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7869,7 +7752,7 @@
   ))
 {
   this->ptr_->base_interfaces (
-base_interfaces,
+    base_interfaces,
     ACE_TRY_ENV
   );
 }
@@ -7883,7 +7766,7 @@
   ))
 {
   return this->ptr_->is_abstract (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7897,7 +7780,7 @@
   ))
 {
   this->ptr_->is_abstract (
-is_abstract,
+    is_abstract,
     ACE_TRY_ENV
   );
 }
@@ -7911,7 +7794,7 @@
   ))
 {
   return this->ptr_->is_local (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -7925,7 +7808,7 @@
   ))
 {
   this->ptr_->is_local (
-is_local,
+    is_local,
     ACE_TRY_ENV
   );
 }
@@ -7940,7 +7823,7 @@
   ))
 {
   return this->ptr_->is_a (
-interface_id,
+    interface_id,
     ACE_TRY_ENV
   );
 }
@@ -7950,10 +7833,10 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7961,7 +7844,7 @@
   ))
 {
   return this->ptr_->create_attribute (
-id,
+    id,
     name,
     version,
     type,
@@ -7977,11 +7860,11 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -7989,7 +7872,7 @@
   ))
 {
   return this->ptr_->create_operation (
-id,
+    id,
     name,
     version,
     result,
@@ -8011,14 +7894,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::InterfaceDef_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -8027,7 +7910,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -8037,7 +7920,7 @@
 IR::ContainedSeq * POA_IR::InterfaceDef_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -8046,7 +7929,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -8056,7 +7939,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::InterfaceDef_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -8066,7 +7949,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -8085,7 +7968,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -8097,7 +7980,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -8106,7 +7989,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -8120,7 +8003,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8128,7 +8011,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -8141,8 +8024,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8150,7 +8033,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -8164,7 +8047,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8172,7 +8055,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -8185,7 +8068,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8193,7 +8076,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -8206,7 +8089,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -8216,7 +8099,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -8233,11 +8116,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8245,7 +8128,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -8264,7 +8147,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8272,7 +8155,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -8285,7 +8168,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8293,7 +8176,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -8313,7 +8196,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -8329,7 +8212,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8343,7 +8226,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -8357,7 +8240,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8371,7 +8254,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -8385,7 +8268,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8399,7 +8282,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -8413,7 +8296,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8426,7 +8309,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8439,7 +8322,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8452,13 +8335,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::InterfaceDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -8468,7 +8351,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -8484,7 +8367,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8497,7 +8380,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8510,7 +8393,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8586,12 +8469,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ValueMemberDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ValueMemberDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ValueMemberDef::_default_POA (ACE_TRY_ENV);
+  return this->ValueMemberDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -8603,7 +8486,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8616,13 +8499,13 @@
   ))
 {
   return this->ptr_->type_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueMemberDef_tie<T>::type_def  (
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8630,7 +8513,7 @@
   ))
 {
   this->ptr_->type_def (
-type_def,
+    type_def,
     ACE_TRY_ENV
   );
 }
@@ -8644,7 +8527,7 @@
   ))
 {
   return this->ptr_->access (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8658,7 +8541,7 @@
   ))
 {
   this->ptr_->access (
-access,
+    access,
     ACE_TRY_ENV
   );
 }
@@ -8672,7 +8555,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8686,7 +8569,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -8700,7 +8583,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8714,7 +8597,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -8728,7 +8611,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8742,7 +8625,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -8756,7 +8639,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8769,7 +8652,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8782,7 +8665,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8795,13 +8678,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueMemberDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -8811,7 +8694,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -8827,7 +8710,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8840,7 +8723,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -8916,12 +8799,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ValueDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ValueDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ValueDef::_default_POA (ACE_TRY_ENV);
+  return this->ValueDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -8933,13 +8816,13 @@
   ))
 {
   return this->ptr_->supported_interfaces (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueDef_tie<T>::supported_interfaces  (
-    const IR::InterfaceDefSeq & supported_interfaces,
+    const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8947,7 +8830,7 @@
   ))
 {
   this->ptr_->supported_interfaces (
-supported_interfaces,
+    supported_interfaces,
     ACE_TRY_ENV
   );
 }
@@ -8961,13 +8844,13 @@
   ))
 {
   return this->ptr_->initializers (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueDef_tie<T>::initializers  (
-    const IR::InitializerSeq & initializers,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -8975,7 +8858,7 @@
   ))
 {
   this->ptr_->initializers (
-initializers,
+    initializers,
     ACE_TRY_ENV
   );
 }
@@ -8989,13 +8872,13 @@
   ))
 {
   return this->ptr_->base_value (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueDef_tie<T>::base_value  (
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9003,7 +8886,7 @@
   ))
 {
   this->ptr_->base_value (
-base_value,
+    base_value,
     ACE_TRY_ENV
   );
 }
@@ -9017,13 +8900,13 @@
   ))
 {
   return this->ptr_->abstract_base_values (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueDef_tie<T>::abstract_base_values  (
-    const IR::ValueDefSeq & abstract_base_values,
+    const IR_ValueDefSeq & abstract_base_values,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9031,7 +8914,7 @@
   ))
 {
   this->ptr_->abstract_base_values (
-abstract_base_values,
+    abstract_base_values,
     ACE_TRY_ENV
   );
 }
@@ -9045,7 +8928,7 @@
   ))
 {
   return this->ptr_->is_abstract (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9059,7 +8942,7 @@
   ))
 {
   this->ptr_->is_abstract (
-is_abstract,
+    is_abstract,
     ACE_TRY_ENV
   );
 }
@@ -9073,7 +8956,7 @@
   ))
 {
   return this->ptr_->is_custom (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9087,7 +8970,7 @@
   ))
 {
   this->ptr_->is_custom (
-is_custom,
+    is_custom,
     ACE_TRY_ENV
   );
 }
@@ -9101,7 +8984,7 @@
   ))
 {
   return this->ptr_->is_truncatable (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9115,7 +8998,7 @@
   ))
 {
   this->ptr_->is_truncatable (
-is_truncatable,
+    is_truncatable,
     ACE_TRY_ENV
   );
 }
@@ -9130,7 +9013,7 @@
   ))
 {
   return this->ptr_->is_a (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -9140,7 +9023,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     CORBA::Visibility access,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -9149,7 +9032,7 @@
   ))
 {
   return this->ptr_->create_value_member (
-id,
+    id,
     name,
     version,
     type,
@@ -9163,10 +9046,10 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9174,7 +9057,7 @@
   ))
 {
   return this->ptr_->create_attribute (
-id,
+    id,
     name,
     version,
     type,
@@ -9190,11 +9073,11 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9202,7 +9085,7 @@
   ))
 {
   return this->ptr_->create_operation (
-id,
+    id,
     name,
     version,
     result,
@@ -9224,14 +9107,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::ValueDef_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -9240,7 +9123,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -9250,7 +9133,7 @@
 IR::ContainedSeq * POA_IR::ValueDef_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -9259,7 +9142,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -9269,7 +9152,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::ValueDef_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -9279,7 +9162,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -9298,7 +9181,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -9310,7 +9193,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -9319,7 +9202,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -9333,7 +9216,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9341,7 +9224,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -9354,8 +9237,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9363,7 +9246,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -9377,7 +9260,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9385,7 +9268,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -9398,7 +9281,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9406,7 +9289,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -9419,7 +9302,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -9429,7 +9312,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -9446,11 +9329,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9458,7 +9341,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -9477,7 +9360,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9485,7 +9368,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -9498,7 +9381,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9506,7 +9389,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -9526,7 +9409,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -9542,7 +9425,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9556,7 +9439,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -9570,7 +9453,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9584,7 +9467,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -9598,7 +9481,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9612,7 +9495,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -9626,7 +9509,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9639,7 +9522,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9652,7 +9535,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9665,13 +9548,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -9681,7 +9564,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -9697,7 +9580,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9710,7 +9593,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9723,7 +9606,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9799,12 +9682,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ValueBoxDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ValueBoxDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ValueBoxDef::_default_POA (ACE_TRY_ENV);
+  return this->ValueBoxDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -9816,13 +9699,13 @@
   ))
 {
   return this->ptr_->original_type_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueBoxDef_tie<T>::original_type_def  (
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9830,7 +9713,7 @@
   ))
 {
   this->ptr_->original_type_def (
-original_type_def,
+    original_type_def,
     ACE_TRY_ENV
   );
 }
@@ -9844,7 +9727,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9858,7 +9741,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -9872,7 +9755,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9886,7 +9769,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -9900,7 +9783,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9914,7 +9797,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -9928,7 +9811,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9941,7 +9824,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9954,7 +9837,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -9967,13 +9850,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ValueBoxDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -9983,7 +9866,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -9999,7 +9882,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10012,7 +9895,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10025,7 +9908,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10101,12 +9984,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ProvidesDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ProvidesDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ProvidesDef::_default_POA (ACE_TRY_ENV);
+  return this->ProvidesDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -10118,7 +10001,7 @@
   ))
 {
   return this->ptr_->interface_type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10131,7 +10014,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10145,7 +10028,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -10159,7 +10042,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10173,7 +10056,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -10187,7 +10070,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10201,7 +10084,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -10215,7 +10098,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10228,7 +10111,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10241,7 +10124,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10254,13 +10137,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ProvidesDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -10270,7 +10153,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -10286,7 +10169,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10299,7 +10182,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10375,12 +10258,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::UsesDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::UsesDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->UsesDef::_default_POA (ACE_TRY_ENV);
+  return this->UsesDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -10392,7 +10275,7 @@
   ))
 {
   return this->ptr_->interface_type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10405,7 +10288,7 @@
   ))
 {
   return this->ptr_->is_multiple (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10418,7 +10301,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10432,7 +10315,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -10446,7 +10329,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10460,7 +10343,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -10474,7 +10357,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10488,7 +10371,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -10502,7 +10385,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10515,7 +10398,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10528,7 +10411,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10541,13 +10424,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::UsesDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -10557,7 +10440,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -10573,7 +10456,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10586,7 +10469,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10662,12 +10545,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::EventDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::EventDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->EventDef::_default_POA (ACE_TRY_ENV);
+  return this->EventDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -10680,7 +10563,7 @@
   ))
 {
   return this->ptr_->is_a (
-event_id,
+    event_id,
     ACE_TRY_ENV
   );
 }
@@ -10694,7 +10577,7 @@
   ))
 {
   return this->ptr_->event (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10707,7 +10590,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10721,7 +10604,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -10735,7 +10618,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10749,7 +10632,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -10763,7 +10646,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10777,7 +10660,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -10791,7 +10674,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10804,7 +10687,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10817,7 +10700,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10830,13 +10713,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::EventDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -10846,7 +10729,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -10862,7 +10745,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10875,7 +10758,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10951,12 +10834,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::EmitsDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::EmitsDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->EmitsDef::_default_POA (ACE_TRY_ENV);
+  return this->EmitsDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -10969,7 +10852,7 @@
   ))
 {
   return this->ptr_->is_a (
-event_id,
+    event_id,
     ACE_TRY_ENV
   );
 }
@@ -10983,7 +10866,7 @@
   ))
 {
   return this->ptr_->event (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -10996,7 +10879,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11010,7 +10893,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -11024,7 +10907,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11038,7 +10921,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -11052,7 +10935,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11066,7 +10949,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -11080,7 +10963,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11093,7 +10976,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11106,7 +10989,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11119,13 +11002,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::EmitsDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -11135,7 +11018,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -11151,7 +11034,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11164,7 +11047,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11240,12 +11123,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::PublishesDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::PublishesDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->PublishesDef::_default_POA (ACE_TRY_ENV);
+  return this->PublishesDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -11258,7 +11141,7 @@
   ))
 {
   return this->ptr_->is_a (
-event_id,
+    event_id,
     ACE_TRY_ENV
   );
 }
@@ -11272,7 +11155,7 @@
   ))
 {
   return this->ptr_->event (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11285,7 +11168,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11299,7 +11182,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -11313,7 +11196,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11327,7 +11210,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -11341,7 +11224,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11355,7 +11238,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -11369,7 +11252,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11382,7 +11265,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11395,7 +11278,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11408,13 +11291,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::PublishesDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -11424,7 +11307,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -11440,7 +11323,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11453,7 +11336,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11529,12 +11412,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ConsumesDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ConsumesDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ConsumesDef::_default_POA (ACE_TRY_ENV);
+  return this->ConsumesDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -11547,7 +11430,7 @@
   ))
 {
   return this->ptr_->is_a (
-event_id,
+    event_id,
     ACE_TRY_ENV
   );
 }
@@ -11561,7 +11444,7 @@
   ))
 {
   return this->ptr_->event (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11574,7 +11457,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11588,7 +11471,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -11602,7 +11485,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11616,7 +11499,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -11630,7 +11513,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11644,7 +11527,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -11658,7 +11541,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11671,7 +11554,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11684,7 +11567,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11697,13 +11580,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ConsumesDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -11713,7 +11596,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -11729,7 +11612,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11742,7 +11625,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11818,12 +11701,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::ComponentDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::ComponentDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->ComponentDef::_default_POA (ACE_TRY_ENV);
+  return this->ComponentDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -11835,13 +11718,13 @@
   ))
 {
   return this->ptr_->supported_interfaces (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ComponentDef_tie<T>::supported_interfaces  (
-    const IR::InterfaceDefSeq & supported_interfaces,
+    const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -11849,7 +11732,7 @@
   ))
 {
   this->ptr_->supported_interfaces (
-supported_interfaces,
+    supported_interfaces,
     ACE_TRY_ENV
   );
 }
@@ -11863,7 +11746,7 @@
   ))
 {
   return this->ptr_->base_component (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11876,7 +11759,7 @@
   ))
 {
   return this->ptr_->provides_interfaces (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11889,7 +11772,7 @@
   ))
 {
   return this->ptr_->uses_interfaces (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11902,7 +11785,7 @@
   ))
 {
   return this->ptr_->emits_events (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11915,7 +11798,7 @@
   ))
 {
   return this->ptr_->publishes_events (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11928,7 +11811,7 @@
   ))
 {
   return this->ptr_->consumes_events (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11941,7 +11824,7 @@
   ))
 {
   return this->ptr_->is_basic (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -11950,7 +11833,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+    IR_InterfaceDef_ptr interface_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -11958,7 +11841,7 @@
   ))
 {
   return this->ptr_->create_provides (
-id,
+    id,
     name,
     version,
     interface_type,
@@ -11971,7 +11854,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+    IR_InterfaceDef_ptr interface_type,
     CORBA::Boolean is_multiple,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -11980,7 +11863,7 @@
   ))
 {
   return this->ptr_->create_uses (
-id,
+    id,
     name,
     version,
     interface_type,
@@ -11994,7 +11877,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12002,7 +11885,7 @@
   ))
 {
   return this->ptr_->create_emits (
-id,
+    id,
     name,
     version,
     value,
@@ -12015,7 +11898,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12023,7 +11906,7 @@
   ))
 {
   return this->ptr_->create_publishes (
-id,
+    id,
     name,
     version,
     value,
@@ -12036,7 +11919,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12044,7 +11927,7 @@
   ))
 {
   return this->ptr_->create_consumes (
-id,
+    id,
     name,
     version,
     value,
@@ -12061,13 +11944,13 @@
   ))
 {
   return this->ptr_->base_interfaces (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ComponentDef_tie<T>::base_interfaces  (
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12075,7 +11958,7 @@
   ))
 {
   this->ptr_->base_interfaces (
-base_interfaces,
+    base_interfaces,
     ACE_TRY_ENV
   );
 }
@@ -12089,7 +11972,7 @@
   ))
 {
   return this->ptr_->is_abstract (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12103,7 +11986,7 @@
   ))
 {
   this->ptr_->is_abstract (
-is_abstract,
+    is_abstract,
     ACE_TRY_ENV
   );
 }
@@ -12117,7 +12000,7 @@
   ))
 {
   return this->ptr_->is_local (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12131,7 +12014,7 @@
   ))
 {
   this->ptr_->is_local (
-is_local,
+    is_local,
     ACE_TRY_ENV
   );
 }
@@ -12146,7 +12029,7 @@
   ))
 {
   return this->ptr_->is_a (
-interface_id,
+    interface_id,
     ACE_TRY_ENV
   );
 }
@@ -12156,10 +12039,10 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12167,7 +12050,7 @@
   ))
 {
   return this->ptr_->create_attribute (
-id,
+    id,
     name,
     version,
     type,
@@ -12183,11 +12066,11 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12195,7 +12078,7 @@
   ))
 {
   return this->ptr_->create_operation (
-id,
+    id,
     name,
     version,
     result,
@@ -12217,14 +12100,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::ComponentDef_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -12233,7 +12116,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -12243,7 +12126,7 @@
 IR::ContainedSeq * POA_IR::ComponentDef_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -12252,7 +12135,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -12262,7 +12145,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::ComponentDef_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -12272,7 +12155,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -12291,7 +12174,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -12303,7 +12186,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -12312,7 +12195,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -12326,7 +12209,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12334,7 +12217,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -12347,8 +12230,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12356,7 +12239,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -12370,7 +12253,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12378,7 +12261,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -12391,7 +12274,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12399,7 +12282,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -12412,7 +12295,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -12422,7 +12305,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -12439,11 +12322,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12451,7 +12334,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -12470,7 +12353,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12478,7 +12361,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -12491,7 +12374,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -12499,7 +12382,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -12519,7 +12402,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -12535,7 +12418,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12549,7 +12432,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -12563,7 +12446,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12577,7 +12460,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -12591,7 +12474,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12605,7 +12488,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -12619,7 +12502,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12632,7 +12515,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12645,7 +12528,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12658,13 +12541,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::ComponentDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -12674,7 +12557,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -12690,7 +12573,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12703,7 +12586,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12716,7 +12599,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12792,12 +12675,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::PrimaryKeyDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::PrimaryKeyDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->PrimaryKeyDef::_default_POA (ACE_TRY_ENV);
+  return this->PrimaryKeyDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -12810,7 +12693,7 @@
   ))
 {
   return this->ptr_->is_a (
-primary_key_id,
+    primary_key_id,
     ACE_TRY_ENV
   );
 }
@@ -12824,7 +12707,7 @@
   ))
 {
   return this->ptr_->primary_key (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12837,7 +12720,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12851,7 +12734,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -12865,7 +12748,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12879,7 +12762,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -12893,7 +12776,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12907,7 +12790,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -12921,7 +12804,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12934,7 +12817,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12947,7 +12830,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -12960,13 +12843,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::PrimaryKeyDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -12976,7 +12859,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -12992,7 +12875,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13005,7 +12888,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13081,12 +12964,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::FactoryDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::FactoryDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->FactoryDef::_default_POA (ACE_TRY_ENV);
+  return this->FactoryDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -13098,7 +12981,7 @@
   ))
 {
   return this->ptr_->result (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13111,13 +12994,13 @@
   ))
 {
   return this->ptr_->result_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FactoryDef_tie<T>::result_def  (
-    IR::IDLType_ptr result_def,
+    IR_IDLType_ptr result_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13125,7 +13008,7 @@
   ))
 {
   this->ptr_->result_def (
-result_def,
+    result_def,
     ACE_TRY_ENV
   );
 }
@@ -13139,13 +13022,13 @@
   ))
 {
   return this->ptr_->params (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FactoryDef_tie<T>::params  (
-    const IR::ParDescriptionSeq & params,
+    const IR_ParDescriptionSeq & params,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13153,7 +13036,7 @@
   ))
 {
   this->ptr_->params (
-params,
+    params,
     ACE_TRY_ENV
   );
 }
@@ -13167,13 +13050,13 @@
   ))
 {
   return this->ptr_->mode (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FactoryDef_tie<T>::mode  (
-    IR::OperationMode mode,
+    IR_OperationMode mode,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13181,7 +13064,7 @@
   ))
 {
   this->ptr_->mode (
-mode,
+    mode,
     ACE_TRY_ENV
   );
 }
@@ -13195,13 +13078,13 @@
   ))
 {
   return this->ptr_->contexts (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FactoryDef_tie<T>::contexts  (
-    const IR::ContextIdSeq & contexts,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13209,7 +13092,7 @@
   ))
 {
   this->ptr_->contexts (
-contexts,
+    contexts,
     ACE_TRY_ENV
   );
 }
@@ -13223,13 +13106,13 @@
   ))
 {
   return this->ptr_->exceptions (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FactoryDef_tie<T>::exceptions  (
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13237,7 +13120,7 @@
   ))
 {
   this->ptr_->exceptions (
-exceptions,
+    exceptions,
     ACE_TRY_ENV
   );
 }
@@ -13251,7 +13134,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13265,7 +13148,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -13279,7 +13162,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13293,7 +13176,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -13307,7 +13190,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13321,7 +13204,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -13335,7 +13218,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13348,7 +13231,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13361,7 +13244,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13374,13 +13257,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FactoryDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -13390,7 +13273,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -13406,7 +13289,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13419,7 +13302,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13495,12 +13378,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::FinderDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::FinderDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->FinderDef::_default_POA (ACE_TRY_ENV);
+  return this->FinderDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -13512,7 +13395,7 @@
   ))
 {
   return this->ptr_->result (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13525,13 +13408,13 @@
   ))
 {
   return this->ptr_->result_def (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FinderDef_tie<T>::result_def  (
-    IR::IDLType_ptr result_def,
+    IR_IDLType_ptr result_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13539,7 +13422,7 @@
   ))
 {
   this->ptr_->result_def (
-result_def,
+    result_def,
     ACE_TRY_ENV
   );
 }
@@ -13553,13 +13436,13 @@
   ))
 {
   return this->ptr_->params (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FinderDef_tie<T>::params  (
-    const IR::ParDescriptionSeq & params,
+    const IR_ParDescriptionSeq & params,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13567,7 +13450,7 @@
   ))
 {
   this->ptr_->params (
-params,
+    params,
     ACE_TRY_ENV
   );
 }
@@ -13581,13 +13464,13 @@
   ))
 {
   return this->ptr_->mode (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FinderDef_tie<T>::mode  (
-    IR::OperationMode mode,
+    IR_OperationMode mode,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13595,7 +13478,7 @@
   ))
 {
   this->ptr_->mode (
-mode,
+    mode,
     ACE_TRY_ENV
   );
 }
@@ -13609,13 +13492,13 @@
   ))
 {
   return this->ptr_->contexts (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FinderDef_tie<T>::contexts  (
-    const IR::ContextIdSeq & contexts,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13623,7 +13506,7 @@
   ))
 {
   this->ptr_->contexts (
-contexts,
+    contexts,
     ACE_TRY_ENV
   );
 }
@@ -13637,13 +13520,13 @@
   ))
 {
   return this->ptr_->exceptions (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FinderDef_tie<T>::exceptions  (
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13651,7 +13534,7 @@
   ))
 {
   this->ptr_->exceptions (
-exceptions,
+    exceptions,
     ACE_TRY_ENV
   );
 }
@@ -13665,7 +13548,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13679,7 +13562,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -13693,7 +13576,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13707,7 +13590,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -13721,7 +13604,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13735,7 +13618,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -13749,7 +13632,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13762,7 +13645,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13775,7 +13658,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13788,13 +13671,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::FinderDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -13804,7 +13687,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -13820,7 +13703,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13833,7 +13716,7 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13909,12 +13792,12 @@
 }
 
 template <class T> ACE_INLINE PortableServer::POA_ptr
-POA_IR::HomeDef_tie<T>::_default_POA (CORBA::Environment &ACE_TRY_ENV)
+POA_IR::HomeDef_tie<T>::_default_POA (CORBA::Environment &env)
 {
   if (!CORBA::is_nil (this->poa_.in ()))
     return PortableServer::POA::_duplicate (this->poa_.in ());
 
-  return this->HomeDef::_default_POA (ACE_TRY_ENV);
+  return this->HomeDef::_default_POA (env);
 }
 
 template <class T> ACE_INLINE
@@ -13926,7 +13809,7 @@
   ))
 {
   return this->ptr_->base_home (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13939,7 +13822,7 @@
   ))
 {
   return this->ptr_->managed_component (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13952,7 +13835,7 @@
   ))
 {
   return this->ptr_->primary_key (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13965,7 +13848,7 @@
   ))
 {
   return this->ptr_->factories (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13978,7 +13861,7 @@
   ))
 {
   return this->ptr_->finders (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -13991,7 +13874,7 @@
   ))
 {
   return this->ptr_->is_basic (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14000,7 +13883,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr primary_key,
+    IR_ValueDef_ptr primary_key,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14008,7 +13891,7 @@
   ))
 {
   return this->ptr_->create_primary_key (
-id,
+    id,
     name,
     version,
     primary_key,
@@ -14021,8 +13904,8 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14030,7 +13913,7 @@
   ))
 {
   return this->ptr_->create_factory (
-id,
+    id,
     name,
     version,
     params,
@@ -14044,8 +13927,8 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14053,7 +13936,7 @@
   ))
 {
   return this->ptr_->create_finder (
-id,
+    id,
     name,
     version,
     params,
@@ -14071,13 +13954,13 @@
   ))
 {
   return this->ptr_->base_interfaces (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::HomeDef_tie<T>::base_interfaces  (
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14085,7 +13968,7 @@
   ))
 {
   this->ptr_->base_interfaces (
-base_interfaces,
+    base_interfaces,
     ACE_TRY_ENV
   );
 }
@@ -14099,7 +13982,7 @@
   ))
 {
   return this->ptr_->is_abstract (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14113,7 +13996,7 @@
   ))
 {
   this->ptr_->is_abstract (
-is_abstract,
+    is_abstract,
     ACE_TRY_ENV
   );
 }
@@ -14127,7 +14010,7 @@
   ))
 {
   return this->ptr_->is_local (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14141,7 +14024,7 @@
   ))
 {
   this->ptr_->is_local (
-is_local,
+    is_local,
     ACE_TRY_ENV
   );
 }
@@ -14156,7 +14039,7 @@
   ))
 {
   return this->ptr_->is_a (
-interface_id,
+    interface_id,
     ACE_TRY_ENV
   );
 }
@@ -14166,10 +14049,10 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14177,7 +14060,7 @@
   ))
 {
   return this->ptr_->create_attribute (
-id,
+    id,
     name,
     version,
     type,
@@ -14193,11 +14076,11 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14205,7 +14088,7 @@
   ))
 {
   return this->ptr_->create_operation (
-id,
+    id,
     name,
     version,
     result,
@@ -14227,14 +14110,14 @@
   ))
 {
   return this->ptr_->lookup (
-search_name,
+    search_name,
     ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 IR::ContainedSeq * POA_IR::HomeDef_tie<T>::contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -14243,7 +14126,7 @@
   ))
 {
   return this->ptr_->contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     ACE_TRY_ENV
   );
@@ -14253,7 +14136,7 @@
 IR::ContainedSeq * POA_IR::HomeDef_tie<T>::lookup_name  (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -14262,7 +14145,7 @@
   ))
 {
   return this->ptr_->lookup_name (
-search_name,
+    search_name,
     levels_to_search,
     limit_type,
     exclude_inherited,
@@ -14272,7 +14155,7 @@
 
 template <class T> ACE_INLINE
 IR::Container::DescriptionSeq * POA_IR::HomeDef_tie<T>::describe_contents  (
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -14282,7 +14165,7 @@
   ))
 {
   return this->ptr_->describe_contents (
-limit_type,
+    limit_type,
     exclude_inherited,
     max_returned_objs,
     ACE_TRY_ENV
@@ -14301,7 +14184,7 @@
   ))
 {
   return this->ptr_->create_module (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -14313,7 +14196,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -14322,7 +14205,7 @@
   ))
 {
   return this->ptr_->create_constant (
-id,
+    id,
     name,
     version,
     type,
@@ -14336,7 +14219,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14344,7 +14227,7 @@
   ))
 {
   return this->ptr_->create_struct (
-id,
+    id,
     name,
     version,
     members,
@@ -14357,8 +14240,8 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14366,7 +14249,7 @@
   ))
 {
   return this->ptr_->create_union (
-id,
+    id,
     name,
     version,
     discriminator_type,
@@ -14380,7 +14263,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14388,7 +14271,7 @@
   ))
 {
   return this->ptr_->create_enum (
-id,
+    id,
     name,
     version,
     members,
@@ -14401,7 +14284,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14409,7 +14292,7 @@
   ))
 {
   return this->ptr_->create_alias (
-id,
+    id,
     name,
     version,
     original_type,
@@ -14422,7 +14305,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -14432,7 +14315,7 @@
   ))
 {
   return this->ptr_->create_interface (
-id,
+    id,
     name,
     version,
     base_interfaces,
@@ -14449,11 +14332,11 @@
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14461,7 +14344,7 @@
   ))
 {
   return this->ptr_->create_value (
-id,
+    id,
     name,
     version,
     is_custom,
@@ -14480,7 +14363,7 @@
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14488,7 +14371,7 @@
   ))
 {
   return this->ptr_->create_value_box (
-id,
+    id,
     name,
     version,
     original_type_def,
@@ -14501,7 +14384,7 @@
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14509,7 +14392,7 @@
   ))
 {
   return this->ptr_->create_exception (
-id,
+    id,
     name,
     version,
     members,
@@ -14529,7 +14412,7 @@
   ))
 {
   return this->ptr_->create_native (
-id,
+    id,
     name,
     version,
     ACE_TRY_ENV
@@ -14545,7 +14428,7 @@
   ))
 {
   return this->ptr_->id (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14559,7 +14442,7 @@
   ))
 {
   this->ptr_->id (
-id,
+    id,
     ACE_TRY_ENV
   );
 }
@@ -14573,7 +14456,7 @@
   ))
 {
   return this->ptr_->name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14587,7 +14470,7 @@
   ))
 {
   this->ptr_->name (
-name,
+    name,
     ACE_TRY_ENV
   );
 }
@@ -14601,7 +14484,7 @@
   ))
 {
   return this->ptr_->version (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14615,7 +14498,7 @@
   ))
 {
   this->ptr_->version (
-version,
+    version,
     ACE_TRY_ENV
   );
 }
@@ -14629,7 +14512,7 @@
   ))
 {
   return this->ptr_->defined_in (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14642,7 +14525,7 @@
   ))
 {
   return this->ptr_->absolute_name (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14655,7 +14538,7 @@
   ))
 {
   return this->ptr_->containing_repository (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14668,13 +14551,13 @@
   ))
 {
   return this->ptr_->describe (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 template <class T> ACE_INLINE
 void POA_IR::HomeDef_tie<T>::move  (
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -14684,7 +14567,7 @@
   ))
 {
   this->ptr_->move (
-new_container,
+    new_container,
     new_name,
     new_version,
     ACE_TRY_ENV
@@ -14700,7 +14583,7 @@
   ))
 {
   return this->ptr_->type (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14713,7 +14596,7 @@
   ))
 {
   return this->ptr_->def_kind (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
@@ -14726,8 +14609,9 @@
   ))
 {
   this->ptr_->destroy (
-ACE_TRY_ENV
+    ACE_TRY_ENV
   );
 }
 
 #endif /* ACE_HAS_USING_KEYWORD */
+
