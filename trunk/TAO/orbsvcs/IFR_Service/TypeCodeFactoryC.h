/* -*- C++ -*- $Id$ */

// ******  Code generated by the The ACE ORB (TAO) IDL Compiler *******
// TAO and the TAO IDL Compiler have been developed by the Center for
// Distributed Object Computing at Washington University, St. Louis.
//
// Information about TAO is available at:
//                 http://www.cs.wustl.edu/~schmidt/TAO.html

#ifndef TAO_TYPECODEFACTORYC_H
#define TAO_TYPECODEFACTORYC_H

#ifndef TAO_TYPECODEFACTORY_SAFE_INCLUDE
#error "You should not include TypeCodeFactoryC.h directly, use TCF_Loader.h"
#endif /* !TAO_TYPECODEFACTORY_SAFE_INCLUDE */

#include "ace/pre.h"
#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "TCF_Export.h"

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO TCF_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

class TCF_Export CORBA_TypeCodeFactory_var : public TAO_Base_var
{
public:
  CORBA_TypeCodeFactory_var (void); // default constructor
  CORBA_TypeCodeFactory_var (CORBA_TypeCodeFactory_ptr);
  CORBA_TypeCodeFactory_var (const CORBA_TypeCodeFactory_var &); // copy constructor
  ~CORBA_TypeCodeFactory_var (void); // destructor

  CORBA_TypeCodeFactory_var &operator= (CORBA_TypeCodeFactory_ptr);
  CORBA_TypeCodeFactory_var &operator= (const CORBA_TypeCodeFactory_var &);
  CORBA_TypeCodeFactory_ptr operator-> (void) const;

  operator const CORBA_TypeCodeFactory_ptr &() const;
  operator CORBA_TypeCodeFactory_ptr &();
  // in, inout, out, _retn
  CORBA_TypeCodeFactory_ptr in (void) const;
  CORBA_TypeCodeFactory_ptr &inout (void);
  CORBA_TypeCodeFactory_ptr &out (void);
  CORBA_TypeCodeFactory_ptr _retn (void);
  CORBA_TypeCodeFactory_ptr ptr (void) const;

private:
  CORBA_TypeCodeFactory_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  CORBA_TypeCodeFactory_var (const TAO_Base_var &rhs);
  CORBA_TypeCodeFactory_var &operator= (const TAO_Base_var &rhs);
};

class TCF_Export CORBA_TypeCodeFactory_out
{
public:
  CORBA_TypeCodeFactory_out (CORBA_TypeCodeFactory_ptr &);
  CORBA_TypeCodeFactory_out (CORBA_TypeCodeFactory_var &);
  CORBA_TypeCodeFactory_out (const CORBA_TypeCodeFactory_out &);
  CORBA_TypeCodeFactory_out &operator= (const CORBA_TypeCodeFactory_out &);
  CORBA_TypeCodeFactory_out &operator= (const CORBA_TypeCodeFactory_var &);
  CORBA_TypeCodeFactory_out &operator= (CORBA_TypeCodeFactory_ptr);
  operator CORBA_TypeCodeFactory_ptr &();
  CORBA_TypeCodeFactory_ptr &ptr (void);
  CORBA_TypeCodeFactory_ptr operator-> (void);

private:
  CORBA_TypeCodeFactory_ptr &ptr_;
};

class TCF_Export CORBA_TypeCodeFactory : public virtual ACE_CORBA_1 (Object)
  {
  public:
  #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
    typedef CORBA_TypeCodeFactory_ptr _ptr_type;
    typedef CORBA_TypeCodeFactory_var _var_type;
  #endif /* ! __GNUC__ || g++ >= 2.8 */

    // the static operations
    static CORBA_TypeCodeFactory_ptr _duplicate (CORBA_TypeCodeFactory_ptr obj);
    static CORBA_TypeCodeFactory_ptr _narrow (
        CORBA::Object_ptr obj,
        CORBA::Environment &env =
          TAO_default_environment ()
      );
    static CORBA_TypeCodeFactory_ptr _unchecked_narrow (
        CORBA::Object_ptr obj,
        CORBA::Environment &env =
          TAO_default_environment ()
      );
    static CORBA_TypeCodeFactory_ptr _nil (void)
      {
        return (CORBA_TypeCodeFactory_ptr)0;
      }

    virtual CORBA::TypeCode_ptr create_struct_tc (
        const char * id,
        const char * name,
        const IR_StructMemberSeq & members,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_union_tc (
        const char * id,
        const char * name,
        CORBA::TypeCode_ptr discriminator_type,
        const IR_UnionMemberSeq & members,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_enum_tc (
        const char * id,
        const char * name,
        const IR_EnumMemberSeq & members,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_alias_tc (
        const char * id,
        const char * name,
        CORBA::TypeCode_ptr original_type,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_exception_tc (
        const char * id,
        const char * name,
        const IR_StructMemberSeq & members,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_interface_tc (
        const char * id,
        const char * name,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_string_tc (
        CORBA::ULong bound,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_wstring_tc (
        CORBA::ULong bound,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_fixed_tc (
        CORBA::UShort digits,
        CORBA::UShort scale,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_sequence_tc (
        CORBA::ULong bound,
        CORBA::TypeCode_ptr element_type,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_array_tc (
        CORBA::ULong length,
        CORBA::TypeCode_ptr element_type,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_value_tc (
        const char * id,
        const char * name,
        CORBA::ValueModifier type_modifier,
        CORBA::TypeCode_ptr concrete_base,
        const IR_ValueMemberSeq & members,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_value_box_tc (
        const char * id,
        const char * name,
        CORBA::TypeCode_ptr boxed_type,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_native_tc (
        const char * id,
        const char * name,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_recursive_tc (
        const char * id,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_abstract_interface_tc (
        const char * id,
        const char * name,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_component_tc (
        const char * id,
        const char * name,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual CORBA::TypeCode_ptr create_home_tc (
        const char * id,
        const char * name,
        CORBA::Environment &ACE_TRY_ENV =
          TAO_default_environment ()
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;

  protected:
    CORBA_TypeCodeFactory (void);
    virtual ~CORBA_TypeCodeFactory (void);
  private:
    CORBA_TypeCodeFactory (const CORBA_TypeCodeFactory &);
    void operator= (const CORBA_TypeCodeFactory &);
};

#if defined (__ACE_INLINE__)
#include "TypeCodeFactoryC.inl"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#include "ace/post.h"
#endif /* TAO_TYPECODEFACTORYC_H */
