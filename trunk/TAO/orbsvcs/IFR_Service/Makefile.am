##  Process this file with automake to create Makefile.in

ACE_ROOT = $(top_srcdir)/..
ACE_BUILDDIR = $(top_builddir)/..
TAO_ROOT = $(top_srcdir)
TAO_BUILDDIR = $(top_builddir)

## Makefile.IFR_Service.am 

if !BUILD_MINIMUM_CORBA
noinst_PROGRAMS = IFR_Service
endif

IFR_Service_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR)

IFR_Service_SOURCES = \
  IFR_Server.cpp \
  IFR_Service.cpp \
  IFR_Service.h

IFR_Service_LDADD = \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_IFRService.la \
  $(TAO_BUILDDIR)/tao/libTAO_TypeCodeFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_IFR_Client.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_Svc_Utils.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_IORInterceptor.la \
  $(TAO_BUILDDIR)/tao/libTAO_ObjRefTemplate.la \
  $(TAO_BUILDDIR)/tao/libTAO_Valuetype.la \
  $(TAO_BUILDDIR)/tao/libTAO_IORTable.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la


## Makefile.TAO_IFR_BE.am 

if !BUILD_MINIMUM_CORBA
lib_LTLIBRARIES = libTAO_IFR_BE.la
endif

libTAO_IFR_BE_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/TAO_IDL/include \
  -I$(TAO_ROOT)/TAO_IDL/fe \
  -DTAO_IFR_BE_BUILD_DLL

libTAO_IFR_BE_la_SOURCES = \
  be_global.cpp \
  be_init.cpp \
  be_produce.cpp \
  ifr_adding_visitor.cpp \
  ifr_adding_visitor_exception.cpp \
  ifr_adding_visitor_operation.cpp \
  ifr_adding_visitor_structure.cpp \
  ifr_adding_visitor_union.cpp \
  ifr_removing_visitor.cpp \
  ifr_visitor.cpp

libTAO_IFR_BE_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_IFR_BE_la_LIBADD = \
  $(TAO_BUILDDIR)/TAO_IDL/libTAO_IDL_FE.la \
  $(TAO_BUILDDIR)/tao/libTAO_IFR_Client.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

noinst_HEADERS = \
  be_extern.h \
  be_global.h \
  ifr_adding_visitor.h \
  ifr_adding_visitor_exception.h \
  ifr_adding_visitor_operation.h \
  ifr_adding_visitor_structure.h \
  ifr_adding_visitor_union.h \
  ifr_removing_visitor.h \
  ifr_visitor.h


## Makefile.TAO_IFR_EXE.am 

if !BUILD_MINIMUM_CORBA
bin_PROGRAMS = tao_ifr
endif

tao_ifr_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs/IFR_Service \
  -I$(TAO_ROOT)/TAO_IDL/include \
  -I$(TAO_ROOT)/TAO_IDL/fe

tao_ifr_SOURCES = \
  $(TAO_ROOT)/TAO_IDL/driver/drv_args.cpp \
  $(TAO_ROOT)/TAO_IDL/driver/drv_preproc.cpp \
  $(TAO_ROOT)/TAO_IDL/tao_idl.cpp \
  $(TAO_ROOT)/TAO_IDL/include/drv_extern.h

tao_ifr_LDADD = \
  libTAO_IFR_BE.la \
  $(TAO_BUILDDIR)/TAO_IDL/libTAO_IDL_FE.la \
  $(TAO_BUILDDIR)/tao/libTAO_IFR_Client.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la


## Clean up template repositories, etc.
clean-local:
	-rm -f *.bak *.rpo *.sym lib*.*_pure_* Makefile.old core
	-rm -f gcctemp.c gcctemp so_locations
	-rm -rf ptrepository SunWS_cache Templates.DB
