// -*- MPC -*-
// $Id$

// The ifrservice base project inherits from minimum_corba, so it's no longer
// necessary to add minimum_corba to 'avoids' here.
project(IFR_Service) : orbsvcsexe, core, ifrservice, typecodefactory, svc_utils, ifr_client, iortable, portableserver, crosscompile {
  exename = IFR_Service
  Source_Files {
    IFR_Server.cpp
    IFR_Service.cpp
  }
}


project(TAO_IFR_BE) : taolib, core, ifr_client, crosscompile, minimum_corba {
  after       += TAO_IDL_FE
  sharedname   = TAO_IFR_BE
  libs        += TAO_IDL_FE
  dynamicflags = TAO_IFR_BE_BUILD_DLL
  includes    += $(TAO_ROOT)/TAO_IDL/include $(TAO_ROOT)/TAO_IDL/fe

  Source_Files {
    be_global.cpp
    be_init.cpp
    be_produce.cpp
    ifr_adding_visitor.cpp
    ifr_adding_visitor_exception.cpp
    ifr_adding_visitor_operation.cpp
    ifr_adding_visitor_structure.cpp
    ifr_adding_visitor_union.cpp
    ifr_removing_visitor.cpp
    ifr_visitor.cpp
  }
}


project(TAO_IFR_EXE) : taoexe, core, ifr_client, crosscompile, minimum_corba {
  after          += TAO_IFR_BE TAO_IDL_FE
  exename         = tao_ifr
  libs           += TAO_IFR_BE TAO TAO_IDL_FE
  includes       += . $(TAO_ROOT)/TAO_IDL/include $(TAO_ROOT)/TAO_IDL/fe
  libpaths       += $(TAO_ROOT)/TAO_IDL
  install         = $(ACE_ROOT)/bin

  verbatim(gnuace, local) {
    ifeq ($(TAO_IDL_PREPROCESSOR),)
      CPPFLAGS += -DTAO_IDL_PREPROCESSOR=\\\"$(strip $(CXX))\\\"
    else
      CPPFLAGS += -DTAO_IDL_PREPROCESSOR=\\\"$(subst \\,\\,$(TAO_IDL_PREPROCESSOR))\\\"
    endif
    
    VPATH = $(TAO_ROOT)/TAO_IDL $(TAO_ROOT)/TAO_IDL/driver
  }

  Source_Files {
    $(TAO_ROOT)/TAO_IDL/driver/drv_args.cpp
    $(TAO_ROOT)/TAO_IDL/driver/drv_preproc.cpp
    $(TAO_ROOT)/TAO_IDL/tao_idl.cpp
  }
  
  Header_Files {
    $(TAO_ROOT)/TAO_IDL/include/drv_extern.h
  }
}

