project(IFR_Service) : orbsvcsexe {
  depends += IFRService TypeCodeFactory Svc_Utils IFR_Client IORTable PortableServer
  exename  = IFR_Service
  libs    += TAO_IFRService TAO_TypeCodeFactory TAO_Svc_Utils TAO_IFR_Client TAO_IORTable TAO_PortableServer

  Source_Files {
    IFR_Server.cpp
    IFR_Service.cpp
  }
}


project(TAO_IFR_BE) : taolib {
  depends   += TAO_IDL_FE TAO_IFR_Client
  sharedname = TAO_IFR_BE
  libs      += TAO_IDL_FE TAO_IFR_Client TAO
  includes  += $(TAO_ROOT)/TAO_IDL/include $(TAO_ROOT)/TAO_IDL/fe

  Source_Files {
    be_global.cpp
    be_produce.cpp
    ifr_adding_visitor.cpp
    ifr_adding_visitor_exception.cpp
    ifr_adding_visitor_operation.cpp
    ifr_adding_visitor_structure.cpp
    ifr_adding_visitor_union.cpp
    ifr_removing_visitor.cpp
    ifr_visitor.cpp
  }  
}


project(TAO_IFR_EXE) : taoexe {
  depends        += TAO_IFR_BE IFR_Client TAO_IDL_FE
  exename         = tao_ifr
  idlpreprocessor = 1
  libs           += TAO_IFR_BE TAO_IFR_Client TAO TAO_IDL_FE
  includes       += $(TAO_ROOT)/TAO_IDL/include $(TAO_ROOT)/TAO_IDL/fe

  Source_Files {
    tao_ifr.cpp
    drv_args_ifr.cpp
    drv_preproc_ifr.cpp
  }
}

