Fri Jul 27 06:50:14 CDT 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

	* TAO version 1.5.10 released.

Thu Jul 26 09:21:50 UTC 2007  Vadym Ridosh  <vridosh@prismtech.com>

        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
          The previous attempt to fix potential memory leaks when
          connection handler is allocated but later code fails was
          not completely correct. Now it's fixed.

Tue Jul 24 20:38:50 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * COPYING: Updated this file to reflect 2007.
    
Wed Jul 25 08:00:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Oneway_Buffering/Oneway_Buffering_Admin.cpp:
          Fixed method signatures to resolve warnings on OpenVMS

Wed Jul 25 07:52:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.am:
          Added new UIPMC_Mcast_Connection_Handler files

Wed Jul 25 07:50:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/Adapter_Activator/run_test.pl:
        * examples/POA/Default_Servant/run_test.pl:
        * examples/POA/DSI/run_test.pl:
        * examples/POA/Explicit_Activation/run_test.pl:
        * examples/POA/FindPOA/run_test.pl:
        * examples/POA/Loader/run_test.pl:
        * examples/POA/NewPOA/run_test.pl:
        * examples/POA/On_Demand_Activation/run_test.pl:
        * examples/POA/On_Demand_Loading/run_test.pl:
        * examples/POA/POA_BiDir/run_test.pl:
        * examples/POA/Reference_Counted_Servant/run_test.pl:
        * examples/POA/RootPOA/run_test.pl:
        * examples/POA/TIE/run_test.pl:
          Added support for VxWorks cross platform testing

Tue Jul 24 19:58:38 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/Bug_3000_Regression:
        * tests/Bug_3000_Regression/Bug_3000_Regression.mpc:
        * tests/Bug_3000_Regression/Callback.h:
        * tests/Bug_3000_Regression/Callback.cpp:
        * tests/Bug_3000_Regression/Makefile.am:
        * tests/Bug_3000_Regression/README:
        * tests/Bug_3000_Regression/Service.h:
        * tests/Bug_3000_Regression/Service.cpp:
        * tests/Bug_3000_Regression/Test.idl:
        * tests/Bug_3000_Regression/client.cpp:
        * tests/Bug_3000_Regression/run_test.pl:
        * tests/Bug_3000_Regression/rw.conf:
        * tests/Bug_3000_Regression/server.cpp:
          New regression test for Bug 3000 (Handle leak upon oneway
          invocation with RW wait startegy).

Tue Jul 24 18:13:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
          Fixed compile problems related to my changes earlier today

Tue Jul 24 15:55:59 UTC 2007  Vadym Ridosh  <vridosh@prismtech.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h:
          Fixed incorrect #include within Versioned namespace block.

Tue Jul 24 14:22:54 UTC 2007  Vadym Ridosh  <vridosh@prismtech.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Mcast_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Mcast_Connection_Handler.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
          Fixed bug#3002 that was introduced with fix for bug#2925.
          Thanks to Daniel de Angelis Cordeiro < dcordeiro at gmail dot com >
          for reporting it. Fixed potential memory leaks in
          TAO_UIPMC_Acceptor::open_i and TAO_UIPMC_Connector::make_connection
          that could occur after connection handler is created and later
          code fails for any reason. Simplified connection handler.
          Added connection handler specific to Acceptor. Simplified the code
          in TAO_UIPMC_Profile::parse_string_i that was introduced with fix
          for bug#2377.

        * orbsvcs/tests/Bug_2377_Regression/run_test_ipv6.pl:
        * orbsvcs/tests/Bug_2377_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2377_Regression/uipmc_test.cpp:
          Changed this test a bit so that it tests fix for bug#3002 as well.

Tue Jul 24 12:20:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Asynch_Queued_Message.h:
          Doxygen and const changes

        * tao/CDR.{h,cpp}:
          Added a get_version call that accepts a
          TAO_GIOP_Message_Version. Have to see if we can move
          this to the ACE CDR Streams (check bugzilla 3006 for
          more ideas)

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
          Use the new get_version call on the cdr stream

        * tao/GIOP_Fragmentation_Strategy.h:
          Layout change

        * tao/GIOP_Message_Base.{h,cpp}:
          Use the new get_version call on the cdr stream. Changed
          parse_next_message to not require the ACE_Message_Block, it
          is already part of the TAO_Queued_Data. Also updated
          fragment_header_length to use TAO_GIOP_Message_Versin

        * tao/GIOP_Message_State.{h,cpp,inl}:
          The message size is really the payload size

        * tao/GIOP_Message_Version.{h,inl}:
          Added methods to retrieve version numbers in preparation of
          bugzilla 3006

        * tao/On_Demand_Fragmentation_Strategy.cpp:
          Use the new get_version call on the cdr stream

        * tao/Pluggable_Messaging.h:
          Updated to use TAO_GIOP_Message_Version

        * tao/Queued_Data.{h,cpp,inl}:
          Use TAO_GIOP_Message_State as member, changed version storage
          and inlined all constructors. This fixes bugzilla 2999

        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp
        * tao/Transport.cpp:
          Updated for change of parse_next_message in GIOP Message Base

Tue Jul 24 10:38:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Queued_Data.{h,inl}:
          Made all members private and added inlined accessor methods. This
          makes it easier to change the members to a GIOP_Message_State
          instance. Added a set_state method that accepts a GIOP_Message_State
          instance

        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/Incoming_Message_Queue.cpp:
        * tao/Incoming_Message_Stack.inl:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Transport.cpp:
          Updated for the changes to Queued_Data

        * tao/GIOP_Message_Base.cpp:
        * tao/Transport.cpp:
          Changed a few large if checks to a switch statement

        * tao/Queued_Message.h:
          No need to declare the list manipulation methods as virtual

Tue Jul 24 09:41:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.{h,inl}:
          Made top method const

        * tao/GIOP.pidl:
          Added several enums as mentioned in the CORBA spec

        * tao/GIOP_Message_Base.{h,cpp}:
        * tao/GIOP_Message_State.{h,cpp,inl}:
          Moved message_type method to the state class, this one now
          converts an Octet to TAO_Pluggable_Message_Type

        * tao/Transport.cpp:
          Const changes

Tue Jul 24 08:17:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Queued_Data.{h,cpp,inl}:
          Moved TAO_Queued_Data to its own file

        * tao/Incoming_Message_Queue.{h,cpp,inl}:
        * tao/tao.mpc:
        * tao/Makefile.am:
        * tao/Incoming_Message_Stack.h:
          Updated because of move of TAO_Queued_Data

Tue Jul 24 08:02:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
          Also BCB2007 needs the workaround in this file

Tue Jul 24 07:56:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.{h,cpp}:
        * tao/ORB_Core.h:
          Laout changes

        * tao/Incoming_Message_Queue.{cpp,inl}:
          Mode constructor inline

        * tao/Incoming_Message_Stack.h:
          Fixed typo

Tue Jul 24 06:56:23 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/IDL_Cubit/iiop_lite.conf:
        * performance-tests/Cubit/TAO/IDL_Cubit/iiop_lite.conf.xml:
        * performance-tests/Cubit/TAO/IDL_Cubit/run_test_lite.pl:
        * performance-tests/Cubit/TAO/IDL_Cubit/uiop_lite.conf:
        * performance-tests/Cubit/TAO/IDL_Cubit/uiop_lite.conf.xml:
          Removed, lite protocols are not supported anymore

Mon Jul 23 19:38:23 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/Object_KeyC.cpp:
        * tao/diffs/Object_Key.diff:

          Fixed a warning in the WinCE VC8 debug build.

Mon Jul 23 13:19:19 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * NEWS:

          Added item about support for forward declared IDL structs
          and unions in the IFR loader.

Mon Jul 23 12:35:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests\OctetSeq\client.cpp:
        * tests\OctetSeq\server.cpp:
        * performance-tests\Protocols\distributor.cpp:
        * performance-tests\Protocols\receiver.cpp:
        * performance-tests\Protocols\sender.cpp:

          Add small delay to shutdown between run loop and destroy orb.

Mon Jul 23 12:21:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Muxed_TMS.{h,cpp}
        * tao/Transport_Mux_Strategy.{h,cpp}:
          Moved lock_ from base to derived class, no need to be in
          the base

Mon Jul 23 12:12:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exclusive_TMS.h:
          Removed commented out code

        * tao/GIOP_Message_Base.cpp:
          Layout changes

        * tao/GIOP_Message_Generator_Parser_10.h:
        * tao/GIOP_Message_Generator_Parser_12.h:
          Reduced number of forward declarations

Mon Jul 23 11:58:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Acceptor.cpp:
          Const change

        * tao/Reply_Dispatcher.h:
          Reduced number of forward declarations

Mon Jul 23 11:36:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.{h,cpp}:
          Removed parse_incoming_messages method and message_state_ member,
          both are not used at all

        * tao/GIOP_Message_State.{h,inl}:
          Removed reset method, it is not used anymore

Mon Jul 23 11:18:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_State.{h,cpp,inl}:
          Removed friend with GIOP_Message_Base and provided inline
          accessor methods. Removed missing_data_ member, it was not
          used at all

        * tao/GIOP_Message_Base.cpp:
          Use accessor methods of GIOP_Message_State because we are
          not a friend anymore

Mon Jul 23 09:02:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/On_Demand_Fragmentation_Strategy.cpp:
          get_version doesn't have a return value anymore

Mon Jul 23 05:32:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.cpp:
          Commented out non reachable code to resolve warnings
          on OpenVMS

Sun Jul 22 13:06:14 UTC 2007  Martin Corino <mcorino@remedy.nl>

        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:
          Added small verbatim section to make this test build on OpenVMS.

Fri Jul 20 15:03:14 UTC 2007  Vadym Ridosh  <vridosh@prismtech.com>

        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connection_Handler.h:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Transport.h:
          Fixed potential memory leaks while DIOP_Connection_Handler
          is being created in DIOP_Acceptor::open_i and
          DIOP_Connector::make_connection. Made DIOP even more look
          like IIOP. Fixed warning genereated by MS VS in
          DIOP_Acceptor::parse_options.

Fri Jul 20 09:42:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/Forwarding/*:
        * test/POA/Forwarding/*:
          Moved this example to tests

        * configure.ac
        * examples/POA/Makefile.am:
        * tests/POA/Makefile.am:
          Updated for change above

Thu Jul 19 20:01:40 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/InterOp-Naming/INS_test_client.cpp:
        * tests/Param_Test/any.cpp:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Typedef_String_Array/testImpl.cpp:

         Replaced size_t with CORBA::ULong in places where it is used to index
         CORBA sequences.  size_t is not 32-bit on all platforms.

Thu Jul 19 15:13:51 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * NEWS:

          Updated with the disconnect fix.

        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.cpp:

          Changed to use the newly added send_deletion_change() in the case of
          saving the topology with a deleting object in the disconnect callback.

        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:

          Added the disconnect test on the supplier side too.

Thu Jul 19 11:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SCIOP_Connection_Handler.{h,cpp}:
          Also removed the GIOP Message Lite flag from this class

Wed Jul 18 18:19:47 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tests/Bug_2084_Regression/tid_to_int.h (ACE_thread_t_to_integer_i):
        * tests/Bug_2084_Regression/tid_to_int.h (ACE_thread_t_to_integer_i):

          Fixed typo that circumvented the intermediate cast to an integer
          large enough to hold the thread ID pointer.

Wed Jul 18 14:36:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/UIOP_Acceptor.{h,cpp}:
          Fixed unused parameter warning

Wed Jul 18 12:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORBInitializer_Registry.cpp:
          Corrected comment

        * tao/ORBInitializer_Registry_Adapter.h:
          Fixed doxygen tags

        * tao/PI/ORBInitializer_Registry_Impl.cpp:
          Layout change

        * tao/BooleanSeq.pidl:
        * tao/CharSeq.pidl:
        * tao/CONV_FRAME.pidl:
        * tao/Current.pidl:
          Updated file header.

Wed Jul 18 12:06:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h:
          Also removed GIOP_Message_Lite support

Wed Jul 18 09:55:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor_Impl.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor_Impl.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Completion_Handler.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector_Impl.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector_Impl.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.h:
        * tao/Acceptor_Impl.cpp:
        * tao/Acceptor_Impl.h:
        * tao/Connector_Impl.cpp:
        * tao/Connector_Impl.h:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Connector.h:
        * tao/IIOP_Transport.cpp:
        * tao/IIOP_Transport.h:
        * tao/Makefile.am:
        * tao/ORB_Core.cpp:
        * tao/params.cpp:
        * tao/params.h:
        * tao/Strategies/COIOP_Acceptor.cpp:
        * tao/Strategies/COIOP_Acceptor.h:
        * tao/Strategies/COIOP_Connection_Handler.cpp:
        * tao/Strategies/COIOP_Connection_Handler.h:
        * tao/Strategies/COIOP_Connector.cpp:
        * tao/Strategies/COIOP_Connector.h:
        * tao/Strategies/COIOP_Transport.cpp:
        * tao/Strategies/COIOP_Transport.h:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Acceptor.h:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Connection_Handler.h:
        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Connector.h:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/DIOP_Transport.h:
        * tao/Strategies/SCIOP_Acceptor.cpp:
        * tao/Strategies/SCIOP_Acceptor.h:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Connector.h:
        * tao/Strategies/SCIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.h:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Acceptor.h:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.h:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Connector.h:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.h:
        * tao/Strategies/UIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Acceptor.h:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.h:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.h:
        * tao/Strategies/UIOP_Transport.cpp:
        * tao/Strategies/UIOP_Transport.h:
        * tao/tao.mpc:
          Removed GIOP_Messaging_Lite and the required flag
          in all protocols. This was proposed some time ago
          by Iliyan Jeliazkov and stored as bugzilla issue 2803.
          The lite version had a lot of duplicated code but
          there is a replacement (using cdr without alignment)
          and isn't really used so far as we know. With the removal
          of this we lower our footprint.

        * tao/Strategies/SCIOP_Lite_Factory.cpp:
        * tao/Strategies/SCIOP_Lite_Factory.h:
        * tao/Strategies/UIOP_Lite_Factory.cpp:
        * tao/Strategies/UIOP_Lite_Factory.h:
        * tao/IIOP_Lite_Factory.cpp:
        * tao/IIOP_Lite_Factory.h:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Lite.h:
          Removed from the repository, no needed anymore

Wed Jul 18 05:07:13 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * tests/Bug_1361_Regression/Server_Thread_Pool.cpp:
        * tests/Bug_2234_Regression/server.cpp:
        * tests/MProfile_Forwarding/client.cpp:

          Fixed Fuzz warnings. Zapped the usage of NULL and replaced every
          NULL with 0 instead.

Wed Jul 18 02:43:38 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/objref_comparison_test/main.cpp:
          Scoreboard cleanup.

Tue Jul 17 18:46:23 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.cpp:

          Changed to use the newly added send_deletion_change() in the case of
          saving the topology with a deleting object in the disconnect callback.

        * orbsvcs/orbsvcs/Notify/Topology_Object.h:
        * orbsvcs/orbsvcs/Notify/Topology_Object.cpp:

          Added a new method for handling saving the topology with a deleting
          object.

        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:

          Added "disconnect" as a command line option.
          Run "run_test.pl -str -disconnect" as the regression test.


Mon Jul 17 05:42:20 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tests/Bug_1495_Regression/tid_to_int.h:
        * tests/Bug_2084_Regression/tid_to_int.h:

          New header containing portable ACE_thread_t to integer
          conversion code that doesn't rely heavily on platform specific
          configuration.  This file should probably be moved to a common
          location if there is interest in the conversion functionality it
          provides.

        * tests/Bug_1495_Regression/Client_Task.cpp (svc):
        * tests/Bug_1495_Regression/test_i.cpp (get_thread_id):
        * tests/Bug_2084_Regression/EventNode.cpp (registerHello):
        * tests/Bug_2084_Regression/Hello.cpp (get_string):

          Convert from ACE_thread_t to the test's ThreadId type using the
          conversion utility function in tid_to_int.h.  Addresses "cast
          from pointer to integer of different size" compile-time
          warnings on platforms where ACE_thread_t is a pointer, such as
          VxWorks.

Mon Jul 16 13:47:54 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * configure.ac:
          Added custom configuration step required for bug 2399 regression
          test.

        * tests/Bug_2791_Regression/Bug_2791_Regression.mpc:
        * tests/Bug_2791_Regression/Makefile.am:
          Removed redundent LD_FLAGS declaration to prevent errors on
          automake builds.

Sun Jul 15 19:22:18 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/objref_comparison_test/main.cpp:
          Fix for VxWorks compilation.

Sun Jul 15 13:01:49 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * docs/tutorials/Quoter/Event_Service/Stock_Consumer.h:
        * docs/tutorials/Quoter/Event_Service/Stock_Consumer.cpp:
        * docs/tutorials/Quoter/Naming_Service/Stock_Factory_i.h:
        * docs/tutorials/Quoter/Naming_Service/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Naming_Service/Stock_i.h:
        * docs/tutorials/Quoter/Naming_Service/Stock_i.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/Handler_i.h:
        * docs/tutorials/Quoter/On_Demand_Activation/Handler_i.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/Stock_Factory_Locator_i.h:
        * docs/tutorials/Quoter/On_Demand_Activation/Stock_Factory_Locator_i.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/Stock_Factory_i.h:
        * docs/tutorials/Quoter/On_Demand_Activation/Stock_Factory_i.cpp:
        * docs/tutoriasls/Quoter/On_Demand_Activation/Stock_i.h:
        * docs/tutorials/Quoter/On_Demand_Activation/Stock_i.cpp:
        * docs/tutorials/Quoter/RTCORBA/Broker_i.h:
        * docs/tutorials/Quoter/RTCORBA/Broker_i.cpp:
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.h:
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp:
        * docs/tutorials/Quoter/RTCORBA/StockNameConsumer_i.h:
        * docs/tutorials/Quoter/RTCORBA/StockNameConsumer_i.cpp:
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h:
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.tpp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Stock_Factory_i.h:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Stock_i.h:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Stock_i.cpp:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Stock_Factory_i.h:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Stock_i.h:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Stock_i.cpp:
        * docs/tutorials/Quoter/Simple/Persistent/Stock_Factory_i.h:
        * docs/tutorials/Quoter/Simple/Persistent/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Simple/Persistent/Stock_i.h:
        * docs/tutorials/Quoter/Simple/Persistent/Stock_i.cpp:
        * docs/tutorials/Quoter/Simple/Server/Stock_Factory_i.h:
        * docs/tutorials/Quoter/Simple/Server/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Simple/Server/Stock_i.h:
        * docs/tutorials/Quoter/Simple/Server/Stock_i.cpp:
        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.h:
        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/LogACE_RB_Tree.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/LogStdMap.h:
        * orbsvcs/examples/LoadBalancing/Stock.h:
        * orbsvcs/examples/LoadBalancing/Stock.cpp:
        * orbsvcs/examples/LoadBalancing/StockFactory.h:
        * orbsvcs/examples/LoadBalancing/StockFactory.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Loader.h:
        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp:
        * orbsvcs/tests/Bug_2316_Regression/Test_impl.h:
        * orbsvcs/tests/Bug_2316_Regression/Test_impl.cpp:
        * orbsvcs/tests/CosEvent/Timeout/TestEventConsumer_i.h:
        * orbsvcs/tests/CosEvent/Timeout/TestEventConsumer_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.h:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplier_i.h:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplier_i.cpp:
        * orbsvcs/tests/Notify/XML_Persistence/main.cpp:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Fixed Fuzz warnings regarding the usage of exception specification.

Sun Jul 15 04:36:50 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * performance-tests/CSD_Strategy/TestInf/Makefile.am:
        * performance-tests/CSD_Strategy/TestInf/csd_pt_testinf.mpc:
          More reconciling differences between automake and non automake
          build environments.

Sun Jul 15 01:43:25 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/Advanced/ch_12/server.h:
        * examples/Advanced/ch_12/server.cpp:
        * examples/Advanced/ch_18/client.cpp:
        * examples/Advanced/ch_18/server.h:
        * examples/Advanced/ch_18/server.cpp:
        * examples/Advanced/ch_21/server.h:
        * examples/Advanced/ch_21/server.cpp:
        * examples/Advanced/ch_3/server.h:
        * examples/Advanced/ch_3/server.cpp:
        * examples/Advanced/ch_8_and_10/server.h:
        * examples/Advanced/ch_8_and_10/server.cpp:
        * examples/Borland/ReceiverImpl.h:
        * examples/Borland/ReceiverImpl.cpp:

          Fixed fuzz warnings. Zap the usage of exception specification.

Sat Jul 14 15:44:13 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/include/drv_extern.h:

          Factored out the code to add include paths and ensured that the
          paths are enclosed in quotes.  Resolves an issue with
          space-containing paths on windows (bug#2977).

Sat Jul 14 14:43:31 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/util/utl_tmpl/utl_list.cpp:
        * TAO_IDL/util/utl_tmpl/utl_strlist.cpp:
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp:
        * examples/RTScheduling/DT_Creator.cpp:
        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.cpp:
        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * orbsvcs/Naming_Service/NT_Naming_Service.cpp:
        * orbsvcs/Notify_Service/NT_Notify_Service.cpp:
        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_y.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_y.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp:
        * orbsvcs/tests/Concurrency/CC_command.tab.cpp:
        * orbsvcs/tests/Concurrency/lex.CC_command.cpp:
        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * performance-tests/Protocols/sender.cpp:
        * tests/Permanent_Forward/StubTest.cpp:
        * tests/Xt_Stopwatch/Stopwatch_display.cpp:
        * tests/Xt_Stopwatch/client.cpp:
        * tests/Xt_Stopwatch/server.cpp:
        * utils/NamingViewer/AddNameServerDlg.h:
        * utils/NamingViewer/BindDialog.h:
        * utils/NamingViewer/BindNewContext.h:
        * utils/NamingViewer/NamingTreeCtrl.h:
        * utils/NamingViewer/NamingTreeCtrl.cpp:
        * utils/NamingViewer/NamingViewerDlg.h:
        * utils/NamingViewer/NamingViewerDlg.cpp:
        * utils/NamingViewer/SelectNSDialog.h:
        * utils/NamingViewer/ViewIORDialog.h:

          Fixed Fuzz warnings. Used 0 instead of NULL.

Sat Jul 14 13:20:26 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Security/mixed_security_test/Foo_i.cpp:
          Fixed borland detected ambiguity.

Sat Jul 14 01:32:45 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * configure.ac:
          Added new test directories.

        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.mpc:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
          Added included directories needed for automake to ensure that
          both generated and stored indirect headers may be found. This is
          necessary because automake refers to stored (svn-based) files in
          a different directory tree that used by generated files.

        * examples/Simple/time-date/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/examples/Notify/Lanes/Makefile.am:
        * orbsvcs/examples/Notify/ThreadPool/Makefile.am:
          Minor regen tweaks.

        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
          Removed reverences to ACE_QoS. This was introduced by an earlier
          attempt to resolve build problems by adding "qos=1" to
          default.features and generating Makefile.am files. This is now correct.

        * orbsvcs/tests/Notify/Basic/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Destroy/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Driver/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/RT_lib/Makefile.am:
        * orbsvcs/tests/Notify/Reconnecting/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
          Added include path to find generated files. This was done via
          the TAO/MPC/config/notifytest.mpb file.

        * orbsvcs/tests/Security/Makefile.am:
          Added new mixed_security_test to the subdir list.

        * orbsvcs/tests/Security/mixed_security_test/client.cpp:
          Cleaned up execption code to silence a warning.

        * performance-tests/CSD_Strategy/TestInf/AppHelper.h:
        * performance-tests/CSD_Strategy/TestInf/Makefile.am:
        * performance-tests/CSD_Strategy/TestInf/ServantList_T.cpp:
        * performance-tests/CSD_Strategy/TestInf/csd_pt_testinf.mpc:
        * performance-tests/CSD_Strategy/TestServant/Foo_ClientEngine.h:
        * performance-tests/CSD_Strategy/TestServant/Foo_i.h:
        * performance-tests/CSD_Strategy/TestServant/Makefile.am:
        * performance-tests/CSD_Strategy/TestServant/csd_pt_testservant.mpc:
          Added specific directories for finding generated and stored
          headers in the automake environment.

        * tests/Makefile.am:
          Added new test, objref_comparison_test.

Fri Jul 13 17:35:42 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * TAO_IDL/ast/ast_argument.cpp:
        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_attribute.cpp:
        * TAO_IDL/ast/ast_component.cpp:
        * TAO_IDL/ast/ast_component_fwd.cpp:
        * TAO_IDL/ast/ast_concrete_type.cpp:
        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_enum_val.cpp:
        * TAO_IDL/ast/ast_eventtype.cpp:
        * TAO_IDL/ast/ast_eventtype_fwd.cpp:
        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_factory.cpp:
        * TAO_IDL/ast/ast_field.cpp:
        * TAO_IDL/ast/ast_home.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_interface_fwd.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_native.cpp:
        * TAO_IDL/ast/ast_operation.cpp:
        * TAO_IDL/ast/ast_predefined_type.cpp:
        * TAO_IDL/ast/ast_root.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:
        * TAO_IDL/ast/ast_union_fwd.cpp:
        * TAO_IDL/ast/ast_valuebox.cpp:
        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/ast/ast_valuetype_fwd.cpp:
        * TAO_IDL/be/be_argument.cpp:
        * TAO_IDL/be/be_array.cpp:
        * TAO_IDL/be/be_attribute.cpp:
        * TAO_IDL/be/be_component.cpp:
        * TAO_IDL/be/be_component_fwd.cpp:
        * TAO_IDL/be/be_constant.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_enum.cpp:
        * TAO_IDL/be/be_enum_val.cpp:
        * TAO_IDL/be/be_eventtype.cpp:
        * TAO_IDL/be/be_eventtype_fwd.cpp:
        * TAO_IDL/be/be_exception.cpp:
        * TAO_IDL/be/be_factory.cpp:
        * TAO_IDL/be/be_field.cpp:
        * TAO_IDL/be/be_home.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_interface_fwd.cpp:
        * TAO_IDL/be/be_module.cpp:
        * TAO_IDL/be/be_native.cpp:
        * TAO_IDL/be/be_operation.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_root.cpp:
        * TAO_IDL/be/be_scope.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_string.cpp:
        * TAO_IDL/be/be_structure.cpp:
        * TAO_IDL/be/be_structure_fwd.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_typedef.cpp:
        * TAO_IDL/be/be_union.cpp:
        * TAO_IDL/be/be_union_branch.cpp:
        * TAO_IDL/be/be_union_fwd.cpp:
        * TAO_IDL/be/be_valuebox.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_valuetype_fwd.cpp:
        * TAO_IDL/be_include/be_argument.h:
        * TAO_IDL/be_include/be_array.h:
        * TAO_IDL/be_include/be_attribute.h:
        * TAO_IDL/be_include/be_component.h:
        * TAO_IDL/be_include/be_component_fwd.h:
        * TAO_IDL/be_include/be_constant.h:
        * TAO_IDL/be_include/be_decl.h:
        * TAO_IDL/be_include/be_enum.h:
        * TAO_IDL/be_include/be_enum_val.h:
        * TAO_IDL/be_include/be_eventtype.h:
        * TAO_IDL/be_include/be_eventtype_fwd.h:
        * TAO_IDL/be_include/be_exception.h:
        * TAO_IDL/be_include/be_factory.h:
        * TAO_IDL/be_include/be_field.h:
        * TAO_IDL/be_include/be_home.h:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_interface_fwd.h:
        * TAO_IDL/be_include/be_module.h:
        * TAO_IDL/be_include/be_native.h:
        * TAO_IDL/be_include/be_operation.h:
        * TAO_IDL/be_include/be_predefined_type.h:
        * TAO_IDL/be_include/be_root.h:
        * TAO_IDL/be_include/be_scope.h:
        * TAO_IDL/be_include/be_sequence.h:
        * TAO_IDL/be_include/be_string.h:
        * TAO_IDL/be_include/be_structure.h:
        * TAO_IDL/be_include/be_structure_fwd.h:
        * TAO_IDL/be_include/be_type.h:
        * TAO_IDL/be_include/be_typedef.h:
        * TAO_IDL/be_include/be_union.h:
        * TAO_IDL/be_include/be_union_branch.h:
        * TAO_IDL/be_include/be_union_fwd.h:
        * TAO_IDL/be_include/be_valuebox.h:
        * TAO_IDL/be_include/be_valuetype.h:
        * TAO_IDL/be_include/be_valuetype_fwd.h:
        * TAO_IDL/include/ast_argument.h:
        * TAO_IDL/include/ast_array.h:
        * TAO_IDL/include/ast_attribute.h:
        * TAO_IDL/include/ast_component.h:
        * TAO_IDL/include/ast_component_fwd.h:
        * TAO_IDL/include/ast_concrete_type.h:
        * TAO_IDL/include/ast_constant.h:
        * TAO_IDL/include/ast_decl.h:
        * TAO_IDL/include/ast_enum.h:
        * TAO_IDL/include/ast_enum_val.h:
        * TAO_IDL/include/ast_eventtype.h:
        * TAO_IDL/include/ast_eventtype_fwd.h:
        * TAO_IDL/include/ast_exception.h:
        * TAO_IDL/include/ast_factory.h:
        * TAO_IDL/include/ast_field.h:
        * TAO_IDL/include/ast_home.h:
        * TAO_IDL/include/ast_interface.h:
        * TAO_IDL/include/ast_interface_fwd.h:
        * TAO_IDL/include/ast_module.h:
        * TAO_IDL/include/ast_native.h:
        * TAO_IDL/include/ast_operation.h:
        * TAO_IDL/include/ast_predefined_type.h:
        * TAO_IDL/include/ast_root.h:
        * TAO_IDL/include/ast_sequence.h:
        * TAO_IDL/include/ast_string.h:
        * TAO_IDL/include/ast_structure.h:
        * TAO_IDL/include/ast_structure_fwd.h:
        * TAO_IDL/include/ast_type.h:
        * TAO_IDL/include/ast_typedef.h:
        * TAO_IDL/include/ast_union.h:
        * TAO_IDL/include/ast_union_branch.h:
        * TAO_IDL/include/ast_union_fwd.h:
        * TAO_IDL/include/ast_valuebox.h:
        * TAO_IDL/include/ast_valuetype.h:
        * TAO_IDL/include/ast_valuetype_fwd.h:
        * TAO_IDL/include/idl_narrow.h:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/util/utl_scope.cpp:

          Removed all {DEF,IMPL}_NARROW_METHODS[0-5] macros.  They are no
          longer needed.

          Removed extern type_id_to_string() declaration.  It is no longer
          needed or used.

Fri Jul 13 16:59:26 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tests/Bug_1495_Regression/test_i.cpp (get_thread_id):

          Corrected type used in cast.

        * tests/Bug_2084_Regression/Hello.cpp (get_string):

          Removed emulated exception macro.

Fri Jul 13 15:52:22 UTC 2007  Vadym Ridosh  <vridosh@prismtech.com>

        * examples/PluggableUDP/tests/Performance/UDP_PerformanceClient.cpp:
          Fixed output format for ACE_DEBUG message for time_t and unsigned
          long values.

Fri Jul 13 13:15:04 UTC 2007  Vadym Ridosh  <vridosh@prismtech.com>

        * examples/PluggableUDP/tests/Performance/Performance.mpc:
        * examples/PluggableUDP/tests/Performance/client.cpp:
        * examples/PluggableUDP/tests/Performance/UDP_i.cpp:
        * examples/PluggableUDP/tests/Performance/UDP_i.h:
        * examples/PluggableUDP/tests/Performance/server.cpp:
        * examples/PluggableUDP/tests/Performance/UDP_PerformanceClient.cpp:
        * examples/PluggableUDP/tests/Performance/UDP_PerformanceClient.h:
          Changed this test because in its previous implementation it could
          run too long and time out. Also beatufied the code a bit and used
          casting to 32 int of sec/msec/usec of the measured perfomance
          because on VC8 plain those values produced strange output.

Fri Jul 13 12:35:16 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Security/mixed_security_test/constants.h:
          Removed superfluous semicolon.

Fri Jul 13 11:33:42 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Security/mixed_security_test/Foo_i.h:
        * orbsvcs/tests/Security/mixed_security_test/Foo_i.cpp:
          Coding style update.

        * orbsvcs/tests/Security/mixed_security_test/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/server.cpp:
          Exception report improvement.

Fri Jul 13 03:43:00 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/Security/mixed_security_test/Foo_i.h:
        * orbsvcs/tests/Security/mixed_security_test/Foo_i.cpp:

          Don't use ACE_THROW_SPEC, it is deprecated.

        * orbsvcs/tests/Security/mixed_security_test/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/server.cpp:

          Don't use ACE_PRINT_EXCEPTION macro anymore. It is deprecated.

        * tests/objref_comparison_test/main.cpp:

          Don't include any ACE/TAO/CIAO header file as <ace/*.h>, use "ace/*.h"
          instead.

Fri Jul 13 06:43:03 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp (element_type):

          Fixed unused arg warning.

Thu Jul 12 23:42:00 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * TAO_IDL/tao_idl.cpp:

          Paired deallocation of ACE::strnew()-created string array with
          ACE::strdelete() instead operator delete[]().

        * TAO_IDL/driver/drv_preproc.cpp:

          Paired deallocation of ACE::strnew()-created string array with
          ACE::strdelete() instead operator delete[]().

          Statically initialize argument array elements to zero.

          Corrected problem where memory corresponding to tao_idl command
          line "-Yp" argument owned by the shell was being deallocated.

          Changed DRV_cpp_new_location() parameter from "char*" to "char
          const*" to better enforce proper argument list memory
          management.

          Search for orb.idl in supplied include path, and only fallback
          on $TAO_ROOT/tao if the include path search fails.  Addresses
          regression where orb.idl could not be found if $TAO_ROOT was not
          set even if it existed in the include path, as well allowing the
          user to override $TAO_ROOT/tao, if necessary.

          Const correctness imrovements.

        * TAO_IDL/include/drv_extern.h:

          Match function protototype signature with implementation
          signature.  Necessitated by const correctness improvements
          above.

        * TAO_IDL/include/idl_global.h (open_included_file):
        * TAO_IDL/util/utl_global.cpp  (open_included_file):

          New utility function that searches for the given file in the
          include path supplied to the TAO_IDL compiler, and opens it.

        * TAO_IDL/include/idl_narrow.h:

          Replaced legacy type narrowing code with standard C++
          dynamic_cast<> calls.  This is now possible since ACE/TAO
          require RTTI to be enabled.

        * tao/Exception.h:
        * tao/SystemException.h:

          Moved #undef of THREAD_CANCELLED to tao/SystemException.h.

          (SystemException):

          For g++ >= 4, exceptions found in DLL A but potentially thrown
          in DLL B must always be exported.

        * tao/ORB_Core.h (open_called_):

          Removed unused TAO_ORB_Core member.

        * tao/Unbounded_Octet_Sequence_T.h (operator==):

          Use the subscript operator instead of get_buffer() to avoid a
          potential buffer allocation.

        * tao/AnyTypeCode/Any_Array_Impl_T.cpp (extract):
        * tao/Valuetype/AbstractBase_T.cpp (unchecked_narrow):

          Check for null pointer before dereferencing dynamic_cast<>
          result.  Addresses FORWARD_NULL Coverity error.

        * tao/BiDir_GIOP/BiDir_ORBInitializer.cpp:

          Addressed Coverity UNUSED_VALUE error.

        * tests/Bug_1495_Regression/Client_Task.cpp:
        * tests/Bug_1495_Regression/Client_Task.h:
        * tests/Bug_1495_Regression/test.idl:
        * tests/Bug_1495_Regression/test_i.cpp:
        * tests/Bug_1495_Regression/test_i.h:
        * tests/Bug_2084_Regression/EventNode.cpp:
        * tests/Bug_2084_Regression/EventNode.h:
        * tests/Bug_2084_Regression/Hello.cpp:
        * tests/Bug_2084_Regression/Hello.h:
        * tests/Bug_2084_Regression/Test.idl:

          Support platforms with 64 bit thread IDs.

        * utils/catior/catior.cpp:

          Fixed memory leak.

          Added CDR demarshaling operation check.

          Converted boolean 1's and 0's to true and false, respectively.

Thu Jul 12 23:33:43 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/objref_comparison_test/foo.idl:
        * tests/objref_comparison_test/main.cpp:
        * tests/objref_comparison_test/objref_comparison_test.mpc:

          Added $id$ subversion tag to silence fuzz warnings.

        * tests/objref_comparison_test/foo.idl:

          Added missing include guards.

Thu Jul 12 23:21:29 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.cpp:
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/Notify_Service/Notify_Service.cpp:
        * orbsvcs/PSS/PSDL_Interpreter.cpp:
        * orbsvcs/PSS/PSDL_Node.cpp:
        * orbsvcs/PSS/PSDL_l.cpp:
        * orbsvcs/PSS/PSDL_y.cpp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.inl:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Factory.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Notify/Name_Value_Pair.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_l.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_y.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Thu Jul 12 18:33:31 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Strategies/DIOP_Profile.cpp (parse_string_i):
          Fix throw spec.

Thu Jul 12 17:21:51 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * NEWS:
          Documented the mixed security feature.

Thu Jul 12 16:51:30 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.h:
        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.cpp:
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.cpp:
          The mixed security feature is an implementation of the Security
          Level 2 Access Decision interface. The actual implementation
          deviates slightly from the specification because the spec
          requires passing an object reference for the target to be
          considered by the access_allowed operation. Unfortunately the
          point where this method is called requires synthesizing an
          object reference based on a POA and an object ID. But doing this
          requires the POA to have the RETAIN policy set otherwise
          id_to_reference fails. Furthermore, there is no way to
          conclusively compare two object references. The obvious way,
          calling object_to_string() and comparing the results fails
          because the stringified reference is really a CDR buffer that
          contains alignment padding bytes that are filled with garbage.
          Two otherwise identical references might have different strings.
          To work around these problems, we implement an alternative
          interface to take ORB, POA, and object ids as blobs and use
          these for comparisons.

        * orbsvcs/orbsvcs/SecurityLevel2.idl:
        * orbsvcs/tests/Security/mixed_security_test:
        * orbsvcs/tests/Security/mixed_security_test/Foo.idl:
        * orbsvcs/tests/Security/mixed_security_test/Foo_i.h:
        * orbsvcs/tests/Security/mixed_security_test/Foo_i.cpp:
        * orbsvcs/tests/Security/mixed_security_test/README:
        * orbsvcs/tests/Security/mixed_security_test/cacert.pem:
        * orbsvcs/tests/Security/mixed_security_test/client.conf:
        * orbsvcs/tests/Security/mixed_security_test/client.conf.xml:
        * orbsvcs/tests/Security/mixed_security_test/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/client_cert.pem:
        * orbsvcs/tests/Security/mixed_security_test/client_key.pem:
        * orbsvcs/tests/Security/mixed_security_test/client_key_nopasswd.pem:
        * orbsvcs/tests/Security/mixed_security_test/client_none.conf:
        * orbsvcs/tests/Security/mixed_security_test/client_nopasswd.conf:
        * orbsvcs/tests/Security/mixed_security_test/client_nopasswd.conf.xml:
        * orbsvcs/tests/Security/mixed_security_test/constants.h:
        * orbsvcs/tests/Security/mixed_security_test/mixed_security.mpc:
        * orbsvcs/tests/Security/mixed_security_test/run_test.pl:
        * orbsvcs/tests/Security/mixed_security_test/server.conf:
        * orbsvcs/tests/Security/mixed_security_test/server.conf.xml:
        * orbsvcs/tests/Security/mixed_security_test/server.cpp:
        * orbsvcs/tests/Security/mixed_security_test/server_cert.pem:
        * orbsvcs/tests/Security/mixed_security_test/server_key.pem:
        * orbsvcs/tests/Security/mixed_security_test/server_key_nopasswd.pem:
        * orbsvcs/tests/Security/mixed_security_test/server_none.conf:
        * orbsvcs/tests/Security/mixed_security_test/server_none.conf.xml:
        * orbsvcs/tests/Security/mixed_security_test/server_nopasswd.conf:
        * orbsvcs/tests/Security/mixed_security_test/server_nopasswd.conf.xml:
          This is the regression test for validating the mixed security
          feature.

        * tao/CDR.cpp:
        * tao/Profile.cpp:
          During the development of the mixed security feature, it was
          discovered that comparing object references by comparing
          stringified buffers failed because the stringified buffers
          contained alignment padding bytes that contained garbage. This
          garbage is ignored by CDR, but causes two otherwise identical
          object references to fail to compare. As a way to validate this
          problem we added some code to initialize a CDR buffer to all
          zeros before encoding to it, thereby ensuring that twe encodings
          of the same object reference would yield the same stringified
          result. The mixed security feature was reimplemented to not
          require a full object reference for comparison anyway, rending
          this problem moot for the moment. The buffer blanking code is
          left in place, but not compiled.

        * tests/objref_comparison_test/foo.idl:
        * tests/objref_comparison_test/main.cpp:
        * tests/objref_comparison_test/objref_comparison_test.mpc:
        * tests/objref_comparison_test/server.conf:
        * tests/objref_comparison_test/server_cert.pem:
        * tests/objref_comparison_test/server_key.pem:
          This test is used to highlight the difficulty in comparing
          object references. It is not to be added to the nightly build
          suite.

        * utils/catior/catior.cpp:
          Add the ability to parse out ssl component elements. This does
          not require linking any ssl or SSLIOP code.

        * orbsvcs/Naming_Service/NT_Naming_Server.cpp:
          Fix emacs mode selector line.

Thu Jul 12 11:29:39 UTC 2007  Vadym Ridosh  <vridosh@prismtech.com>

        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/DIOP_Acceptor.h:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Endpoint.h:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/DIOP_Endpoint.cpp:
        * tao/Strategies/DIOP_Connector.h:
        * tao/Strategies/DIOP_Acceptor.inl:

          Implemented DIOP over IPv6. Also made connection managment
          same as in other protocols and fixed few log messages.
          This is for fix of bug#2979.

        * tests/DIOP/UDP_Client_i.cpp:
        * tests/DIOP/run_test_ipv6.pl:
        * examples/PluggableUDP/tests/Performance/client.cpp:
        * examples/PluggableUDP/tests/Performance/run_test_ipv6.pl:
        * examples/PluggableUDP/tests/Performance/UDP_PerformanceClient.cpp:
        * examples/PluggableUDP/tests/SimplePerformance/client.cpp:
        * examples/PluggableUDP/tests/SimplePerformance/run_test_ipv6.pl:

          Made that shutdown is called 10 times in all DIOP tests to make
          sure that server does not miss it. Added scripts for testing IPv6
          implementation in DIOP.

Thu Jul 12 09:39:46 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/UnionDef_i.h:

          Cosmetic changes.

        * orbsvcs/orbsvcs/IFRService/Container_i.cpp(create_union_i):

          Added check for a null discriminator type before setting
          a reference to it in the repository. Required to support
          creation of an entry for a forward declared union, in
          which case the discriminator and the members will be
          added when the full definition is seen.

        * orbsvcs/IFR_Service/ifr_adding_visitor.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_structure.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_structure.cpp:

          - Added support for forward declared structs and unions.
          - Factored out common code that adds union members, used
            when creating a new union entry in the repo and also
            when filling in members of an existing entry originally
            created for a forward delared union.
          - Added changes required by changes in the TAO_IDL front
            end for typedefs.

        * tao/AnyTypeCode/TypeCode_Case_Enum_T.cpp:

          Changed code that compares equality of union labels where
          the discriminator is an enum to always extract the value
          to compare as an unsigned long, since the Any extraction
          operator overload for the enum type may not be known to the
          ORB code that is doing the comparison.

        * tao/TypeCodeFactory/TypeCodeFactory_i.h(check_recursion):
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp(check_recursion):

          Added parameter to the method that holds a 'working id'
          that enables the method to determine that, although a
          recursion has been detected, it may be the recursion of
          another member at a lower level that isn't the one we're
          interested in. If such a thing is detected, we pop out
          of the method's recursion and prevent an infinite
          regression.

Wed Jul 11 19:33:48 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * configure.ac:
          Added yet another missed test directory

        * MPC/config/csd_pt_testinf_lib.mpb:
        * MPC/config/csd_tp_foo_a_lib.mpb:
        * MPC/config/csd_tp_foo_b_lib.mpb:
        * MPC/config/csd_tp_foo_c_lib.mpb:
        * MPC/config/csd_tp_test_lib.mpb:
        * MPC/config/ftrteventchannel.mpb:
        * MPC/config/notifytest.mpb:
          Added automake-specific sections to catch the different include
          files necessary in the automake environment for finding idl
          generated header files.


        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
          I had to manually touch these files. For some reason the LDADD
          list included $(ACE_BUILDDIR)/examples/Kokyu... for libraries
          that are really in $(TAO_BUILDDIR)/examples/Kokyu... I'm not
          sure the correct value to put in the kokyu_dsrt_schedulers.mpb
          to make this work right.

        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc:
        * examples/RTScheduling/Fixed_Priority_Scheduler.mpc:
          Added -I.. to top level to ensure it gets the right generated
          files. This should probably be in a base file, and probably in a
          specific() section, but I don't think there is any harm putting
          it here.

        * orbsvcs/orbsvcs/Makefile.am:
        * tao/Makefile.am:
          Manually touched the @includedir@ specification to exclude the
          full path from my local build machine. I don't know the role of
          this definition, but I'm pretty sure something specific to my
          local workstation should not put into SVN.

        * docs/tutorials/Quoter/RTCORBA/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * performance-tests/CSD_Strategy/TestApps/Makefile.am:
        * performance-tests/CSD_Strategy/TestInf/Makefile.am:
        * performance-tests/CSD_Strategy/TestServant/Makefile.am:
        * tests/CSD_Strategy_Tests/Broken/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Test_1/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Test_2/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Test_3/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Test_4/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Test_Static/Makefile.am:
        * tests/DLL_ORB/Makefile.am:
        * tests/IDL_Test/Makefile.am:
        * tests/QtTests/Makefile.am:

          Regenerated automake files. These all contain minor changes that
          appear to relate to minor changes in various MPC files. The
          technique I used to generate these is this:

          CD $TAO_ROOT, where TAO_ROOT is the SVN workspace, not a cloned
          build directory.

          ../bin/mwc.pl -type automake -noreldefs TAO.mwc

          I used that exact command line as that is what had been used
          previously. The command line is stored in header comments in the
          generated Makefile.am, so using a different command path will
          yeild hundreds of changed files.

          I also post-processed the generated files to remove other
          innocuous changes, specificly resplacing the string
           'touch "$@"' with 'touch $@' and reordering some default
          initialization of BUILT_SOURCES and CLEAN_SOURCES. I only did
          this to avoid having several hundred checked files that only had
          these trivial changes.

Tue Jul 10 19:31:15 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * configure.ac:
          Updated to catch new test directories.

Tue Jul 10 16:06:47 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DLL_ORB/DLL_ORB.mpc:
        * tests/DLL_ORB/Makefile.am:

          Refactored mpc file was missing the generated sources for the
          server lib.

Tue Jul 10 14:44:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_ProtocolProperties.*:
          Regenerated

Tue Jul 10 10:20:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp

          Bug fix for Bugzilla 2918 and 2982. Second and subsequent indirect
          typecodes are not duplicated. (tao527 and tao536).

Mon Jul  9 15:40:40 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * configure.ac:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/CosEC_RtEC_Based_Mult.mpc:
        * orbsvcs/tests/Event/Basic/Event_Basic.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/CSD_TP_Test_Dynamic.mpc:
        * tests/DLL_ORB/DLL_ORB.mpc:
        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:
        * tests/Object_Loader/Object_Loader.mpc:

          Updates to correct automake warnings and errors. These changes
          resolve bug 2954.

        * Makefile.am:
        * docs/tutorials/Quoter/RTCORBA/Makefile.am:
        * docs/tutorials/Quoter/idl/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/CSD_Strategy/ThreadPool4/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Makefile.am:
        * examples/POA/Generic_Servant/Makefile.am:
        * examples/PluggableUDP/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/RTScheduling/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/LifeCycle_Service/Makefile.am:
        * orbsvcs/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/Notify/Filter/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Makefile.am:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Makefile.am:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Makefile.am:
        * orbsvcs/tests/Security/Makefile.am:
        * orbsvcs/tests/Trading/Makefile.am:
        * orbsvcs/tests/unit/Trading/Interpreter/Makefile.am:
        * performance-tests/Anyop/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
        * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Latency/AMI/Makefile.am:
        * performance-tests/Latency/Collocation/Makefile.am:
        * performance-tests/Latency/DII/Makefile.am:
        * performance-tests/Latency/DSI/Makefile.am:
        * performance-tests/Latency/Deferred/Makefile.am:
        * performance-tests/Latency/Single_Threaded/Makefile.am:
        * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Latency/Thread_Pool/Makefile.am:
        * performance-tests/Makefile.am:
        * performance-tests/Memory/Single_Threaded/Makefile.am:
        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/POA/Object_Creation_And_Registration/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile.am:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/DII/Makefile.am:
        * performance-tests/Sequence_Latency/DSI/Makefile.am:
        * performance-tests/Sequence_Latency/Deferred/Makefile.am:
        * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
        * performance-tests/Throughput/Makefile.am:
        * tao/Makefile.am:
        * tests/AMH_Exceptions/Makefile.am:
        * tests/AMI/Makefile.am:
        * tests/AMI_Buffering/Makefile.am:
        * tests/AMI_Timeouts/Makefile.am:
        * tests/Any/Recursive/Makefile.am:
        * tests/Big_AMI/Makefile.am:
        * tests/Big_Oneways/Makefile.am:
        * tests/Big_Request_Muxing/Makefile.am:
        * tests/Big_Twoways/Makefile.am:
        * tests/Blocking_Sync_None/Makefile.am:
        * tests/Bug_1020_Basic_Regression/Makefile.am:
        * tests/Bug_1254_Regression/Makefile.am:
        * tests/Bug_1269_Regression/Makefile.am:
        * tests/Bug_1270_Regression/Makefile.am:
        * tests/Bug_1330_Regression/Makefile.am:
        * tests/Bug_1361_Regression/Makefile.am:
        * tests/Bug_1476_Regression/Makefile.am:
        * tests/Bug_1482_Regression/Makefile.am:
        * tests/Bug_1495_Regression/Makefile.am:
        * tests/Bug_1535_Regression/Makefile.am:
        * tests/Bug_1551_Regression/Makefile.am:
        * tests/Bug_1568_Regression/Makefile.am:
        * tests/Bug_1627_Regression/Makefile.am:
        * tests/Bug_1670_Regression/Makefile.am:
        * tests/Bug_1676_Regression/Makefile.am:
        * tests/Bug_1812_Regression/Makefile.am:
        * tests/Bug_1813_Regression/Makefile.am:
        * tests/Bug_1869_Regression/Makefile.am:
        * tests/Bug_1904_Regression/Makefile.am:
        * tests/Bug_2084_Regression/Makefile.am:
        * tests/Bug_2124_Regression/Makefile.am:
        * tests/Bug_2174_Regression/Makefile.am:
        * tests/Bug_2183_Regression/Makefile.am:
        * tests/Bug_2186_Regression/Makefile.am:
        * tests/Bug_2188_Regression/Makefile.am:
        * tests/Bug_2222_Regression/Makefile.am:
        * tests/Bug_2289_Regression/Makefile.am:
        * tests/Bug_2328_Regression/Makefile.am:
        * tests/Bug_2349_Regression/Makefile.am:
        * tests/Bug_2399_Regression/Makefile.am:
        * tests/Bug_2417_Regression/Makefile.am:
        * tests/Bug_2419_Regression/Makefile.am:
        * tests/Bug_2424_Regression/Makefile.am:
        * tests/Bug_2429_Regression/Makefile.am:
        * tests/Bug_2494_Regression/Makefile.am:
        * tests/Bug_2503_Regression/Makefile.am:
        * tests/Bug_2560_Regression/Makefile.am:
        * tests/Bug_2593_Regression/Makefile.am:
        * tests/Bug_2595_Regression/Makefile.am:
        * tests/Bug_2669_Regression/Makefile.am:
        * tests/Bug_2677_Regression/Makefile.am:
        * tests/Bug_2683_Regression/Makefile.am:
        * tests/Bug_2735_Regression/Makefile.am:
        * tests/COIOP/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/Makefile.am:
        * tests/Cache_Growth_Test/Makefile.am:
        * tests/CallbackTest/Makefile.am:
        * tests/Client_Leaks/Makefile.am:
        * tests/CodeSets/simple/Makefile.am:
        * tests/Collocation/Makefile.am:
        * tests/CollocationLockup/Makefile.am:
        * tests/Collocation_Exception_Test/Makefile.am:
        * tests/Collocation_Opportunities/Makefile.am:
        * tests/Collocation_Tests/Makefile.am:
        * tests/Compression/Makefile.am:
        * tests/Connect_Strategy_Test/Makefile.am:
        * tests/Connection_Purging/Makefile.am:
        * tests/Crash_On_Write/Makefile.am:
        * tests/Crashed_Callback/Makefile.am:
        * tests/DIOP/Makefile.am:
        * tests/DLL_ORB/Makefile.am:
        * tests/DSI_Gateway/Makefile.am:
        * tests/Explicit_Event_Loop/Makefile.am:
        * tests/Exposed_Policies/Makefile.am:
        * tests/FL_Cube/Makefile.am:
        * tests/Faults/Makefile.am:
        * tests/File_IO/Makefile.am:
        * tests/Forwarding/Makefile.am:
        * tests/GIOP_Fragments/Java_Big_Reply/Makefile.am:
        * tests/GIOP_Fragments/Java_Big_Request/Makefile.am:
        * tests/GIOP_Fragments/PMB_With_Fragments/Makefile.am:
        * tests/Hello/Makefile.am:
        * tests/IDL_Test/Makefile.am:
        * tests/IORManipulation/Makefile.am:
        * tests/IORManipulation/filter/Makefile.am:
        * tests/IOR_Endpoint_Hostnames/Makefile.am:
        * tests/IPV6/Makefile.am:
        * tests/InterOp-Naming/Makefile.am:
        * tests/Leader_Followers/Makefile.am:
        * tests/LongUpcalls/Makefile.am:
        * tests/MProfile/Makefile.am:
        * tests/MProfile_Connection_Timeout/Makefile.am:
        * tests/MProfile_Forwarding/Makefile.am:
        * tests/MT_Client/Makefile.am:
        * tests/MT_Server/Makefile.am:
        * tests/MT_Timeout/Makefile.am:
        * tests/Makefile.am:
        * tests/Multiple/Makefile.am:
        * tests/Multiple_Inheritance/Makefile.am:
        * tests/Muxed_GIOP_Versions/Makefile.am:
        * tests/Muxing/Makefile.am:
        * tests/Native_Exceptions/Makefile.am:
        * tests/NestedUpcall/MT_Client_Test/Makefile.am:
        * tests/NestedUpcall/Simple/Makefile.am:
        * tests/Nested_Event_Loop/Makefile.am:
        * tests/Nested_Upcall_Crash/Makefile.am:
        * tests/No_Server_MT_Connect_Test/Makefile.am:
        * tests/OBV/Any/Makefile.am:
        * tests/OBV/Collocated/Forward/Makefile.am:
        * tests/OBV/Factory/Makefile.am:
        * tests/OBV/Forward/Makefile.am:
        * tests/OBV/TC_Alignment/Makefile.am:
        * tests/OBV/Truncatable/Makefile.am:
        * tests/OBV/ValueBox/Makefile.am:
        * tests/ORB_Local_Config/Two_DLL_ORB/Makefile.am:
        * tests/ORB_init/Portspan/Makefile.am:
        * tests/ORB_shutdown/Makefile.am:
        * tests/Object_Loader/Makefile.am:
        * tests/Objref_Sequence_Test/Makefile.am:
        * tests/Ondemand_Write/Makefile.am:
        * tests/Oneway_Buffering/Makefile.am:
        * tests/Oneway_Timeouts/Makefile.am:
        * tests/Oneways_Invoking_Twoways/Makefile.am:
        * tests/Optimized_Connection/Makefile.am:
        * tests/POA/Bug_2511_Regression/Makefile.am:
        * tests/POA/Deactivate_Object/Makefile.am:
        * tests/POA/Default_Servant/Makefile.am:
        * tests/POA/EndpointPolicy/Makefile.am:
        * tests/POA/Etherealization/Makefile.am:
        * tests/POA/Excessive_Object_Deactivations/Makefile.am:
        * tests/POA/Identity/Makefile.am:
        * tests/POA/MT_Servant_Locator/Makefile.am:
        * tests/POA/Makefile.am:
        * tests/POA/Nested_Non_Servant_Upcalls/Makefile.am:
        * tests/POA/Non_Servant_Upcalls/Makefile.am:
        * tests/POA/Object_Reactivation/Makefile.am:
        * tests/POA/POA_Destruction/Makefile.am:
        * tests/POA/Reference_Counting/Makefile.am:
        * tests/POA/Single_Threaded_POA/Makefile.am:
        * tests/POA/wait_for_completion/Makefile.am:
        * tests/Parallel_Connect_Strategy/Makefile.am:
        * tests/Param_Test/Makefile.am:
        * tests/Portable_Interceptors/Benchmark/Makefile.am:
        * tests/Portable_Interceptors/Bug_1559/Makefile.am:
        * tests/Portable_Interceptors/Bug_2510_Regression/Makefile.am:
        * tests/Portable_Interceptors/Dynamic/Makefile.am:
        * tests/Portable_Interceptors/ForwardRequest/Makefile.am:
        * tests/Portable_Interceptors/IORInterceptor/Makefile.am:
        * tests/Portable_Interceptors/PICurrent/Makefile.am:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Makefile.am:
        * tests/Portable_Interceptors/Service_Context_Manipulation/Makefile.am:
        * tests/QtTests/Makefile.am:
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/Makefile.am:
        * tests/RTCORBA/Banded_Connections/Makefile.am:
        * tests/RTCORBA/Client_Propagated/Makefile.am:
        * tests/RTCORBA/Client_Protocol/Makefile.am:
        * tests/RTCORBA/Dynamic_Thread_Pool/Makefile.am:
        * tests/RTCORBA/Explicit_Binding/Makefile.am:
        * tests/RTCORBA/Linear_Priority/Makefile.am:
        * tests/RTCORBA/MT_Client_Protocol_Priority/Makefile.am:
        * tests/RTCORBA/Persistent_IOR/Makefile.am:
        * tests/RTCORBA/Policy_Combinations/Makefile.am:
        * tests/RTCORBA/Priority_Inversion_With_Bands/Makefile.am:
        * tests/RTCORBA/Private_Connection/Makefile.am:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/Makefile.am:
        * tests/RTCORBA/Server_Declared/Makefile.am:
        * tests/RTCORBA/Server_Protocol/Makefile.am:
        * tests/RTCORBA/Thread_Pool/Makefile.am:
        * tests/RTScheduling/Scheduling_Interceptor/Makefile.am:
        * tests/Reliable_Oneways/Makefile.am:
        * tests/Servant_To_Reference_Test/Makefile.am:
        * tests/Server_Connection_Purging/Makefile.am:
        * tests/Server_Leaks/Makefile.am:
        * tests/Server_Port_Zero/Makefile.am:
        * tests/Single_Read/Makefile.am:
        * tests/Smart_Proxies/Benchmark/Makefile.am:
        * tests/Smart_Proxies/Collocation/Makefile.am:
        * tests/Smart_Proxies/Makefile.am:
        * tests/Smart_Proxies/On_Demand/Makefile.am:
        * tests/Smart_Proxies/Policy/Makefile.am:
        * tests/Smart_Proxies/dtor/Makefile.am:
        * tests/Stack_Recursion/Makefile.am:
        * tests/Strategies/Makefile.am:
        * tests/Timed_Buffered_Oneways/Makefile.am:
        * tests/Timeout/Makefile.am:
        * tests/TransportCurrent/Framework/Makefile.am:
        * tests/TransportCurrent/IIOP/Makefile.am:
        * tests/TransportCurrent/lib/Makefile.am:
        * tests/Two_Objects/Makefile.am:
        * tests/Typedef_String_Array/Makefile.am:
        * tests/UNKNOWN_Exception/Makefile.am:
        * tests/Xt_Stopwatch/Makefile.am:
        * orbsvcs/tests/Event/Mcast/AddrServer/Makefile.am:
        * orbsvcs/tests/Bug_2800_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2925_Regression/Makefile.am:
        * orbsvcs/tests/COIOP_Naming_Test/Makefile.am:
        * orbsvcs/tests/Security/InsecureReferences/Makefile.am:
        * orbsvcs/tests/Security/Bug_2908_Regression/Makefile.am:
        * orbsvcs/tests/Security/EndpointPolicy/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2926_Regression/Makefile.am:
        * orbsvcs/examples/CosEC/configure.ac.Makefiles
        * orbsvcs/examples/CosEC/configure.ac
        * tao/TSR.cpp.diff
        * tao/ORSET.h
        * tests/Bug_2909_Regression/Makefile.am:
        * tests/Object_Loader/configure.ac.Makefiles
        * tests/Object_Loader/configure.ac
        * tests/Bug_2918_Regression/Makefile.am:
        * tests/DynUnion_Test/Makefile.am:
        * tests/DLL_ORB/configure.ac.Makefiles
        * tests/DLL_ORB/configure.ac
        * tests/Bug_1383_Regression/Makefile.am:
        * tests/Bug_2826_Regression/Makefile.am:
        * tests/Bug_2953_Regression/Makefile.am:
        * tests/Bug_2791_Regression/Makefile.am:
        * tests/Bug_2678_Regression/Makefile.am:
        * tests/Bug_2809_Regression/Makefile.am:
        * tests/Bug_2936_Regression/Makefile.am:
        * tests/Bug_2768_Regression/Makefile.am:
        * tests/Bug_2869_Regression/Makefile.am:
        * tests/Bug_2804_Regression/Makefile.am:
        * tests/Bug_2844_Regression/Makefile.am:
        * tests/Bug_2356_Regression/Makefile.am:
        * tests/Bug_2792_Regression/Makefile.am:
        * tests/DiffServ/Makefile.am:
        * tests/POA/Bug_1592_Regression/Makefile.am:
        * tests/LongDouble/Makefile.am:
        * tests/Bug_2795_Regression/Makefile.am:
        * tests/CORBA_e_Implicit_Activation/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/configure.ac.Makefiles
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/configure.ac
        * tests/ORB_Local_Config/Two_DLL_ORB/configure.ac.Makefiles
        * tests/ORB_Local_Config/Two_DLL_ORB/configure.ac
        * tests/DSI_AMI_Gateway/Makefile.am:
        * tests/Bug_2805_Regression/Makefile.am:
        * tests/Bug_2966_Regression/Makefile.am:
        * tests/DSI_AMH/Makefile.am:
        * tests/Bug_933_Regression/Makefile.am:

          Regenerated and newly added Makefile.am for automake builds.

Mon Jul  9 12:25:56 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/IDL_Test.mpc:

          Removed the -Gos option altogether from any settings via
          idlflags, and let the option be used only if the gen_ostream
          feature is turned on. There are too many IDL files that
          reference CORBA types to make it worth while to try and
          test the -Gos option in any kind of hard-coded way.

Mon Jul  9 11:32:20 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/IDL_Test.mpc:

          Further subdivided IDL files into blocks that get slightly
          different IDL compiler command line options, in particular
          a new block, containing anonymous.idl and array_only.idl,
          that get -GA but not -Gos.

Sat Jul  7 19:56:20 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.cpp:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
        * orbsvcs/orbsvcs/AV/RTCP.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:
        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/UDP.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Read.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.inl:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Interpreter.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_l.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_y.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Sat Jul  7 09:43:00 UTC 2007  Martin Corino  <mcorino@remedy.nl>

        * TAO_IDL/driver/drv_preproc.cpp:
          Restored OpenVMS specific code.

Fri Jul  6 20:38:00 UTC 2007  Martin Corino  <mcorino@remedy.nl>

        * TAO_IDL/be/be_interface.cpp:
          Restored OpenVMS specific code.

Fri Jul  6 10:18:16 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * MPC/config/gen_ostream.mpb:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/Any.h:
        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/TypeCode.h:
        * tao/Object.h:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/ValueBase.cpp:
        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/ValueBase.h:
        * tao/Object.cpp:

          Added a flag, defined by when the gen_ostream feature is turned on,
          that guards the ostream operators for Object, ValueBase, Any,
          TypeCode, and AbstractBase.

Fri Jul  6 05:03:43 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:
        * orbsvcs/examples/ImR/Advanced/manager_main.cpp:
        * orbsvcs/examples/ImR/Combined_Service/dynserver.cpp:
        * orbsvcs/examples/LoadBalancing/StockFactory.cpp:
        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Thu Jul  5 18:50:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Notify_Service/Notify_Server.cpp:
        * orbsvcs/orbsvcs/Notify/Properties.cpp:
        * orbsvcs/orbsvcs/Notify/Properties.h:
          Make the protocols an unmanages singleton and leak them at process
          exit. When loading the notification service as dll it can happen
          that we unload it after the unload of the anytypecode library
          and when we get a crash. The only solution that works when making
          a dll or an exe is to leak the singleton. Thanks to Chad Elliot
          for testing some patches and giving his insights in why things
          crash.

Thu Jul  5 13:35:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Notify_Service/Notify_Server.cpp
        * orbsvcs/Notify_Service/Notify_Service.cpp
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h
          Reverted my change below, it breaks the executable
          Thu Jul  5 06:22:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

Thu Jul  5 12:50:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/run_test.pl:

          typo.

Thu Jul  5 12:18:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.inl:
          Layout change

        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Endpoint.cpp:
        * tao/Strategies/DIOP_Factory.cpp:
          Made formatting of the ACE_DEBUG statements the same as in the core
          TAO lib

Thu Jul  5 12:17:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DIOP/run_test.pl:
          Use a valid explicit portnumer

        * tests/DIOP/server.cpp:
          Layout change

Thu Jul  5 11:40:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2503_Regression/test_i.cpp:
        * tests/Bug_2560_Regression/Stock_Factory_i.cpp:
        * tests/Bug_2560_Regression/Stock_i.cpp:
          Removed exception specification

Thu Jul  5 11:31:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlot/server.cpp:
        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:
        * tests/Portable_Interceptors/AdvSlotExt/server.cpp:
        * tests/Portable_Interceptors/Slot/driver.cpp:
          Removed exception specification

        * tests/POA/EndpointPolicy/run_test.pl:
          Remove another ior file

Thu Jul  5 11:26:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Removed not used static resource variable

        * tao/params.cpp:
          Fixed variable initialization order

Thu Jul  5 08:01:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/params.cpp:
        * tao/params.h:
          Moved several ORB configuration settins out of the static resources
          into the ORB params. With the introduction of the service gestalt
          the static resources where handled to have an instance for each ORB
          which leads to problems with RTCORBA. Now explicitly changed these
          settings to have a value for each ORB, this makes it also possible
          to mix RT and non RT ORBs/POAs in one process, but using the ORB
          Initializer we can make sure all RTORBs get the correct value.
          This fixes bugzilla 2953, thanks to Iliyan Jeliazkov for reviewing
          the patches.

        * MPC/config/strategies.mpb:
          Strategies library needs PI

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.cpp:
          Changed to set the endpoint selector factory name on each ORB
          instance using the ORB Initializer

        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
          Changed to set the POA name in each ORB instance

        * tao/CSD_Framework/CSD_Framework_Loader.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter.h:
        * tao/CSD_Framework/CSD_ORBInitializer.cpp:
        * tao/CSD_Framework/CSD_ORBInitializer.h:
          Added an ORB Initializer to set the POA name in each ORB instance
          instead of setting it in the ORB static resources

        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/ORBInitializer_Registry.cpp:
        * tao/PI/PolicyFactory_Registry.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Layout changes

        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Set all values into the ORB we are now initializing instead of
          into the static resources

        * tao/Strategies.mpc:
        * tao/Strategies/OC_Endpoint_Selector_Factory.cpp:
        * tao/Strategies/OC_Endpoint_Selector_Factory.h:
        * tao/Strategies/Strategies_ORBInitializer.cpp:
        * tao/Strategies/Strategies_ORBInitializer.h
          Added ORB Initializer to set the endpoint selector factory, because
          of this the strategies library now also depends on PI

        * tao/TAO_Internal.cpp:
          Don't initialize the POA here, do that in the ORB

        * tao/Valuetype/ValueFactory_Map.cpp:
          No need to include TAO_Singleton

Thu Jul  5 06:22:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h:
        * orbsvcs/Notify_Service/Notify_Server.cpp:
          Moved the TAO_Notify_Properties that is set as singleton from the
          Notify_Server to Notify_Service so that this also works when loading
          the notification service as dll. This fixes bugzilla 2926 and is
          also related to bugzilla 1675.

        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/IFR_Inheritance_Test.mpc:
          Simplified this file

        * orbsvcs/Naming_Service/Naming_Service.cpp:
        * orbsvcs/orbsvcs/Notify/QoSProperties.cpp
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:
          Layout changes

        * orbsvcs/Naming_Service/Naming_Service.h:
        * orbsvcs/Naming_Service/NT_Naming_Service.h:
        * orbsvcs/Notify_Service/Notify_Service.h:
        * orbsvcs/Notify_Service/NT_Notify_Service.h:
          Converted to doxygen style documentation

        * orbsvcs/orbsvcs/Notify/Builder.cpp:
          Initialise pointer with 0

Wed Jul  4 14:30:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/run_test.pl:

          Fixed relative paths to ACE_ROOT/TAO_ROOT versions.

Wed Jul  4 12:39:39 UTC 2007  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/ast_typedef.h:
        * TAO_IDL/ast/ast_typedef.cpp:

          Added a public accessor for the 'owns_base_type' member. It turns
          out to be needed by the tao_ifr backend.

        * orbsvcs/IFR_Service/ifr_adding_visitor.h(element_type):
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp(element_type):

          Added a parameter to the signature, used when called from a
          typedef, when the 'owns_base_type' member of the typedef
          must be checked, taking the place of 'anonymous' as used
          in calls from a sequence, attribute or valuebox.

Wed Jul  4 06:58:31 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.mpc:
        * orbsvcs/tests/Bug_2137_Regression/Bug_2137_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/GroupRef_Manipulation.mpc:
        * orbsvcs/tests/HTIOP/Hello/HTIOP_Hello.mpc:
        * orbsvcs/tests/Security/Big_Request/Big_Request.mpc:
        * orbsvcs/tests/Security/Bug_1107_Regression/Bug_1107_Regression.mpc:
        * orbsvcs/tests/Security/Bug_2908_Regression/Bug_2908_Regression.mpc:
        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc:

          Remove exename from all projects that inherit from taoserver or taoclient.
          All projects that have taoserver or taoclient as base project do get an
          exename set as part of that project. Thanks to Johnny Willemsen for
          pointing that out.

Wed Jul  4 05:35:49 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/BiDir_CORBALOC/BiDirCORBALOC.mpc:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.mpc:
        * orbsvcs/tests/Bug_2137_Regression/Bug_2137_Regression.mpc:
        * orbsvcs/tests/Bug_2247_Regression/Bug_2247_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/tests/Bug_2800_Regression/Bug_2800_Regression.mpc:
        * orbsvcs/tests/Event/Basic/Event_Basic.mpc:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/GroupRef_Manipulation.mpc:
        * orbsvcs/tests/FaultTolerance/IOGR/FaultTolerance_IOGR.mpc:
        * orbsvcs/tests/HTIOP/AMI/HTIOP_AMI.mpc:
        * orbsvcs/tests/HTIOP/BiDirectional/HTIOP_BiDirectional.mpc:
        * orbsvcs/tests/HTIOP/Hello/HTIOP_Hello.mpc:
        * orbsvcs/tests/ImplRepo/ImplRepo.mpc:
        * orbsvcs/tests/ImplRepo/scale/scaletest.mpc:
        * orbsvcs/tests/InterfaceRepo/Application_Test/IFR_Application_Test.mpc:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Test.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Application_Controlled.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Infrastructure_Controlled.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Manage_Object_Group.mpc:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/LoadMonitorCPU.mpc:
        * orbsvcs/tests/Miop/McastHello/McastHello.mpc:
        * orbsvcs/tests/Notify/Reconnecting/Reconnecting.mpc:
        * orbsvcs/tests/Property/Property.mpc:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.mpc:
        * orbsvcs/tests/Security/BiDirectional/Secure_BiDir.mpc:
        * orbsvcs/tests/Security/Big_Request/Big_Request.mpc:
        * orbsvcs/tests/Security/Bug_1107_Regression/Bug_1107_Regression.mpc:
        * orbsvcs/tests/Security/Bug_2908_Regression/Bug_2908_Regression.mpc:
        * orbsvcs/tests/Security/Callback/Callback.mpc:
        * orbsvcs/tests/Security/Crash_Test/Security_Crash_Test.mpc:
        * orbsvcs/tests/Security/MT_IIOP_SSL/MT_IIOP_SSL.mpc:
        * orbsvcs/tests/Security/MT_SSLIOP/MT_SSLIOP.mpc:
        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc:
        * orbsvcs/tests/Security/ssliop_corbaloc/corbaloc_ssliop.mpc:
        * orbsvcs/tests/Simple_Naming/Simple_Naming.mpc:
        * orbsvcs/tests/Trading/Trading.mpc:

          Make sure we have an explicit exename

Wed Jul  4 04:18:48 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/BiDir_CORBALOC/TimeServer.cpp:
        * orbsvcs/tests/Bug_1395_Regression/client.cpp:
        * orbsvcs/tests/Bug_1395_Regression/server.cpp:
        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
        * orbsvcs/tests/Bug_2247_Regression/server.cpp:
        * orbsvcs/tests/Bug_2248_Regression/server.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client2.cpp:
        * orbsvcs/tests/Bug_2285_Regression/server.cpp:
        * orbsvcs/tests/Bug_2285_Regression/server2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/client.cpp:
        * orbsvcs/tests/Bug_2287_Regression/server.cpp:
        * orbsvcs/tests/Bug_2316_Regression/client.cpp:
        * orbsvcs/tests/Bug_2316_Regression/server.cpp:
        * orbsvcs/tests/Bug_2377_Regression/uipmc_test.cpp:
        * orbsvcs/tests/Bug_2615_Regression/client.cpp:
        * orbsvcs/tests/Bug_2615_Regression/server.cpp:
        * orbsvcs/tests/Bug_2709_Regression/client.cpp:
        * orbsvcs/tests/Bug_2709_Regression/server.cpp:
        * orbsvcs/tests/Bug_2800_Regression/client.cpp:
        * orbsvcs/tests/Bug_2925_Regression/client.cpp:
        * orbsvcs/tests/Bug_2925_Regression/server.cpp:
        * orbsvcs/tests/COIOP_Naming_Test/COIOP_Test.cpp:
        * orbsvcs/tests/Concurrency/CC_client.cpp:
        * orbsvcs/tests/CosEvent/Basic/Disconnect.cpp:
        * orbsvcs/tests/CosEvent/Basic/MT_Disconnect.cpp:
        * orbsvcs/tests/CosEvent/Basic/Pull_Push_Event.cpp:
        * orbsvcs/tests/CosEvent/Basic/Push_Event.cpp:
        * orbsvcs/tests/CosEvent/Basic/Random.cpp:
        * orbsvcs/tests/CosEvent/Basic/Shutdown.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp:
        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.cpp:
        * orbsvcs/tests/Event/Basic/BCast.cpp:
        * orbsvcs/tests/Event/Basic/Bitmask.cpp:
        * orbsvcs/tests/Event/Basic/Complex.cpp:
        * orbsvcs/tests/Event/Basic/Control.cpp:
        * orbsvcs/tests/Event/Basic/Disconnect.cpp:
        * orbsvcs/tests/Event/Basic/Gateway.cpp:
        * orbsvcs/tests/Event/Basic/MT_Disconnect.cpp:
        * orbsvcs/tests/Event/Basic/Negation.cpp:
        * orbsvcs/tests/Event/Basic/Observer.cpp:
        * orbsvcs/tests/Event/Basic/Random.cpp:
        * orbsvcs/tests/Event/Basic/Reconnect.cpp:
        * orbsvcs/tests/Event/Basic/Schedule.cpp:
        * orbsvcs/tests/Event/Basic/Shutdown.cpp:
        * orbsvcs/tests/Event/Basic/Timeout.cpp:
        * orbsvcs/tests/Event/Basic/Wildcard.cpp:
        * orbsvcs/tests/Event/Mcast/AddrServer/Client.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/consumer.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/gateway-ec.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/supplier.cpp:
        * orbsvcs/tests/Event/Mcast/Simple/consumer.cpp:
        * orbsvcs/tests/Event/Mcast/Simple/gateway-ec.cpp:
        * orbsvcs/tests/Event/Mcast/Simple/supplier.cpp:
        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp:
        * orbsvcs/tests/Event/Mcast/Two_Way/gateway-ec.cpp:
        * orbsvcs/tests/Event/Performance/Connect.cpp:
        * orbsvcs/tests/Event/Performance/Inversion.cpp:
        * orbsvcs/tests/Event/Performance/Latency.cpp:
        * orbsvcs/tests/Event/Performance/Latency_Server.cpp:
        * orbsvcs/tests/Event/Performance/Throughput.cpp:
        * orbsvcs/tests/Event/ThreadFlags/testflags.cpp:
        * orbsvcs/tests/Event/UDP/receiver.cpp:
        * orbsvcs/tests/Event/UDP/sender.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
        * orbsvcs/tests/HTIOP/AMI/client.cpp:
        * orbsvcs/tests/HTIOP/AMI/server.cpp:
        * orbsvcs/tests/HTIOP/AMI/simple_client.cpp:
        * orbsvcs/tests/HTIOP/BiDirectional/client.cpp:
        * orbsvcs/tests/HTIOP/BiDirectional/server.cpp:
        * orbsvcs/tests/HTIOP/Hello/client.cpp:
        * orbsvcs/tests/HTIOP/Hello/server.cpp:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/MessengerServer.cpp:
        * orbsvcs/tests/ImplRepo/airplane_client.cpp:
        * orbsvcs/tests/ImplRepo/airplane_server.cpp:
        * orbsvcs/tests/ImplRepo/nestea_client.cpp:
        * orbsvcs/tests/ImplRepo/nestea_server.cpp:
        * orbsvcs/tests/ImplRepo/scale/server.cpp:
        * orbsvcs/tests/InterfaceRepo/Application_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/Application_Test/server.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/server.cpp:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/client.cpp:
        * orbsvcs/tests/Miop/McastHello/client.cpp:
        * orbsvcs/tests/Miop/McastHello/server.cpp:
        * orbsvcs/tests/Notify/Basic/AdminProperties.cpp:
        * orbsvcs/tests/Notify/Basic/ConnectDisconnect.cpp:
        * orbsvcs/tests/Notify/Basic/Events.cpp:
        * orbsvcs/tests/Notify/Basic/Filter.cpp:
        * orbsvcs/tests/Notify/Basic/LifeCycle.cpp:
        * orbsvcs/tests/Notify/Basic/MultiTypes.cpp:
        * orbsvcs/tests/Notify/Basic/Sequence.cpp:
        * orbsvcs/tests/Notify/Basic/Simple.cpp:
        * orbsvcs/tests/Notify/Basic/Updates.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/main.cpp:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp:
        * orbsvcs/tests/Property/client.cpp:
        * orbsvcs/tests/Property/main.cpp:
        * orbsvcs/tests/Property/server.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf_Anomalies.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf_Runtime.cpp:
        * orbsvcs/tests/Security/BiDirectional/client.cpp:
        * orbsvcs/tests/Security/BiDirectional/server.cpp:
        * orbsvcs/tests/Security/Big_Request/client.cpp:
        * orbsvcs/tests/Security/Big_Request/server.cpp:
        * orbsvcs/tests/Security/Bug_1107_Regression/client.cpp:
        * orbsvcs/tests/Security/Bug_1107_Regression/server.cpp:
        * orbsvcs/tests/Security/Bug_2908_Regression/MessengerClient.cpp:
        * orbsvcs/tests/Security/Bug_2908_Regression/MessengerServer.cpp:
        * orbsvcs/tests/Security/Callback/client.cpp:
        * orbsvcs/tests/Security/Callback/server.cpp:
        * orbsvcs/tests/Security/Crash_Test/client.cpp:
        * orbsvcs/tests/Security/Crash_Test/server.cpp:
        * orbsvcs/tests/Security/EndpointPolicy/test.cpp:
        * orbsvcs/tests/Security/InsecureReferences/test.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/client.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/server.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/client.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/server.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/client.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/server.cpp:
        * orbsvcs/tests/Security/ssliop_corbaloc/client.cpp:
        * orbsvcs/tests/Simple_Naming/client.cpp:
        * orbsvcs/tests/Time/client.cpp:
        * orbsvcs/tests/Trading/colocated_test.cpp:
        * orbsvcs/tests/Trading/export_test.cpp:
        * orbsvcs/tests/Trading/import_test.cpp:

          Fixed fuzz warnings.
          Use "int ACE_TMAIN (int argc, ACE_TCHAR *argv[])"
          instead of "int main (int argc, char *argv[])" to conform to ACE's
          coding guidelines.

Tue Jul  3 18:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/RTSchedTestLib.mpc
        * tests/Bug_1270_Regression/Bug_1270_Regression.mpc
        * tests/Bug_1361_Regression/Bug_1361_Regression.mpc
        * tests/Bug_2702_Regression/CloseConnection.mpc
        * tests/Bug_2791_Regression/Bug_2791_Regression.mpc
        * tests/DSI_Gateway/DSI_Gateway.mpc
        * tests/Faults/Faults.mpc
        * tests/IDL_Test/IDL_Test.mpc
        * tests/IORManipulation/filter/IORManip_Filter_Test.mpc
        * tests/LongDouble/LongDoubleTest.mpc
        * tests/MT_BiDir/MT_BiDir.mpc
        * tests/Multiple/Multiple.mpc
        * tests/NestedUpcall/Simple/Simple.mpc
        * tests/NestedUpcall/Triangle_Test/TT.mpc
        * tests/Object_Loader/Object_Loader.mpc
        * tests/OBV/Any/OBV_Any.mpc
        * tests/OBV/Truncatable/OBV_Truncatable.mpc
        * tests/Oneway_Timeouts/test.mpc
        * tests/ORB_destroy/ORB_destroy.mpc
        * tests/ORB_init/Portspan/ORB_Init_Portspan.mpc
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.mpc
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.mpc
        * tests/POA/Object_Reactivation/Object_Reactivation.mpc
        * tests/POA/POA_Destruction/POA_Destruction.mpc
        * tests/POA/POAManagerFactory/POAManagerFactory.mpc
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.mpc
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/AO_Multiple_ORBs.mpc
        * tests/RTCORBA/Diffserv/RTCORBA_Diffserv.mpc
        * tests/Strategies/Strategies.mpc
        * tests/Xt_Stopwatch/Xt_Stopwatch.mpc
          Make sure we have an explicit exename

Tue Jul  3 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.am:
          Regenerated

Tue Jul  3 09:34:10 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_union.cpp:

          Fixed a bug in code generation of ostream operators, some
          compilers require a default switch case, but only if not
          all possible values appear as case statements.

Tue Jul  3 08:36:18 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_structure.cpp:

          Fixed a bug in code generation of ostream operators, an unused
          parameter warning in the operator for empty IDL exceptions.

Tue Jul  3 06:50:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/rt_client.mpb:
        * MPC/config/rt_server.mpb:
          Set exename, most of the RTCorba tests do derive from these base
          projects

Tue Jul  3 06:46:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMH_Exceptions/AMH_Exceptions.mpc
        * tests/AMH_Oneway/AMH_Oneway.mpc
        * tests/AMI/AMI.mpc
        * tests/BiDirectional_DelayedUpcall/BiDir_DelayedUpcall.mpc
        * tests/BiDirectional_NestedUpcall/BiDir_NestedUpcall.mpc
        * tests/Big_Oneways/Big_Oneways.mpc
        * tests/Big_Twoways/Big_Twoways.mpc
        * tests/Bug_2503_Regression/Bug_2503_Regression.mpc
        * tests/Bug_2805_Regression/Bug_2805_Regression.mpc
        * tests/Bug_2909_Regression/Bug_2909_Regression.mpc
        * tests/DiffServ/diffserv.mpc
        * tests/DSI_AMI_Gateway/DSI_AMI_Gateway.mpc
        * tests/Faults/Faults.mpc
        * tests/LongUpcalls/LongUpcalls.mpc
        * tests/MT_Timeout/MT_Timeout.mpc
        * tests/Nested_Event_Loop/Nested_Event_Loop.mpc
        * tests/NestedUpcall/MT_Client_Test/MT_Client_Test.mpc
        * tests/NestedUpcall/Triangle_Test/TT.mpc
        * tests/Oneway_Buffering/Oneway_Buffering.mpc
        * tests/Oneways_Invoking_Twoways/Oneways_Invoking_Twoways.mpc
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.mpc
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.mpc
        * tests/POA/Object_Reactivation/Object_Reactivation.mpc
        * tests/POA/POA_Destruction/POA_Destruction.mpc
        * tests/POA/POAManagerFactory/POAManagerFactory.mpc
        * tests/POA/Policies/Policies.mpc
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.mpc
        * tests/Portable_Interceptors/Slot/PI_Slot.mpc
        * tests/Reliable_Oneways/Reliable_Oneways.mpc
        * tests/RTCORBA/Collocation/RTCORBA_Collocation.mpc
        * tests/RTCORBA/Destroy_Thread_Pool/RTCORBA_Destroy_Thread_Pool.mpc
        * tests/RTCORBA/Diffserv/RTCORBA_Diffserv.mpc
        * tests/RTCORBA/Policies/Policies.mpc
        * tests/Servant_To_Reference_Test/Servant_to_Reference.mpc
        * tests/Timed_Buffered_Oneways/Timed_Buffered_Oneways.mpc
          Set explicit exename

Mon Jul  2 18:35:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2926_Regression/DllORB.h:
          Added missing duplicate call

Mon Jul  2 16:14:25 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tao/LocalObject.h:
        * tao/LocalObject.inl:
        * tao/LocalObject.cpp:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Object.h:
        * tao/Object.inl:
        * tao/Object.cpp:

          Removed the separate reference count from
          TAO_Local_RefCounted_Object.  Local refcounted objects will now just
          use the reference count kept in Object itself.

Mon Jul  2 12:42:53 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/IDL_Test.mpc:

          Removed the hard-coded -Gos IDL compiler option from being
          applied to sequence.idl, but allowed it to be applied if
          the ORB has also been built with ostream insertion operator
          generation turned on, since sequence.idl references a basic
          type IDL sequence defined in the ORB.

Mon Jul  2 12:15:37 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * MPC/config/gen_ostream.mpb:

          New file, containing the 'gen_ostream' feature, to enable the
          generation of ostream insertion operators for ORB IDL
          declarations (off by default) to be turned on by setting the
          feature in default.features.

        * tao/tao.mpc:

          Removed the -Gos command line option from the block of basic
          type sequence .pidl files, and added the base project described
          above.

        * docs/compiler.html:

          Added documentation for the new -Gos IDL compiler command line
          option, along with an explanation of how to turn on ostream
          insertion operator generation for ORB IDL declarations, and
          why such a thing might be needed.

Mon Jul  2 11:40:54 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO.mwc:

          Utilize the new 'associate' feature to decrease the amount of
          hand editing required for automake generation.

Mon Jul  2 11:36:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          The regular expression to recognize #line pragmas put in by the C
          preprocessor was enhanced to accept optional numbers after the file
          name to work with some versions of the GNU C preprocessor.

Mon Jul  2 11:29:28 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/Bug_1812_Regression/test.cpp:
        * tests/Bug_1813_Regression/test.cpp:
        * tests/Bug_2222_Regression/test.cpp:
        * tests/Bug_2677_Regression/server.cpp:
        * tests/DLL_ORB/client.cpp:
        * tests/DLL_ORB/server.cpp:
        * tests/Object_Loader/driver.cpp:
        * tests/Queued_Message_Test/Queued_Message_Test.cpp:

          Fixed fuzz warnings.
          Use "int ACE_TMAIN (int argc, ACE_TCHAR *argv[])"
          instead of "int main (int argc, char *argv[])" to conform to ACE's
          coding guidelines.

Mon Jul  2 10:20:34 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/utl_scope.h:

          Cosmetic changes.

        * TAO_IDL/be_include/be_interface.h:

          Not checked in with

          Mon Jul  2 10:05:28 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

          as it should have been.

Mon Jul  2 10:15:47 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_type.cpp(nested_name):

          Added a check to ensure that a leading '::' will be generated
          for the type name of CORBA::TypeCode as it is for the other
          CORBA types Object, AbstractBase, ValueBase and Any.

Mon Jul  2 10:05:28 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_array.cpp:

          Added generation of ".in ()" to ostream operator generation
          for members that are _var or _forany types. Thanks to
          Johnny Willemsen <jwillemsen at remedy dot nl> for reporting
          the problem.

Mon Jul  2 09:45:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO/TAO_IDL/include/idl_narrow.h:
          Use 0 instead of NULL

Mon Jul  2 08:58:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2936_Regression/*:
          New regression test for bug 2936. Thanks to Lothar Werzingen
          <lothar at tradescape dot biz> for making the regression. The
          problem is in the regression itself, but that has been fixed and
          the test looks interesting for our test suite.

        * tests/RTCORBA/Activate_Object_Multiple_ORBs/run_test.pl:
          Improved for cross platform testing

        * tests/RTCORBA/Activate_Object_Multiple_ORBs/test.cpp:
          Make it possible to pass arguments to orb_init from the commandline

        * tests/RTCORBA/Diffserv/client.cpp:
          Fixed typo

        * tests/Optimized_Connection/oc_client.cpp:
          Layout change

Mon Jul  2 07:31:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
          Initialise pointer with 0

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.cpp:
          Layout changes

        * orbsvcs/tests/Bug_2926_Regression/*:
          New regression test for bug 2926. Thanks to Lothar Werzingen
          <lothar at tradescape dot biz> for reporting this issue

        * orbsvcs/PortableServer/POAManager.inl:
          Fix bug 2926.

Sun Jul  1 17:13:40 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/Bug_1904_Regression/test.cpp:
        * tests/Bug_2399_Regression/test.cpp:

          Fixed unused parameter warnings.

Sat Jun 30 21:38:25 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/AVStreams/Modify_QoS/sender.cpp:
        * orbsvcs/tests/BiDir_CORBALOC/TimeServer.cpp:
        * orbsvcs/tests/Bug_2247_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2248_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2377_Regression/Hello_Impl.cpp:
        * orbsvcs/tests/Bug_2800_Regression/NamingTask.cpp:
        * orbsvcs/tests/Bug_2800_Regression/nsmain.cpp:
        * orbsvcs/tests/Bug_2800_Regression/server.cpp:
        * orbsvcs/tests/Bug_2925_Regression/Hello_Impl.cpp:
        * orbsvcs/tests/COIOP_Naming_Test/NamingTask.cpp:
        * orbsvcs/tests/Concurrency/CC_client.cpp:
        * orbsvcs/tests/Concurrency/CC_command.tab.cpp:
        * orbsvcs/tests/Concurrency/CC_command.cpp:
        * orbsvcs/tests/Concurrency/lex.CC_command.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumerMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp:
        * orbsvcs/tests/FtRtEvent/PushConsumer.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:
        * orbsvcs/tests/Interoperable_Naming/ncontextext_client_i.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/LB_server.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/XML_Persistence/main.cpp:
        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * orbsvcs/tests/RTCosScheduling/server.cpp:
        * orbsvcs/tests/Redundant_Naming/client.cpp:
        * orbsvcs/tests/Sched/DynSched_Test.cpp:
        * orbsvcs/tests/Security/EndpointPolicy/test.cpp:
        * orbsvcs/tests/Security/InsecureReferences/test.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Sat Jun 30 18:42:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/csd_framework.mpb:
        * tao/CSD_Framework.mpc:
          CSD_Framework can't be build with CORBA/e micro enabled because with
          CORBA/e micro you can't create a child POA

Sat Jun 30 16:58:36 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/AMH_Exceptions/client.cpp:
        * tests/AMH_Exceptions/server.cpp:
        * tests/AMH_Oneway/client.cpp:
        * tests/AMH_Oneway/server.cpp:
        * tests/AMI/client.cpp:
        * tests/AMI/server.cpp:
        * tests/AMI/simple_client.cpp:
        * tests/AMI_Buffering/admin.cpp:
        * tests/AMI_Buffering/client.cpp:
        * tests/AMI_Buffering/server.cpp:
        * tests/AMI_Timeouts/client.cpp:
        * tests/AMI_Timeouts/server.cpp:
        * tests/Abstract_Interface/client.cpp:
        * tests/Abstract_Interface/server.cpp:
        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/server.cpp:
        * tests/BiDirectional/client.cpp:
        * tests/BiDirectional/server.cpp:
        * tests/BiDirectional_DelayedUpcall/client.cpp:
        * tests/BiDirectional_DelayedUpcall/server.cpp:
        * tests/BiDirectional_MultipleORB/destroy.cpp:
        * tests/BiDirectional_NestedUpcall/client.cpp:
        * tests/BiDirectional_NestedUpcall/server.cpp:
        * tests/Big_AMI/client.cpp:
        * tests/Big_AMI/server.cpp:
        * tests/Big_Oneways/client.cpp:
        * tests/Big_Oneways/server.cpp:
        * tests/Big_Reply/client.cpp:
        * tests/Big_Reply/server.cpp:
        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/server.cpp:
        * tests/Big_Twoways/client.cpp:
        * tests/Big_Twoways/server.cpp:
        * tests/Blocking_Sync_None/client.cpp:
        * tests/Blocking_Sync_None/server.cpp:
        * tests/Bug_1020_Basic_Regression/client.cpp:
        * tests/Bug_1020_Basic_Regression/server.cpp:
        * tests/Bug_1020_Regression/client.cpp:
        * tests/Bug_1020_Regression/server.cpp:
        * tests/Bug_1269_Regression/client.cpp:
        * tests/Bug_1269_Regression/server.cpp:
        * tests/Bug_1269_Regression/shutdown.cpp:
        * tests/Bug_1270_Regression/client.cpp:
        * tests/Bug_1270_Regression/server.cpp:
        * tests/Bug_1270_Regression/shutdown.cpp:
        * tests/Bug_1330_Regression/client.cpp:
        * tests/Bug_1330_Regression/server.cpp:
        * tests/Bug_1361_Regression/client.cpp:
        * tests/Bug_1361_Regression/server.cpp:
        * tests/Bug_1361_Regression/shutdown.cpp:
        * tests/Bug_1476_Regression/client.cpp:
        * tests/Bug_1476_Regression/server.cpp:
        * tests/Bug_1476_Test/client.cpp:
        * tests/Bug_1482_Regression/client.cpp:
        * tests/Bug_1482_Regression/server.cpp:
        * tests/Bug_1495_Regression/Threaded_Client.cpp:
        * tests/Bug_1495_Regression/Threaded_Server.cpp:
        * tests/Bug_1535_Regression/bug_1535_regression.cpp:
        * tests/Bug_1551_Regression/client.cpp:
        * tests/Bug_1551_Regression/server.cpp:
        * tests/Bug_1568_Regression/client.cpp:
        * tests/Bug_1568_Regression/server.cpp:
        * tests/Bug_1627_Regression/client.cpp:
        * tests/Bug_1627_Regression/server.cpp:
        * tests/Bug_1635_Regression/client.cpp:
        * tests/Bug_1670_Regression/client.cpp:
        * tests/Bug_1670_Regression/server.cpp:
        * tests/Bug_1676_Regression/client.cpp:
        * tests/Bug_1676_Regression/server.cpp:
        * tests/Bug_1693_Test/client.cpp:
        * tests/Bug_1904_Regression/test.cpp:
        * tests/Bug_2084_Regression/Collocated_Test.cpp:
        * tests/Bug_2174_Regression/server.cpp:
        * tests/Bug_2183_Regression/client.cpp:
        * tests/Bug_2183_Regression/server.cpp:
        * tests/Bug_2186_Regression/client.cpp:
        * tests/Bug_2186_Regression/server.cpp:
        * tests/Bug_2188_Regression/client.cpp:
        * tests/Bug_2188_Regression/server.cpp:
        * tests/Bug_2201_Regression/test.cpp:
        * tests/Bug_2289_Regression/client.cpp:
        * tests/Bug_2289_Regression/server.cpp:
        * tests/Bug_2328_Regression/client.cpp:
        * tests/Bug_2328_Regression/server.cpp:
        * tests/Bug_2349_Regression/client.cpp:
        * tests/Bug_2349_Regression/server.cpp:
        * tests/Bug_2356_Regression/client.cpp:
        * tests/Bug_2356_Regression/server.cpp:
        * tests/Bug_2399_Regression/test.cpp:
        * tests/Bug_2417_Regression/client.cpp:
        * tests/Bug_2417_Regression/server.cpp:
        * tests/Bug_2429_Regression/client.cpp:
        * tests/Bug_2429_Regression/server.cpp:
        * tests/Bug_2494_Regression/client.cpp:
        * tests/Bug_2494_Regression/server.cpp:
        * tests/Bug_2503_Regression/client.cpp:
        * tests/Bug_2503_Regression/server.cpp:
        * tests/Bug_2593_Regression/client.cpp:
        * tests/Bug_2593_Regression/server.cpp:
        * tests/Bug_2595_Regression/client.cpp:
        * tests/Bug_2595_Regression/server.cpp:
        * tests/Bug_2654_Regression/client.cpp:
        * tests/Bug_2654_Regression/server.cpp:
        * tests/Bug_2669_Regression/client.cpp:
        * tests/Bug_2678_Regression/client.cpp:
        * tests/Bug_2683_Regression/client.cpp:
        * tests/Bug_2683_Regression/server.cpp:
        * tests/Bug_2702_Regression/client.cpp:
        * tests/Bug_2792_Regression/client.cpp:
        * tests/Bug_2795_Regression/client.cpp:
        * tests/Bug_2804_Regression/client.cpp:
        * tests/Bug_2804_Regression/server.cpp:
        * tests/Bug_2805_Regression/client.cpp:
        * tests/Bug_2844_Regression/client.cpp:
        * tests/Bug_2844_Regression/server.cpp:
        * tests/Bug_2869_Regression/client.cpp:
        * tests/Bug_2909_Regression/client.cpp:
        * tests/Bug_2918_Regression/client.cpp:
        * tests/Bug_2918_Regression/server.cpp:
        * tests/Bug_2966_Regression/client.cpp:
        * tests/Bug_2966_Regression/server.cpp:
        * tests/Bug_933_Regression/MessengerClient.cpp:
        * tests/Bug_933_Regression/MessengerServer.cpp:
        * tests/CDR/allocator.cpp:
        * tests/CDR/basic_types.cpp:
        * tests/CDR/growth.cpp:
        * tests/CDR/tc.cpp:
        * tests/COIOP/COIOP_Simple_Test.cpp:
        * tests/COIOP/COIOP_Test.cpp:
        * tests/CORBA_e_Implicit_Activation/server.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/TestAppMain.h:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/client.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp:
        * tests/Cache_Growth_Test/client.cpp:
        * tests/Cache_Growth_Test/server.cpp:
        * tests/CallbackTest/client.cpp:
        * tests/CallbackTest/server.cpp:
        * tests/Client_Leaks/child.cpp:
        * tests/Client_Leaks/client.cpp:
        * tests/Client_Leaks/server.cpp:
        * tests/Codec/client.cpp:
        * tests/Collocation_Exception_Test/Collocated_Test.cpp:
        * tests/Collocation_Oneway_Tests/Collocated_Test.cpp:
        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/Collocation_Tests/Collocated_Test.cpp:
        * tests/Compression/server.cpp:
        * tests/Connect_Strategy_Test/client.cpp:
        * tests/Connect_Strategy_Test/server.cpp:
        * tests/Connection_Failure/client.cpp:
        * tests/Connection_Purging/client.cpp:
        * tests/Connection_Purging/server.cpp:
        * tests/Connection_Timeout/client.cpp:
        * tests/Crash_On_Write/client.cpp:
        * tests/Crash_On_Write/server.cpp:
        * tests/Crashed_Callback/client.cpp:
        * tests/Crashed_Callback/server.cpp:
        * tests/DII_Collocation_Tests/oneway/Collocated_Test.cpp:
        * tests/DII_Collocation_Tests/twoway/Collocated_Test.cpp:
        * tests/DIOP/client.cpp:
        * tests/DIOP/server.cpp:
        * tests/DSI_AMH/client.cpp:
        * tests/DSI_AMH/server.cpp:
        * tests/DSI_AMI_Gateway/client.cpp:
        * tests/DSI_AMI_Gateway/gateway.cpp:
        * tests/DSI_AMI_Gateway/server.cpp:
        * tests/DSI_Gateway/client.cpp:
        * tests/DSI_Gateway/gateway.cpp:
        * tests/DSI_Gateway/server.cpp:
        * tests/DiffServ/client.cpp:
        * tests/DiffServ/server.cpp:
        * tests/Explicit_Event_Loop/client.cpp:
        * tests/Explicit_Event_Loop/server.cpp:
        * tests/Exposed_Policies/client.cpp:
        * tests/Exposed_Policies/server.cpp:
        * tests/FL_Cube/server.cpp:
        * tests/Faults/client.cpp:
        * tests/Faults/middle.cpp:
        * tests/Faults/ping.cpp:
        * tests/Faults/pong.cpp:
        * tests/Faults/server.cpp:
        * tests/File_IO/client.cpp:
        * tests/File_IO/server.cpp:
        * tests/Forwarding/client.cpp:
        * tests/Forwarding/server.cpp:
        * tests/GIOP_Fragments/Java_Big_Reply/client.cpp:
        * tests/GIOP_Fragments/Java_Big_Request/server.cpp:
        * tests/GIOP_Fragments/PMB_With_Fragments/server.cpp:
        * tests/Hang_Shutdown/client.cpp:
        * tests/Hang_Shutdown/server.cpp:
        * tests/Hello/client.cpp:
        * tests/Hello/server.cpp:
        * tests/ICMG_Any_Bug/client.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/IDL_Test/main.cpp:
        * tests/IORManipulation/IORTest.cpp:
        * tests/IORManipulation/filter/server.cpp:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:
        * tests/IOR_Endpoint_Hostnames/list_interfaces.cpp:
        * tests/IPV6/client.cpp:
        * tests/IPV6/server.cpp:
        * tests/InterOp-Naming/INS_test_client.cpp:
        * tests/InterOp-Naming/INS_test_server.cpp:
        * tests/Leader_Followers/client.cpp:
        * tests/Leader_Followers/server.cpp:
        * tests/LongDouble/client.cpp:
        * tests/LongDouble/server.cpp:
        * tests/LongUpcalls/ami_client.cpp:
        * tests/LongUpcalls/ami_server.cpp:
        * tests/LongUpcalls/blocking_client.cpp:
        * tests/LongUpcalls/blocking_server.cpp:
        * tests/MProfile/client.cpp:
        * tests/MProfile/server.cpp:
        * tests/MProfile_Connection_Timeout/client.cpp:
        * tests/MProfile_Connection_Timeout/server.cpp:
        * tests/MProfile_Forwarding/client.cpp:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/MT_BiDir/client.cpp:
        * tests/MT_BiDir/server.cpp:
        * tests/MT_Client/client.cpp:
        * tests/MT_Client/orb_creation.cpp:
        * tests/MT_Client/server.cpp:
        * tests/MT_Server/client.cpp:
        * tests/MT_Server/server.cpp:
        * tests/MT_Timeout/client.cpp:
        * tests/MT_Timeout/server.cpp:
        * tests/Multiple_Inheritance/client.cpp:
        * tests/Multiple_Inheritance/server.cpp:
        * tests/Muxed_GIOP_Versions/client.cpp:
        * tests/Muxed_GIOP_Versions/server.cpp:
        * tests/Muxing/client.cpp:
        * tests/Muxing/server.cpp:
        * tests/Native_Exceptions/client.cpp:
        * tests/Native_Exceptions/server.cpp:
        * tests/NestedUpcall/MT_Client_Test/client.cpp:
        * tests/NestedUpcall/MT_Client_Test/server.cpp:
        * tests/NestedUpcall/Triangle_Test/initiator.cpp:
        * tests/NestedUpcall/Triangle_Test/server_A.cpp:
        * tests/NestedUpcall/Triangle_Test/server_B.cpp:
        * tests/Nested_Event_Loop/client.cpp:
        * tests/Nested_Event_Loop/server.cpp:
        * tests/Nested_Upcall_Crash/client.cpp:
        * tests/Nested_Upcall_Crash/scavenger.cpp:
        * tests/Nested_Upcall_Crash/server.cpp:
        * tests/No_Server_MT_Connect_Test/client.cpp:
        * tests/No_Server_MT_Connect_Test/server.cpp:
        * tests/OBV/Any/client.cpp:
        * tests/OBV/Any/server.cpp:
        * tests/OBV/Collocated/Forward/Collocated_Test.cpp:
        * tests/OBV/Factory/client.cpp:
        * tests/OBV/Factory/server.cpp:
        * tests/OBV/Forward/client.cpp:
        * tests/OBV/Forward/server.cpp:
        * tests/OBV/Simple/client.cpp:
        * tests/OBV/Simple/server.cpp:
        * tests/OBV/Supports/client.cpp:
        * tests/OBV/Supports/server.cpp:
        * tests/OBV/TC_Alignment/client.cpp:
        * tests/OBV/TC_Alignment/server.cpp:
        * tests/OBV/Truncatable/client.cpp:
        * tests/OBV/Truncatable/server.cpp:
        * tests/OBV/ValueBox/client.cpp:
        * tests/OBV/ValueBox/server.cpp:
        * tests/ORB_destroy/ORB_destroy.cpp:
        * tests/ORB_init/ORB_init.cpp:
        * tests/ORB_init/Portspan/server.cpp:
        * tests/ORB_shutdown/server.cpp:
        * tests/ORT/client.cpp:
        * tests/Objref_Sequence_Test/client.cpp:
        * tests/Objref_Sequence_Test/server.cpp:
        * tests/OctetSeq/OctetSeq.cpp:
        * tests/OctetSeq/client.cpp:
        * tests/OctetSeq/server.cpp:
        * tests/Ondemand_Write/client.cpp:
        * tests/Ondemand_Write/server.cpp:
        * tests/Oneway_Buffering/admin.cpp:
        * tests/Oneway_Buffering/client.cpp:
        * tests/Oneway_Buffering/server.cpp:
        * tests/Oneways_Invoking_Twoways/client.cpp:
        * tests/Oneways_Invoking_Twoways/server.cpp:
        * tests/Optimized_Connection/oc_client.cpp:
        * tests/POA/Bug_1592_Regression/client.cpp:
        * tests/POA/Bug_1592_Regression/server.cpp:
        * tests/POA/Bug_2511_Regression/server.cpp:
        * tests/POA/Current/Current.cpp:
        * tests/POA/Deactivate_Object/server.cpp:
        * tests/POA/Default_Servant/Default_Servant.cpp:
        * tests/POA/EndpointPolicy/client.cpp:
        * tests/POA/EndpointPolicy/server.cpp:
        * tests/POA/Etherealization/Etherealization.cpp:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.cpp:
        * tests/POA/Identity/Identity.cpp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.cpp:
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.cpp:
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
        * tests/POA/POAManagerFactory/POAManagerFactory.cpp:
        * tests/POA/POA_Destruction/POA_Destruction.cpp:
        * tests/POA/Persistent_ID/client.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/POA/Policies/Policies.cpp:
        * tests/POA/Reference_Counting/test.cpp:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.cpp:
        * tests/Parallel_Connect_Strategy/client.cpp:
        * tests/Parallel_Connect_Strategy/server.cpp:
        * tests/Param_Test/anyop.cpp:
        * tests/Param_Test/driver.cpp:
        * tests/Param_Test/server.cpp:
        * tests/Permanent_Forward/StubTest.cpp:
        * tests/Policies/Manipulation.cpp:
        * tests/Portable_Interceptors/AMI/client.cpp:
        * tests/Portable_Interceptors/AMI/server.cpp:
        * tests/Portable_Interceptors/AdvSlot/client.cpp:
        * tests/Portable_Interceptors/AdvSlot/server.cpp:
        * tests/Portable_Interceptors/AdvSlotDblCpy/client.cpp:
        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:
        * tests/Portable_Interceptors/AdvSlotExt/client.cpp:
        * tests/Portable_Interceptors/AdvSlotExt/server.cpp:
        * tests/Portable_Interceptors/Benchmark/client.cpp:
        * tests/Portable_Interceptors/Benchmark/server.cpp:
        * tests/Portable_Interceptors/Bug_1559/client.cpp:
        * tests/Portable_Interceptors/Bug_1559/server.cpp:
        * tests/Portable_Interceptors/Bug_2088/client.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/client.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/server.cpp:
        * tests/Portable_Interceptors/Collocated/Dynamic/Collocated_Test.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Collocated_Test.cpp:
        * tests/Portable_Interceptors/Dynamic/client.cpp:
        * tests/Portable_Interceptors/Dynamic/server.cpp:
        * tests/Portable_Interceptors/ForwardRequest/client.cpp:
        * tests/Portable_Interceptors/ForwardRequest/server.cpp:
        * tests/Portable_Interceptors/IORInterceptor/client.cpp:
        * tests/Portable_Interceptors/IORInterceptor/server.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/client.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/server.cpp:
        * tests/Portable_Interceptors/PICurrent/client.cpp:
        * tests/Portable_Interceptors/PICurrent/server.cpp:
        * tests/Portable_Interceptors/PolicyFactory/server.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Collocated_Test.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/client_main.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_main.cpp:
        * tests/Portable_Interceptors/Recursive_ORBInitializer/client.cpp:
        * tests/Portable_Interceptors/Redirection/client.cpp:
        * tests/Portable_Interceptors/Redirection/server.cpp:
        * tests/Portable_Interceptors/Register_Initial_References/server.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/client.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/server.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/client.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/server.cpp:
        * tests/Portable_Interceptors/Slot/driver.cpp:
        * tests/QtTests/client.cpp:
        * tests/QtTests/server.cpp:
        * tests/RTCORBA/Banded_Connections/client.cpp:
        * tests/RTCORBA/Banded_Connections/server.cpp:
        * tests/RTCORBA/Client_Propagated/client.cpp:
        * tests/RTCORBA/Client_Propagated/server.cpp:
        * tests/RTCORBA/Client_Protocol/client.cpp:
        * tests/RTCORBA/Client_Protocol/server.cpp:
        * tests/RTCORBA/Collocation/Collocation.cpp:
        * tests/RTCORBA/Destroy_Thread_Pool/Destroy_Thread_Pool.cpp:
        * tests/RTCORBA/Diffserv/client.cpp:
        * tests/RTCORBA/Diffserv/server.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/client.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/server.cpp:
        * tests/RTCORBA/Explicit_Binding/client.cpp:
        * tests/RTCORBA/Explicit_Binding/server.cpp:
        * tests/RTCORBA/Linear_Priority/client.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp:
        * tests/RTCORBA/ORB_init/ORB_init.cpp:
        * tests/RTCORBA/Persistent_IOR/client.cpp:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Policies/Policies.cpp:
        * tests/RTCORBA/Policy_Combinations/client.cpp:
        * tests/RTCORBA/Policy_Combinations/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp:
        * tests/RTCORBA/Private_Connection/client.cpp:
        * tests/RTCORBA/Private_Connection/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:
        * tests/RTCORBA/Server_Declared/client.cpp:
        * tests/RTCORBA/Server_Declared/server.cpp:
        * tests/RTCORBA/Server_Protocol/client.cpp:
        * tests/RTCORBA/Server_Protocol/server.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:
        * tests/RTScheduling/Current/test.cpp:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * tests/RTScheduling/VoidData/test_client.cpp:
        * tests/Reliable_Oneways/client.cpp:
        * tests/Reliable_Oneways/server.cpp:
        * tests/Servant_To_Reference_Test/server.cpp:
        * tests/Server_Connection_Purging/client.cpp:
        * tests/Server_Connection_Purging/server.cpp:
        * tests/Server_Leaks/client.cpp:
        * tests/Server_Leaks/server.cpp:
        * tests/Server_Port_Zero/server.cpp:
        * tests/Single_Read/client.cpp:
        * tests/Single_Read/server.cpp:
        * tests/Smart_Proxies/Benchmark/client.cpp:
        * tests/Smart_Proxies/Benchmark/server.cpp:
        * tests/Smart_Proxies/On_Demand/client.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * tests/Smart_Proxies/Policy/client.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
        * tests/Smart_Proxies/client.cpp:
        * tests/Smart_Proxies/server.cpp:
        * tests/Stack_Recursion/client.cpp:
        * tests/Stack_Recursion/server.cpp:
        * tests/Strategies/client.cpp:
        * tests/Strategies/server.cpp:
        * tests/Timed_Buffered_Oneways/client.cpp:
        * tests/Timed_Buffered_Oneways/server.cpp:
        * tests/Timeout/server.cpp:
        * tests/TransportCurrent/Framework/simple.cpp:
        * tests/Two_Objects/client.cpp:
        * tests/Two_Objects/server.cpp:
        * tests/Typedef_String_Array/client.cpp:
        * tests/Typedef_String_Array/server.cpp:
        * tests/UNKNOWN_Exception/client.cpp:
        * tests/UNKNOWN_Exception/server.cpp:
        * tests/Xt_Stopwatch/client.cpp:
        * tests/Xt_Stopwatch/server.cpp:

          Fixed fuzz warnings.
          Use "int ACE_TMAIN (int argc, ACE_TCHAR *argv[])"
          instead of "int main (int argc, char *argv[])" to conform to ACE's
          coding guidelines.

Fri Jun 29 23:43:45 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/Advanced/ch_12/icp.cpp:
        * examples/Advanced/ch_12/server.cpp:
        * examples/Advanced/ch_18/icp.cpp:
        * examples/Advanced/ch_18/server.cpp:
        * examples/Advanced/ch_21/icp.cpp:
        * examples/Advanced/ch_21/server.cpp:
        * examples/Advanced/ch_3/server.cpp:
        * examples/Advanced/ch_8_and_10/icp.cpp:
        * examples/Borland/ChatClientWnd.cpp:
        * examples/Buffered_AMI/client.cpp:
        * examples/Buffered_Oneways/client.cpp:
        * examples/CSD_Strategy/ThreadPool/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool2/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool3/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool4/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool6/OrbShutdownTask.cpp:
        * examples/Callback_Quoter/Consumer_Input_Handler.cpp:
        * examples/Callback_Quoter/Notifier_Input_Handler.cpp:
        * examples/Content_Server/AMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Content_Server/AMI_Observer/Push_Iterator_Factory_i.cpp:
        * examples/Content_Server/SMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Event_Comm/Event_Comm_i.cpp:
        * examples/Event_Comm/consumer.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.cpp:
        * examples/Logging/Logging_Test_i.cpp:
        * examples/POA/Default_Servant/client.cpp:
        * examples/POA/Forwarding/client.cpp:
        * examples/POA/Generic_Servant/client.cpp:
        * examples/POA/TIE/client.cpp:
        * examples/PluggableUDP/tests/Performance/UDP_PerformanceClient.cpp:
        * examples/PluggableUDP/tests/SimplePerformance/client.cpp:
        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp:
        * examples/Simulator/Event_Supplier/Event_Sup.cpp:
        * examples/Simulator/Event_Supplier/Logging_Sup.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Fri Jun 29 19:41:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/AMI/client.cpp
        * performance-tests/Latency/Thread_Per_Connection/client.cpp
        * performance-tests/Latency/Thread_Pool/client.cpp
        * performance-tests/POA/Demux/server.cpp
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/client.cpp
        * performance-tests/RTCorba/Oneways/Reliable/client.cpp
        * performance-tests/Sequence_Latency/AMI/client.cpp
        * performance-tests/Sequence_Latency/Thread_Per_Connection/client.cpp
        * performance-tests/Sequence_Latency/Thread_Pool/client.cpp
          Added missing includes

Fri Jun 29 12:00:25 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * performance-tests/Anyop/anyop.cpp:
        * performance-tests/CSD_Strategy/TestInf/TestAppMain.h:
        * performance-tests/Callback/client.cpp:
        * performance-tests/Callback/server.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/collocation_test.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp:
        * performance-tests/Latency/AMH_Single_Threaded/client.cpp:
        * performance-tests/Latency/AMH_Single_Threaded/server.cpp:
        * performance-tests/Latency/AMI/client.cpp:
        * performance-tests/Latency/AMI/server.cpp:
        * performance-tests/Latency/Collocation/Collocated_Test.cpp:
        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Latency/DII/server.cpp:
        * performance-tests/Latency/DSI/client.cpp:
        * performance-tests/Latency/DSI/server.cpp:
        * performance-tests/Latency/Deferred/client.cpp:
        * performance-tests/Latency/Deferred/server.cpp:
        * performance-tests/Latency/Single_Threaded/client.cpp:
        * performance-tests/Latency/Single_Threaded/server.cpp:
        * performance-tests/Latency/Thread_Per_Connection/client.cpp:
        * performance-tests/Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Latency/Thread_Pool/client.cpp:
        * performance-tests/Latency/Thread_Pool/server.cpp:
        * performance-tests/Memory/IORsize/client.cpp:
        * performance-tests/Memory/IORsize/server.cpp:
        * performance-tests/Memory/Single_Threaded/client.cpp:
        * performance-tests/Memory/Single_Threaded/server.cpp:
        * performance-tests/POA/Create_Reference/create_reference.cpp:
        * performance-tests/POA/Demux/client.cpp:
        * performance-tests/POA/Demux/demux_stats.cpp:
        * performance-tests/POA/Demux/write_names.cpp:
        * performance-tests/POA/Implicit_Activation/client.cpp:
        * performance-tests/POA/Implicit_Activation/collocated.cpp:
        * performance-tests/POA/Implicit_Activation/server.cpp:
        * performance-tests/POA/Object_Creation_And_Registration/registration.cpp:
        * performance-tests/Pluggable/client.cpp:
        * performance-tests/Pluggable/server.cpp:
        * performance-tests/Protocols/distributor.cpp:
        * performance-tests/Protocols/receiver.cpp:
        * performance-tests/Protocols/sender.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/server.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/server.cpp:
        * performance-tests/RTCorba/Oneways/Reliable/client.cpp:
        * performance-tests/RTCorba/Oneways/Reliable/server.cpp:
        * performance-tests/RTCorba/Thread_Pool/client.cpp:
        * performance-tests/RTCorba/Thread_Pool/server.cpp:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/AMI/client.cpp:
        * performance-tests/Sequence_Latency/AMI/server.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DII/server.cpp:
        * performance-tests/Sequence_Latency/DSI/client.cpp:
        * performance-tests/Sequence_Latency/DSI/server.cpp:
        * performance-tests/Sequence_Latency/Deferred/client.cpp:
        * performance-tests/Sequence_Latency/Deferred/server.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/server.cpp:
        * performance-tests/Throughput/client.cpp:
        * performance-tests/Throughput/server.cpp:

          Fixed fuzz warnings.
          Use "int ACE_TMAIN (int argc, ACE_TCHAR *argv[])"
          instead of "int main (int argc, char *argv[])" to conform to ACE's
          coding guidelines.

Fri Jun 29 10:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2953_Regression/*:
          New regression for bug 2953, reproduces a problem with RTCORBA
          that seems to be caused by the service gestalt related changes in
          TAO

Fri Jun 29 01:27:22 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/AMH_Exceptions/server.cpp:
        * tests/Bug_1361_Regression/client.cpp:
        * tests/Bug_1676_Regression/Hello.cpp:
        * tests/Bug_2319_Regression/server.cpp:
        * tests/Bug_2349_Regression/server.cpp:
        * tests/Bug_2417_Regression/subscriber_impl.cpp:
        * tests/Bug_2560_Regression/Stock_Factory_i.cpp:
        * tests/Bug_2678_Regression/server.cpp:
        * tests/CDR/allocator.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/OrbShutdownTask.cpp:
        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp:
        * tests/CollocationLockup/SimpleNamingService.cpp:
        * tests/Collocation_Oneway_Tests/Collocated_Test.cpp:
        * tests/DII_Collocation_Tests/oneway/Hello.cpp:
        * tests/DII_Collocation_Tests/twoway/Hello.cpp:
        * tests/DiffServ/server.cpp:
        * tests/Explicit_Event_Loop/server.cpp:
        * tests/File_IO/client.cpp:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:
        * tests/IOR_Endpoint_Hostnames/list_interfaces.cpp:
        * tests/Leader_Followers/client.cpp:
        * tests/Leader_Followers/server.cpp:
        * tests/MT_Timeout/client.cpp:
        * tests/Multiple_Inheritance/client.cpp:
        * tests/NestedUpcall/MT_Client_Test/local_server.cpp:
        * tests/Nested_Event_Loop/client.cpp:
        * tests/OBV/Supports/client.cpp:
        * tests/OBV/ValueBox/Test_impl.cpp:
        * tests/OBV/ValueBox/client.cpp:
        * tests/ORB_Local_Config/Bug_2612/DllOrb.cpp:
        * tests/Objref_Sequence_Test/server.cpp:
        * tests/Oneway_Buffering/client.cpp:
        * tests/Oneway_Timeouts/server.cpp:
        * tests/POA/EndpointPolicy/server.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/Param_Test/helper.cpp:
        * tests/Param_Test/results.cpp:
        * tests/Param_Test/ub_struct_seq.cpp:
        * tests/Param_Test/var_array.cpp:
        * tests/Portable_Interceptors/AdvSlot/server.cpp:
        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:
        * tests/Portable_Interceptors/AdvSlotExt/server.cpp:
        * tests/RTCORBA/Banded_Connections/server.cpp:
        * tests/RTCORBA/Client_Propagated/server.cpp:
        * tests/RTCORBA/Client_Protocol/server.cpp:
        * tests/RTCORBA/Collocation/Collocation.cpp:
        * tests/RTCORBA/Diffserv/server.cpp:
        * tests/RTCORBA/Explicit_Binding/server.cpp:
        * tests/RTCORBA/Linear_Priority/client.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp:
        * tests/RTCORBA/Persistent_IOR/client.cpp:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Policy_Combinations/client.cpp:
        * tests/RTCORBA/Policy_Combinations/server.cpp:
        * tests/RTCORBA/Private_Connection/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/RTCORBA/Server_Declared/server.cpp:
        * tests/RTCORBA/Server_Protocol/server.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/Reliable_Oneways/client.cpp:
        * tests/Sequence_Unit_Tests/mock_array.cpp:
        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_nocopy_ut.cpp:
        * tests/Single_Read/client.cpp:
        * tests/Smart_Proxies/Benchmark/server.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
        * tests/Smart_Proxies/dtor/server.cpp:
        * tests/Smart_Proxies/server.cpp:
        * tests/Timed_Buffered_Oneways/client.cpp:
        * tests/Timeout/client.cpp:
        * tests/TransportCurrent/Framework/server.cpp:
        * tests/UNKNOWN_Exception/server.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Fri Jun 29 01:12:34 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * performance-tests/CSD_Strategy/TestInf/OrbShutdownTask.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
        * performance-tests/POA/Demux/demux_stats.cpp:
        * performance-tests/POA/Demux/demux_test_client.inl:
        * performance-tests/POA/Demux/demux_test_server.cpp:
        * performance-tests/POA/Demux/write_names.cpp:
        * performance-tests/Protocols/distributor.cpp:
        * performance-tests/Protocols/receiver.cpp:
        * performance-tests/RTCorba/Thread_Pool/server.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Thu Jun 28 16:40:26 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Event/Mcast/AddrServer/Client.cpp:
          Added error bailout if IPv6 address is obtained from the address
          server by a client compiled w/o IPv6 support.

        * tao/EndpointPolicy/IIOPEndpointValue_i.h:
        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:
          Store endpoint values internally as ACE_INET_Addrs rather than
          strings. This fixes a problem on windows where "localhost" gets
          translated to "127.0.0.1" when initializing an ACE_INET_Addr
          with "localhost" then later calling addr_to_string(). This then
          caused failures when attempting to set up a localhost-only IOR
          via the endpoint policy.

        * tao/Profile.h:
        * tao/Profile.cpp:
          Removed obsolete function object_key from the Unknown_Profile.
          It had previously been removed from all other profile types.

        * tao/Strategies/UIOP_Profile.cpp:
          It seems that Abdul's fix, (cf Thu Jun 28 00:03:58 UTC 2007
          Abdullah Sowayan  <abdullah.sowayan@lmco.com>) included
          replacing a call to isdigit with ACE_OS::ace_isdigit, but my
          compiler could not find ace_isdigit until I included
          ACE OS_NS_ctypes.h. Having done that, it seems that the old
          include of ace/os_include/os_ctype.h is redundant, so I've taken
          it out.

Thu Jun 28 14:07:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/client.cpp:

          Fix fuzz error.

Thu Jun 28 13:48:39 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Request.cpp (poll_response):
          Don't hold the mutex when running the orb, could lead to a deadlock
          when the response arrives in a build with threading enabled. Thanks
          to Martin Corino for finding this issue, this fixes bugzilla 2966

        * tao/DynamicInterface/Request.{h,cpp,inl}:
          Use Atomic_Op for the refcount, much more optimal and also cleaner
          code

        * tao/DynamicInterface/Server_Request.{h,cpp}:
          Use Atomic_Op for the refcount, much more optimal and also cleaner
          code

        * tao/AnyTypeCode/NVList.cpp:
          Const changed

Thu Jun 28 10:27:39 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.cpp:
        * tao/PortableServer/PortableServer.cpp:
          Layout changes

        * tao/PortableServer/Regular_POA.{h,cpp,inl}:
          Not needed with CORBA/e micro

        * tao/PortableServer/Root_POA.{h,cpp}:
          The new_POA method is not required with the CORBA/e micro
          profile

Thu Jun 28 08:43:39 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.cpp:
          Documentation change

        * tao/Connection_Handler.h:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/FILE_Parser.cpp:
        * tao/FILE_Parser.h:
        * tao/HTTP_Parser.h:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/TransportCurrent/Current_ORBInitializer_Base.cpp:
        * tao/TransportCurrent/IIOP_Current_Loader.cpp:
          Layout changes

        * tao/DiffServPolicy/DiffServPolicy_ORBInitializer.cpp:
          Catch exception as const

        * tao/IIOP_Connector.cpp:
          Updated some debug statements to conform the formatting
          done in TAO

        * tao/Invocation_Adapter.cpp:
          Removed not needed return

        * tao/Object.{h,cpp}:
          _get_component is not required for CORBA/e

        * tao/Protocols_Hooks.{h,cpp}:
        * tao/RTCORBA/RT_ORB.{h,cpp}:
        * tao/RTCORBA/RT_Protocols_Hooks.{h,cpp}:
          Extended the DIOP protocol properties with send and receive
          buffer size. This fixes bugzilla 2955

        * tao/RTCORBA/diffs/RT_ProtocolProperties.diff:
        * tao/RTCORBA/diffs/RTCORBA.diff:
          Need only a diff for the new RT_ProtocolProperties

        * tao/RTCORBA/Direct_Priority_Mapping.h:
        * tao/RTCORBA/Linear_Network_Priority_Mapping.h:
        * tao/RTCORBA/Linear_Priority_Mapping.h:
        * tao/RTCORBA/Multi_Priority_Mapping.h:
        * tao/RTCORBA/Network_Priority_Mapping.h:
        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping.h:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Endpoint_Selector_Factory.h:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.h:
        * tao/RTCORBA/RT_Mutex.h:
        * tao/RTCORBA/RT_ORB_Loader.h:
        * tao/RTCORBA/Thread_Pool.h:
          Rearranged includes

        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
          No need for intermediate variable

        * tao/RTCORBA/RT_Policy_i.{h,cpp}:
          Layout changes and extended DIOP code

        * tao/RTCORBA/RT_ProtocolProperties.pidl:
        * tao/RTCORBA/RT_ProtocolPropertiesA.cpp:
        * tao/RTCORBA/RT_ProtocolPropertiesA.h:
        * tao/RTCORBA/RT_ProtocolPropertiesC.cpp:
        * tao/RTCORBA/RT_ProtocolPropertiesC.h:
        * tao/RTCORBA/RT_ProtocolPropertiesS.h:
          Moved the ProtocolProperties to its own file, this needs a manual
          patch

        * tao/RTCORBA/RTCORBA.h:
          Include the rtcorba_typedefs file here

        * tao/RTCORBA/RTCORBA.pidl:
          Moved the ProtocolProperties out of this file, now we can regenerate
          this as part of the build and this also makes it possible to support
          CORBA/e for the RTCORBA library

        * tao/RTCORBA/RTCORBAA.cpp:
        * tao/RTCORBA/RTCORBAA.h:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTCORBA/RTCORBAS.h:
          Removed from the repo

        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Endpoint.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
          Updated several debug statements, layout changes

        * tao/Strategies/DIOP_Connection_Handler.cpp:
          Use the send/receive buffer sizes

        * tao/RTCORBA.mpc:
          Enabled regeneration of RTCORBA.pidl

Mon Jun 25 20:57:14 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs: Added a new file called documentation.html to describe the
          TAO programmer's guides in a single place.

Thu Jun 28 04:28:26 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * utils/nslist/nslist.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Thu Jun 28 01:28:20 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * docs/tutorials/Quoter/AMI/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Naming_Service/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/Stock_Factory_Locator_i.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Simple/Persistent/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Simple/Server/Stock_Factory_i.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Thu Jun 28 00:03:58 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/Acceptor_Registry.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/ORB.cpp:
        * tao/Profile.cpp:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Wed Jun 27 23:49:36 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_sunsoft.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ih.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/lex.yy.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.


        * TAO_IDL/be/be_codegen.cpp:

          Fixed a bug introduced in:
          Wed Jun 27 09:10:21 UTC 2007  Jeff Parsons <j.parsons@...>

          The IDL compiler generated the following include "ace/Streams.h"
          which I changed to "ace/streams.h" to appease compilers that are
          case sensitive.

Wed Jun 27 09:50:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/Bug_2962_Regression.mpc:
        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/client.cpp:
        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/ReadMe.txt:
        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/test.idl:

          Added regression test for

        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:

          Fixed bugzilla bug 2962, corrupted nested array length reporting.

Wed Jun 27 09:39:39 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/RT_Event_Service/Stock_Consumer.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_Consumer.h:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_Factory_i.h:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_i.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_i.h:
          Zapped exception specification

Wed Jun 27 09:10:21 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs\IFR_Service\IFR_Service.mpc:

          Added line 'after += IFR_Service' to
          project TAO_IFR_BE, since the tao_ifr
          executable must resolve the IFR service.

        * tao\tao.mpc:

          Added new IDL compiler option -Gos (see
          below) to the command line for regenerating
          the basic type sequences.

        * tests\IDL_Test\IDL_Test.mpc:

          Added the new IDL compiler option -Gos to
          the processing of the IDL files in this test,
          to ensure that the generated ostream operators
          are compilable.

        * tao\AnyTypeCode\TypeCode.cpp:
        * tao\AnyTypeCode\Any.h:
        * tao\AnyTypeCode\Any.cpp:
        * tao\AnyTypeCode\TypeCode.h:
        * tao\Object.h:
        * tao\Typecode_typesC.h:
        * tao\Typecode_typesC.cpp:
        * tao\Valuetype\AbstractBase.h:
        * tao\Valuetype\ValueBase.cpp:
        * tao\Valuetype\AbstractBase.cpp:
        * tao\Valuetype\ValueBase.h:
        * tao\Object.cpp:

          Added ostream operators for the CORBA types
          in TAO that aren't automatically regenerated.

        * TAO_IDL\include\ast_union_branch.h:
        * TAO_IDL\be\be_union.cpp:
        * TAO_IDL\be\be_visitor_exception\cdr_op_ch.cpp:
        * TAO_IDL\be\be_visitor_exception\cdr_op_cs.cpp:
        * TAO_IDL\be\be_typedef.cpp:
        * TAO_IDL\be\be_structure.cpp:
        * TAO_IDL\be\be_valuetype.cpp:
        * TAO_IDL\be\be_field.cpp:
        * TAO_IDL\be\be_visitor_interface\interface_ch.cpp:
        * TAO_IDL\be\be_visitor_interface\cdr_op_ch.cpp:
        * TAO_IDL\be\be_visitor_interface\interface_cs.cpp:
        * TAO_IDL\be\be_visitor_interface\cdr_op_cs.cpp:
        * TAO_IDL\be\be_codegen.cpp:
        * TAO_IDL\be\be_union_branch.cpp:
        * TAO_IDL\be\be_visitor_sequence\cdr_op_ch.cpp:
        * TAO_IDL\be\be_visitor_sequence\cdr_op_cs.cpp:
        * TAO_IDL\be\be_predefined_type.cpp:
        * TAO_IDL\be\be_visitor_array\cdr_op_ch.cpp:
        * TAO_IDL\be\be_visitor_array\array_cs.cpp:
        * TAO_IDL\be\be_visitor_array\cdr_op_cs.cpp:
        * TAO_IDL\be\be_type.cpp:
        * TAO_IDL\be\be_visitor_union\cdr_op_ch.cpp:
        * TAO_IDL\be\be_visitor_union\cdr_op_cs.cpp:
        * TAO_IDL\be\be_visitor_structure\cdr_op_ch.cpp:
        * TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:
        * TAO_IDL\be\be_exception.cpp:
        * TAO_IDL\be\be_global.cpp:
        * TAO_IDL\be\be_visitor_enum\cdr_op_ch.cpp:
        * TAO_IDL\be\be_visitor_enum\cdr_op_cs.cpp:
        * TAO_IDL\be\be_sequence.cpp:
        * TAO_IDL\be\be_visitor_valuetype\valuetype_cs.cpp:
        * TAO_IDL\be\be_visitor_valuetype\cdr_op_ch.cpp:
        * TAO_IDL\be\be_visitor_valuetype\valuetype_ch.cpp:
        * TAO_IDL\be\be_visitor_valuetype\cdr_op_cs.cpp:
        * TAO_IDL\be\be_interface.cpp:
        * TAO_IDL\be\be_enum.cpp:
        * TAO_IDL\be\be_string.cpp:
        * TAO_IDL\be\be_array.cpp:
        * TAO_IDL\ast\ast_expression.cpp:
        * TAO_IDL\ast\ast_union.cpp:
        * TAO_IDL\ast\ast_typedef.cpp:
        * TAO_IDL\ast\ast_enum.cpp:
        * TAO_IDL\ast\ast_union_branch.cpp:
        * TAO_IDL\be_include\be_field.h:
        * TAO_IDL\be_include\be_interface.h:
        * TAO_IDL\be_include\be_enum.h:
        * TAO_IDL\be_include\be_union_branch.h:
        * TAO_IDL\be_include\be_string.h:
        * TAO_IDL\be_include\be_array.h:
        * TAO_IDL\be_include\be_type.h:
        * TAO_IDL\be_include\be_union.h:
        * TAO_IDL\be_include\be_typedef.h:
        * TAO_IDL\be_include\be_structure.h:
        * TAO_IDL\be_include\be_valuetype.h:
        * TAO_IDL\be_include\be_predefined_type.h:
        * TAO_IDL\be_include\be_visitor_valuetype\valuetype_cs.h:
        * TAO_IDL\be_include\be_exception.h:
        * TAO_IDL\be_include\be_global.h:
        * TAO_IDL\be_include\be_sequence.h:

          Added new command line option -Gos, to optionally
          generate ostream operators for IDL declarations. These
          operators can be useful for exception handling and
          debugging in TAO applications. Thanks to
          Lothar Werzinger <lothar at tradescape dot biz> for
          requesting this feature. This fix closes [BUGID:2937].

Wed Jun 27 06:12:39 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2966_Regression/*:
          New test, will fail at this moment until the fix is ready

Wed Jun 27 03:23:14 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/Naming_Service/Naming_Service.h:
          The documentation says that this class uses the TAO_ORB_Manager,
          yet TAO_ORB_Manager has been removed for a long while now. Update
          the class documentation to remove references to TAO_ORB_Manager.

Mon Jun 25 11:34:36 CDT 2007  Ciju John  <johnc@ociweb.com>

        * TAO version 1.5.9 released.

Mon Jun 25 16:11:55 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * ChangeLog:
          cosmetic change.

        * NEWS:
          Add NEWS summary updates.

Fri Jun 22 14:56:03 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * ChangeLog:
        * PROBLEM-REPORT-FORM:
        * VERSION:
        * tao/Version.h:
          Revert to x.5.8 status.

Tue Jun 19 15:37:16 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/orbsvcs/SSLIOP.mpc:
          The template file shouldn't be listed under "Source_Files".

Tue Jun 19 13:36:33 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Timeouts/run_test.pl:
          Fixing case mistake in test script. Fixes VxWorks test runs.

Thu Jun 14 10:28:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/SSLIOP/params_dup.cpp:

          Now the windows files are objecting to C linkage of
          the included c file. Having to backstep the cpp file
          to my original mods style once again which we know
          works on the windows platforms.

Wed Jun 13 12:40:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.c:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.cpp:

          Annoying conflict of interest, having to revert the
          params_dup.c change/rename and put in another params_dup.cpp
          (that simply extern "C" block #includes paramer_dup.c)
          making which file is build conditional within the controlling
          mpc file.

Tue Jun 12 15:52:09 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/tests/Event/Mcast/AddrServer/Client.cpp:
          IPV6 dependent code enclosed within 'ACE_HAS_IPV6'

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.cpp:
          Fix for platforms which don't support 'getpid' API.

Fri Jun  8 19:23:45 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tao/Generic_Sequence_T.h:

          A default-constructed unbounded sequence has no buffer allocated, so
          "release" should be false.  This restores the behavior of sequences
          before the recent re-write.

        * tests/Sequence_Unit_Tests/bounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/bounded_value_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/string_sequence_tester.hpp:
        * tests/Sequence_Unit_Tests/unbounded_fwd_object_reference_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_object_reference_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_value_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/value_sequence_tester.hpp:

          Updated unit tests to take this into account.

Fri Jun 08 10:20:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * TAO/orbsvcs/orbsvcs/SSLIOP/params_dup.c:

          Due to Window's MFC compatiable builds objecting to this
          c file, it has been renamed to .cpp and extern "C" statements
          included with the two functions that require C linkage.

Wed Jun 06 16:07:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * TAO_IDL/ast/ast_type.cpp:

          Remove an assert (that can get treiggered legaly during
          idl compilation when errors have been seen, and we are
          only checking code further down).

Wed Jun  6 12:05:22 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Event/Mcast/AddrServer/Client.cpp:

          Fixed old reference to RtecUDPAdmin::INET that was overlooked
          yesterday.

Wed Jun 06 09:39:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * TAO_IDL/util/utl_scope.cpp:

          Corrects an issue with the wrong error message being
          generated for missing definitions within local modules.
          (Which exposed a lock-up problem.)

          Corrects the tao_idl lock-up that could occur during the
          look-up of certain identifiers within local modules, and
          put a stop to the non-CORBA compliance of searching in
          parent scope for identifiers that were not found within
          local modules. (Now displays a helpful diagnostic instead
          of generating non-complient code.)

Tue Jun  5 21:10:24 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_y.cpp:
        * tests/Bug_2560_Regression/Stock_Factory_i.cpp:
          Corrected header includes order. This fixes log2 API not being
          found errors on VxWorks6.4 RTI builds.

Tue Jun  5 18:56:16 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/RtecUDPAdmin.idl:
        * orbsvcs/tests/EC_MT_Mcast/AddrServer.cpp:

          The enum added to RtecUDPAdmin.idl contained "INET" which
          apparently collided with a '#define INET' on some VxWorks build
          environments. To avoid this collision, the enum values have been
          renamed. Thanks to Martin Corino for finding the cause of this
          build problem on VxWorks.

Tue Jun  5 13:23:04 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/nested_scope.idl:

          Commented out a line that has been determined by Simon Massey
          <simon dot massey at prismtech dot com> to be melformed IDL.

Mon Jun  4 22:40:13 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/run_test.pl:
          One more change to the ipv6 test address to use a spec-complient
          form of the test mcast address.

Mon Jun  4 19:14:02 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Timeouts/run_test.pl:
          Fixed test script. Had minor syntactic and control structures.

Mon Jun  4 11:37:42 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/ORBEndpoint.html: Updated the files to use
          ORBListenEndpoint rather than ORBEndpoint.  Thanks to Vikram
          Karandikar" <softking at gmail dot com> for motivating this
          change.

Mon Jun  4 02:56:02 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/Event/UDP/sender.cpp:

          Each of these test drivers use sap_any when opening a datagram
          socket, which on an IPv6 enabled platform causes the socket to
          only allow IPv6 target addresses when sending datagrams. Thus
          the test fails when using an IPv4 target address, reporting:
             Send of mcast fragment blocked (bad address).
          However this is not detected as an error. I have added the local
          endpoint's address family as a parameter to the datagram open
          method so that when the test is configured for IPv4 or IPv6, the
          local socket is set up correctly.

          This condition is written up in Bugzilla #2950. Ultimately I'd
          like to see a solution that is encapsulated in the
          ACE_SOCK_Dgram class so that applications such as these don't
          have to be modified. I'm not sure the best way to do that.

Sun Jun  3 19:57:23 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/constants.idl:

          Commented out a recently-added

          Fri May 25 18:49:12 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

          addition to this file - an octet constant with a left-shift
          operator in the rhs literal. My fix to AST_Expression in
          the above checkin didn't work for big-endian systems. Possible
          approaches to a complete fix all involve protracted design
          changes in expression handling, so the problem IDL is commented out
          for now.

Fri Jun  1 22:32:52 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * NEWS:

          Added a comment regarding IPv6 Mcast federation support.

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.cpp:

          Make use of new ip address equality test in ACE_INET_Addr.

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/Makefile.am:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/README:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/RTEC_MCast_Federated.mpc:
          Removed references to the barrier and the distributed address
          server, they were not needed for the test. For cross platform
          validation of the address server there is now a separate test
          case.

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/run_test.pl:

          Fixed the representative IPv6 address to allow proper sharing
          across multiple interfaces.

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/supplier.conf:

          Added a ConsumerControl specification so that a manually run
          supplier doesn't start spinning when the consumer goes away.

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/AddrServerMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/Barrier.idl:

          Removed these files, they were proved to be useless.

Fri Jun  1 19:03:46 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * TAO_IDL/fe/lex.yy.cpp:
          Minor change to update timestamp of this file. This is a
          generated file and therefore needs to have an later timestamp
          than the generator input (idl.ll).

Fri Jun 01 10:08:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.cpp:

          Change the static_cast to a reinterprest_cast for the
          defined (ACE_ENABLE_SWAP_ON_WRITE) code path to actually
          compile.

Thu May 31 19:13:32 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/RtecUDPAdmin.idl:
          Clean up typo in comment.

        * orbsvcs/tests/EC_MT_Mcast/AddrServer.h:
        * orbsvcs/tests/EC_MT_Mcast/AddrServer.cpp:
          Move the dependency on ace/INET_Addr.h into the cpp.

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/Makefile.am:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/RTEC_MCast_Federated.mpc:
          regenerated Makefile.am to get automake builds working.

Thu May 31 13:17:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tao/GIOP_Message_Base.cpp:

          Change the constness of the bodylen local variable to allow
          for the defined (ACE_ENABLE_SWAP_ON_WRITE) code path to actually
          compile.

Wed May 30 23:10:45 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/fe/idl.ll:

          This should have been part of the Fri May 25 18:02:30 UTC 2007
          commit.

Wed May 30 20:18:11 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        These changes support built in sequences in DDS.
        The -Gdcpsonly option was added to just generate DDS specific
        code for built in sequence. A DDS DCPS IDL file that includes
        tao/*Seq.pidl will generate code to include the DDS version
        of the generated code instead of TAO version sequence code
        so it supports DDS serialization.

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:

          Added gen_dcps_type_support_only flag.

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Generated code similar to before with -Gdcps except using #if 0
          to disable TAO specific code when -Gdcpsonly is given.
          The DDS CORBA::*Seq generated code will include the
          TAO CORBA::*Seq generated code so both TAO and DDS
          functions will be available.

        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Fixed bugs that call strlen() without check if it's nil string.

Wed May 30 20:06:04 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be_include/be_visitor_root/root.h:

          Added support for "native" at the root level (outside of a module or
          interface).

Wed May 30 12:44:07 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Event/Mcast/AddrServer/Server.cpp:

          Added missing ACE_OS:: prefix for strcasecmp.

Wed May 30 03:28:13 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/AddrServerMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:

          Added missing "ace/OS_NS_strings.h" include and used
          ACE_OS::strcasecmp instead of raw strcasecmp call.

Wed May 30 03:17:16 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/Event/Mcast/AddrServer/Client.cpp:

          Added missing "ace/OS_NS_strings.h" include and used
          ACE_OS::strcasecmp instead of raw strcasecmp call.

        * orbsvcs/tests/Event/Mcast/AddrServer/TestAddrServer.h:
        * orbsvcs/tests/Event/Mcast/AddrServer/TestAddrServer.cpp:

          Fixed fuzz error, ACE_THROW_SEPC is deprecated now.

Wed May 30 02:05:51 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/EC_MT_Mcast/AddrServer.h:
        * orbsvcs/tests/EC_MT_Mcast/AddrServer.cpp:
        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:

          Fixed yet another implementation of a simple address server.

Tue May 29 14:11:17 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/examples/RtEC/MCast/AddrServer.h:
        * orbsvcs/examples/RtEC/MCast/AddrServer.cpp:

          Added changes required by new interface.

        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.inl:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.h:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.cpp:

        * orbsvcs/orbsvcs/RtecUDPAdmin.idl:

          Support for IPv6 addresses used to federate event channels via
          multicast. The AddressServer interface is extended to support
          either IPv4 or IPv6 addresses, retaining backwards
          compatibility. The interface differs from the solution
          originally coded for TAO 1.4a, as that solution does not support
          a single address server shared by many event channels in a mixed
          host environment. Support for the 1.4a variant is not provided
          at this time, but could be added in the future if necessary.
          Given the nature of the bug and the lack of complaint from any
          1.4a users (including the original funder) it seems unlikely
          that this lack of support will cause a problem.

        * orbsvcs/tests/Event/Basic/BCast.h:
        * orbsvcs/tests/Event/Basic/BCast.cpp:

          Removed redundant address server implementation.

        * orbsvcs/tests/Event/Mcast/AddrServer:

          This is a new test added to validate the sharing of an address
          server in a mixed host environment. In this case, mixed host
          means different OSes and byte orders, which impacts the encoding
          of address data.

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/AddrServerMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/Barrier.idl:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/README:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/RTEC_MCast_Federated.mpc:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/SimpleAddressServer.h:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/SimpleAddressServer.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/run_test.pl:

          Modified the test to support IPv6 federation. Use run_test.pl
          -ipv6 to test. Also extended the test suite to enable running a
          distributed test across many hosts. A new executable,
          AddrServer, is generated that registers with the naming
          service. The AddrServer also acts as a synchronization point,
          supporting a new Barrier interface. This allows the test to be
          manually started on many hosts, with each supplier instance
          starting only when all expected suppliers have contacted the
          barrier.

        * orbsvcs/tests/Event/UDP/AddrServer.h:
        * orbsvcs/tests/Event/UDP/AddrServer.cpp:
        * orbsvcs/tests/Event/UDP/receiver.cpp:
        * orbsvcs/tests/Event/UDP/sender.cpp:

          Cleaned up the code to build with the new address server interface.

Tue May 29 09:39:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/MT_BiDir/run_test.pl:
        * tests/Oneway_Timeouts/run_test.pl:
        * tests/RTCORBA/Server_Protocol/run_test.pl:
        * tests/Servant_To_Reference_Test/run_test.pl:
          Updated for vxworks testing

Tue May 29 09:25:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Banded_Connections/run_test.pl:
        * tests/RTCORBA/Client_Propagated/run_test.pl:
        * tests/RTCORBA/Client_Protocol/run_test.pl:
          Updated for vxworks rtp, the RTCorba tests do require that the
          client also can use priorities, so when we have vxworks rtp,
          run also the client on the target

Tue May 29 00:15:35 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_native/native_ch.cpp:

          Fix a warning.

Mon May 28 12:29:13 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/Notify/lib/Driver.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:

          Addressed the "assignment within conditional expression" warning
          on the WinXP_VC71_WarningLevel4 build.

Mon May 28 05:06:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Explicit_Binding/run_test.pl:
        * tests/RTCORBA/Server_Protocol/run_test.pl:
        * tests/Two_Objects/run_test.pl:
          Updated for cross host testing

Mon May 28 01:01:09 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/Security/Bug_2908_Regression/MessengerServer.cpp:
        * orbsvcs/tests/Security/Crash_Test/client.cpp:

          Addressed "unreferenced local variable" warning on the
          WinXP_VC8_Versioned_Namespace build.

Sun May 27 15:35:46 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/examples/Notify/Lanes/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp:
        * orbsvcs/tests/Event/ThreadFlags/testflags.cpp:
        * orbsvcs/tests/Notify/Basic/AdminProperties.cpp:
        * orbsvcs/tests/Notify/Basic/ConnectDisconnect.cpp:
        * orbsvcs/tests/Notify/Basic/Events.cpp:
        * orbsvcs/tests/Notify/Basic/IdAssignment.cpp:
        * orbsvcs/tests/Notify/Basic/LifeCycle.cpp:
        * orbsvcs/tests/Notify/Basic/Sequence.cpp:
        * orbsvcs/tests/Notify/Basic/Simple.cpp:
        * orbsvcs/tests/Notify/RT_lib/RT_POA_Command.cpp:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.cpp:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp:
        * tests/Bug_2234_Regression/client.cpp:
        * tests/Bug_2677_Regression/DllORB.cpp:
        * tests/Exposed_Policies/Policy_Tester.cpp:
        * tests/Exposed_Policies/Policy_Verifier.cpp:
        * tests/ORB_Local_Config/Bug_2612/DllOrb.cpp:

          Addressed the "assignment within conditional expression" warning
          on the WinXP_VC71_WarningLevel4 build.

Sun May 27 14:03:18 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/RTCORBA/Activity/Activity.cpp:
        * examples/RTCORBA/Activity/Builder.cpp:
        * examples/RTCORBA/Activity/POA_Holder.cpp:
        * examples/RTCORBA/Activity/Periodic_Task.cpp:
        * examples/RTScheduling/DT_Creator.cpp:
        * examples/RTScheduling/POA_Holder.cpp:

          Addressed the "assignment within conditional expression" warning
          on the WinXP_VC71_WarningLevel4 build.

Sat May 26 03:09:27 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/ORB_Core.cpp:

          Addressed the "assignment within conditional expression" warning
          on the WinXP_VC71_WarningLevel4 build.

Sat May 26 00:30:18 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/fe/fe_lookup.cpp:
          Reverse an unwanted change to this file.

Fri May 25 18:49:12 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_expression.cpp:

          Fixed a bug in parsing of octet constants where the rhs
          has an infix operator. Thanks to Lother Werzinger
          <lothar at tradescape dot biz> for reporting the
          problem. This fix closes [BUGID:2944].

        * tests/IDL_Test/constants.idl:

          Added some of items in the example IDL submitted by
          Lothar to our test suite of problem IDL declarations.

Fri May 25 18:02:30 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/be/be_visitor_native/native_ch.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/fe/fe_lookup.cpp:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/util/utl_global.cpp:
          Provide support for TAO DDS zero-copy read native types.

Thu May 24 12:02:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Muxed_GIOP_Versions/run_test.pl:
        * tests/POA/Bug_1592_Regression/run_test.pl:
          Updated for cross platform testing

Thu May 24 08:00:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Connection_Purging/run_test.pl:
          Updated for cross platform testing

Wed May 23 19:57:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/TransportCurrent/IIOP/run_test.pl:
        * tests/TransportCurrent/Framework/run_test.pl:
          Updated for cross platform testing

Wed May 23 12:41:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ClientRequestInterceptor_Adapter_Impl.{h,cpp}:
          Made the exception argument of process_forward_request const

        * tao/TAO_Server_Request.{h,cpp,inl}:
          Removed result_seq_ member and associated methods, I did a
          search through the code and couldn't fine a place where these
          are used, so removed them. If this causes errors on the
          scoreboard I will readd them, but so far as I can tell that will
          not be needed. This will reduce footprint and increase
          performance

        * tao/AnyTypeCode/Union_TypeCode.cpp:
          Addressed code not reached warning

Wed May 23 12:37:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/LongUpcalls/run_test.pl:
          Updated for cross platform testing

Wed May 23 11:41:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/EndpointPolicy/run_test.pl:
          Updated for cross platform testing

Tue May 22 12:40:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Generator_Parser.cpp (write_reply_header):
          The service context can just be marshaled with the regular <<
          operator in all cases and added a check whether this succeeded
          or not

        * tao/RTCORBA/Thread_Pool.cpp:
          Layout changes

Mon May 21 12:36:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI_Buffering/run_timeout_reactive.pl:
        * tests/Bug_2735_Regression/run_test.pl:
        * tests/Crash_On_Write/run_test.pl:
        * tests/Faults/run_test.pl:
        * tests/Portable_Interceptors/Redirection/run_test.pl:
        * tests/Smart_Proxies/Policy/run_test.pl:
          Improved for VxWorks cross platform testing

Mon May 21 12:01:30 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * orbsvcs/tests/Bug_2925_Regression/run_test_ipv6.pl:
        * orbsvcs/tests/Bug_2925_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2925_Regression/README:
          On some test systems the timeout for client and server
          was too short. So, extended the timeout and added README.
          Bug#2925.

Thu May 17 16:38:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/taoidldefaults.mpb:

          Only set the tao_idl, tao_idl_dep and tao_idlflags template
          variables if we're not generating for automake.  It does not need
          these settings.

Thu May 17 12:14:08 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * utils/catior/catior.cpp:

          Added a missing newline from an error message.

Thu May 17 12:08:15 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2377_Regression/Makefile.am:

          The source files were changed in the change from
          Mon May  7 16:08:17 UTC 2007.  The Makefile.am needs to be
          manually updated.

Thu May 17 12:02:12 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IORManipulation/filter/Makefile.am:

          It wasn't my last attempt.  I'm adding the TAO_PortableServer
          library to the link list.

Wed May 16 16:26:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IORManipulation/filter/Makefile.am:

          Hopefully my last attempt to correct this file.

Wed May 16 09:33:38 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
          There was a compile error on SunOS introduced with the
          fix for bug#2925. Fixed it.

        * tao/Profile.h:
          Fix for compile warnings generated because of improper
          class member initialization.

Wed May 16 07:30:55 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
          Removed -z now for suncc, we do that in generic for sun now

Tue May 15 12:46:18 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * orbsvcs/tests/Bug_2377_Regression/run_test_ipv6.pl:
          Added IPv6 test to MIOP test for bug#2377.

Tue May 15 11:36:07 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
          Implementation of IPv6 and dscp in MIOP. Fix for bug#2925.

        * orbsvcs/tests/Bug_2925_Regression/client.cpp:
        * orbsvcs/tests/Bug_2925_Regression/svc.conf:
        * orbsvcs/tests/Bug_2925_Regression/run_test_ipv6.pl:
        * orbsvcs/tests/Bug_2925_Regression/Hello_Impl.cpp:
        * orbsvcs/tests/Bug_2925_Regression/server.cpp:
        * orbsvcs/tests/Bug_2925_Regression/Hello.idl:
        * orbsvcs/tests/Bug_2925_Regression/Hello_Impl.h:
        * orbsvcs/tests/Bug_2925_Regression/Bug_2925_Regression.mpc:
        * orbsvcs/tests/Bug_2925_Regression/run_test.pl:
          Adding test for bug#2925.

Tue May 15 07:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/BiDirectional/run_test.pl:
        * tests/Bug_2654_Regression/run_test.pl:
        * tests/Bug_2734_Regression/run_test.pl:
        * tests/CallbackTest/run_test.pl:
        * tests/MT_BiDir/run_test.pl:
        * tests/Muxed_GIOP_Versions/run_test.pl:
        * tests/POA/EndpointPolicy/run_test.pl:
        * tests/Smart_Proxies/run_test.pl:
        * tests/Stack_Recursion/run_test.pl:
          Improved for vxworks testing

        * tests/Bug_2356_Regression/Bug_2356_Regression.mpc:
        * tests/Bug_2356_Regression/client.cpp:
        * tests/Bug_2356_Regression/server.cpp:
          Explicitly link in the codeset library

Tue May 15 07:36:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/client.h:
        * tests/Param_Test/Makefile.am:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Param_Test/server.cpp:
          Use the codeset library, we do experience crashes when doing
          interoperability tests between linux and vxworks where both
          are linked statically and then can't load the library on demand

Tue May 15 06:28:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Oneways/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_1/run_test.pl:
        * tests/DSI_AMH/run_test.pl:
        * tests/LongUpcalls/run_test.pl:
        * tests/Multiple/run_test.pl:
        * tests/ORT/run_test.pl:
        * tests/Server_Connection_Purging/run_test.pl:
          Improvements for VxWorks cross platform testing

Mon May 14 16:32:59 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * tao/Profile.cpp:
        * tao/Profile.h:
          Proper fix for the race condition in
          TAO_Profile::create_tagged_profile that was discussed
          in bug#2377.

Mon May 14 13:02:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DSI_Gateway/run_test.pl:
          Extended timeouts for slower systems

Mon May 14 11:39:08 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IORManipulation/filter/Makefile.am:

          Use $(TAO_IDL) instead of $(ACE_ROOT)/bin/tao_idl for the
          dependency.

Mon May 14 10:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * tao/Strategies/COIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Acceptor.cpp:
          Fixed unreachable code warnings, fixes bugzilla 2929, thanks
          to Ossama for delivering the patch

Fri May 11 14:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/DIOP/README:
          Small updates to reflect current location of DIOP

Fri May 11 14:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * interop-tests/wchar/client.cpp:
        * interop-tests/wchar/server.cpp:
          Layout changes

Fri May 11 14:26:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
          Fixed argument not used warning when messaging is disabled

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert_Handler.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientRequestInterceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
          Layout change

        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
          Initialise pointer with 0

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
          bool and layout changes

        * orbsvcs/tests/HTIOP/AMI/Test_Output.cpp:
        * orbsvcs/tests/HTIOP/BiDirectional/Test_Output.cpp:
        * orbsvcs/tests/HTIOP/Hello/Test_Output.cpp:
          Removed check for psos

Fri May 11 14:16:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_typecode/enum_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:
          Removed not needed includes

Fri May 11 14:15:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Generator_Parser_12.h:
          Improvement to get better doxygen docu

Fri May 11 14:07:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Tagged_Profile.{h,cpp,inl}:
          Doxygen fixes, bool changes and layout changes

Fri May 11 11:36:25 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/Utils/ORB_Manager.h:
        * tao/Utils/ORB_Manager.cpp:

          Layout Changes.
          Use PolicyList_Destroyer to destroy Policy object even in exceptional cases.
          Removed redundant method.
          Use ::_nil() instead of 0 (NULL pointer).

Thu May 10 17:40:58 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IORManipulation/filter/Makefile.am:

          Another attempt at fixing the idl processing rules.

Wed May  9 19:19:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/String_TypeCode.cpp:
        * tao/BiDir_Adapter.h:
        * tao/BiDir_GIOP/BiDir_ORBInitializer.cpp:
        * tao/BiDir_GIOP/BiDirPolicy_Validator.cpp:
        * tao/PortableServer/Servant_Upcall.h:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
          Layout changes

Wed May  9 11:29:42 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IORManipulation/filter/Makefile.am:

          Fixed by adding the idl processing rules.

Tue May  8 11:25:53 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:
        * tests/IORManipulation/Makefile.am:
        * tests/IORManipulation/filter/Makefile.am:

          Added an automake makefile for the IORManip filter test.

Tue May  8 11:15:00 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/IORManipulation/IORManip_IIOP_Filter.h:
        * tao/IORManipulation/IORManip_IIOP_Filter.cpp:

          Added missing checks for TAO_HAS_IIOP.

        * tao/Makefile.am:

          Added the new IORManip*Filter.{h,cpp} files.

Tue May  8 09:31:35 UTC 2007  Vadym Ridosh <vr@prismtech.com>

        * orbsvcs/tests/Bug_2377_Regression/Hello_Impl.cpp:
        * orbsvcs/tests/Bug_2377_Regression/uipmc_test.cpp:
          Changed number of client threads in the test from 1 to 32
          and made output a bit nicer.

Mon May  7 18:43:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.am:
          Added missing String_Const_Sequence_Element_T.h. Thanks to
          Thomas Lockhart <Thomas dot Lockhart at jpl dot nasa dot gov>
          for reporting this issue

Mon May  7 16:08:17 UTC 2007  Vadym Ridosh  <vr@prismtech.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
          Fix for Bug 2377. It introduces same connection management
          as in other protocols (IIOP, etc) which actually fixed the problem.

        * orbsvcs/tests/Bug_2377_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_2377_Regression/Hello_Impl.cpp:
        * orbsvcs/tests/Bug_2377_Regression/Hello.idl:
        * orbsvcs/tests/Bug_2377_Regression/Hello_Impl.h:
        * orbsvcs/tests/Bug_2377_Regression/Bug_2377_Regression.mpc:
        * orbsvcs/tests/Bug_2377_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2377_Regression/uipmc_test.cpp:
          The test was updated.

        * tao/Profile.cpp:
        * tao/Profile.h:
          Fix for a race condition in TAO_Profile::create_tagged_profile()
          use of which is triggered by UIPMC addressing mode. This is
          discussed in context of Bug 2377.

Mon May  7 11:46:47 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/IORManipulation/IORManip_Filter.h:
        * tao/IORManipulation/IORManip_Filter.cpp:
        * tao/IORManipulation/IORManip_IIOP_Filter.h:
        * tao/IORManipulation/IORManip_IIOP_Filter.cpp:

          Added a filter class that allows users to create new object
          references based on existing multi-profile object references by
          filtering out profiles using user defined criteria.  The use of
          -ORBUseSharedProfile 0 is required for this to function.

        * tests/IORManipulation/filter/IORManip_Filter_Test.mpc:
        * tests/IORManipulation/filter/Test.idl:
        * tests/IORManipulation/filter/run_test.pl:
        * tests/IORManipulation/filter/server.cpp:

          Added a test to demonstrate the functionality of the filtering
          ability.

Fri May  4 14:43:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Trader.cpp:
          Fixed setting of maximums through the commandline. Thanks to
          Patrick Spiering <pspiering at aweta dot nl> for delivering
          the patch. This fixes bugzilla 2921

Fri May  4 14:06:39 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tao/Transport_Connector.cpp:
          Made TransportCleanupGuard exception safe.

Fri May  4 09:12:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Sequence_TypeCode.h:
        * tao/AnyTypeCode/TypeCode_Case_Base_T.h:
        * tao/AnyTypeCode/Union_TypeCode.h:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
          Layout changes

Thu May  3 13:08:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2804_Regression/Test.idl:
        * tests/Bug_2804_Regression/client.cpp:
          Simplified this test another step

Thu May  3 12:34:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2804_Regression/Test.idl:
          Simplified this file to the real minimum required to reproduce the
          bug

Thu May  3 10:09:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Fixed interoperability problems with TAO 1.3.x and the current
          version as reported in bugzilla 2918. The IDL compiler still
          needs to be done to also generate repeated typecodes for the
          given test case. Thanks to Patrick Spiering <pspiering at aweta dot nl>
          for delivering the patch

        * tao/DynamicInterface/Request.h:
        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
          Layout changes

Wed May  2 14:05:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2918_Regression/*:
          New test for bug 2918, at this moment it works, but the test will
          be extended to detect whether the size of the marshalled any is
          too big or not.

        * tests/Bug_2289_Regression/server.cpp:
          Initialise pointer with 0

        * tests/IDL_Test/struct.idl:
          Added some more test cases

        * tests/OBV/Simple/run_test.pl:
          Extended wait time for slower systems

Wed May  2 14:02:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolder_i.cpp:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging.h:
          Moved the exception_holder_raise from Messaging_Helper
          to the exception holder. No need anymore to have this as
          seperate helper method

        * tao/PortableServer/Upcall_Wrapper.cpp:
          Reworked the upcall wrapper to always do a try/catch and when
          an exception has occured, invoke the collocated argument
          converter when one is set, this will then handle the exception,
          if it is not set, we raise it as normally. With this change
          when using collocated AMI, the exception is passed to the
          reply handler instead of passed back to the caller. This fixes
          bugzilla 2909.

        * tao/DynamicInterface/DII_Arguments_Converter_Impl.cpp:
          Implement handle_corba_exception to raise the exception is there
          is one available in the request. Needed because of the changes
          in the upcall wrapper above.

        * tao/Messaging/AMI_Arguments_Converter_Impl.{h,cpp}:
          Implemented handle_corba_exception

        * tao/PortableServer/Collocated_Arguments_Converter.h:
          Added method to handle exceptions

        * tao/PortableServer/Upcall_Wrapper.h:
          Doxygen fix

Wed May  2 13:26:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Enum_TypeCode.h:
        * tao/AnyTypeCode/skip.cpp:
        * tao/AnyTypeCode/Struct_TypeCode.cpp:
        * tao/AnyTypeCode/Struct_TypeCode.h:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
        * tao/IORInterceptor/IORInfo.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
          Layout changes

        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
          Extended to also handle exceptions in the server request

        * tao/PortableServer/Root_POA.cpp:
          Layout changes and zapped some intermediate variables

Mon Apr 30 08:59:37 CDT 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO version 1.5.8 released.

Mon Apr 30 17:47:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:

          Removed a non-existent entry.

Mon Apr 30 12:57:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added user visible changes for 1.5.8 based on ChangeLog entries.

Fri Apr 27 08:19:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Trading/Offer_Importer.cpp:
          Fixed compile error with Borland C++

        * tests/Bug_2909_Regression/client.cpp:
          Fixed argument not used warning

Thu Apr 26 19:06:19 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:

          Fixed a bug introduced by my CORBA::LongLong support changes.  The
          use of CORBA::Long was inadvertently broken. Thanks to
          Patrick Spiering <pspiering at aweta dot nl> for reporting this.

        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp:

          Call get_double() on the dynamic any sequence in the
          TAO_Element_Equal<CORBA::Double> specialization.

        * orbsvcs/tests/Trading/Offer_Importer.cpp:
        * orbsvcs/tests/Trading/TT_Info.h:
        * orbsvcs/tests/Trading/TT_Info.cpp:

          Modified this test to ensure that the queries return the expected
          number of elements or an error is printed.

Thu Apr 26 14:37:16 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added an entry about the new -a option on Event_Service.

Thu Apr 26 13:22:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2909_Regression/*:
          New regression for bug 2909. This bug is not fixed yet, just adding
          the test to the repo. This test works perfect with collocation
          disabled (using -ORBCollocation no or -ORBAMICollocation 0) but
          fails when using a collocated AMI call

Thu Apr 26 12:19:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2768_Regression/Bug_2768_Regression.mpc:
          Don't build the server with CORBA/e micro

Thu Apr 26 11:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMH_Oneway/server.cpp:
          Added timestamp to the received message so that we get some more
          info why this test timeouts on one of the solaris test hosts

Thu Apr 26 05:48:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted the change below, this breaks the Portable_Interceptors/Slot
        and Portable_Interceptors/Bug_2510_Regression tests on linux

        Wed Apr 25 08:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>
        * tao/ORB_Core.cpp:
          Cleanup TSS resources in the destructor. This fixes bugzilla bug 2533.
          Thanks to Martin Cornelius <Martin dot Cornelius at smiths-heimann dot com>
          for reporting this.

Wed Apr 25 18:29:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Fixed compile problem in single threaded builds

Wed Apr 25 09:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Security/Bug_2908_Regression/*:
          Integrated regression for bug 2908. Thanks to Ravi Kanth
          <kanth dot ravi at wipro dot com> for reporting this issue
          and delivering the regression test.

Wed Apr 25 08:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Cleanup TSS resources in the destructor. This fixes bugzilla bug 2533.
          Thanks to Martin Cornelius <Martin dot Cornelius at smiths-heimann dot com>
          for reporting this.

        * tao/Cleanup_Func_Registry.h:
        * tao/PI/ORBInitInfo.cpp:
          Layout changes

Wed Apr 25 07:39:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp (process_reply_message):
          Also copy the char/wchar translators

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
          Layout change

        * tao/Messaging/ExceptionHolder_i.{h,cpp}:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging.h:
          Added char/wchar translator which are then used when demarshaling the
          exception. This fixes bugzilla bug 2356, when throwing an exception
          with AMI that does contain a wstring the demarshaling of the wstring
          resulted in an incorrect wstring because the wchar translator was not
          used. Thanks to Alan Stokes <alan at alanstokes dot org dot uk> for
          reporting this issue.

        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
          When creating the exception holder we now have to pass in the
          char and wchar translators

        * tao/AnyTypeCode/Union_TypeCode.cpp:
          Layout changes

Wed Apr 25 07:19:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/ami_test_i.cpp:
          When throwing the exception explicitly pass in an id and string

        * tests/AMI/simple_client.cpp:
          Check all values in the reply handler, if they have an unexpected
          result log an error.

        * tests/Nested_Event_Loop/server.cpp:
          No need to pass in empty orb name and destroy the ORB when
          ready.

Wed Apr 25 07:07:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2356_Regression/*:
          New regression for bug 2356

Tue Apr 24 18:35:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression/Compression.pidl:
        * tao/Compression/zlib/ZlibCompressor_Factory.cpp:
        * tests/Compression/server.cpp:
          Added COMPRESSORID_ for all id constants to make them more unique

Tue Apr 24 13:17:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2201_Regression/tests.cpp:
          Added orb->destroy(), then the test exists on VxWorks

Tue Apr 24 13:05:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Policies/Policies.cpp:
          Added orb->destroy(), then the test exists on VxWorks

Tue Apr 24 13:05:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Current/Current.cpp:
          Added orb->destroy(), then the test exists on VxWorks

Tue Apr 24 12:06:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression/Compression.pidl:
        * tao/Compression/zlib/ZlibCompressor_Factory.cpp:
        * tests/Compression/server.cpp:
          Made the CompressorId an unsigned short and define constants
          for the predefined compressor ids. Thanks to Ossama for proposing
          this change. This fixed bugzilla bug 2910.

Tue Apr 24 11:54:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2678_Regression/Bug_2678_Regression.mpc:
          Don't build server when using CORBA/e micro

Tue Apr 24 09:22:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
          Implemented the convert_reply. When there is a reply
          dispatcher (set in the collocated case), we do invoke the
          reply dispatcher to call the reply handler. This fixes
          bugzilla 2806

        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
          In case doing a collocated AMI call set the reply
          dispatcher in the operation details. This is needed to
          call the reply dispatcher after the servant has been
          invoked.

        * tao/operation_details.h:
        * tao/operation_details.inl:
          Added reply dispatcher as optional member with get/set
          methods

        * tao/CDR.cpp:
        * tao/Collocated_Invocation.h:
        * tao/Endpoint_Selector_Factory.h:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/Messaging/ExceptionHolder_i.h
          Layout change

        * tao/DynamicInterface/DII_Reply_Dispatcher.h:
          Fixed typo in comment

        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/TAO_Server_Request.inl:
          Use true/false

        * tao/Messaging/Messaging.h:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.h:
        * tao/Messaging/Asynch_Invocation_Adapter.h:
          We do call the reply handler stub instead of skeleton, so did
          some rename actions

        * tao/PortableServer/Servant_Base.cpp:
          Catch const exception

        * tao/TAO_Server_Request.h:
          Documentation update

Tue Apr 24 07:50:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DIOP/run_test.pl:
          Improved for cross host testing

        * tests/Bug_2805_Regression/client.cpp:
          Added some more debug statements and made the reply count
          an atomic op because it is updated by multiple threads and
          could lead to invalid results

Mon Apr 23 14:16:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/RTCORBA/Banded_Connections/server.cpp:
          Get rid of assert and throw/return an error report!

Mon Apr 23 12:03:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_ch.cpp:
          Improved layout of generated code

Mon Apr 23 11:16:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Oneways/run_test.pl:
        * tests/Big_Twoways/run_test.pl:
        * tests/Bug_2349_Regression/run_test.pl:
        * tests/Bug_2494_Regression/run_test.pl:
        * tests/Bug_2683_Regression/run_test.pl:
        * tests/MT_Server/run_test.pl:
        * tests/Native_Exceptions/run_test.pl:
        * tests/Nested_Event_Loop/run_test.pl:
        * tests/NestedUpcall/Simple/run_test.pl:
        * tests/Parallel_Connect_Strategy/run_test.pl:
        * tests/POA/Persistent_ID/run_test.pl:
          Improved for vxworks testing

Fri Apr 20 14:27:45 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_2768_Regression/Bug_2768_Regression.mpc:

          Added the 'corba_messaging' base project since this test uses CORBA
          messaging features.

Fri Apr 20 13:42:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CORBALOC_Parser.cpp:
        * tao/CORBANAME_Parser.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
          Layout changes

        * tao/TAO_Internal.cpp:
          Use prefix increment

        * tao/Transport_Connector.cpp:
          Made debug statements consistent

Fri Apr 20 13:37:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CollocationLockup/run_test.pl:
          Fixed error in this script

Fri Apr 20 11:43:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1330_Regression/run_test.pl:
          Corrected this script

Fri Apr 20 11:38:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
          Fixed compile error

Fri Apr 20 10:00:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Oneway_Buffering/test.idl:
        * tests/Oneway_Buffering/client.cpp:
        * tests/Oneway_Buffering/Oneway_Buffering_Admin.cpp:
        * tests/Oneway_Buffering/Oneway_Buffering_Admin.h:

          On slower (long time sliced multi-threaded) systems, the
          old test assumed that all communications between the
          three processes were "instantainious", which allowed the
          client to miss the syncronization with previous attempts,
          which caused it to issue lost message debug. Then the
          lost message was immediatly found on the next itteration
          of the test which caused it to think the policy it wasr
          testing had failed. Basically this modification allows for
          slight delays (only if necessary) when we are expecting the
          various communications to have been sent.

Fri Apr 20 08:05:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Collocated_Arguments_Converter.cpp:
        * tao/PortableServer/Collocated_Arguments_Converter.h:
        * tao/PortableServer/DII_Arguments_Converter.cpp:
        * tao/PortableServer/DII_Arguments_Converter.h:
          Refactored the DII argument to a generic collocated argument
          converter. The issue that was solved for DII is also valid
          for AMI. Also made a method for converting the request and
          one for the reply, converting the reply is now not done yet but
          we do know that also fails.

        * tao/PortableServer/Upcall_Wrapper.cpp:
          Changed how the argument converter is retrieved. Instead of retrieving
          it using service configurator we put a pointer in the operation details
          which is set or not.

        * tao/DynamicInterface/DII_Arguments_Converter_Impl.cpp:
        * tao/DynamicInterface/DII_Arguments_Converter_Impl.h:
          Updated because the DII base class is renamed:

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
          Added new adapter for oneway DII calls so that this adapter can
          set the DII Argument Converter for DII oneway calls.

        * tao/DynamicInterface/Request.cpp:
          Use false instead of 0, layout changes, use new DII Oneway adapter.

        * tao/DynamicInterface/Request.h:
        * tao/Protocol_Factory.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/PI/PolicyFactoryC.cpp:
          Layout changes

        * tao/DynamicInterface/Request.inl:
          Use false instead of 0

        * tao/DynamicInterface/Server_Request.inl:
          Use static_cast instead of c-style cast

        * tao/IIOP_Connector.cpp:
          Fixed an inconsistent debug statement

        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.h:
        * tao/Invocation_Adapter.inl:
          Layout changes and no need to have a member whether we are
          a DII invocation or not

        * tao/Makefile.am:
          Updated for new files

        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
        * tao/Messaging/AMI_Arguments_Converter_Impl.h:
          New AMI argument converter

        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
          Use the new AMI argument converter which fixes bugzilla 2805. Also
          use the

        * tao/Messaging/Messaging_Loader.cpp:
          Added include of the AMI Argument converter

        * tao/operation_details.cpp:
        * tao/operation_details.h:
        * tao/operation_details.inl:
          Instead of storing whether we have a DII call or not, we store
          a pointer to a collocated argument converter that is set or not set

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/params.cpp:
        * tao/params.h:
        * tao/params.inl:
          Added a new -ORBAMICollication which is default 1. If this is 0,
          then when a collocated AMI invocation is made, the call is converted
          to a remote call so that another thread can handle the servant. Also
          the problems with argument corruption are then gone. This is for
          bugzilla 2351.

        * tao/Profile.h:
          Documentation fix

        * tao/Profile_Transport_Resolver.cpp:
        * tao/Profile_Transport_Resolver.h:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/POAManagerFactory.cpp:
          Layout changes

        * tao/Stub.inl:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.inl:
          Bool changes

        * tao/TkResource/TkResource_Factory.h:
        * tao/QtResource/QtResource_Factory.h:
          Removed not used mutex

        * tao/Valuetype/AbstractBase.cpp:
          Bool change

        * docs/Options.html:
          Document new ORBAMICollocation option, this is default 1 which
          means that when a collocated AMI call is made the servant is invoked
          using the client thread. When this option is no, when a collocated AMI
          call is made, this is converted to a remote call so that a different
          thread can be used to invoke the servant.

Thu Apr 19 18:24:45 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:

          To resolve the strange "recursive" static initialization
          with SunCC compiler, we have to use '-z now' option in the
          linking stage for the client executable.More debtails see
          the relavent bugzilla entry.

Thu Apr 19 17:12:19 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp (DRV_sweep_dirs):

          For each directory swept recursively, get its full path
          name and add it to the IDL compiler's internal list of
          include paths. This change makes it unnecessary for the
          user to add a -I option for each directory in the subtree
          whose root is passed to the -r option. Thanks to Abdullah
          Sowayan <abdullah dot sowayan at lmco dot com> for
          reporting the problem.

Thu Apr 19 16:46:01 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/Sequence_Unit_Tests/run_test.pl:

          Added the -boost and -noboost options to allow the user to determine
          whether or not to run tests that require the Boost unit test library.

Thu Apr 19 13:49:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI_Timeouts/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:43:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/CosEC/Simple/run_test.pl:
        * orbsvcs/examples/CosEC/TypedSimple/run_test.pl:
        * orbsvcs/examples/ImR/Advanced/run_test.pl:
        * orbsvcs/examples/LoadBalancing/run_test.pl:
        * orbsvcs/examples/Log/Basic/run_test.pl:
        * orbsvcs/examples/Log/Event/run_test.pl:
        * orbsvcs/examples/Log/Notify/run_test.pl:
        * orbsvcs/examples/Log/RTEvent/run_test.pl:
        * orbsvcs/examples/ORT/run_test.pl:
        * orbsvcs/examples/RtEC/IIOPGateway/consumerec_crash.pl:
        * orbsvcs/examples/RtEC/IIOPGateway/run_test.pl:
        * orbsvcs/examples/RtEC/Simple/run_test.pl:
        * orbsvcs/examples/Security/Send_File/run_test.pl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/default_configuration.pl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/default_configuration.pl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/run_test.pl:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/run_test.pl:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/run_test.pl:
        * orbsvcs/tests/AVStreams/Component_Switching/run_test.pl:
        * orbsvcs/tests/AVStreams/Full_Profile/run_test.pl:
        * orbsvcs/tests/AVStreams/Latency/run_test.pl:
        * orbsvcs/tests/AVStreams/Modify_QoS/run_test.pl:
        * orbsvcs/tests/AVStreams/Multicast/run_test.pl:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/run_test.pl:
        * orbsvcs/tests/AVStreams/Multiple_Flows/run_test.pl:
        * orbsvcs/tests/AVStreams/Pluggable/run_test.pl:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/run_test.pl:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/run_test.pl:
        * orbsvcs/tests/Bug_1334_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1393_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1395_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1436_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1437_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1630_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2247_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2248_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2316_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2800_Regression/run_test.pl:
        * orbsvcs/tests/CosEvent/Timeout/run_test.pl:
        * orbsvcs/tests/EC_Custom_Marshal/run_test.pl:
        * orbsvcs/tests/EC_Multiple/run_test.pl:
        * orbsvcs/tests/EC_Throughput/run_test.pl:
        * orbsvcs/tests/EC_Throughput/run_test_overflow.pl:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/run_test.pl:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/run_test.pl:
        * orbsvcs/tests/FaultTolerance/IOGR/run_test.pl:
        * orbsvcs/tests/FT_App/run_test_basic.pl:
        * orbsvcs/tests/FT_App/run_test_demo.pl:
        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
        * orbsvcs/tests/FT_App/run_test_rmnotifier.pl:
        * orbsvcs/tests/FT_App/run_test_rmregistry.pl:
        * orbsvcs/tests/HTIOP/AMI/run_test.pl:
        * orbsvcs/tests/HTIOP/BiDirectional/run_test.pl:
        * orbsvcs/tests/HTIOP/Hello/run_test.pl:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:
        * orbsvcs/tests/ImplRepo/locked/run_test.pl:
        * orbsvcs/tests/ImplRepo/NameService/run_test.pl:
        * orbsvcs/tests/ImplRepo/run_test.pl:
        * orbsvcs/tests/ImplRepo/scale/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Application_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/run_test.pl:
        * orbsvcs/tests/Log/Basic_Log_Test/run_test.pl:
        * orbsvcs/tests/Miop/McastHello/run_test.pl:
        * orbsvcs/tests/Notify/Blocking/run_test.pl:
        * orbsvcs/tests/Notify/Bug_1385_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Bug_2561_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Discarding/run_test.pl:
        * orbsvcs/tests/Notify/Ordering/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/Filter/run_test.pl:
        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Property/run_test.pl:
        * orbsvcs/tests/RTCosScheduling/run_test.pl:
        * orbsvcs/tests/Security/BiDirectional/run_test.pl:
        * orbsvcs/tests/Security/Big_Request/run_test.pl:
        * orbsvcs/tests/Security/Bug_1107_Regression/run_test.pl:
        * orbsvcs/tests/Security/Callback/run_test.pl:
        * orbsvcs/tests/Security/MT_IIOP_SSL/run_test.pl:
        * orbsvcs/tests/Security/MT_SSLIOP/run_test.pl:
        * orbsvcs/tests/Security/MT_SSLIOP/run_test_harsh.pl:
        * orbsvcs/tests/Security/MT_SSLIOP/run_test_heavy.pl:
        * orbsvcs/tests/Security/Secure_Invocation/run_test.pl:
        * orbsvcs/tests/Time/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:34:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * interop-tests/wchar/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:32:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_12/run_test.pl:
        * examples/Advanced/ch_21/run_test.pl:
        * examples/Advanced/ch_3/run_test.pl:
        * examples/Advanced/ch_8_and_10/run_test.pl:
        * examples/Buffered_AMI/run_test.pl:
        * examples/Buffered_Oneways/run_test.pl:
        * examples/Callback_Quoter/run_test.pl:
        * examples/OBV/Typed_Events/run_test.pl:
        * examples/Persistent_Grid/run_test.pl:
        * examples/PluggableUDP/tests/Performance/run_test.pl:
        * examples/PluggableUDP/tests/SimplePerformance/run_test.pl:
        * examples/RTScheduling/Fixed_Priority_Scheduler/run_test.pl:
        * examples/RTScheduling/MIF_Scheduler/run_test.pl:
        * examples/Simple/bank/run_test.pl:
        * examples/Simple/echo/run_test.pl:
        * examples/Simple/grid/run_test.pl:
        * examples/Simple/time-date/run_test.pl:
        * examples/Simple/time/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:30:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:28:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Callback/run_test.pl:
        * performance-tests/Cubit/TAO/DII_Cubit/run_test.pl:
        * performance-tests/Cubit/TAO/IDL_Cubit/run_test.pl:
        * performance-tests/Cubit/TAO/IDL_Cubit/run_test_lite.pl:
        * performance-tests/Cubit/TAO/MT_Cubit/run_test.pl:
        * performance-tests/Latency/AMH_Single_Threaded/run_test.pl:
        * performance-tests/Latency/AMI/run_test.pl:
        * performance-tests/Latency/Deferred/run_test.pl:
        * performance-tests/Latency/DII/run_test.pl:
        * performance-tests/Latency/DSI/run_test.pl:
        * performance-tests/Latency/Single_Threaded/default_configuration.pl:
        * performance-tests/Latency/Single_Threaded/run_test.pl:
        * performance-tests/Latency/Thread_Per_Connection/run_test.pl:
        * performance-tests/Latency/Thread_Pool/run_test.pl:
        * performance-tests/POA/Implicit_Activation/run_test.pl:
        * performance-tests/Protocols/run_test.pl:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/run-test.pl:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/run-test.pl:
        * performance-tests/RTCorba/Oneways/Reliable/run_test.pl:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/run_test.pl:
        * performance-tests/Sequence_Latency/AMI/run_test.pl:
        * performance-tests/Sequence_Latency/Deferred/run_test.pl:
        * performance-tests/Sequence_Latency/DII/run_test.pl:
        * performance-tests/Sequence_Latency/DSI/run_test.pl:
        * performance-tests/Sequence_Latency/Single_Threaded/default_configuration.pl:
        * performance-tests/Sequence_Latency/Single_Threaded/run_test.pl:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/run_test.pl:
        * performance-tests/Sequence_Latency/Thread_Pool/run_test.pl:
        * performance-tests/Throughput/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 05:39:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocateRequest_Invocation_Adapter.cpp:
          Fixed conversion warning with VxWorks

Thu Apr 19 05:24:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AlternateIIOP/run_test.pl:
          Improved for vxworks testing

        * tests/Bug_1476_Test/client.cpp:
          Layout changes

        * tests/CollocationLockup/CollocationLockup.mpc:
          Removed not needed after

        * tests/CollocationLockup/run_test.pl:
        * tests/MT_Server/run_test.pl:
          Added check whether spawn did work, if not, exit directly instead of
          waiting for an IOR file

        * tests/Native_Exceptions/run_test.pl:
        * tests/NestedUpcall/Simple/run_test.pl:
        * tests/Server_Leaks/run_test.pl:
          Use a perl variable for the base ior filename so that we only define
          it once

Wed Apr 18 19:55:11 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:

          Fixed a bug that does not generate the correct key
          comparison for DCPS KeyLessThan when there are multiple
          DCPS keys.

Wed Apr 18 19:15:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/run_test.pl:
        * tests/AMI_Buffering/run_buffer_size.pl:
        * tests/AMI_Buffering/run_message_count.pl:
        * tests/AMI_Buffering/run_test.pl:
        * tests/AMI_Buffering/run_timeout.pl:
        * tests/AMI_Buffering/run_timeout_reactive.pl:
        * tests/BiDirectional/run_test_ipv6.pl:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Blocking_Sync_None/run_test.pl:
        * tests/Bug_1476_Test/run_test.pl:
        * tests/Bug_1535_Regression/run_test.pl:
        * tests/Bug_2183_Regression/run_test.pl:
        * tests/Bug_2429_Regression/run_test.pl:
        * tests/Bug_2678_Regression/run_test.pl:
        * tests/Client_Leaks/run_test.pl:
        * tests/DLL_ORB/run_test.pl:
        * tests/DSI_AMI_Gateway/run_exception_test.pl:
        * tests/DSI_Gateway/run_exception_test.pl:
        * tests/Exposed_Policies/run_test.pl:
        * tests/Faults/run_test.pl:
        * tests/GIOP_Fragments/Java_Big_Reply/run_test.pl:
        * tests/GIOP_Fragments/Java_Big_Request/run_test.pl:
        * tests/InterOp-Naming/run_test.pl:
        * tests/MT_BiDir/run_test.pl:
        * tests/MT_Timeout/run_test.pl:
        * tests/Muxed_GIOP_Versions/run_test.pl:
        * tests/NestedUpcall/Triangle_Test/run_test.pl:
        * tests/Oneway_Buffering/run_buffer_size.pl:
        * tests/Oneway_Buffering/run_message_count.pl:
        * tests/Oneway_Buffering/run_test.pl:
        * tests/Oneway_Buffering/run_timeout.pl:
        * tests/Oneway_Buffering/run_timeout_reactive.pl:
        * tests/Oneway_Timeouts/run_test.pl:
        * tests/Oneways_Invoking_Twoways/run_test.pl:
        * tests/Parallel_Connect_Strategy/run_test.pl:
        * tests/RTCORBA/Dynamic_Thread_Pool/run_test.pl:
        * tests/RTCORBA/Linear_Priority/run_test.pl:
        * tests/RTCORBA/MT_Client_Protocol_Priority/run_test.pl:
        * tests/RTCORBA/Private_Connection/run_test.pl:
        * tests/Typedef_String_Array/run_test.pl:
          Improvements for vxworks cross platform testing and for
          slower test systems like OpenVMS

Wed Apr 18 15:37:09 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:

          Clarify the units accepted by the -e option.

Wed Apr 18 13:01:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2791_Regression/MessageFactory.h:
          Fixed fuzz error

Wed Apr 18 12:59:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
          No need to pass in empty orb name

        * tests/Collocation_Opportunities/run_test.pl:
          Improvements for vxworks cross platform testing

Wed Apr 18 12:50:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1330_Regression/run_test.pl:
          Improvements for vxworks cross platform testing

Wed Apr 18 12:38:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2084_Regression/run_test.pl:
        * tests/COIOP/run_test.pl:
        * tests/Collocation_Exception_Test/run_test.pl:
        * tests/Collocation_Oneway_Tests/run_test.pl:
        * tests/Collocation_Tests/run_test.pl:
        * tests/DII_Collocation_Tests/oneway/run_test.pl:
        * tests/DII_Collocation_Tests/twoway/run_test.pl:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/run_test.pl:
          Improvements for vxworks cross platform testing

Wed Apr 18 12:10:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OctetSeq/run_test.pl:
          Increased timeout for vxworks

        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.cpp:
          Layout changes and removed msvc specific warning disabling

        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/POA/POA_Destruction/POA_Destruction.cpp:
          Layout changes, no need to pass in empty orb name

        * tests/Policies/Manipulation.cpp:
          Layout changes

Wed Apr 18 11:39:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2791_Regression/run_test.pl:
          Updated to run under VxWorks

        * tests/Bug_2289_Regression/run_test.pl:
          Don't use LocalFile for the executables

Wed Apr 18 10:23:00 UTC 2007  Ian Roberts  <ir@prismtech.com>

        * tao/Valuetype/Valuetype_Adapter_Impl:
          Fix for Bug 2791, resolving a memory leak when
          unregistering a value factory.

        * tests/Bug_2791_Regression/*:
          New regression test to cover Bug 2791.

Wed Apr 18 10:20:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FoxResource.mpc:
        * tao/FoxResource/*:
          New Fox Toolkit support library. Thanks to
          Dmitriy Nikitinskiy <nick at bel dot ru> for providing these
          files. This fixes bugzilla 1400.

Tue Apr 17 16:05:50 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * tao/DynamicAny/DynEnum_i.cpp:

          Use .in() on the var to avoid warnings from some
          platforms.

Tue Apr 17 14:29:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:

          Increased the timeouts for slower machines.

Tue Apr 17 13:53:03 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2702_Regression/run_test.pl:

          Remove a portion of the path to perl when running on VMS.

Tue Apr 17 13:41:49 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/Cubit/TAO/MT_Cubit/Globals.cpp:

          Use ACE_SCOPE_THREAD on BSD instead of ACE_SCOPE_PROCESS. It's
          not supported.

Tue Apr 17 13:20:14 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/run_test.pl:

          Added missing kill's for when things go wrong.

Tue Apr 17 13:17:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2768_Regression/server.cpp:
          Use orb->run

        * tao/LocateRequest_Invocation.h:
          Use public inheritance

        * tao/LocateRequest_Invocation_Adapter.{h,cpp}:
          Fixed handling of a location forward. This fixes bugzilla
          2768. Thanks to Markus Henschel <m dot henschel at bally-wulff dot de>
          for reporting this problem

Tue Apr 17 13:05:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/run_test.pl:

          Added a missing kill of the ImplRepo_Service for the airplane_ir
          test when the ImR_Activator fails to start.

Tue Apr 17 12:09:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2768_Regression/*:
          New regression which is failing at this moment, thanks to
          Markus Henschel <m dot henschel at bally-wulff dot de> for making this
          regression.

        * tests/Big_Oneways/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Tue Apr 17 12:01:56 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Event_Service/Event_Service.cpp:

          Added an option, -a, to use the thread-per-consumer dispatching
          strategy instead of the default dispatching strategy.

        * orbsvcs/ImplRepo_Service/Activator_Options.h:
        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Added a new option, -e, to the ImR_Activator to set the
          environment buffer length for activated servants.  The default
          value, 16kb, is based on the ACE_Process_Options default value.

        * orbsvcs/tests/ImplRepo/run_test.pl:

          Added a usage of the -e option.

Tue Apr 17 08:16:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Bug_689_Regression.mpc:
          Added missing after

Tue Apr 17 08:14:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2678_Regression/run_test.pl:
        * tests/Bug_2683_Regression/run_test.pl:
        * tests/DIOP/run_test.pl:
        * tests/GIOP_Fragments/PMB_With_Fragments/run_test.pl:
        * tests/InterOp-Naming/run_test.pl:
          Fixed variable to be used for VxWorks target name

Tue Apr 17 07:46:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1476_Regression/run_test.pl:
        * tests/Bug_2084_Regression/run_test.pl:
        * tests/Bug_2494_Regression/run_test.pl:
        * tests/Collocation/run_test.pl:
        * tests/IORManipulation/run_test.pl:
        * tests/Native_Exceptions/run_test.pl:
        * tests/Optimized_Connection/run_test.pl:
        * tests/Queued_Message_Test/run_test.pl:
        * tests/Stack_Recursion/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Tue Apr 17 07:33:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1476_Regression/run_test.pl:
        * tests/Bug_2494_Regression/run_test.pl:
        * tests/Bug_2542_Regression/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Tue Apr 17 07:25:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2201_Regression/run_test.pl:
        * tests/Bug_2289_Regression/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Tue Apr 17 07:06:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Removed not needed check for CORBA/e

Mon Apr 16 18:41:16 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/Simple/Persistent/index.html:
        * docs/tutorials/Quoter/Simple/ImprovedServer/index.html:
        * docs/tutorials/Quoter/Simple/Impl-Repo/index.html:
        * docs/tutorials/Quoter/Simple/Client/index.html:
        * docs/tutorials/Quoter/Simple/Server/index.html: Updated the
          documentation to use MPC files rather than makefiles.  Thanks to
          Bill Bruns <bruns dot bill at gmail dot com> for noticing this
          and Johnny Willemsen for suggesting the MPC update.

Mon Apr 16 18:03:55 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tests/CORBA_e_Implicit_Activation/server.cpp:

          When attempting to implicitly activate an object, the
          PortableServer::POA::WrongPolicy should be thrown when using CORBA/e
          This fixes bug 2853.

Mon Apr 16 14:43:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2702_Regression/run_test.pl:
          Try to get this working for vxworks

        * tests/DIOP/run_test.pl:
          Fix for VxWorks testing

Mon Apr 16 13:05:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Test_3/run_test.pl:

          If a client fails, start wrapping up the test instead of waiting a
          minute for each client to finish.  Otherwise, it could take quite
          a long time for the test to finish if all the clients are timing
          out.

Mon Apr 16 13:01:00 UTC 2007 Simon Massey  <sma@prismtech.com>

        * tao_idl/be/be_visitor_constant/constant_cs.cpp:

          Add CORBA complient storeage emmition even when class
          static const int are declared inline in the header class.
          This fixes a CORBA non-complience however it uncovered
          some platforms (noteably Microsoft) where the compiler
          was non- C++ complient in that it always provides storeage
          for such constants at the point they are seen at the
          declaration (in the header). The standard C++ states that
          if storage is required (and it doesn't have to be) it should
          be defined (i.e. allocated) in the definition (i.e. the
          .cpp file as well as declared in the header).

Mon Apr 16 12:04:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DIOP/run_test.pl:
          Updated for VxWorks cross host testing

        * tests/Persistent_ID/run_test.pl:
          Use PerlACE::LocalFile

        * tests/OctetSeq/run_test.pl:
          Run the performance test on the target system when using
          VxWorks cross host testing

        * tests/Abstract_Interface/client.cpp:
          No need to pass in an empty orb name

Mon Apr 16 11:47:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Exception_Test/run_test.pl:
        * tests/CollocationLockup/run_test.pl:
        * tests/GIOP_Fragments/PMG_With_Fragments/run_test.pl:
        * tests/Permanent_Forward/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Mon Apr 16 11:27:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1693_Test/run_test.pl:
        * tests/Sequence_Unit_Tests/run_test.pl:
        * tests/Big_Twoways/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Mon Apr 16 11:22:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Bug_689_Regression.mpc:

          Set IDL_Flags to empty in client and server.  The idl was already
          processed in the *idl project and leaving them in caused problems
          with parallel builds.

Mon Apr 16 11:12:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Simple/run_test.pl:
          Corrected this script for VxWorks cross host testing

Sun Apr 15 18:38:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted the change below, it does breaks support for
        recursive structs when TAO is the client. With this change the Recursive
        Any should succeed again.

        Thu Apr 12 10:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Added patches for bug 2678, thanks to Alexander Kornienko
          <alexfh at gmail dot com> for creating the patch and the
          starter test program for this bug. Thanks to
          Dale Boan <boan at sedsystems dot ca> for creating the initial
          report and Ben Mohlenhoff <Benjamin_A_Mohlenhoff at raytheon dot com>
          for letting us know that the patched also worked for their setup.

Sun Apr 15 06:18:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/client.cpp:
        * tests/AMI/AMI.mpc:
        * tests/AMI/run_test.pl:
        * tests/Bug_2805_Regression/*:
          Moved test for bug 2805 to its own regression, now the AMI
          test should succeed again, but 2805 is failing

Sun Apr 15 06:01:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
        * tests/Bug_2844_Regression/*:
          Moved regression for bug 2844 to its own file

Sat Apr 14 20:22:13 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/DynAny_Test/test_dynenum.cpp:

          Removed old exception macros.

Sat Apr 14 19:00:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
          Removed regression for bug 2804, this has now its own test program

Sat Apr 14 18:57:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2804_Regression/*:
          Moved the test for bug 2804 from Any/Recursive to its own seperate test, makes
          it easier to reproduce and I am moving all known issues outside of the
          Any/Recursive test so that we can make sure that things that do work keep
          working

Fri Apr 13 19:47:56 UTC 2007 Yan Dai  <dai_y@ociweb.com>

          Fixed several bugs in DynamicAny (See bugzilla #2896).

        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAnyFactory.cpp:

          Added DynamicAny support for longdouble type.

        * tao/DynamicAny/DynUnion_i.cpp:

          Fixed bug in destroy() that does not check if the member is nil
          to destroy.  This causes crash when union has no active
          member.

        * tao/DynamicAny/DynEnum_i.cpp:

          Fixed bug in
          get_as_string/set_as_string/get_as_ulong/set_as_ulong that do
          not strip the alias to find the member information. This causes
          the problem when calling these functions for typedefed enums
          encapsulated in structs.

        * tao/DynamicAny/DynCommon.cpp:

          Moved out ACE_static_cast from "if" statement in next() method
          to avoid strange problem "coredump from signal 10" on
          sunos58_gcc3.2.1_d0o1 build.

        * tests/DynAny_Test/da_tests.idl:
        * tests/DynAny_Test/data.cpp:
        * tests/DynAny_Test/data.h:
        * tests/DynAny_Test/DynAny_Test.mpc:
        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/test_dynenum.cpp:
        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:

          Added test cases for above bug fixes.

Fri Apr 13 16:38:36 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/ORB_Core.cpp:

          Reverted my change immediately because I am not quite sure about
          the name convention/usage here, need more research:
                                        Fri Apr 13 16:29:47 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

Fri Apr 13 16:29:47 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/ORB_Core.cpp:

          Corrected the valuetype_adapter_factory_name_.

Fri Apr 13 12:35:40 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:

          When starting a server, only reset the ImR_Activator information
          if we are certain that the activator is completely non-responsive.
          There is no test associated with this fix since it would require
          that the activator be temporarily unresponsive (i.e., cause a
          CORBA::TRANSIENT to be thrown).  In any event, this change can not
          make things less reliable since we're in an exceptional situation
          from the start.

          Thanks to Richard Ridgway <Richard_Ridgway at ml dot com> for
          reporting this (bug 2833) and providing the fix.

Fri Apr 13 04:56:08 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp

          Switch to using naked new instead of macro for placement new
          operations.

Thu Apr 12 19:11:31 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/EventType.h:
        * orbsvcs/orbsvcs/Notify/EventType.inl:
        * orbsvcs/orbsvcs/Notify/EventType.cpp:

          Modified the equivalence operator to match wildcards on the
          domain_name and event_type (instead of a straight string compare).

        * orbsvcs/orbsvcs/Notify/Event_Map_T.inl:

          Since an event type can be equivalent to another and not hash to
          the same thing, we must iterate over the map if a find() on the
          ACE_Hash_Map_Manager doesn't return an entry.

          These changes fix bug 1385.

Thu Apr 12 17:27:44 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Bug_1385_Regression/Notify_Structured_Push_Consumer.cpp:

          Changed to use the subscription_change() method from the base
          class instead of calling it directly on the proxy.

        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Supplier.cpp:

          Fixed the domain_name and type_name on the event header.

Thu Apr 12 15:09:49 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/DII_Arguments.h:

          Changed the lazy_evaluation_ data member back to non-const.
          Because the CORBA::NVList::_tao_incoming_cdr(TAO_InputCDR&, int, bool&)
          will need to modify its value.
          This reverted: Thu Apr 12 10:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>
          * tao/DynamicInterface/DII_Arguments.h:
            Const improvement

Thu Apr 12 13:53:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/Profile.cpp:
          Layout changes

Thu Apr 12 13:44:12 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Bug_1385_Regression.mpc:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Bug_1385_Regression/go.idl:
        * orbsvcs/tests/Notify/Bug_1385_Regression/notify.conf:
        * orbsvcs/tests/Notify/Bug_1385_Regression/notify.conf.xml:
        * orbsvcs/tests/Notify/Bug_1385_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Makefile.am:

          Added a new test to demonstrate the subscription_change() does not
          work properly (bug 1385).

Thu Apr 12 12:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/DSI/Database_i.{h,cpp}:
          Added nothrow new/delete operators

Thu Apr 12 10:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Added patches for bug 2678, thanks to Alexander Kornienko
          <alexfh at gmail dot com> for creating the patch and the
          starter test program for this bug. Thanks to
          Dale Boan <boan at sedsystems dot ca> for creating the initial
          report and Ben Mohlenhoff <Benjamin_A_Mohlenhoff at raytheon dot com>
          for letting us know that the patched also worked for their setup.

        * tao/DynamicInterface/DII_Arguments.h:
          Const improvement

        * tao/DynamicInterface/ExceptionList.inl:
          Removed not needed cast and use C++ casts

        * tao/IOR_Parser.h:
          Documentation improvement

        * tao/Pluggable_Messaging_Utils.inl:
          Use false instead of 0

        * tao/Stub.h:
          Layout changes

        * tao/GIOP_Message_Base.cpp:
        * tao/Profile.h:
          Layout changes

Thu Apr 12 06:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2678_Regression/client.cpp:
          Fixed typo in include

Wed Apr 11 18:31:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2678_Regression/*:
          New regression test, it needs a C# client as reproducer, that will
          not work, so I am reusing parts of the PMB GIOP test to emulate
          a client but this is not working 100% perfect. When it works perfect
          I will enable the regression test in the test suite.

Wed Apr 11 13:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/ami_test_i.cpp:
          Fixed small bug in this test code that could lead to an
          incorrect return value when the parameters are checked.

Wed Apr 11 12:25:17 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Makefile.am:

          Changed the build order to get Bug_2561_Regression to build after
          TAO_NotifyTests.

Wed Apr 11 10:14:51 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * tao/IIOP_Acceptor.cpp:

          Previous fix for bug 2871 had a small flaw for IPv4 only server
          setups. This patch fixes this flaw.

Tue Apr 10 09:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DII_Collocation_Tests/twoway/Client_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Hello.cpp:
        * tests/DII_Collocation_Tests/twoway/Hello.h:
        * tests/DII_Collocation_Tests/twoway/Test.idl:
          Extended this test to test the out arguments and response_received
          method of the request. This test now fails, see bugzilla 2890

Mon Apr  9 21:09:51 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * docs/transport_current/index.html:

          Corrected the example of service configuration file for
          dynamic loading TransportCurrent library.

Mon Apr  9 13:02:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:

          Modified the imr registration command line to take into account
          the different executable locations for non-debug Windows builds.

Mon Apr  9 11:50:35 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.cpp:

          Put the ORB id into a CORBA::String_var to avoid memory leaks.

        * orbsvcs/tests/Bug_2248_Regression/run_test.pl:

          Removed an extra ./server in the command arguments.

        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:

          When disconnecting the consumer, ignore exceptions as the consumer
          may already be gone by that time.

        * orbsvcs/tests/FT_App/run_test_demo.pl:

          This script defaults to "Release" executables on Windows, but
          defaults to "Debug" on all other platforms.

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:

          Changed the error message to start with ERROR: and to provide
          useful information.

        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Basic.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Basic.cpp:

          Switched the location_ data member from const char* to
          CORBA::String_var to avoid memory leaks.

        * orbsvcs/tests/Redundant_Naming/run_test.pl:

          Sleep one second before starting the client to allow the redundant
          naming service to get into a usable state.

        * orbsvcs/tests/Simple_Naming/client.h:
        * orbsvcs/tests/Simple_Naming/client.cpp:

          Change name_service_ior_ to a CORBA::String_var to avoid a memory
          leak.

        * tests/OBV/Collocated/Forward/Client_Task.cpp:

          Even though bug 1390 is still reported as broken, the client now
          shuts down the server so the run test script doesn't have to
          time out.

Mon Apr  9 11:29:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:

          Added the missing entry for tests/DIOP.

Sun Apr  8 15:46:17 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/Utils/ORB_Manager.cpp:

          duplicate object references passed in the constructor. This fixes
          bugzilla 2887.

          Layout enhancements.

Fri Apr  6 17:58:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/FaultTolerance/IOGR/Manager.h:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:

          Moved file level statics into the Manager class.  They were being
          destroyed in the wrong order with respect to the object manager
          and the ORB.

Fri Apr  6 14:34:21 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:

          Added the makefiles for the new directories (Bug_689_Regression,
          Bug_1107_Regression, Bug_2561_Regression, Bug_2677_Regression and
          Bug_2735_Regression).

Fri Apr  6 13:46:19 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Bug_2561_Regression/Notify_Push_Consumer.cpp:

          Initialize count_ to 0 in the constructor.

Fri Apr  6 14:36:25 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * tao/ORB_Core.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/params.h:
        * tao/params.cpp:
        * docs/Options.html:

          Fix for bug 2871. It introduces a new option -ORBUseIPV6LinkLocal
          which is false by default, i.e. no IPv6 link local addresses will
          be used by server ORB.

Fri Apr  6 12:09:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Bug_689_Regression.mpc:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Makefile.am:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/server.cpp:

          Added the ImR_Client library so that this test will work on static
          builds.

Thu Apr  5 15:45:30 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Bug_2561_Regression/Bug_2561_Regression.mpc:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Notify_Push_Consumer.h:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Supplier.cpp:
        * orbsvcs/tests/Notify/Bug_2561_Regression/go.idl:
        * orbsvcs/tests/Notify/Bug_2561_Regression/notify.conf:
        * orbsvcs/tests/Notify/Bug_2561_Regression/notify.conf.xml:
        * orbsvcs/tests/Notify/Bug_2561_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Makefile.am:

          Added a regression test for bug 2561 where a pacing interval of
          100 microseconds is used and two batch consumers are attached to
          the Notify_Service.

        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp:

          Avoid destroying the poa and the orb if they're nil.

Thu Apr  5 14:25:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2174_Regression/run_test.pl:
        * tests/Bug_2183_Regression/run_test.pl:
        * tests/Bug_2429_Regression/run_test.pl:
        * tests/Bug_2494_Regression/run_test.pl:
        * tests/Connection_Purging/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/run_test.pl:
        * tests/Server_Leaks/run_test.pl:
        * tests/Typedef_String_Array/run_test.pl:

          Increased timeouts to allow these to run on slower machines.

Thu Apr  5 13:45:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:

          Switch to ETCL and use a $prefix on the component name to test bug
          1428.

        * orbsvcs/tests/Notify/Structured_Multi_Filter/notify.conf.xml:

          Converted notify.conf to XML for use with the XML service
          configurator.

Thu Apr  5 13:37:51 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:

          Change one of the constraint expressions to use a $ prefix on the
          component name to ensure that this works.

Thu Apr  5 11:51:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/link_codecfactory.mpb:
        * MPC/config/nolink_codecfactory.mpb:

          Feature projects to link or not link the TAO_CodecFactory.

        * MPC/config/taoexe.mpb:
        * MPC/config/taolib.mpb:

          Inherit from the link_codecfactory base project to allow the user
          to determine if the TAO_CodecFactory will be linked into an
          executable or library that uses TAO.  On QNX, the dynamic
          unloading of the TAO_CodecFactory library at exit causes a core
          dump.  If the library is linked in, the problem is eliminated.

        * tao/AnyTypeCode.mpc:
        * tao/CodecFactory.mpc:
        * tao/Codeset.mpc:

          Inherit from the nolink_codecfactory base project to ensure that
          the TAO_CodecFactory library is not linked into these libraries.
          This would cause a circular link dependency.

Thu Apr  5 11:24:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_933_Regression/MessengerClient.cpp:

          Changed to use .in() to avoid warnings from gcc.

Thu Apr  5 11:20:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/Load_Balancing_persistent/Identity_Server.cpp:

          Changed to use .in() to avoid warnings from gcc.

Wed Apr  4 19:13:53 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2735_Regression/server.cpp:

          Avoid string conversion warnings.

Wed Apr  4 19:04:51 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Bug_689_Regression.mpc:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Makefile.am:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/bug_689_regression.idl:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/bug_689_regression_i.h:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/bug_689_regression_i.cpp:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/client.cpp:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/server.cpp:
        * orbsvcs/tests/ImplRepo/Makefile.am:

          Added a regression test for bug 689.

Wed Apr  4 16:10:46 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Security/Bug_1107_Regression/Bug_1107_Regression.mpc:
        * orbsvcs/tests/Security/Bug_1107_Regression/Foo.idl:
        * orbsvcs/tests/Security/Bug_1107_Regression/Foo_i.h:
        * orbsvcs/tests/Security/Bug_1107_Regression/Foo_i.cpp:
        * orbsvcs/tests/Security/Bug_1107_Regression/Makefile.am:
        * orbsvcs/tests/Security/Bug_1107_Regression/README:
        * orbsvcs/tests/Security/Bug_1107_Regression/cacert.pem:
        * orbsvcs/tests/Security/Bug_1107_Regression/client.conf:
        * orbsvcs/tests/Security/Bug_1107_Regression/client.conf.xml:
        * orbsvcs/tests/Security/Bug_1107_Regression/client.cpp:
        * orbsvcs/tests/Security/Bug_1107_Regression/client_cert.pem:
        * orbsvcs/tests/Security/Bug_1107_Regression/client_key.pem:
        * orbsvcs/tests/Security/Bug_1107_Regression/run_test.pl:
        * orbsvcs/tests/Security/Bug_1107_Regression/server.conf:
        * orbsvcs/tests/Security/Bug_1107_Regression/server.conf.xml:
        * orbsvcs/tests/Security/Bug_1107_Regression/server.cpp:
        * orbsvcs/tests/Security/Bug_1107_Regression/server_cert.pem:
        * orbsvcs/tests/Security/Bug_1107_Regression/server_key.pem:
        * orbsvcs/tests/Security/Makefile.am:

          Added a regression test based on the Secure_Invocation test for
          bug 1107.

Wed Apr  4 14:42:01 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/IFR_Client_Adapter.h:
        * tao/IFR_Client_Adapter.cpp:

          Fixed the dynamic_cast failure in the same way as Ossama and Chris did in
          Wed May 18 16:23:01 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>
          Mon Nov 21 13:21:03 2005  Chris Cleeland  <cleeland_c@ociweb.com>
          In short, I have added an out-of-line virtual destructor to this class.
          Thanks Ossama for his help on this issue.

Wed Apr  4 13:04:25 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Notify_Service/Notify_Service.cpp:

          Added the missing parameter for %p in an ACE_ERROR_RETURN().

Wed Apr  4 11:40:33 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/utils.mpb:

          Renamed the after setting from Utils to TAO_Utils to reflect the
          change from Tue Apr  3 18:53:54 UTC 2007.

Wed Apr  4 11:36:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2677_Regression/Makefile.am:
        * tests/Bug_2735_Regression/Makefile.am:

          Added missing automake makefiles.

        * tests/Bug_2735_Regression/server.cpp:

          Fixed a compilation error on HP-UX.  They have some pretty simple
          macros defined (e.g., SERVER).

Tue Apr  3 19:08:44 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.inl:

          Added static_cast to avoid conversion warning on MSVC8.

Tue Apr  3 18:53:54 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Utils.mpc:

          Changed project name from Utils to TAO_Utils to avoid namespace
          pollution, since MPC doesn't accept duplicate project names
          anywhere in the tree during generation.

Tue Apr  3 18:29:29 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2677_Regression/Bug_2677_Regression.mpc:

          Removed the redundant inheritance of taolib.

        * tests/Bug_2677_Regression/DllORB.h:
        * tests/Bug_2677_Regression/DllORB.cpp:

          Removed the requirement of threads from this test.  It was not
          necessary to exercise the fix for 2677.

Tue Apr  3 16:10:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:

          Fixed a couple of filtering issues:

          1) If exist was used in the form of "exist $.filterable_data(ident)",
             memory would be leaked in the form of a CORBA::string_dup().
          2) If exist was used in the form of "exist ident", it would never
             match anything.  It now defaults to the looking at the
             filterable data identifiers.

          This fixes bug 1263.

        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:

          Modified this test to use both forms of exist in the filter.

        * orbsvcs/tests/Notify/Structured_Filter/notify.conf.xml:

          Converted notify.conf to XML for use with the XML service
          configurator.

Tue Apr  3 13:05:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2734_Regression/README:
        * tests/Bug_2734_Regression/run_test.pl:

          Added a regression test for Bug 2734 based on the Timeout test.

Tue Apr  3 12:37:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Makefile.am:

          Added Bug_2677_Regression and Bug_2735_Regression to the list of
          sub-directories.

Tue Apr  3 12:09:43 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/GIOP_Message_Version.h:
        * tao/GIOP_Message_Version.inl:

          Changed the equality and inequality operators to const (as they
          should have originally been).

Tue Apr  3 11:56:17 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2677_Regression/DllORB.cpp:

          Removed the call to POAManager::deativate(), it wasn't necessary
          and caused problems for minimum CORBA and CORBA e compact.

Mon Apr  2 18:14:07 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/airplane_client_i.cpp:
        * orbsvcs/tests/ImplRepo/nestea_client_i.cpp:

          Delete the server_key_ before assigning to it, since memory is
          allocated in the constructor.

        * tao/ImR_Client/ImR_Client.cpp:

          Put the result of poa->the_name () in a CORBA::String_var to
          ensure memory is not leaked.  This happened inside an
          if (TAO_debug_level > 0) statement.

Mon Apr  2 17:52:41 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/INS_Locator.h:

          Use a TAO_Local_RefCounted_Object instead of CORBA::LocalObject to
          ensure that the INS_Locator is released in the end.

        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:

          Use ImplRepo_Service in the usage instead of ImR_Locator.

Mon Apr  2 15:24:46 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2735_Regression/run_test.pl:
        * tests/Bug_2735_Regression/server.cpp:

          Modified this test to work with the XML service configurator.

Mon Apr  2 15:00:08 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2677_Regression/Bug_2677_Regression.mpc:
        * tests/Bug_2677_Regression/DllORB.h:
        * tests/Bug_2677_Regression/DllORB.cpp:
        * tests/Bug_2677_Regression/README:
        * tests/Bug_2677_Regression/bug_2677_regression_export.h:
        * tests/Bug_2677_Regression/run_test.pl:
        * tests/Bug_2677_Regression/server.cpp:

          Added a regression test for Bug 2677 provided by Lothar Wrzinger
          <lothar at tradescape dot biz>.

Mon Apr 2 14:06:12 UTC 2007  Martin Corino  <mcorino@remedy.nl>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/util/utl_global.cpp:

          Platform specific changes to make IDL compiler run on both
          OpenVMS Alpha and OpenVMS IA64.

Sun Apr  1 04:03:06 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2735_Regression/run_test.pl:

          Fixed the command line to work on Windows.

Fri Mar 30 14:49:24 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2735_Regression/Bug_2735_Regression.mpc:
        * tests/Bug_2735_Regression/run_test.pl:
        * tests/Bug_2735_Regression/server.cpp:

          Added a regression test for Bug 2735 which involves the
          -ORBSvcConfDirective option.

Fri Mar 30 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
          Layout changes

Fri Mar 30 12:22:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/compiler.html:
          Removed deprecated flags, fixed typos and updated a few parts

Thu Mar 29 16:50:15 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/fe/fe_init.cpp:

          Fixed calls to ACE_String_Base methods set (const char*, bool)
          and reset (bool) to pass a boolean instead of an integer.

Wed Mar 28 16:02:37 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/Options.html: Updated the documentation to explain what the
          -ORBSkipServiceConfigOpen option does.  Thanks to Vance Maverick
          <vmaverick at pgp dot com> for motivating.

Thu Mar 29 13:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Use the safe include in the anyop header file, not in the source
          file, makes it possible to use a safe include in the diffserv library.

        * tao/DiffServPolicy.mpc:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.cpp:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.h:
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:
        * tao/DiffServPolicy/DiffServPolicy_ORBInitializer.cpp:
        * tao/DiffServPolicy/Server_Network_Priority_Policy.cpp:
        * tao/DiffServPolicy/Server_Network_Priority_Policy.h:
          Use the safe include feature to make sure people have to include
          the correct file to use diffserv

Thu Mar 29 12:14:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Profile.cpp:
          Fixed bug 2869, handling an invalid endpoint string. Thanks to
          Pierre Bisaillon <pierrebizz at hotmail dot com> for reporting this bug

        * tests/Bug_2869_Regression/*:
          New regression for bug 2869

Thu Mar 29 11:13:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/MCast_Parser.{h,cpp,inl}:
        * tao/ORB.cpp:
        * tao/TAO_Internal.cpp:
        * tao/default_resource.cpp:
          Only use the mcast parser when ACE_HAS_IP_MULTICAST is enabled,
          mcast is not available when this define is not set, so no need
          to build this parser when it can't be used. This fixes bugzilla
          bug 2851.

        * tao/ORB_Core.{h,cpp}:
        * tao/Resource_Factory.cpp:
        * tao/DynamicInterface/Request.cpp:
          Layout changes

        * tao/ORB_Core.inl:
          Use false instead of 0 for a bool

Wed Mar 28 16:44:35 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/HTTP_Parser.cpp:

          The parse_string and match_prefix virtual methods take a const
          char*.  They are converted to ACE_TCHAR* where necessary.

        * tao/Load_Protocol_Factory_T.h:

          Take a const char* in load_protocol_factory() and convert it in
          the one place where ACE_TCHAR* is expected.

        * tao/ORB.cpp:

          Cast ACE::nibble2hex() result to char.  On narrow char builds,
          it's already a char, but on wide char builds it's an ACE_TCHAR.

        * tao/TAO_Internal.cpp:

           Change open_private_services_i() to take char** instead of
           ACE_TCHAR** and use ACE_Argv_Type_Converter to pass the right
           types to ACE_Service_Gestalt::open().

        * tao/Valuetype/AbstractBase.cpp:

          Check the abstract base pointer from the factory before using it.
          If it's zero, return false instead of dereferencing it and dumping
          core.

Wed Mar 28 09:21:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          Fixed compile problem with VxWorks

Tue Mar 27 21:15:24 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_valuetype.cpp:

          Fixed a bug in the logic when determining if the valuetype
          supports an abstract interface or not.

Tue Mar 27 19:36:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Abstract_Interface/run_test.pl:
          Made this script working for VxWorks

Tue Mar 27 18:00:26 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/examples/RtEC/Kokyu/Service.cpp

          Unused argument warning.

Tue Mar 27 17:50:38 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp

          Fixes for strict aliasing warnings.

        * examples/Load_Balancing_persistent/Identity_Server.cpp

          Added logic to bail if it gets invalid group references
          from the load balancing daemon.

Tue Mar 27 13:56:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_933_Regression/*:
          New regression for bug 933. TAO didn't had a bug, the regression
          posted by the reporter had several. Fixed the regression and
          adding it now to svn. Thanks to Ruwanganie Gunatilleke
          <ru at ociweb dot com> for making the regression

Tues Mar 27 09:35:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Big_Request_Muxing/client.cpp:

          Allow time for the server to process messages at the other end
          of the tcpip link before the client destroies the sockets and
          rips down any pending messages it may have still buffered up.
          Note this is ONLY for the benifit of the SYNC_NONE and
          SYNC_WITH_TRANSPORT messages to improve the stats a bit.

Tues Mar 27 08:15:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Big_Request_Muxing/run_test.pl:

          Allow the new timeouts to actually take effect before
          timing out the test!

Tue Mar 27 07:32:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/QtResource/QtResource_Factory.h:
          Use forward declaration of QApplication. Part of the patch of bugzilla
          2870. Thanks to Roland Sun <rolandsun at gmail dot com> for
          providing the patch

Mon Mar 26 20:44:40 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp
        * performance-tests/Cubit/TAO/MT_Cubit/client.h
        * examples/Simple/time/Time_Client_i.cpp
        * examples/Persistent_Grid/Grid_i.cpp

          Fixes for strict aliasing warnings.

Mon Mar 26 15:24:47 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tao/Compression/zlib/ZlibCompressor.cpp

          Addressed strict aliasing warning.

Mon Mar 26 14:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/tests/Basic/*:
        * tests/DIOP/*:
          Moved this test from examples to tests, this is a DIOP regression
          test that can be part of the orb test suite.

        * examples/PluggableUDP/tests/Makefile.am:
          Removed Basic directory

        * tests/Makefile.am:
          Added DIOP directory

Mon Mar 26 14:47:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/tests/Basic/client.cpp:
        * examples/PluggableUDP/tests/Basic/server.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_Client_i.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_i.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_i.h:
          Small cleanup and simplifications

Mon Mar 26 10:01:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/server.cpp:

          Give very generous timeouts for very slow systems (lynxos).

Sat Mar 24 23:40:17 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Security/EndpointPolicy/EndpointPolicy.mpc:
        * orbsvcs/tests/Security/InsecureReferences/InsecureReferences.mpc:

          The test projects did not have the correct base projects,
          causing core dumps on exit on many platforms.

Fri Mar 23 16:27:39 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tests/TransportCurrent/IIOP/IIOP.mpc
        * tests/TransportCurrent/Framework/Framework.mpc

          OS X Linker warnings.

Fri Mar 23 13:02:40 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:
        * orbsvcs/tests/Security/EndpointPolicy:
        * orbsvcs/tests/Security/EndpointPolicy/EndpointPolicy.mpc:
        * orbsvcs/tests/Security/EndpointPolicy/README:
        * orbsvcs/tests/Security/EndpointPolicy/run_test.pl:
        * orbsvcs/tests/Security/EndpointPolicy/svc.conf:
        * orbsvcs/tests/Security/EndpointPolicy/test.cpp:
        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.cpp:
        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.cpp:
        * tao/Object_Reference_Sequence_Element_T.h:
        * tao/Profile.h:
        * tao/Profile.cpp:

          Fix for bugzilla 2868, allowing SSLIOP, or other IIOP-derived
          protocols to be used with the EndpointPolicy. Includes a new
          test case.

Fri Mar 23 02:44:53 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:

          Fix for off-by-one counting error processing multi-endpoint
          insecure iiop endpoints.

        * orbsvcs/tests/Security/InsecureReferences:
        * orbsvcs/tests/Security/InsecureReferences/InsecureReferences.mpc:
        * orbsvcs/tests/Security/InsecureReferences/README:
        * orbsvcs/tests/Security/InsecureReferences/client.conf:
        * orbsvcs/tests/Security/InsecureReferences/run_test.pl:
        * orbsvcs/tests/Security/InsecureReferences/test.cpp:

          A new test validating the fix.

Fri Mar 23 12:08:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/AMI/Handler_i.cpp
        * docs/tutorials/Quoter/AMI/Handler_i.h
        * docs/tutorials/Quoter/AMI/index.html
        * docs/tutorials/Quoter/AMI/Quoter.idl
        * docs/tutorials/Quoter/AMI/Stock_Factory_i.cpp
        * docs/tutorials/Quoter/AMI/Stock_Factory_i.h
        * docs/tutorials/Quoter/AMI/Stock_i.cpp
        * docs/tutorials/Quoter/AMI/Stock_i.h
        * docs/tutorials/Quoter/Event_Service/index.html
        * docs/tutorials/Quoter/Event_Service/Stock_Factory_i.cpp
        * docs/tutorials/Quoter/Event_Service/Stock_Factory_i.h
        * docs/tutorials/Quoter/Event_Service/Stock_i.cpp
        * docs/tutorials/Quoter/Event_Service/Stock_i.h
        * docs/tutorials/Quoter/On_Demand_Activation/index.html
        * docs/tutorials/Quoter/RT_Event_Service/index.html
        * docs/tutorials/Quoter/RTCORBA/docs/broker.html
          Small updates related to old exception macros.

        * docs/tutorials/Quoter/Simple/index.html:
          Removed, not needed

Fri Mar 23 11:46:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Value_TypeCode.h:
        * tao/AnyTypeCode/Value_TypeCode_Static.h:
        * tao/Compression/zlib/ZlibCompressor.h:
        * tao/Compression/zlib/ZlibCompressor_Factory.cpp:
        * tao/Compression/zlib/ZlibCompressor_Factory.h:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAnyFactory.h:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynArray_i.h:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynCommon.h:
        * tao/DynamicAny/DynEnum_i.h:
        * tao/DynamicAny/DynSequence_i.h:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynStruct_i.h:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynUnion_i.h:
        * tao/DynamicAny/DynValue_i.cpp:
        * tao/DynamicAny/DynValue_i.h:
        * tao/DynamicAny/DynValueBox_i.cpp:
        * tao/DynamicAny/DynValueBox_i.h:
        * tao/Invocation_Base.h:
        * tao/Object.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/Profile_Transport_Resolver.h:
          Layout changes

        * tao/PI/ClientRequestInfo.cpp
        * tao/PI_Server/ServerRequestInfo.cpp
          Fixes for bugs 2854, retrieving the reply status
          in send_request didn't gave an exception and bug 2852,
          retrieving out arguments in send_request and receive_request
          could lead to a crash, make sure we return an Any with
          tk_null in those cases.

Fri Mar 23 11:35:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/Client_Task.cpp:
        * tests/Big_Request_Muxing/Client_Task.h:
        * tests/Big_Request_Muxing/Payload_Receiver.cpp:
        * tests/Big_Request_Muxing/Payload_Receiver.h:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Big_Request_Muxing/server.cpp:
        * tests/Big_Request_Muxing/test.idl:

          Stop erroring on lost message that may not be delivered.
          Improved transient tollerance and debug output.

Fri Mar 23 06:42:20 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Dynamic/server_interceptor.cpp:
        * tests/Portable_Interceptors/Dynamic/client_interceptor.cpp:

          Unused argument warnings.

Thu Mar 22 19:52:26 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any.h:
        * tao/AnyTypeCode/NVList.{h,cpp,inl}:
        * tao/AnyTypeCode/NVList_Adapter_Impl.h:
          Layout changes

Thu Mar 22 19:29:26 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Dynamic/client_interceptor.cpp:
        * tests/Portable_Interceptors/Dynamic/server_interceptor.cpp:
          Extended for bugzilla bugs 2854 and 2852. This test will now fail,
          the fixes will go in tomorrow, that way the scoreboard first shows
          if the problems do exist on all platforms

        * tests/UNKNOWN_Exception/client.cpp:
          Layout change

Thu Mar 22 19:15:26 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/implrepo.html:
          Removed, just forwarding to a subdirectory

        * docs/TAO-metrics.html:
          Fixed wrong html usage

        * docs/Tags.html:
          Fixed incorrect link

Wed Mar 21 12:12:26 CDT 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO version 1.5.7 released.

Mon Mar 19 19:34:48 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          The code to set the null terminator on the "kind" read from
          the persistence file was purposely removed. However, the original
          reason that it was there was that this string was the only string
          that was often of length zero.  When fgets read nothing into the
          string, it was then null terminated which yielded a string of zero
          length.  Without it, the string was filled with garbage.

          The correct modification was to initialize the string passed to
          fgets to an empty string and then call fgets.  This handles cases
          where nothing is read from the file.  I have made this change in
          each place where fgets is called.

Mon Mar 19 19:24:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added an entry about the unexpected exception handler for Ossama
          Othman.

Mon Mar 19 19:22:36 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added an entry about the IDL compiler code generation for a
          comma-separated list of sequence typedefs for Jeff Parsons.

Mon Mar 19 19:13:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2654_Regression/server.cpp:

          Wait for threads started by the Hello implementation to avoid
          access violations.

Mon Mar 19 16:21:11 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          Added the code to set the null terminator on the "kind" read from
          the persistence file.  It was accidentally removed in the Thu Mar
          9 00:08:52 UTC 2007 commit.

Thu Mar 15 14:19:57 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2800_Regression/NamingTask.cpp:
          Fixed invalid read reported by valgrind

Thu Mar 15 12:14:57 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynUnion_Test/DynUnionTest.cpp:
          Added include for static builds

Thu Mar 15 11:55:54 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CORBA_e_Implicit_Activation/server.cpp:

          TAO should throw a CORBA::INV_POLICY when implicit activation is
          used.  Thanks to Johnny Willemsen for pointing this out.

Thu Mar 15 08:05:57 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CORBA_e_Implicit_Activation/server.cpp:
          Fixed variable not used warning

Wed Mar 14 17:24:57 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/BiDir_CORBALOC/TimeServer.cpp:

         Modified this test to use explicit activation to support
         CORBA e compact.

        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:

          Used explicit activation in one place, however there are more
          places where implicit activation is used in this test and in the
          Event core library.

Wed Mar 14 16:14:31 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2800_Regression/client.cpp:

          Corrected debug message.

        * performance-tests/Throughput/Throughput.mpc:

          Reverted my change from Tue Mar 13 18:24:27 UTC 2007.  It should
          not have been committed.

        * examples/ior_corbaloc/server.cpp:
        * tests/IDL_Test/main.cpp:
        * tests/Multiple/server.cpp:

          Modified these tests to use explicit activation to support
          CORBA e compact.

Wed Mar 14 13:38:15 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Servant_To_Reference_Test/run_test.pl:

          Increase the timeout to allow slower hardware to complete the
          test.

Wed Mar 14 13:11:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/File_IO/File_i.cpp:
        * tests/NestedUpcall/Triangle_Test/initiator.cpp:
        * tests/Nested_Upcall_Crash/Client_Peer.cpp:
        * tests/Nested_Upcall_Crash/Server_Peer.cpp:
        * tests/Portable_Interceptors/PICurrent/test_i.cpp:

          Reverted my changes from Tue Mar 13 18:24:27 UTC 2007.  They were
          not correct.

        * tests/RTCORBA/Dynamic_Thread_Pool/server.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:

          Modified my changes from Tue Mar 13 18:24:27 UTC 2007.  They were
          also incorrect.

Wed Mar 14 08:12:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynUnion_Test/DynUnionTest.cpp:
          Fixed conversion warnings

Tue Mar 14 05:32:38 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Array_Traits_T.h (copy_range):

          Made this trait method a member template to provide support for
          checked destination iterators.

Tue Mar 13 20:05:54 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Simple_Naming/client.h:
        * orbsvcs/tests/Simple_Naming/client.cpp:

          Modified this test to use explicit activation to support
          CORBA e compact.

Tue Mar 13 18:42:44 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/Throughput/Receiver_Factory.cpp:

          Modified this performance-test to use explicit activation to
          support CORBA e compact.

Tue Mar 13 18:24:27 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/PluggableUDP/tests/Basic/client.cpp:
        * examples/PluggableUDP/tests/Basic/server.cpp:
        * examples/Simple/grid/Grid_i.cpp:
        * examples/Simple/time-date/Time_Date.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/Cubit_Task.cpp:
        * performance-tests/Latency/Single_Threaded/server.cpp:
        * performance-tests/Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Latency/Thread_Pool/server.cpp:
        * performance-tests/POA/Object_Creation_And_Registration/registration.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/server.cpp:
        * performance-tests/Throughput/Throughput.mpc:
        * performance-tests/Throughput/server.cpp:
        * tests/AMH_Exceptions/server.cpp:
        * tests/AMH_Oneway/server.cpp:
        * tests/AMI/server.cpp:
        * tests/AMI/simple_client.cpp:
        * tests/AMI_Buffering/admin.cpp:
        * tests/AMI_Buffering/client.cpp:
        * tests/AMI_Buffering/server.cpp:
        * tests/AMI_Timeouts/client.cpp:
        * tests/AMI_Timeouts/server.cpp:
        * tests/Abstract_Interface/server.cpp:
        * tests/Abstract_Interface/test_i.h:
        * tests/Abstract_Interface/test_i.cpp:
        * tests/Any/Recursive/server.cpp:
        * tests/BiDirectional/client.cpp:
        * tests/BiDirectional_DelayedUpcall/client.cpp:
        * tests/BiDirectional_NestedUpcall/client.cpp:
        * tests/Big_AMI/client.cpp:
        * tests/Big_AMI/server.cpp:
        * tests/Big_Oneways/client.cpp:
        * tests/Big_Oneways/server.cpp:
        * tests/Big_Reply/server.cpp:
        * tests/Big_Request_Muxing/server.cpp:
        * tests/Big_Twoways/client.cpp:
        * tests/Big_Twoways/server.cpp:
        * tests/Blocking_Sync_None/server.cpp:
        * tests/Bug_1020_Basic_Regression/client.cpp:
        * tests/Bug_1020_Basic_Regression/server.cpp:
        * tests/Bug_1020_Regression/client.cpp:
        * tests/Bug_1020_Regression/server.cpp:
        * tests/Bug_1254_Regression/server.cpp:
        * tests/Bug_1269_Regression/client.cpp:
        * tests/Bug_1269_Regression/server.cpp:
        * tests/Bug_1270_Regression/client.cpp:
        * tests/Bug_1270_Regression/server.cpp:
        * tests/Bug_1330_Regression/server.cpp:
        * tests/Bug_1361_Regression/client.cpp:
        * tests/Bug_1361_Regression/server.cpp:
        * tests/Bug_1383_Regression/SimpleClient.cpp:
        * tests/Bug_1383_Regression/SimpleServer.cpp:
        * tests/Bug_1476_Regression/server.cpp:
        * tests/Bug_1482_Regression/server.cpp:
        * tests/Bug_1495_Regression/Server_Task.cpp:
        * tests/Bug_1551_Regression/server.cpp:
        * tests/Bug_1568_Regression/server.cpp:
        * tests/Bug_1627_Regression/server.cpp:
        * tests/Bug_1670_Regression/server.cpp:
        * tests/Bug_1676_Regression/server.cpp:
        * tests/Bug_2084_Regression/Client_Task.cpp:
        * tests/Bug_2084_Regression/Server_Task.cpp:
        * tests/Bug_2134_Regression/Hello.cpp:
        * tests/Bug_2174_Regression/server.cpp:
        * tests/Bug_2183_Regression/server.cpp:
        * tests/Bug_2186_Regression/client.cpp:
        * tests/Bug_2186_Regression/server.cpp:
        * tests/Bug_2188_Regression/server.cpp:
        * tests/Bug_2289_Regression/client.cpp:
        * tests/Bug_2289_Regression/server.cpp:
        * tests/Bug_2319_Regression/server.cpp:
        * tests/Bug_2328_Regression/server.cpp:
        * tests/Bug_2349_Regression/server.cpp:
        * tests/Bug_2417_Regression/client.cpp:
        * tests/Bug_2417_Regression/server.cpp:
        * tests/Bug_2429_Regression/client.cpp:
        * tests/Bug_2429_Regression/server.cpp:
        * tests/Bug_2494_Regression/server.cpp:
        * tests/Bug_2503_Regression/test_i.cpp:
        * tests/Bug_2560_Regression/server.cpp:
        * tests/Bug_2593_Regression/server.cpp:
        * tests/Bug_2595_Regression/server.cpp:
        * tests/Bug_2669_Regression/client.cpp:
        * tests/Bug_2683_Regression/server.cpp:
        * tests/COIOP/COIOP_Simple_Test.cpp:
        * tests/COIOP/Server_Task.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp:
        * tests/Cache_Growth_Test/server.cpp:
        * tests/CallbackTest/client.cpp:
        * tests/CallbackTest/server.cpp:
        * tests/Client_Leaks/Process_Factory.cpp:
        * tests/Client_Leaks/child.cpp:
        * tests/Client_Leaks/server.cpp:
        * tests/CodeSets/simple/server.cpp:
        * tests/Collocation_Exception_Test/Server_Task.cpp:
        * tests/Collocation_Oneway_Tests/Server_Task.cpp:
        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/Collocation_Tests/Server_Task.cpp:
        * tests/Connect_Strategy_Test/server.cpp:
        * tests/Connection_Purging/server.cpp:
        * tests/Crash_On_Write/server.cpp:
        * tests/Crashed_Callback/client.cpp:
        * tests/Crashed_Callback/server.cpp:
        * tests/DII_Collocation_Tests/oneway/Server_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Server_Task.cpp:
        * tests/DLL_ORB/Test_Server_Module.cpp:
        * tests/DSI_AMI_Gateway/server.cpp:
        * tests/DSI_Gateway/server.cpp:
        * tests/Explicit_Event_Loop/server.cpp:
        * tests/FL_Cube/server.cpp:
        * tests/Faults/client.cpp:
        * tests/Faults/middle.cpp:
        * tests/Faults/ping.cpp:
        * tests/Faults/pong.cpp:
        * tests/Faults/server.cpp:
        * tests/File_IO/File_i.cpp:
        * tests/Forwarding/server.cpp:
        * tests/GIOP_Fragments/Java_Big_Request/server.cpp:
        * tests/Hang_Shutdown/server.cpp:
        * tests/Hello/server.cpp:
        * tests/ICMG_Any_Bug/Hello.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:
        * tests/IPV6/server.cpp:
        * tests/Leader_Followers/server.cpp:
        * tests/LongDouble/server.cpp:
        * tests/LongUpcalls/AMI_Manager.cpp:
        * tests/LongUpcalls/ami_client.cpp:
        * tests/LongUpcalls/ami_server.cpp:
        * tests/LongUpcalls/blocking_client.cpp:
        * tests/LongUpcalls/blocking_server.cpp:
        * tests/MProfile/server.cpp:
        * tests/MProfile_Connection_Timeout/server.cpp:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/MT_BiDir/client.cpp:
        * tests/MT_Client/server.cpp:
        * tests/MT_Server/server.cpp:
        * tests/MT_Timeout/server.cpp:
        * tests/Multiple/server.cpp:
        * tests/Muxed_GIOP_Versions/server.cpp:
        * tests/Muxing/server.cpp:
        * tests/Native_Exceptions/server.cpp:
        * tests/NestedUpcall/MT_Client_Test/local_server.cpp:
        * tests/NestedUpcall/Simple/client.cpp:
        * tests/NestedUpcall/Simple/server.cpp:
        * tests/NestedUpcall/Simple/simple-client.cpp:
        * tests/NestedUpcall/Triangle_Test/initiator.cpp:
        * tests/Nested_Event_Loop/server.cpp:
        * tests/Nested_Upcall_Crash/Client_Peer.cpp:
        * tests/Nested_Upcall_Crash/Server_Peer.cpp:
        * tests/Nested_Upcall_Crash/client.cpp:
        * tests/Nested_Upcall_Crash/server.cpp:
        * tests/No_Server_MT_Connect_Test/server.cpp:
        * tests/OBV/Any/server.cpp:
        * tests/OBV/Collocated/Forward/Server_Task.cpp:
        * tests/OBV/Factory/server.cpp:
        * tests/OBV/Forward/server.cpp:
        * tests/OBV/TC_Alignment/server.cpp:
        * tests/OBV/Truncatable/server.cpp:
        * tests/OBV/ValueBox/server.cpp:
        * tests/ORB_shutdown/server.cpp:
        * tests/Object_Loader/Loader.cpp:
        * tests/Objref_Sequence_Test/server.cpp:
        * tests/OctetSeq/server.cpp:
        * tests/Ondemand_Write/server.cpp:
        * tests/Oneway_Buffering/admin.cpp:
        * tests/Oneway_Buffering/server.cpp:
        * tests/Oneways_Invoking_Twoways/client.cpp:
        * tests/Oneways_Invoking_Twoways/server.cpp:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.cpp:
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
        * tests/POA/POA_Destruction/POA_Destruction.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.cpp:
        * tests/POA/wait_for_completion/wait_for_completion.cpp:
        * tests/Parallel_Connect_Strategy/server.cpp:
        * tests/Portable_Interceptors/AMI/server.cpp:
        * tests/Portable_Interceptors/AdvSlot/server.cpp:
        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:
        * tests/Portable_Interceptors/AdvSlotExt/server.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/server.cpp:
        * tests/Portable_Interceptors/PICurrent/test_i.cpp:
        * tests/Portable_Interceptors/Redirection/server.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/server.cpp:
        * tests/QtTests/server.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/server.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/Policy_Combinations/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:
        * tests/Reliable_Oneways/server.cpp:
        * tests/Server_Connection_Purging/server.cpp:
        * tests/Server_Leaks/server.cpp:
        * tests/Server_Port_Zero/server.cpp:
        * tests/Single_Read/server.cpp:
        * tests/Smart_Proxies/Benchmark/server.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
        * tests/Smart_Proxies/server.cpp:
        * tests/Stack_Recursion/server.cpp:
        * tests/Strategies/server.cpp:
        * tests/Timed_Buffered_Oneways/server.cpp:
        * tests/Timeout/server.cpp:
        * tests/Two_Objects/Object_Factory_i.cpp:
        * tests/Two_Objects/server.cpp:
        * tests/Typedef_String_Array/server.cpp:
        * tests/UNKNOWN_Exception/server.cpp:
        * tests/Xt_Stopwatch/server.cpp:

          Modified the majority of the TAO tests, performance-tests and
          examples to use explicit activation to support CORBA e compact.

        * tests/CORBA_e_Implicit_Activation:
        * tests/CORBA_e_Implicit_Activation/CORBA_e_Implicit_Activation.mpc:
        * tests/CORBA_e_Implicit_Activation/Hello.h:
        * tests/CORBA_e_Implicit_Activation/Hello.cpp:
        * tests/CORBA_e_Implicit_Activation/Test.idl:
        * tests/CORBA_e_Implicit_Activation/run_test.pl:
        * tests/CORBA_e_Implicit_Activation/server.cpp:

          Added a new test to ensure that CORBA e compact builds throw the
          correct exception when implicit activation is used.

        * tests/Object_Loader/driver.cpp:

          Check the object reference after the _narrow() to avoid a core
          dump.

        * tests/Object_Loader/run_test.pl:

          Use the PerlACE::add_lib_path() function to add the library
          directory instead of directly modifying the PATH environment
          variable.

        * tests/Nested_Event_Loop/test_i.cpp:

          Fixed an exception message to match the right method name.

Tue Mar 13 18:00:34 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Valuetype/Valuetype_Traits_T.h (copy_range):

          Made this trait method a member template to provide support for
          checked destination iterators.

Tue Mar 13 14:17:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2800_Regression/nsmain.cpp:
        * orbsvcs/tests/Bug_2800_Regression/server.cpp:
          Wait on the thread manager until all tasks are ready

Tue Mar 13 12:19:58 UTC 2007  Steve Huston  <shuston@riverace.com>

        * MPC/config/tao_vc8warnings.mpb: Reversed the defaults for VC8
          STL deprecated warnings since Ossama added the checked iterator
          stuff.

Tue Mar 13 09:55:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynUnion_Test/*:
          New DynUnion test, thanks to M. Arshad Khan
          <khan dot m dot arshad at gmail dot com>
          for creating this test. According to the reporter this failed with 1.5
          but it works on svn head without problems.

Mon Mar 12 22:29:32 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/checked_iterator.h:

          Moved to ACE.

        * tao/Generic_Sequence_T.h:
        * tao/Unbounded_Octet_Sequence_T.h:

          Updated include directives.  The checked_iterator.h header is
          now in ACE.

          Updated checked iterator factory function calls to use new name,
          ACE_make_checked_array_iterator.

        * tao/Object_Reference_Traits_T.h (copy_range):
        * tao/String_Traits_T.h (copy_range):

          Made this trait method a member template to simplify support for
          checked destination iterators.

        * tao/Makefile.am:
        * tao/tao.mpc:

          Removed tao/checked_iterator.h header from the appropriate
          header lists.  It has been moved to ACE.

Mon Mar 12 21:35:25 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/TAO_Internal.cpp:

          Fixed compilation errors on WinCE 5.0 builds.

Mon Mar 12 21:03:15 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/checked_iterator.h (TAO_checked_array_iterator):

          New function template that returns a checked iterator if
          supported by the platform (currently VC8 or better), and a
          pointer otherwise.

        * tao/Generic_Sequence_T.h (generic_sequence, length):
        * tao/Unbounded_Octet_Sequence_T.h (length):

          Call new TAO_checked_array_iterator<>() iterator factory
          function to generate destination iterator.  Addresses VC8
          "C4996" warnings when security related warnings are enabled.

        * tao/Value_Traits_T.h (copy_range):

          Made this trait method a member template to simplify support for
          checked destination iterators.

        * tao/Makefile.am:
        * tao/tao.mpc:

          Added new tao/checked_iterator.h header to the appropriate
          header lists.

Mon Mar 12 17:38:26 UTC 2007  Steve Huston  <shuston@riverace.com>

        * MPC/config/tao_vc8warnings.mpb: Added disabler for the
          "warning C4996: 'std::_Copy_opt' was declared deprecated" warnings
          emanating from Microsoft's STL. Added it for both the vc8 and
          nmake types. Also, added a nmake specific option to disable
          the inherits-via-dominance warning and removed that one from
          the ACE vc8nmake.mpb.

          Also moved the warning 4290 disabler (unimplemented exception
          spec) from ACE's vc8nmake.mpb to here.

Mon Mar 11 13:52:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2800_Regression/server.cpp:
        * orbsvcs/tests/Bug_2800_Regression/nsmain.cpp:
          Exit with -1 when we can't activate the test tasks

Mon Mar 11 13:44:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DiffServ/server.cpp:
        * tests/DiffServ/client.cpp:
          Include DiffservPolicy.h so that the static initializers to run
          in a static build

Sat Mar 10 22:49:01 UTC 2007  Steve Huston  <shuston@riverace.com>

        * MPC/config/tao_vc8warnings.mpb: New base containing features that
          turn VC8 warnings on/off. Some of these may benefit from some looking
          at; if you want to see them, regenerate projects with the feature
          turned off.

        * MPC/config/taodefaults.mpb:
        * TAO_IDL/tao_idl.mpc: Inherit from tao_vc8warnings.mpb to
          shut off the VC8 warnings.

Fri Mar  9 13:47:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DiffServ/client.cpp:
        * tests/DiffServ/server.cpp:
          Added missing duplicate calls

Fri Mar  9 11:03:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter_Registry.cpp:
        * tao/Argument.cpp:
        * tao/Bind_Dispatcher_Guard.cpp:
        * tao/Cleanup_Func_Registry.cpp:
        * tao/Client_Strategy_Factory.cpp:
        * tao/Connect_Strategy.cpp:
          Layout changes

Fri Mar  9 06:43:52 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp (operator>>):

          Addressed ambiguous ACE_CString constructor calls caused by
          recent changes to constructor "release" parameter type.

Fri Mar  9 00:27:39 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/util/utl_identifier.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_scope.cpp:

          Changed the signature of ACE_CString constructor calls to avoid
          ambiguity errors due to recent changes in the ACE_CString
          class.

Fri Mar  9 00:08:52 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp (operator>>):

          Addressed problem where ACE_CString length was not set, which
          resulted in no-op copy to another ACE_CString.

Thu Mar  8 21:27:54 UTC 2007  Steve Huston  <shuston@riverace.com>

        * orbsvcs/IFR_Service/be_init.cpp (BE_save_orb_args):
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp (get_local_addr_str):
        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp (update_key):
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp (valid_id):
          Changed the signature of ACE_CString constructor calls to avoid
          ambiguity errors due to recent changes in the ACE_CString
          class.

Thu Mar  8 17:49:52 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

          Fixed the Event Service crashing when dispatching
          queue fills up and using the MT dispatching.

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:

          Check for non-NULL TAO_EC_Queue_Full_Service_Object before
          attempting to use.

        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.cpp:

          Pass in the TAO_EC_Queue_Full_Service_Object reference into
          the TAO_EC_Dispatching_Task constrcutor.

        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.h:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.h:

          Add -o parameter to delay the client for a number of
          seconds upon the reception of the first event.

        * orbsvcs/tests/EC_Throughput/ec_mt_overflow.conf:
        * orbsvcs/tests/EC_Throughput/ec_mt_overflow.conf.xml:
        * orbsvcs/tests/EC_Throughput/run_test_overflow.pl:

          Added a test to try and stress the event service enough
          to fill a dispatching queue.  This test does not always
          fill the queue and therefore can succeed on systems
          where a filled queue can result in crash of the
          Event_Service.

Thu Mar  8 15:56:40 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

          Moving the -ORBDebugLevel processing from the process-global
          initialization section to the ORB-specific initialization. This
          resolves bug#2809 by allowing new ORBs to change the global
          debug level.

Wed Mar  8 01:28:17 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          Corrected zero buffer length handling to match previous
          behavior.

Wed Mar  7 18:28:14 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMH/Roundtrip.cpp:

          We don't need to do set_result() when using AMH.

Wed Mar  7 17:58:38 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMH/Roundtrip.cpp:

          Corrected the return value when using AMH to invoke_reply.

Wed Mar  7 14:07:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_var.{h,cpp}:
          The const operator->() should return a T*, not T const *,
          removed the non const operator->(), no need for it. This makes
          the Servant_var compliant with the CORBA C++ mapping. Thanks to
          Andres Hurtis <andrej100 at gmail dot com> for reporting this.
          This fixes bugzilla 2847.

        * tao/AnyTypeCode/Marshal.cpp:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
          Layout change

        * tao/AnyTypeCode/Sequence_TypeCode_Static.cpp:
        * tao/AnyTypeCode/TypeCode_Case_Base_T.cpp:
          Bool change

Wed Mar  7 12:32:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rules.tao.GNU:
          Removed the old tao_idl rules, this is now all in the generated
          GNU makefiles. The rules for the event channel are also removed,
          they didn't work anymore

Tue Mar  6 13:46:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
        * tests/IDL_Test/Makefile.am:
        * tests/IDL_Test/valuetype.idl:
        * tests/Any/Recursive/Test.idl:
          Moved new tests to Any/Recursive and readded -GA, this way
          we don't have issues with build systems that have not
          done a full clean

Tue Mar  6 13:21:24 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * COPYING: Updated this file to clarify that the TAO license need
          not be shipped with binary-only releases.  Thanks to Michael
          Kircher <michael dot kircher at siemens dot com> and Werner
          Burger <werner dot burger at siemens dot com> for motivating
          this.

Tue Mar  6 09:52:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_AMI/run_test.pl:
        * tests/Big_Reply/run_test.pl:
        * tests/Bug_1330_Regression/run_test.pl:
        * tests/Bug_1627_Regression/run_test.pl:
        * tests/Bug_2234_Regression/run_test.pl:
        * tests/Connection_Purging/run_test.pl:
        * tests/Leader_Followers/run_test.pl:
        * tests/MT_Client/run_test.pl:
        * tests/Multiple_Inheritance/run_test.pl:
        * tests/Native_Exceptions/run_test.pl:
        * tests/Nested_Event_Loop/run_test.pl:
        * tests/OctetSeq/run_test.pl:
        * tests/OctetSeq/run_test1.pl:
        * tests/OctetSeq/run_test2.pl:
        * tests/Oneways_Invoking_Twoways/run_test.pl:
        * tests/Oneways_Invoking_Twoways/run_test_svc.pl:
        * tests/Reliable_Oneways/run_sync_none.pl:
        * tests/Reliable_Oneways/run_sync_with_server.pl:
        * tests/Reliable_Oneways/run_sync_with_target.pl:
        * tests/Reliable_Oneways/run_sync_with_transport.pl:
        * tests/Reliable_Oneways/run_test.pl:
        * tests/Server_Leaks/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 09:50:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/Adapter_Activator/run_test.pl:
        * examples/POA/Default_Servant/run_test.pl:
        * examples/POA/DSI/run_test.pl:
        * examples/POA/Explicit_Activation/run_test.pl:
        * examples/POA/FindPOA/run_test.pl:
        * examples/POA/Forwarding/run_test.pl:
        * examples/POA/Loader/run_test.pl:
        * examples/POA/NewPOA/run_test.pl:
        * examples/POA/On_Demand_Activation/run_test.pl:
        * examples/POA/On_Demand_Loading/run_test.pl:
        * examples/POA/POA_BiDir/run_test.pl:
        * examples/POA/Reference_Counted_Servant/run_test.pl:
        * examples/POA/RootPOA/run_test.pl:
        * examples/POA/TIE/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 09:38:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation/run_test.pl:
        * tests/Collocation_Exception_Test/run_test.pl:
        * tests/Collocation_Oneway_Tests/run_test.pl:
        * tests/Collocation_Tests/run_test.pl:
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/run_test.pl:
        * tests/RTCORBA/Client_Propagated/run_test.pl:
        * tests/RTCORBA/Server_Declared/run_test.pl:
        * tests/Servant_To_Reference_Test/run_test.pl:
        * tests/UNKNOWN_Exception/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 09:06:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DSI_AMH/run_test.pl:
        * tests/DSI_AMI_Gateway/run_test.pl:
        * tests/DSI_Gateway/run_test.pl:
        * tests/DynAny_Test/run_test.pl:
        * tests/Explicit_Event_Loop/run_test.pl:
        * tests/ORB_destroy/run_test.pl:
        * tests/ORB_init/run_test.pl:
        * tests/ORB_Local_Config/run_tests_all.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 09:03:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_2511_Regression/run_test.pl:
        * tests/POA/Current/run_test.pl:
        * tests/POA/Deactivate_Object/run_test.pl:
        * tests/POA/Default_Servant/run_test.pl:
        * tests/POA/Etherealization/run_test.pl:
        * tests/POA/Excessive_Object_Deactivations/run_test.pl:
        * tests/POA/Identity/run_test.pl:
        * tests/POA/MT_Servant_Locator/run_test.pl:
        * tests/POA/Nested_Non_Servant_Upcalls/run_test.pl:
        * tests/POA/Non_Servant_Upcalls/run_test.pl:
        * tests/POA/Object_Reactivation/run_test.pl:
        * tests/POA/Persistent_ID/run_test.pl:
        * tests/POA/POA_Destruction/run_test.pl:
        * tests/POA/POAManagerFactory/run_test.pl:
        * tests/POA/Policies/run_test.pl:
        * tests/POA/Reference_Counting/run_test.pl:
        * tests/POA/Single_Threaded_POA/run_test.pl:
        * tests/POA/wait_for_completion/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 08:59:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Codec/run_test.pl:
        * tests/POA/Bug_1592_Regression/run_test.pl:
        * tests/Portable_Interceptors/AdvSlot/run_test.pl:
        * tests/Portable_Interceptors/AdvSlotDblCpy/run_test.pl:
        * tests/Portable_Interceptors/AdvSlotExt/run_test.pl:
        * tests/Portable_Interceptors/Benchmark/run_test.pl:
        * tests/Portable_Interceptors/Bug_1559/run_test.pl:
        * tests/Portable_Interceptors/Bug_2088/run_test.pl:
        * tests/Portable_Interceptors/Bug_2510_Regression/run_test.pl:
        * tests/Portable_Interceptors/Collocated/Dynamic/run_test.pl:
        * tests/Portable_Interceptors/Dynamic/run_test.pl:
        * tests/Portable_Interceptors/ForwardRequest/run_test.pl:
        * tests/Portable_Interceptors/IORInterceptor/run_test.pl:
        * tests/Portable_Interceptors/ORB_Shutdown/run_test.pl:
        * tests/Portable_Interceptors/PICurrent/run_test.pl:
        * tests/Portable_Interceptors/PolicyFactory/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/run_test.pl:
        * tests/Portable_Interceptors/Recursive_ORBInitializer/run_test.pl:
        * tests/Portable_Interceptors/Redirection/run_test.pl:
        * tests/Portable_Interceptors/Register_Initial_References/run_test.pl:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/run_test.pl:
        * tests/Portable_Interceptors/Service_Context_Manipulation/run_test.pl:
        * tests/Portable_Interceptors/Slot/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 08:15:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
          Added another test case

        * tests/Any/Recursive/client.cpp:
          Extended with more tests

        * tests/POA/Current/Current.cpp:
          Layout changes

Tue Mar  6 03:08:49 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/POA/Bug_1592_Regression/run_test.pl:
          Must use $ACE_ROOT/bin instead of ../../bin otherwise it does
          not work for checkouts with ACE and TAO at the same level (such
          as directly from the trunk.)

Mon Mar  5 20:13:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/ast/ast_sequence.cpp:
          Fixed last part of bug 2776, the typecode for recursive valuetype s
          is now generated correctly as recursive

        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be_include/be_valuetype.h:
        * TAO_IDL/include/ast_valuetype.h:
          Moved in_recursion method from be to ast class

Mon Mar  5 19:00:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:
          Fixed bug 2776 partially, improved the detection whether we have
          a recursive type or not. Thanks to Martin Corino
          <mcorino at remedy dot nl> for reporting this issue.

Mon Mar  5 14:45:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/valuetype.idl:
          Added Recursive2 and Recursive3 types, both do result in
          an invalid generated typecode. The generated code does compile
          but will result in a crash when used runtime.

        * tests/IDL_Test/IDL_Test.mpc:
          Don't use -GA for valuetype anymore, is too complex

Mon Mar  5 13:41:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
          Added RecursiveUnion2 as another test

        * tests/Any/Recursive/client.cpp:
          Added call with RecursiveUnion2, also fails

        * tests/IDL_Test/union.idl:
        * tests/IDL_Test/valuetype.idl
          Some more tests

Mon Mar  5 11:09:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Recursive_Type_TypeCode.cpp:
        * tao/AnyTypeCode/Recursive_Type_TypeCode.h:
        * tao/AnyTypeCode/Struct_TypeCode.cpp:
        * tao/AnyTypeCode/Struct_TypeCode.h:
        * tao/AnyTypeCode/Struct_TypeCode_Static.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Layout changes

Mon Mar  5 11:03:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Object_Reference_Sequence_T.h:
        * tao/Unbounded_Object_Reference_Sequence_T.h:
          Reverted the change for bugzilla 2829, some builds show errors,
          will investigate these builds first

Mon Mar  5 09:44:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>


        * tao/Bounded_Object_Reference_Sequence_T.h:
        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/Makefile.am:
        * tao/Object_Reference_Const_Sequence_Element_T.h:
        * tao/String_Const_Sequence_Element_T.h:
        * tao/tao.mpc:
        * tao/Unbounded_Object_Reference_Sequence_T.h:
          Fixed bugzilla 2829, make it possible to use .in()
          on the element returned by const operator [] for an
          object reference sequence

        * tao/ORB_Core.cpp:
          layout change

        * TAO_IDL/be/be_visitor_union/union_cs.cpp
        * TAO_IDL/be/be_visitor_union_branch.cpp
        * TAO_IDL/be/be_visitor_union_branch/public_constructor_cs.cpp
        * TAO_IDL/be/be_visitor_union_branch/public_reset_cs.cpp
        * TAO_IDL/be_include/be_codegen.h
        * TAO_IDL/be_include/be_visitor_union_branch.h
        * TAO_IDL/be_include/be_visitor_union_branch/public_constructor_cs.h
          Fixed bugzilla 2839, when an union is created by default
          and the discriminator is for a value that is allocated
          from the heap then allocate a value else we get
          a crash when marshaling this default union

Fri Mar  2 22:15:32 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Fixed a memory leak.

Fri Mar  2 20:48:45 UTC 2007  Steve Huston  <shuston@riverace.com>

        * TAO-INSTALL.html: Added a description of cross-compiling on
          Windows with Visual Studio.

        * orbsvcs/ImplRepo_Service/Activator_NT_Service.{h cpp}:
        * orbsvcs/ImplRepo_Service/Locator_NT_Service.{h cpp}:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/Naming_Service/NT_Naming_Server.cpp:
        * orbsvcs/Naming_Service/NT_Naming_Service.{h cpp}:
        * orbsvcs/Notify_Service/NT_Notify_Server.cpp:
        * orbsvcs/Notify_Service/NT_Notify_Service.{h cpp}: Don't try this
          on ACE_WIN32 platforms where ACE_LACKS_WIN32_SERVICES.

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp (open_config):
        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp: Don't try to build
          the Windows registry-using code where ACE_LACKS_WIN32_REGISTRY.

Fri Mar  2 21:00:23 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMI_Gateway/test_dsi.cpp:
        * tests/DSI_Gateway/test_dsi.cpp:

          Fixed an unused argument warning.

Fri Mar  2 20:31:11 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          Don't need the exception_type_ data memember.
          It is inherited from its parent class AMH_Response_Handler.

        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/AMH_Response_Handler.cpp:

          Move the exception_type_ from private section to protected section.
          so that the AMH_DSI_Response_Handler as a child class can access
          this data member.

Fri Mar  2 18:45:34 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.inl:
        * tao/DynamicInterface/DII_Reply_Handler.inl:

          Added the missing versioned namespace guard.

Fri Mar  2 07:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_attribute.cpp:
          No need to set the flag that an operation has been seen

        * TAO_IDL/be/be_union.cpp:
          When we have an union with an enum as discriminator and the
          number of labels is the same as the enum has members we don't
          need to generate a default case. Fixes bugzilla 2838

Thu Mar  1 21:32:04 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/DII_Reply_Handler.cpp:

          Cosmetic change.

Thu Mar  1 21:22:25 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMH/DSI_AMH.mpc:

          Fixed a mpc error.

Thu Mar  1 21:13:06 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:

          Fixed a Intel compiler warning.

Thu Mar  1 20:21:19 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Fixed a unused argument warning.

Thu Mar  1 19:58:16 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.cpp:

          Added the missing versioned namespace guard.

Thu Mar  1 19:36:47 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.cpp:

          Removed use of deprecated macros. Changed to use c++ cast.
          Removed a check for gcc > 2.8 since it is not supported.

Thu Mar  1 19:14:18 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          Moved implemention code from header file to cpp file.

Thu Mar  1 18:58:47 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.inl:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Request.cpp:
        * tests/DSI_AMH/DSI_AMH.mpc:
        * tests/DSI_AMH/README:
        * tests/DSI_AMH/Roundtrip.cpp:
        * tests/DSI_AMH/server.cpp:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.cpp:
        * tests/DSI_AMI_Gateway/gateway.cpp:
        * tests/DSI_AMI_Gateway/test_dsi.h:
        * tests/DSI_AMI_Gateway/test_dsi.inl:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Changed some lengthy lines to be less than 80 characters.

Thu Mar  1 16:14:43 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/Makefile.am:

          Manually added several new files to this file.

Thu Mar  1 14:53:53 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          No need to check for null pointer since dynamic_cast already
          does the check for us.

Thu Mar  1 14:01:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/DynamicInterface/Unknown_User_Exception.h:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Transport.h:
        * tao/Transport_Connector.cpp:
        * tao/Transport_Queueing_Strategies.cpp:
        * tao/Transport_Selection_Guard.cpp:
          Layout changes

Thu Mar  1 13:23:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Makefile.am:

          Since these are not automatically generated, we must add new files
          by hand.

Thu Mar  1 13:12:28 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          Replaced ACE_static_cast and ACE_const_cast with the correct
          casts.

Wed Feb 28 20:02:07 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.inl:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/DII_Invocation.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.h:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.inl:
        * tao/DynamicInterface/DII_Reply_Handler.cpp:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Request.cpp:

        * tao/Invocation_Utils.h:

        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/AMH_Response_Handler.cpp:

          Extended current DynamicInterface to allow DII+AMI+DSI+AMH.

        * tests/DSI_AMH:
        * tests/DSI_AMH/DSI_AMH.mpc:
        * tests/DSI_AMH/README:
        * tests/DSI_AMH/Roundtrip.h:
        * tests/DSI_AMH/Roundtrip.cpp:
        * tests/DSI_AMH/Test.idl:
        * tests/DSI_AMH/client.cpp:
        * tests/DSI_AMH/run_test.pl:
        * tests/DSI_AMH/server.cpp:

          Added a new test for the new DSI+AMH feature.

        * tests/DSI_AMI_Gateway:
        * tests/DSI_AMI_Gateway/DSI_AMI_Gateway.mpc:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.h:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.cpp:
        * tests/DSI_AMI_Gateway/README:
        * tests/DSI_AMI_Gateway/client.cpp:
        * tests/DSI_AMI_Gateway/gateway.cpp:
        * tests/DSI_AMI_Gateway/run_exception_test.pl:
        * tests/DSI_AMI_Gateway/run_test.pl:
        * tests/DSI_AMI_Gateway/server.cpp:
        * tests/DSI_AMI_Gateway/test.idl:
        * tests/DSI_AMI_Gateway/test_dsi.h:
        * tests/DSI_AMI_Gateway/test_dsi.inl:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:
        * tests/DSI_AMI_Gateway/test_i.h:
        * tests/DSI_AMI_Gateway/test_i.inl:
        * tests/DSI_AMI_Gateway/test_i.cpp:

          Added a new test to experience the whole AMI+DII+AMH+DSI feature.

Wed Feb 28 15:24:30 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/diffservpolicy.mpb:

          Added avoids_minimum_corba, avoids_corba_e_compact, and
          avoids_corba_e_micro as base projects and removed the install base
          project.  This library is not available when minimum_corba,
          corba_e_compact or corba_e_micro is enabled.  And, users of this
          library may not want/need their binary or library to be installed.

Wed Feb 28 14:59:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Server_Worker.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/Client_Worker.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/Server_Worker.cpp:
          Fixed unreferenced local variable warnings

Wed Feb 28 14:44:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/options.cpp:
          Fixed memory leak when reading ior file

Wed Feb 28 12:42:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.h:
        * tao/CodecFactory/CodecFactory.cpp:
        * tao/CodecFactory/CodecFactory.h:
        * tao/CodecFactory/CodecFactory_impl.cpp:
        * tao/CodecFactory/CodecFactory_impl.h:
          Layout changes

Wed Feb 28 12:34:55 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/CodecFactory/CDR_Encaps_Codec.cpp:

          Removed an ACE_THROW_RETURN that somehow made it back in.

Wed Feb 28 10:05:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
        * tao/AnyTypeCode/Union_TypeCode_Static.cpp:
          Zapped another few old exception macros

        * tao/DynamicInterface/Dynamic_Implementation.cpp:
          Layout changes

Wed Feb 28 09:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/*:
        * Release:
          Added new bin directory and moved some scripts of the ACE_wrappers/bin
          to this directory so that we don't ship TAO specific scripts with ACE

Tue Feb 27 21:09:01 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/MCAST_Parser.cpp (parse_string):

          Removed emulated exception macro that snuck back in to the
          source during the merge.

Tue Feb 27 18:43:11 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Exception.h:
        * tao/SystemException.h:

          Made copy constructor public again to silence VC7.1 level 4
          warnings.  This constructor should be protected, but VC7.1 at
          warning level 4 complains about the inaccessible copy
          constructor preventing it from being caught.  However, that
          probably isn't true for most cases since CORBA exceptions are
          typically caught by reference, not by copy.

          Added a note describing why the copy constructor is not
          protected.

        * tao/diffs/Object_Key.diff:

          Synchronized with latest version of Object_KeyC.cpp.

Tue Feb 27 13:21:05 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IDL_Test/union.idl:

          Changed to only exclude the union with negative cases from SunCC
          version 5.8 or below.

Tue Feb 27 12:41:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/TypeCode_Creation/main.cpp:
        * examples/TypeCode_Creation/test.idl:

          Modified the idl union to not use negative numbers in the cases.

        * tests/IDL_Test/union.idl:

          Added a union that uses negative numbers in the cases.  This is
          currently #ifdef'ed to not be processed by the Sun preprocessor as
          it separates the negative sign and the number causing problems for
          the tao_idl lexer/scanner.  This is for bugzilla bug #2821.

Tue Feb 27 11:05:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:

          Some compilers do not process the #if before the macro subsitution
          adjacent string concatination.

Tue Feb 27 06:32:42 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp (create_policy):

          It seems the const TAO object reference sequence element
          operator[] no longer returns a "_var" or managed type.  Drop the
          newly added ".in()" accessor call.  Addresses g++ 4.1 build
          errors.

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp (operator >>):

          Fixed partial merge where a number of changes were not
          committed.

          Addressed comparison signed/unsigned warnings.

Mon Feb 26 23:27:03 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * NEWS:

          Updated to reflect latest changes.

        * TAO_IDL/include/fe_extern.h (File, FE_set_yyin):
        * TAO_IDL/fe/fe_extern.cpp (FE_set_yyin):

          Removed useless "File" class forward declaration.  Just use
          the standard "FILE" type instead.

        * TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:

          Added missing visit_scope() method return value check detected
          by Coverity.

        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:

          Added missing accept() method return value check detected by
          Coverity.

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:

          Fixed buffer overrun detected by Coverity.

        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * tao/Acceptor_Registry.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:

          Added missing dynamic_cast<> return value check detected by
          Coverity, i.e. a Coverity FORWARD_NULL error.

        * TAO_IDL/be/be_interface_strategy.cpp (compute_coll_names):

          Place full_coll_name_ and local_coll_name_ pointer members in a
          well defined state by resetting them to zero  after deallocating
          memory they pointed to in case this method returns prematurely,
          and attempts to access them later on occur.  Addresses a problem
          flagged by Coverity.

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.cpp:
        * tao/CodecFactory/CodecFactory.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/PI/PICurrent_Loader.cpp:
        * tao/RTCORBA/RT_PolicyFactory.cpp:

          Initialize generated CORBA::Object_ptr skeleton variables with
          CORBA::Object_ptr() instead of CORBA::Object::_nil().  Addresses
          Coverity UNUSED_VALUE errors.

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:

          Moved zero pointer check before the pointer is actually
          dereferenced.  Addresses Coverity REVERSE_INULL error.

        * TAO_IDL/be/be_codegen.cpp:

          Include "tao/ORB_Constants.h" if operations or valuetypes are
          seen.  Users may check SystemException minor codes.

          Corrected npos constant scope.  s/ACE_SString/ACE_CString/g

          Const-correctness improvements.

          Delay array instantiation optimization until it is needed.
          Minor performance optimization in presence of bad function
          parameters.

        * TAO_IDL/be/be_interface.cpp (gen_def_ctors):

          Issue diagnostic message if inheritance graph traversal fails.

        * TAO_IDL/be/be_decl.cpp:

          Do not continue if scope narrowing fails.

        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/skip.cpp:
        * tao/RTCORBA/RT_Transport_Descriptor.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Endpoint_Utils.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:

          Check for null pointer before dereferencing.  Addresses Coverity
          FORWARD_NULL errors.

        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:

          Improved consistency between local variable and return value
          types.

          Improved const-correctness.

          Fixed dead code related to IDL comment scanning.  Flagged by
          Coverity.

          Cleaned up node memory management.

        * TAO_IDL/driver/drv_preproc.cpp:

          Removed useless "File" class forward declaration.  Just use
          the standard "FILE" type instead.

          Removed use of "friggin'" from TAO_IDL error diagnostic.  Some
          users may not appreciate this humor.

        * TAO_IDL/util/utl_string.cpp:

          Use operator new() instead of malloc().

          (~UTL_String):

          Deallocate string array members.  Addresses exception-safety
          issues, as well as Coverity CTOR_DTOR_LEAK errors.

          (destroy):

          Deallocate string array members, and reset them to zero.

        * tao/Exception.h:
        * tao/SystemException.h:

          Made copy constructor protected, as required by the C++
          mapping.

        * tao/IIOP_Acceptor.cpp:

          Addressed buffer overrun.

        * tao/IIOP_Connector.cpp:

          Corrected method name in diagnostic message.

          Cosmetic changes.

        * tao/MCAST_Parser.cpp:
        * tao/MCAST_Parser.h:
        * tao/MCAST_Parser.inl:

          Replaced unnecessary delayed conversions from port and TTL
          strings to integral values.  Just store and use the integral
          values directly instead of passing around a bunch of strings.
          Simplifies implementation.

          Added valid TTL check.  The valid TTL range is (0,255].

          Corrected string position variable type to match return value of
          ACE_CString::find(), i.e. ACE_CString::size_type.

        * tao/Object_KeyC.h:
        * tao/Object_KeyC.cpp (encode_sequence_to_string):
          (decode_string_to_sequence):
        * tao/diffs/Object_Key.diff:

          In the decoding case, ensure sequence length value does not
          exceed maximum value for sequence index type (CORBA::ULong).
          This is mostly an issue for 64-bit MS Windows builds.

          Corrected types used in explicit casts.

          Improved const-correctness.

          Improved performance.

        * tao/Policy_Set.cpp:

          Verify TAO_Cached_Policy_Type value is greater than zero before
          using it as an array index.  Addresses Coverity NEGATIVE_RETURNS
          errors.

        * tao/Queued_Message.h:

          Removed include directive for "ace/Time_Value.h".  A forward
          declaration will suffice.

        * tao/TAO_Internal.cpp (open_services):

          Addressed warning regarding potential conflict with similarly
          named variables in different scopes.

        * tao/Transport.cpp (cleanup_queue_i):

          Corrected byte count type to match message length type.

        * tao/orbconf.h (TAO_DEFAULT_ADAPTER_REGISTRY_SIZE):
        * tao/IORTable/Table_Adapter.cpp (priority):

          Created this new constant, and used it where appropriate.

        * tao/AnyTypeCode/String_TypeCode_Traits.h:

          Initialize CORBA::TypeCode_ptr variables with
          CORBA::TypeCode_ptr() instead of CORBA::TypeCode::_nil().
          Addresses Coverity UNUSED_VALUE errors.

        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:

          Removed dead/unreachable code.

        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.cpp:

          Only issue diagnostic message if debugging is enabled by user.

        * tao/RTCORBA/RT_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.cpp:
        * orbsvcs/orbsvcs/Security/SL3_ContextEstablishmentPolicy.cpp:

          Initialize CORBA::Policy_ptr variables with CORBA::Policy_ptr()
          instead of CORBA::Policy::_nil().  Addresses Coverity
          UNUSED_VALUE errors.

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Added missing dynamic_cast<> return value check detected by
          Coverity, i.e. a Coverity FORWARD_NULL error.

          Initialize CORBA::TypeCode_ptr variables with
          CORBA::TypeCode_ptr() instead of CORBA::TypeCode::_nil().
          Addresses Coverity UNUSED_VALUE errors.

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          Verify buffer size falls into a valid range instead of just
          checking for a non-zero value.  Addresses Coverity
          TAINTED_SCALAR errors.

        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp:

          Fixed potential memory leaks.  Addresses Coverity RESOURCE_LEAK
          errors.

        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:

          Fixed potential dynamic deallocation of a statically
          instantiated object.

        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:

          Explicitly cast return value of "attrs.load()" call to void.  We
          don't appear to care about it.  Address Coverity CHECKED_RETURN
          error.

        From Russell Mora
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp (read):

          Fix for coverity flaged REVERSE_INULL problem.  Do not
          dereference null pointer.

Mon Feb 26 19:30:28 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IDL_Test/constants.idl:

          Added constants built through various mathematic operations to
          flush out problems with preprocessors that don't handle negative
          signs correctly.  This is for bugzilla bug #2821.

Mon Feb 26 17:25:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:

          Removed persistance options that rely on non-minimum corba.

Mon Feb 26 17:18:20 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/Sequence_Unit_Tests/unbounded_sequence_cdr_ut.cpp:

          Added a #include for the octet-sequence specialization.

Mon Feb 26 14:44:07 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Reverted my change (committed by Jeff Parsons on my behalf) from
          Tue Nov 28 19:32:46 UTC 2006.  While it fixed an issues with the
          Sun preprocessor (e.g., negative numbers coming out like "- 9"),
          it causes problems with normal subtraction.  Thanks to Jules
          Colding <colding at omesc dot com> for reporting this.  This fixes
          bugzilla bug #2821.

Mon Feb 26 13:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression/*.{h,cpp}:
        * tao/UB_String_Argument_T.{cpp,inl}:
          Refactored layout using 1.12 version of StyleManager

Mon Feb 26 13:43:45 UTC 2007  Olli Savia  <ops@iki.fi>

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:

          Pass correct buffer length to ACE_OS::snprintf().
          Thanks to Yves Alloyer <alloyer at ipanematech dot com> for
          reporting this and providing initial patch. This fixes Bug #2797.

Mon Feb 26 13:43:44 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ/server.cpp:

          Removed usage of old macros.

Sun Feb 25 21:56:31 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ/server.cpp:

          Removed ACE_THROW_SPEC in the function definitions and
          declarations. Helps fix the fuzz build errors.

Sun Feb 25 17:28:52 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ/run_test.pl:

          Added a regression test script for the DiffServ policy test.

Sun Feb 25 17:09:10 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ:
        * tests/DiffServ/client.cpp:
        * tests/DiffServ/diffserv.mpc:
        * tests/DiffServ/test.idl:
        * tests/DiffServ/server.cpp:
        * tests/DiffServ/README:

          Added a new test for the DiffServ policy.

Sat Feb 24 19:34:08 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * MPC/config/diffservpolicy.mpb:

          Added a MPC project file for the DiffServ policy.

Sat Feb 24 06:56:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
          Use false instead of 0

        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/LocateRequest_Invocation.cpp:
        * tao/PortableServer/Adapter_Activator.cpp:
          Layout change

        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/HTTP_Parser.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Messaging/Messaging_ORBInitializer.cpp:
        * tao/PI/PI_ORBInitializer.cpp:
        * tao/PI_Server/PortableServer_ORBInitializer.cpp:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Removed not needed catch

        * tao/Object.cpp:
          Fixed _validate_connection

        * tests/Bug_2826_Regression/*:
          New regression for bug 2826 that is about a problem with
          validate_connection. Thanks to Steven Xie
          <steven dot xie at mpathix dot com> for reporting this
          and making the test program

Thu Feb 22 09:35:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/GSSUP.idl:

          This file includes CSI.idl, but this should be relative to TAO/orbsvcs for
          end user use.

Thu Feb 22 09:14:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_1592_Regression/client.cpp:
          Added this file, missed it in a previous commit

Wed Feb 21 14:47:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.am:
          Updated for some changes

        * tao/AnyTypeCode/Any.cpp:
          Documentation update

        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
          Layout changes

Wed Feb 21 14:25:05 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:

          Added a new set_dscp_codepoint () method.

Wed Feb 21 14:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_1592_Regression/*:
          New test program for bug 1592, not fixed yet.

        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.mpc:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.mpc:
          Simplified

Wed Feb 21 14:15:38 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:

          Modified the pre_invoke_remote_request () method
          to add checks specific to the DiffServ policy,
          to add DiffServ codepoints on the server replies.

Wed Feb 21 12:23:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_2511_Regression/server.cpp:
          Return the error count, in case of a failure then the test
          framework will notice this

        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
          Don't call postinvoke when we don't have a servant. Fixes bugzilla
          bugs 2511 and 2658. Thanks to Martin Cornelius
          <Martin dot Cornelius at smiths-heimann dot com> and Milan
          Cvetkovic <milan dot cvetkovic at mpathix dot com> for reporting
          this and providing a test case and a proposed fix.

Wed Feb 21 11:42:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1383_Regression/*:
          Code for this test, not enabled for automatic testing, just
          integrated this and validated that it just works

Wed Feb 21 10:41:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
          Layout changes

Wed Feb 21 08:28:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/Test.idl:
          Added another test case

        * tests/Hello/server.cpp:
          Layout change

Wed Feb 21 08:24:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/Simple/Server/index.html:
          Updated because of throw spec removal

        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.{h,cpp}:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.{h,cpp}:
          Use throw()

        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
          Use false instead of 0

        * orbsvcs/orbsvcs/Naming/Bindings_Iterator_T.{h,cpp}:
          Make destroyed a real bool

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
        * orbsvcs/orbsvcs/Naming/Storable.cpp:
        * orbsvcs/orbsvcs/Naming/Storable.h:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/Foo_i.cpp:
          Layout change

        * orbsvcs/performance-tests/RTEvent/lib/Implicit_Deactivator.cpp
        * orbsvcs/performance-tests/RTEvent/lib/Servant_var.h:
        * orbsvcs/performance-tests/RTEvent/lib/Servant_var.inl:
          Use std::swap instead of ACE_Swap

        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc:
          Simplified this file

Wed Feb 21 08:14:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Layout changes

        * Utils/Servant_Var.inl:
          Use std::swap instead of ACE_Swap

Tue Feb 20 20:59:38 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/TAO_Internal.cpp:

          Removed the process directive for Default Network Priority
          Protocols Hooks.

        * tao/DiffServPolicy/DiffServPolicy.cpp:

          Added code to set the name of the DiffServ Network
          Priority Protocols Hooks with the ORB Core. At ORB
          initialization time, the ORB Core will open a service
          configurator based on this name, to set the network
          priority protocols hooks.

        * tao/ORB_Core.cpp:

          Previosuly, during the initializations of the protocols hooks,
          if the protocols hooks turned out to be 0, a initialization
          error was thrown. Removed that, because now the protocols
          hooks could be 0, because we have removed the default
          implementations.

        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:

          Check if the returned network priority protocolos hooks
          from the ORB Core is not 0, before using it.

        * tao/Remote_Invocation.cpp:

          Modified the send_message () to check if DiffServ policy is being
          used to set the DiffServ codepoints on the requests and replies.
          This method already has code to check the enable_network_priority
          flag from the RTCORBA library, to set DiffServ codepoints
          on the requests and replies. Now, using DiffServ library always
          takes precedence irrespective if whether the application uses
          RTCORBA or not.

Tue Feb 20 20:36:12 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/tao.mpc:

          Removed Default_Network_Priority_Protocols_Hooks.{h,cpp}.

Tue Feb 20 20:28:28 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Default_Network_Priority_Protocols_Hooks.{cpp,h}:

          Removed. The network_priority_protocols_hooks is no
          longer going to incur virtual call overhead, and instead
          just remains as a pointer, which is 0 or not. Non-zero
          instance means, that the DiffServ library is linked in.

Tue Feb 20 20:10:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Default_Protocols_Hooks.{cpp,h}:
          Removed, instead of just invoking the protocol hooks, just
          check if the protocol_hook pointer is 0 or not. If non zero
          then invoke the method

        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
          Added missing include to build with Borland

        * tao/IIOP_Connection_Handler.cpp:
        * tao/ORB_Core.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/RTCORBA/RT_Current.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/orbsvcs/orbsvcs/SSLIOP_Connection_Handler.cpp:
          When invoking the protocol hooks, check if we have a valid pointer.
          This increases performance and decreases footprint. Fixes bugzilla
          2823.

        * tao/tao.mpc:
          Removed Default_Protocols_Hooks.{h,cpp}

        * tao/TAO_Internal.cpp:
          Removed default protocol hooks

        * tao/Default_Collocation_Resolver.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Layout change

Tue Feb 20 18:35:50 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp (ssliop_connect):
          Call remove_reference() on svc_handler so that we don't leak
          handles.  Thanks to Ken Sedgwick <ken+5a4 at bonsai dot com> for
          reporting this and testing the fix.  This fixes bugid 1506.

Tue Feb 20 17:56:25 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * COPYING: Clarified how the COPYING file need to be included with
          any code released.  Thanks to Scott Mark <sjm at pobox dot com>
          for helping clarify this.

Tue Feb 20 16:03:13 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Default_Servant_Dispatcher.cpp:

          Modified the pre_invoke_remote_request () method to do
          some processing, specific to the DiffServ library, to add
          DiffServ codepoints on the replies. The method relegates the
          processing to a network priority hook, defined on the POA,
          and specialized by the DiffServ library.

Tue Feb 20 15:10:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.{h,cpp,inl}:
          Layout changes

Tue Feb 20 13:21:08 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2800_Regression/NamingTask.cpp:
        * tests/Bug_2809_Regression/server.cpp:

          Deal with conversion from string constant to char*.  Store the
          string constants in a const char* and then use const_cast<> where
          necessary.

Tue Feb 20 06:38:34 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Connection_Handler.h:
        * tao/Connection_Handler.cpp:

          Added a new set_dscp_codepoint () method with a CORBA::Long
          as an input argument. This function is added as part of the
          DiffServ policy support.

        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Connection_Handler.h:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.h:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:

          Concrete protocol implementations of the above defined method.

Tue Feb 20 05:14:39 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/IOP_IOR.pidl:

          Changed the value of the newly added ServiceID (REP_NWPRIORITY)
          to be among the TAO reserved range.

Mon Feb 19 21:01:10 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServPolicy.pidl:

          Changed the PolicyType value to use a value from
          the TAO reserved range.

Mon Feb 19 20:34:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FTRT_Event_Service/Event_Service/FTRT_Event_Service.mpc:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.mpc:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.mpc:
        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.mpc:
          Added install as base project so that the executables to
          get installed

        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/LifeCycle_Service/Makefile.am:
          Updated because of change above. Fixes bugzilla bug 2813, thanks
          to Thomas Girard <thomas dot g dot girard at free dot fr>
          for reporting this.

Mon Feb 19 19:55:46 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CDR/allocator.cpp:

          Use a static cast to avoid warnings about converting from
          ACE_hrtime_t to double.

Mon Feb 19 19:44:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_1495_Regression/Client_Task.cpp:
        * tests/Bug_1495_Regression/test_i.cpp:
        * tests/Bug_2084_Regression/EventNode.cpp:
        * tests/Bug_2084_Regression/Hello.cpp:

          Use a combination of C-style cast and static_cast<> to avoid
          warnings from gcc in 64-bit mode.

Mon Feb 19 19:00:24 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Crash_On_Write/run_test.pl:

          Extend the client timeout so that very slow machines can complete
          the test.

Mon Feb 19 18:59:01 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.h:

          Fixed the fuzz build errors.

Mon Feb 19 18:48:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Invocation_Adapter.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Transport_Connector.cpp:
          Layout changes

Mon Feb 19 18:42:50 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Crash_On_Write/run_test.pl:

          Check for -1 instead of -10 to indicate timeout.

Mon Feb 19 18:41:22 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
          Fixed return types in two versions of get_dscp_codepoint().  The
          return type did not match the header file types.

Mon Feb 19 16:37:26 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:

          Fixed the RTEMS_NO_NETWORK build errors. The errors were in
          throwing exceptions in lines 96 and 102.

Mon Feb 19 14:42:08 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:

          Modified the signature of get_dscp_codepoint () methods, to get rid
          of the "type qualifier meaningless" errors in most of the TAO
          builds.

Mon Feb 19 14:36:33 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/TAO_Internal.cpp:

          Added a process directive to fix the ORB initialization errors.

Mon Feb 19 12:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Improved doxygen

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Accept_Strategy.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ClientCredentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Util.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Util.h:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:
        * orbsvcs/orbsvcs/Shutdown_Utilities.cpp:

          Layout/const changes

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
          Fixed compile problems when SSLIOP_DEBUG_PEER_CERTIFICATE is
          enabled

Mon Feb 19 04:42:49 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:

          Fixed a compilation error.

Fri Feb 16 16:55:51 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Network_Priority_Hook.h:
        * tao/PortableServer/Network_Priority_Hook.cpp:

          Added a hook in the POA to make a call on the DiffServ library
          to do DiffServ policy related processing on the server side
          of the application. The specialized implementation of the hook
          is provided by the DiffServ library.

        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Root_POA.cpp:

          Added code to initialize the above mentioned hook.

          Added get and set methods for the above mentioned hook.

          Added a get method to return the POA's cached policies.

        * tao/PortableServer/POA_Cached_Policies.h:
        * tao/PortableServer/POA_Cached_Policies.cpp:
        * tao/PortableServer/POA_Cached_Policies.inl:

          Added get and set methods for returning DiffServ policy related
          artifacts. These methods are used in the server side for setting
          the DiffServ codepoints on the replies.

Fri Feb 16 16:51:38 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.inl:

          Since a new type of protocols hooks was added as part of the
          TAO DiffServ policy support, the ORB core files are modified to
          instantiate the new type of protocols hooks, if the application
          uses the DiffServ library.

          Get and set methods are added to return the new type of protocols
          hooks.

          Modified the service_context_list () to add DiffServ policy specific
          service context entry, just like how the method adds RTCORBA policy
          specific service context entry.

Fri Feb 16 16:50:00 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/tao.mpc:

          Added the new type of protocols hooks files for compilation.

        * tao/DiffServPolicy.mpc:

          Added a mpc file for compiling the DiffServ library.

Fri Feb 16 16:45:30 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Network_Priority_Protocols_Hooks.cpp:

          Added a new type of protocols hook, that is used by the ORB core
          to add in code to do DiffServ policy specific processing. If an
          application uses the DiffServ library, then the library provides
          the specialized hook that needs to be used for adding DiffServ
          codepoints to requests/replies.

        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:

          The default implementations of the above mentioned new type
          of protocols hooks. This implementation is used, in case the
          application does not use the DiffServ library.

Fri Feb 16 16:43:10 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/orbconf.h:

          Added new TAO_Cached_Policy_Type definitions for the
          newly added DiffServ policies.

        * tao/IOP_IOR.pidl:

          Added a new service context ServiceId for the DiffServ policy
          support.

Fri Feb 16 16:35:43 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy:

          Checked in TAO support to specify client-side and server-side
          policies to add DiffServ codepoints to requests and replies. This
          support is different from the current RTCORBA support for adding
          DiffServ codepoints, where there is a one-to-one mapping between
          the RTCORBA thread priorities and the DiffServ codepoints that
          are added to the IP packets. This support defines policies on the
          client as well as the server side, to specify the DiffServ codepoints
          that need to be added to the requests/replies. And the policy
          can be overridden at the ORB, THREAD, and the OBJECT levels.

Thu Feb 15 15:22:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_ORB.h:
        * tao/RTPortableServer/RT_Acceptor_Filters.cpp:
        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_POA.inl:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.h:
          Code layout changes and cleanup now we zapped the emulated exception
          macros

Thu Feb 15 13:23:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Base_Transport_Property.h:
        * tao/ORB.cpp:
        * tao/PI/ClientRequestDetails.h:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ClientRequestInfo.h:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:
        * tao/PI/Interceptor_List_T.cpp:
        * tao/PI/Interceptor_List_T.h:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.h:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PI/ORBInitInfo.h:
        * tao/PI/PI_ORBInitializer.h:
        * tao/PI/PI_PolicyFactory.h:
        * tao/PI/PICurrent.cpp:
        * tao/PI/PICurrent.h:
        * tao/PI/PICurrent_Impl.h:
        * tao/PI/PICurrent_Loader.cpp:
        * tao/PI/PICurrent_Loader.h:
        * tao/PI/PolicyFactory_Registry.cpp:
        * tao/PI/PolicyFactory_Registry.h:
        * tao/PI/ProcessingModePolicy.h:
        * tao/PI/RequestInfo_Util.cpp:
        * tao/PI/RequestInfo_Util.h:
        * tao/PortableServer/DII_Arguments_Converter.h:
          Layout changes

        * tao/Asynch_Reply_Dispatcher_Base.h
        * tao/Asynch_Reply_Dispatcher_Base.inl
        * tao/Utils/Implicit_Deactivator.cpp:
        * tao/Utils/Implicit_Deactivator.h:
        * tao/Utils/ORB_Destroyer.cpp:
        * tao/Utils/ORB_Destroyer.h:
        * tao/Utils/PolicyList_Destroyer.cpp:
        * tao/Utils/PolicyList_Destroyer.h:
        * tao/Utils/Servant_Var.h:
        * tao/Utils/Servant_Var.inl:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Messaging/AMH_Response_Handler.h:
          Use empty throw()

Thu Feb 15 13:09:42 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/CSD_Strategy/ThreadPool3/CSD_Test_ThreadPool3.mpc:
        * examples/CSD_Strategy/ThreadPool6/CSD_Test_ThreadPool6.mpc:
        * examples/Simple/bank/bank.mpc:
        * examples/ior_corbaloc/ior_corbaloc.mpc:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc:
        * orbsvcs/tests/Bug_2615_Regression/Bug_2615_Regression.mpc:
        * orbsvcs/tests/Bug_2709_Regression/Bug_2709_Regression.mpc:
        * orbsvcs/tests/Notify/Discarding/Discarding.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Seq_Multi_ETCL_Filter.mpc:
        * performance-tests/Callback/Callback.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * performance-tests/Pluggable/Pluggable.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * tests/ICMG_Any_Bug/Hello.mpc:
        * tests/OctetSeq/OctetSeq.mpc:

          Re-arranged the generated source files so that they are at the
          beginning (like MPC would do if it were automatically generating
          the list of source files).  This is required for template
          instantiation to work properly for Visual Age 6.0.

        * tests/Bug_1676_Regression/client.cpp:
        * tests/MT_BiDir/client.cpp:

          Changed "catched" to "caught".

Thu Feb 15 07:46:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2560_Regression/server.cpp:
          Added missing include

Wed Feb 14 19:20:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2809_Regression/*:
          New regression test for bug 2809, thanks to Martin Corino
          for creating the regression

Wed Feb 14 15:19:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/client.cpp:
        * orbsvcs/tests/Bug_2615_Regression/client.cpp:
        * orbsvcs/tests/Bug_2709_Regression/client.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:

          Include tao/PI/PI.h to ensure PI library is actually linked into
          the executable when statically linking on MacOS X Panther.

Wed Feb 14 11:18:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_8_and_10/client.cpp:
          Layout changes

        * examples/Advanced/ch_8_and_10/server.cpp:
          Removed workaround for bug 2611, with the recent changes to the
          string sequences this is not needed anymore

Wed Feb 14 10:04:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2800_Regression/*:
          Extended this test so that it runs automatically and does a
          clean shutdown

Tue Feb 13 19:49:59 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * TAO_IDL/be/be_global.cpp:
          Added -Gdcps to the usage output

Tue Feb 13 19:50:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
          Integrated regression of bug 2804, thanks to Tommy Person
          <tpe at ida dot liu dot se> for creating the test. No fix
          yet for this problem.

Tue Feb 13 19:44:49 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.cpp:

          Removing a stray ';'

Tue Feb 13 14:21:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/simple/CodeSets_simple.mpc:
        * tests/Explicit_Event_Loop/Explicit_Event_Loop.mpc:
        * tests/Exposed_Policies/Exposed_Policies.mpc:
        * tests/Faults/Faults.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/Forwarding/Forwarding.mpc:
        * tests/InterOp-Naming/InterOp-Naming.mpc:
        * tests/IPV6/IPV6_Hello.mpc:
        * tests/Leader_Followers/Leader_Followers.mpc:
        * tests/LongUpcalls/LongUpcalls.mpc:
        * tests/MProfile/MProfile.mpc:
        * tests/MProfile_Connection_Timeout/MProfile_Connection_Timeout.mpc:
        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc:
        * tests/MT_Client/MT_Client.mpc:
        * tests/MT_Server/MT_Server.mpc:
        * tests/MT_Timeout/MT_Timeout.mpc:
        * tests/Multiple/Multiple.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
        * tests/Muxed_GIOP_Versions/Muxed_GIOP_Versions.mpc:
        * tests/Muxing/Muxing.mpc:
        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/Nested_Event_Loop/Nested_Event_Loop.mpc:
        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
        * tests/No_Server_MT_Connect_Test/No_Server_Connect_Test.mpc:
        * tests/Objref_Sequence_Test/Objref_Sequence_Test.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Factory/OBV_Factory.mpc:
        * tests/OBV/Forward/OBV_Forward.mpc:
        * tests/OBV/TC_Alignment/OBV_TC_Alignment.mpc:
        * tests/OBV/Truncatable/OBV_Truncatable.mpc:
        * tests/OBV/ValueBox/valuebox.mpc:
        * tests/Ondemand_Write/Ondemand_Write.mpc:
        * tests/Oneway_Buffering/Oneway_Buffering.mpc:
        * tests/Oneways_Invoking_Twoways/Oneways_Invoking_Twoways.mpc:
        * tests/Parallel_Connect_Strategy/Parallel_Connect_Strategy.mpc:
        * tests/POA/EndpointPolicy/EndpointPolicy.mpc:
        * tests/Portable_Interceptors/Benchmark/PI_Benchmark.mpc:
        * tests/Portable_Interceptors/Bug_1559/Bug_1559.mpc:
        * tests/Portable_Interceptors/Bug_2510_Regression/Bug_2510_Regression.mpc:
        * tests/Portable_Interceptors/Dynamic/PI_Dynamic.mpc:
        * tests/Portable_Interceptors/ForwardRequest/PI_ForwardRequest.mpc:
        * tests/Portable_Interceptors/IORInterceptor/PI_IORInterceptor.mpc:
        * tests/Portable_Interceptors/PICurrent/PI_PICurrent.mpc:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/PI_Request_Interceptor_Flow.mpc:
        * tests/Portable_Interceptors/Service_Context_Manipulation/PI_Svc_Context_Manip.mpc:
        * tests/Reliable_Oneways/Reliable_Oneways.mpc:
        * tests/RTCORBA/Banded_Connections/RTCORBA_Banded_Conn.mpc:
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc:
        * tests/RTCORBA/Client_Protocol/RTCORBA_Client_Protocol.mpc:
        * tests/RTCORBA/Dynamic_Thread_Pool/RT_Dynamic_Thread_Pool.mpc:
        * tests/RTCORBA/Explicit_Binding/RTCORBA_Explicit_Binding.mpc:
        * tests/RTCORBA/Linear_Priority/RTCORBA_Linear_Priority.mpc:
        * tests/RTCORBA/MT_Client_Protocol_Priority/RTCORBA_MT_Client_Proto_Prio.mpc:
        * tests/RTCORBA/Persistent_IOR/RTCORBA_Persistent_IOR.mpc:
        * tests/RTCORBA/Policy_Combinations/RTCORBA_Policy_Combinations.mpc:
        * tests/RTCORBA/Priority_Inversion_With_Bands/Priority_Inversion_With_Bands.mpc:
        * tests/RTCORBA/Private_Connection/RTCORBA_Private_Connection.mpc:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/PaE_Selection.mpc:
        * tests/RTCORBA/Server_Declared/RTCORBA_Server_Declared.mpc:
        * tests/RTCORBA/Server_Protocol/RTCORBA_Server_Protocol.mpc:
        * tests/RTCORBA/Thread_Pool/RTCORBA_Thread_Pool.mpc:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor.mpc:
        * tests/Server_Connection_Purging/Server_Connection_Purging.mpc:
        * tests/Server_Leaks/Server_Leaks.mpc:
        * tests/Single_Read/Single_Read.mpc:
        * tests/Smart_Proxies/Benchmark/SP_Benchmark.mpc:
        * tests/Smart_Proxies/dtor/dtor.mpc:
        * tests/Smart_Proxies/On_Demand/SP_On_Demand.mpc:
        * tests/Smart_Proxies/Policy/SP_Policy.mpc:
        * tests/Smart_Proxies/Smart_Proxies.mpc:
        * tests/Stack_Recursion/Stack_Recursion.mpc:
        * tests/Strategies/Strategies.mpc:
        * tests/Timed_Buffered_Oneways/Timed_Buffered_Oneways.mpc:
        * tests/Two_Objects/Two_Objects.mpc:
        * tests/Typedef_String_Array/typedef_string_array.mpc:
          Simplified these mpc files, these all have a custom idl project
          so the client and server can both have an after on this idl
          project, the client doesn't need an after on the server

Tue Feb 13 14:09:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.cpp:
          Fixed compile error

Tue Feb 13 14:08:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/ami_test_i.cpp:
          Fixed warning in gcc builds

Tue Feb 13 12:59:12 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Portable_Interceptors/AdvSlotExt/AdvSlotExt.mpc:

          Re-arranged the generated source files so that they are at the
          beginning (like MPC would do if it were automatically generating
          the list of source files).  This is required for template
          instantiation to work properly for Visual Age 6.0.

        * tests/Server_Connection_Purging/client.cpp:

          Decreased the number of connections from 80 to 55 to support
          platforms with limited resources.

Tue Feb 13 08:10:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/AMI.mpc:
        * tests/AMI/ami_test_i.cpp:
        * tests/AMI/ami_test_i.h:
        * tests/AMI/client.cpp:
        * tests/AMI/run_test.pl:
        * tests/AMI/simple_client.cpp:
          Extended this test to detect argument corruption when using AMI
          collocated. This bug is not fixed, just adding a new regression

Tue Feb 13 07:41:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Metrics.idl
        * orbsvcs/orbsvcs/Metrics/*:
          Removed, wasn't maintained for years

Mon Feb 12 20:15:22 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:

          Trying to fix a compiler warning for VxWorks5.5.1_x86_GCC2.96_Exceptions
          build on DOC group scoreboard.

Mon Feb 12 19:51:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.cpp:
        * orbsvcs/orbsvcs/AV/QoS_UDP.h:
        * orbsvcs/orbsvcs/Channel_Clients_T.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.h:
        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
        * orbsvcs/orbsvcs/IFRService/concrete_classes.h:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Contained_i.h:
        * orbsvcs/orbsvcs/IFRService/Container_i.h:
        * orbsvcs/orbsvcs/IFRService/EmitsDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FactoryDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FinderDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FixedDef_i.h:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IDLType_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.h:
        * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/NativeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Options.h:
        * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/PublishesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/RecursDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/StringDef_i.h:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.h:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.h:
        * orbsvcs/orbsvcs/IFRService/WstringDef_i.h:
        * orbsvcs/orbsvcs/IOR_Multicast.h:
        * orbsvcs/orbsvcs/Naming/Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Storable.cpp:
        * orbsvcs/orbsvcs/Naming/Storable.inl:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.h:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.h:
        * orbsvcs/orbsvcs/Sched/DynSched.inl:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.inl:
        * orbsvcs/orbsvcs/Sched/Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.h:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.h:
        * orbsvcs/orbsvcs/Scheduler_Utilities.h:
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.h:
          Converted to doxygen style

        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.h:
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.inl:
          Use prefix increment/decrement

        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.cpp:
          Zapped environment macro code

Mon Feb 12 15:32:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Fixed the TAO 1.5.7 version number.

        * examples/Advanced/ch_3/Advanced_ch_3.mpc:
        * examples/Buffered_AMI/Buffered_AMI.mpc:
        * examples/Callback_Quoter/Callback_Quoter.mpc:
        * examples/Content_Server/AMI_Iterator/AMI_Iterator.mpc:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_example.mpc:
        * examples/OBV/Typed_Events/Typed_Events.mpc:
        * examples/Quoter/Quoter.mpc:
        * examples/Simple/bank/bank.mpc:
        * examples/Simple/chat/chat.mpc:
        * examples/Simple/grid/grid.mpc:
        * examples/ior_corbaloc/ior_corbaloc.mpc:
        * orbsvcs/examples/Security/Send_File/Security_Send_File.mpc:
        * orbsvcs/tests/Bug_2285_Regression/Bug_2285_Regression.mpc:
        * orbsvcs/tests/Bug_2316_Regression/Bug_2316_Regression.mpc:
        * orbsvcs/tests/Bug_2615_Regression/Bug_2615_Regression.mpc:
        * orbsvcs/tests/HTIOP/AMI/HTIOP_AMI.mpc:
        * orbsvcs/tests/HTIOP/Hello/HTIOP_Hello.mpc:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Bug_2604.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Application_Controlled.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Infrastructure_Controlled.mpc:
        * orbsvcs/tests/Notify/Discarding/Discarding.mpc:
        * orbsvcs/tests/Notify/MT_Dispatching/MT_Dispatching.mpc:
        * orbsvcs/tests/Notify/Ordering/Ordering.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Seq_Multi_ETCL_Filter.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Seq_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Filter/Struct_Filter.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
        * performance-tests/Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/DII/DII.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * performance-tests/Pluggable/Pluggable.mpc:
        * performance-tests/Protocols/Protocols.mpc:
        * performance-tests/RTCorba/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Sequence_Latency/DII/DII.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Thread_Per_Conn.mpc:
        * performance-tests/Sequence_Latency/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Throughput/Throughput.mpc:
        * tests/BiDirectional/BiDirectional.mpc:
        * tests/BiDirectional_DelayedUpcall/BiDir_DelayedUpcall.mpc:
        * tests/BiDirectional_NestedUpcall/BiDir_NestedUpcall.mpc:
        * tests/Big_Oneways/Big_Oneways.mpc:
        * tests/Big_Twoways/Big_Twoways.mpc:
        * tests/Bug_1020_Regression/Bug_1020_Regression.mpc:
        * tests/Bug_1270_Regression/Bug_1270_Regression.mpc:
        * tests/Bug_1361_Regression/Bug_1361_Regression.mpc:
        * tests/Bug_2188_Regression/broken.mpc:
        * tests/Bug_2417_Regression/Bug_2417_Regression.mpc:
        * tests/Client_Leaks/Client_Leaks.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/Hang_Shutdown/Hang.mpc:
        * tests/ICMG_Any_Bug/Hello.mpc:
        * tests/NestedUpcall/Simple/Simple.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Simple/OBV_Simple.mpc:
        * tests/OctetSeq/OctetSeq.mpc:
        * tests/Oneway_Timeouts/test.mpc:
        * tests/POA/Persistent_ID/Persistent_ID.mpc:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Portable_Interceptors/AMI/PI_AMI.mpc:
        * tests/Portable_Interceptors/AdvSlot/AdvSlot.mpc:
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc:
        * tests/Timeout/Timeout.mpc:
        * tests/TransportCurrent/IIOP/IIOP.mpc:
        * tests/Two_Objects/Two_Objects.mpc:
        * tests/UNKNOWN_Exception/UNKNOWN_Exception.mpc:

          Re-arranged the generated source files so that they are at the
          beginning (like MPC would do if it were automatically generating
          the list of source files).  This is required for template
          instantiation to work properly for Visual Age 6.0.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:

          Added include files to get AnyTypeCode definitions.

        * tao/Fixed_Array_Argument_T.inl:

          Fixed a typo of a type name in a Visual Age 6.0 specific section
          of a C-style cast.

Mon Feb 12 14:48:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Impl.cpp
        * tao/AnyTypeCode/append.cpp
        * tao/AnyTypeCode/skip.cpp
        * tao/Codeset/Codeset_Descriptor.cpp
        * tao/Codeset/Codeset_Translator_Factory.cpp
        * tao/Codeset/Codeset_Translator_Factory_T.cpp
        * tao/Codeset/UTF16_BOM_Factory.cpp
        * tao/Codeset/UTF16_BOM_Factory.h
        * tao/Codeset/UTF8_Latin1_Translator.cpp
        * tao/Codeset_Translator_Base.cpp
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h
        * tao/DynamicInterface/Dynamic_Implementation.h
        * tao/DynamicInterface/ExceptionList.h
        * tao/DynamicInterface/Server_Request.h
        * tao/IORManipulation/IORManip_Loader.h
        * tao/IORManipulation/IORManipulation.h
        * tao/RTCORBA/Linear_Network_Priority_Mapping.h
        * tao/RTCORBA/Linear_Priority_Mapping.h
        * tao/RTCORBA/Multi_Priority_Mapping.h
        * tao/RTPortableServer/RTPortableServer.cpp
        * tao/Strategies/UIOP_Factory.h
        * tao/Strategies/UIOP_Lite_Factory.h
        * tao/TypeCodeFactory/TypeCodeFactory_Loader.cpp
          Converted to doxygen style

Mon Feb 12 13:42:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * interop-tests/*.{h,cpp}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

Mon Feb 12 12:22:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/*.{h,cpp,inl}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

Mon Feb 12 11:40:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/*.{h,cpp,inl}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

        * tests/*.mpc:
          Simplified several mpc files

Mon Feb 12 10:53:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/*.{h,cpp,inl}:

        * MPC/config/naming_serv.mpb:
        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:
          Removed the avoids ace_for_tao, the naming service will build
          fine in this configuration

Mon Feb 12 07:27:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Array_Sequence_T.h:
        * tao/Unbounded_Array_Sequence_T.h:
          Removed check for nill sequence, is done at a different place in TAO
          already and resolves the compile errors on the scoreboard

        * orbsvcs/orbsvcs/*.{h,cpp,inl}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

Sun Feb 11 18:58:14 2007  Martin Corino  <mcorino@remedy.nl>

        * tao/DynamicAny/DynUnion_i.cpp:

          (Hopefully) Last change to handle inconsistency between statically declared (IDL
          compiler) union typecodes and dynamically declared typecodes where
          the discriminator type is an enum.

Sun Feb 11 12:38:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/*.{h,cpp,inl}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

Fri Feb  9 16:45:45 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/portableserver.mpb:

          The portableserver base project now inherits from core_anytypecode
          instead of anytypecode.  This is to prevent the situation where
          inheriting from from portablserver causes changes to the IDL compiler
          options, specifically inclusion of support for Anys and Typecodes.
          User projects that inherit from portableserver need to also inherit
          from anytypecode to get the options that generate Anys and Typecodes
          passed to the IDL compiler.  The assumption is that a significant
          number of projects inhert from portableserver yet have no interest in
          the added footprint of Any and Typecode support in generated code.

Thu Feb  8 19:21:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/compiler.html:
          Removed documentation for -Ge 2, that has been removed

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/arglist.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:
        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_visitor_operation/operation.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_init_arglist_ch.h:
          Removed generation of ACE_THROW_SPEC

Thu Feb  8 18:42:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Connection_Handler.h:
        * tao/Strategies/COIOP_Connection_Handler.h:
        * tao/Strategies/DIOP_Connection_Handler.h:
        * tao/Strategies/SCIOP_Connection_Handler.h:
        * tao/Strategies/UIOP_Connection_Handler.h:
          Removed not needed forward declaration

        * tao/IIOP_Transport.h:
          Layout change

Thu Feb  8 18:00:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.h:
        * tao/IIOP_Connection_Handler.h:
          Layout changes

        * orbsvcs/tests/Bug_2800_Regression/*:
          New regression test for bugzilla bug 2800 created by
          Martin Corino

        * orbsvcs/tests/COIOP_Naming_Test/*:
          New test using COIOP and the naming service together

        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
          Initialise pointer with 0

Thu Feb  8 16:26:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/ExceptionA.h
        * tao/AnyTypeCode/TypeCode.cpp
        * tao/Asynch_Reply_Dispatcher_Base.cpp
        * tao/DynamicInterface/Context.h
        * tao/DynamicInterface/DII_Arguments.cpp
        * tao/DynamicInterface/DII_Invocation.cpp
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp
        * tao/DynamicInterface/DII_Invocation_Adapter.h
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp
        * tao/DynamicInterface/Dynamic_Adapter_Impl.cpp
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h
        * tao/DynamicInterface/Dynamic_Implementation.cpp
        * tao/DynamicInterface/Dynamic_Implementation.h
        * tao/DynamicInterface/ExceptionList.h
        * tao/DynamicInterface/Server_Request.cpp
        * tao/DynamicInterface/Server_Request.h
        * tao/DynamicInterface/Unknown_User_Exception.cpp
        * tao/DynamicInterface/Unknown_User_Exception.h
        * tao/Exception.h
        * tao/GIOP_Message_Base.cpp
        * tao/GIOP_Message_Lite.cpp
        * tao/ImR_Client/ImR_Client.cpp
        * tao/ImR_Client/ServerObject_i.h
        * tao/Invocation_Adapter.cpp
        * tao/Messaging/Asynch_Invocation.cpp
        * tao/Messaging/Asynch_Invocation_Adapter.cpp
        * tao/Messaging/Asynch_Invocation_Adapter.h
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Muxed_TMS.cpp
        * tao/ObjRefTemplate/ORT_Adapter_Impl.cpp
        * tao/ORB.cpp
        * tao/PolicyC.cpp
        * tao/RTCORBA/RTCORBAC.cpp
        * tao/SystemException.cpp
        * tao/Tagged_Components.cpp
        * tao/Tagged_Profile.cpp
        * tao/WrongTransactionC.cpp
          Layout changes

Wed Feb  7 23:12:03 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.h:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:

          Changed to use Any_Impl instead of Any to fix memory crash
          problem since Any_Impl is refcounted. Refer to Bug 2798 or
          RT 9552 for more info.

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:

          Repercussion changes are required here.

        * orbsvcs/examples/Notify/Filter/Filter.cpp:
        * orbsvcs/examples/Notify/Filter/Notify_Filter.mpc:

          Added a new case to test IN operator for the ETCL.

        * orbsvcs/examples/Notify/Subscribe/Subscribe.h:
        * orbsvcs/examples/Notify/Subscribe/Subscribe.cpp:

          Fixed an incorrect initialization of a sequence object.  Added
          code to detect consumer receiving not subscribed event.  Thanks
          to Olli Savia <ops at iki dot fi> for reporting this problem and
          helping track down the problem.

Wed Feb  7 20:52:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
          Throw a cannotproceed exception on any system exception, not just
          timeout exceptions, fixes bugzilla bug 2800

        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.h:
        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp
        * orbsvcs/tests/Property/client.cpp
        * orbsvcs/tests/Redundant_Naming/client.cpp
        * orbsvcs/tests/RTCosScheduling/client.cpp
        * orbsvcs/tests/RTCosScheduling/server.cpp
          Layout change

Wed Feb  7 20:46:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Exception_Test/Client_Task.cpp:
          Also test the minor code of the exception caught

        * tao/POA/Default_Servant/Default_Servant.cpp:
          Layout change

Wed Feb  7 20:16:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Alias_TypeCode.cpp:
        * tao/AnyTypeCode/Alias_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Alias_TypeCode_Static.h:
        * tao/AnyTypeCode/Any.cpp:
        * tao/Collocated_Invocation.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter_Factory.cpp:
        * tao/CSD_Framework/CSD_POA.cpp:
        * tao/CSD_Framework/CSD_POA.h:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Proxy.inl:
        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:
        * tao/EndpointPolicy/IIOPEndpointValue_i.h:
        * tao/ORB.cpp:
        * tao/Tagged_Components.cpp:
        * tao/Wait_On_Leader_Follower.h:
          Layout changes

Wed Feb  7 20:08:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TransportCurrent/lib/Client_ORBInitializer.cpp:
        * tao/TransportCurrent/lib/Client_ORBInitializer.h:
        * tao/TransportCurrent/lib/Client_Request_Interceptor.cpp:
        * tao/TransportCurrent/lib/Client_Request_Interceptor.h:
        * tao/TransportCurrent/lib/Current_Test_Impl.h:
        * tao/TransportCurrent/lib/Server_ORBInitializer.cpp:
        * tao/TransportCurrent/lib/Server_ORBInitializer.h:
        * tao/TransportCurrent/lib/Server_Request_Interceptor.cpp:
        * tao/TransportCurrent/lib/Server_Request_Interceptor.h:
          Use ACE_THROW_SPEC then plain throw

Wed Feb  7 15:31:20 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * tao/AnyTypeCode/Any_SystemException.cpp:
          This fixes bug 2774

Tue Feb  6 20:14:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/ORB.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Layout change

        * tao/String_Const_Sequence_Element_T.h:
          Const improvements to improve ownership

Tue Feb  6 19:00:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/String_Alloc.cpp:
          Layout changes

        * tao/String_Sequence_Element_T.h:
          Added missing out/inout/_retn, this fixes bugzilla bug 2795,
          thanks to Frank Pilhofer <fp at mc dot com> for reporting this

        * tests/Bug_2792_Regression/client.cpp:
          Small improvement

        * tests/Bug_2795_Regression/Bug_2795_Regression.mpc:
        * tests/Bug_2795_Regression/client.cpp:
        * tests/Bug_2795_Regression/run_test.pl:
          New test for bug 2795

        * tests/Collocation_Exception_Test/Server_Task.cpp:
          Initialise pointer with 0

        * tests/ORB_Local_Config/Bug_2612/DllOrb.cpp:
          No need to pass 0 orb name

        * tests/UNKNOWN_Exception/server.cpp:
          Layout change

Tue Feb  6 16:33:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocated_Invocation.cpp:
          Added a check that we don't rethrow an user exception that is
          not in the signature list, if that is the case we throw
          an unknown. Fixes bugzilla 2064

        * tao/operation_details.cpp
        * tao/operation_details.h
        * tao/operation_details.inl
          Added support to check whether an exception is in the list of
          exceptions for this operation

        * tao/Invocation_Base.cpp:
          Some more changes related to removing ACE_THROW_SPEC

        * tao/DynamicInterface/DII_Arguments.cpp
        * tao/DynamicInterface/DII_Arguments.inl
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp
        * tao/Exception.h
        * tao/GIOP_Message_Generator_Parser_10.cpp
        * tao/GIOP_Message_State.cpp
        * tao/GIOP_Message_State.inl
        * tao/GIOP_Message_Version.inl
        * tao/Invocation_Endpoint_Selectors.cpp
        * tao/Invocation_Endpoint_Selectors.h
        * tao/IOR_Parser.h
        * tao/IORInterceptor_Adapter.h
        * tao/IORInterceptor_Adapter_Factory.h
        * tao/LocateRequest_Invocation.cpp
        * tao/LocateRequest_Invocation_Adapter.cpp
        * tao/MCAST_Parser.cpp
        * tao/Object.cpp
        * tao/Object_Ref_Table.cpp
        * tao/Object_Ref_Table.inl
        * tao/Object_T.cpp
        * tao/ObjectKey_Table.cpp
        * tao/RTScheduling/Request_Interceptor.cpp
        * tao/Strategies/SCIOP_Endpoint.cpp
        * tao/Strategies/SCIOP_Factory.cpp
        * tao/Strategies/SCIOP_Transport.cpp
        * tao/Strategies/SHMIOP_Acceptor.cpp
        * tao/Strategies/SHMIOP_Transport.cpp
        * tao/Strategies/SHMIOP_Transport.h
        * tao/Strategies/UIOP_Transport.cpp
        * tao/TransportCurrent/Current_ORBInitializer.h
        * tao/TransportCurrent/Current_ORBInitializer_Base.h
        * tao/Valuetype/AbstractBase.cpp
        * tao/Valuetype/ValueBase.cpp
        * tao/Valuetype/ValueFactory.cpp
        * tao/Valuetype/ValueFactory_Map.cpp
          Layout changes

Mon Feb  5 23:30:42 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:

          Removed the check which lets the class definition for
          an anonymous sequence be generated only once. If an
          anonymous sequence is shared as the base type of more
          than one typedef (as it is in a comma separated list
          of typedef declarations), it will need to be generated
          once for each typedef, each generated class having the
          name of the typedef identifier. In the case of two or
          more anonymous sequence members of the same base type,
          the generated #ifdef guard for the class will be the
          same in each case, and the C++ preprocessor will pass
          only one.

        * TAO_IDL/ast/ast_decl.cpp(set_name):

          When the scoped name is reset from outside the node,
          the char* members flat_name, full_name and repoID
          are now deleted, zeroed, and eventually recomputed
          (the last happens on demand), similarly to what is
          already done for the other members local_name and
          original_local_name.

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:

          Added check for the context state before generating a
          class declaration for an anonymous sequence member. For
          valuetypes, this should be done only once, even though
          the scope is visited twice more in the corresponding
          OBV_ class, and we can no longer depend on the previous
          check for anonymous sequences to avoid multiple
          generation (see the first item in this entry).

Mon Feb  5 20:46:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbconf.h:
          Make sure ACE_THROW_SPEC expands to nothing

        * tao/GIOP_Message_Base.cpp:
          Layout change

Mon Feb  5 20:16:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocated_Invocation.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/Invocation_Base.cpp:
        * tao/Invocation_Base.h:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/ORB.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/TAO_Singleton_Manager.cpp:
        * tao/TAO_Singleton_Manager.h:
          Committed on behalf of Ossama Othman. Added needed code to
          work correctly in case of C++ exceptions without ACE_THROW_SPEC
          spefication. To make sure this all works we are changing ACE
          to expand ACE_THROW_SPEC to nothing, when the scoreboard shows
          no problems we will zap ACE_THROW_SPEC from all source code.

Mon Feb  5 06:20:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
          Layout changes

Sun Feb  4 19:57:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Basic_String_Sequence_T.h:
        * tao/String_Const_Sequence_Element_T.h:
        * tao/String_Sequence_Element_T.h:
        * tao/Unbounded_Basic_String_Sequence_T.h:
          Fixed bug 2792, thanks to Frank Pilhofer <fp at mc dot com>
          for reporting this

        * tao/Bug_2792_Regression/Bug_2792_Regression.mpc:
        * tao/Bug_2792_Regression/Bug_2792_Regression/client.cpp:
        * tao/Bug_2792_Regression/Bug_2792_Regression/run_test.pl:
          New regression test

Sun Feb  4 18:51:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.cpp
        * tao/Object_T.cpp
        * tao/Object_T.h
        * tao/PortableServer/LifespanStrategyFactoryImpl.cpp
        * tao/PortableServer/LifespanStrategyPersistent.cpp
        * tao/PortableServer/LifespanStrategyPersistentFactoryImpl.cpp
        * tao/PortableServer/LifespanStrategyTransientFactoryImpl.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/ORT_Adapter.h
        * tao/PortableServer/POA_Current.cpp
        * tao/PortableServer/POA_Current_Factory.h
        * tao/PortableServer/POA_Current_Impl.cpp
        * tao/PortableServer/POA_Current_Impl.h
        * tao/PortableServer/POA_Guard.cpp
        * tao/PortableServer/POA_Guard.h
        * tao/PortableServer/POA_Policy_Set.cpp
        * tao/PortableServer/POA_Policy_Set.inl
        * tao/PortableServer/POAManager.cpp
        * tao/PortableServer/POAManager.h
        * tao/PortableServer/POAManager.inl
        * tao/PortableServer/POAManagerFactory.cpp
        * tao/PortableServer/POAManagerFactory.h
        * tao/PortableServer/Regular_POA.cpp
        * tao/PortableServer/RequestProcessingStrategy.cpp
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp
        * tao/PortableServer/RequestProcessingStrategyServantLocator.h
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.cpp
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.h
        * tao/PortableServer/RequestProcessingStrategyServantManager.cpp
        * tao/PortableServer/RequestProcessingStrategyServantManager.h
        * tao/PortableServer/Servant_Base.h
        * tao/PortableServer/Servant_Dispatcher.h
        * tao/PortableServer/Servant_Upcall.cpp
        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.cpp
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp
        * tao/Strategies/advanced_resource.cpp
        * tao/Strategies/COIOP_Acceptor.cpp
        * tao/Strategies/COIOP_Connection_Handler.cpp
        * tao/Strategies/DIOP_Endpoint.cpp
        * tao/Strategies/SCIOP_Connector.cpp
        * tao/Strategies/UIOP_Connection_Handler.cpp
        * tao/TkResource/TkResource_Loader.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.h
        * tao/TypeCodeFactory/Recursive_TypeCode.inl
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp
        * tao/TypeCodeFactory/TypeCodeFactory_Loader.cpp
        * tao/ULongLongSeq.pidl
        * tao/ULongSeq.pidl
          Layout and const fixes

Fri Feb  2 18:38:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
          Fixed problem introduced when removing ACE_THROW_RETURN

Fri Feb  2 16:16:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Content_Server/AMI_Observer/Push_Iterator_Factory_i.cpp:
        * examples/CSD_Strategy/ThreadPool2/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool2/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool4/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool6/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool6/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool/ServerApp.cpp:
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * examples/Load_Balancing/Load_Balancer_i.cpp:
        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp:
        * examples/Logging/Logger_i.cpp:
        * examples/Persistent_Grid/Grid_i.cpp:
        * examples/POA/Default_Servant/File_i.cpp:
        * examples/POA/DSI/Database_i.cpp:
        * examples/POA/Forwarding/Servant_Activator.cpp:
        * examples/POA/Loader/Servant_Activator.cpp:
        * examples/POA/Loader/Servant_Locator.cpp:
        * examples/POA/On_Demand_Activation/Servant_Activator.cpp:
        * examples/POA/On_Demand_Activation/Servant_Locator.cpp:
        * examples/POA/On_Demand_Loading/Servant_Activator.cpp:
        * examples/POA/On_Demand_Loading/Servant_Locator.cpp:
        * examples/Quoter/Factory_Finder_i.cpp:
        * examples/Quoter/Generic_Factory_i.cpp:
        * examples/Quoter/Quoter_i.cpp:
        * examples/Simple/bank/AccountManager_i.cpp:
        * examples/Simple/echo/Echo_i.cpp:
        * examples/Simple/grid/Grid_i.cpp:
        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory_i.cpp:
        * orbsvcs/examples/CosEC/Factory/FactoryClient.cpp:
        * orbsvcs/examples/ImR/Combined_Service/dynserver.cpp:
        * orbsvcs/examples/Log/Event/Event_Consumer.cpp:
        * orbsvcs/examples/Log/Event/Event_Supplier.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Consumer.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Supplier.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Consumer.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp:
        * orbsvcs/ImplRepo_Service/Activator_Loader.cpp:
        * orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Loader.cpp:
        * orbsvcs/LifeCycle_Service/Criteria_Evaluator.cpp:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service_i.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_MemberLocator.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_RoundRobin.cpp:
        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/LogActivator.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.inl
        * orbsvcs/orbsvcs/Naming/Bindings_Iterator_T.cpp:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Client.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Client.h
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Server.h
        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Notify/Builder.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.cpp:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Security/Security_Current.cpp:
        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.cpp:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.cpp:
        * orbsvcs/orbsvcs/Security/SL3_SecurityManager.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ClientCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        * orbsvcs/tests/Concurrency/CC_command.cpp:
        * orbsvcs/tests/CosEvent/lib/Counting_Supplier.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/HTIOP/AMI/ami_test_i.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory.cpp:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.cpp:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.cpp:
        * performance-tests/CSD_Strategy/TestInf/AppHelper.cpp:
        * performance-tests/CSD_Strategy/TestInf/AppHelper.h
        * tao/Synch_Invocation.cpp:
        * tao/Synch_Queued_Message.cpp:
        * tao/SystemException.cpp:
        * tao/SystemException.h
        * tests/Abstract_Interface/test_i.cpp:
        * tests/AMI/ami_test_i.cpp:
        * tests/Bug_2234_Regression/server.cpp:
        * tests/Client_Leaks/Process_Factory.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/AppHelper.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/AppHelper.h
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op3.cpp:
        * tests/File_IO/File_i.cpp:
        * tests/MProfile_Forwarding/Servant_Locator.cpp:
        * tests/MT_BiDir/Sender_i.cpp:
        * tests/OctetSeq/test_i.cpp:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Portable_Interceptors/PolicyFactory/PolicyFactory.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
        * tests/Smart_Proxies/server.cpp:
        * utils/catior/catior.cpp:
          Layout changes and replaced ACE_THROW_RETURN with throw

Fri Feb  2 14:07:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Registry.cpp:
        * tao/AnyTypeCode/Alias_TypeCode.cpp:
        * tao/AnyTypeCode/Alias_TypeCode_Static.cpp:
        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/Enum_TypeCode.cpp:
        * tao/AnyTypeCode/Enum_TypeCode_Static.cpp:
        * tao/AnyTypeCode/NVList.cpp:
        * tao/AnyTypeCode/Objref_TypeCode.cpp:
        * tao/AnyTypeCode/Objref_TypeCode_Static.cpp:
        * tao/AnyTypeCode/skip.cpp:
        * tao/AnyTypeCode/Struct_TypeCode.cpp:
        * tao/AnyTypeCode/Struct_TypeCode_Static.cpp:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
        * tao/AnyTypeCode/Union_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Value_TypeCode.cpp:
        * tao/AnyTypeCode/Value_TypeCode_Static.cpp:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.cpp:
        * tao/Bounded_Array_Sequence_T.h
        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/CodecFactory/CodecFactory_impl.cpp:
        * tao/Codeset/Codeset_Manager_i.cpp:
        * tao/Connector_Registry.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State_Map.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.cpp:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny/DynAnyUtils_T.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynValue_i.cpp:
        * tao/DynamicAny/DynValueBox_i.cpp:
        * tao/DynamicAny/DynValueCommon_i.cpp:
        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/ExceptionList.cpp:
        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/IORInterceptor/IORInfo.cpp:
        * tao/IORManipulation/IORManipulation.cpp:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/LocalObject.cpp:
        * tao/LocateRequest_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/Messaging/Messaging_PolicyFactory.cpp:
        * tao/Object.cpp:
        * tao/Object_T.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.cpp:
        * tao/operation_details.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PI/PI_PolicyFactory.cpp:
        * tao/PI/PolicyFactory_Registry.cpp:
        * tao/PI/PolicyFactoryC.cpp:
        * tao/PI_Server/PortableServer_PolicyFactory.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA_Current.cpp:
        * tao/PortableServer/POAManagerFactory.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantManager.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/Var_Size_SArgument_T.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/Remote_Object_Proxy_Broker.cpp:
        * tao/RTCORBA/RT_Current.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_Mutex.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_PolicyFactory.cpp:
        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/Service_Callbacks.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Thread_Lane_Resources.cpp:
        * tao/Transport_Connector.cpp:
        * tao/TransportCurrent/IIOP_Current_Impl.cpp:
        * tao/TypeCodeFactory/Recursive_TypeCode.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tao/Unbounded_Array_Sequence_T.h
        * tao/Utils/RIR_Narrow.cpp:
        * tao/Valuetype/ValueBase.cpp:
          Layout changes and replaced ACE_THROW_RETURN with throw

Fri Feb  2 13:32:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/ORB_Core.h:
          Removed CORBA::ORB_init method that accepts a CORBA Environment
          argument, we don't support emulated exceptions anymore

        * tao/CORBA_methods.h:
        * tao/Objref_VarOut_T.cpp
        * tao/TypeCodeFactory_Adapter.h:
          Updated includes

        * examples/POA/Default_Servant/client.cpp:
        * examples/POA/Default_Servant/server.cpp:
        * examples/POA/DSI/server.cpp:
        * examples/POA/FindPOA/FindPOA.cpp:
        * examples/POA/Forwarding/client.cpp:
        * examples/POA/On_Demand_Activation/server.cpp:
        * examples/POA/RootPOA/RootPOA.cpp:
        * examples/POA/TIE/client.cpp:
        * examples/POA/TIE/server.cpp:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.cpp:
        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/ImplRepo/airplane_server_i.cpp:
        * orbsvcs/tests/ImplRepo/nestea_server_i.cpp:
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp:
        * orbsvcs/tests/tests_svc_loader/tests_svc_loader.cpp:
        * performance-tests/Latency/Collocation/Collocated_Test.cpp:
        * tests/Collocation/Collocation_Tester.cpp:
        * tests/File_IO/client.cpp:
        * tests/File_IO/server.cpp:
        * tests/Multiple_Inheritance/client.cpp:
        * tests/POA/Identity/Identity.cpp:
        * tests/Smart_Proxies/Collocation/Coll_Tester.cpp:
          No need anymore to pass an empty string as orbname

Fri Feb  2 13:10:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/orbsvcs/CosNaming.idl:
          Doxygen improvements

        * orbsvcs/orbsvcs/Event/EC_Null_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.cpp:
        * orbsvcs/orbsvcs/CosNaming.idl
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/server.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.cpp:
        * orbsvcs/tests/Event/Basic/Complex.cpp:
        * orbsvcs/tests/Event/Basic/Control.cpp:
        * orbsvcs/tests/Event/Basic/Observer.cpp:
        * orbsvcs/tests/Event/Basic/Disconnect.cpp:
        * orbsvcs/tests/Event/Basic/Wildcard.cpp:
        * orbsvcs/tests/Event/Basic/MT_Disconnect.cpp:
        * orbsvcs/tests/Event/Basic/Bitmask.cpp:
        * orbsvcs/tests/Event/Basic/Gateway.cpp:
        * orbsvcs/tests/Event/Basic/Negation.cpp:
        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.cpp:
        * orbsvcs/tests/Event/Basic/Random.cpp:
        * orbsvcs/tests/Event/Basic/Timeout.cpp:
        * orbsvcs/tests/Event/Performance/Latency.cpp:
        * orbsvcs/tests/Event/Performance/Latency_Server.cpp:
        * orbsvcs/tests/Event/lib/Driver.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/supplier.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/consumer.cpp:
        * orbsvcs/tests/Event/Mcast/Common/Gateway_EC.cpp:
        * orbsvcs/tests/Event/Mcast/Simple/supplier.cpp:
        * orbsvcs/tests/Event/Mcast/Simple/consumer.cpp:
        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp:
        * orbsvcs/tests/Event/UDP/sender.cpp:
        * orbsvcs/tests/Event/UDP/receiver.cpp:
        * orbsvcs/tests/ImplRepo/NameService/test.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
        * orbsvcs/tests/Bug_2248_Regression/server.cpp:
        * orbsvcs/tests/Bug_1395_Regression/client.cpp:
        * orbsvcs/tests/Bug_1395_Regression/server.cpp:
        * orbsvcs/tests/ior_corbaname/ior_corbaname_client_i.cpp:
        * orbsvcs/tests/ior_corbaname/server.cpp:
        * orbsvcs/tests/ior_corbaname/ior_corbaname_client_i.h
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/Miop/McastHello/client.cpp:
        * orbsvcs/tests/Miop/McastHello/server.cpp:
        * orbsvcs/tests/Security/Crash_Test/server.cpp:
        * orbsvcs/tests/Security/Crash_Test/client.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/server.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/client.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/server.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/client.cpp:
        * orbsvcs/tests/Security/BiDirectional/client.cpp:
        * orbsvcs/tests/Security/BiDirectional/server.cpp:
        * orbsvcs/tests/Security/Big_Request/server.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/server.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/client.cpp:
        * orbsvcs/tests/Security/Callback/server.cpp:
        * orbsvcs/tests/Security/Callback/client.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/HTIOP/Hello/client.cpp:
        * orbsvcs/tests/HTIOP/Hello/server.cpp:
        * orbsvcs/tests/HTIOP/AMI/client.cpp:
        * orbsvcs/tests/HTIOP/AMI/server.cpp:
        * orbsvcs/tests/HTIOP/AMI/simple_client.cpp:
        * orbsvcs/tests/HTIOP/BiDirectional/client.cpp:
        * orbsvcs/tests/HTIOP/BiDirectional/server.cpp:
        * orbsvcs/tests/CosEvent/Basic/Push_Event.cpp:
        * orbsvcs/tests/CosEvent/Basic/Random.cpp:
        * orbsvcs/tests/CosEvent/Basic/Disconnect.cpp:
        * orbsvcs/tests/CosEvent/Basic/MT_Disconnect.cpp:
        * orbsvcs/tests/CosEvent/Basic/Shutdown.cpp:
        * orbsvcs/tests/CosEvent/Basic/Pull_Push_Event.cpp:
        * orbsvcs/tests/Bug_2615_Regression/client.cpp:
        * orbsvcs/tests/Bug_2615_Regression/server.cpp:
        * orbsvcs/tests/Bug_2247_Regression/server.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client2.cpp:
        * orbsvcs/tests/Bug_2285_Regression/server.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client.cpp:
        * orbsvcs/tests/Bug_2285_Regression/server2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/client.cpp:
        * orbsvcs/tests/Bug_2287_Regression/server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/server.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/client.cpp:
        * orbsvcs/examples/Log/Event/Event_Supplier.cpp:
        * orbsvcs/examples/Log/Event/Event_Consumer.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Consumer.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Consumer.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Supplier.cpp:
        * orbsvcs/examples/Security/SecurityLevel1/client.cpp:
        * orbsvcs/examples/Security/SecurityLevel1/server.cpp:
        * orbsvcs/examples/Security/Send_File/server.cpp:
        * orbsvcs/examples/Security/Send_File/client.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Supplier.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Consumer.cpp:
        * orbsvcs/examples/CosEC/Simple/Service.cpp:
        * orbsvcs/examples/CosEC/Simple/Supplier.cpp:
        * orbsvcs/examples/CosEC/Simple/Consumer.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Supplier.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/EC.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Consumer.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/MCast/MCast.cpp:
        * orbsvcs/examples/RtEC/Simple/Service.cpp:
        * orbsvcs/examples/RtEC/Simple/Supplier.cpp:
        * orbsvcs/examples/RtEC/Simple/Consumer.cpp:
        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
        * orbsvcs/examples/LoadBalancing/server.cpp:
        * orbsvcs/examples/LoadBalancing/client.cpp:
        * performance-tests/Latency/DSI/client.cpp:
        * performance-tests/Latency/DSI/server.cpp:
        * performance-tests/Latency/Deferred/client.cpp:
        * performance-tests/Latency/Deferred/server.cpp:
        * performance-tests/Latency/Thread_Pool/client.cpp:
        * performance-tests/Latency/Thread_Pool/server.cpp:
        * performance-tests/Latency/Single_Threaded/client.cpp:
        * performance-tests/Latency/Single_Threaded/server.cpp:
        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Latency/DII/server.cpp:
        * performance-tests/Latency/AMH_Single_Threaded/client.cpp:
        * performance-tests/Latency/AMH_Single_Threaded/server.cpp:
        * performance-tests/Latency/AMI/client.cpp:
        * performance-tests/Latency/AMI/server.cpp:
        * performance-tests/Latency/Thread_Per_Connection/client.cpp:
        * performance-tests/Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/POA/Create_Reference/create_reference.cpp:
        * performance-tests/POA/Demux/demux_test_server.cpp:
        * performance-tests/POA/Demux/demux_test_client.cpp:
        * performance-tests/POA/Implicit_Activation/client.cpp:
        * performance-tests/POA/Implicit_Activation/server.cpp:
        * performance-tests/POA/Implicit_Activation/collocated.cpp:
        * performance-tests/Protocols/receiver.cpp:
        * performance-tests/Sequence_Latency/DSI/client.cpp:
        * performance-tests/Sequence_Latency/DSI/server.cpp:
        * performance-tests/Sequence_Latency/Deferred/client.cpp:
        * performance-tests/Sequence_Latency/Deferred/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/server.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DII/server.cpp:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/AMI/client.cpp:
        * performance-tests/Sequence_Latency/AMI/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Memory/Single_Threaded/client.cpp:
        * performance-tests/Memory/Single_Threaded/server.cpp:
        * performance-tests/Memory/IORsize/client.cpp:
        * performance-tests/Memory/IORsize/server.cpp:
        * performance-tests/Throughput/client.cpp:
        * performance-tests/Throughput/server.cpp:
        * performance-tests/Callback/client.cpp:
        * performance-tests/Callback/server.cpp:
        * performance-tests/RTCorba/Thread_Pool/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/server.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp:
        * tests/Server_Connection_Purging/server.cpp:
        * tests/Two_Objects/client.cpp:
        * tests/Two_Objects/server.cpp:
        * tests/CollocationLockup/CollocationLockup.cpp:
        * tests/CollocationLockup/SimpleNamingService.cpp:
        * tests/Bug_1270_Regression/client.cpp:
        * tests/Bug_1270_Regression/server.cpp:
        * tests/Bug_1270_Regression/shutdown.cpp:
        * tests/MT_Timeout/client.cpp:
        * tests/MT_Timeout/server.cpp:
        * tests/Parallel_Connect_Strategy/client.cpp:
        * tests/Parallel_Connect_Strategy/server.cpp:
        * tests/MT_BiDir/server.cpp:
        * tests/MT_BiDir/client.cpp:
        * tests/Oneway_Buffering/server.cpp:
        * tests/Oneway_Buffering/client.cpp:
        * tests/Oneway_Buffering/admin.cpp:
        * tests/Client_Leaks/server.cpp:
        * tests/Client_Leaks/client.cpp:
        * tests/Client_Leaks/child.cpp:
        * tests/Faults/middle.cpp:
        * tests/Faults/pong.cpp:
        * tests/Faults/server.cpp:
        * tests/Faults/client.cpp:
        * tests/Faults/ping.cpp:
        * tests/Big_Twoways/server.cpp:
        * tests/Big_Twoways/client.cpp:
        * tests/Stack_Recursion/client.cpp:
        * tests/Stack_Recursion/server.cpp:
        * tests/AMH_Exceptions/client.cpp:
        * tests/Muxing/client.cpp:
        * tests/Muxing/server.cpp:
        * tests/Server_Leaks/client.cpp:
        * tests/Server_Leaks/server.cpp:
        * tests/Bug_2702_Regression/client.cpp:
        * tests/AMH_Oneway/client.cpp:
        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/server.cpp:
        * tests/Muxed_GIOP_Versions/client.cpp:
        * tests/Muxed_GIOP_Versions/server.cpp:
        * tests/AMI_Buffering/server.cpp:
        * tests/AMI_Buffering/client.cpp:
        * tests/AMI_Buffering/admin.cpp:
        * tests/DSI_Gateway/client.cpp:
        * tests/DSI_Gateway/gateway.cpp:
        * tests/DSI_Gateway/server.cpp:
        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/server.cpp:
        * tests/Bug_2669_Regression/client.cpp:
        * tests/Connection_Timeout/client.cpp:
        * tests/QtTests/client.cpp:
        * tests/QtTests/server.cpp:
        * tests/Server_Port_Zero/server.cpp:
        * tests/MProfile/client.cpp:
        * tests/MProfile/server.cpp:
        * tests/Bug_1020_Regression/server.cpp:
        * tests/Bug_1020_Regression/client.cpp:
        * tests/IPV6/client.cpp:
        * tests/IPV6/server.cpp:
        * tests/Bug_2503_Regression/common.cpp:
        * tests/Timeout/client.cpp:
        * tests/Timeout/server.cpp:
        * tests/Bug_1551_Regression/client.cpp:
        * tests/Bug_1551_Regression/server.cpp:
        * tests/Servant_To_Reference_Test/server.cpp:
        * tests/Hello/client.cpp:
        * tests/Hello/server.cpp:
        * tests/Connection_Failure/client.cpp:
        * tests/Connect_Strategy_Test/client.cpp:
        * tests/Connect_Strategy_Test/server.cpp:
        * tests/Big_Reply/client.cpp:
        * tests/Big_Reply/server.cpp:
        * tests/MT_Client/server.cpp:
        * tests/MT_Client/orb_creation.cpp:
        * tests/MT_Client/client.cpp:
        * tests/Typedef_String_Array/client.cpp:
        * tests/Typedef_String_Array/server.cpp:
        * tests/Crashed_Callback/client.cpp:
        * tests/Crashed_Callback/server.cpp:
        * tests/Big_AMI/client.cpp:
        * tests/Big_AMI/server.cpp:
        * tests/OctetSeq/server.cpp:
        * tests/OctetSeq/client.cpp:
        * tests/Bug_1635_Regression/client.cpp:
        * tests/Exposed_Policies/Policy_Tester.cpp:
        * tests/Exposed_Policies/Policy_Verifier.cpp:
        * tests/Bug_1568_Regression/client.cpp:
        * tests/Bug_1568_Regression/server.cpp:
        * tests/BiDirectional_DelayedUpcall/client.cpp:
        * tests/BiDirectional_DelayedUpcall/server.cpp:
        * tests/Blocking_Sync_None/client.cpp:
        * tests/Blocking_Sync_None/server.cpp:
        * tests/Crash_On_Write/client.cpp:
        * tests/Crash_On_Write/server.cpp:
        * tests/MT_Server/client.cpp:
        * tests/MT_Server/server.cpp:
        * tests/Policies/Manipulation.cpp:
        * tests/BiDirectional/client.cpp:
        * tests/BiDirectional/server.cpp:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:
        * tests/Strategies/client.cpp:
        * tests/Strategies/server.cpp:
        * tests/Bug_1020_Basic_Regression/client.cpp:
        * tests/Bug_1020_Basic_Regression/server.cpp:
        * tests/LongUpcalls/ami_client.cpp:
        * tests/LongUpcalls/blocking_server.cpp:
        * tests/LongUpcalls/blocking_client.cpp:
        * tests/LongUpcalls/ami_server.cpp:
        * tests/Bug_1361_Regression/server.cpp:
        * tests/Bug_1361_Regression/shutdown.cpp:
        * tests/Bug_1361_Regression/client.cpp:
        * tests/Bug_1254_Regression/client.cpp:
        * tests/Bug_1254_Regression/server.cpp:
        * tests/Connection_Purging/server.cpp:
        * tests/Connection_Purging/client.cpp:
        * tests/Bug_1670_Regression/client.cpp:
        * tests/Bug_1670_Regression/server.cpp:
        * tests/Bug_1482_Regression/client.cpp:
        * tests/Bug_1482_Regression/server.cpp:
        * tests/CallbackTest/client.cpp:
        * tests/CallbackTest/server.cpp:
        * tests/Bug_1476_Regression/client.cpp:
        * tests/Bug_1476_Regression/server.cpp:
        * tests/MProfile_Forwarding/client.cpp:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/FL_Cube/client.cpp:
        * tests/FL_Cube/server.cpp:
        * tests/AMI_Timeouts/client.cpp:
        * tests/AMI_Timeouts/server.cpp:
        * tests/Compression/server.cpp:
        * tests/Bug_2595_Regression/client.cpp:
        * tests/Bug_2595_Regression/server.cpp:
        * tests/Big_Oneways/server.cpp:
        * tests/Big_Oneways/client.cpp:
        * tests/Portable_Interceptors/Dynamic/server.cpp:
        * tests/Portable_Interceptors/Dynamic/client.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/server.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/client.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/server.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/client.cpp:
        * tests/Portable_Interceptors/Benchmark/server.cpp:
        * tests/Portable_Interceptors/Benchmark/client.cpp:
        * tests/Portable_Interceptors/Bug_2088/client.cpp:
        * tests/Portable_Interceptors/Register_Initial_References/server.cpp:
        * tests/Portable_Interceptors/Bug_1559/server.cpp:
        * tests/Portable_Interceptors/Bug_1559/client.cpp:
        * tests/Portable_Interceptors/AMI/server.cpp:
        * tests/Portable_Interceptors/AMI/client.cpp:
        * tests/Portable_Interceptors/Recursive_ORBInitializer/client.cpp:
        * tests/No_Server_MT_Connect_Test/client.cpp:
        * tests/No_Server_MT_Connect_Test/server.cpp:
        * tests/Bug_1330_Regression/client.cpp:
        * tests/Bug_1330_Regression/server.cpp:
        * tests/Bug_2134_Regression/Hello.cpp:
        * tests/Bug_2417_Regression/client.cpp:
        * tests/Bug_2417_Regression/server.cpp:
        * tests/Bug_2174_Regression/client.cpp:
        * tests/Bug_2174_Regression/server.cpp:
        * tests/Cache_Growth_Test/client.cpp:
        * tests/Cache_Growth_Test/server.cpp:
        * tests/Bug_1627_Regression/client.cpp:
        * tests/Bug_1627_Regression/server.cpp:
        * tests/Bug_2188_Regression/client.cpp:
        * tests/Bug_2188_Regression/server.cpp:
        * tests/Bug_2289_Regression/client.cpp:
        * tests/Bug_2289_Regression/server.cpp:
        * tests/AMI/server.cpp:
        * tests/AMI/client.cpp:
        * tests/AMI/simple_client.cpp:
        * tests/POA/Deactivate_Object/server.cpp:
        * tests/POA/EndpointPolicy/client.cpp:
        * tests/POA/Reference_Counting/test.cpp:
        * tests/ICMG_Any_Bug/client.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/Optimized_Connection/oc_client.cpp:
        * tests/Xt_Stopwatch/server.cpp:
        * tests/Xt_Stopwatch/client.cpp:
        * tests/Bug_2183_Regression/client.cpp:
        * tests/Bug_2183_Regression/server.cpp:
        * tests/Bug_2654_Regression/server.cpp:
        * tests/Bug_2593_Regression/client.cpp:
        * tests/Bug_2593_Regression/server.cpp:
        * tests/Bug_1676_Regression/client.cpp:
        * tests/Bug_1676_Regression/server.cpp:
        * tests/MProfile_Connection_Timeout/client.cpp:
        * tests/MProfile_Connection_Timeout/server.cpp:
        * tests/Nested_Upcall_Crash/client.cpp:
        * tests/Nested_Upcall_Crash/server.cpp:
        * tests/Nested_Upcall_Crash/scavenger.cpp:
        * tests/GIOP_Fragments/PMB_With_Fragments/server.cpp:
        * tests/GIOP_Fragments/Java_Big_Request/server.cpp:
        * tests/GIOP_Fragments/Java_Big_Reply/client.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/client.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp:
        * tests/Reliable_Oneways/client.cpp:
        * tests/Reliable_Oneways/server.cpp:
        * tests/OBV/Supports/client.cpp:
        * tests/OBV/Supports/server.cpp:
        * tests/OBV/Forward/client.cpp:
        * tests/OBV/Forward/server.cpp:
        * tests/OBV/Truncatable/client.cpp:
        * tests/OBV/Truncatable/server.cpp:
        * tests/OBV/ValueBox/client.cpp:
        * tests/OBV/ValueBox/server.cpp:
        * tests/OBV/Any/client.cpp:
        * tests/OBV/Any/server.cpp:
        * tests/OBV/Factory/client.cpp:
        * tests/OBV/Factory/server.cpp:
        * tests/Oneways_Invoking_Twoways/server.cpp:
        * tests/Oneways_Invoking_Twoways/client.cpp:
        * tests/Native_Exceptions/client.cpp:
        * tests/Native_Exceptions/server.cpp:
        * tests/Bug_2328_Regression/client.cpp:
        * tests/Bug_2328_Regression/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp:
        * tests/RTCORBA/Client_Propagated/client.cpp:
        * tests/RTCORBA/Client_Propagated/server.cpp:
        * tests/RTCORBA/Server_Protocol/server.cpp:
        * tests/RTCORBA/Server_Protocol/client.cpp:
        * tests/RTCORBA/Private_Connection/client.cpp:
        * tests/RTCORBA/Private_Connection/server.cpp:
        * tests/RTCORBA/Server_Declared/client.cpp:
        * tests/RTCORBA/Server_Declared/server.cpp:
        * tests/RTCORBA/Client_Protocol/client.cpp:
        * tests/RTCORBA/Client_Protocol/server.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/client.cpp:
        * tests/RTCORBA/Diffserv/client.cpp:
        * tests/RTCORBA/Diffserv/server.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:
        * tests/RTCORBA/Explicit_Binding/client.cpp:
        * tests/RTCORBA/Explicit_Binding/server.cpp:
        * tests/Bug_2186_Regression/client.cpp:
        * tests/Bug_2186_Regression/server.cpp:
        * tests/Bug_1269_Regression/client.cpp:
        * tests/Bug_1269_Regression/server.cpp:
        * tests/Bug_1269_Regression/shutdown.cpp:
        * tests/Ondemand_Write/client.cpp:
        * tests/Ondemand_Write/server.cpp:
        * tests/Forwarding/client.cpp:
        * tests/Forwarding/server.cpp:
        * tests/BiDirectional_NestedUpcall/client.cpp:
        * tests/BiDirectional_NestedUpcall/server.cpp:
        * tests/ORB_shutdown/server.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/server.cpp:
        * examples/AMI/FL_Callback/progress.cpp:
        * examples/AMI/FL_Callback/peer.cpp:
        * examples/PluggableUDP/tests/Basic/client.cpp:
        * examples/PluggableUDP/tests/Basic/server.cpp:
          No need anymore to pass an empty string as orbname

Thu Feb  1 22:47:04 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:

          Replaced htonl, htons, ntohl, and ntohs with the appropriate
          ACE_XTOYZ macro (ACE_HTONL, for example).  QNX doesn't have htonl and
          friends without adding extra #includes.

Thu Feb  1 18:08:03 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/ast_typedef.h:
        * TAO_IDL/ast/ast_typedef.cpp:

          Added mutator for the boolean owns_base_type_ member
          so it can be managed from outside the class. This
          member is false by default, but if the base type is
          an anonymous sequence or array, the constructor sets
          it to true.

        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:

          When there is a comma-separated list of typedef declarations,
          the list iteration calls the new method above after the
          first loop and sets the member to false. This call has no
          effect except when the base type is an anonymouse sequence
          or array, in which case we want to prevent the shared base
          type node from being destroyed more than once. Thanks to
          Will Otte <wotte at dre dot vanderbilt dot edu> and Dipa Suri
          <dipa dot suri at lmco dot com> for supplying the IDL that
          uncovered this bug.

        * TAO_IDL/util/utl_decllist.cpp:

          Cosmetic changes.

        * tests/IDL_Test/typedef.idl:

          Added test case for the above bug.

Thu Feb  1 15:43:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.h:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTCORBA/Thread_Pool.cpp:
          Layout changes

Thu Feb  1 14:37:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Default_Stub_Factory.cpp:
        * tao/Default_Stub_Factory.h:
        * tao/ORB_Core.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/Upcall_Command.h:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/Stub.cpp:
          Layout changes

Wed Jan 31 22:49:14 2007  Martin Corino  <mcorino@remedy.nl>

        * tao/DynamicAny/DynUnion_i.cpp:

          Changed to handle inconsistency between statically declared (IDL
          compiler) union typecodes and dynamically declared typecodes where
          the discriminator type is an enum.
          With statically declared typecodes the label values are stored as
          actual enum values while with dynamically stored typecodes these
          label values are stored as ULong.

Wed Jan 31 19:00:44 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/LongDouble:
        * tests/LongDouble/Global.h:
        * tests/LongDouble/Global.cpp:
        * tests/LongDouble/LongDoubleTest.h:
        * tests/LongDouble/LongDoubleTest.cpp:
        * tests/LongDouble/LongDoubleTest.mpc:
        * tests/LongDouble/Test.idl:
        * tests/LongDouble/client.cpp:
        * tests/LongDouble/run_test.pl:
        * tests/LongDouble/server.cpp:

          Added a test that sends a CORBA::LongDouble from server to client
          to ensure that ACE and TAO correctly handles them.

Wed Jan 31 17:23:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_ACE.mwc:

          Exclude $(ACE_ROOT)/protocols/tests and
          Exclude $(ACE_ROOT)/protocols/examples.  They should not be built
          as part of this workspace.

Wed Jan 31 15:00:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp:
          Layout improvements for the generated code now we don't generate
          emulated exception macros

Wed Jan 31 14:44:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
          Layout improvements for the generated code now we don't generate
          emulated exception macros

Tue Jan 30 12:37:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression/Compression_Manager.{h,cpp}:
          Fixed layout and warnings in single threaded build

Tue Jan 30 12:03:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression/Compressor_Factory.{h,cpp}:
          Fixed layout and warnings in single threaded build

Tue Jan 30 11:14:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
          Fixed argument not used warning

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Fixed_TypeCode.cpp:
        * tao/AnyTypeCode/Fixed_TypeCode.h:
        * tao/AnyTypeCode/Marshal.h:
        * tao/AnyTypeCode/Objref_TypeCode.cpp:
        * tao/AnyTypeCode/Objref_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Value_TypeCode_Static.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.cpp:
        * tao/ORB.cpp:
          Layout changes

Tue Jan 30 10:52:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/COIOP/COIOP_Simple_Test.cpp:
          New simplified COIOP test

        * tests/COIOP/COIOP_Test.cpp:
          Added advanced_resource.h include to force static
          link

        * tests/COIOP/COIOP_Tests.mpc:
          Add custom project for the IDL files and added the
          new simple test

        * tests/COIOP/Server_Task.cpp:
          Initialise pointer with 0

        * tests/COIOP/run_test.pl:
        * tests/Collocation_Tests/run_test.pl:
          Fixed bug in these two perl script, last test case was not
          unique

Tue Jan 30 09:33:14 2007  Martin Corino  <mcorino@remedy.nl>

        * tao/DynamicAny/DynUnion_i.cpp:

          Fixed broken DynUnion support (see Bug #2785).

Tue Jan 30 01:16:13 2007  James H. Hill     <hillj@isis.vanderbilt.edu>

        * tao/Utils/Servant_Var.inl:

          Fixed syntax error in catch (...) statements that was
          prevent TAO from building in some cases.

Mon Jan 29 19:27:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
          Removed not needed return statements after ACE_THROW_RETURN, fixes
          warnings with HP aCC on IA64

Mon Jan 29 19:11:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter_Registry.cpp:
        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Empty_Param_TypeCode.cpp:
        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/AnyTypeCode/PolicyA.cpp:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/WrongTransactionA.cpp:
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/Codeset/Codeset_Manager_Factory.cpp:
        * tao/Codeset/Codeset_Translator_Factory.cpp:
        * tao/Collocated_Invocation.cpp:
        * tao/CORBANAME_Parser.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.inl
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.inl
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.inl
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Request.inl
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/DynamicInterface/DII_Arguments.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/FILE_Parser.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Lite.h:
        * tao/HTTP_Parser.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Base.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor_Adapter.h:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/IORTable/IOR_Table_Impl.h:
        * tao/IORTable/Table_Adapter.cpp:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/LF_Connect_Strategy.cpp:
        * tao/LF_Connect_Strategy.h:
        * tao/LF_Event.cpp:
        * tao/LF_Event.h:
        * tao/LF_Event_Binder.h:
        * tao/LF_Follower_Auto_Adder.h:
        * tao/LF_Strategy_Complete.h:
        * tao/LocateRequest_Invocation.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/Messaging/Messaging_ORBInitializer.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/MProfile.cpp:
        * tao/Muxed_TMS.cpp:
        * tao/Null_Fragmentation_Strategy.cpp:
        * tao/Null_Fragmentation_Strategy.h:
        * tao/NVList_Adapter.h:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object_T.cpp:
        * tao/ObjectKey_Table.cpp:
        * tao/ObjectKey_Table.h:
        * tao/Objref_VarOut_T.h:
        * tao/operation_details.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.inl
        * tao/ORBInitializer_Registry.cpp:
        * tao/ORBInitializer_Registry.h:
        * tao/ORBInitializer_Registry_Adapter.h:
        * tao/Parser_Registry.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:
        * tao/PI/PI_ORBInitializer.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/PortableServer_ORBInitializer.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.h:
        * tao/Pluggable_Messaging.h:
        * tao/Pluggable_Messaging_Utils.inl
        * tao/Policy_Current_Impl.cpp:
        * tao/Policy_Current_Impl.h:
        * tao/Policy_Current_Impl.inl
        * tao/Policy_Manager.cpp:
        * tao/Policy_Manager.h:
        * tao/Policy_Manager.inl
        * tao/Policy_Set.cpp:
        * tao/Policy_Set.h:
        * tao/Policy_Validator.cpp:
        * tao/Policy_Validator.h:
        * tao/PolicyFactory_Registry_Adapter.h:
        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
        * tao/PortableServer/Local_Servant_Base.cpp:
        * tao/PortableServer/Local_Servant_Base.h:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.h:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/Profile.cpp:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Reactive_Flushing_Strategy.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/Remote_Invocation.h:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Endpoint_Utils.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_ORB_Loader.h:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Stub.h:
        * tao/RTCORBA/RT_Stub_Factory.h:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Service_Callbacks.cpp:
        * tao/Service_Context.h:
        * tao/Strategies/advanced_resource.h:
        * tao/Strategies/COIOP_Transport.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/Optimized_Connection_Endpoint_Selector.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Factory.cpp:
        * tao/Strategies/UIOP_Lite_Factory.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.h:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/Transport_Queueing_Strategies.cpp:
        * tao/TransportCurrent/Current_Impl.cpp:
        * tao/TransportCurrent/Current_Loader.cpp:
        * tao/TransportCurrent/Current_ORBInitializer.cpp:
        * tao/TransportCurrent/Current_ORBInitializer_Base.cpp:
        * tao/Utils/ORB_Manager.cpp:
        * tao/Utils/Servant_Var.inl
        * tao/Utils/Server_Main.cpp:
        * tao/Valuetype/AbstractBase_T.cpp:
        * tao/Wait_On_LF_No_Upcall.cpp:
        * tao/Wait_Strategy.h:
          Layout changes, const improvements and some cleanup of old code
          that is not needed anymore now we removed emulated exceptions

Sun Jan 28 19:59:14 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO version 1.5.6 released.

Fri Jan 26 18:56:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/Object_Adapter.cpp:

          Removed the global scope on the type used in a catch to help vc8
          figure out what to do.

Fri Jan 26 18:45:53 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Removed the extra parenthesis around a throw argument.

Fri Jan 26 18:21:17 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.cpp:

          Removed unused variable warnings from 120 files.

Fri Jan 26 16:59:47 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_check.cpp:

          Fixed incorrect error reporting of undefined struct when
          it is forward declared multiple times.

        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:

          Fixed incomplete initialization of AST_Expression class
          that hold the value of a union case label when the
          discriminator is an enum type, which was causing the
          calculation of the union's default index to be
          incorrect. Thanks to Martin Corino <mcorino@remedy.nl>
          for reporting both the above IDL compiler bugs.

        * tests/IDL_Test/IDL_Test.mpc:

          Uncommented the struct.idl file in the IDL_Files list,
          so it can now be included in the test. The bug it
          covers is the first one described above.

Fri Jan 26 13:46:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.{h,inl,cpp}:

          Removed unused variable warnings from over 200 files.

Fri Jan 26 12:12:12 UTC 2007  Johnny Willemsen  <jwillmesen@remedy.nl>

        * tao/Wait_Strategy.cpp:
          Fixed vc warning

Fri Jan 26 12:05:12 UTC 2007  Johnny Willemsen  <jwillmesen@remedy.nl>

        * tao/Makefile.am:
          Removed CSD_ORBInitializer.{h,cpp}, files where removed from the
          distribution

Thu Jan 25 23:47:24 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.cpp(destroy):

          Replaced a lost '*' in the parameter to indicate it is a pointer,

Thu Jan 25 19:56:33 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.cpp:

          Removed all of the ACE_PRINT_EXCEPTION macros.

Thu Jan 25 19:45:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.cpp
        * orbsvcs/orbsvcs/Notify/Container_T.inl
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.inl
        * orbsvcs/orbsvcs/Notify/Event_Map_T.inl
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp
        * orbsvcs/performance-tests/RTEvent/lib/RIR_Narrow.cpp
        * orbsvcs/tests/Notify/lib/Consumer_T.cpp
        * orbsvcs/tests/Notify/lib/Peer_T.cpp
        * orbsvcs/tests/Notify/lib/Supplier_T.cpp
          Replaced ACE_TYPENAME with typename

Thu Jan 25 17:39:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.{h,cpp,inl}:

          Removed the ACE exception macros from all files.  There are a few
          number of files that still use ACE_PRINT_EXCEPTION.  They will be
          dealt with in my next commit.

Thu Jan 25 13:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
          Temporarily removed struct.idl, when the IDL compiler fix is in the repo
          I will enable this file again

Wed Jan 24 18:46:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:

          Changed the last of the ACE_THROW's to real throw's.

Wed Jan 24 18:25:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/ORB_Core.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/Policy_Creator_T.h:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/PortableServer/poa_macros.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Utils/Server_Main.cpp:

          The first run of my macro removal script picked up a few things to
          remove.  I'll be running this script on the rest of the tree soon.

Wed Jan 24 14:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/struct.idl:
        * tests/IDL_Test/IDL_Test.mpc:
          Added new IDL test file, will fail to compile until Jeff commits a fix
          for the IDL compiler.

        * tests/Any/Recursive/*:
          Added some new test cases, one has been fixed already last week, the other
          one is new and stored in bugzill as 2776

        * tao/*.{h,cpp,inl}:
          Zapped all environment macros except ACE_THROW_SPEC and ACE_THROW_RETURN.

        * *.{h,cpp,inl}:
          Zapped part of the environment macros from everything except the core TAO
          libs, more follow later, first let us stabilize this commit. The goal is to
          get rid of all environment macros

Wed Jan 24 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Instead of Environment.h generate Basic_Types.h as include

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
          Generate throw instead of ACE_THROW

Mon Jan 22 23:14:56 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO version 1.5.5 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
