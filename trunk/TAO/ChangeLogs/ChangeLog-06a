Mon Apr 17 14:30:49 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * NEWS:

          Updated with J.T.'s input.

Mon Apr 17 02:51:06 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Seq_Multi_ETCL_Filter.mpc:

          Avoids building with ace_for_tao.

Fri Apr 14 15:01:51 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/tests/Notify/MT_Dispatching/MT_Dispatching.mpc:

          Avoids building with ace_for_tao.

Wed Apr 12 21:48:29 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * NEWS:

          Updated with the race condition fix.

Tue Apr 11 16:26:47 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * tao/Connection_Handler.cpp:
        * tao/Resume_Handle.h:
        * tao/Resume_Handle.cpp:

          Reapply the fix a week ago with a correction.
          Before, I mistakenly put a new operation into a
          wrong place. It should be in the right place now.
          Thanks to Frank Rehberger for correcting this.
          Mon Mar 27 18:55:51 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

Tue Apr 11 13:13:27 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tao/Utils/Servant_Var.h:
        * tao/Utils/Servant_Var.inl:

          Add ACE_LACKS_MEMBER_TEMPLATES guards around problematic equality
          operators.

Mon Apr 10 18:42:47 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc:

          Fixed the 'after' setting in the client project.

Mon Apr 10 16:21:40 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:

          Trying to fix another compiler error in ICC 9.0 Windows
          64-bit build.

Mon Apr 10 14:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2377_Regression/Hello.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
          Fixed conversion warnings in vxworks build

Mon Apr 10 10:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/interface.idl:
          Added some extra test cases which where reported by Hans Bos
          <hans dot bos at xelion dot nl> as not working with 1.4.4 but
          they are now working with cvs head.

Mon Apr 10 06:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/extra_core.mpb:
        * tao/tao.mpc:
          Moved ServerRequestInterceptor_Adapter.cpp and
          ClientRequestInterceptor_Adapter.cpp from extra_core to tao
          to fix link errors in vc minimum build

Fri Apr  7 19:54:44 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * tao/Connection_Handler.cpp:
        * tao/Resume_Handle.h:
        * tao/Resume_Handle.cpp:

          Back out the changes I put a week ago since they didn't help
          resovle a race condition.
          Mon Mar 27 18:55:51 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

Fri Apr  7 09:12:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Log/Basic_Log_Test/Basic_Log_Test.cpp:
          Removed include of orbsvcs/Time_Utilities.h, it is not needed and
          caused errors in some builds because this app wasn't build after
          the svc_utils anymore

Thu Apr  6 18:18:47 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Strategies/advanced_resource.cpp (input_cdr_buffer_allocator):

          Modified this method to defer to the TAO_Default_Resource_Factory
          for the input_cdr_buffer_allocator if the allocator type is not
          TAO_ALLOCATOR_NULL_LOCK.  In the event that the user has chosen
          not to use the memory pool allocator, they will get the right type
          of input cdr buffer allocator.

Thu Apr  6 00:33:35 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB_Core.cpp:

          Fixing the usage of the correct dynamic service names, for the
          case of TAO built with support for dynamic linking. Thanks to
          Ossama Othman <Ossama_Othman at symantec dot com> for providing
          the patch.

Wed Apr  5 22:39:28 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_2494_Regression/Bug_2494_Regression.mpc:
        * tests/Bug_2494_Regression/README:
        * tests/Bug_2494_Regression/client.cpp:
        * tests/Bug_2494_Regression/run_test.pl:
        * tests/Bug_2494_Regression/server.cpp:
        * tests/Bug_2494_Regression/test.idl:
        * tests/Bug_2494_Regression/test_i.h:
        * tests/Bug_2494_Regression/test_i.inl:
        * tests/Bug_2494_Regression/test_i.cpp:

          Added a regression test for Bugzilla bug #2494.

        * tao/Transport.cpp (~Transport):

          Added back the ACE_ASSERTS, needed for the regression test above.
          See Bugzilla bug #2494.

Tue Apr  4 22:03:35 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/TestClient.h:
        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:

          Trying to fix compile error occuring on icc 9.0 build.
          Replaced std::cout with ACE_DEBUG, std::getline with
          ACE_Capabilies::getline.

Tue Apr  4 12:30:08 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp:

          Fix old gcc warnings.

Tue Apr  4 09:15:16 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * NEWS:

          Documented Frank's formidably fabulous forwarding fix.

Tue Apr  4 08:36:45 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Permanent_Forward/StubTest.cpp:

          Fixed gcc 2.96 warnings.

Tue Apr  4 08:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/NVList.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp:
          Fixed unitialized warnings

Mon Apr  3 18:32:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Options.html:
          Document that with waitstrategy RW you can't use BiDIR GIOP

Mon Apr 03 18:03:29 UTC 2006  Trevor Fields  <fields_t@ociweb.com>

        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/interceptors.cpp:

          Change the interceptor to not count any _is_a calls.  The comparison count
          does not include any _is_a calls.  The calls can occur as a full CORBA
          call when the system does not recognize the object is Collocated or
          collocation is turned off.

Sat Apr  1 18:56:25 UTC 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/README:

          Added a README file explaining the features supported by the TAO
          Load Balancing service and the future work that is targeted.

Sat Apr  1 18:43:21 UTC 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/README:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/README:

          Added README files for the tests checking the application
          controlled and infrastructure controlled group membership
          support of the TAO Load Balancing service.

Sat Apr  1 18:41:04 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/be/be_codegen.cpp:

          Crash when deleting this->gperf_input_stream_ occurs on other
          systems that use glibc (like GNU/kFreeBSD), not just on linux.
          Thanks to Thomas Girard <thomas dot g dot girard at free dot fr>
          for this fix.

Fri Mar 31 14:30:24 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * tao/Object_Ref_Table.{h,inl} (register_initial_reference):
          Added a new parameter called "rebind" that defaults to false.
          If this parameter is true then rebind() will be used instead of
          bind to make it possible to update the initial references
          dynamically.  Thanks to Bob Ronak <ronak2121 at gmail dot com>
          for suggesting this.

Fri Mar 31 17:19:13 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.cpp:

          See bugzilla bug #2494 for full details.  This fixes a race condition
          where one thread sends data out of the transport (drain_queue_helper)
          but then gets scheduled out before reaching the flushing strategy.
          Meanwhile another thread runs on the same transport and notices that
          the client has closed the connection.  This thread closes the
          transport.  The first thread then continues and attempts to register
          with the reactor to do further output (schedule_output_i), however
          the connection handler has already been removed from the reactor.
          This causes problems later on including a memory leak, since a block
          has been allocated on the tranpsort's queue (in send_reply_message_i)
          and it will never be deallocated (the transport destructor will run
          first).

Fri Mar 31 15:17:51 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/included.idl:
        * tests/IDL_Test/including.idl:

          Added valuetype IDL example that is declared in one file, which
          is included in another where the valuetype is used in a sequence.
          This example tests whether the inclusion of Value_VarOut_T.h
          occurs soon enough in the translation unit to be seen when the
          sequence template class is instantiated, and to make sure the
          change in

          Thu Mar 30 20:21:53 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

          survives when the TAO sequence overhaul is integrated.

Fri Mar 31 11:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/run_test.pl:
          Check the return value of the spawn of the server and don't try
          to also run the client on the vxworks target, the server is the
          side of the test that runs there

Fri Mar 31 11:07:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/Adapter_Activator/run_test.pl:
        * examples/POA/Default_Servant/run_test.pl:
        * examples/POA/Explicit_Activation/run_test.pl:
        * examples/POA/Loader/run_test.pl:
        * examples/POA/On_Demand_Activation/run_test.pl:
        * examples/POA/On_Demand_Loading/run_test.pl:
        * examples/POA/Reference_Counted_Servant/run_test.pl:
          Check the return value of the spawn of the server, if this is
          not equal zero just exit directly. Speeds up the tests when
          there are no executables build

Fri Mar 31 11:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Wait_On_Read.cpp:
          Use false instead of 0 for a bool

Thu Mar 30 20:21:53 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Valuetype/Sequence_T.h:

          Added include of Value_VarOut_T.h, needed when compiling
          generated code from an IDL file with a sequence whose
          valuetype element was declared in an included IDL file, on
          platforms where template source files are not included in
          the corresponding header file. Thanks to Dmitriy Kuznetsov
          <dk3@garant.ru> for sending the example IDL files that
          uncovered the problem.

Thu Mar 30 19:14:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.i:
          Moved is_permanent_forward_condition out of TAO_HAS_INTERCEPTORS
          check

Thu Mar 30 11:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exclusive_TMS.cpp:
          Fixed incorrect formatted debug statement

Thu Mar 30 11:26:45 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/tao_idl.mpc:

          If variable ACE_CC_PREPROCESSOR is defined add that as a macro
          definition on the compile line instead of assuming that the value of
          CXX should be used. This fixes bug #2478.

          See also: Thu Mar 30 11:27:00 UTC 2006  Simon McQueen  <sm@prismtech.com>
          in ../ChangeLog.

Thu Mar 30 11:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/BiDirectional_DelayedUpcall/*:
          New test testing bidir where the client makes an invocation to
          the server, this directly returns, and a second later the
          server is going to callback on the client.

Thu Mar 30 11:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/BiDirectional_NestedUpcall/run_test.pl:
          Updated for VxWorks

Thu Mar 30 10:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Transport.cpp:
          Fixed incorrect debug statements

Thu Mar 30 10:38:31 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Permanent_Forward/StubTest.cpp:

          VxWorks warning - make String_var conversion explicit.

Thu Mar 30 10:24:14 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Permanent_Forward/StubTest.cpp:

          LynxOS compile error. Use ACE_OS::strcmp.

Thu Mar 30 09:58:11 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Permanent_Forward/StubTest.cpp:

          Suppress unused function warnings and make the test more effective
          when ACE_NDEBUG defined.

Thu Mar 30 06:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitInfo.cpp (codec_factory):
          Fixed resource leak. Thanks to Steven Xie
          <steven dot xie at mpathix dot com> for reporting this.

Thu Mar 30 03:30:00 UTC 2006  Frank Rehberger  <frehberger@prismtech.com>

        * tao/Stub.i: add missing call to
          orb_core->reinitialize_object (this), to optimize for colocal
          case.

        * tests/Permanent_Forward/StubTest.cpp: Removed code at end of
          test, which caused error messages even if the test run thru all
          test-cases successfully.

Wed Mar 29 19:30:00 UTC 2006  Frank Rehberger  <frehberger@prismtech.com>

        * tao/Transport.h:
          Correct the documentation explaining message parsing. This is
          related to #2313

Wed Mar 29 17:15:00 UTC 2006  Frank Rehberger  <frehberger@prismtech.com>

        * TAO/tao/DynamicInterface/DII_Invocation_Adapter.cpp:
          TAO/tao/Messaging/Asynch_Invocation_Adapter.cpp:
          TAO/tao/Invocation_Adapter.cpp:

          Guard reply_status() operation with if-else-endif macro for
          MINIMUM builds.

Wed Mar 29 15:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.h:
          Explicit shouldn't be used for a copy constructor

Wed Mar 29 15:24:45 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.yy (yyparse):
        * TAO_IDL/fe/y.tab.cpp (yyparse):

          Added return with error code immediately after outputting
          a lookup error for an enum type, since further parsing
          leads to a crash. Thanks to Jules Colding <colding@omesc.com>
          for reporting the problem and submitting examples IDL files.

Wed Mar 29 03:42:55 UTC 2006  Balachandran Natarajan  <bala_natarajan at symantec dot com>

        * docs/Options.html:

          Added documentation for -ORBConnectionHandlerCleanup.

Tue Mar 28 23:59:00 UTC 2006  Frank Rehberger <frehberger@prismtech.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.{h,cpp}:
        * tao/Service_Callbacks.{h,cpp}:
          Add operation is_permanent_forward_condition()

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/test.idl:
          Add reset() operation to interceptor to be able to do colocal
          and repeat as remote test. Also store forward objects as
          deep-copies.

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp:
          Compare stringified object reference before and after the
          LOCATION_FORWARD_PERM occured, they must differ.

        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/Invocation_Adapter.cpp:
          Add handling of TAO_GIOP_LOCATION_FORWARD_PERM.

        * tao/ORB_Core.{i,h,cpp}:
          Add operation is_permanent_forward_condition() which will
          upcalls the operation in Service_Callbacks interface.

        * tao/Object.cpp:
          Refactor the Object marshaling code into TAO_Stub::marshal()
          operation to encapsulate the TAO_GIOP_LOCATION_FORWARD_PERM
          case.

        * tao/Stub.{i,h,cpp}:
          Add operation TAO_Stub::marshal(), and permanent-forward-feature
          to operation add_forward_profiles().

        * tao/Synch_Invocation.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
          Add handling for TAO_GIOP_LOCATION_FORWARD_PERM.

        * bin/tao_orb_tests.lst
          Add TAO/tests/Permanent_Forward/run_test.pl

        * tests/Permanent_Forward/Permanent_Forward.mpc:
        * tests/Permanent_Forward/run_test.pl:
        * tests/Permanent_Forward/StubTest.cpp:
        * tests/Permanent_Forward/README:
          New test, testing TAO_Stub features for permanent-forwarding support

          These changes add LOCATION_FORWARD_PERM feature, #1777

Tue Mar 28 14:15:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tests/AMH_Exceptions/run_test.pl:
        * tests/AMH_Oneway/run_test.pl:
          Adjusted the timeouts to platform constants.
          Existing time too short for lynxos.

Tue Mar 28 13:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Root_POA.cpp:
          Use bool as type, improved constness

Mon Mar 27 18:55:51 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/tests/Security/MT_SSLIOP/run_test_harsh.pl:
        * tao/Connection_Handler.cpp:
        * tao/Resume_Handle.h:
        * tao/Resume_Handle.cpp:

          Merged in fixes from OCI 1.4a.
          Tue Feb 21 16:29:32 UTC 2006  Don Busch  <busch_d@ociweb.com>

           * tao/Connection_Handler.cpp
           * tao/Resume_Handle.h
           * tao/Resume_Handle.cpp
           * orbsvcs/tests/Security/MT_SSLIOP/run_test_harsh.pl

           RT8248(Bug 1647) is a race condition involving two threads
           active in the same connection handler at the same time.
           The race is fixed by
           ensuring that a connection handler that has allowed its handle
           to be resumed in the Reactor does not return "1" from
           handle_input. "1" is the Reactor's "call me back immediately"
           value. Essentially, you can't give up ownership of yourself twice
           --  you give up owner-ship when you resume the handle, so you
           can't ask to be called back immediately.  (The SSLIOP handler
           is the only one that ever returns 1, so that's the only handler
           in which this manifests itself)

           The additional test (run_test_harsh.pl) is a longer (~5 minute)
           version of the MT_SSLIOP test that fails without this change,
           but succeeds with it.

           Also moved the code for Ciju's "connection close" fix of
           "Fri Dec 16 14:40:54 2005" (this entry is moved from OCI 1.4a)
           from the Connection_Handler.cpp to the Resume_Handle.cpp.
             Fri Dec 16 14:40:54 2005  Ciju John  <john_c@ociweb.com>

             * tao/Connection_Handler.cpp:

               When the client closes its connections, it sends an EOF
               to the server. The sever reactor gets an event for that
               handler. It first suspends the handler and then dispatches
               a thread to handle_input().Some where down the lane, a read()
               is done on the handle and automatically the handle is resumed.
               At this point another thread CAN enter the reactor and
               since the handle being closed has been resumed, the reactor
               will add it to its fd_set. As expected the reactor gets an
               event on that handle and dispatches someone else to handle
               that event.
               What this patch does is prevent the closing handler from being
               resumed. Thus it never does get added to the reactor
               fd_set and the possibility of getting a nil handler is removed.

Mon Mar 27 10:29:08 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/ORB_Core.cpp (destroy_interceptors):

          Fixed race condition that allowed multiple threads to destroy
          interceptors concurrently.  Thanks to Iliyan for finding this
          race condition.

Wed Mar 22 16:18:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tests/Bug_1482_Regression/run_test.pl:
        * tests/Bug_2174_Regression/run_test.pl:
        * tests/RTCORBA/Banded_Connections/run_test.pl:
        * tests/RTCORBA/Client_Protocol/run_test.pl:
        * tests/RTCORBA/Explicit_Binding/run_test.pl:
        * tests/RTCORBA/Policy_Combinations/run_test.pl:
        * tests/RTCORBA/Priority_Inversion_With_Bands/run_test.pl:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/run_test.pl:
        * tests/RTCORBA/Server_Protocol/run_test.pl:
        * tests/RTCORBA/Thread_Pool/run_test.pl:
        * tests/RTScheduling/DT_Spawn/run_test.pl:
        * tests/RTScheduling/Current/run_test.pl:
        * tests/RTScheduling/Scheduling_Interceptor/run_test.pl:
        * tests/OBV/Collocated/Forward/run_test.pl:
        * tests/Muxed_GIOP_Versions/run_test.pl:
          Altered IOR file wait timing to platform constant.
          Existing time too short for lynxos.

Mon Mar 27 08:13:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * docs/Options.html :
        * docs/ORBEndpoint.html :
          Fixed incorrect ORBInitRef examples.

Fri Mar 24 01:58:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Notify_Service/Notify_Service.cpp:
        * orbsvcs/tests/Notify/lib/Driver.cpp:

          Removed logging of ORB worker thread start up, as that fails on
          systems without thread priorities.  See bugzilla issue 2477 for
          details.

Wed Mar 22 16:18:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tests/Bug_1495_Regression/run_test.pl:
          Altered IOR file wait timing to platform constant.

Wed Mar 22 16:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Also disable a warning for BDS2006 with Update Pack 2

Wed Mar 22 15:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2417_Regression/run_test.pl:
          Updated to run with VxWorks

Wed Mar 22 14:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
          Fixed no return statement in function warning

Wed Mar 22 14:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp:
          Fixed "control reaches end of non-void function" warning

Tue Mar 21 13:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Table.h:
          Removed update_orbs method declaration, there was no implementation,
          if someone would use this method he would get an unresolved external,
          so zapped it

Tue Mar 21 13:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.h:
        * tao/LocalObject.h:
        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Acceptor.h:
          Documentation and layout fixes

Mon Mar 20 13:31:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Acceptor.cpp:
          Use prefix decrement instead of postfix

Mon Mar 20 13:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp:
          Made more local variables const, initialize pointer to 0

        * tao/GIOP_Message_Base.h:
          Documentation fix

Mon Mar 20 13:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Made some more local variables const

Mon Mar 20 13:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.h:
          Documentation improvements

Fri Mar 17 15:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/pluggable_protocols/index.html:
          Fixed some hyperlinks to TAO source files

Fri Mar 17 14:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/poa_migration.html:
          Fixed links to the POA implementation

Fri Mar 17 14:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Smart_Proxies.html:
          Fixed typo

Thu Mar 16 22:20:46 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_interface.cpp (be_add_operation):
        * TAO_IDL/include/ast_interface.h (be_add_operation):

          Changed the return type from void to AST_Operation*,
          the same type that is returned from the implementation's
          delegation to the private method fe_add_operation. This
          change allows an error in fe_add_operation (which will
          return 0 and probably be the result of a name clash) to
          get propagated up and be reflected in tao_idl's return
          value.

        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_sh.cpp:

          Changed usage of be_add_operation() to check the new
          return type and return -1 if it is null. The IDL
          compiler formerly would output a 'redefinition'
          (name clash) diagnostic if a user operation name
          clashed with an implied operation name of AMI or AMH,
          and likewise if 2 ports of the same category in a
          component had the same name. Now the IDL compiler
          will also indicate failure when it exits.

Thu Mar 16 20:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.cpp:
          Use true/false instead of 1/0

Thu Mar 16 12:20:41 MST 2006  Yan Dai  <dai_y@ociweb.com>

        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Task.h:

          Typedef'd Thread_Counter as unsigned long and used it for
          the num_threads.

        * tao/CSD_ThreadPool/CSD_TP_Strategy.h:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.inl:

          Updated data member num_threads_ and set_num_threads() method
          to use the Thread_Counter type for the number of threads.

Thu Mar 16 15:48:50 UTC 2006  jiang,shanshan <shanshan.jiang@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/field_cdr_cs.cpp
        * TAO_IDL/util/utl_global.cpp
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp
        * orbsvcs/ImplRepo_Service/Activator_Loader.cpp
        * orbsvcs/ImplRepo_Service/INS_Locator.cpp
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp
        * orbsvcs/ImplRepo_Service/Locator_Loader.cpp
        * orbsvcs/Notify_Service/Notify_Service.cpp
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp
        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp
        * orbsvcs/orbsvcs/AV/RTP.cpp
        * orbsvcs/orbsvcs/AV/sfp.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp
        * orbsvcs/orbsvcs/PortableGroup/GOA.cpp
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp
        * orbsvcs/orbsvcs/Trader/Trading_Loader.cpp
        * tao/GIOP_Message_Base.cpp
        * tao/GIOP_Message_Generator_Parser_10.cpp
        * tao/GIOP_Message_Generator_Parser_12.cpp
        * tao/GIOP_Message_Lite.cpp
        * tao/IIOP_Acceptor.cpp
        * tao/IIOP_Connection_Handler.cpp
        * tao/ORB_Core.cpp
        * tao/TAO_Internal.cpp
        * tao/AnyTypeCode/Union_TypeCode.cpp
        * tao/AnyTypeCode/append.cpp
        * tao/AnyTypeCode/skip.cpp
        * tao/PortableServer/POAManager.cpp
        * tao/RTCORBA/Continuous_Priority_Mapping.cpp
        * tao/RTCORBA/Linear_Priority_Mapping.cpp
        * tao/RTCORBA/Multi_Priority_Mapping.cpp
        * tao/RTCORBA/RT_ORB_Loader.cpp
        * tao/Strategies/DIOP_Acceptor.cpp
        * tao/Strategies/SHMIOP_Factory.cpp
        * tao/Strategies/advanced_resource.cpp
        * utils/catior/catior.cpp
          Updated these files to solve the warnings when setting up "VC level
          4 warnings" on Windows. These warnings include "unreachable code",
          "assignment within conditional expression", "conversion from some
          type to another type, possible loss of data", "local variable may be
          used without having been initialized" and so on.
          Thanks to Lukas Gruetzmacher <gruetzmacher at ais-dresden dot de>
          for motivating the fix to these "VC level 4 warnings".

Thu Mar 16 14:10:53 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * docs/Compiler.html:

          Updated '-Ge <flag>' entry in the options table to reflect
          the current status in the ongoing migration toward dropping
          support for emulated exceptions.

Thu Mar 16 12:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Request_Interceptor_Flow/test.idl:
          Fixed fuzz error

Thu Mar 16 11:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Persistent_ID/server.cpp:
          After creating the child poa destroy the policies

Wed Mar 15 21:26:35 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Notify/Builder.cpp:
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Event.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.cpp:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.h:

          Add "orbsvcs/..." prefix to #includes of *.h, *.i, *.inl, and
          template *.cpp files found in ${TAO_ROOT}/orbsvcs/orbsvcs.

          These instances were missed among the the changes made on:
          Tue Mar 14 06:02:15 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

          because they used relative paths.

Wed Mar 15 13:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Resume_Handle.h:
          Documentation fix

Wed Mar 15 11:22:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.h:
          Doxygen fix

Wed Mar 15 10:52:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2186_Regression/server.conf:
          Use 1 instead of true for -ORBConnectionHandlerCleanup, true is
          deprecated

Wed Mar 15 07:48:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Event_Utilities.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h:
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.h:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Read.h:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.h:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.h:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.h:
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.h:
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Admin.h:
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Workers.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Collection.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.h:
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.h:
        * orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.h:
        * orbsvcs/orbsvcs/ESF/ESF_Worker.h:
        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.h:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.h:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.h:
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.h:
        * orbsvcs/orbsvcs/Event/EC_Trivial_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Type_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor_Impl.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector_Impl.h:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.h:
        * orbsvcs/orbsvcs/Trader/Offer_Database.h:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.h:

          Add "orbsvcs/..." prefix to #includes of *.h, *.i, *.inl, and
          template *.cpp files found in ${TAO_ROOT}/orbsvcs/orbsvcs.

          These instances were missed among the the changes made on:
          Tue Mar 14 06:02:15 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

Tue Mar 14 08:12:55 UTC 2006  Ciju John  <john_c@ociweb.com>

        * tao/Connection_Handler.cpp:

          When the client closes its connections, it sends an EOF to the
          server. The sever reactor gets an event for that handler. It
          first suspends the handler and then dispatches a thread to
          handle_input(). Some where down the lane, a read() is done on the
          handle and automatically the handle is resumed. At this point
          another thread CAN enter the reactor and since the handle being
          closed has been resumed, the reactor will add it to its
          fd_set. As expected the reactor gets an event on that handle and
          dispatches someone else to handle that event. What this patch
          does is prevent the closing handler from being resumed. Thus it
          never does get added to the reactor fd_set and the possibility
          of getting a nil handler is removed.

Tue Mar 14 15:25:48 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Domain.pidl:
        * tao/GIOP.pidl:
        * tao/IOP.pidl:
        * tao/IOP_IOR.pidl:
        * tao/Messaging_PolicyValue.pidl:
        * tao/PI_Forward.pidl:
        * tao/Policy.pidl:
        * tao/PortableInterceptor.pidl:
        * tao/Services.pidl:
        * tao/TAO.pidl:
        * tao/AnyTypeCode/Dynamic_Parameter.pidl:
        * tao/BiDir_GIOP/BiDirPolicy.pidl:
        * tao/CodecFactory/IOP_Codec.pidl:
        * tao/CodecFactory/IOP_Codec_include.pidl:
        * tao/DynamicAny/DynamicAny.pidl:
        * tao/IFR_Client/IFR_Base.pidl:
        * tao/ObjRefTemplate/ObjectReferenceTemplate.pidl:
        * tao/PI/ClientRequestInfo.pidl:
        * tao/PI/ORBInitInfo.pidl:
        * tao/PI/PICurrent.pidl:
        * tao/PI/PolicyFactory.pidl:
        * tao/PI/RequestInfo.pidl:
        * tao/PI_Server/PI_Server_include.pidl:
        * tao/PI_Server/ServerRequestInfo.pidl:
        * tao/PI_Server/ServerRequestInterceptor.pidl:
        * tao/PortableServer/AdapterActivator.pidl:
        * tao/PortableServer/IdAssignmentPolicy.pidl:
        * tao/PortableServer/IdUniquenessPolicy.pidl:
        * tao/PortableServer/ImplicitActivationPolicy.pidl:
        * tao/PortableServer/LifespanPolicy.pidl:
        * tao/PortableServer/PS_Current.pidl:
        * tao/PortableServer/PS_Forward.pidl:
        * tao/PortableServer/PortableServer.pidl:
        * tao/PortableServer/PortableServer_include.pidl:
        * tao/PortableServer/RequestProcessingPolicy.pidl:
        * tao/PortableServer/ServantActivator.pidl:
        * tao/PortableServer/ServantLocator.pidl:
        * tao/PortableServer/ServantRetentionPolicy.pidl:
        * tao/PortableServer/ThreadPolicy.pidl:
        * tao/RTCORBA/RTCORBA.pidl:
        * tao/RTPortableServer/RTPortableServer_include.pidl:

          Change #include <tao/...> to #include "tao/..." to avoid fuzz
          warnings.  At the very least, this makes everyting consistant
          while we are investigate and decide what #include conventions
          for <...> vs. "..." to adopt.

Tue Mar 14 06:02:15 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/...*.cpp:
        * orbsvcs/orbsvcs/...*.h:
        * orbsvcs/orbsvcs/...*.i:
        * orbsvcs/orbsvcs/...*.inl:

          Add "orbsvcs/..." prefix to #includes of *.h, *.i, *.inl, and
          template *.cpp files found in ${TAO_ROOT}/orbsvcs/orbsvcs.

Mon Mar 13 19:51:12 UTC 2006  Johnny Willemsen  <jwilemsen@remedy.nl>

        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/Test.idl:
          Extended this test with a non recursive union with an enum
          as discriminator, this also fails.

Mon Mar 13 15:06:08 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CollocationLockup/run_test.pl:

          Attempted to add support for running the important portion of the
          test on VxWorks.

Mon Mar 13 10:09:21 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2186_Regression/server.conf:

          Add '-ORBConnectionHandlerCleanup true' to get this test to pass.

Sun Mar 12 10:21:12 UTC 2006  Johnny Willemsen  <jwilemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
          Fixed invalid deletes when using the typed event channel and fixed
          some unicode issues. Thanks to Feng Li <fengli at gmail dot com>
          for providing the patches.

Sat Mar 11 12:16:01 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/CollocationLockup/SimpleNamingService.cpp:

          Fixed a warning with gcc.

Fri Mar 10 20:00:45 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:

          Removed extra "orbsvcs/" prefix when including orbsvcs
          headers.

Fri Mar 10 15:57:32 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        Committing the following on behalf of Adam Mitz
        <mitza at ociweb dot com>.

        * tests/CollocationLockup/AB.idl:
        * tests/CollocationLockup/CollocationLockup.cpp:
        * tests/CollocationLockup/CollocationLockup.mpc:
        * tests/CollocationLockup/SimpleNamingService.cpp:
        * tests/CollocationLockup/SimpleNamingService.idl:
        * tests/CollocationLockup/run_test.pl:

          Added a regression test for Bugzilla #2130, which is a deadlock
          involving servant activation and collocated calls.

Fri Mar 10 15:36:08 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Fixed warning. Thanks to Johnny for the tip off.

Fri Mar 10 14:00:00 UTC 2006  Simon Massey <sma@prismtech.com>

        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
          Remove redundant ACE_PRINT_EXCEPTION when rethrowing
          CANNOT_PROCEED exceptions, to clean up the scoreboard and
          stop confusing end users who think an unhandled exception has
          occured when it hasn't.

Fri Mar 10 11:44:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
          Also added a test for a recursive union with no default

Fri Mar 10 10:44:29 UTC 2006  Don Sharp <Donald.Sharp@prismtech.com>

        * orbsvcs/tests/Bug_2377_Regression/Hello.cpp:

          std::string ==> ACE_CString.

Fri Mar 10 10:12:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Descriptor_Interface.inl:
        * tao/AnyTypeCode/skip.cpp:
          Use true/false

Fri Mar 10 09:27:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Stub.cpp:
          Fixed warning in vc6 build

Fri Mar 10 08:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/Test.idl:
          Extended this test with a new test case as described in bug
          2446. This test now fails again because this added test case
          uncovers a new bug. Thanks to Tommy Persson
          <tpe at ida dot liu dot se> for delivering this test case

Fri Mar 10 07:09:22 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/...*.cpp:
        * tao/...*.h:
        * tao/...*.i:
        * tao/...*.inl:

          Add "tao/..." prefix to #includes of *.h, *.i, *.inl, and
          template *.cpp files found in ${TAO_ROOT}/tao.

Thu Mar  9 16:04:22 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:

          Don't bail out on code generation when the node is imported.

          This fixes bug #2429.

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Prevent seg faults when the activator has been fed a duff ImR IOR.

          This fixes bug #2445.

Thu Mar  9 15:37:05 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/AnyTypeCode/Dynamic.pidl:
        * tao/AnyTypeCode/Dynamic_Parameter.pidl:
        * tao/BiDir_GIOP/BiDirPolicy.pidl:
        * tao/CodecFactory/IOP_Codec.pidl:
        * tao/DynamicAny/DynamicAny.pidl:
        * tao/IFR_Client/IFR_Base.pidl:
        * tao/IFR_Client/IFR_Basic.pidl:
        * tao/ObjRefTemplate/ObjectReferenceTemplate.pidl:
        * tao/PI/ClientRequestInfo.pidl:
        * tao/PI/ORBInitInfo.pidl:
        * tao/PI/PICurrent.pidl:
        * tao/PI/PolicyFactory.pidl:
        * tao/PI/RequestInfo.pidl:
        * tao/PI_Server/ServerRequestInfo.pidl:
        * tao/PI_Server/ServerRequestInterceptor.pidl:
        * tao/PortableServer/IdAssignmentPolicy.pidl:
        * tao/PortableServer/IdUniquenessPolicy.pidl:
        * tao/PortableServer/ImplicitActivationPolicy.pidl:
        * tao/PortableServer/LifespanPolicy.pidl:
        * tao/PortableServer/PS_Current.pidl:
        * tao/PortableServer/PS_Forward.pidl:
        * tao/PortableServer/PortableServer.pidl:
        * tao/PortableServer/RequestProcessingPolicy.pidl:
        * tao/PortableServer/ServantLocator.pidl:
        * tao/PortableServer/ServantRetentionPolicy.pidl:
        * tao/PortableServer/ThreadPolicy.pidl:
        * tao/RTCORBA/RTCORBA.pidl:
        * tao/RTScheduling/RTScheduler_include.pidl:

          Add "tao/" prefix to #includes of *.pidl files found in
          ${TAO_ROOT}/tao.

Thu Mar  9 09:18:58 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * COPYING: Updated the date to include 2006.
          Thanks to Alan Kierstead <ackierstead at fedex dot com> for
          motivating the fix to this oversight.

Thu Mar  9 15:03:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/CSIIOP.idl:
        * tao/Domain.pidl:
        * tao/GIOP.pidl:
        * tao/IOP.pidl:
        * tao/IOP_IOR.pidl:
        * tao/Messaging_PolicyValue.pidl:
        * tao/PI_Forward.pidl:
        * tao/Policy.pidl:
        * tao/PortableInterceptor.pidl:
        * tao/Services.pidl:
        * tao/TAO.pidl:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/test.idl:

          Add "tao/" prefix to #includes of *.pidl files found in
          ${TAO_ROOT}/tao.  Thanks to Thomas Lockhart <Thomas dot
          Lockhart at jpl dot nasa dot gov> for providing this change.

Thu Mar  9 14:51:32 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosConcurrency.mpc:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNaming_Skel.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:

          Support for the TAO_ORBSVCS GNU Make macro was broken for some
          time.  I added the missing 'tagchecks' settings to these projects.

        * orbsvcs/orbsvcs/FtRtEvent.mpc:

          Corrected the usage of 'tagchecks' so that the values were added
          instead of being set absolutely.

Thu Mar  9 12:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Stub.{cpp,i}:
          Use true/false instead of 1/0

Thu Mar  9 10:57:13 UTC 2006  Don Sharp <Donald.Sharp@prismtech.com>

        * orbsvcs/tests/Bug_2377_Regression/Hello.cpp:

          Removed extra semi-colons.

Wed Mar  8 17:01:00 UTC 2006  Don Sharp <Donald.Sharp@prismtech.com>

        * orbsvcs/tests/Bug_2377_Regression/Hello.cpp:

          Following a suggestion from Simon McQueen, <sm@prismtech.com>,
          used a more portable method of invoking sub-second resolution
          timing intervals.

Wed Mar  8 14:58:07 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/driver/drv_preproc.cpp:

          Use a dynamically allocated buffer to read IDL file lines and resize
          it if required.

          This fixes bug #2424.

        * tests/Bug_2424_Regression/Bug_2424_Regression.mpc:
        * tests/Bug_2424_Regression/OneLineCosNaming.idl:
        * tests/Bug_2424_Regression/README:
        * tests/Bug_2424_Regression/client.cpp:

          Regression test for the above fix.

        * tests/Bug_2429_Regression/Bug_2429_Regression.mpc:
        * tests/Bug_2429_Regression/Child.idl:
        * tests/Bug_2429_Regression/ChildServant.h:
        * tests/Bug_2429_Regression/ChildServant.cpp:
        * tests/Bug_2429_Regression/Parent.idl:
        * tests/Bug_2429_Regression/README:
        * tests/Bug_2429_Regression/client.cpp:
        * tests/Bug_2429_Regression/run_test.pl:
        * tests/Bug_2429_Regression/server.cpp:

          Regression test for bug #2429. This bug is currently not fixed so
          this test will fail.

Wed Mar  8 13:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
          Include IFR_BasicC.h instead of IFR_ExtendedC.h, all types
          used in this file are from IFR_BasicC.h

Wed Mar  8 12:31:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
          The workaround in this file for Borland C++ is also needed for
          BCB2006 Update Pack 2

Wed Mar  8 12:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.cpp:
          Use true/false instead of 1/0

Wed Mar  8 12:19:37 UTC 2006  Don Sharp <Donald.Sharp@prismtech.com>

        * tests/Bug_2377_Regression/*:
          removed from TAO level to the more appropriate orbsvcs

        * orbsvcs/tests/Bug_2377_Regression/*:
          Regression for bug 2377 moved here.

Wed Mar  8 11:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocalObject.cpp:
          Use true/false instead of 1/0

Wed Mar  8 07:14:30 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Tue Mar  7 16:21:32 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/Naming_Service/Naming_Server.cpp:
        * orbsvcs/Naming_Service/Naming_Service.mpc:
          The Naming Server executable now includes the header for the
          ImR client library.  This is required for tests in static
          builds that use the Naming Server with the ImR.

Tue Mar 07 11:11:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2417_Regression/publisher_impl.cpp:
          Fixed implicit conversion warnings

Tue Mar  7 10:16:50 UTC 2006  Don Sharp <Donald.Sharp@prismtech.com>

        * tests/Bug_2377_Regression/*:
          New regression for bug 2377.

Tue Mar 07 09:36:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2417_Regression/Bug_2417_Regression.mpc:
          Added threads as base project

Tue Mar  7 07:51:52 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/LifeCycle_Service/Makefile.am:

          Regenerated.

        * orbsvcs/LifeCycle_Service/LifeCycle_Service.mpc:

          Changed to not inherit from 'core' so LifeCycle_Service
          executable is not installed.  It's not a stand-alone service
          like the others in ${TAO_ROOT}/orbsvcs, it is an example for use
          with ${TAO_ROOT}/examples/Quoter.  After x.5.1 we'll try to find
          a better place for this.  See bugzilla issue 2410.

Tue Mar  7 07:40:37 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/AMI/FL_Callback/Makefile.am:
        * tao/Makefile.am:

          Regenerated for autoconf FL & QT Reactor / FL & QT Resource
          Factory support.

Mon Mar 06 20:08:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.h:
          Doxygen improvement

Mon Mar 06 19:19:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Queue.cpp:
          Doxygen improvements

Mon Mar 06 16:00:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
          Use prefix increment instead of postfix

Mon Mar 06 15:57:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Invocation_Adapter.cpp:
          Removed a not needed local variable.

        * tao/IIOP_Transport.cpp:
          Initialise pointer with 0

Mon Mar 06 15:56:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Factory/OBV_Factory.mpc:
        * tests/OBV/Forward/OBV_Forward.mpc:
        * tests/OBV/TC_Alignment/OBV_TC_Alignment.mpc:
        * tests/OBV/ValueBox/valuebox.mpc:
          Use more specific base projects

        * tests/OBV/Supports/Supports_Test.mpc:
          Removed exename, not needed

Mon Mar 06 15:32:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/Test.idl:
          Extended this test by making the IDL even a little bit more complex

        * TAO_IDL/fe/fe_interface_header.cpp:
          Explicitly initialize pd_n_supports to 0, fixes a crash of TAO_IDL
          when build with Borland C++ when feeding it a certain incorrect
          IDL file. This fixes bugzilla bug 2428

        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Empty_Param_TypeCode.cpp:
        * tao/AnyTypeCode/Enum_TypeCode.cpp:
        * tao/AnyTypeCode/Enum_TypeCode_Static.cpp:
        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/TypeCode_Case_T.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
        * tao/AnyTypeCode/Union_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Value_TypeCode.cpp:
        * tao/AnyTypeCode/Value_TypeCode_Static.cpp:
          Initialise some pointers with 0, made some local variables const,
          use true/false instead of 1/0. Fixed bugzilla bug 2323 by:
          - When marshaling recursive unions for each case use a seperate
            stream so that the offsets do get calculated
          - For each recursive type be able to handle multiple members of
            the recursive type, we could only handle one occurence.
          For recursive types we should have more test cases, probably there
          are a few small bugs left in this code but these aren't catched
          by the current regression test suite.

Mon Mar 06 15:13:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2417_Regression/*:
          New regression for bug 2417. Thanks to Jan Ohlenburg
          <jan dot ohlenburg at fit dot fraunhofer dot de> for
          delivering this test. This bug has not been fixed yet.

Sun Mar 05 11:13:13 2006  Wallace Zhang  <zhangw@ociweb.com>

        * TAO version 1.5 released.

Fri Mar  3 17:09:34 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * NEWS:

          Updated this file.

Thu Mar  2 14:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Trader.h:
        * tao/Incoming_Message_Stack.h:
          For Borland C++ we have workarounds in these files, seems these
          are also needed for BDS2006 with Update Pack 2

Thu Mar  2 01:56:58 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * NEWS:

          Updated this file with more inputs.

Wed Mar  1 22:39:37 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * NEWS:

          Updated this file with info from Jeff Parsons

Wed Mar  1 15:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp (shutdown):
          After releasing pi_current_ set it to nil because this release could
          result in the destruction of picurrent and then we read invalid
          memory. Found from the AdvSlot test running with valgrind.

Wed Mar  1 07:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.mpc:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc:
          Added after to fix parallel build problems with vc8

Tue Feb 28 12:25:24 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * NEWS:

          Updated.

Tue Feb 28 11:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.inl (destructor):
          Initialise pointer with 0

Tue Feb 28 10:51:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Queue.cpp (destructor):
          Use the correct datatype for the cleanup loop.

Tue Feb 28 10:09:45 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_argument.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Redo the fix for bug #2419 from:
          Mon Feb 27 16:23:50 UTC 2006  Simon McQueen  <sm@prismtech.com>

          Introduce a new flag to idl_global to indicate when we need to
          force generation of the skeleton includes. Setting
          non_local_iface_seen_ to be true was causing undesirable side effects
          on non-inlined builds. Generate skeleton includes when the new
          need_skeleton_includes_ or non_local_iface_seen_ is true.

Tue Feb 28 08:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.h:
          Also BCB2006 Update Pack 1 needs an explicit export

Mon Feb 27 18:19:03 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2084_Regression/Server_Task.cpp:

          Suppress occasional spurious exception output on fast machines.

Mon Feb 27 18:42:38 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:

          Reverted my change on
          Thu Feb 23 15:10:18 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>
          Because it made the two tests IOGRManipulation and 2247 failed.
          I will supply a better fix in x.5.1 after more thorough testing.

Mon Feb 27 17:08:00 UTC 2006 Frank Rehberger <frehberger@prismtech.com>

        * tao/Transport.cpp:
          Incomplete messages, smaller Header-Length, shall be put
          into intermediate buffer

Mon Feb 27 16:23:50 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_argument.cpp:

          Don't not generate skeleton includes for arguments from inherited
          imported abtstract types.

          This fixes bug #2419 howewer the ticket needs to stay open pending
          a fix that can be described without ugly double negatives. ;-)

        * tests/Bug_2419_Regression/Bug_2419_Regression.mpc:
        * tests/Bug_2419_Regression/README:
        * tests/Bug_2419_Regression/abstract_parent.idl:
        * tests/Bug_2419_Regression/client.cpp:
        * tests/Bug_2419_Regression/local_child.idl:

          Small regression test for the above.

Mon Feb 27 15:27:42 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log_i.cpp (TAO_Log_i::set_capacity_alarm_thresholds):

          Call get_capacity_alarm_thresholds() on the record store instead
          of on "this" to avoid recursive lock invocation.

Mon Feb 27 10:56:12 UTC 2006 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/PolicyFactory/run_test.pl:
        * tests/Portable_Interceptors/Register_Initial_References/run_test.pl:
          Increased timeouts to get these test running fine with VxWorks,
          the time there includes also loading the image which takes a
          few seconds

Sun Feb 26 12:26:12 UTC 2006 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/AMI.mpc:
          Added after to fix problems in vc8 ide build

Sun Feb 26 11:57:12 UTC 2006 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.h:
          Only export this class with BCB6, all other compilers don't have
          problems with this.

        * tests/Bug_2174_Regression/run_test.pl:
        * tests/Bug_2183_Regression/run_test.pl:
        * tests/Bug_2289_Regression/run_test.pl:
        * tests/Smart_Proxies/dtor/run_test.pl:
          Updated to work under VxWorks

Sat Feb 25 14:56:12 UTC 2006 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.h:
          Export this class, fixes unresolved external errors with BCB6

Sat Feb 25 12:38:12 UTC 2006 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/simple/CodeSets_simple.mpc:
          Added after to fix parallel build problems with vc8

Sat Feb 25 03:00:00 UTC 2006 Frank Rehberger <frehberger@prismtech.com>

        * tao/Incoming_Message_Stack.{h,cpp,inl}: remove unused operation
          from interface and turn return type of push-operation to "void"
        * tao/Transport.cpp:
          tao/GIOP_Message_Base.cpp:
          Adapt to interface of Incoming_Message_Stack and limit
          number of ACE_ERROR message to usefull amount to reduce
          footprint size.

Fri Feb 24 19:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/run_test.pl:
          Check what spawn returned, when there is no exe this speedsup
          this test a lot

Fri Feb 24 14:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2289_Regression/run_test.pl:
          Fixed error message to say correct test number

Fri Feb 24 13:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2234_Regression/run_test.pl:
        * tests/AMH_Oneway/run_test.pl:
        * tests/Smart_Proxies/dtor/run_test.pl:
        * tests/Bug_2183_Regression/run_test.pl:
          Updated these scripts to work with VxWorks and when we can't
          spawn the server directly exists, safes us some seconds in
          the test run when nothing has been build

Fri Feb 24 11:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2349_Regression/Bug_2349_Regression.mpc:
          Added after to fix build problems with the vc8 ide

Fri Feb 24 10:22:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Sequence_Latency/DII/client.cpp:
          Added static casts to fix compile errors with SunCC 64bit

Fri Feb 24 09:44:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/interface.idl:
          Added try interface as testcase

Fri Feb 24 09:43:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Basic_Arguments.h:
          Use for the basic types the AnyTypeCode adapter, belonging to
          Tue Feb 21 19:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

Fri Feb 24 07:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTScheduling/RTScheduler_includeS.h:
          Added this file, needed by the RTScheduling example

Thu Feb 23 21:45:54 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/tests/ImplRepo/run_test.pl:
          The test "nt_service_ir" copies files, installs services, and starts
          those services (Windows "NT" Services).  With this change the test
          will clean up all of these actions even when the test fails.

Thu Feb 23 20:01:29 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated for autoconf TK Reactor / TK Resource Factory
          support.

Thu Feb 23 18:41:18 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Utils/Servant_Var.inl (operator=):
        * tao/Valuetype/Value_VarOut_T.cpp (operator=):

          Fixed problem where non-copying assignment prematurely decreased
          reference count on contained object by adding a check for
          self-assignment.  The canonical copy-and-swap idiom was used to
          provide a strong exception safety guarantee.  It doesn't require
          a self-assignment check for copying assignment but it may be
          needed for non-copying assignment.  Addresses memory access
          violations.

Thu Feb 23 17:14:25 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tao/GIOP_Message_Lite.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp:

          Fixed unused argument warning.

Thu Feb 23 16:45:36 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2186_Regression/Bug_2186_Regression.mpc:
        * tests/Bug_2186_Regression/Hello.h:
        * tests/Bug_2186_Regression/Hello.cpp:
        * tests/Bug_2186_Regression/README:
        * tests/Bug_2186_Regression/Test.idl:
        * tests/Bug_2186_Regression/client.cpp:
        * tests/Bug_2186_Regression/run_test.pl:
        * tests/Bug_2186_Regression/server.conf:
        * tests/Bug_2186_Regression/server.cpp:

          Added a regression test for this bug. This will fail until it is
          fixed.

Thu Feb 23 15:45:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tao/PI/PICurrent_Impl.cpp:

        Updated/TAOized debug text at line 57.

Thu Feb 23 15:10:18 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:

          Added A helper function that tests the equivalency of two
          profiles that come from an ior and an iogr.

Thu Feb 23 10:55:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tests/Portable_Interceptors/AdvSlotDblCpy/README:

        Updated README to show example test run.

Wed Feb 22 23:42:40 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerate for new files.

Wed Feb 22 20:54:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/LogNotification.cpp:

          _duplicate() log reference before assigning it to event's logref
          field to get life cycle/reference count management right.  Fixes
          bugzilla issue #2416.

Wed Feb 22 20:37:00 UTC 2006 Frank Rehberger <frehberger@prismtech.com>

        * tao/PluggableMessaging.h: Remove abstract operation:
        read_message, missing_data, get_message_data. Add abstract
        operation parse_next_message (), consolidate_fragmented_message,
        discard_fragmented_message.

        * tao/GIOPMessageBase.{h,cpp}: Remove implementation for
        read_message. Add parse_incoming_messages. Add implementation for
        new abstract methods consolidate_fragmented_message,
        parse_next_message, discard_fragmented_message. Declare as private
        parse_incoming_messages, parse_request_id.  Add new member
        attribute fragment_stack_ of type Incoming_Message_Stack. Handle
        TAO_GIOP_MESSAGE_ERROR not as error. For incomplete messages of
        unknown size, allocating message_blocks of size
        ACE_CDR::DEFAULT_BUFSIZE. Handle memory allocation failures in
        code. Wrap output-strings with ACE_TEXT macro.

        * tao/GIOP_Message_Lite.{h,cpp}: Remove implementation of
        read_message and get_message_data. Handle
        GIOP_MESSAGE_CANCELREQUEST. IMplement new virtual method
        parse_next_message, Handle out-of-memory cases. Dummy
        implementations for consolidate_fragmented_message and
        discard_fragmented_message.

        * tao/Incoming_Message_Stack.{h,cpp}: New class providing stack
        operations for TAO_Queued_Data, operations do not require dynamic
        memory allocation.

        * tao/Incoming_Message_Queue.{h,cpp,inl}: remove obsolet
        operations for interface TAO_Incoming_Message_Queue: copy_tail,
        is_tail_complete, is_head_complete, is_tail_fragmented,
        missing_data_tail, find_fragment_chain. Change return type to
        "int" for operation consolidate, return value -1 indicating out of
        memory cases.

        * tao/Transport.{h,cpp}: Major changes: New implementation of
        operation handle_input() fixing following, errors with GIOP
        fragment handling that showed up testing with Java_Big_Request
        test (w/ jre1.4), handling of messages bigger than 2Go, concurrent
        processing of short messages using single-read-optimization, keep
        connection in case of GIOP CancelRequests, compensate memory
        buffer alignment. Remote methods from interface
        parse_consolidate_messages, parse_incoming_messages, missing_data,
        consolidate_message, consolidate_fragments,
        consolidate_message_queue, consolidate_extra_messages,
        make_queued_data. Add methods handle_input_missing_data,
        handle_input_parse_data. Add instance member
        "incoming_message_stack_" of type Incomig_Message_Stack. Minor
        changes: Wrap output strings with ACE_TEXT macro, remove
        ACE_ASSERT statements.

        * tao/Strategies/DIOP_Transport.cpp: Compensate memory buffer
        alignment.

        * tao/Strategies/SHMIOP_Transport.{h,cpp}: Compensate memory
        buffer alignment.  Adapt to new interface of
        PluggableMessaging. Add specialized implemenation of
        PLuggable_Messaging::handle_input()

        * tao/tao.mpc: Add dependency to tao/IncomingMessageStack.{h,cpp}

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Tranport.cpp: Adapt to new
        interface of PluggableMessaging.

        These changes require to recompile and modify custom Messaging
        implementations.  This patch fixes #2303, 2305, 2306, 2307, 2308,
        2309, 2313, 2361, 2365

Wed Feb 22 16:55:24 GMT 2006  Rich Seibel <seibel_r@ociweb.com>

        * examples/RTScheduling/MIF_Scheduler/svc.conf.client:
        * examples/RTScheduling/MIF_Scheduler/svc.conf.server:
          Changed priority policy from direct to continuous.
          The direct does not work on AIX 5.3, but continuous
          seems to work everywhere.

Wed Feb 22 16:45:29 GMT 2006  Rich Seibel <seibel_r@ociweb.com>

        * tao/Array_VarOut_T.inl:
          Removed a nasty cast that shouldn't be necessary.
          Only broken builds, like MSVC6 should require the
          reinterpret_cast<>, otherwise builds should need
          no cast.  Thus, only the broken compilers should
          be singled out.  Thanks to the XL 7 compiler on
          AIX for pointing this out.

Wed Feb 22 15:56:49 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

          Reverting a change, added with the commits from
          Fri Feb 10 20:40:31 UTC 2006 and Thu Feb  9 19:59:41 UTC
          2006. The original intent was to ensure that unsecured clients
          can not make invocations on servants, explicitly marked as
          secure. The problem is in that a client-side-only policy
          (Security::SecQoP*) was used, which is not permitted by the
          CORBA specification. An alternative solution, based upon
          SecurityLevel2 SecureInvocationPolicy or SecurityLevel3
          ObjectCredentialsPolicy should be sought. Thanks
          to Ossama Othman <Ossama_Othman at symantec dot com> for
          pointing that out and discussing the alternatives.

        * NEWS:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
        * orbsvcs/tests/Security/Policies/Foo.idl:
        * orbsvcs/tests/Security/Policies/Foo_i.h:
        * orbsvcs/tests/Security/Policies/Foo_i.cpp:
        * orbsvcs/tests/Security/Policies/Policies.mpc:
        * orbsvcs/tests/Security/Policies/README:
        * orbsvcs/tests/Security/Policies/cacert.pem:
        * orbsvcs/tests/Security/Policies/client.conf:
        * orbsvcs/tests/Security/Policies/client.conf.xml:
        * orbsvcs/tests/Security/Policies/client.cpp:
        * orbsvcs/tests/Security/Policies/client_cert.pem:
        * orbsvcs/tests/Security/Policies/client_key.pem:
        * orbsvcs/tests/Security/Policies/client_nopasswd.conf:
        * orbsvcs/tests/Security/Policies/client_nopasswd.conf.xml:
        * orbsvcs/tests/Security/Policies/run_test.pl:
        * orbsvcs/tests/Security/Policies/server.conf:
        * orbsvcs/tests/Security/Policies/server.conf.xml:
        * orbsvcs/tests/Security/Policies/server.cpp:
        * orbsvcs/tests/Security/Policies/server_cert.pem:
        * orbsvcs/tests/Security/Policies/server_key.pem:
        * orbsvcs/tests/Security/Policies/server_key_nopasswd.pem:

          Removed these files.

Wed Feb 22 12:15:30 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2134_Regression/Hello.cpp:

          Fix error on FC4_ACE_FOR_TAO build. Spurious ';'s in the code.

Wed Feb 22 11:30:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tao/PI/PICurrent_Copy_Callback.cpp:
        * tao/PI/PICurrent_Impl.cpp:
        * tao/PI/PICurrent_Impl.h:
        * tao/PI/PICurrent_Impl.inl:
        * tao/PI_Server/PICurrent_Guard.cpp:

          Bugzilla bugfix #2304, also fixes #2066

Wed Feb 22 09:55:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tests/Portable_Interceptors/AdvSlotDblCpy/client.cpp:
        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:

          Updated regression test for set_slot in send_reply
          bugzilla bug #2304.

Wed Feb 22 04:45:00 UTC 2006 Frank Rehberger <frehberger@prismtech.com>

        * tao/ORB_Core.cpp:
          Fixing TAO_ORB_Core_Auto_Ptr assignment

        * tao/ORB_Table.{h,inl}:
          Fixing namespace-ing for TAO_ORB_Core.

        * tao/Stub.i:
          Fixing TAO_ORB_Core declaration

          Together all these changes are related to previous commit for
          bugzilla bugs #1741 / #2134; #2289; #1493; #2130.

Tue Feb 21 19:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.{h,cpp}:
        * tao/AnyTypeCode_Adapter.h:
          Added insert_into_any methods for all basic types. Thanks to
          Nemoy Michael <michaeln at sintecmedia dot com> for providing
          the patches. This also fixes bugzilla bugs 2371, 2367, and 2422

Tue Feb 21 17:48:24 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tao/Adapter.h:

          Remove the CORBA::Object_ptr argument from
          ::initialize_collocated_object on TAO_Adapter. We need to call this
          method in circumstances when a CORBA::Object is not available.

        * tao/Adapter_Registry.h:
        * tao/Adapter_Registry.cpp:

          Reflect the above change. Also ::initialize_collocated_object must
          now only return 0 for success if the stub it is working on has been
          fully initialized. The registry reflects this by continuing to try
          adapters until one returns 0.

          Similarly ::create_collocated_object now will potentially call the
          above method on all remaining adapters if, after an adapter has
          created an Object, the Object has not been fully initialized.

        * tao/IORTable/Table_Adapter.h:
        * tao/IORTable/Table_Adapter.cpp:

          Create a common method ::find_object which attempts to locate an
          object in in the table. Implement ::dispatch in terms of this method.

          Implement ::initialize_collocated_object to search the table using
          the above mentioned ::find_object method and, if one is found, to
          forward the stub it is initializing to this object ref. Reflect the
          change in API for ::initialize_collocated_object.

          Add an implementation of ::create_collocated_object in terms of
          ::initialize_collocated_object.

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Table.h:

          Include the locking changes proposed by Robert Hancock (Robert dot
          Hancock at sedsystems dot ca) on bug #2130 with a couple of small
          mods. Thanks to Robert Hancock for providing these.

          Add a new method ::reinitialize_object to be called on stubs whenever
          an object has been forwarded or has fallen back from a forwarded
          location. This method determines if the stub has become (or ceased to
          be) collocated and performs the necessary actions to set the
          collocation relevent attributes on the stub.

        * tao/Object.h:
        * tao/Object.i:
        * tao/Object.cpp:

          Remove the members TAO::Object_Proxy_Broker *proxy_broker_,
          TAO_Abstract_ServantBase *servant_ and
          CORBA::Boolean is_collocated_ from this class. These are now held on
          the stub. Change all access to these values to delegate to the stub.

        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:

          Remove the CORBA::Object_ptr argument from the function
          _TAO_collocation_Object_Proxy_Broker_Factory. It was unused and we
          need to use this when we don't have an Object.

        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Object_Adapter.cpp:

          Reflect the change in API for ::initialize_collocated_object. Make
          that method and ::create_collocated_object use the new accessors
          for collocation attributes on the stub rather than the CORBA::Object.
  Make ::initialize_object only return 0 for success if it has fully
  completed the intialisation of an object. i.e. it managed to locate
          a collocated servant for the stub.

        * tao/Stub.h:
        * tao/Stub.i:
        * tao/Stub.cpp:

          Add the collocated servant, collocated indicator, and object proxy
          broker members from CORBA::Object to this class with appropriate
          accessors.

          Insert calls to ::reinitialize_object on the stubs ORB core at points
          where the stub may have moved to / from being collocated.

          Together all these changes fix bugzilla bugs #1741 / #2134; #2289;
          #1495; #2130.

        * tests/Bug_2134_Regression/Bug_2134_Regression.mpc:
        * tests/Bug_2134_Regression/Hello.idl:
        * tests/Bug_2134_Regression/Hello.cpp:
        * tests/Bug_2134_Regression/README:
        * tests/Bug_2134_Regression/run_test.pl:

          A regression test for bugzilla #1741 / #2134. #2289 is already in the
          repo, as is #1495.

Tue Feb 21 17:45:06 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:

          Cosmetic change to source code.

        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp (members_i):
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp (members_i):

          Fixed a bug with nested structs/nested unions that results
          in the servant's ACE_Configuration_Section_Key (its
          placeholder in the repository) being changed to the key
          of the nested type, when processing returns to the top level
          Thanks to Richard Spence <richard.spence.extern@icn.siemens.de>
          for reporting the bogus exception thrown in TypeCodeFactory
          that uncovered the problem. This fix closes [BUGID:2407].

Mon Feb 20 15:06:27 2006  Wallace Zhang  <zhangw@ociweb.com>

        * TAO version 1.4.10 released.

Mon Feb 20 07:27:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Release:
          Updated for rename of TAOACE.mwc to TAO_ACE.mwc

Sun Feb 19 11:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:
          Fixed conversion warning and fixed compile error with gcc4

Fri Feb 17 19:30:59 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * NEWS:

          Updated this file with more inputs.

Fri Feb 17 15:32:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Small improvements

Fri Feb 17 13:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlotDblCpy/client.cpp:
          Removed escape character that slipped in by accident

Fri Feb 17 09:40:00 UTC  Simon Massey  <sma@prismtech.com>

        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:
          Work around GCC4.0 template resolusion compilation bug?

Fri Feb 17 09:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Fixed compile error with Borland

Fri Feb 17 08:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlotDblCpy/client.cpp:
          Fixed conversion warning

Thu Feb 16 19:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
          Fixed GOA factory name. Thanks to Alex Sheh
          <ASHEH at euphonix dot com> for reporting this.

Thu Feb 16 18:11:03 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/default_client.cpp:

          Report an error if unknown/unsupported argument is used with
          -ORBIIOPProfileLock.

          Changed -ORBConnectionHandlerCleanup to support 0 and 1 as
          arguments.  Previously it only supported false, which made it
          impossible to set the option after the default was changed to
          false last September.  Support false (and now true) arguments
          for backwards compatibility.

Thu Feb 16 16:00:07 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Notify_Service/Notify_Service.cpp:

          Revert change that got mixed in with:
          Thu Feb 16 03:33:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

Thu Feb 16 12:35:00 UTC  Simon Massey  <sma@prismtech.com>

        * tests/Portable_Interceptors/AdvSlotDblCpy/AdvSlotDblCpy.mpc:
        * tests/Portable_Interceptors/AdvSlotDblCpy/client.cpp:
        * tests/Portable_Interceptors/AdvSlotDblCpy/InvokeMe.idl:
        * tests/Portable_Interceptors/AdvSlotDblCpy/README:
        * tests/Portable_Interceptors/AdvSlotDblCpy/run_test.pl:
        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:
          Added regression test for Bugzilla 2403

Thu Feb 16 09:21:51 UTC Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAOACE.mwc:
        * TAO_ACE.mwc:
          Renamed TAOACE to TAO_ACE, makes it easier for the builds to
          exclude

Thu Feb 16 03:33:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/tutorials/Quoter/AMI/Makefile.am:
        * docs/tutorials/Quoter/Event_Service/Makefile.am:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/Advanced/ch_3/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:
        * examples/Callback_Quoter/Makefile.am:
        * examples/Content_Server/AMI_Iterator/Makefile.am:
        * examples/Content_Server/AMI_Observer/Makefile.am:
        * examples/Content_Server/SMI_Iterator/Makefile.am:
        * examples/Event_Comm/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/Logging/Makefile.am:
        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:
        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * examples/ior_corbaloc/Makefile.am:
        * interop-tests/wchar/Makefile.am:
        * orbsvcs/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/LifeCycle_Service/Makefile.am:
        * orbsvcs/Notify_Service/Notify_Service.cpp:
        * orbsvcs/Trading_Service/Makefile.am:
        * orbsvcs/examples/CosEC/Factory/Makefile.am:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
        * orbsvcs/examples/ImR/Advanced/Makefile.am:
        * orbsvcs/examples/ImR/Combined_Service/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/Log/RTEvent/Makefile.am:
        * orbsvcs/examples/ORT/Makefile.am:
        * orbsvcs/examples/Security/Send_File/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2247_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2248_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2285_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2287_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2316_Regression/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/HTIOP/AMI/Makefile.am:
        * orbsvcs/tests/HTIOP/BiDirectional/Makefile.am:
        * orbsvcs/tests/HTIOP/Hello/Makefile.am:
        * orbsvcs/tests/IOR_MCast/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/ImplRepo/scale/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
        * orbsvcs/tests/Miop/McastHello/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Security/BiDirectional/Makefile.am:
        * orbsvcs/tests/Security/Big_Request/Makefile.am:
        * orbsvcs/tests/Security/Callback/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * orbsvcs/tests/Trading/Makefile.am:
        * orbsvcs/tests/ior_corbaname/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
        * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Latency/AMI/Makefile.am:
        * performance-tests/Latency/DII/Makefile.am:
        * performance-tests/Latency/Deferred/Makefile.am:
        * performance-tests/Latency/Single_Threaded/Makefile.am:
        * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Latency/Thread_Pool/Makefile.am:
        * performance-tests/Memory/IORsize/Makefile.am:
        * performance-tests/Memory/Single_Threaded/Makefile.am:
        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/POA/Implicit_Activation/Makefile.am:
        * performance-tests/Pluggable/Makefile.am:
        * performance-tests/Protocols/Makefile.am:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile.am:
        * performance-tests/RTCorba/Thread_Pool/Makefile.am:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/AMI/Makefile.am:
        * performance-tests/Sequence_Latency/DII/Makefile.am:
        * performance-tests/Sequence_Latency/DSI/Makefile.am:
        * performance-tests/Sequence_Latency/Deferred/Makefile.am:
        * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
        * performance-tests/Throughput/Makefile.am:

          Regenerated with new MPC automake template.  Addresses
          problems where *.idl files in IDL custom_only projects
          weren't listed.  This addresses a large part of the issue
          raised by Vladimir Panov where orbsvcs *.idl files were
          not installed.

Wed Feb 15 20:11:51 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:

          Renamed many of the projects within this MPC file to avoid fuzz
          warnings.

Wed Feb 15 16:07:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Objref_TypeCode.cpp:
        * tao/Special_Basic_Argument_T.cpp:
          Added includes to fix the solaris autoconf build. Thanks to
          Vladimir Panov <gbr at voidland dot org> for reporting this
          and providing patches.

Wed Feb 15 11:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PICurrent_Impl.h:
          Extended documentation

        * tests/Portable_Interceptors/AdvSlotExt/*:
          Another new PI test. We test the PI functionality in
          receive_request. When we set a value in TSC, then this should
          be independent of any change in RSC, so we set a value in
          TSC, then another value in RSC and then read TSC again and
          check if we did get the correct value back.

        * tao/PI/PICurrent_Impl.cpp (set_slot):
          When this PICurrent has a lc_slot_table set, then copy this
          table we refer to to our own table befor we start modifiying
          our table.

        * tao/PI/PICurrent_Copy_Callback.cpp:
          Only copy the slot table from source to destination when the
          destination still refers to the table of the source.

          These changes together fix bugzilla bug 2401 and 2398.

Wed Feb 15 09:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PICurrent_Copy_Callback.{h,cpp}:
          Changed the return type of the execute method to void, there
          was no real meaning for the return value

        * tao/PI/PICurrent_Impl.cpp:
          Updated for the change of the return value type

Wed Feb 15 08:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/TC_Alignment/test_i.cpp:
          Fixed compile errors with Borland

        * tao/PI_Server/PICurrent_Guard.h:
          No need to export this class from this shared library

Tue Feb 14 13:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/PICurrent/server.cpp:
          Explicitly destroy the ORB at the end to make sure all interceptors
          do get destroyed

Tue Feb 14 12:51:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/PICurrent/ServerRequestInterceptor.cpp:
          Improved check in receive_request to not give bad output

Tue Feb 14 11:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Abstract_Interface/test_i.cpp:
        * tests/OBV/Any/AnyS_impl.cpp:
        * tests/OBV/Any/client.cpp:
        * tests/OBV/Collocated/Forward/Client_Task.cpp:
        * tests/OBV/Forward/client.cpp:
          Fixed compile errors with Borland

Tue Feb 14 08:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/PICurrent/ServerRequestInterceptor.cpp:
          Added a test case for bugzilla bug 2401, in the receive_request we
          modifity the RSC, this should not effect the TSC, this bug has not
          been fixed yet, working on it

Tue Feb 14 08:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/ValueBox/client.cpp:
          Fixed compile errors with Borland C++

Mon Feb 13 20:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
          Use a cast to convert a ACE_hrtime_t to a CORBA::ULongLong. This
          fixes compile errors on Solaris 64bit

Mon Feb 13 16:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/releasenotes/orbcore.html:
          Updated link for bugzilla

Mon Feb 13 15:51:38 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Remove trailing whitespace for const wstring's as is done for
          const string's.

        * tao/Seq_Var_T.h:
        * tao/Seq_Var_T.inl:

          Added const [] operators to the TAO_FixedSeq_Var_T and
          TAO_VarSeq_Var_T classes.

Mon Feb 13 15:23:42 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/EC_MT_Mcast/Makefile.am:

          Regenerate.  Test now requires Strategies library.

Mon Feb 13 15:20:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
          Changed is_primary from bool to CORBA::Boolean to fix compile
          errors with MacOS. Also removed is_primary method, was just
          declared and I couldn't find any implementation

Mon Feb 13 14:21:42 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_union.cpp (compute_default_value):

          When a clash is found between a declared case label value and
          the initialized default discriminator value for a boolean
          discriminator, changed the method of modifying the intialized
          discriminator defaul value from '++' to '^=', in order to
          be consistent with the changes in

          Thu Feb  9 16:31:17 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

          since this type of discriminator value is now stored internally as
          a native boolean instead of a signed long.

        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/be_include/be_generator.h:

          Changed signature of one of the create_expr() overloads
          to match the signature change to constructors of be_expression
          and AST_Expression in

          Thu Feb  9 16:31:17 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

Mon Feb 13 13:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlot/server.cpp:
          Improved this test, explicitly put a Long with value 5 in the PI
          slot and retrieve it later, this we can check whether we get
          the correct value back.

Mon Feb 13 13:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PICurrent_Copy_Callback.h:
          Disallow copy and assignment

Mon Feb 13 12:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PICurrent_Impl.cpp:
          Added some more documentation

Mon Feb 13 12:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PICurrent_Impl.h:
          Doxygen improvements

Mon Feb 13 12:12:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlot/client.cpp:
          Call shutdown on the server when ready

Mon Feb 13 11:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Upcall.cpp:
          Fixed typo in comment

        * tao/PortableServer/Servant_Upcall.h:
          Document that we have an instance per upcall

Mon Feb 13 11:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Initialise some pointers with 0

Mon Feb 13 11:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Thread_Pool.{h,cpp}:
          Create the dynamic threads as detached, they can exit themselves
          when load drops again, so we then can't join on them. Used the
          same flags as for the TPC thread the ORB can create

Mon Feb 13 09:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Security/Policies/Foo_i.cpp:
          Use CORBA::is_nil to check if an object reference is nil or not

Mon Feb 13 09:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
          Do the allocation of the ExceptionHolder in two steps, for allocate
          is using a pointer and then assign this pointer to a _var. Fixes
          compile problems in the Borland builds

Sun Feb 12 13:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
        * orbsvcs/tests/Security/Policies/client.cpp:
          Fixed conversion warning

        * orbsvcs/tests/Security/Policies/Policies.mpc:
          No need to set exename

Sun Feb 12 08:32:09 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * Makefile.am:

          Regenerated.

        * utils/catior/catior.cpp:

          Use #include "orbsvcs/CosNamingC.h" instead of #include
          "CosNamingC.h", as per normal TAO include path conventions.

        * utils/catior/catior.mpc:

          Remove includes += definition.  The include path already has
          orbsvcs via inheritance from namingexe.

Sun Feb 12 05:29:06 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Cosmetic change to source code.

        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp (gen_throw_spec):

          Fixed code generation error introduced with a change to this
          file in

          Thu Feb  9 14:06:09 UTC 2006  Simon McQueen  <sm@prismtech.com>

Sat Feb 11 15:36:12 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/OBV/ValueBox/Test_impl.cpp:

          Divide sizeof(VBlongarray) by sizeof(CORBA::Long) instead of
          sizeof(long).  Fixes OBV/ValueBox test on systems with 64 bit
          longs.

Sat Feb 11 04:08:52 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Sat Feb 11 000:26:18 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/include/ast_decl.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_err.cpp:

          Changed base class AST_Decl to use ACE_CString for its
          pd_file_name member, instead of using UTL_String*. Also
          changed static method idl_error_header() to take an
          ACE_CString for the filename argument. Easier to get
          this member type to stick around until we check for
          illegal primary keys, which must be done after all
          other parsing.

Fri Feb 10 20:40:31 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/tests/Security/Policies/Foo_i.cpp:
        * orbsvcs/tests/Security/Policies/client.cpp:

          Minor updates to printed output to prevent the regression suite
          from incorrectly interpreting debug output as test failure.

Fri Feb 10 19:22:34 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosTrading.mpc:

          Added iortable as a base project for the CosTrading_Serv library.

        * orbsvcs/orbsvcs/Trader/Trading_Loader.cpp:

          Add the TradingService IOR to the IORTable so that it may be used
          as a corbaloc within a -ORBInitRef.

        * orbsvcs/tests/Trading/run_test.pl:

          Modified this test to use a corbaloc to locate the TradingService.

Fri Feb 10 15:49:17 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:

          Reverted back a change I did because its non-compliance
          with the FT Spec.
          Thu Feb  9 20:06:18 UTC 2006  Wallace Zhang

Fri Feb 10 15:28:50 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:

          Applied the fix suggested by Johnny Willemsen
          <jwillemsen@remedy.nl> in [BUGID:2145], since it was
          never supplied by the bug reporter, and closed the entry.

Fri Feb 10 15:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/configurations.html:
          Fixed link

Fri Feb 10 15:00:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tao/ServerRequestInterceptor_Adapter.h
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Correct compile problems for TAO_HAS_EXTENDED_FT_INTERCEPTORS
          builds. This build configuration has been left behind with
          recent changes.

Fri Feb 10 14:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Mcast/run_test.pl:
        * orbsvcs/tests/EC_MT_Mcast/run_test.pl:
          When we can't spawn the processes, just exit directly instead
          of waiting on a timeout. Speedsup the daily builds when we
          can't build the executables

Fri Feb 10 11:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
          Use prefix increment

        * orbsvcs/orbsvcs/Event/ECG_UDP_Protocol.h:
          Removed this file

        * orbsvcs/tests/EC_MT_Mcast/EC_MT_Mcast.mpc:
        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/EC_MT_Mcast/svc.conf:
          Link in the strategies lib, this way this test can be used
          also in a static environment

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
          Initialise pointer with 0

Fri Feb 10 11:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2319_Regression/*:
          Added regression for this bug. Thanks to  Toha Bakanovsky
          <im-scooter at yandex dot ru> for creating this. This bug
          is not fixed

        * tao/Blocked_Connect_Strategy.h:
          Doxygen improvements

        * tao/FlResource_Loader.cpp:
          Removed not needed include

        * tao/FlResource_Factory.h:
          Reordered includes

        * tao/PI_Server/ServerInterceptorAdapter.cpp:
          We did copy PICurrent too often from TSC to RSC and back

        * tao/PortableServer/Servant_Upcall.h:
          Made single argument constructor explicit

        * tao/RTPortableServer/RT_POA.cpp:
          Initialize pointer with 0

Fri Feb 10 08:28:55 UTC 2006  Don Sharp <Donald.Sharp@prismtech.com>

        * utils/catior/catior.cpp:
        * utils/catior/catior.mpc:

          Better error reporting.

          Implement name server IOR lookup.

Wed Feb  8 12:00:57 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * utils/catior/catior.cpp (cat_codeset_info):

          Take into account CDR encapsulation byte order when demarshaling
          information from the encapsulation.  Fixes incorrect
          demarshaling in cases where CDR encapsulation byte order does
          not match CDR stream byte order.  [Bug 2400]

Thu Feb  9 21:07:51 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be_include/be_helper.h:

          Changed the signature of the TAO_OutStream operator that
          takes a TAO_ACE_CHECK struct to get a const reference of
          the struct, instead of a non-const reference. In code
          generation, this struct is passed to the operator as a
          temporary, and gcc is evidently catching that a temporary
          shouldn't be passed as a non-const reference (Visual Studio
          did not catch it), but reporting the error as a failure to
          resolve the operator overload.

Thu Feb  9 20:17:37 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Fix typo in regeneration.

Thu Feb  9 20:06:18 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:

          Corrected the use of the length of the passing parameter to a
          function.

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:

          Changed the return value of function is_profile_equivalent when
          comparing an IOR and an IOGR. Basically, when you compare an
          IOR and an IOGR, we need to return "DONT_KNOW",not
          "NOT_EQUIVALENT".

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.cpp:

          A fix for using the object reference.

        * tao/IORManipulation/IORManipulation.cpp:

          Corrected the order of adding, removing profiles, and creating
          Object References.

Thu Feb  9 19:59:41 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

          This change was adds enforcement for any Security::SecQoP*
          policies applicable on a POA, that may be different from the ORB
          default. It resolves an bug, which allowed security unaware
          clients to make invocations on "secure" objects when the ORB is
          configured with support for Security::SecQoPNoProtection.
          ("Secure" in this context means that the object is activated in
          a POA, for wich security policy was set to at least
          Security::SecQoPIntegrity.)

       * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:

          Added code to the interception point to ensure that any
          Security::SecQoP* policies are enforced.

        * orbsvcs/tests/Security/Policies/Foo.idl:
        * orbsvcs/tests/Security/Policies/Foo_i.h:
        * orbsvcs/tests/Security/Policies/Foo_i.cpp:
        * orbsvcs/tests/Security/Policies/Policies.mpc:
        * orbsvcs/tests/Security/Policies/README:
        * orbsvcs/tests/Security/Policies/cacert.pem:
        * orbsvcs/tests/Security/Policies/client.conf:
        * orbsvcs/tests/Security/Policies/client.conf.xml:
        * orbsvcs/tests/Security/Policies/client.cpp:
        * orbsvcs/tests/Security/Policies/client_cert.pem:
        * orbsvcs/tests/Security/Policies/client_key.pem:
        * orbsvcs/tests/Security/Policies/client_nopasswd.conf:
        * orbsvcs/tests/Security/Policies/client_nopasswd.conf.xml:
        * orbsvcs/tests/Security/Policies/run_test.pl:
        * orbsvcs/tests/Security/Policies/server.conf:
        * orbsvcs/tests/Security/Policies/server.conf.xml:
        * orbsvcs/tests/Security/Policies/server.cpp:
        * orbsvcs/tests/Security/Policies/server_cert.pem:
        * orbsvcs/tests/Security/Policies/server_key.pem:
        * orbsvcs/tests/Security/Policies/server_key_nopasswd.pem:

          Added a test to excercise the various combinations of clients
          making invocations on servers that either support or requre
          protection.

Thu Feb  9 19:27:13 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/HTOIP.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:

          Add Pidl_Files section so that *_endpoints.pidl files are
          installed in autoconf builds.

Thu Feb  9 18:25:38 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/driver/drv_preproc.cpp:

          If TAO_ROOT or ACE_ROOT environment variables are set they
          override the path set by 'TAO_IDL_INCLUDE_DIR'.  Both $TAO_ROOT
          and $TAO_ROOT/tao (or $ACE_ROOT/TAO and $ACE_ROOT/TAO/tao) have
          to be added to the list of preprocessor include paths.  Instead
          of unconditionally disabling appending the second include path
          when TAO_IDL_INCLUDE_PATH is defined, we just set it to '.' in
          the case neither TAO_ROOT or ACE_ROOT environment variables are
          set.

          Similarly, disable appending /orbsvcs, /CIAO, and /CIAO/ciao to
          TAO_IDL_INCLUDE_PATH, again setting the include paths to '.'.

Thu Feb  9 16:45:21 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/be_global.cpp:
        * orbsvcs/IFR_Servicebe_global.h:
        * orbsvcs/IFR_Serviceifr_adding_visitor.cpp:
        * orbsvcs/IFR_Serviceifr_adding_visitor_exception.cpp:
        * orbsvcs/IFR_Serviceifr_adding_visitor_structure.cpp:
        * orbsvcs/IFR_Serviceifr_adding_visitor_union.cpp:

          - removed all usage of idl_bool typedef in the IFR loader,
            consistentlty with changes in

            Thu Feb  9 16:31:17 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

          - added support for boxed valuetypes to the IFR loader

Thu Feb  9 16:31:17 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/idl_bool.h:

          Removed this file, no longer used because of changes
          below.

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_attribute.cpp:
        * TAO_IDL/ast/ast_component.cpp:
        * TAO_IDL/ast/ast_component_fwd.cpp:
        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_eventtype.cpp:
        * TAO_IDL/ast/ast_eventtype_fwd.cpp:
        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_factory.cpp:
        * TAO_IDL/ast/ast_generator.cpp:
        * TAO_IDL/ast/ast_home.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_interface_fwd.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_native.cpp:
        * TAO_IDL/ast/ast_operation.cpp:
        * TAO_IDL/ast/ast_predefined_type.cpp:
        * TAO_IDL/ast/ast_recursive.cpp:
        * TAO_IDL/ast/ast_redef.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/ast/ast_valuebox.cpp:
        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/ast/ast_valuetype_fwd.cpp:
        * TAO_IDL/be/be_argument.cpp:
        * TAO_IDL/be/be_array.cpp:
        * TAO_IDL/be/be_attribute.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_component.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_enum.cpp:
        * TAO_IDL/be/be_eventtype.cpp:
        * TAO_IDL/be/be_exception.cpp:
        * TAO_IDL/be/be_expression.cpp:
        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_home.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_interface_fwd.cpp:
        * TAO_IDL/be/be_native.cpp:
        * TAO_IDL/be/be_operation.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_string.cpp:
        * TAO_IDL/be/be_structure.cpp:
        * TAO_IDL/be/be_sunsoft.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_typedef.cpp:
        * TAO_IDL/be/be_union.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_context.cpp:
        * TAO_IDL/be/be_visitor_scope.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_argument/arglist.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_ci.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/enum_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/enum_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ci.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_home/home_ch.cpp:
        * TAO_IDL/be/be_visitor_home/home_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_si.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/base_proxy_broker_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/remote_proxy_broker_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/remote_proxy_broker_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/smart_proxy_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/smart_proxy_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/interface_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_exception_holder_operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/argument.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/exceptlist_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:
        * TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ci.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_cs.cpp:
        * TAO_IDL/be/be_visitor_structure_fwd/structure_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_ci.cpp:
        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_assign_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
        * TAO_IDL/be/be_visitor_union_fwd/union_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/valuetype_fwd_ch.cpp:
        * TAO_IDL/be_include/be_array.h:
        * TAO_IDL/be_include/be_attribute.h:
        * TAO_IDL/be_include/be_decl.h:
        * TAO_IDL/be_include/be_enum.h:
        * TAO_IDL/be_include/be_eventtype.h:
        * TAO_IDL/be_include/be_exception.h:
        * TAO_IDL/be_include/be_expression.h:
        * TAO_IDL/be_include/be_generator.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_helper.h:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_interface_fwd.h:
        * TAO_IDL/be_include/be_operation.h:
        * TAO_IDL/be_include/be_sequence.h:
        * TAO_IDL/be_include/be_structure.h:
        * TAO_IDL/be_include/be_type.h:
        * TAO_IDL/be_include/be_typedef.h:
        * TAO_IDL/be_include/be_union.h:
        * TAO_IDL/be_include/be_valuetype.h:
        * TAO_IDL/be_include/be_visitor_arg_traits.h:
        * TAO_IDL/be_include/be_visitor_context.h:
        * TAO_IDL/be_include/be_visitor_scope.h:
        * TAO_IDL/be_include/be_visitor_operation/operation.h:
        * TAO_IDL/be_include/be_visitor_valuetype/arglist.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_ci.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_ci.h:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/fe/fe_interface_header.cpp:
        * TAO_IDL/fe/idl.yy
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/y.tab.cpp:.diff
        * TAO_IDL/fe/y.tab.h:
        * TAO_IDL/include/ast_array.h:
        * TAO_IDL/include/ast_attribute.h:
        * TAO_IDL/include/ast_component.h:
        * TAO_IDL/include/ast_constant.h:
        * TAO_IDL/include/ast_decl.h:
        * TAO_IDL/include/ast_enum.h:
        * TAO_IDL/include/ast_eventtype.h:
        * TAO_IDL/include/ast_exception.h:
        * TAO_IDL/include/ast_expression.h:
        * TAO_IDL/include/ast_extern.h:
        * TAO_IDL/include/ast_generator.h:
        * TAO_IDL/include/ast_home.h:
        * TAO_IDL/include/ast_interface.h:
        * TAO_IDL/include/ast_interface_fwd.h:
        * TAO_IDL/include/ast_module.h:
        * TAO_IDL/include/ast_operation.h:
        * TAO_IDL/include/ast_sequence.h:
        * TAO_IDL/include/ast_structure.h:
        * TAO_IDL/include/ast_structure_fwd.h:
        * TAO_IDL/include/ast_type.h:
        * TAO_IDL/include/ast_typedef.h:
        * TAO_IDL/include/ast_union.h:
        * TAO_IDL/include/ast_valuetype.h:
        * TAO_IDL/include/fe_interface_header.h:
        * TAO_IDL/include/global_extern.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/include/utl_identifier.h:
        * TAO_IDL/include/utl_list.h:
        * TAO_IDL/include/utl_namelist.h:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/include/utl_string.h:
        * TAO_IDL/include/utl_tmpl/utl_exceptlist.h:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_identifier.cpp:
        * TAO_IDL/util/utl_idlist.cpp:
        * TAO_IDL/util/utl_list.cpp:
        * TAO_IDL/util/utl_namelist.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/util/utl_stack.cpp:
        * TAO_IDL/util/utl_string.cpp:
        * TAO_IDL/util/utl_strlist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_idlist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_list.cpp:
        * TAO_IDL/util/utl_tmpl/utl_strlist.cpp:

          - Replaced all usage of the IDL compiler's internal type
            idl_bool (typedef of long) with native bool. Also
            replaced similarly typedef'd values I_TRUE and I_FALSE.

          - Extended the effects of the -Ge 2 command line option
            (which previously replaced 'ACE_THROW' with 'throw'
            and removed all generation of environment variables
            and forms of 'ACE_CHECK' in user defined operations)
            to remove generation of environment variables and
            forms of 'ACE_CHECK' in all operations, including
            overrides of inherited operations, to replace
            all forms of 'ACE_TRY' and 'ACE_CATCH', and  to
            remove generation of 'ACE_ENDTRY'.

          - regenerated lex.yy.cpp and y.tab.cpp, along with
            the associated diff files.

          - removed the passing of 'TAO_IDL_INCLUDE_DIR/tao' path to
            the preprocessor, when 'TAO_IDL_INCLUDE_DIR' is used
            instead of the TAO_ROOT environment variable.

          - made many cosmetic changes to generated code formatting.

Thu Feb  9 14:06:09 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_global.cpp:

          Whitespace.

        * TAO_IDL/be/be_visitor_operation/tie_si.cpp:

          Prevent arguments called T from clashing with the temmplate class
          identifier. This fixes bug #2390.

        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:

          Prevent generation of spurious SystemException throw specs on
          valuetype factroy methods. This fixes bug #2375.

        * TAO_IDL/driver/drv_preproc.cpp:

          Change all '#include "foo.idl"' entries in IDL files to
          '#include <foo.idl>' before feeding them to the pre-processor.
          Prevents accidental processing of IDL files from the users tmp
          directory. This fixes bug #2399.

        * tests/Bug_2375_Regression/Bug_2375_Regression.mpc:
        * tests/Bug_2375_Regression/README:
        * tests/Bug_2375_Regression/test.cpp:
        * tests/Bug_2375_Regression/test.idl:
        * tests/Bug_2399_Regression/README:
        * tests/Bug_2399_Regression/included.idl:
        * tests/Bug_2399_Regression/mytmp/included.idl:
        * tests/Bug_2399_Regression/Bug_2399_Regression.mpc:
        * tests/Bug_2399_Regression/test.idl:
        * tests/Bug_2399_Regression/test.cpp:

          Regression tests for two of the above bugs.

Wed Feb 08 15:49:54 2006  Wallace Zhang  <zhangw@ociweb.com>

        * TAO version 1.4.9 released.

Wed Feb  8 04:46:33 UTC 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype_fwd/any_op_ch.cpp

          Added versioned namespace macros to generation of
          any insertion/extraction operators.  Thanks to Ossama
          Othman for pointing out this problem.

Tue Feb  7 22:40:54 UTC 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * tests/Sequence_Unit_Tests/bounded_basic_string_sequence.hpp
        * tests/Sequence_Unit_Tests/bounded_object_reference_sequence.hpp
        * tests/Sequence_Unit_Tests/bounded_object_reference_sequence_ut.cpp
        * tests/Sequence_Unit_Tests/bounded_reference_allocation_traits.hpp
        * tests/Sequence_Unit_Tests/bounded_sequence_cdr.hpp
        * tests/Sequence_Unit_Tests/bounded_sequence_cdr_ut.cpp
        * tests/Sequence_Unit_Tests/bounded_string_sequence.hpp
        * tests/Sequence_Unit_Tests/bounded_string_sequence_ut.cpp
        * tests/Sequence_Unit_Tests/bounded_value_allocation_traits.hpp
        * tests/Sequence_Unit_Tests/bounded_value_sequence.hpp
        * tests/Sequence_Unit_Tests/bounded_value_sequence_ut.cpp
        * tests/Sequence_Unit_Tests/bounded_wstring_sequence.hpp
        * tests/Sequence_Unit_Tests/fwd_mock_reference.cpp
        * tests/Sequence_Unit_Tests/fwd_mock_reference.hpp
        * tests/Sequence_Unit_Tests/generic_sequence.hpp
        * tests/Sequence_Unit_Tests/mock_reference.cpp
        * tests/Sequence_Unit_Tests/mock_reference.hpp
        * tests/Sequence_Unit_Tests/mock_stream.cpp
        * tests/Sequence_Unit_Tests/mock_stream.hpp
        * tests/Sequence_Unit_Tests/object_reference_sequence_element.hpp
        * tests/Sequence_Unit_Tests/object_reference_sequence_element_ut.cpp
        * tests/Sequence_Unit_Tests/object_reference_traits.hpp
        * tests/Sequence_Unit_Tests/object_reference_traits_base.hpp
        * tests/Sequence_Unit_Tests/range_checking.hpp
        * tests/Sequence_Unit_Tests/string_sequence_element.hpp
        * tests/Sequence_Unit_Tests/string_sequence_element_ut.cpp
        * tests/Sequence_Unit_Tests/string_traits.hpp
        * tests/Sequence_Unit_Tests/string_traits_base.hpp
        * tests/Sequence_Unit_Tests/testing_allocation_traits.hpp
        * tests/Sequence_Unit_Tests/testing_allocation_traits_ut.cpp
        * tests/Sequence_Unit_Tests/testing_object_reference_traits.hpp
        * tests/Sequence_Unit_Tests/testing_range_checking.hpp
        * tests/Sequence_Unit_Tests/testing_string_traits.hpp
        * tests/Sequence_Unit_Tests/unbounded_basic_string_sequence.hpp
        * tests/Sequence_Unit_Tests/unbounded_fwd_object_reference_sequence_ut.cpp
        * tests/Sequence_Unit_Tests/unbounded_object_reference_sequence.hpp
        * tests/Sequence_Unit_Tests/unbounded_object_reference_sequence_ut.cpp
        * tests/Sequence_Unit_Tests/unbounded_octet_sequence.hpp
        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_nocopy_ut.cpp
        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_ut.cpp
        * tests/Sequence_Unit_Tests/unbounded_reference_allocation_traits.hpp
        * tests/Sequence_Unit_Tests/unbounded_sequence_cdr.hpp
        * tests/Sequence_Unit_Tests/unbounded_sequence_cdr_ut.cpp
        * tests/Sequence_Unit_Tests/unbounded_string_sequence.hpp
        * tests/Sequence_Unit_Tests/unbounded_string_sequence_ut.cpp
        * tests/Sequence_Unit_Tests/unbounded_value_allocation_traits.hpp
        * tests/Sequence_Unit_Tests/unbounded_value_sequence.hpp
        * tests/Sequence_Unit_Tests/unbounded_value_sequence_ut.cpp
        * tests/Sequence_Unit_Tests/unbounded_wstring_sequence.hpp
        * tests/Sequence_Unit_Tests/value_sequence_tester.hpp
        * tests/Sequence_Unit_Tests/value_traits.hpp

          Fixes for versioned namespace compile problems.  Thanks to
          Ossama Othman (ossama_othman at symantec dot com) for providing
          assistance..

Tue Feb  7 21:07:35 UTC 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype_fwd/cdr_op_ch.cpp

          Surrounded valuetype CDR operators with versioned namespace
          macros.

        * performance-tests/Cubit/TAO/MT_Cubit/Globals.h
        * tests/NestedUpcall/MT_Client_Test/local_server.h

          Surrounded forward declarations of ACE/TAO types with versioned
          namespace macros.

Mon Feb  6 16:46:57 Pacific Standard Time 2006    Ossama Othman  <ossama_othman at symantec dot com>

        * TAO_IDL/be/be_visitor_interface_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/cdr_op_ch.cpp:

          Added ability to set "versioned" namespace opening and closing
          text.  Addresses problem where applications that do not enable
          versioned namespace support in their own code need not get
          "versioned" stubs/skeletons.  This was previously done for all
          other IDL types.  Forward interface declarations were
          overlooked.

        * tests/MT_BiDir/Sender_i.h:
        * tests/MT_BiDir/Server_Task.h:
        * tests/NestedUpcall/MT_Client_Test/local_server.h:
        * tests/OBV/Collocated/Forward/Server_Task.h:
        * tests/Portable_Interceptors/Collocated/Dynamic/Server_Task.h:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Server.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Server_Task.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Server_Task.h:
        * tests/Two_Objects/First_i.cpp:
        * tests/Two_Objects/First_i.h:
        * tests/Two_Objects/Object_Factory_i.h:
        * tests/Two_Objects/Second_i.h:

          Placed forward declarations for ACE/TAO types in the appropriate
          versioned namespace.

Fri Feb  3 15:16:41 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tests/Bug_1495_Regression/Server_Task.h:
        * tests/Bug_2084_Regression/Server_Task.h:
        * tests/Collocation_Exception_Test/Server_Task.h:
        * tests/Collocation_Oneway_Tests/Server_Task.h:
        * tests/Collocation_Tests/Server_Task.h:

          Place ACE_Manual_Event forward declaration within versioned
          namespace.

        * tests/Hang_Shutdown/Test.idl:
        * tests/Hang_Shutdown/client.cpp:
        * tests/Hang_Shutdown/server.cpp:
        * tests/Hang_Shutdown/test_i.h:

          Removed outer "TAO" namespace.  It served no useful purpose, and
          conflicted with the versioned TAO namespace used in the core TAO
          libraries.

Thu Feb  3 14:54:51 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * be/be_visitor_valuebox/valuebox_ci.cpp:
        * be/be_visitor_valuebox/valuebox_cs.cpp:
        * be_include/be_visitor_valuebox/valuebox_ci.h:
        * be_include/be_visitor_valuebox/valuebox_cs.h:

          Moved generated inlined virtual functions out of line.  The
          TAO_IDL valuebox code previously generated inlined virtual
          functions, including a virtual destructor, which can cause RTTI
          problems when attempting to downcast a valuebox object found in
          a shared library that was compiled with g++ 4.0's
          "-fvisibility-inlines-hidden" command line option.  The virtual
          functions marked as "inline" (as opposed to actually inlined)
          end up being left out of the export table, which breaks RTTI for
          valueboxes in the shared library.  [Bug 2392]

Fri Feb  3 10:44:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/TAO-metrics.html:
          Fixed hyperlink

Thu Feb  2 13:08:31 Pacific Standard Time 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:

          Added ability to set "versioned" namespace opening and closing
          text.  Addresses problem where applications that do not enable
          versioned namespace support in their own code need not get
          "versioned" stubs/skeletons.  This was previously done for all
          other IDL types.  Valuetypes were overlooked.

Thu Feb  2 12:20:16 Pacific Standard Time 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc
          (ImR_Activator_IDL, ImR_Locator_IDL):

          Added missing "tao_versioning_idl_defaults" base project.  Fixes
          syntax errors in versioned namespace builds.

Thu Feb  2 17:48:16 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Makefile.am:

          Must build tests before examples, as the Notify Service examples
          use a Notify Service test library.

Wed Feb  1 21:02:45 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_predefined_type.cpp:

          Fixed a bug in the computation of repository ids for
          predefined types.

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp (fill_valuemember_sequence):

          Fixed a bug in retrieving the repository path to the type of
          a valuetype member.

        * orbsvcs/IFR_Service/adding_visitor.cpp(create_value_member):

          Fixed a bug in looking up a valuetype member's type in the
          repository.

Wed Feb  1 20:07:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/pluggable_messaging.html:
          Added some info how to load IIOP Lite when the strategies lib
          is used. Thanks to Kobi Cohen Arazi <kobi dot cohenarazi at gmail
          dot com> for reporting this.

Wed Feb  1 14:46:55 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * NEWS:

          Describe changes to Telecom Log Service Strategy interface.

Wed Feb  1 14:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2345_Regression/Bug_2345_Regression.mpc:
        * tests/Bug_2345_Regression/server.cpp:
          Link in the ImR_Client library explicitly, this is needed for
          this test

Wed Feb  1 13:25:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/pluggable_messaging.html:
          Small improvements to improve readability

Wed Feb  1 13:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Options.html:
          Small fix

Tue Jan 31 19:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/rtcorba/issues.html:
          Fixed bugzilla link

Mon Jan 30 22:04:39 UTC 2006  Ming Xiong <ming.xiong@vanderbilt.edu>

        * TAO/tao/PortableServer/Root_POA.h

         Improved documentation for find_servant_priority ()

Mon Jan 30 17:22:50 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * NEWS:

          Moved the NEWS entry below to the right place.
          Updated info for support for RTCORBA Keepalive.

Mon Jan 30 17:09:25 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * NEWS:

          Record -ORBKeepalive option.

Sun Jan 29 22:23:21 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp (DRV_usage):
        * TAO_IDL/be/be_global.cpp (usage):

          Moved all all usage messages about -Wb options to the IDL
          compiler back end, which they are specific to. Thanks to
          Andy Gokhale <a.gokhale@vanderbilt.edu> for pointing
          out that these usage message were appearing with the
          idl_to_picml executable, where they are not relevant.

Sun Jan 29 15:01:13 UTC 2006  Martin Corino <mcorino@remedy.nl>

        * tao/IIOP_Profile.cpp:

          Fixed some compile problems with the enhancements in
          TAO_IIOP_Profile::to_string() for IPv6 enabled builds.

Sat Jan 28 23:15:13 UTC 2006  Martin Corino <mcorino@remedy.nl>

        * tao/IIOP_Profile.cpp:

          Added enhancement to TAO_IIOP_Profile::to_string() to return
          *all* endpoints in profile embedded in a corbaloc URL like:
          corbaloc:iiop:1.2@host:port,iiop:1.2@host:port,.../key
          Thanks to Victor Chernenko (GE Healthcare) for suggesting this
          and providing a first patch.

Sat Jan 28 22:22:13 UTC 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp

          Fixed unused argument warning.

Fri Jan 27 22:03:14 UTC 2006  Ming Xiong <ming.xiong@vanderbilt.edu>

        * tao/PortableServer/ServantRetentionStrategy.h
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp
        * tao/PortableServer/ServantRetentionStrategyRetain.h

        Add a find_servant_priority () method to
        PortableServer::ServantRetentionStrategy
        PortableServer::ServantRetentionStrategyNonRetain
        PortableServer::ServantRetentionStrategyRetain

        * tao/PortableServer/Root_POA.cpp
        * tao/PortableServer/Root_POA.h

        Add a find_servant_priority () method to TAO_Root_POA

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp

        Change the way TAO_RT_Collocation_Resolver::is_collocated
        retrieves servant priority. In particular, it will use
        poa->find_servant_priority () instread of locate_servant_i ()

        This change is aimed at fixing TAO Bug 2325, which has a misuse
        of Servant_Upcall, causing the aom entry reference counts to
        be incorrectly incremented.Thanks to Abhi (abhi dot qualcomm
        dot com) and Johnny for reporting this bug and helping out
        with the solution.


Fri Jan 27 14:53:45 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Add some .in()'s to help out old senile compilers who can't
          figure things out on their own.

Fri Jan 27 03:51:42 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          If examples and/or tests have been disabled, don't bother
          generating subdirectory hierarchies or Makefiles for them.

Fri Jan 27 02:41:12 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * Makefile.am:
        * orbsvcs/Makefile.am:

          Use BUILD_EXAMPLES AND BUILD_TESTS automake conditionals to
          control whether TAO's (and TAO's ORBservice's) examples and
          tests are built.

        * configure.ac:

          Invoke TAO_ENABLE_EXAMPLES and TAO_ENABLE_TESTS.

        * m4/tao.m4:

          Added TAO_ENABLE_EXAMPLES and TAO_ENABLE_TESTS autoconf macros.
          These enable/disable BUILD_EXAMPLES and BUILD_TESTS automake
          conditionals.

Thu Jan 26 20:36:47 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/be_produce.cpp(BE_cleanup):

          Removed code to destory the temporary holding scope entry in
          the repository after each IDL file is processed. Instead the
          lifetime of that entry is now tied to the repository itself.

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp (visit_typedef):

          Removed code that replaces a typedef with the same repo id
          with a new entry, which would invalidate any references to
          the typedef entry that other entries may hold. The IFR will
          now throw the BAD_PARAM minor code that corresponds to an
          attempt to create an entry for a repo id that already exists
          in the repository. Thanks to Richard Spence
          <richard dot spence dot extern at icn dot siemens dot de>
          for reporting the problem when the typdef is used as an
          operation parameter. This closes [BUGID:2381].

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp (name_exists):

          Changed the loop to be a FOR loop using the explicit section
          names, rather than a while loop calling enumerate_sections()
          to get each section name.

Thu Jan 26 15:37:12 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.h:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Added lock() method to LogRecordStore that returns a reference
          to a ACE_SYNCH_RW_MUTEX.  Changed Log_i and Hash_Iterator_i to
          use the lock (via the ACE_READ_GUARD... and ACE_WRITE_GUARD...
          macros), while removing its use within the Hash_LogRecordStore
          methods themselves.

          This change avoids any race conditions in read-modify-write
          operations (e.g. the set_* methods) that exist when locking is
          done entirely within the LogRecordStore.

          It also avoids acquiring and releasing the lock multiple times
          in the course of a single operation, which resulted in a modest
          performance improvement (~15%) for methods like write_records()
          and write_recordlist().

          In the future, we may want to abstract locking so instead of a
          rwlock it may represent a database session or transaction.

Mon Jan 23 15:50:27 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Obtain the capacity alarm thresholds, log QoS, and week mask
          from the record store.

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:

          Added methods to get and set the log QoS and week mask.

Tue Jan 24 20:37:55 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Connection_Handler.cpp:

          Extended Simon McQueen's Fri Jan 20 17:11:49 UTC 2006 addition
          of support for SO_KEEPALIVE to include taking the value from
          RTCORBA::TCPPrototocolProperties::keep_alive, when RTCORBA is
          used, and the application is using a Server or Client
          ProtocolPolicy.

        * docs/rtcorba/issues.html:

          Removed lack of support for the keep alive protocol property
          from the list of issues.

Tue Jan 24 19:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Borland/ChatClientWnd.cpp:
          Fixed parameter unused warnings

Tue Jan 24 15:24:58 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Calling create_reference_with_id() (via create_log_reference) in
          the constructor and/or ::init() appears to result in an infinate
          loop within the ORB.  Until that's resolved, defer obtaining the
          logs object reference until it's needed.

Tue Jan 24 14:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.h:
          Fixed export macro in ACE_FACTORY_DECLARE

Tue Jan 24 10:20:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:
          Added -ORBUseLocalMemoryPool option info.

Mon Jan 23 12:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlot/client.cpp:
        * tests/Portable_Interceptors/AdvSlot/server.cpp:
          Fixed compile warnings

Sun Jan 22 18:32:03 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:

          Use _Serv versions of the export macros.  It seems I missed
          some that should have been part of this:

          Tue Jan 17 22:26:52 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

Sun Jan 22 18:24:37 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.cpp:

          Update ACE_FACTORY_DEFINE() that wasn't updated when splitting
          the Concurrency Service libraries.

Sun Jan 22 16:54:55 UTC 2006  Boris Kolpackov  <boris@kolpackov.net>

        * tests/Portable_Interceptors/AdvSlot/server.cpp:

          Fixed a problem with VC6.

Sun Jan 22 02:42:21 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Added operator== and operator!= for IDL generated types
          DsLogAdmin::QoSList and DsLogAdmin::TimeInterval. Use them to
          compare old and new log attribute values to decide whether to
          send an AttributeValueChange event.

Sun Jan 22 02:34:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Added a new member variable to store the log channel's object
          reference.  Until now, the code was calling _this() each time
          the reference was needed.  Not only was this inefficient (the
          reference is a field of each of the the structures used for log
          notification events, so it's needed relatively frequently), but
          also it resulted in the servant being activated in the RootPOA,
          so a transient rather than persistent IOR was returned.

        * orbsvcs/orbsvcs/Log/LogNotification.cpp:

          The event's logref field wasn't being set in state_change() and
          threshold alarm(), even though the log channel object reference
          was being passed to the methods.

Sat Jan 21 01:56:30 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log_i.cpp:

          Call reset_capacity_alarm_threshold () in set_log_full_action()
          if the value is changed.

          If the log full action is DsLogAdmin::halt, capacity threshold
          alarms are triggered when the size of a log exceeds one if its
          capacity alarm thresholds; if the log full action is ::wrap,
          capacity threshold alarms are triggered "as if coupled to a
          guage that counts from zero to the highest capacity threshold
          value".  The specification doesn't describe required behavior
          when changing from one to the other.  Since the recordkeeping
          needed for each option is so different, resetting may be the
          only realistic option --- at least that way we won't be using
          one set of data for the other.

        * orbsvcs/orbsvcs/Log_i.cpp:

          The current revision of the log service spec is inconsistent
          whether an AttributeValueChange event should generated only if
          the attribute's value actually changed or whether it should be
          sent unconditionally.  TAO's log service implements the former,
          which I believe to be the most useful behavior.  Nevertheless,
          I've filed a defect report with the OMG for clarification.  I've
          also added a block comment to this effect before each instance
          to alert future maintainers.

Sat Jan 21 01:02:46 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log_i.cpp:
        * orbsvcs/orbsvcs/Log_i.h:

          Changed set_week_mask() to avoid recomputing week_intervals_,
          updating the record store, and sending an AttributeValueChange
          event if the new mask has the same value as the old.

          Added operator== and operator!= for many IDL generated types and
          sequences.  Use them to compare old and new log attribute values
          to decide whether to send an AttributeValueChange event.

        * orbsvcs/orbsvcs/Log_i.cpp:

          Although set_week_mask() updated week_intervals_ (an optimized
          representation) from the new mask, it didn't actually save it;
          this resulted in get_week_mask() returning the original value.

Fri Jan 20 17:11:49 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tao/IIOP_Connection_Handler.cpp:
        * tao/ORB_Core.cpp:
        * tao/params.h:
        * tao/params.i:
        * tao/params.cpp:

          Add configuration option -ORBKeepalive to allow users to specify
          that the SO_KEEPALIVE option be set on TCP sockets.

          This fixes bug #2374.

        * docs/Options.html:

          Add documentation for the above.

Fri Jan 20 16:30:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * docs/Options.html
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/Resource_Factory.cpp
        * tao/Resource_Factory.h
        * tao/default_resource.cpp
        * tao/default_resource.h
          Fix for Bug 2373.
          Add run-time option -ORBUseLocalMemoryPool (0|1) which defaults
          to the compile time option TAO_USES_LOCAL_MEMORY_POOL.

Fri Jan 20 15:30:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tao/CDR.cpp:
        * tao/CDR.h:
        * tao/Synch_Reply_Dispatcher.cpp:
          Fix for Bug 2372.
          Possiably unnecessary reply_cdr_.clone_from() inside
          TAO_Synch_Reply_Dispatcher::dispatch_reply() averted.

Fri Jan 20 11:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlot/*:
          Added new regression from Boris Kolpackov
          <boris at dre dot vanderbilt dot edu> for a bug with PI. Not fixed
          yet, but having a regression will make finding the problem a lot
          easier

Fri Jan 20 11:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitializer_Registry_Impl.cpp:
          Fixed bug related to the slot functionality of PICurrent, when the
          slot count is not equal to zero and there is no PICurrent yet,
          then force the creation of PICurrent by the ORB to make sure we
          don't loose the slot_count. Thanks to Boris Kolpackov
          <boris at dre dot vanderbilt dot edu> for providing the patch

Thu Jan 19 02:45:48 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log_i.cpp:

          Call reset_capacity_alarm_threshold () in set_max_size () and
          set_capacity_alarm_thresholds () if the value is changed.  If
          either the max size or the threshold list is changed, the old
          capacity index no longer makes sense.

          Reseting the index means that a ThresholdAlarm event will be
          sent after the next threshold is crossed.  It is unclear whether
          this is the correct behavior.  An argument could be made that an
          event should be sent for each threshold that has already been
          crossed given the new max size or capacity alarm threshold list.

          Unfortunately the current version of the specification does not
          describe what is the correct behavior.

Wed Jan 18 23:35:24 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate.

        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Fix typos in symbol export header file names.

Wed Jan 18 19:43:11 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/RTEventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogNotification.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:

          Now that we use the *_Serv_Export versions of the symbol export
          macros, we need to #include "*_serv_export.h"

Wed Jan 18 19:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Slot/*:
          Added new regression from Boris Kolpackov
          <boris at dre dot vanderbilt dot edu> for a bug with PI. Not fixed
          yet, but having a regression will make finding the problem a lot
          easier

Wed Jan 18 18:41:09 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Concurrency/CC_Lock.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:

          Now that we use the *_Serv_Export versions of the symbol export
          macros, we need to #include "*_serv_export.h"

Wed Jan 18 13:44:07 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Current.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:

          Reverted a portion of my memory leak changes.  I was mistaken as
          to the reference counting.

        * tests/RTScheduling/VoidData/test.h:

          Dereference the "something" pointer as was most likely the
          original intention.

Wed Jan 18 01:42:04 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * NEWS:

          Update for splitting ORB service libraries.

Tue Jan 17 23:03:46 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Tue Jan 17 22:26:52 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Concurrency/CC_Lock.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.h:
        * orbsvcs/orbsvcs/Log/RTEventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogNotification.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:

          Use _Serv_ version of the symbol export macros.

Tue Jan 17 20:36:35 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
          Update project to inherit from rteventlogadmin_serv.mpb ---
          rteventlogadmin.mpb now only brings in the client stubs.

        * orbsvcs/orbsvcs/TAO_RTEventLogAdmin.pc.in:
        * orbsvcs/orbsvcs/TAO_RTEventLogAdmin_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_RTEventLogAdmin_Skel.pc.in:

          New files, pkg-template files for RTEventLogAdmin client stub,
          servant skeleton, and service implementation libraries.

        * orbsvcs/orbsvcs/Log/rteventlog_serv_export.h:
        * orbsvcs/orbsvcs/Log/rteventlog_skel_export.h:

          New export headers for RTEventLogAdmin servant skeleton and
          service implementation libraries.

        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Split the RTEventLogAdmin Service (A varient of the OMG Telecom
          Logging Service that uses TAO's Real-Time Event channels) into
          three libraries: RTEventLogAdmin, RTEventLogAdmin_Skel, and
          RTEventLogAdmin_Serv for client stubs, servant skeletons, and
          service implementation respectively.

Tue Jan 17 13:31:40 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:

          Changed #include to use "" instead of <>.

Tue Jan 17 02:32:37 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/TAO_RTEvent.pc.in:
        * orbsvcs/orbsvcs/TAO_RTEvent_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_RTEvent_Skel.pc.in:

          New files, pkg-template files for RTEvent client stub,
          servant skeleton, and service implementation libraries.

        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:

          Added Pkgconfig_Files section for pkg-config templates.

Tue Jan 17 02:21:56 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/TAO_CosEvent_Serv.pc.in:

          Somehow this pkg-config template was describing the
          CosNaming_Serv library.

Tue Jan 17 01:50:24 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:

          Change type of property_lookup_ map from Any_var to Any, similar
          to what was done for the Notify_Constraint_Visitor some time
          ago.  This allows us to avoid dynamically allocating Anys in
          the constructor for increased performance and reliability.

          I've measured a ~10% performance boost from this change.

Mon Jan 16 17:57:53 UTC 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/AV.mpc

          Fixed a linking error on OS X.

Mon Jan 16 16:49:27 UTC 2006  Olli Savia  <ops@iki.fi>

        * tao/AnyTypeCode/SystemExceptionA.cpp:
        * tao/Exception.h:
        * tao/RTScheduling/Current.cpp:
        * tao/SystemException.h:
        * tao/SystemException.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
          Get rid of ACE_HAS_PREDEFINED_THREAD_CANCELLED_MACRO.
          If macro THREAD_CANCELLED is defined we now simply undef it.

Mon Jan 16 14:17:47 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:

          Delete the stored memory in _tao_decode() before calling
          demarshal_value() to avoid leaking memory.

        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Distributable_Thread.h:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/RTScheduling/Request_Interceptor.h:
        * tao/RTScheduling/Request_Interceptor.cpp:

          Corrected various misuses of memory management.

        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp:

          Added memory cleanup code so these tests do not contribute to
          the memory leak list.

        * tests/OBV/TC_Alignment/test_i.cpp:

          Call shutdown() on the ORB from within test_i::shutdown() instead
          of destroy().  Calling destroy() within this context is not
          allowed by CORBA 2.3.

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/test_i.cpp:

          Call shtdown() on the ORB with a wait_for_completion of zero
          instead of 1.  The later is not allowed by CORBA 2.3.

        * tests/Portable_Interceptors/IORInterceptor/server.cpp:

          This test registers a portable interceptor with the ORB.  If
          destroy() is not called on the ORB the interceptor initializer
          will be leaked.

        * tests/Queued_Message_Test/Queued_Message_Test.cpp:

          The TAO_Asynch_Queued_Message needs to know if it is allocated on
          the heap in order to clean itself properly.

        * tests/RTScheduling/Current/Thread_Task.h:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Current/test.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Scheduler.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * tests/RTScheduling/VoidData/test_client.cpp:

          Corrected various misuses of memory management.

Mon Jan 16 05:51:14 2006  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/examples/ImR/Combined_Service/test.cpp (assertTrue):
          Make sure to #include <string> so that "std::" makes sense.
          Thanks to Ian Zagorskih <ianzag at megasignal dot com> for this
          fix.  This fixes bugid 2362.

Sun Jan 15 19:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1869_Regression/client.cpp:
          Fixed conversion warning

Sun Jan 15 18:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1869_Regression/client.cpp:
          Fixed unused argument warning

Sun Jan 15 05:44:45 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Concurrency_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
        * orbsvcs/tests/Concurrency/Makefile.am:
        * orbsvcs/tests/Property/Makefile.am:

          Regenerated.

        * orbsvcs/tests/Property/Property.mpc:

          Update project to inherit from property_serv.mpb, as this
          test uses a collocated concurrency service --- property.mpb
          now only brings in the client stubs.

        * orbsvcs/Concurrency_Service/Concurrency_Service.mpc:

          Update project to inherit from concurrency_serv.mpb, as this
          test uses a collocated concurrency service --- concurrency.mpb
          now only brings in the client stubs.

        * orbsvcs/orbsvcs/TAO_CosConcurrency.pc.in:
        * orbsvcs/orbsvcs/TAO_CosConcurrency_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosConcurrency_Skel.pc.in:

          Split TAO_CosConcurrency.pc.in pkg-config template into one for
          each library.

        * orbsvcs/orbsvcs/Concurrency/concurrency_serv_export.h:
        * orbsvcs/orbsvcs/Concurrency/concurrency_skel_export.h:

          New export headers for CosConcurrency servant skeleton and
          service implementation libraries.

        * orbsvcs/orbsvcs/CosConcurrency.mpc:

          Split CosConcurrency Service into three libraries:
          CosConcurrency, CosConcurrency_Skel, and CosConcurrency_Serv for
          client stubs, servant skeletons, and service implementation
          respectively.

        * orbsvcs/orbsvcs/TAO_CosProperty.pc.in:
        * orbsvcs/orbsvcs/TAO_CosProperty_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosProperty_Skel.pc.in:

          Split TAO_CosProperty.pc.in pkg-config template into one for
          each library.

        * orbsvcs/orbsvcs/Property/property_serv_export.h:
        * orbsvcs/orbsvcs/Property/property_skel_export.h:

          New export headers for CosProperty servant skeleton and service
          implementation libraries.

        * orbsvcs/orbsvcs/CosProperty.mpc:

          Split CosProperty Service into three libraries:
          CosProperty, CosProperty_Skel, and CosProperty_Serv for client
          stubs, servant skeletons, and service implementation
          respectively.

Sun Jan 15 05:35:57 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:
        * orbsvcs/tests/InterfaceRepo/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/Makefile.am:

          Added autoconf build support for this new test.

Sat Jan 14 23:44:39 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Changed TAO_Log_i::set_capacity_alarm_thresholds() to compare
          the new threshold list against the old.  If they're the same,
          we don't send a change notification.

          Added operator== and operator!= for DsLogAdmin::
          CapacityAlarmThresholdList.

Sat Jan 14 16:29:47 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/TAO_CosEvent.pc.in:
        * orbsvcs/orbsvcs/TAO_CosNaming.pc.in:
        * orbsvcs/orbsvcs/TAO_CosTrading.pc.in:
        * orbsvcs/orbsvcs/TAO_DsLogAdmin.pc.in:
        * orbsvcs/orbsvcs/TAO_ETCL.pc.in:

          Changed to Require TAO_AnyTypeCode.

Sat Jan 14 09:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolder_i.h:
          Fixed casing of include

Fri Jan 13 13:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1869_Regression/*:
          Added this regression to cvs, no fix yet and regression could
          be improved more to give more output to the user

Fri Jan 13 12:49:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolder_i.{h,cpp}:
        * tao/Messaging/Messaging_ORBInitializer.{h,cpp}:
          Added a OBV Factory for the ExceptionHolder. At the moment we use
          AMI with collocation disabled the ExceptionHolder is marshaled
          and then tried to be demarshaled and then we need an OBV factory.
          For system exceptions things work fine now, for user exceptions
          always an UNKNOWN exception occurs in the _excep method, the
          meta data which user exceptions we could throw is not available
          in the current callstack so we just can't recreate the correct
          user exception, have to see how we could fix that but
          this is at least a good step in the direction. This only works
          for the new AMI mapping. This is part of the fix for bugzilla
          bug 2350. Thanks to Alan Stokes <alan at alanstokes dot org dot uk>
          for reporting this.

Fri Jan 13 12:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/simple_client.cpp:
          Print out the exception when we get a not expected exception

Fri Jan 13 11:43:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueBase.cpp:
          When no OBV Factory is found, throw a MARSHAL exception with
          minor code 1 and completed MAYBE. This fixes bugzilla bug
          2354

Fri Jan 13 04:57:20 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:

          Changed to #include "Thread_Lane_Resources.h".  This was missed
          in this change:

          Thu Jan 12 00:31:27 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

          because I didn't have SSL enabled at the time.

Thu Jan 12 19:27:12 UTC 2006  Tim Bradley  <bradley_t@ociweb.com>

        * tests/Portable_Interceptors/Collocated/Dynamic/Collocated_Test.cpp
        * tests/Portable_Interceptors/Collocated/Dynamic/Server_Task.cpp
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Collocated_Test.cpp
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Server_Task.cpp

          The files listed above were modified to fix a problem that was
          observed in two similar tests.  The original problem was observed
          to occur when the test application was shutting down, and is not
          100% repeatable.  It is theorized that a race condition in the
          existing test code, causing the tests to sometimes succeed.

          When the test applications did fail, some platforms caused the
          message "pure virtual method called" to be printed to standard
          error.  A core file, created using Linux (FC3), showed a somewhat
          corrupt stack trace pointing to the implementation of the
          shutdown() operation in the Visual_i (servant) class (test_i.cpp).

          Both tests are very similar, and the following description applies
          to both.  Note that there are details not being described (such
          as the Portable Interceptor usage), but are not important to the
          problem that was fixed (hopefully).

          The test is a "collocation" (thru_poa) test, consisting of one
          application/executable.  A single IDL interface (Visual)
          is declared, and a servant class (Visual_i) is defined that
          implements the interface.

          The test application creates two active objects (ClientTask and
          ServerTask), and two ORBs.  Each active object is given its own
          ORB to use, and then each is activated in a separate thread.
          The "mainline" thread waits until both of the task threads complete,
          performs the expected vs. actual results comparison, and then exits.

          The ServerTask::svc() does the following:

            - Obtain the RootPOA
            - Create/activate the Visual_i servant object
            - Save the IOR to a file
            - Run the (server) ORB event loop.
            - Destroy the RootPOA
            - Destroy the (server) ORB.

          The ClientTask::svc() does the following:

            - Read/convert/narrow the server-side's IOR file into a
              "Visual" object reference (using the ClientTask's ORB).
            - Invoke each of the operations on the (Visual) object reference.
            - Invoke the "shutdown" operation on the (Visual) object reference.

          The problem lies with the servant's (Visual_i) implementation of
          the "shutdown" operation.  The IDL interface, Visual, declares the
          "shutdown" operation to be a "oneway" operation.  The
          Visual_i::shutdown() method is implemented to invoke
          "shutdown(false)" on the (server) ORB.  This is a rather common
          approach taken by many other TAO tests, but the approach doesn't
          work here because the servant object is collocated (thru_poa).

          The "oneway" operations do not work the same way under collocated
          versus remote request contexts.  A collocated oneway request gets
          treated as if it were a synchronous request, for it is the client's
          "requesting thread" that carries out the entire dispatching and
          invocation of the appropriate method on the collocated servant
          object.  Control is not returned to the client's requesting thread
          until the request is completely finished.

          So, the steps that lead up to the problem in the tests is that
          the ClientTask's thread is the thread that ends up invoking
          shutdown() on the (server) ORB.  At some point soon afterwards,
          and before the ClientTask's thread has been given back control,
          the (server) ORB event loop being run in the ServerTask completes.
          This causes the ServerTask thread to continue on in its logic,
          which is to destroy the (server) RootPOA, destroy the (server) ORB,
          and then go away (the ServerTask thread, that is).  Meanwhile,
          the ClientTask's thread left executing a method in an object that
          has been destroyed.  When the stack is unwound, bad things happen,
          and a segmentation fault, with a somewhat corrupt stack trace
          is produced.

          The fix to the tests was to stop destroying the (server) ORB
          in the ServerTask thread.  Instead, the application mainline code
          was modified (Collocated_Test.cpp) to destroy the (server) ORB
          after both the ServerTask and the ClientTask threads have
          completed.


Thu Jan 12 11:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
          Replaced some return 0, with return false

Thu Jan 12 11:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Small updates

Thu Jan 12 10:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/tests/SimplePerformance/server.cpp:
        * examples/PluggableUDP/tests/SimplePerformance/client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          In rtp model don't do main redefinition

Thu Jan 12 09:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
          Added include of AnyTypeCode/Any.h to get all operator <<

Thu Jan 12 00:49:53 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/TAO_CosNotification.pc.in:

          Add TAO_CosEvent to Requires.

        * orbsvcs/orbsvcs/TAO_CosNotification_Skel.pc.in:

          Add TAO_CosEvent_Skel to Requires.

Thu Jan 12 00:31:27 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_home.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_valuebox.cpp:
        * examples/Kokyu_dsrt_schedulers/Task_Stats.inl:
        * examples/RTCORBA/Activity/Task_Stats.inl:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.cpp:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * orbsvcs/orbsvcs/Shutdown_Utilities.cpp:
        * orbsvcs/orbsvcs/AV/TCP.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Options.h:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.h:
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:
        * orbsvcs/orbsvcs/Notify/Random_File.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Factory.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Activation_Manager.h:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.inl:
        * tao/Any_Insert_Policy_T.h:
        * tao/ORB_Table.inl:
        * tao/WrongTransactionC.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.inl:
        * tao/Codeset/UTF16_BOM_Factory.cpp:
        * tao/Codeset/UTF8_Latin1_Factory.cpp:

          On systems where ACE_TEMPLATES_REQUIRE_SOURCE is not defined,
          template implementation files (*_T.cpp) are not #included by the
          corresponding template header file (*_T.h).  So headers that had
          been implicitly #included via the template implementation file,
          may now need to be #included explicitly.

          This change explicitly #includes those headers (most commonly
          ace/Log_Msg.h and ace/Auto_Ptr.h).  Now TAO can be built with
          autoconf on Solaris using the Sun Studio C++ compiler.

          Thanks to Vladimir Panov for reporting this problem and
          providing the initial patch.

Tue Jan 10 19:38:49 UTC 2006  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:

          Fix VC++ v6.0 compile error and conform to ACE coding standards.

Tue Jan 10 19:26:58 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * tests/Portable_Interceptors/Collocated/Dynamic/Collocated_Test.cpp:
        * tests/Portable_Interceptors/Collocated/Dynamic/Server_Task.cpp:

        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Collocated_Test.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Server_Task.cpp:

          On behalf of Tim Bradley (bradley_t@ociweb.com), applying these
          changes to resolve the failure of the two tests.

Tue Jan 10 10:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2349_Regression/server.cpp:
          Added missign return

Mon Jan  9 23:33:10 UTC 2006  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Notify/lib/common.h:

          Correcting a build problem due to the wrong placement of an
          export modifier in the function's declaration.

Mon Jan  9 13:51:05 MST 2006  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:

          Fixed an Interface Repository inheritance bug.
          Thanks to Bryan Cassell <BryanCassell@iti-team.com> for identifying
          the problem.
          Thanks to Jeff Parsons <j.parsons@vanderbilt.edu> for reviewing
          the changes.

        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/IFR_Inheritance_Test.mpc:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/README:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/IFR_Inheritance_Test.idl:

          An automated test of the bug.

Mon Jan  9 16:20:05 UTC 2006  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Notify/lib/common.cpp:

          Correcting a build problem due to an unnecessary export in the
          function's definition.

Mon Jan  9 13:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2349_Regression/*:
          Added regression for this test. Not fixed yet, just to make
          clear that we have this bug, thanks to Chad Elliot
          <elliott_c at ociweb dot com> for creating this regression
          test.

Mon Jan  9 13:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Security/SSLIOP-INSTALL.html:
          Updated this file, update references to local files instead
          of webbased and refer to ACE-INSTALL.html for how to build
          ACE_SSL

Mon Jan  9 09:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueFactory_Map.h:
          No need to export this class from the Valuetype library

Mon Jan  9 08:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Factory/client.cpp:
          Extended this test to check if we get a marshal exception with
          minor code 1 when using OBV without a valuefactory registered.
          This is added for bugzilla bug 2354

Mon Jan  9 08:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          Made this test compiling with VxWorks and pthread support

Fri Jan  6 19:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/run_test.pl:
          Extended this test to also run the client with -ORBCollocation
          no. This will fail at this moment, this bug seems to be there
          already for a long time, not it is visible for everyone

        * tao/Valuetype/ValueBase.cpp:
          Use true/false instead of 0/1

Fri Jan  6 18:25:18 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:

          Regenerated.

Fri Jan  6 16:14:56 UTC 2006  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/lib/common.h:
        * orbsvcs/tests/Notify/lib/common.cpp:

          Newly created to give permanent home to previously scattered and
          duplicated functionality. Updated to use the
          ACE_[U]INT[16|32|64]_FORMAT_SPECIFIER macros. Thanks to Johnny
          Willemsen <jwillemsen@remedy.nl> for suggesting it.

        * orbsvcs/tests/Notify/Blocking/common.h:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Discarding/common.h:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Ordering/common.h:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.h:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.h:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:

          Removed these files to eliminate duplication. Moved the code to
          the lib/common.{cpp|h}

        * orbsvcs/tests/Notify/Blocking/Blocking.mpc:
        * orbsvcs/tests/Notify/Discarding/Discarding.mpc:
        * orbsvcs/tests/Notify/Ordering/Ordering.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Seq_Multi_ETCL_Filter.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Seq_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/performance-tests/Filter/Filter.mpc:

          Updated to remove references to common.{cpp|h}

        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:

          Updated to remove references to common.{cpp|h}

Fri Jan  6 12:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueBase.cpp:
          When no OBV Factory is found, tell in the error message for what we
          are lacking an OBV Factory.

Thu Jan  5 19:56:43 2006  Michi Henning <michi@triodia.com>

        * End of bloatware predicted.

Fri Jan  6 03:16:41 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * interop-tests/wchar/Makefile.am:

          Regenerated.

        * interop-tests/wchar/interop_wchar.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Fri Jan  6 02:34:55 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:

          Moved static const definitions out of class declaration as VC6
          doesn't support this.  Thanks to Wallace Zhang for the initial
          patch for Notify Service, which I've adapted for the Logging
          Service.

Fri Jan  6 01:57:00 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/ior_corbaloc/Makefile.am:

          Regenerated.

        * examples/ior_corbaloc/ior_corbaloc.mpc:

          Changed client and corbaname client projects not to inherit
          from portableserver.  These are pure clients.

          Changed corbaname client project to not add status_i.cpp to
          Source Files section.  It's not part of the client.

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

        * examples/ior_corbaloc/corbaname_client.cpp

          Changed to #include "corbanameC.h" instead of
          "ior_corbaloc_client_i.h", which is actually part of the
          client project.

Thu Jan  5 15:50:47 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time/Makefile.am:

          Regenerated.

        * examples/Simple/bank/bank.mpc:
        * examples/Simple/chat/chat.mpc:
        * examples/Simple/echo/echo.mpc:
        * examples/Simple/grid/grid.mpc:
        * examples/Simple/time/time.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Thu Jan  5 15:44:15 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * Release:

          Add TAO/m4 subdirectory to CONTROLLED_FILES.

Thu Jan  5 10:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/simple_client.cpp:
          Small layout fixes

        * tests/AMI/client.cpp:
          Use prefix decrement

Thu Jan  5 09:52:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/IFR_Service/be_init.cpp:
          Fixed 64bit conversion warnings

Wed Jan  4 21:27:38 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * ChangeLog:

          Changed "add-log-time-format" to a really ugly lambda expression
          that formats changelog timestamps in UTC and works with both GNU
          Emacs and XEmacs.

Wed Jan  4 11:08:58 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/ast/ast_expression.cpp:

          Fix cut-n-pasto where unsigned long longs / long longs were
          compared with a floating point zero literal. This should be
          benign, but triggers a VC6 bug.

Wed Jan  4 09:54:01 2006  David Giovannini  <giovannd@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_Loader.cpp:
        * orbsvcs/ImplRepo_Service/Activator_NT_Service.cpp:
        * orbsvcs/ImplRepo_Service/Activator_Options.h:
        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/Adapter_Activator.cpp:
        * orbsvcs/ImplRepo_Service/AsyncStartupWaiter_i.h:
        * orbsvcs/ImplRepo_Service/AsyncStartupWaiter_i.cpp:
        * orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * orbsvcs/ImplRepo_Service/INS_Locator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.idl:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/ImplRepo_Service/Iterator.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Loader.h:
        * orbsvcs/ImplRepo_Service/Locator_Loader.cpp:
        * orbsvcs/ImplRepo_Service/Locator_NT_Service.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Options.h:
        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:
        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.h:
        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.cpp:
        * orbsvcs/ImplRepo_Service/Server_Info.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:

          Corrected white-space to match ACE/TAO guidelines.
          Adding a const to an int in Imr_Locator_i.cpp.
          Changing a command line behavior for defualt activator
          in tao_imr_i.cpp.

Tue Jan  3 21:34:30 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * ChangeLog:

          Add "indent-tabs-mode: nil" to Local Variables at end of file.
          Untabify.
          Delete-trailing-whitespace.

Tue Jan  3 11:27:56 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:

          Regenerated.

        * examples/OBV/Typed_Events/Typed_Events.mpc:
        * examples/POA/DSI/POA_DSI.mpc:
        * examples/POA/Default_Servant/POA_Default_Servant.mpc:
        * examples/POA/Forwarding/POA_Forwarding.mpc:
        * examples/PluggableUDP/tests/Basic/Basic.mpc:
        * examples/PluggableUDP/tests/Performance/Performance.mpc:
        * examples/PluggableUDP/tests/SimplePerformance/SimplePerformance.mpc:
        * examples/Quoter/Quoter.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Tue Jan  3 10:39:12 UTC UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2345_Regression/server.cpp:
          Fixed unused variable warning

Mon Jan  2 18:45:12 UTC UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2345_Regression/server.cpp:
          Fixed implicit conversion warning

Mon Jan  2 15:21:27 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:

          Fixed a bug in the describe_interface() API operation that occurs
          when an interface has one or more parents. Thanks to Scott Harris
          <harris_s@ociweb.com> for reporting the problem.

Mon Jan  2 14:12:15 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/include/drv_extern.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          - Frontend changes necessary to support a backend option
            for the CoSMIC IDL importer that passes a directory
            name instead of a list of IDL files. This option is
            not available for any other backends and should not
            affect their behavior.

          - Added a patch submitted by Ken Sedgwick <ken+5a4@bonsai,com>
            that fixes a bug in the functioning of TAO_IDL_INCLUDE_DIR.

Sun Jan  1 10:50:39 2006  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp (is_alive):
          Fixed a couple of bugs reported by Yariv Tal
          <yariv_tal2003@hotmail.com>.  This fixes bugid 2347.
