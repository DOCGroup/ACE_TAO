Thu Jan 06 21:26:17 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

	* tests/Param_Test/param_test_i.cpp
	  (test_unbounded_struct_sequence): Changed the explicit cast to
	  [(unsigned int) 0] to unsigned literal [0u] to avoid MSVC fro
	  whining.

Wed Jan  5 15:54:38 2000  Jeff Parsons  <parsons@cs.wustl.edu>

	* tao/Any.cpp:
	  Fix to new Any extractor to pointer to const Any,
	  prompted by a SunCC 4.2 compile error.

	* TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
	  Removed a couple of unnecessary 'ACE_reinterpret_cast's
	  in generated code for the new Any extractor to pointer
	  to const Any. They were causing compile errors with
	  Kai, SunCC and other compilers.

	* performance-tests/Latency/deferred_synch_client.dsp:
	  Added missing paths for library linking.

	* performance-tests/RTCorba/Oneways/Reliable/client.dsp:
	* performance-tests/RTCorba/Oneways/Reliable/server.dsp:
	  Put in the complete relative path to tao_idl.exe, as
	  it is in all other projects with IDL files.

Tue Jan  4 11:46:42 2000  Jeff Parsons  <parsons@cs.wustl.edu>

	* tao/Any.h:
	*tao/Any.cpp:
	  Added >>= operators to extract to const CORBA::Any *&,
	  as well as to const char *& and const wchar *&, as outlined in
	  the CORBA 2.3.1 C++ mapping.

	* TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:
	* TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
	* TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
	* TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
	* TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:
	* TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
	* TAO_IDL/be/be_visitor_union/any_op_ch.cpp:
	* TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
	* TAO_IDL/be/be_visitor_union/any_op_cs.h:
	  Added code generation for Any extraction operator to
	  pointer to const whenever extraction to a pointer is called
	  for. Left the former generated operators (same but without
	  the 'const') for backward compatibility, but marked them
	  as 'deprecated' in the generated header file. Also modified
	  code for both operators to return a null pointer if the
	  extraction fails. All this is in accordance with CORBA 2.3.1.

	* TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
	  Modified Any extraction operator to return a null pointer
	  if the extraction fails, for the reason given above.

Tue Jan 04 07:30:04 2000  David L. Levine  <levine@cs.wustl.edu>

        * TAO version 1.0.11 released.

Tue Jan  4 00:34:57 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

	* orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
	* orbsvcs/tests/Simple_Naming/client.cpp:
	* orbsvcs/LifeCycle_Service/Factory_Trader.cpp: Fixes for KAI that
	  missed the last round and fixes that were needed after the last
	  round.

Mon Jan  3 20:33:11 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

	* orbsvcs/Trading_Service/Trading_Service.cpp:
	* orbsvcs/tests/Simple_Naming/client.cpp:
	* orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
	* orbsvcs/tests/Trading/Offer_Exporter.cpp: Fixes for KAI that
	  missed the last round and fixes that were needed after the last
	  round.

Mon Jan  3 15:08:47 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

	* orbsvcs/Trading_Service/Trading_Service.cpp:
	* orbsvcs/tests/Trading/Offer_Exporter.cpp:
	* orbsvcs/tests/Trading/Offer_Importer.cpp:
	* orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
	* orbsvcs/tests/Simple_Naming/client.cpp:
	* orbsvcs//LifeCycle_Service/Factory_Trader.cpp:
	* orbsvcs/tests/Property/client.cpp: KAI needed fixes in these
	  files to compile clean. There was a need to explicitly use an
	  unsigned integer to avoid overloading amibiguity. Essentially
	  the same fix as 'Mon Jan 03 10:55:36 2000  David L. Levine'.

Mon Jan  3 14:45:22 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

	* tao/ORB.h:
	* tao/corbafwd.h: Removed compiler-specific alignment adjusting
	  preprocessor directives for MSVC and BCB completely.  Thanks to
	  Christopher Kohlhoff <chris@kohlhoff.com> for reporting this.

Mon Jan 03 10:55:36 2000  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/Time_Service/Clerk_i.cpp (get_first_IOR):
          explicitly use unsigned 0 index for bindings_list
          array element to avoid overloading ambiguity on Irix
          and HP/UX.

Mon Jan 03 10:46:31 2000  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp (next_n):
          modified look index so that its comparison is > 0, not
          >= 0.  Now that it's unsigned, it was causing a compiler
          warning.

Sun Jan 02 10:48:59 2000  Michael Kircher  <Michael.Kircher@mchp.siemens.de>

        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
          Fixed a MSVC warning, complaining about an array
          operator.

Sat Jan 01 09:18:59 2000  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile: updated dependencies, including
          Notification Service files.

Sat Jan 01 09:17:40 2000  David L. Levine  <levine@cs.wustl.edu>

        * ChangeLog: moved to ChangeLog-99c.
