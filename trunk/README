[This document is also available at the following URL:

http://www.cs.wustl.edu/~schmidt/ACE.html.

All software and documentation is available via both anonymous ftp and
the World Wide Web.]

THE ADAPTIVE COMMUNICATION ENVIRONMENT (ACE)

An Object-Oriented Network Programming Toolkit

----------------------------------------

Overview of ACE

The ADAPTIVE Communication Environment (ACE) is an object-oriented
(OO) toolkit that implements fundamental design patterns for
communication software.  ACE provides a rich set of reusable C++
wrappers and frameworks that perform common communication software
tasks across a range of OS platforms, including Win32 (i.e., WinNT
3.5.x and 4.x and Win95), most versions of UNIX (e.g., SunOS 4.x,
Solaris 2.x, SGI IRIX 5.x and 6.x, HP-UX 9.x and 10.x, OSF/1
a.k.a. DEC UNIX, AIX 4.x, Linux, SCO, UnixWare, and FreeBSD), VxWorks,
Chorus, and MVS OpenEdition.  A single source tree is used for all
these platforms and porting ACE to other platforms is relatively easy.

The communication software components provided by ACE include event
demultiplexing and event handler dispatching, service initialization,
interprocess communication, shared memory management, message routing,
dynamic (re)configuration of distributed services, multi-threading,
and concurrency control.  There are both C++ and Java versions of ACE
available.

ACE is targeted for developers of high-performance and real-time
communication services and applications on UNIX, POSIX, and Win32
platforms.  ACE simplifies the development of OO network applications
and services that utilize interprocess communication, event
demultiplexing, explicit dynamic linking, and concurrency.  ACE
automates system configuration and reconfiguration by dynamically
linking services into applications at run-time and executing these
services in one or more processes or threads.

ACE is currently used in commercial projects and products by dozens of
companies including Ericsson, Bellcore, Siemens, Motorola, Kodak,
Boeing, Lucent, DEC, Lockheed Martin, and SAIC.  Commercial support
for ACE is available at http://www.riverace.com.

----------------------------------------

C++ Wrappers for OS Interfaces

The lower-level portions of ACE provide a set of portable and
type-secure C++ wrappers that encapsulate the following C language OS
interfaces:

        . IPC mechanisms
                -- e.g., Internet- and UNIX-domain sockets, TLI, Named
		   Pipes (for UNIX and Win32) and STREAM pipes;

        . Event demultiplexing
                -- e.g., select(), poll(), and Win32
		   WaitForMultipleObjects and I/O completion ports;

        . Multi-threading and synchronization
                -- e.g., Solaris threads, POSIX Pthreads, and Win32
		   threads;

        . Explicit dynamic linking
                -- e.g., dlopen/dlsym on UNIX and LoadLibrary/GetProc
		   on Win32;

        . Memory-mapped files and shared memory management
		-- e.g., BSD mmap(), SYSV shared memory, and Win32
		   shared memory;

        . System V IPC
                -- e.g., shared memory, semaphores, message queues.

The OS Adaptation Layer shields the upper levels of ACE from platform
dependencies associated with the underlying OS interfaces.

----------------------------------------

Frameworks and Class Categories

ACE also contains a higher-level network programming framework that
integrates and enhances the lower-level C++ wrappers.  This framework
supports the dynamic configuration of concurrent distributed services
into applications.  The framework portion of ACE contains the
following class categories:

        . The Reactor
		-- Supports both Reactive and Proactive I/O;

        . The Service Configurator
		-- Support dynamic (re)configuration of objects;

        . The ADAPTIVE Service Executive
		-- A user-level implementation of System V STREAMS,
		   that supports modular integration of
		   hierarchically-related communicaion services;

	. Concurrency
		-- Various types of higher-level concurrency
		   control and synchronization patterns (such as
		   Polymorphic Futures and Active Objects);

	. Shared Malloc
		-- Components for managing dynamically allocation
		   of shared and local memory;

	. CORBA integration
		-- Integrates ACE with CORBA implementations
		   (such as single-threaded and multi-threaded
		   Orbix and Visibroker for C++).

----------------------------------------

Distributed Services and Components

Finally, ACE provides a standard library of distributed services that
are packaged as components.  These service components play two roles
in ACE:

	1. They provide reusable components for common distributed
	   system tasks such as logging, naming, locking, and time
	   synchronization.

	2. They illustrate how to utilize ACE features such as the
	   Reactor, Service Configurator, Service Initialization,
	   Concurrency, and IPC components.

----------------------------------------

Middleware Applications

ACE has been used in research and development projects at many
universities and companies.  For instance, it has been used to build
avionics systems at Boeing, telecommunication systems at Bellcore,
Ericsson, Motorola, and Lucent; medical imaging systems at Siemens and
Kodak; and many academic research projects.  Two example middleware
applications provided with the ACE release include:

        1. The ACE ORB (TAO) -- TAO is a real-time implementation of
           CORBA built using the framework components and patterns
           provided by ACE.

        2. JAWS -- JAWS is a high-performance, adaptive Web server
           built using the components in ACE.

----------------------------------------

OBTAINING ACE

The current ACE release is provided as a tar file that is around 3 Meg
compressed using GNU gzip.  ACE may be obtained electronically from
http://www.cs.wustl.edu/~schmidt/ACE-obtain.html.  This release
contains the source code, test drivers, and example applications
(including JAWS) for C++ wrapper libraries and the higher-level ACE
network programming framework developed as part of the ADAPTIVE
project at the University of California, Irvine and at Washington
University, St. Louis.

You can get The ACE ORB (TAO) in a companion release at
http://www.cs.wustl.edu/~schmidt/TAO.html.

----------------------------------------

ACE DOCUMENTATION AND TUTORIALS

Many of the C++ wrappers and higher-level components have been
described in issues of the C++ Report, as well as in proceedings of
many journals, conferences, and workshops.

A collection of white papers and tutorial handouts are included at
ftp://wuarchive.wustl.edu/languages/c++/ACE/ACE-documentation.  This
directory contains postscript versions of various papers that describe
different aspects of ACE.

I update these papers periodically to reflect changes to the ACE
architecture.  Therefore, you might want to check the date on the
files to make sure that you have read the most recent versions of
these papers.

This material is also available available via the WWW at URL:

http://www.cs.wustl.edu/~schmidt/ACE.html

----------------------------------------

BUILDING AND INSTALLING ACE

Please refer to the http://www.cs.wustl.edu/~schmidt/ACE-INSTALL.html
file for information on how to build and test the ACE wrappers.  The
BIBLIOGRAPHY file contains information on where to obtain articles
that describe the ACE wrappers and the ADAPTIVE system in more detail.

The current release has been tested extensively, but if you find any
bugs, please report them to me.

ACE MAILING LIST AND NEWSGROUP

A mailing list is available for discussing bug fixes, enhancements,
and porting issues regarding ACE.  Please send mail to me at the
ace-users-request@cs.wustl.edu if you'd like to join the mailing list.
There is also a USENET newsgroup called comp.soft-sys.ace.

ACKNOWLEDGEMENTS

ACE has been deeply influenced and improved by the following members
of my research group at Washington University:

Darrell Brunsch <brunsch@cs.wustl.edu>
Chris Cleeland <chris@milo.st-louis.mo.us>
Aniruddha Gokhale <gokhale@cs.wustl.edu>
Tim Harrison <harrison@cs.wustl.edu>
James Hu <jxh@cs.wustl.edu>
Prashant Jain <pjain@cs.wustl.edu>
David Levine <levine@cs.wustl.edu>
Carlos O'Ryan <coryan@mat.puc.cl>
Irfan Pyarali <irfan@cs.wustl.edu>
Nanbor Wang <nw1@cs.wustl.edu>

I would also like to thank all the following people who have also
contributed to ACE over the years:

Paul Stephenson <pstephenson@objectspace.com>
Olaf Kruger <okruger@cssc-melb.tansu.com.au>
Ed Brown <eebrown@netcom.com>
Lee Baker <baker@ctis.af.mil>
Alex Ranous <ranous@nsa.hp.com>
Mark Patton <mark_patton@tx72.mot.com>
Steffen Winther Sorensen <sts@dad.stibo.dk> for
Troy Warner <tnw1@core01.osi.com>
Stacy Mahlon <mcs@contour.mayo.edu>
Charles Eads <eads@synoptics.com>
Mark Frutig <mfrutig@fnbc.com>
Todd Hoff <thm@ictv.com>
George <george@truffula.fp.trw.com>
Brad Needham <bneedham@ix.netcom.com>
Leslee Xu <lxu@ics.uci.edu>
Detlef Becker <beckerd@erlh.siemens.de>
Bruce Worden <bruce@betsy.gps.caltech.edu>
Chris Tarr <ctarr@objectspace.co>
Bill Sears <wsears@world.std.com>
Greg Lavendar <g.lavender@isode.com>
Steve Warwick <sjw@aesthetic.com>
Mats Sundvall <sundvall@perrier.embnet.se>
Andreas Ueltschi <Andreas.Ueltschi@ska.com>
Nigel Hooke <n.hooke@trl.oz.au>
Medhi Tabatabai <Mehdi.Tabatabai@ed.nce.sita.int>
Stuart Powell <stuartp@ot.com.au>
Bin Mu <mubin@wfg.com>
Andrew McGowan <mcgowan@wg2.waii.com>
Ken Konecki <kenk@wfg.com>
John P. Hearn <jph@ccrl.nj.nec.com>
Giang Hoang Nguyen <yang@titan.com>
Carlos Garcia Braschi <cgarcia@caramba.tid.es>
Jam Hamidi <jh1@osi.com>
Eric Vaughan <evaughan@arinc.com>
Karl-Heinz Dorn <karlheinz.dorn@med.siemens.de>
Steve Ritter <ritter@titan.com>
Chandra Venkatapathy <cvenkat@develop.bsis.com>
Matt Stevens <mstevens@kirk.softeng.infonautics.com>
Bob Vistica <robertv@ims.com>
David Trumble <trumble@cvg.enet.dec.com>
John Morey <jmorey@crl.com>
George Reynolds <george@dvcorp.com>
Hans Rohnert <Hans.Rohnert@zfe.siemens.de>
Alex V. Maclinovsky <alexm@teltrunk1.tait.co.nz>
Todd Blanchard <tblancha@evolving.com>
Rob Clairmont <rclairmo@bnr.ca>
Christian Millour <chris@etca.fr>
Neil Cohen <nbc@metsci.com>
Dieter Quehl <quehl@csaserv.erlh.siemens.de>
Reginald S. Perry <perry@zso.dec.com>
James Morris <jmorris@aurora.apana.org.au>
Mark Seaborn <mseaborn@itthp1.comm.mot.com>
Phil Brooks <phil_brooks@mentorg.com>
E. Jason Scheck <jasons@ims.com>
Daniel Proulx <daproulx@qc.bell.ca>
Bill Tang <tang@tekats.com>
John Huchinson <hutchiso@epi.syr.ge.com>
Jack Erickson <jack@cibc.com>
Byron Walton <bwalton@hughes.scg.hac.com>
Bill Lear <rael@anarchy.cybercom.net>
Mark Zusman <marklz@topaz.technion.ac.il>
Aurelio Nocerino <aurelio@irsipcs2-27-le0.irsip.na.cnr.it>
Walt Akers <akers@cebaf.gov>
Greg Baker <GBaker@p01.az15m.iac.honeywell.com>
Alexandre Karev <karev@vxcern.cern.ch>
Pramod Kumar Singh <pramod@saturn.miel.mot.com>
Bryon Rigg <bryon_rigg@mail.telecorpsys.com>
Brad Brown <bbrown@rdxsunhost.aud.alcatel.com>
Patty Genualdi <genualdp@agcs.com>
Eshel Liran <liran@bimacs.cs.biu.ac.il>
Mick Adams <eeimas@eei.ericsson.se>
Chris Eich <Chris_Eich@optilink.optilink.dsccc.com>
Mike Flinn <mike.flinn@smtpgate.aws.waii.com>
Audun Tornquist <Audun.Tornquist@iu.hioslo.no>
Sandeep Joshi <sandeepj@emailbox.att.com>
Kirk Sinnard <1764@mn.lawson.lawson.com>
Bernd Hofner <hofner@pd.et-inf.uni-siegen.de>
Craig Perras <craigp@wolfenet.com>
Kirk Sinnard <kirk.sinnard@lawson.com>
Matthew Newhook <matthew@neweast.ca>
Gerolf Wendland <wendland@hpp015.mch2.scn.de>
Phil Mesnier <phil@envision.com>
Ross Dargahi <rossd@krinfo.com>
Richard Orr <rorr@costello.den.csci.csc.com>
Rich Ryan <rryan@mseng.kla.com>
Jan Rychter <jwr@icm.edu.pl>
Tom Marrs <0002104588@mcimail.com>
Bob Olson <olson@mcs.anl.gov>
Jean-Francois Ripouteau <Jean-Francois.Ripouteau@netsurf.org>
Ajit Sagar <asagar@spdmail.spd.dsccc.com>
Ashish Singhai <singhai@delirius.cs.uiuc.edu>
David Sames <David.L.Sames.1@gsfc.nasa.gov>
Gonzalo Diethelm <gonzo@ing.puc.cl>
Raj <raj@itd.ssb.com>
Darrin <darrin@jeeves.net>
Steve Weismuller <spweismu@rsoc.rockwell.com>
Eric C. Newton <ecn@smart.net>
Andres Kruse <kruse@cern.ch>
Ramesh Nagabushnam <rcn@nynexst.com>
Antonio Tortorici <antonio@rh0011.roma.tlsoft.it>
Nigel Lowe <nigel@nt.com>
Tom Leith <trl@icon-stl.net>
Greg Wilson <gvw@cs.toronto.edu>
Michael Fortinsky <mike@vocaltec.com>
Marco Sommerau <sommerau@matisse.informatik.uni-stuttgart.de>
Gary Salsbery <gsalsber@simsun.atsc.allied.com>
Eric Beser <beser@simsun.atsc.allied.com>
Alfred Keller <kellera@pop.eunet.ch>
John Lu <johnlu@f1.telekurs.ch>
James Mansion <james@wgold.demon.co.uk>
Jesper S. M|ller <Jesper.Moller@ameridata.dk>
Chris Lahey <clahey@cccis.com>
Michael R"uger <m_rueger@syscomp.de>
Istvan Buki <istvan.buki@infoboard.be>
Greg Wilson <gvwilson@vnet.ibm.com>
Garrett Conaty <gconaty@outbackinc.com>
Brad Flood <BFLOOD@slc.unisysgsg.com>
Marius Kjeldahl <marius@funcom.com>
Steve Huston <shuston@riverace.com>
Eugene K. Plaude <jec@r-style.msk.su>
Joseph DeAngelis <bytor@faxint.com>
Kim Gillies <gillies@noao.edu>
Luca Priorelli <lucapri@mbox.vol.it>
Alan Stewart <axs2@osi.com>
Hani Yakan <hani@i-online.com>
William L. Gerecke <gerecke@rayva.org>
Craig Johnston <johnston@tortilla.ds.boeing.com>
Pierre-Yves Duval <duval@cppm.in2p3.fr>
Rochi Febo Dommarco <rocky@alter.it>
Jonathan Biggar <jon@sems.com>
Scott Shupe <shupes@mitre.org>
Chuck Gehr <gehr@sweng.stortek.com>
Avraham Nash <Avraham_Nash@praxisint.com>
Padhu Ramalingam <padhu@magicnet.net>
Jay Denkberg <jay_denkberg@comverse.com>
Ayman Farahat <afarahat@CCGATE.HAC.COM>
Tilo Christ <christ@swl.fh-heilbronn.de>
Ari Erev <Ari_Erev@icomverse.com>
Hamutal Yanay <Hamutal_Yanay@icomverse.com>
Vital Aza <va3@cs.wustl.edu>
Alex Villazon <villazon@cui.unige.ch>
David Artus <david.artus@sbil.co.uk>
Todd Barkalow <todd_barkalow@stortek.com>
Alexander Smundak <sasha@migration.com>
Thilo Kielmann <kielmann@informatik.uni-siegen.de>
Matthias Kerkhoff <make@cs.tu-berlin.de>
Fred LaBar <flabar@fallschurch.esys.com>
Hanan Herzog <hanan@wallenda.stanford.edu>
Eric Parker <eparker@credence.com>
James Michael Dwyer <jdwyer@knox.edu>
Arun Katkere <katkere@praja.com>
Bob Dunmire <bobd@titan.com>
Sandro Doro <alex@aureus.sublink.org>
Robert Lyng <<rlyng@synertech.highmark.com>
Phil Logan <phill@in.ot.com.au>
John Cosby <John.D.Cosby@cpmx.saic.com>
Wayne Vucenic <wvucenic@netgate.net>
Harry Gunnarsson <hg@carmenta.se>
James CE Johnson <jcej@lads.com>
Samuel_Bercovici <Samuel_Bercovici_at_EFT__AD2@mail.icomverse.com>
Per Andersson <Per.Andersson@hfera.ericsson.se>
Anthony McConnell <Tonym@datel.demon.co.uk>
Mark Rabotnikov <mark@usp.elscintcorp.co.il>
John Bossom <John.Bossom@Cognos.COM>
Rino Simioni <sir@necsy.it>
Slawomir Kuzniar <kuzniar@Bear.COM>
Rob Jordan <jordan@hursley.ibm.com>
Michael Maxie <maxie@acm.org>
John Cosby <John.D.Cosby@cpmx.saic.com>
Nigel Owen <Nigel@voicelink.co.nz>
Jorn Jensen <jornj@funcom.com>
Paul Roman <proman@npac.syr.edu>
Dave Mayerhoefer <davem@lynx.com>
Bert Craytor  <Bert_Craytor@peoplesoft.com>
Joey Zhu <joey.zhu@wcom.com>
Arthur J. Lewis <hfdh99a@prodigy.com>
Michael R. MacFaden" <mrm@cisco.com>
Eugene R. Somdahl <gene@endo.com>
Paul Han <phan@CCGATE.HAC.COM>
Jeff Morgan <jeff@audioactive.com>
Arturo Montes <mitosys@colomsat.net.co>
Elliot Lau <eeklau@post1.com>
Mark Wright <markw@odi.com.au>
Michael Newton <michaeln@in.ot.com.au>
Kumar Neelakantan <kneelaka@painewebber.com>
Scott Halstead <scott.halstead@gs.com>
Jean-Marc Strauss <strauss@limeil.cea.fr>
Adam Porter <aporter@cs.umd.edu>
Hakan Kallberg <hk@simulina.se>
Eric Dean Russell <edrusse@somnet.sandia.gov>
Daniel Montalibet <daniel_montalibet@stortek.com>
Norbert Rapp <norbert.rapp@nexus-informatics.de>
Ganesh Pai <gpai@voicetek.com>
Berni Merkle <merkle@io.freinet.de>
Tom Wright <twright@gem-net.demon.co.uk>
Torbjorn Lindgren <tl@funcom.no>
Mike Bernat <sagmb@sagus.com>
Brian Mendel <bmendel@mdc.com>
Jeremy Buch <davinci@nortel.ca>
Kevin Boyle <kboyle@sanwafp.com>
Kevin Martindale <kevin_martindale@stortek.com>
Luis Lopes <llopes@tick.rcc.Ryerson.CA>
Adrian Salt <acsalt@magi.com>
Hongbo Xu <hxu@mas.co.nz>
Michael Hartman <c62nt57@ibx.com>
Tom Dobridge <dobridge@persimmon.com>
Rich Christy <rchristy@cccis.com>
Satoshi Ueno <satoshi.ueno@gs.com>
Eugene R. Somdahl <gene@endo.com>
Robert Head <rhead@mail.virtc.com>
Ivan Murphy <Ivan.Murphy@med.siemens.de
Jan Perman <uabjjpp@osd.ericsson.se>
Shankar Krishnamoorthy <kshankar@lucent.com>
Reza Roodsari <reza@sprynet.com>
Jim Crossley <jim@lads.com>
Johannes Gutleber <Johannes.Gutleber@cern.ch>
Marina Spivak <marina@cs.wustl.edu>
Yigong Liu <ygl@emailbox.lucent.com>
Erik Urdang <erik@bhi.com>
Mike Schweiger <mikes@bmo.com>
Anthony Mutiso <amutiso@hughes.cg.hac.com>
Jeff R. Hayes <Jeff.Hayes@osi.com>
David Brackman <dbrackman@OhioEE.com>
Dave Moore <dave.moore@gecm.com>
Joseph Cross <joseph.k.cross@lmco.com>
Cherif Sleiman <sleiman@research.moore.com>
Stefan Ericsson <uabsjen@osd.ericsson.se>
Wei Chiang <chiang@tele.nokia.fi>
Thanh Ma <tma@encore.com>
Oleg Krivosheev <kriol@fnal.gov>
Stephen Coy <stevec@wsa.com.au>
Bob Laferriere <laferrie@gsao.med.ge.com>
Satheesh Kumar MG <satheesh@india.aspectdv.com>
Karen Amestoy <kamestoy@CCGATE.HAC.COM>
Jeff Richard <jrichard@OhioEE.com>
Samuel Melamed <sam@vdo.net>
Vladimir Schipunov <vlad@staff.prodigy.com>
Felix Popp <fxpopp@immd9.informatik.uni-erlangen.de>
Billy Quinn <bquinn@lads.com>
Michael McKnight <mcknight@signalsoftcorp.com>
Huiying Shen <shen@environ.org>
Alex Chan <Alex.Chan@Aspect.com>
Aaron Valdivia <avaldivia@hns.com>
Edan Ayal <edana@vdo.net>
Jeffrey Peterson <jpeterson@fallschurch.esys.com>
Neil Lavelle <nlavelle@imcl.com>
Steven Wohlever <wohlever@mitre.org>
Manojkumar Acharya <mja@cvsf325.gpt.co.uk>
Evgeny Beskrovny <evgeny_beskrovny@icomverse.com>
Kirill Rybaltchenko <Kirill.Rybaltchenko@cern.ch>
Laura Paterno <lpaterno@d0chb.fnal.gov>
Ben Eng <ben@jetpen.com>
Mike Kamrad <J.M.KAMRAD.II@cdev.com>
Marios Zikos <zikos@csi.forth.gr>
Mark L Boriack <mboriack@std.saic.com>
Caleb Epstein <epstein_caleb_unix@jpmorgan.com>
Valik Solrzano Barboza <valik@xs4all.nl>
John Connett <jrc@skylon.demon.co.uk>
Tom Arbuckle <arbuckle@uran.informatik.uni-bonn.de>
Stephen Henry <shenry@mdc.com>
Dani Flexer <danif@ivory-sw.com>
Michael Hoffman <Hoffman_Michael@mac-mailserver.atc.ll.mit.edu>
John Lindal <jafl@cheshire-cat.caltech.edu>
Dustin Laurence <laurence@alice.wonderland.caltech.edu>
Ernie Makris <emakris@ziplink.net>
Timothy A. Brown <tabrown@montana.com>
Patrick J. McNerthney <pat@thememedia.com>
Lori Anderson <lori@probita.com>
Erik Margraf <erik@asgard.gud.siemens.co.at>
Bryan Doerr <Bryan.S.Doerr@boeing.com>
Adam Miller <adam@royalblueny.com>
Thomas Jordan <Thomas_Jordan@deluxedata.com>
Keith Nicewarner <knicewar@sanders.com>
Frederic Andres <andres@rd.nacsis.ac.jp>
Achint Sandhu <sandhu@nortel.ca>
Mitch Kuninsky <Mitch_Kuninsky@avid.com>
Alex Chan <Alex.Chan@Aspect.com>
Jeff Hellzen <JHellzen@hwdcsaws.cahwnet.gov>
Thomas Venturella <tventurell@mdc.com>
Philippe O'Reilly <philippe@robot.ireq.ca>
Stan Leeson <STANLEY.D.LEESON@cdev.com>
Richard Keizer <RICHARD.L.KEIZER@cdev.com>
Edgar Villanueva <edgarvil@ix.netcom.com>
Oliver Kellogg <Oliver.Kellogg@vs.dasa.de>
Dave Meyer <dmeyer@std.saic.com> 
Thomas Hampson <thomas.hampson@lmco.com>

I would particularly like to thank Paul Stephenson, who worked with me
at Ericsson and is now at ObjectSpace.  Paul devised the recursive
Makefile scheme that underlies this distribution and also spent
countless hours with me discussing object-oriented techniques for
developing distributed application frameworks.

Finally, I'd also like to thank Todd L. Montgomery <tmont@cs.wvu.edu>,
fellow heavy metal head, for fulfilling his quest to get ACE to
compile with GCC!

In conclusion, my goal is to see ACE continue to evolve and become a
more comprehensive, robust, and well-documented C++ class library that
is freely available to researchers and developers.  If you have any
improvements, suggestions, and or comments, I'd like to hear about it.

        Thanks,

		Douglas C. Schmidt
	        schmidt@cs.wustl.edu
