Mon Aug 14 11:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/*.h:
          Added /**/ to the include of config-all.h and ACE_export.h, this
          way doxygen doesn't add these files to the include graphs which
          make them much easier to read

Sun Aug 13 23:30:02 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/tao_other_tests.lst:

          Excluded TAO POAManagerFactory and EndpointPolicy tests from
          running in a minimum CORBA configuration.

Sun Aug 13 22:21:55 UTC 2006  Shanshan Jiang <shanshan.jiang@vanderbilt.edu>

        * test/Hash_Multi_Map_Manager_Test.cpp
          Address the "Implicit conversion of string literal to char * is
          deprecated" warnings.

Sun Aug 13 15:25:17 UTC 2006  Boris Kolpackov  <boris@codesynthesis.com>

        * bin/MakeProjectCreator/config/ciaocidldefaults.mpb:

          Removed '--' from the cidlc command line.

Sun Aug 13 000:02:00 UTC 2006  Shanshan Jiang <shanshan.jiang@vanderbilt.edu>

        * ace/Hash_MultiMap_Manager_T.inl
        * ace/Hash_MultiMap_Manager_T.cpp
        * ace/Hash_MultiMap_Manager_T.h
          Change the name of these files into Hash_Multi_Map_Manager.*.
          Add some comments to explain in brief the purpose of using
          ACE_Hash_Multi_Map_Manager class and how to use it.
          Remove the backward compatibility of ACE_Hash_Multi_Map_Manager class
          and its associated iterator classes.
          Remove "_Ex" on the names of ACE_Hash_Multi_Map_Manager class and its
          associated iterator classes.

        * ace/Hash_MultiMap_Manager.h
          Remove this file since it simply includes the Hash_MultiMap_Manager_T.h
          file.

        * test/Hash_MultiMap_Manager_Test.cpp
          Change the name of this file into Hash_Multi_Map_Manager_Test.cpp.
          Address the "convert const char* to ACE_TCHAR*" errors.

        * ace/ace.mpc
          Change the name of Hash_MultiMap_Manager project into
          Hash_Multi_Map_Manager.

        * test/run_test.lst
        * test/tests.mpc
          Change the name of Hash_MultiMap_Manager_Test project into
          Hash_Multi_Map_Manager_Test.

Fri Aug 11 16:46:56 UTC 2006  Shanshan Jiang <shanshan.jiang@vanderbilt.edu>

        * ace/Hash_MultiMap_Manager.h
        * ace/Hash_MultiMap_Manager_T.cpp
        * ace/Hash_MultiMap_Manager_T.h
        * ace/Hash_MultiMap_Manager_T.inl
          Add these files which implement Hash_MultiMap_Manager.

        * test/Hash_MultiMap_Manager_Test.cpp
          Add this test file for Hash_MultiMap_Manager.

        * ace/ace.mpc
          Modify this file to include Hash_MultiMap_Manager.

        * test/run_test.lst
        * test/tests.mpc
          Modify these files to include Hash_MultiMap_Manager_Test.

Fri Aug 11 16:37:34 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/CDR_File_Test.cpp: Corrected a signed/unsigned compare.

Fri Aug 11 13:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Size.cpp:
          Add include of OS_Memory.h to get ACE_align_binary

        * ace/Sig_Handler.cpp:
          Add include of Guard_T.h to get the guards

        * ace/config-vxworks6.3.h:
          Add some code for the diab compiler but this is not complete
          support, just some testing results.

Fri Aug 11 07:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/svn/config:
        * docs/svn/svn-prefs.reg:
          Added settings for .idl and .pidl

Thu Aug 10 13:14:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_other_tests.lst:
          Disabled the performance tests on OpenVMS for the moment, they
          result in too much error logs

Thu Aug 10 10:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          Updated for -GX

Thu Aug 10 09:38:13 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * bin/tao_other_tests.lst:

          Exclude Bug_2615_Regression from running on 'ACE for TAO' builds.

Thu Aug 10 01:52:34 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: Added ACE_HAS_TEMPLATE_TYPEDEFS for Visual
          Age C++ 6 and higher.

Wed Aug  9 14:15:18 UTC 2006  Ciju John  <johnc@ociweb.com>

        * bin/MakeProjectCreator/config/csd_threadpool.mpb:

          Added a dependency upon threads.mpb as this project shouldn't be
          built if thread support is not going to be built into TAO.

Wed Aug  9 13:45:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * bin/MakeProjectCreator/config/acedefaults.mpb

          Typo, Remove the + character that came with the patch file.

Wed Aug  9 12:17:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * bin/MakeProjectCreator/config/ace_opt_mfc.mpb
        * bin/MakeProjectCreator/config/acedefaults.mpb

          Chad's new fix for MPC building MFC projects.

Tue Aug  8 14:00:06 UTC 2006  Carlos O'Ryan  <coryan@atdesk.com>

        * Merged in all the changes from the fix_bug_2540 branch, that is,
          from revision 73857 to revision 73859.

        Thu Aug  3 21:49:27 UTC 2006  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/TP_Reactor.cpp:
        * ace/Select_Reactor_T.cpp:
          Avoid the problems described in bug 2540 by detecting the
          infinite loop and recomputing the number of active handlers.
          Thanks to Jody Hagins for correcting my original "fix."

Tue Aug  8 14:05:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * bin/MakeProjectCreator/config/ace_mfc.mpb
        * bin/MakeProjectCreator/config/acedefaults.mpb

          Reverted Chad's fix for MPC building MFC projects.
          It seems that this causes non MFC builds to build as MFC
          breaking the scoreboard.

Tue Aug  8 09:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE.mwc:
          Removed several directories which aren't existing anymore

Tue Aug  8 09:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html:
          Removed some parts of the VxWorks building instructions because
          it was really wrong what was said

Tue Aug  8 09:15:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * ace/OS_Memory.h
        * ace/config-win32-msvc.h
        * bin/MakeProjectCreator/config/ace_mfc.mpb
        * bin/MakeProjectCreator/config/acedefaults.mpb

          Chad's fix for MPC building MFC projects. Correction for
          Thu Apr 27 21:04:08 UTC 2006  Steve Huston  <shuston@riverace.com>
          throw CMemoryException on out-of-memory condition. These
          exceptions must be caught by pointer and thrown via calling
          AfxThrowMemoryException ().

Tue Aug  8 08:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Select_Reactor_Base.cpp:
        * ace/Select_Reactor_T.cpp:
          Const improvements, use bool when possible

Tue Aug  8 07:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/generate_rel_manpages:
        * bin/make_release:
          Did a little bit of cleanup removing old things

Tue Aug  8 07:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Select_Reactor_T.cpp (dump):
          Removed usage of not needed operator++ on the handle set

Mon Aug  7 08:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Handle_Set.{h,cpp}:
          Removed operator++, it is deprecated and nothing more then a noop

Fri Aug  4 07:57:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Asynch_IO.h:
        * ace/Event_Handler.h:
        * ace/Framework_Component_T.h:
        * ace/Hash_Map_Manager_T.h:
        * ace/IO_SAP.h:
        * ace/Local_Tokens.h:
        * ace/LSOCK_Connector.h:
        * ace/Map_Manager.h:
        * ace/Map_T.h:
        * ace/WFM_Reactor.h:
          Doxygen improvements

Thu Aug  3 10:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Connector.h:
          Improved documentation

Wed Aug  2 22:54:24 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * THANKS: Added Eric Danielou to the hall of fame.

Wed Aug  2 21:27:59 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * bin/PerlACE/Run_Test.pm:

          Added two new packaged-scoped variables, $PerlACE::ACE_ROOT and
          $PerlACE::TAO_ROOT.  $PerlACE::TAO_ROOT is set to the TAO_ROOT
          environment variable, if one exists.  If not it is set to
          $ACE_ROOT/TAO.  $PerlACE::ACE_ROOT is the same as the ACE_ROOT
          envrionment variable so it's just there for convenience and for
          symmetry.

Wed Aug  2 20:19:04 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * bin/tao_other_tests.lst:
          Added new test (TAO/orbsvcs/tests/ImplRepo/Bug_2604_Regression).

Wed Aug  2 18:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Connector.cpp:
          Const improvements

        * ace/Caching_Utility_T.h:
        * ace/config-lite.h:
        * ace/Event_Handler.h:
        * ace/Framework_Component.h:
        * ace/Lock.h:
        * ace/Lock_Adapter_T.h:
        * ace/Null_Mutex.h:
        * ace/Object_Manager.h:
        * ace/Object_Manager_Base.h:
        * ace/Proactor.cpp:
        * ace/Process_Manager.h:
        * ace/Semaphore.h:
        * ace/Thread_Exit.h:
          Doxygen improvements

Wed Aug  2 15:50:48 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * bin/tao_other_tests.lst:

          Schedule bugzilla #2615 regression test.

Wed Aug  2 14:55:45 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * ACE-INSTALL.html:

          Updated the location of the MPC documentation.  It was moved from
          the MPC root directory to a docs directory.

        * bin/ChangeLogEditor/CVSFileLocator.pm:
        * bin/ChangeLogEditor/ChangeLogEdit.pm:
        * bin/ChangeLogEditor/ChangeLogEntry.pm:
        * bin/ChangeLogEditor/FileLocator.pm:
        * bin/ChangeLogEditor/SVNFileLocator.pm:
        * bin/cle.pl:

          Added better support for subversion and it now reports errors from
          cvs/svn.

        * bin/MakeProjectCreator/README:

          Updated to provide information on anonymously checking out MPC
          using Subversion.

        * bin/make_release:

          I added "-type gnuace" to the options where the default project
          type was assumed.  Eventually, MPC will not have a default project
          type.

Wed Aug  2 13:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ACE-development-process.html:
          Document the fact that people should test on at least two
          platforms and should be available for some days after they
          commit a change.

Wed Aug  2 11:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Download.html:
          Also put the download page from deuce.doc under svn control
          so that we can update it for the svn conversion

Wed Aug  2 11:07:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/bczar/bczar.html:
        * docs/bczar/privileges.html:
          Added documents that where on deuce.doc, the documentation
          for the bczar how to create a release should really be handled
          with care, so put them under svn control

Tue Aug  1 20:23:50 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * ace/config-macosx-tiger.h:
          Added preliminary support for Mac OS X 10.4 on Intel CPU's.

Tue Aug  1 20:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.3.h:
          Enabled some features in ACE because vxworks 6.3 delivers more system
          api's

Mon Jul 31 19:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_stropts.inl (ioctl):
          Check for ACE_HAS_IOCTL_INT_3_PARAM to make it easier to handle
          the different VxWorks versions

        * config-vxworks5.x.h:
        * config-vxworks6.2.h:
        * config-vxworks6.3.h:
          Added ACE_HAS_IOCTL_INT_3_PARAM

Mon Jul 31 18:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Containers_T.{h,cpp}:
        * Hash_Map_Manager_T.{h,cpp}:
        * Map_Manager.{h,inl}:
        * Node.{h,cpp}:
          Removed check for !ACE_HAS_BROKEN_NOOP_DTORS, this define is
          not in any config file

        * config-unixware-7.1.0.udk.h:
          Removed commented out define

        * Token_Collection.{h,cpp}:
        * Token_Manager.{h,inl}:
          Changed debug flag to be a bool

        * SOCK_Dgram_Bcast.h
        * TP_Reactor.h
        * Signal.h
        * Thread.h
        * Thread_Adapter.h
          Documentation updates

Mon Jul 31 14:57:08 UTC 2006  Steve Huston  <shuston@riverace.com>

        * apps/Makefile.am: Removed hard-coded inclusion of gperf in the
          SUBDIRS list; it's an optional piece; see also
          Tue Jun 20 20:19:37 UTC 2006  Steve Huston  <shuston@riverace.com>
          Thanks to Robert Schwebel <robert at schwebel dot de> for this fix.

Mon Jul 31 14:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/*.doxygen:
          Cleanup of these files

Sat Jul 29 11:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-icc-common.h:
          Added fix for Intel C++ 9.1

Fri Jul 28 15:32:27 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ace/SSL/Makefile.am
        * ace/QoS/Makefile.am
        * performance-tests/Synch-Benchmarks/Base_Test/Makefile.am
        * performance-tests/Synch-Benchmarks/Perf_Test/Makefile.am
        * Kokyu/Makefile.am
        * apps/JAWS/clients/Caching/Makefile.am
        * ACEXML/apps/svcconf/Makefile.am
        * ACEXML/common/Makefile.am
        * ACEXML/parser/parser/Makefile.am
        * ACEXML/examples/SAXPrint/Makefile.am
        * websvcs/lib/Makefile.am
        * examples/ASX/Event_Server/Event_Server/Makefile.am
        * examples/ASX/UPIPE_Event_Server/Makefile.am
        * examples/Service_Configurator/IPC-tests/server/Makefile.am

        Updated to comply with the .i->.inl changes from:
        Thu Jul 27 20:30:26 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

Fri Jul 28 12:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Kokyu/DSRT_Dispatch_Item_T.inl:
        * ACEXML/parser/parser/Parser.inl:
          Fixed file tag

Thu Jul 27 20:30:26 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ace/SSL/SSL_SOCK_Connector.h
        * ace/SSL/SSL_SOCK_Acceptor.inl
        * ace/SSL/SSL_SOCK_Acceptor.cpp
        * ace/SSL/SSL_SOCK_Connector.i
        * ace/SSL/SSL_SOCK_Stream.h
        * ace/SSL/SSL_SOCK_Stream.i
        * ace/SSL/SSL_SOCK_Acceptor.h
        * ace/SSL/SSL_SOCK_Acceptor.i
        * ace/SSL/SSL_SOCK.cpp
        * ace/SSL/SSL_SOCK.inl
        * ace/SSL/SSL_SOCK.h
        * ace/SSL/SSL_SOCK.i
        * ace/SSL/SSL_SOCK_Connector.cpp
        * ace/SSL/SSL_SOCK_Connector.inl
        * ace/SSL/SSL_SOCK_Stream.cpp
        * ace/SSL/SSL_SOCK_Stream.inl
        * ace/QoS/SOCK_Dgram_Mcast_QoS.inl
        * ace/QoS/SOCK_Dgram_Mcast_QoS.cpp
        * ace/QoS/QoS_Session_Impl.cpp
        * ace/QoS/QoS_Session_Impl.inl
        * ace/QoS/SOCK_Dgram_Mcast_QoS.h
        * ace/QoS/SOCK_Dgram_Mcast_QoS.i
        * ace/QoS/QoS_Session_Impl.h
        * ace/QoS/QoS_Session_Impl.i
        * performance-tests/Synch-Benchmarks/Base_Test/Baseline_Test.cpp
        * performance-tests/Synch-Benchmarks/Base_Test/Baseline_Test.inl
        * performance-tests/Synch-Benchmarks/Base_Test/Baseline_Test.h
        * performance-tests/Synch-Benchmarks/Base_Test/Baseline_Test.i
        * performance-tests/Synch-Benchmarks/Perf_Test/Performance_Test_Options.inl
        * performance-tests/Synch-Benchmarks/Perf_Test/Performance_Test_Options.h
        * performance-tests/Synch-Benchmarks/Perf_Test/Performance_Test_Options.i
        * Kokyu/Kokyu_dsrt.cpp
        * Kokyu/Kokyu_dsrt.inl
        * Kokyu/Kokyu.cpp
        * Kokyu/Kokyu.inl
        * Kokyu/Kokyu_defs.h
        * Kokyu/Kokyu_defs.i
        * Kokyu/Dispatcher_Impl.h
        * Kokyu/Dispatcher_Impl.i
        * Kokyu/Default_Dispatcher_Impl.h
        * Kokyu/Default_Dispatcher_Impl.i
        * Kokyu/Dispatch_Deferrer.h
        * Kokyu/Dispatch_Deferrer.i
        * Kokyu/DSRT_Dispatcher_Impl_T.h
        * Kokyu/DSRT_Dispatcher_Impl_T.i
        * Kokyu/DSRT_Dispatch_Item_T.h
        * Kokyu/DSRT_Dispatch_Item_T.i
        * Kokyu/Kokyu_dsrt.h
        * Kokyu/Kokyu_defs.cpp
        * Kokyu/Kokyu_defs.inl
        * Kokyu/Kokyu_dsrt.i
        * Kokyu/Kokyu.h
        * Kokyu/Dispatcher_Impl.cpp
        * Kokyu/Dispatcher_Impl.inl
        * Kokyu/Kokyu.i
        * Kokyu/Default_Dispatcher_Impl.cpp
        * Kokyu/Default_Dispatcher_Impl.inl
        * Kokyu/Dispatch_Deferrer.cpp
        * Kokyu/Dispatch_Deferrer.inl
        * Kokyu/DSRT_Dispatcher_Impl_T.cpp
        * Kokyu/DSRT_Dispatcher_Impl_T.inl
        * Kokyu/DSRT_Dispatch_Item_T.cpp
        * Kokyu/DSRT_Dispatch_Item_T.inl
        * apps/JAWS/clients/Caching/Local_Locator.inl
        * apps/JAWS/clients/Caching/Local_Locator.cpp
        * apps/JAWS/clients/Caching/URL_Properties.inl
        * apps/JAWS/clients/Caching/URL_Properties.cpp
        * apps/JAWS/clients/Caching/Local_Locator.h
        * apps/JAWS/clients/Caching/Local_Locator.i
        * apps/JAWS/clients/Caching/URL_Properties.h
        * apps/JAWS/clients/Caching/URL_Properties.i
        * apps/JAWS/clients/Caching/Locator_Request_Reply.cpp
        * apps/JAWS/clients/Caching/Locator_Request_Reply.inl
        * apps/JAWS/clients/Caching/Locator_Request_Reply.h
        * apps/JAWS/clients/Caching/Locator_Request_Reply.i
        * apps/JAWS2/HTTPU/http_response.h
        * apps/JAWS2/HTTPU/http_response.i
        * apps/JAWS2/HTTPU/http_base.inl
        * apps/JAWS2/HTTPU/http_base.cpp
        * apps/JAWS2/HTTPU/http_headers.h
        * apps/JAWS2/HTTPU/http_headers.i
        * apps/JAWS2/HTTPU/http_status.inl
        * apps/JAWS2/HTTPU/http_status.cpp
        * apps/JAWS2/HTTPU/parse_http_request.h
        * apps/JAWS2/HTTPU/http_request.inl
        * apps/JAWS2/HTTPU/parse_http_request.i
        * apps/JAWS2/HTTPU/http_request.cpp
        * apps/JAWS2/HTTPU/parse_http_response.h
        * apps/JAWS2/HTTPU/http_response.cpp
        * apps/JAWS2/HTTPU/parse_http_response.i
        * apps/JAWS2/HTTPU/http_response.inl
        * apps/JAWS2/HTTPU/http_headers.inl
        * apps/JAWS2/HTTPU/http_headers.cpp
        * apps/JAWS2/HTTPU/http_base.h
        * apps/JAWS2/HTTPU/http_base.i
        * apps/JAWS2/HTTPU/parse_http_request.inl
        * apps/JAWS2/HTTPU/parse_http_request.cpp
        * apps/JAWS2/HTTPU/http_status.h
        * apps/JAWS2/HTTPU/parse_http_response.cpp
        * apps/JAWS2/HTTPU/parse_http_response.inl
        * apps/JAWS2/HTTPU/http_status.i
        * apps/JAWS2/HTTPU/http_request.h
        * apps/JAWS2/HTTPU/http_request.i
        * ACEXML/apps/svcconf/Svcconf_Handler.cpp
        * ACEXML/apps/svcconf/Svcconf_Handler.inl
        * ACEXML/apps/svcconf/Svcconf_Handler.h
        * ACEXML/apps/svcconf/Svcconf_Handler.i
        * ACEXML/common/AttributesImpl.cpp
        * ACEXML/common/LocatorImpl.cpp
        * ACEXML/common/Env.cpp
        * ACEXML/common/Exception.cpp
        * ACEXML/common/SAXExceptions.h
        * ACEXML/common/SAXExceptions.i
        * ACEXML/common/AttributesImpl.h
        * ACEXML/common/AttributesImpl.i
        * ACEXML/common/XMLFilterImpl.cpp
        * ACEXML/common/Env.h
        * ACEXML/common/SAXExceptions.cpp
        * ACEXML/common/Env.i
        * ACEXML/common/Exception.h
        * ACEXML/common/Exception.i
        * ACEXML/common/AttributesImpl.inl
        * ACEXML/common/LocatorImpl.inl
        * ACEXML/common/Env.inl
        * ACEXML/common/XMLFilterImpl.h
        * ACEXML/common/XMLFilterImpl.i
        * ACEXML/common/Exception.inl
        * ACEXML/common/XMLFilterImpl.inl
        * ACEXML/common/LocatorImpl.h
        * ACEXML/common/LocatorImpl.i
        * ACEXML/common/SAXExceptions.inl
        * ACEXML/parser/debug_validator/Element_Tree.i
        * ACEXML/parser/debug_validator/Element_Tree.cpp
        * ACEXML/parser/debug_validator/Element_Tree.inl
        * ACEXML/parser/debug_validator/Element_Tree.h
        * ACEXML/parser/parser/Parser.h
        * ACEXML/parser/parser/Parser.i
        * ACEXML/parser/parser/Entity_Manager.cpp
        * ACEXML/parser/parser/Entity_Manager.inl
        * ACEXML/parser/parser/Entity_Manager.h
        * ACEXML/parser/parser/Entity_Manager.i
        * ACEXML/parser/parser/Parser.cpp
        * ACEXML/parser/parser/Parser.inl
        * ACEXML/examples/SAXPrint/SAXPrint_Handler.cpp
        * ACEXML/examples/SAXPrint/SAXPrint_Handler.inl
        * ACEXML/examples/SAXPrint/SAXPrint_Handler.h
        * ACEXML/examples/SAXPrint/SAXPrint_Handler.i
        * websvcs/lib/URL_Addr.h
        * websvcs/lib/URL_Addr.i
        * websvcs/lib/URL_Addr.cpp
        * websvcs/lib/URL_Addr.inl
        * examples/ASX/Event_Server/Event_Server/Options.h
        * examples/ASX/Event_Server/Event_Server/Options.i
        * examples/ASX/Event_Server/Event_Server/Options.inl
        * examples/ASX/UPIPE_Event_Server/Options.h
        * examples/ASX/UPIPE_Event_Server/Options.i
        * examples/ASX/UPIPE_Event_Server/Options.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_Timeout.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_Timeout.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_L_SPIPE.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_L_SPIPE.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_L_CODgram.h
        * examples/Service_Configurator/IPC-tests/server/Handle_L_CODgram.i
        * examples/Service_Configurator/IPC-tests/server/Handle_L_FIFO.h
        * examples/Service_Configurator/IPC-tests/server/Handle_L_FIFO.i
        * examples/Service_Configurator/IPC-tests/server/Handle_Broadcast.h
        * examples/Service_Configurator/IPC-tests/server/Handle_Broadcast.i
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Pipe.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Pipe.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Dgram.h
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Dgram.i
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Stream.h
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Stream.i
        * examples/Service_Configurator/IPC-tests/server/Handle_R_Dgram.h
        * examples/Service_Configurator/IPC-tests/server/Handle_R_Dgram.i
        * examples/Service_Configurator/IPC-tests/server/Handle_R_Stream.h
        * examples/Service_Configurator/IPC-tests/server/Handle_R_Stream.i
        * examples/Service_Configurator/IPC-tests/server/Handle_L_CODgram.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_L_CODgram.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_Timeout.h
        * examples/Service_Configurator/IPC-tests/server/Handle_Timeout.i
        * examples/Service_Configurator/IPC-tests/server/Handle_L_FIFO.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_L_FIFO.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_L_SPIPE.h
        * examples/Service_Configurator/IPC-tests/server/Handle_L_SPIPE.i
        * examples/Service_Configurator/IPC-tests/server/Handle_Broadcast.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_Broadcast.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Dgram.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Dgram.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Stream.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Stream.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_R_Dgram.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_R_Dgram.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_R_Stream.cpp
        * examples/Service_Configurator/IPC-tests/server/Handle_R_Stream.inl
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Pipe.h
        * examples/Service_Configurator/IPC-tests/server/Handle_L_Pipe.i

          Moved the .i file to .inl (with history), changed the includes in the
          .cpp and .h files to match, removed the .i file.

Thu Jul 27 18:43:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html:
          Some more updates to refer to the subversion archive

Thu Jul 27 13:57:31 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/svn/config

          Fixed syntax errors.  thanks to Adam Mitz for reporting them.

Thu Jul 27 10:14:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Committing some small changes I had pending to see how svn behaves now
        with updates and status info on the build systems.

        * ace/Recursive_Thread_Mutex.{h,cpp}:
          Changed removed_ to a bool

        * ace/Thread_Mutex.{h,cpp,inl}:
          Changed removed_ to a bool and removed ACE_USES_OBSOLETE_GUARD_CLASSES
          support.

Thu Jul 27 07:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao.doxygen:
        * etc/tao_portableserver.doxygen:
          Set ignore prefix

        * Kokyu/Dispatcher_Task.i
        * Kokyu/Dispatcher_Task.inl
          Renamed .i to .inl so that we can have a look how subversion stores
          this in the history

        * Kokyu/Dispatcher_Task.cpp
        * Kokyu/Dispatcher_Task.h
        * Kokyu/Makefile.am
          Updated for the change above.

Wed Jul 26 07:25:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/sets-manager.py:
          Fixed typo

Wed Jul 26 07:25:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html:
        * html/Stats/index.shtml:
        * docs/ACE-bug-process.html:
          Updated documentation to point to the new svn repository

Tue Jul 25 21:51:07 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/PythonACE/fuzz/max_project_len.py
        * bin/PythonACE/fuzz/inline.py

          Fixed errors in these checks.

Tue Jul 25 20:52:51 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/PythonACE/fuzz/cpp_inline.py

          Fixed this check, it was incorrectly matching ACE_INLINES inside
          defines and comments.

Tue Jul 25 20:16:26 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/svn/svn-prefs.reg
        * docs/svn/config

          Updated to add global-ignores to mimic .cvsignore functionality.

Tue Jul 25 19:40:54 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/PythonACE/__init__.py

          This enables PythonACE to be loaded as a module.

        * bin/PythonACE/fuzz/check_includes.py
        * bin/PythonACE/fuzz/no_conflict_markers.py

          Fixed these checks, they were incorrectly flagging errors.

        * bin/fuzz.py

          Command line fuzz client that uses the PythonACE fuzz module.

        * bin/sets-manager.py

          Corrected this file to point at DOC/Middleware instead of ACE/Middleware.

Mon Jul 24 23:58:33 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/svn/svn-prefs.reg
        * docs/svn/config

          Updated these files to add svn:keywords to most text types.

Mon Jul 24 23:53:53 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/create_ace_build.pl

          Fix provided by Steve Huston to prevent this script from building
          links from .svn directories.

Mon Jul 24 19:17:37 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/fuzz.pl

          Disabled the ID string check until the script can be fixed to ignore
          .svn directories.

Mon Jul 24 15:45:34 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * Subversion conversion completed at revision 73730

Sun Jul 23 15:44:43 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * Repository frozen for repository conversion

Sun Jul 23 11:17:31 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/make_release:
          Don't exclude the other mwc files for vc71/vc8, this will create then
          some more workspace files which just contain a subset of the projects

Sun Jul 23 09:25:12 UTC 2006  Olli Savia  <ops@iki.fi>

        * NEWS:
          Added a note about TTY_IO API change.

Sat Jul 22 19:12:10 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/svn/config
        * docs/svn/svn-prefs.reg

          These are client side configuration files for Subversion. Currently,
          the automate setting svn:eol-style and svn:executable properties on
          newly added files.

Sat Jul 22 18:28:33 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/sets-manager.py

          First cut of a branching script for subverion.  Pass --help
          to get documentation.

Fri Jul 21 13:28:31 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          Updated because of -oS addition to tao_idl

Fri Jul 21 13:17:31 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.cpp:
          Const improvements and initialise pointer with 0

Thu Jul 20 21:44:31 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/Service_Config_Test.cpp:

          In testLimits (), surrounded string literals with ACE_TEXT to
          fix a build error on wchar builds.

Thu Jul 20 16:42:04 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Basic_Types.h:

          Removed ACE_NTOHLL function.  It was experimental, untested and
          not ready for the ACE sources just yet.

          Removed "ace/os_include/netinet/os_in.h" include directive.  Now
          that ACE_NTOHLL has been removed it is no longer necessary.

        * ace/Numeric_Limits.h:

          Commented out "{unsigned} long long" specializations in the
          ACE_LACKS_NUMERIC_LIMITS case.  They're currently not used, and
          we need

Thu Jul 20 15:19:30 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Basic_Types.h: Added

          # include "ace/os_include/netinet/os_in.h" // Get ntohl()

          and added the inline keyword to ACE_NTOHLL() to fix the problems
          introduced with

          Wed Jul 19 22:46:51 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

Thu Jul 20 15:01:32 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Configuration.cpp: Made
          ACE_Configuration_ExtId::operator==() and
          ACE_Configuration_ExtId::operator!=() case insensitive.  Thanks
          to Domingos Monteiro <d dot monteiro at netia dot net> for this
          contribution.

Thu Jul 20 09:57:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/tao_no_iiop.mpb:
          New feature to disable iiop in TAO

        * bin/MakeProjectCreator/config/global.features:
          Set tao_no_iiop to 0 by default

Thu Jul 20 09:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.h:
          Doxygen improvements

Thu Jul 20 08:55:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Mutex.{h,cpp,inl}:
          Made the removed_ member a bool instead of an int

Thu Jul 20 08:37:17 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          Fixed compile error on VxWorks. Thanks to Johnny for pointing
          out the problem.

Wed Jul 19 23:39:05 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/PythonACE/fuzz/__init__.py
        * bin/PythonACE/fuzz/_generic_handler.py
        * bin/PythonACE/fuzz/_mailer.py
        * bin/PythonACE/fuzz/_singleton.py
        * bin/PythonACE/fuzz/_warning_handler.py
        * bin/PythonACE/fuzz/streams_include.py

          Changes necessary to support mailing (non-fatal) Fuzz errors to
          the user that attempts a commit.  streams_include is an example
          of a fuzz check that sends warnings instead of stopping commits.

Wed Jul 19 22:46:51 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Basic_Types.h (ACE_INT64, ACE_UINT64):

          Silence g++ "-pedantic" warnings regarding use of "long long"
          type by preceding the typedef with the g++ __extension__
          keyword.

Wed Jul 19 21:15:51 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * NEWS:

          Updated the file with a note announcing the interface change
          from "Wed Jul 19 20:11:52 UTC 2006".

Wed Jul 19 20:11:52 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/ACE.h:
        * ace/ACE.cpp:

          Changing ACE::debug () to use boolean instead of char.

        * ace/Acceptor.cpp:
        * ace/DLL_Manager.cpp:
        * ace/Dynamic_Service_Dependency.cpp:
        * ace/SOCK_Dgram_Bcast.cpp:
        * ace/Service_Gestalt.cpp:
        * ace/Service_Object.cpp:
        * ace/Service_Repository.cpp:
        * ace/Service_Types.cpp:

          Updating places where ACE::debug() return value is interpreted
          as a integral type.

        * tests/Service_Config_Test.cpp:

          Fixing the test to correctly account for XML-based service
          configurations.

Wed Jul 19 15:53:09 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/PythonACE/fuzz/__init__.py
        * bin/PythonACE/fuzz/_fuzz.py
        * bin/PythonACE/fuzz/_generic_handler.py
        * bin/PythonACE/fuzz/_path.py
        * bin/PythonACE/fuzz/_types.py
        * bin/PythonACE/fuzz/check_includes.py
        * bin/PythonACE/fuzz/cpp_inline.py
        * bin/PythonACE/fuzz/inline.py
        * bin/PythonACE/fuzz/math_include.py
        * bin/PythonACE/fuzz/max_filename.py
        * bin/PythonACE/fuzz/max_project_len.py
        * bin/PythonACE/fuzz/newline.py
        * bin/PythonACE/fuzz/no_conflict_markers.py
        * bin/PythonACE/fuzz/noncvs.py
        * bin/PythonACE/fuzz/ptr_arith_t.py
        * bin/PythonACE/fuzz/refcountservantbase.py
        * bin/PythonACE/fuzz/verify_changelog.py

          This is a python module designed to eventually replace the
          bin/fuzz.pl script.  Each .py file in the fuzz directory that
          does not have a _ at the beginning of its filename contains a
          single check.  New fuzz checks can be added to the system simply
          by creating a new file in the fuzz directory.  Care should be
          taken to select a filename that does not conflict with an
          existing python module.

          ptr_arith_t.py and inline.py are good examples that use the
          generic handler to implement their checks, max_project_len is a
          good example of a check that does not use the generic handler.

Wed Jul 19 15:07:29 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/DLL_Manager.cpp:

          Fixing a build problem on HP and Windows, as a consequence of my
          earlier change: "Tue Jul 18 19:17:54 UTC 2006". Moral: use
          ACE_TEXT around literal expressions only.

Wed Jul 19 13:55:39 UTC 2006  Olli Savia  <ops@iki.fi>

        * examples/IPC_SAP/DEV_SAP/reader/reader.cpp:
        * examples/IPC_SAP/DEV_SAP/writer/writer.cpp:
          Updated to reflect changes below.

Wed Jul 19 13:39:13 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.h:
          Changed type of rtsenb from 'int' to 'unsigned char'.
          Updated documentation to note that 'parityenb' member is
          now deprecated.

        * ace/TTY_IO.cpp:
          Changed constructor of Serial_Params class to assign sensible
          values to class members.

Wed Jul 19 10:47:31 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Proactor_Timer_Test.cpp: Corrected compile warning re static.

Wed Jul 19 08:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/ciao_config_handlers_base.mpb:
          Use exceptions as base project

Wed Jul 19 7:14:10 UTC 2006  Ossama Othman  <ossama_othman@symantec.com>

        * ace/String_Base.h (size_type):

          Explicitly bring the ACE_String_Base_Const::size_type typedef
          into the ACE_String_Base<> scope through a "using" declaration.
          IBM Visual Age 6 and Sun Studio 10 have difficulty resolving the
          name otherwise.

        * ace/SString.cpp:

          Replaced std::numeric_limits<>::max() call that was
          inadvertently introduced with its ACE_Numeric_Limits<>
          counterpart.  The former is not available on VxWorks.

Tue Jul 18 22:52:38 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Message_Queue_Test_Ex.cpp: Rearranged the pieces left out of
          single-threaded builds; should correct single-threaded builds.

Tue Jul 18 20:50:49 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * Happy Birthday to me!!

Tue Jul 18 19:17:54 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

          This change is in response to bug#2602, which was reported by
          Lothar Werzinger <lothar at tradescape dot biz>. It fixes a
          problem with trying to use XML as the service configuration file
          format.  The change also includes additional comments and
          in-line documentation on the new ability to use local service
          repositories.

        * ace/DLL_Manager.cpp:

          Updated the debugging output of DLL_Handle::open() to be able to
          see _why_ a DLL open failed.  For example, the errno message is
          'not found' in a case where one tries to open library A, which
          in turn depends on library B, but B is missing.  This change
          allows one to see the underlying cause for the error
          (via DLL_Handle::error(), if ACE_DEBUG=2, or greater is
          present).

        * ace/Parse_Node.h:
        * ace/Parse_Node.cpp:

          Moving the ACE_Service_Type_Factory here, from
          Service_Config.{h,cpp} This class is only needed when
          ACE_USES_CLASSIC_SVC_CONF is 1, i.e. when ACE is using the
          non-XML configuration file format.  Therefore, moving it to
          Parse_Node.{h,cpp} causes it to compile only if needed.

        * ace/Service_Config.h:

          Removed the static get_xml_svc_conf() method, as it already has
          the required implementation in the base class.

        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.cpp:

          Moved the ACE_Service_Type_Factory class to Parse_Node.{h,cpp}.
          Updated the documentation with a more clear description of the
          class responsibilities. Corrected minor omissions.

Tue Jul 18 18:12:17 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ACE-INSTALL.html: Updated the description of how to build
          ACE+TAO using MPC.  Thanks to Steve Totten for helping with
          this.

Tue Jul 18 19:04:42 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Numeric_Limits.h:

          Corrected short integer limit constants, i.e. "s/SHORT/SHRT/g".

          Try other known "long long" integer constants if
          "{U}LLONG_{MIN,MAX}" are not available.  Issue a preprocessor
          error if all known cases have been exhausted.

Tue Jul 18 16:55:31 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Makefile.am (libACE_la_SOURCES, nobase_include_HEADERS):

          Added new Sig_{Adapter,Handler}.* source and header files.

Mon Jul 17 23:18:52 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/README: Documented the ACE_TIMEPROBE_ASSERTS_FIXED_SIZE macro.

Mon Jul 17 23:16:55 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Timeprobe_T.cpp (timeprobe): Added a check to guard against
          segfaults by wrapping the index around when it reaches the end
          of the buffer.  Thanks to Patrick Rabau <pr2345 at gmail dot
          com> for this fix.

Tue Jul 18 13:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_2595_Regression

Tue Jul 18 12:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          Fixed the rules to decide whether a .inl file should be added
          or not. Thanks to Chad Elliot for noticing this incorrect
          rule.

Tue Jul 18 09:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/PerlACE/ProcessVX_Win32.pm:
          Increased delay factor from 2 to 3, downloading executables
          seems to take longer now

Tue Jul 18 09:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/PerlACE/Process_Unix.pm:
          Removed chorus support

Mon Jul 17 22:52:19 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Proactor.cpp (schedule_timer): Record the ACE_Proactor instance
          that the timer is scheduled on in the ACE_Handler; makes this
          behavior analogous to that in ACE_Reactor::schedule_timer().

        * tests/Proactor_Timer_Test.cpp: Add a test for repeating timers and
          canceling a repeating timer when it's likely that an expiration for
          the timer is already queued when it's canceled.

Mon Jul 17 16:06:57 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Unload_libACE.cpp: Alter the libACE suffix for HP-UX on
          PA-RISC only. Also see:
          Fri Jul 14 19:44:03 UTC 2006  john_c  <johnc@ociweb.com>

Mon Jul 17 22:11:42 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * examples/Threads/process_semaphore.cpp:

          Added #include of ace/OS_NS_stdlib.h to get ACE_OS::atoi().

Mon Jul 19 11:21:56 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/String_Base.cpp:
        * ace/String_Base.inl:

          Explicitly qualify size_type parameters with "typename" to force
          some compilers (Sun Studio 10) to recognize it as a type.

Mon Jul 17 17:49:41 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * include/makeinclude/platform_hpux_aCC.GNU (SOFLAGS):

          Corrected shared library path for Itanium builds.

        * protocols/ace/HTBP/HTBP_ID_Requestor.cpp (get_HTID):

          Use new ACE_CString::size_type type to hold string
          position/index value, instead of "int".  Addresses "comparison
          between signed and unsigned" warnings.

Mon Jul 17 16:04:07 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added information about the use of atomic operations on SPARC
          Solaris.

Mon Jul 17 15:09:21 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Refcounted_Auto_Ptr.{h inl} (null): Changed the return type
          of the null() method from int to bool in order to more accurately
          reflect the true/false nature of the returned value.

        * NEWS: Noted the above change.

Mon Jul 17 15:05:05 UTC 2006  Steve Huston  <shuston@riverace.com>

        * examples/System_V_IPC/SV_Message_Queues/MQ_Server.cpp: Added
          include "ace/Log_Msg.h" in the "non-supported platform" case.
          Fixes compile error on Windows.

Mon Jul 17 13:03:09 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * ace/ace_for_tao.mpc:

          Sig_Handler.cpp and Sig_Adapter.cpp are needed to link gperf.

Mon Jul 17 12:49:34 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * netsvcs/servers/main.cpp:

          Added a missing #include for ace/Sig_Adapter.h.

Mon Jul 17 11:57:26 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * ace/qt_reactor.mpb:

          Removed this file.  It was no longer referenced by ace and it's
          functionality was replaced by ace_qtreactor.mpc.

Mon Jul 17 10:41:14 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Message_Queue_Test_Ex.cpp: Removed the VxWorks-specific
          section from MQ_Ex_N_Tester::receiver() - it was apparantly
          pulled in from another test example and didn't need to be here.
          Should resolve compile errors on VxWorks.

Mon Jul 18 09:32:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.3.h:
        * include/makeinclude/platform_vxworks6.3.GNU:
          New files for VxWorks 6.3

        * ace/os_include/sys/os_types.h:
        * ace/os_include/os_stdio.h:
        * ace/OS_NS_unistd.inl:
        * ace/OS_NS_arpa_inet.cpp:
          Updated for VxWorks 6.3

Sun Jul 17 06:49:21 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * apps/soreduce/Library.cpp (set_path):
        * apps/soreduce/Obj_Module.cpp (add_source):
        * examples/Misc/test_sstring.cpp:
        * examples/Web_Crawler/Command_Processor.cpp:
        * examples/Web_Crawler/URL_Visitor.cpp:

          Use new ACE_CString::size_type type to hold string
          position/index value, instead of "int".  Addresses "comparison
          between signed and unsigned" warnings.

        * examples/APG/Signals/SigAction.cpp:
        * examples/System_V_IPC/SV_Message_Queues/MQ_Server.cpp:
        * examples/System_V_IPC/SV_Message_Queues/TMQ_Server.cpp:

          Include "ace/OS_NS_stdlib.h" to pull in ACE_OS::exit()
          prototype.

        * examples/APG/Signals/SigGuard.cpp:
        * examples/APG/Signals/SigHandler.cpp:
        * examples/APG/Signals/SigHandlers.cpp:
        * examples/APG/ThreadManagement/Signals.cpp:
        * examples/APG/ThreadManagement/Signals2.cpp:
        * examples/ASX/CCM_App/SC_Server.cpp:
        * examples/ASX/Event_Server/Event_Server/event_server.cpp:
        * examples/ASX/UPIPE_Event_Server/event_server.cpp:
        * examples/Connection/blocking/SPIPE-connector.h:
        * examples/Connection/misc/Connection_Handler.cpp:
        * examples/Connection/non_blocking/CPP-acceptor.h:
        * examples/Connection/non_blocking/CPP-connector.h:
        * examples/Service_Configurator/IPC-tests/server/server_test.cpp:
        * netsvcs/lib/TS_Clerk_Handler.cpp:

          Include "ace/Sig_Handler.h" or "ace/Sig_Adapter.h" to pull in
          ACE_Sig_Handler or ACE_Sig_Adapter class declaration,
          respectively.  Necessitated by "ace/Signal.h" refactoring.

Sun Jul 16 23:14:53 UTC 2006  Ciju John  <johnc@ociweb.com>

        * ace/String_Base_Const.cpp:

          Took out an extra sem-colon. It seems to make the
          FC4_Versioned_Namespace build grumpy.

Sat Jul 15 16:14:05 UTC 2006  Ciju John  <johnc@ociweb.com>

        * NEWS:

          Added entry on HPUX library extension changes.

Fri Jul 14 22:10:02 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Sig_Handler.cpp:

          Removed explicit template instantiations.  They snuck back in
          when Signal.* was refactored.  Thanks to Johnny for pointing
          this out.

Fri Jul 14 21:32:02 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Numeric_Limits.h:

          "ace/ACE_Export.h" -> "ace/ACE_export.h".  Darn Windows case
          insensitivity.

          Removed unnecessary "ACE_Export" from ACE_Numeric_Limits primary
          template.

        * ace/Registry.cpp (make_name):

          Use ACE_TString::size_type, not ssize_t, to hold string position
          values.  Addresses signed/unsigned comparison warnings.

        * ace/Shared_Memory_Pool.h:

          Include new "ace/Sig_Handler.h" header to pull in
          ACE_Sig_Handler class declaration.

        * ace/String_Base.h:

          Added tips to documentation related to potentially user visible
          changes.

Fri Jul 14 21:10:11 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Atomic_Op.h (ACE_Atomic_Op):
        * ace/Atomic_Op.inl (ACE_Atomic_Op):

          Reverted change that made the constructor parameters for the
          "long" type specialization be passed in by reference to const
          instead of by value.  Explicit template instantiation is no
          longer performed by ACE so there is no need for the
          specialization constructor parameters to match the primary
          template constructor parameters.

        * ace/CDR_Base.cpp:
        * ace/CDR_Stream.h:
        * ace/CDR_Stream.inl:

          Const-correctness improvements.

        * ace/CDR_Base.h:

          Minor const related cosmetic changes.

        * ace/CDR_Base.inl (first_size, next_size):

          Quickly multiply by two using a bit shift.  This is guaranteed
          to work since the variable is an unsigned integer.

        * ace/CORBA_macros.h:

          Removed unnecessary instantiation of emulated exception
          environment variable from native exception case.  Reduces
          footprint in code that uses the ACE emulated exception macros in
          a native C++ exception configuration, and provides a slight
          performance increase due to resulting tighter binaries.

        * ace/DLL_Manager.cpp (get_dll_names):

          ACE_TString::rfind() now return an ACE_TString::size_type type.
          Use ACE_TString::size_type, not ssize_t, to hold the return
          value of ACE_TString::rfind().

        * ace/Dev_Poll_Reactor.cpp:

          Include new "ace/Sig_Handler.h" header to pull in
          ACE_Sig_Handler class declaration.

          Added support for HP-UX devpoll headers.

        * ace/Event_Handler.cpp:

          No need to include "ace/Message_Block.h".

        * ace/MMAP_Memory_Pool.h:
        * ace/Select_Reactor_T.cpp:
        * ace/TP_Reactor.cpp:
        * ace/WFMO_Reactor.inl:

          Include new "ace/Sig_Handler.h" header to pull in
          ACE_Sig_Handler class declaration.

        * ace/Malloc_Base.h (ACE_Allocator):

          Defined a new "size_type" typedef (currently a "size_t") to
          simplify potential allocator size type changes in the future.
          It's introduction was motivated by the ACE string class size
          type fixes described below.  Analogous to the STL
          std::allocator<>::size_type typedef.

        * ace/Numeric_Limits.h:

          Traits containing basic integer limits.  Useful for
          template-based code on platforms that lack
          std::numeric_limits<>.  These traits are not meant to be a
          replacement for std::numeric_limits<>.  Rather they are a crutch
          until all ACE-supported platforms support
          std::numeric_limits<>.  [Bug 2451]

        * ace/OS_NS_dirent.inl:

          "__USE_POSIX" -> "_POSIX_SOURCE".  The former is a C library
          implementation-specific feature test macro/symbol.

        * ace/OS_NS_stdio.cpp:
        * ace/OS_NS_stdio.h:
        * ace/OS_NS_stdio.inl (get_win32_versioninfo):

          Fixed/added missing wide character support.

        * ace/OS_NS_stdlib.cpp (mkstemp_emulation):

          Clean up preprocessor conditional blocks by taking advantage of
          new ACE_Numeric_Limits<> trait templates.

        * ace/OS_NS_stdlib.inl (atop):

          Address VC++ 64-bit warnings by taking advantage of standard
          intptr_t type, if available.

        * ace/OS_NS_sys_socket.inl (closesocket):

          Do not shutdown the write end here.  Doing so will break
          applications that duplicate a handle on fork(), for example, and
          expect to continue writing in the fork()ed process.

        * ace/OS_NS_sys_utsname.cpp (uname):

          Fixed garbage in wide string output.

        * ace/Object_Manager.cpp:

          No need to include "ace/Containers.h".

          Include newly refactored "ace/Sig_Adapter.h" instead of old
          "ace/Signal.h".  Removes dependency on the ACE_Reactor.  Allows
          service configurator-disabled subset containing
          ACE_Object_Manager support to be built, e,g, MPC ace_svcconf=0
          configuration.

        * ace/Object_Manager_Base.cpp (init):
        * ace/Process.cpp (pass_handle):

          Fixed Windows version info handling in wide string
          configurations.

        * ace/Process_Manager.h (wait):

          Clarified that the timeout value is a relative time, not
          absolute, in the documentation.

        * ace/SOCK_Acceptor.cpp (shared_open):

          Removed assertion that assumes all protocol families are
          internet related.  This method is invoked by some non-internet
          protocol subclasses, such as ACE_LSOCK_Acceptor.

        * ace/SOCK_Stream.cpp (close):

          Reinstituted explicit close_writer() method call for the
          ACE_WIN32 case since ACE_OS::close() no longer causes the writer
          to be shutdown on Windows (nor should it!).

        * ace/Service_Config.cpp:

          Replaced old "ace/Signal.h" include directive with
          "ace/Sig_Adapter.h".  ACE_Sig_Handler support is unnecessary.

          Removed redundant "ace/Service_Config.h" include directive.

        * ace/Sig_Adapter.cpp:
        * ace/Sig_Adapter.h:
        * ace/Sig_Handler.cpp:
        * ace/Sig_Handler.h:
        * ace/Sig_Handler.inl:
        * ace/Signal.cpp:
        * ace/Signal.h:
        * ace/Signal.inl:

          Refactored ACE_Sig_Adapter and ACE_Sig_Handler classes from
          "ace/Signal.*" into their own dedicated source files.  Allows
          ACE_Sig_{Guard,Set} to be used without introducing a dependency
          on the ACE_Reactor framework.

        * ace/String_Base_Const.cpp (npos):
        * ace/String_Base_Const.h (npos):

          Introduced a new "size_type" typedef.  This is consistent with
          the standard C++ string class typdef/trait.

          The "no position" constant is now an unsigned integer of the
          same "size" type used by the underlying ACE string allocator.
          It is defined to be the maximum value the unsigned type can
          handle (e.g. ACE_Numeric_Limits<size_type>::max()).  This works
          since a string length will always be less than or equal to
          "max() - 1" since the final character in the string is the null
          terminator.  [Bug 2598]

        * ace/String_Base.cpp:
        * ace/String_Base.h:
        * ace/String_Base.inl:
        * ace/SString.cpp:
        * ace/SString.h:
        * ace/SString.inl:

          All size parameter and return value types are now consistent
          with the size type of the underlying allocator
          (i.e. ACE_Allocator::size_type).  Addresses inability of ACE
          string classes to provide valid search index for string lengths
          greater than the maximum value of ssize_t, a signed type.  In
          particular, the find(), rfind() and strstr() methods now return
          an unsigned integer (size_t) instead of a signed one
          (ssize_t). Affected classes include:

              ACE_CString
              ACE_WString
              ACE_TString
              ACE_NS_WString

         Unless you have been explicitly using -1 instead of npos when
         comparing the return value of find(), rfind() and strstr(),
         and/or assigning the return value to ssize_t you should not see
         any difference. A new size_type typedef has been added to the ACE
         string class to aid developers.

         The ACE_String_Base<>::strstr() documentation as well as a
         default rfind() argument erroneously referred to -1 instead of
         npos. Those instances have been corrected.

         To summarize, a "no position" condition is denoted using the npos
         constant, not -1. It can be referred directly by scoping it with
         the appropriate string class (e.g. ACE_CString::npos,
         ACE_WString::npos, etc).  [Bug 2598]

        * ace/Task_T.h:

          Include "ace/IO_Cntl_Msg.h" to pull in ACE_IO_Cntl_Msg class
          declaration.

        * ace/Time_Value.cpp (max_time):

          Cleaned up preprocessor conditional blocks by taking advantage
          of ACE_Numeric_Limits trait templates.

        * ace/Timer_Queue_Adapters.cpp:

          Include "ace/Signal.h" to pull in ACE_Sig_Guard class
          declaration.

        * ace/Timer_Queue_Adapters.h:

          Forward declare ACE_Sig_Set class.  No need for the full blown
          declaration.

        * ace/Token.cpp:

          Minor cosmetic change.

        * ace/ace_wchar.h (ACE_GetVersionEx):

          New wide string support for Windows "GetVersionEx{A,W}()"
          functions.

        * ace/ace_wchar.inl:

          Improved const-correctness.

        * ace/config-aix-4.x.h:
        * ace/config-macosx-panther.h:
        * ace/config-macosx-tiger.h:
        * ace/config-macosx.h:

          Fixed single-threaded configuration so that all multi-thread
          support is disabled.

        * ace/ace.mpc:

          Added missing DLL_Manager.cpp source file, and newly refactored
          Sig_{Adapter,Handler}.cpp source files.

        * ace/ace_for_tao.mpc:

          Explicitly require the ace_svcconf MPC feature.

          Added missing ACE_LACKS_ACE_TOKEN macro.  The ace_for_tao subset
          does not support ACE's token collections.

        * ace/svcconf.mpb:

          Do not define ACE_HAS_ACE_SVCCONF.  There is no such macro in
          the ACE sources.

          Explicitly remove ACE_LACKS_ACE_SVCCONF from the macro list.

          Moved "DLL_Manager.cpp" to the core ACE library source file
          list.  "DLL_Manager.cpp" is not an optional component, and must
          always exist in ACE regardless of whether or not ACE's service
          configurator support is enabled.

        * ace/token.mpb:

          Do not define ACE_HAS_ACE_TOKEN.  There is no such macro in
          the ACE sources.

          Explicitly remove ACE_LACKS_ACE_TOKEN from the macro list.

        * bin/MakeProjectCreator/config/ace_for_tao.mpb:

          Added missing ACE_LACKS_ACE_TOKEN macro.  The ace_for_tao subset
          does not support ACE's token collections.

        * tests/SString_Test.cpp:

          Corrected checks for "no position" return values to compare
          against "npos" constant, not "-1".

Fri Jul 14 20:57:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/INET_Addr.cpp:
          Initialise some pointers explicitly with 0

Fri Jul 14 20:41:23 UTC 2006  john_c  <johnc@ociweb.com>

        * bin/tao_orb_tests.lst:

          Add new test TAO/tests/Optimized_Connection to nightly builds.

Fri Jul 14 20:39:41 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-vxworks6.2.h: Reverted this change:
          Fri Jul 14 10:34:43 UTC 2006  Steve Huston  <shuston@riverace.com>
          It appears to not work, and I can't test anything else here.

Fri Jul 14 18:53:32 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/global.features
        * bin/MakeProjectCreator/config/stl.mpb

          Added an stl feature/base project for projects that use portions
          of the STL that may not be universally supported.

Fri Jul 14 19:44:03 UTC 2006  john_c  <johnc@ociweb.com>

        * ace/config-hpux-11.00.h:
        * include/makeinclude/platform_hpux_aCC.GNU:

          Changing the shared library extension for hpux ia64 to ".so". On
          HP-UX 11i Version 1.5 the naming scheme is lib*.sl for PA and
          lib*.so on IPF.

Fri Jul 14 19:29:59 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_stdio.cpp (DllMain): Add extern "C" to the DllMain
          signature - enables it to be located and called at startup.
          Thanks to Hubert Talbot <Hubert dot Talbot at criq dot qc dot ca>
          for this fix.

Fri Jul 14 19:13:06 UTC 2006  john_c  <john@ociweb.com>

        * ace/Timer_Queue_Adapters.cpp:

          Include file was missing. Fixes compile error when
          ACE_HAS_DEFERRED_TIMER_COMMANDS is defined.

Fri Jul 14 19:05:15 UTC 2006  Ciju John  <john_c@ociweb.com>

        * bin/tao_other_tests.lst:

          Adding the TAO/orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated
          test to nightly builds.

Fri Jul 14 16:25:00 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/tao_orb_tests.lst:
          Added exclusions for Bug_2593_Regression test.

Fri Jul 14 15:50:34 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * bin/PerlACE/Process_Unix.pm:
        * bin/PerlACE/Process_Win32.pm:

          Added an optional parameter to Process->Kill().  If the parameter is
          true then the return value from the process is ignored.

Fri Jul 14 15:45:04 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Message_Queue_Test_Ex.{h cpp}: Corrected for !ACE_HAS_THREADS.

Fri Jul 14 15:39:53 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * bin/tao_other_tests.lst:
          Added new test (TAO/orbsvcs/tests/CosEvent/Timeout/run_test.pl).

Fri Jul 14 10:34:43 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-vxworks6.2.h: Added ACE_LACKS_USECONDS_T to fix a
          compile error. It's in the non-__RTP__ section since that's where
          ACE_LACKS_SUSECONDS_T was, but I'm not sure this is correct.

Fri Jul 14 07:26:46 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/Thread_Mutex.h:
        * ace/ace_wchar.h:
        * tests/SOCK_Dgram_Bcast_Test.cpp:
          Fixed typos in comments.

        * m4/config_h.m4:
          Removed references to ACE_HAS_TERM_IOCTLS. It's no longer
          used in ACE/TAO/CIAO code.

Fri Jul 14 02:11:21 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/tao_orb_tests.lst:
          Added new test for Bug 2593 to nightly suite.

Thu Jul 13 20:40:10 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/config-integritySCA.h:
          Removed references to ACE_HAS_ATTR_SETSCHED. It's no longer
          used in ACE/TAO/CIAO code.

        * ace/config-rtems.h:
          Removed references to ACE_HAS_SIGNAL_SAFE_OS_CALLS. It's no longer
          used in ACE/TAO/CIAO code.

        * ace/config-sco-5.0.0-mit-pthread.h:
          Removed references to ACE_HAS_T_OPMGMT. It's no longer
          used in ACE/TAO/CIAO code.

Thu Jul 13 10:35:39 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/Base_Thread_Adapter.cpp:
        * ace/Cleanup.cpp:
        * ace/OS.cpp:
        * ace/OS_Errno.cpp:
        * ace/OS_Log_Msg_Attributes.cpp:
        * ace/OS_NS_Thread.cpp:
        * ace/OS_NS_arpa_inet.cpp:
        * ace/OS_NS_ctype.cpp:
        * ace/OS_NS_dirent.cpp:
        * ace/OS_NS_dlfcn.cpp:
        * ace/OS_NS_errno.cpp:
        * ace/OS_NS_fcntl.cpp:
        * ace/OS_NS_math.cpp:
        * ace/OS_NS_netdb.cpp:
        * ace/OS_NS_poll.cpp:
        * ace/OS_NS_pwd.cpp:
        * ace/OS_NS_regex.cpp:
        * ace/OS_NS_signal.cpp:
        * ace/OS_NS_stdio.cpp:
        * ace/OS_NS_stdlib.cpp:
        * ace/OS_NS_string.cpp:
        * ace/OS_NS_strings.cpp:
        * ace/OS_NS_stropts.cpp:
        * ace/OS_NS_sys_mman.cpp:
        * ace/OS_NS_sys_msg.cpp:
        * ace/OS_NS_sys_resource.cpp:
        * ace/OS_NS_sys_select.cpp:
        * ace/OS_NS_sys_sendfile.cpp:
        * ace/OS_NS_sys_shm.cpp:
        * ace/OS_NS_sys_socket.cpp:
        * ace/OS_NS_sys_stat.cpp:
        * ace/OS_NS_sys_time.cpp:
        * ace/OS_NS_sys_uio.cpp:
        * ace/OS_NS_sys_wait.cpp:
        * ace/OS_NS_time.cpp:
        * ace/OS_NS_unistd.cpp:
        * ace/OS_NS_wchar.cpp:
        * ace/OS_TLI.cpp:
        * ace/Thread_Adapter.cpp:
        * ace/Thread_Control.cpp:
        * apps/JAWS2/HTTPU/parse_http_request.cpp:
        * apps/JAWS2/HTTPU/parse_http_response.cpp:

          Fixed typo in comment.

Thu Jul 13 09:51:33 UTC 2006  Olli Savia  <ops@iki.fi>

        * configure.ac:
          Removed references to ACE_HAS_EXCEPTION_H. It's no longer
          used in ACE/TAO/CIAO code.

Thu Jul 13 09:48:10 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/os_include/os_string.h:
        * ace/os_include/os_stropts.h:
          Fixed typo in comment.

Thu Jul 13 09:32:54 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/config-vxworks6.2.h:
        * configure.ac:
        * m4/config_h.m4:
          Removed references to ACE_HAS_USING_KEYWORD. It's no longer
          used in ACE/TAO/CIAO code.

Thu Jul  6 20:45:15 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Refcounted_Auto_Ptr.{h inl}: Repaired the ACE_Refcounted_Auto_Ptr
          reset() and release() methods per Bugzilla #1925. They will both now
          detach from the underlying ACE_Refcounted_Auto_Ptr_Rep object;
          reset() will create a new one for the new pointer specified as its
          argument. Generally modified the class to not make changes to the
          underlying ACE_Refcounted_Auto_Ptr_Rep (such as with reset()). This
          safely allows the get() method to avoid using the lock for reading
          the pointer value since there's no way to change the underlying
          rep's pointer.
          Also cleaned up the Doxygen stuff for these classes.

          This work resulted in removal of the following methods in
          ACE_Refcounted_Auto_Ptr_Rep (not ACE_Refcounted_Auto_Ptr):
            - null ()
            - assign ()
            - release ()
            - reset ()

          This significantly improves ACE_Refcounted_Auto_Ptr. This is not
          a recommendation to [not] use it over ACE_Strong_Bound_Ptr. Just
          responding to user reports. It may still be possibly/adviseable to
          work further on this class, though I have no specific ideas or
          reports at this time.

        * tests/Refcounted_Auto_Ptr_Test.{h cpp}: Added tests for release()
          and reset() per code supplied in Bugzilla #1925. Removed code in
          ACE_ASSERT since it doesn't run in Release builds; replaced with
          explicit checks and ACE_ERROR.

Wed Jul 12 20:32:49 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Message_Queue_Test_Ex.{h cpp}: Fixed compile errors on Linux.

Wed Jul 12 19:15:58 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue_T.{h cpp}: Added a new class,
          ACE_Message_Queue_Ex_N<class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL>, that
          is similar to ACE_Message_Queue_Ex in that the object queued is a
          template parameter. However, ACE_Message_Queue_Ex_N allows the
          enqueueing and dequeueing of multiple chained objects at once. This
          wasn't added to ACE_Message_Queue_Ex because the chained object
          functionality requires the ACE_MESSAGE_TYPE class to have a
          ACE_MESSAGE_TYPE *next (void) const method, analogous to
          ACE_Message_Block::next(), to follow the chain and this would
          probably break existing applications using ACE_Message_Queue_Ex.

        * tests/Message_Queue_Test_Ex.{h cpp}: Added test capability for
          ACE_Message_Queue_Ex_N.

        * NEWS: Added description of the new class.

          Thanks to Guy Peleg <guy dot peleg at amdocs dot com> for
          contributing this new class and its tests.

Wed Jul 12 16:37:40 UTC 2006  Steve Huston  <shuston@riverace.com>

        * etc/ace.doxygen:
        * etc/ace_qos.doxygen:
        * etc/ace_ssl.doxygen: Use the IGNORE_PREFIX directive to have Doxygen
          ignore the ACE_, ACE_QoS_, ACE_SSL_ prefixes when alphabetizing
          the class index. Thanks to Stefan Naewe <naewe dot s at atlas dot de>
          for this idea.

        * THANKS: Added Stefan Naewe to the Hall of Fame.

Wed Jul 12 14:30:16 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-lynxos.h:
        * ace/config-netbsd.h: Changed ACE_SCANDIR_CMP_USES_VOIDPTR to
          ACE_SCANDIR_CMP_USES_CONST_VOIDPTR - makes it match the decl in
          ace/os_include/os_dirent.h and should resolve a compile error.

Wed Jul 12 13:55:09 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue.inl: Move the #include out of the namespace; see
          Tue Jul 11 13:38:10 UTC 2006  Steve Huston  <shuston@riverace.com>

Wed Jul 12 10:15:12 UTC 2006  Martin Corino <mcorino@remedy.nl>

        * include/makeinclude/platform_openvms.GNU:
          Added fixes for SSL support.

        * ace/config-openvms.h:
          Added ACE_HAS_PTHREAD_SCHEDPARAM.

        * ace/Global_Macros.h:
        * ace/Lib_Find.cpp:
        * ace/Service_Config.cpp:
        * ace/Service_Config.h:
        * ace/Service_Object.cpp:
        * ace/Service_Object.h:
          Moved OpenVMS specific dynamic service support class to a
          better place.

Wed Jul 12 07:13:01 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/FILE_Connector.cpp:
          It is safe to use ACE_OS::mkstemp() on all platforms.

Wed Jul 12 02:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_static_order.lst:
          Build ObjRefTemplate before IORInterceptor

Tue Jul 11 23:09:28 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_hpux_aCC.GNU:

          The C compiler doesn't support the -mt option.  So, add -mt to
          CC_THR_DEFS and then later add CC_THR_DEFS to CCFLAGS.  CCFLAGS
          isn't used when compiling C files.

Tue Jul 11 22:30:21 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-win32-common.h:
        * ace/config-WinCE.h: Break the tight tie between UNICODE and
          ACE_USES_WCHAR I introduced in
          Thu Oct  6 17:56:19 2005  Steve Huston  <shuston@riverace.com>
          Now ACE_USES_WCHAR is always on for CE; non-CE Windows builds must
          explicitly set ACE_USES_WCHAR independent of UNICODE. Thanks to
          Russell Morra <russell_mora at symantec dot com> for explaining
          the situation and submitting this fix.

Tue Jul 11 22:20:14 UTC 2006  Steve Huston  <shuston@riverace.com>

        * bin/generate_doxygen.pl: Add the ability to put the generated
          HTML output in a specified location using the new -html_output
          command line option. It alters the path specified for the
          HTML_OUTPUT and GENERATE_TAGFILE Doxygen options.

Tue Jul 11 22:09:56 UTC 2006  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_linux.GNU: Added support for the
          "buildbits=64" and "buildbits=32" make settings to target
          32- and 64-bit build targets, respectively. Thanks to Boris
          Kaminer <boris dor kaminer at gmail dot com> for this addition.

Tue Jul 11 22:22:04 UTC 2006  Steve Huston  <shuston@riverace.com>

        * configure.ac: Change the minimum automake version to 1.9.6; this is
          required to generate Makefiles that work properly on AIX.

        * m4/compiler.m4: For AIX, replace ACE_AIX_MAJOR_VERS and
          ACE_AIX_MINOR_VERS compile macros with ACE_AIX_VERS as the
          hand-edited platform_aix_ibm.GNU has and the code expects.
          Also removed the AIX 3 and 4 code since AIX 3 and 4 are no longer
          supported. Also, turned on -qtemplateregistry for xlC-type
          compilers (Visual Age C++ 6 and XL C++ 7).

Tue Jul 11 21:37:51 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_stdio.cpp (snprintf, sprintf): In the wchar versions,
          adjust the preprocessor checks to pick up the way that Solaris
          indicates the presence of XPG5 capability. Allows these functions
          to work, which allows ACE_Log_Msg to work also.

        * ace/OS_NS_unistd.{h inl} (ualarm): Changed u_long arguments and
          return value to useconds_t to gain portability.

        * ace/OS_NS_dirent.{h inl cpp}: Made the selector and comparator
          function pointer arguments to ACE_OS::scandir() and
          scandir_emulation() be extern "C" to enforce their use with a
          C RTL function. This resolves warnings from Solaris and makes usage
          correct across all platforms. The function types are now in
          typedefs ACE_SCANDIR_SELECTOR and ACE_SCANDIR_COMPARATOR,
          respectively. The typedef was used previously only for Windows/MSVC
          where the calling convention change had bit someone - now it's
          uniform for all.
          Also, folded in the ACE_SCANDIR_CMP_USES_VOIDPTR def here to
          set up the proper typing with extern "C" for when it's needed to
          cast inside the ACE_OS::scandir() implementation. The interface
          offered by ACE_OS::scandir() is always defined in terms of
          ACE_SCANDIR_SELECTOR and ACE_SCANDIR_COMPARATOR.

        * ace/Dirent_Selector.{h cpp}: Use the extern "C"-containing typedefs
          for selector/comparator functions set up for ACE_OS::scandir() in
          ACE_Dirent_Selector as well since they get passed through to ACE_OS.

        * apps/soreduce/Library.cpp:
        * tests/Dirent_Test.cpp: Mark selector/comparator functions that'll be
          passed to ACE_OS::scandir() as extern "C" to match new param types.

        * ace/config-aix-5.x.h: Added ACE_HAS_SCANDIR since AIX has scandir(),
          as well as the needed ACE_SCANDIR_SEL_LACKS_CONST and
          ACE_SCANDIR_CMP_USES_VOIDPTR to adjust to it's differences from
          the common way scandir() is usually defined.

        * ace/config-hpux-11.00.h: Added ACE_HAS_SCANDIR.

        * ace/config-linux-common.h: Clarify that, despite the man page,
          ACE_SCANDIR_CMP_USES_CONST_VOIDPTR is needed, at least on RHEL 3
          and 4.

        * ace/README: Added descriptions for ACE_HAS_SCANDIR and
          ACE_SCANDIR_CMP_USES_VOIDPTR as well as the new settings
          ACE_SCANDIR_SEL_LACKS_CONST and ACE_SCANDIR_CMP_USES_CONST_VOIDPTR.

        * NEWS: Summarize the above user-visible selector/comparator changes.

Tue Jul 11 17:39:00 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/Basic_Types.h:
        * ace/OS.h:
          Removed unnecessary includes.

Tue Jul 11 17:25:06 UTC 2006  Olli Savia  <ops@iki.fi>

        * include/makeinclude/platform_rtems.x_g++.GNU:
        * include/makeinclude/wrapper_macros.GNU:

          Removed references to obsolete ACE_HAS_GNUG_PRE_2_8 make
          variable. Removed egcs checks.

Tue Jul 11 16:55:57 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          Enable raw mode correctly on POSIX systems. Accept "none" as
          valid parity value. Thanks to hongxing <hongxing777 at gmail dot com>
          for the patch.

        * ace/TTY_IO.h:
          Updated documentation to reflect changes above.

        * ace/os_include/sys/os_resource.h:
          Fixed typo in comment.

Tue Jul 11 16:38:29 UTC 2006  Olli Savia  <ops@iki.fi>

        * ace/config-linux-common.h:
        * ace/os_include/os_signal.h:
        * ace/os_include/os_stropts.h:

          Changed ACE_HAS_ISASTREAM_PROTO to ACE_HAS_ISASTREAM_PROTOTYPE and
          ACE_HAS_PTHREAD_SIGMASK_PROTO to ACE_HAS_PTHREAD_SIGMASK_PROTOTYPE
          to better follow ACE naming conventions.

Tue Jul 11 13:38:10 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue.inl: Include "ace/Guard_T.h" in the ACE_WIN32
          section to avoid compile errors with Release builds.

        * ace/TSS_T.h: Improved documentation.

        * tests/ACE_Init_TestDlg.cpp: Added comment block at the top to explain
          the file's purpose.

        * tests/Task_Test.cpp: Added a smoke test for the new
          ACE_Task::last_thread() method.

Thu Jul  6 12:48:58 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/OS_NS_sys_socket.inl (sendto): Initialize "bytes_sent" to 0
          to avoid random values.  Thanks to Winston Zhang <winston_ace at
          kubao-inc dot com> for reporting this.

Wed Jul  5 20:32:20 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/WFMO_Reactor.cpp (open): Added some more code to prevent
          memory leaks when the ACE_WFMO_Reactor is reopened.  Thanks to
          Sonicfly Zhou <zhoucn at txsec dot com> for this fix.

Tue Jul 11 12:19:23 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao.doxygen:
          Added .idl to FILE_PATTERNS

Tue Jul 11 12:01:12 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Atomic_Op.cpp:
        * ace/Atomic_Op_Sparc.h:
        * ace/Atomic_Op_Sparc.c:
        * include/makeinclude/platform_sunos5_sunc++.GNU:

          Added a SPARC assembler implementation of functions needed for use
          within the ACE_Atomic_Op specializations.  The implementation will
          only be used if atomic_ops_sparc is set to 1 in
          platform_macros.GNU.  It also requires that v8plus or higher be
          used with SunCC.

        * ace/Makefile.am:
        * ace/ace.mpc:

          Added the new Atomic_Op_Sparc.c.

        * ace/CDR_Base.cpp:

          In grow(), call the clone_nocopy() method on the ACE_Data_Block
          with the new size.  Previously, the clone_nocopy() would be called
          and then directly after that, size() would be called on the cloned
          data block which would re-allocate to the new size and copy the
          previous contents.

          In the same method, we avoid constructing an ACE_Message_Block to
          avoid reference count manipulating the data block's reference
          count.

          Also, in consolidate(), avoid attempting to copy data if the
          destination and source are the same. [RT 8372]

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:

          Added a constructor that takes an ACE_Data_Block* which can be
          used to avoid an allocation while constructing the
          ACE_Message_Block held by the ACE_OutputCDR. [RT 8372]

        * ace/Message_Block.h:
        * ace/Message_Block.cpp:
        * ace/Message_Block_T.h:
        * ace/Message_Block_T.cpp:

          Added a new parameter to the ACE_Data_Block::clone_nocopy() method
          that allows the user copy the data block, but increase the size
          all in one step. [RT 8372]

        * ace/OS_NS_string.inl:

          Added an unrolled implementation of memset, only active if
          ACE_HAS_SLOW_MEMSET is defined, that supports up to 16 bytes
          without calling into the memset() C function.

        * ace/config-sunos5.5.h:

          SunCC 5.x supports new(nothrow_t).  So, I have enable the use of
          it when exceptions are enabled. [RT 8372]

        * ace/OS_NS_Thread.h:
        * ace/os_include/os_pthread.h:

          Added macro definitions required to build ACE and TAO on Solaris
          without using the pthreads library.

        * include/makeinclude/platform_aix_ibm.GNU:
        * include/makeinclude/platform_hpux_aCC.GNU:
        * include/makeinclude/platform_irix6.x_sgic++.GNU:

          Added 64-bit options to the CFLAGS macros to deal with the newly
          added C file in ACE. [RT 8372]

Tue Jul 11 01:47:23 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Log_Msg_Test.cpp:
          initialise pointer with 0

Tue Jul 11 01:37:23 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.h:
          Layout change

Tue Jul 11 01:09:23 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          If -oA has been used as idlflags, don't add the A files

Tue Jul 11 00:50:23 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/generate_compile_stats.sh:
          Updated to also handle redhat version information

Sun Jul 09 05:53:23 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE version 5.5.2 released.

Fri Jul  7 08:07:50 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html: Small improvements

Thu Jul  6 19:57:50 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Improvements and corrections motivated by
          Abdul Sowayan <abdullah dot sowayan at lmco dot com>.

Wed Jul  5 19:15:37 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Cleaned up further; clarified role of DOC and
          support companies and use of PROBLEM-REPORT-FORM.

        * NEWS: Noted removal of Chorus and pSOS.

Tue Jul  4 04:10:11 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Memcpy_Test.cpp: Added a short summary of this test.
          Thanks to Arvind Krishna for contributing it.

Tue Jul  4 01:05:47 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Memcpy_Test.cpp (testit): ACE-ified this test.

Tue Jul  4 01:03:52 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/CE_fostream.cpp:
        * tests/Service_Config_Test.cpp: Improved the description of these
          tests.

Mon Jul  3 14:42:45 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * NEWS: Updated the NEWS file with information about using multiple
          service repositories.

Mon Jul  3 03:25:43 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/APG/Svc_Config/HA_Configurable_Server_Dynamic.cpp
          (ACE_TMAIN): Changed the reactor event loop to explicitly pass
          in ACE_Reactor::check_reconfiguration().  Thanks to Michael Reed
          <mnr102 at yahoo dot com> for reporting this.

Mon Jul  3 03:15:14 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Service_Configurator/IPC-tests/server/server_test.cpp
          (ACE_TMAIN): Changed the reactor event loop to explicitly pass
          in ACE_Reactor::check_reconfiguration().

Fri Jun 30 13:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_static_order.lst:
          Added CSD_Framework and CSD_ThreadPool

Fri Jun 30 09:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/generate_rel_manpages:
          Updated doxygen version we are using for the release

Fri Jun 30 07:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoexe.mpb:
          Added corba/e and core_minimum_corba as base projects so that
          the executables that can be build with CORBA/e and minimum
          corba do have set the correct flags during compilation

Thu Jun 29 17:30:52 UTC 2006  Steve Huston  <shuston@riverace.com>

        * NEWS: Added a note about the logging changes from
          Tue May 16 22:23:55 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

Thu Jun 29 10:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Signal_Test.cpp:
          Layout changes

Thu Jun 29 09:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Containers_T.cpp:
          Initialise pointer with 0

Thu Jun 29 08:52:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_g++_common.GNU:
        * include/makeinclude/platform_osf1_4.x_cxx.GNU:
        * include/makeinclude/platform_sunos5_ghs.GNU:
        * include/makeinclude/platform_sunos5_sunc++.GNU:
        * include/makeinclude/wrapper_macros.GNU:
          Removed support for explicit templates, we don't support that
          anymore

Thu Jun 29 08:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ACE-guidelines.html:
          Document that the STL generic algorithms are safe to be used and
          made some other small updates

Wed Jun 28 10:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ace_for_tao.mpc:
          Added missing file because of the sendfile addition to TAO

Wed Jun 28 09:20:08 UTC 2006  Boris Kolpackov  <boris@kolpackov.net>

        * protocols/ace/RMCast/Link.cpp:
        * protocols/ace/RMCast/Link.h:
        * protocols/ace/RMCast/Socket.cpp:
          Added explicit calls to close functions for sockets and pipes.
          Thanks to finalpatch <fengli@gmail.com> for reporting this.

Wed Jun 28 07:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ACE-guidelines.html:
          Document that template template arguments are not possible to
          be used because HP aCC 3.70 doesn't support it.

Tue Jun 27 13:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Unbounded_Queue.cpp:
          Explicitly initialise pointers with 0

Tue Jun 27 08:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ace_for_tao.mpc:
          Added MMAP_Memory_Pool.* because TAO uses these for sendfile
          support

Tue Jun 27 06:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.inl:
        * ace/config-WinCE.h:
          WinCE doesn't seem to have SetFilePointerEx, so introduced
          ACE_LACKS_SETFILEPOINTEREX which we check in OS_NS_unistd.inl,
          if this is set we fallback to SetFilePointer

Tue Jun 27 06:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CDR_File_Test.cpp:
          Fixed 64bit conversion warning

Tue Jun 27 06:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taolib.mpb:
          Added tao_versioning_idl_defaults as base

Mon Jun 26 13:27:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:
          Added PICurrent refactoring note. Moved from NEWS to TAO/NEWS

Mon Jun 26 08:27:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/DLL_Manager.h:
          Reexport ACE_DLL_Handle, the ACE_DLL_Manager returns a pointer
          to this type in its interfaces. Thanks to Patrick Bennett
          <Patrick dot Bennett at inin dot com> for reporting this

Mon Jun 26 08:17:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * include/makeinclude/platform_openvms.GNU:
          Some compileswitch changes.

        * ace/config-openvms.h:
          Added multicast filtering setting.

Sun Jun 25 11:54:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * include/makeinclude/platform_openvms.GNU:
          Some compileswitch changes.

Sun Jun 25 08:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_mpc_auto_compile.pl:
          Build gperf and TAO_IDL before tao

Sat Jun 24 14:02:15 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Lib_Find.cpp (open_temp_file): In the ACE_WIN32 section,
          'perm' is not used, so use ACE_UNUSED_ARG on it.

        * tests/Hash_Map_Manager_Test.cpp: Use const ACE_TCHAR with literal
          string, not non-const. Resolves compile warning on some compilers.

Fri Jun 23 21:03:37 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ace/Lib_Find.cpp (open_temp_file):

          Added FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE
          for the 'perms' argument of the Windows version, which
          eliminates a open_temp_file() failure in the IDL compiler
          on a file that was previously opened/closed with fopen/fclose.
          Thanks to Krishnakumar Balasubramanian <kitty@dre.vanderbilt.edu>
          for figuring out the fix.

Fri Jun 23 16:01:31 UTC 2006  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/test_proactor.cpp (open): When calling
          ACE_OS::open(), don't supply a very UNIXy-looking 0644 value for
          the 'perms' argument. Let it default to something reasonable for
          the platform. Using 0644 on Windows passes something Windows doesn't
          like, and the test fails. Thanks very much to William Cote
          <William dot Cote at hp dot com> for fixing this.

        * THANKS: Added William Cote to the Hall of Fame.

Fri Jun 23 13:20:21 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted the change below, it triggers pidl recompilation for all pidl files
        Fri Jun 23 07:36:21 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>
        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          Added .pidl to the inputext. This should be the way how things should
          run fine again in TAO but it seems somewhere ther is something missing.

Fri Jun 23 07:36:21 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          Added .pidl to the inputext. This should be the way how things should
          run fine again in TAO but it seems somewhere ther is something missing.

Thu Jun 22 21:05:20 UTC 2006  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * ace/OS_NS_fcntl.h (ACE_DEFAULT_OPEN_PERMS): Set the value of
          ACE_DEFAULT_OPEN_PERMS from ACE_DEFAULT_FILE_PERMS instead of
          0.  This ensures that users of ACE_OS::open() who don't override
          the default argument get a sensible default.

Thu Jun 22 15:08:01 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/SSL/SSL_Context.{h cpp} (load_trusted_ca): Added a third
          argument, bool use_env_defaults, which defaults to true. If false,
          the ca_file and ca_dir arguments do not get ACE defaults applied
          to them if passed as 0. This allows a user to specify a 0 file or
          directory to the underlying SSL_CTX_load_verify_locations() function.
          If a ca_dir is supplied, attempt to add its CA list to the
          X509 names in addition to that of ca_file.

          (seed_file): If the file loads ok, check RAND_status() to see if
          there's "enough" entropy.

        * ace/SSL/SSL_Context.inl:
        * ace/SSL/SSL_Asynch_Stream.cpp:
        * ace/SSL/SSL_SOCK_Stream.cpp: When setting up SSL_CTX, set the verify
          mode as well. When creating a new socket object, let it inherit the
          verify mode from the SSL context rather than making a call back to
          the context to retrieve the verify mode and setting it with a
          separate SSL call.

Thu Jun 22 14:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_static_order.lst:
          Build the portableserver earlier in the list of libs

Thu Jun 22 05:29:48 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.cpp:

          The initialize_i() method would not remove a service, which
          failed to initialize, in case the ACE_NOLOGGING is defined. For
          some reason the two blocks of code were switched around.  Thanks
          to Martin Corino <mcorino at remedy dot nl> for pointing out the
          problem.

Wed Jun 21 21:29:04 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-lynxos.h: Added ACE_LACKS_STRPTIME. This should fix a
          compile error on LynxOS.

Wed Jun 21 15:45:32 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Hash_Map_Manager_Test.cpp: Fix incorrect concatenating of
          text literals.

Wed Jun 21 07:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Misc/test_trace.cpp:
          Fixed fuzz error

Tue Jun 20 23:20:17 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Framework_Component_DLL.cpp: Added a description of this test.

Tue Jun 20 22:34:43 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Service_Config_DLL.cpp: Added a comment block at the top
          to describe this file's purpose.

Tue Jun 20 22:09:54 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_time.cpp (strptime): Added a const_cast<char*> wherever
          a return of something based on the const char *buf was done; related
          to:
          Tue Jun 20 20:19:37 UTC 2006  Steve Huston  <shuston@riverace.com>

        * NEWS: Noted that the signature of ACE_OS::strptime() changed, also
          related to the entry above.

Tue Jun 20 20:19:37 UTC 2006  Steve Huston  <shuston@riverace.com>

        * configure.ac:
        * ace/README:
        * ace/OS_NS_time.h:
        * ace/OS_NS_time.inl:
        * ace/OS_NS_time.cpp:
        * m4/config_h.m4: The ACE_OS::strptime() wrapper was previously not
          compiled in unless ACE_HAS_STRPTIME was set. If this was set and
          ACE_LACKS_NATIVE_STRPTIME was also set, an emulation was supplied.
          This has been changed so that:
             - ACE_OS::strptime() is always supplied.
             - The emulation is used if ACE_LACKS_STRPTIME is set.
             - The first arg to ACE_OS::strptime() is now "const char *"
               instead of "char *" as the native strptime() is.
             - ACE_OS::strptime() is inlineable.
          ACE_HAS_STRPTIME is no longer used, and ACE_LACKS_NATIVE_STRPTIME
          is changed to ACE_LACKS_STRPTIME. If ACE_LACKS_STRPTIME is set
          and the user decides not to include the emulation, then
          ACE_REFUSE_STRPTIME_EMULATION should be set, which will cause
          ACE_NOTSUP_RETURN to be used instead of the emulation.

        * ace/config-borland-common.h:
        * ace/config-vxworks5.x.h:
        * ace/config-vxworks6.2.h:
        * ace/config-win32-dmc.h:
        * ace/config-win32-ghs.h:
        * ace/config-win32-mingw.h:
        * ace/config-win32-msvc-7.h:
        * ace/config-win32-msvc-8.h:
        * ace/config-win32-visualage.h: Removed ACE_HAS_STRPTIME; changed
          ACE_LACKS_NATIVE_STRPTIME to ACE_LACKS_STRPTIME.

        * ace/config-cygwin32.h:
        * ace/config-doxygen.h:
        * ace/config-irix6.x-common.h:
        * ace/config-linux-common.h:
        * ace/config-netbsd.h:
        * ace/config-openvms.h:
        * ace/config-sunos5.5.h:
        * ace/config-tandem-nsk-mips-v3.h: Removed ACE_HAS_STRPTIME.

        * ace/config-rtems.h: Changed ACE_LACKS_NATIVE_STRPTIME to
          ACE_LACKS_STRPTIME.
          NOTE!! RTEMS users should add #define ACE_REFUSE_STRPTIME_EMULATION
          to the local config.h file to avoid bringing in the emulation,
          maintaining behavior in previous ACE versions.

        For additional background on why this arrangement was put in place
        originally, please see:
        Tue Aug 10 14:46:12 1999  David L. Levine  <levine@cs.wustl.edu>
        It makes sense, but adds a unique requirement for porting to new
        platforms that one must know to explicitly enable an existing wrapper,
        even if its natively available. This has tripped up a number of porting
        efforts (including mine) and now it's consistent with other wrappers.

        * m4/ace.m4: Add --enable-wince to set up the BUILD_WINCE setting
          that's inserted into the Makefile.am files for the wince MPC setting.

        * ace/ace.mpc: Replace config-win32-msvc-6.h with config-win32-msvc-8.h

        * bin/bin/mpc: Removed the verbatim for automake that adds
          TESTS=auto_run_tests.pl - it was an early attempt at getting the
          test ability to work that never was right.

        * */Makefile.am: Regenerated with MPC. This effectively changes the
          version scheme based on the changes in:
          Thu May 18 16:37:46 UTC 2006  Steve Huston  <shuston@riverace.com>

        * apps/Makefile.am: Hand-added code to avoid building gperf if
          --disable-gperf was specified to configure. Thanks to Robert Schwebel
          <robert at schwebel dot de> for this fix.

        * apps/gperf/tests/Makefile.am: This one doesn't get close to being
          regenerated with MPC. The "stamp" items require hand-tweaking as
          given in previous entries for this file.

        * ace/Makefile.am: Regenerated with MPC and hand-tweaked to add needed
          "nobase_include_HEADERS =" line.

        * configure.ac: Added the following new AC_CONFIG_FILES entries:

        * ACEXML/tests/util/Makefile.am:
        * apps/JAWS2/Makefile.am:
        * apps/JAWS2/JAWS/Makefile.am:
        * examples/ASX/Event_Server/Makefile.am:
        * examples/ASX/Event_Server/Event_Server/Makefile.am:
        * examples/ASX/Event_Server/Transceiver/Makefile.am:
        * examples/ASX/UPIPE_Event_Server/Makefile.am:
        * examples/Map_Manager/Makefile.am:
        * examples/Reactor/TP_Reactor/Makefile.am:
        * protocols/tests/Makefile.am:
        * protocols/tests/RMCast/Makefile.am: New files, generated with MPC.

        * THANKS: Added Robert Schwebel to the Hall of Fame.

Tue Jun 20 19:25:20 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Task.{h inl cpp}: Moved the public data members (thr_count_,
          thr_mgr_, flags_, grp_id_, lock_) from public to a new protected
          section. There was a comment that said these should be private, but
          no reason given why they weren't.
          Removed the thr_count_dec() method since it is no longer used
          anywhere in ACE. Moved its functionality into cleanup() where it
          also sets the new last_thread_id_ member (see below).
          Added a new member last_thread_id_ which holds the thread ID
          (ACE_thread_t) of the last thread to exit svc() processing. Before
          any threads exit, the value is 0; it's set to 0 in the constructor
          and in activate().
          The new accessor, ACE_thread_t last_thread (void) const, retrieves
          the value of last_thread_id_. It's recommended that a thread in
          close() check the last_thread_id_ value, rather than the thr_count(),
          when deciding if it's safe to destroy the object. Since thr_count
          can be seen as 0 in multiple threads concurrently, it's not safe
          to rely on for destroying a thread. This fixes Bugzilla #2339.
          Thanks to Howard Finer <hfiner@sonusnet.com> for this idea.

        * NEWS: Added a note about the new ACE_Task::last_thread() method.

Tue Jun 20 18:55:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/Based_Pointer_Test.cpp:
        * tests/Based_Pointer_Test_Lib.cpp:
        * tests/CDR_File_Test.cpp:
        * tests/DLL_Test.cpp:
        * tests/Malloc_Test.cpp:
        * tests/Process_Manager_Test.cpp:
          Several fixes to make OpenVMS happy.

Tue Jun 20 18:04:45 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Log_Msg/test_ostream.cpp (ACE_TMAIN): Couldn't used
          std::getline() for some odd reason..  Fixed by using
          ifstream::getline() instead.  Thanks to Johnny for reporting
          this.

Tue Jun 20 14:31:05 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Misc/test_trace.cpp (recursive): Simplified the
          ACE_TRACE method name to make fuzz happy.

Tue Jun 20 13:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Hash_Map_Manager_Test.cpp:
          Fixed unicode compile problems

Tue Jun 20 12:51:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/ChangeLogEditor/FileLocatorFactory.pm:

          Now supports the standard hack for subversion on Windows when
          SVN_ASP_DOT_NET_HACK environment variable is set. Instead
          of placing repo info in a .svn file, it is placed in _svn.

Tue Jun 20 12:31:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * ace/os_include/os_time.h:
        * ace/os_include/sys/os_types.h:
          Fixed type definitions for OpenVMS.

        * ace/config-openvms.h:
          Updated build configuration for OpenVMS.

        * ace/Lib_Find{.h .cpp}:
        * ace/DLL_Manager.cpp:
        * ace/Service_Config{.h .cpp}:
        * ace/Global_Macros.h:
        * ace/Strategies_T.cpp:
        * ace/Logging_Strategy.cpp:
          Added support for dynamic loading scheme of service configurator
          framework under OpenVMS.

        * ace/OS_NS_stdio.h:
          Additional include for OpenVMS.

Tue Jun 20 08:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taolib.mpb:
          Add corba subset projects as base

        * bin/MakeProjectCreator/config/core_minimum_corba.mpb:
          New file for usage within the core libs

        * bin/MakeProjectCreator/config/core_minimum_corba.mpb:
          Make minimum corba a feature

Tue Jun 20 07:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Log_Msg/test_callback.cpp:
          Fixed typo

Tue Jun 20 07:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/global.features:
          CORBA subset configurations are disabled by default

Mon Jun 19 18:03:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * include/makeinclude/platform_openvms.GNU:
          Changed template instantiation model.

        * include/makeinclude/rules.local.GNU:
          Change to enable adding custom REALCLEAN_FILES in platform file.

Mon Jun 19 15:11:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * bin/auto_run_tests.pl:
          Changed to enable spawning Perl testscripts on OpenVMS.

Mon Jun 19 14:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html:
          Replaced dsp/dsw with sln/vcproj. Thanks to Abdullah Sowayan
          <abdullah dot sowayan at lmco dot com> for reporting this

Mon Jun 19 13:14:54 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Hash_Map_Manager_Test.cpp (test_two_allocators): Fixed a typo.
          Thanks to Abdul for reporting this.

        * tests/Hash_Map_Manager_Test.cpp (test_two_allocators): Added a
          test for the two allocator version of ACE_Hash_Map_Manager.
          Thanks to Jarek for contributing this.

Mon Jun 19 02:55:48 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Log_Msg/test_ostream.cpp (ACE_TMAIN): Enhanced the test to
          show the ofstream output better.

Mon Jun 19 01:31:46 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Log_Msg/test_callback.cpp (ACE_TMAIN): Zapped the
          extraneous '\n' from the messages.

Mon Jun 19 01:06:49 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Misc/test_trace.cpp: Enhanced to the the ACE_TRACE macro.

Sun Jun 18 16:58:20 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * netsvcs/clients/Logger/indirect_logging.cpp (ACE_TMAIN): Cleaned
          up the test to work if none of the daemons are running.

Sun Jun 18 16:44:14 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Signal.{inl,cpp}: Moved the destructors out of the *.inl
          file into the *.cpp file since inline destructors aren't really
          a good idea.

Sun Jun 18 16:35:13 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp (send): Printout the type
          of log message as a diagnostic to make it easier to see the
          filtering that's going on!

Fri Jun 16 17:48:18 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/CDR_Size.cpp (adjust): Added a fix for the case where
          ACE_LACKS_CDR_ALIGNMENT is undefined.  Thanks to Aleksandar
          Vukajlovic <vukajlo at finsoft dot co dot yu> for contributing
          this.

Fri Jun 16 13:57:53 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Ping_Socket.cpp: Replaced the use of char, short, int,
          etc. for struct ip and icmp with the equivalent
          ACE_UNIT[8,12,32] types to ensure a fixed size.  Thanks to Paul
          Daugherty <Paul at nextalk dot com> and Robert S. Iakobashvili
          <coroberti at gmail dot com> for reporting this and contributing
          a fix.

Mon Jun 19 11:37:17 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.{h,cpp,inl}:
          Changed the (f)truncate method to use ACE_LOFF_T and use
          SetFilePointerEx on windows to fix 64bit warnings

Mon Jun 19 10:08:17 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/diff-builds.pl:
          Changed this script not to die when we can't find results for
          a certain date, then just take the closest results.

Mon Jun 19 10:00:17 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Service_Gestalt.cpp:
        * ace/Acceptor.cpp:
          Const improvement

Mon Jun 19 09:56:17 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/OS_NS_sys_sendfile.cpp (sendfile_emulation):

          Verify the ACE_OS::mmap() call succeeded prior to continuing.

          Use ACE_OS::send() instead of ACE_OS::write() on Windows.  The
          latter doesn't provide the same semantics on Windows as on
          Unix.  Addresses an ACE_OS::sendfile() failure on Windows.

Tue Jun 13 02:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/run_tests.lst:
          Don't run netlink test in ACE_FOR_TAO configuration

Mon Jun 12 17:00:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * include/makeinclude/wrapper_macros.GNU:

          Set winnt to 0 if not explicitly set by a platform_*.GNU
          makefile.

Mon Jun 12 16:48:19 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/SV_Shared_Memory_Test.cpp (run_main): Moved a couple of
          calls outside of ACE_ASSERT since they don't belong in there.

Mon Jun 12 14:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_stat.h:
          Fixed mingw definition of ACE_stat

Mon Jun 12 10:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/vc6.features:
          Removed this file, wer don't support vc6 anymore

Mon Jun 12 01:30:03 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Thread_Manager.cpp (wait): Changed the flag parameters to be
          bool rathet than int.  Thanks to Johnny for this suggestion.

Sat Jun 10 22:32:03 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Corrected a bunch of platform build things and
          hopefully clarified the sections a bit.

        * bin/make_release: Removed the search for, and chmod for, dsp/dsw
          files - they're for MSVC6 which is no longer generated.

Sat Jun 10 10:07:32 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Thread_Manager.cpp:
          Fix for compiler errors.

Sat Jun 10 04:31:54 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/automake.features:

          Define MPC feature variable "wxWindows" to 1.

        * bin/MakeProjectCreator/config/wxwindows.mpb:

          Add automake specific definitions for compile_flags,
          linkflags, and pure_libs.

Fri Jun  9 19:25:19 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Thread_Manager.h: Added a new parameter to wait() that
          determines whether relative or absolute time is used.  Thanks to
          Sonicfly Zhou <zhoucn at txsec dot com> for this idea.

Fri Jun  9 14:06:52 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Hash_Map_With_Allocator_T.{h,inl,cpp}: Enhanced this class
          so that it compiles with the new "two allocator"
          ACE_Hash_Map_Manager_Ex class.  This class needs to be improved
          so that it actually leverages the two allocator features, but
          that's something for the future.

Fri Jun  9 13:15:38 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Hash_Map_Manager_T.h: Clarified the meaning of the
          constructor and open() parameters.

Fri Jun  9 13:07:40 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Hash_Map_Manager_T.cpp (open): If the user doesn't supply an
          entry_alloc pointer then use the table_alloc pointer.

Fri Jun  9 13:00:22 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Hash_Map_Manager_T.cpp (open): Zapped the use of ACE_ASSERT
          and replaced it with and if statement.  We shouldn't be using
          ACE_ASSERT in ACE library code..

Fri Jun  9 12:53:48 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Hash_Map_Manager_T.{h,inl,cpp}: Added support for a separate
          allocator for creating the entries in the chain of
          ACE_Hash_Map_Entry objects in the buckets.  There are now two
          allocators, one for the bucket table and the other for the
          entries in the buckets.  Thanks to Jaroslaw Nozderko <jaroslaw
          dot nozderko at polkomtel dot com dot pl> for this fix.

Fri Jun  9 14:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ace_for_tao.mpc:
          Updated because ARGV and Arg_Shifter are template files now

Fri Jun  9 13:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/FILE_IO.cpp:
          Const improvements

        * ace/MMAP_Memory_Pool.cpp:
          Added static cast from ACE_LOFF_T to size_t and const improvements

Fri Jun  9 13:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/FILE_IO.cpp:
          Added static cast from ACE_LOFF_T to size_t

Fri Jun  9 13:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_stat.inl:
          Use special stat call for vc71

Fri Jun  9 13:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Connection_Recycling_Strategy.h:
          Doxygen improvement

Fri Jun  9 13:12:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.{h,cpp}:
          Use ACE_LOFF_T in the pwrite interface

Fri Jun  9 12:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_stat.h:
          With vc71 use _stati64 for ACE_stat, not __stat64. The first has
          time as 32bit, the second time as 64 bit (__time64_t) which causes
          problems because the time interfaces of ACE use time_t which is
          32bit with vc71 but 64bit with vc8.

Fri Jun  9 10:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Configuration_Import_Export.cpp:
          Initialise pointer with 0

Fri Jun  9 10:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Arg_Shifter.{h,cpp}:
          Also refactored ACE_Arg_Shifter to ACE_Arg_Shifter<CHAR_TYPE> and
          made ACE_Arg_Shifter a typedef. The refactoring fo ACE_ARGV resulted
          in a drop of the TAO Hello client executable of about 2.5Kb which is
          nice for such a small change.

        * ace/ace.mpc:
        * ace/Makefile.am:
          Updated because Arg_Shifter.cpp is not a template file

Fri Jun  9 09:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-linux-common.h:
          Added ACE_HAS_NETLINK, all linux versions do support netlink sockets.
          This closes bugzilla bug 2317. Thanks to Robert Iakobashvili
          <coroberti at gmail dot com> and Razi Ben-Yehuda
          <raziebe at gmail dot com> for creating the netlink wrappers

Fri Jun  9 08:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/SOCK_Netlink_Test.cpp:
          New test for netlink sockets. Thanks to Robert Iakobashvili
          <coroberti at gmail dot com> for creating this test.

        * tests/tests.mpc:
        * tests/run_test.lst:
          Added new netlink test

Fri Jun  9 07:55:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ARGV.{h,cpp,inl}:
          Refactored ACE_ARGV to ACE_ARGV_T which is a template, where ACE_ARGV is
          now a typedef of ACE_ARGV_T<ACE_TCHAR>. Taken the idea from the wchar
          work of David Giovannini <giovannd at ociweb dot com>

        * ace/ace.mpc:
        * ace/Makefile.am:
          ARGV.cpp added to the template files, added the new netlink files

        * ace/OS_NS_sys_stat.{h,inl}:
        * ace/MMAP_Memory_Pool{h,cpp}:
        * ace/Mem_Map.{h,cpp,inl}:
        * ace/Filecache.{h,cpp}:
        * ace/FILE_IO.cpp:
        * ace/FILE.h:
          Use ACE_LOFF_T for the filesize so that we can support files bigger then
          2Gb on windows and other platforms. Also use for Borland the 64bit stat
          structure and api's. This fixes bugzilla bug 1286, thanks to Ruslan Zasukhin
          <sunshine at public dot kherson dot ua> for reporting this. Also fixes part
          of bugzilla bug 2359, thanks to Olivier Brunet <o dot brunet at free dot fr>
          for reporting this.

Thu Jun  8 17:13:42 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/String_Base.h,
          ace/Array_Map.h: Removed the @deprecated
          comments to make Ossama happy ;-)  This fixes bugid 2558.

Thu Jun  8 12:44:46 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/OS_NS_Thread.inl (recursive_mutex_lock): Cleaned up the
          structure of the code here so that we don't try to release the
          nesting lock unless it was acquired successfully.  Thanks to
          J.T. for reporting this.

Thu Jun  8 12:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/corba_e_compact.mpb:
        * bin/MakeProjectCreator/config/corba_e_micro.mpb:
          New base projects for CORBA/e micro and compact

Thu Jun  8 12:28:49 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * bin/DependencyGenerator/DependencyEditor.pm:
        * bin/DependencyGenerator/DependencyGenerator.pm:
        * bin/DependencyGenerator/GNUDependencyWriter.pm:
        * bin/DependencyGenerator/GNUObjectGenerator.pm:
        * bin/DependencyGenerator/Preprocessor.pm:
        * bin/depgen.pl:

          Committing performance improvements which take off about 7% from
          the dependency generation time for the whole ACE_wrappers tree.

Thu Jun  8 11:57:58 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/OS_NS_dirent.cpp:
        * ace/OS_NS_dirent.h:

          Don't compile the {opendir,readir,closedir,scandir}_emulation()
          functions if {opendir,readir,closedir,scandir} are provided by
          the OS.

Thu Jun  8 11:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Netlink_Addr.h:
        * ace/SOCK_SEQPACK_Association.h:
          Doxygen fixes

        * ace/OS_NS_Thread.inl:
          Const improvement

Thu Jun  8 11:37:59 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/config-netbsd.h:

          Define ACE_HAS_SCANDIR and ACE_SCANDIR_CMP_VOIDPTR.

Wed Jun  7 23:02:53 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * tests/Recursive_Mutex_Test.cpp: Use ACE_TEST_MUTEX instead of
          ACE_Recursive_Thread_Mutex so that we use the right version of
          mutex (ACE_Process_Mutex) on Windows.  Thanks to Doug for the
          suggestion.  This should fix the Recursive_Mutex_Test failing on
          Windows.

Wed Jun  7 21:42:36 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_config_handlers.mpb

          Fixed static library ordering problem.

Wed Jun  7 13:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-doxygen.h:
          Added ACE_HAS_NETLINK so that we get documentation for the new
          netlink classes

Wed Jun  7 13:31:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/run_test.lst:
          Removed chorus

Wed Jun  7 13:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_socket.h:
          When ACE_HAS_NETLINK is defined, include more files specific
          for this protocol.

Wed Jun  7 12:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Netlink_Addr.{h,cpp,inl}:
        * ace/SOCK_Netlink.{h,cpp,inl}:
          New files for netlink sockets. Thanks to Robert Iakobashvili
          <coroberti at gmail dot com> and Razi Ben-Yehuda
          <raziebe at gmail dot com> for creating these new files.
          These files will be added to the ACE mpc later this week, with
          the files in the repo it is much easier to test them on
          multiple linux version. See bugzilla bug 2317 for more info.

Wed Jun  7 12:28:18 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Changed the message displayed when a project isn't build when a
          particular feature is disabled.  Many users thought that this
          message was an error, I believe, because of the word 'missing'.

Wed Jun  7 11:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-suncc-common.h:
          New config file for the SunCC compiler, idea is to refactor
          all things related to the Sun C++ compiler to this file. This is
          to make it easier to support Sun C++ on Linux

Wed Jun  7 10:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_suncc.GNU:
          First version for using the Sun compiler on Linux. The compiler
          itself is an alpha version, so no guarantees at this moment

Wed Jun  7 10:07:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Strategies_T.cpp:
          Initialise pointer with 0 and const improvement

Wed Jun  7 09:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          When using -SS we do generate an empty S.h file, so add S
          to the header_outputext so that we zap this file during a clean

Wed Jun  7 09:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_aix_g++.GNU:
          Set X11 and Xt defines, thanks to Peter Grotrian
          <peter dot grotrian at pdv-fs dot de> for reporting this. This fixes
          bugzilla 2556

        * ace/config-sunos5.5.h:
          Added fixes to build with threads=0, this fixes bugzilla bug 2555. Thanks
          to Peter Grotrian <peter dot grotrian at pdv-fs dot de> for reporting
          this.

        * ace/config-aix-4.x.h:
          Added fixes to build with threads=0, this fixes bugzilla bug 2553. Thanks
          to Peter Grotrian <peter dot grotrian at pdv-fs dot de> for reporting
          this.

        * include/makeinclude/platform_chorus.GNU:
        * include/makeinclude/platform_chorus4.x_g++.GNU:
        * include/makeinclude/platform_chorus_ghs.GNU:
        * include/makeinclude/platform_psos_diab.GNU:
        * include/makeinclude/platform_psos_diab_ppc.GNU:
        * include/makeinclude/platform_psos_tm.GNU:
        * include/makeinclude/platform_psosim_g++.GNU:
          Removed these files, psos and chorus are not supported anymore

Wed Jun  7 08:27:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.cpp:
          Added needed check for VxWorks with task api

        * ace/os_include/sys/os_stat.h:
          Removed workarounds for old Borland compiler versions

Wed Jun  7 03:25:00 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_config_handlers_base.mpb
        * bin/MakeProjectCreator/config/ciao_config_handlers_base.mpc

          Corrected the file extension.

Tue Jun  6 21:11:37 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/WFMO_Reactor.cpp (open): make sure we delete the
          notify_handler_ before reassigning it to prevent resource leaks.
          Thanks to Sonicfly Zhou <zhoucn at txsec dot com> for suggesting
          this.

Tue Jun  6 21:41:02 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Service_Gestalt.{h cpp}:
        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Dependency.cpp:
        * ace/Service_Config.cpp:
        * ace/Service_Object.cpp:
        * ace/Svc_Conf_Lexer.cpp: Add missing #include directives.

Tue Jun  6 18:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.cpp:
          Reverted a change for VxWorks, broke other platforms, will make
          a new change tomorrow.

Tue Jun  6 17:14:51 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/GNUACEProjectCreator.pm:

          Cleaned up the fill_value() method and removed an unused method.

        * bin/MakeProjectCreator/modules/GNUACEWorkspaceCreator.pm:

          Use DirectoryManager::mpc_basename() instead of
          File::Basename::basename().

Tue Jun  6 15:43:32 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/templates/gnu.mpd

          Modified to explicitly state the name of a project being skipped
          due to missing features or libraries.

Tue Jun  6 03:57:08 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/Hash_Map_Manager_T.cpp:
        * ace/Hash_Map_Manager_T.h:

          Added key() and item() methods to ACE_Hash_Map_Entry<>, to be
          like ACE_RB_Tree_Node<>.  This makes it easier to switch code
          to and from Hash_Maps and RB_Trees.  Mark direct access to
          the ext_id_ and int_id_ fields @deprecated.

        * ace/Hash_Map_Manager_T.cpp:
        * ace/Hash_Map_Manager_T.h:
        * ace/Hash_Map_Manager_T.inl:
        * ace/RB_Tree.h:
        * ace/RB_Tree.inl:

          Added operator->() for iterators to be more like STL API.

Mon Jun  5 20:27:42 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_config_handlers.mpb
        * bin/MakeProjectCreator/config/ciao_config_handlers_base.mpc

          Restructured to clean up config handlers MPC files.

Sun Jun  4 13:38:21 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Array_Map_Test.cpp: Fixed all uses of empty() to be
          is_empty().

Sun Jun  4 13:35:25 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Array_Map.{h,inl},
        * ace/Intrusive_List.{h,inl},
        * ace/String_Base.{h,inl}: Changed empty() to is_empty(), which
          makes more sense.  Kept empty() around for the time being as a
          @deprecated method.  Thanks to Domingos Monteiro <d dot monteiro
          at netia dot net> for this suggestion.

Sun Jun  4 00:51:38 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/CString.{h,inl,cpp}: Added some performance improvements for ACE_CString:

          . Introduced new operators == and != to compare ACE_CString
            and const char *.  This results in at least a 10-fold performance
            improvement, due to avoiding dynamic memory allocation.

          . Streamlined the existing operator == between two ACE_CString's.
            (15% improvement in some cases, due to avoiding some of the
            overhead of compare())

          Also cleaned up some of the doxygen comments, e.g., the
          ACE_CString comparison operators must have been returning an
          integer at some point (?), but it's not the case anymore.
          Thanks to Patrick Rabau <pr2345 at gmail dot com> for these
          patches.

Fri Jun  2 19:52:19 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/tao_orb_tests.lst:

          Removed DII_Collocation_Tests.

Fri Jun  2 16:29:55 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Select_Reactor_T.cpp (open): Added an error message
          explicitly noting that the notification pipe open failed, which
          should make debugging easier when this occurs, e.g., due to a
          disabled network interface.  Thanks to David Highley <dhighley
          at highley-recommended dot com> for this suggestion.

Fri Jun  2 12:20:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoidl3toidl2defaults.mpb:
          Updated to make cross compilation possible

Fri Jun  2 12:12:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/templates/gnu.mpd:
          Added TAO_IDL3_TO_IDL2 and TAO_IDL3_TO_IDL2_DEP as first step to
          run idl3_to_idl2 in a cross build environment

Fri Jun  2 11:51:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks6.2.GNU:
          Updated for VxWorks 6.2

Fri Jun  2 11:33:36 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Recursive_Mutex_Test.cpp (test_recursion_depth): The
          get_nesting_level() only works on certain OS platforms, so don't
          use it as part of the test.

Fri Jun  2 10:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Configuration.cpp:
          Fixed operator==

        * tests/Config_Test.{h,cpp}:
          Added an explicit test for operator==. Thanks to Popeye Cai
          <popeye dot cai at utstar dot com> for reporting this. This
          fixes bugzilla bug 2550

Fri Jun  2 10:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.cpp:
          Improved VxWorks 6.2 support

        * ace/Svc_Handler.cpp:
          64bit change and initialise pointer with 0

        * ace/Process.cpp:
          Added support for VxWorks 6.x in rtp mode

Fri Jun  2 09:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.inl:
          Added necessary code for VxWorks 6.2

Thu Jun  1 23:13:58 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/tao_orb_tests.lst:

          Added oneway and twoway DII_Collocation_Tests.

Thu Jun  1 20:53:31 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Recursive_Mutex_Test.cpp (run_main):

          Added ACE_UNUSED_ARG macros to eliminate 'unused parameter'
          warnings on single threaded builds.

Thu Jun  1 16:54:56 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/tao_orb_tests.lst:

          Added new DII_Collocation_Tests.

Thu Jun  1 13:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/FILE.cpp:
          Const improvement

Thu Jun  1 12:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Dirent_Test.cpp:
          Updated VxWorks specific checks, removed chorus checks

Thu Jun  1 11:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Threads/thread_pool.cpp:
          Fixed 64bit conversion warnings

Thu Jun  1 09:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/diff-builds.pl:
          Corrected usage of strftime

Thu Jun  1 09:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Default_Constants.h:
          Define the platform suffix for vxworks

        * ace/Sock_Connect.cpp:
          Added include for VxWorks and removed some unneeded checks
          for vxworks >= 0x600

        * ace/ACE.h:
          Doxygen improvement

        * ace/config-vxworks6.2.h:
          Updated with more settings to better match vxworks 6.2

        * ace/Process_Manager.cpp:
          Added specific check for vxworks

        * ace/OS_NS_stdlib.inl:
          Emulate putenv with setenv when putenv is not available but
          setenv is.

Thu Jun  1 02:26:03 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.cpp:

          Reworked the way static svc descriptors are kept so that if DLLs
          include static initializers, they won't cause a problem if the
          DLL is later unloaded and reloaded. There is currently no
          dependency replationship between these "static" services and the
          DLL that contains them, so there is still a slight risk that
          pointers held after the DLL is unloaded might be referenced. But
          the only thing that actually uses these pointers is the service
          gestalt itself if it is processing an explicit static directive
          and the desired service object had not yet been loaded in that
          configuration context.

Wed May 31 20:49:03 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/APG/Logging/Trace.h:

          Added '##' to several macro definitions in this file, at the
          suggestion of Steve Huston <shuston@riverace.com> to get
          rid of warnings on GCC4 platforms.

Wed May 31 18:18:37 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_config_handlers.mpb:

          Shortened some line lengths, to make the file more readable.

Wed May 31 16:36:43 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/tests.mpc:
        * tests/run_test.lst: Don't build or run Unload_libACE on WinCE. The
          code is purposely leaving out ACE stuff and the ACE stuff is needed
          for WinCE, unless there's lots of conditional code added to duplicate
          the workings on ACE_TMAIN on CE.

Wed May 31 14:33:16 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ace/OS_NS_Thread.inl (recursive_mutex_lock):

          Added additional ACE_UNUSED_ARG for the timeout parameter, to
          eliminate warnings in single-threaded builds.

Wed May 31 13:05:05 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Argv_Type_Converter.cpp (align_char_with_wchar): ACE-ified this code.

Wed May 31 14:00:16 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Recursive_Mutex_Test.cpp (run_main):

          Moved '#if defined (ACE_HAS_THREADS)' up a few lines to include
          a variable defined inside the same guard at the top of the file,
          to eliminate an 'undefined' error on single-threaded builds.

Wed May 31 13:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_2542_Regression, this should run without problems

Wed May 31 11:44:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_time.inl:
          Fixed unreachable code warning

Wed May 31 09:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/run_test.lst:
          Changes for ACE_FOR_TAO configuration

Wed May 31 08:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bound_Ptr_Test.cpp:
          Initalise pointers with 0

Wed May 31 08:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Recursive_Mutex_Test.cpp:
          Added missing include to get ACE_OS::sleep

Tue May 30 21:56:52 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Corrected the AIX section; removed descriptions of
          old compilers that are no longer supported and suggested the config
          and platform_macros files to use. Thanks to Michelle Zheng
          <Michelle dot Zheng at dowjones dot com> for motivating this.

        * THANKS: Added Michelle Zheng to the Hall of Fame.

Tue May 30 19:17:40 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Dynamic_Service.h:
        * ace/Dynamic_Service.inl:
        * ace/Dynamic_Service.cpp:
        * ace/Dynamic_Service_Base.h:
        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Dependency.cpp:

          In order to ensure proper separation of contexts, this patch
          gives the dynamic service instance lookup the ability to
          optionally exclude the global configuration context.

        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.cpp:

          To allow explicitly configured static service objects, those for
          which a directive such as 'static XYZ "foo bar"', to be
          independently configured in different configuration contexts,
          these changes retain any static service descriptor for service
          XYZ, then looks for a previous instance of XYZ in the local
          context only, otherwise it uses the previously retained static
          service descriptor to create a new instance.


Tue May 30 18:24:54 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/DLL.h (ACE_DLL): Updated the documentation of open() to explain the
         lookup scheme when a filename is given.  Thanks to Phlip
          <phlip2005 at gmail dot com> for motivating this.

Tue May 30 13:06:42 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/ACE.inl:
        * ace/Base_Thread_Adapter.cpp:
        * ace/Default_Constants.h:
        * ace/Global_Macros.h:
        * ace/OS.h:
        * ace/OS_NS_Thread.cpp:
        * ace/OS_NS_Thread.h:
        * ace/OS_NS_netdb.inl:
        * ace/OS_NS_signal.inl:
        * ace/OS_NS_sys_socket.inl:
        * ace/OS_NS_time.inl:
        * ace/OS_main.cpp:
        * ace/OS_main.h:
        * ace/Object_Manager_Base.h:
        * ace/Process_Manager.cpp:
        * ace/Process_Semaphore.cpp:
        * ace/Process_Semaphore.h:
        * ace/Process_Semaphore.inl:
        * ace/Recursive_Thread_Mutex.cpp:
        * ace/SV_Semaphore_Simple.h:
        * ace/TLI_Acceptor.cpp:
        * ace/Thread_Adapter.cpp:
        * ace/Token.h:
        * ace/config-macros.h: Removed all vestiges of PSOS.

Tue May 30 12:22:53 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * bin/mpc.pl:
        * bin/mwc.pl:

          Added a load-time check for the minimum perl version (5.6).

Tue May 30 12:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Log_Msg.cpp:
        * ace/OS_NS_dirent.inl:
        * ace/OS_NS_netdb.inl:
        * ace/OS_NS_pwd.inl:
        * ace/OS_NS_stdlib.inl:
        * ace/OS_NS_Thread.cpp:
        * ace/OS_NS_Thread.inl:
        * ace/OS_NS_time.cpp:
        * ace/OS_NS_time.inl:
        * ace/Thread_Manager.cpp:
        * ace/os_include/os_pthread.h:
        * ace/os_include/os_stdlib.h:
          Removed support for HPUX 10.20

        * ace/os_include/net/os_if.h:
        * ace/os_include/netinet/os_tcp.h:
          Removed psos support

        * ace/os_include/sys/os_types.h:
          Removed ACE_LACKS_FLOATING_POINT

Tue May 30 11:57:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-hpux-10.x-g++.h
        * ace/config-hpux-10.x-hpc++.h
        * ace/config-hpux-10.x.h
          Removed these files, not supported anymore

        * ace/OS_NS_time.inl:
          Removed check for ACE_CTIME_R_RETURNS_INT, it was for hpux 10.20

Tue May 30 11:57:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-osf1-4.0.h:
          Removed, contents merged to tru64 file

        * ace/config-tru64.h:
          Added osf1-4.0 file contents, be aware that tru64 support hasn't
          been tested for a long time.

Tue May 30 11:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Recursive_Mutex_Test.cpp:
          Fixed compile error

Tue May 30 11:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_stdio.h:
          Removed psos support

        * ace/IOStream.h:
          Removed checks for ACE_LACKS_CHAR_STAR_RIGHT_SHIFTS, that was only
          set for chorus which is removed

        * ace/Basic_Types.h:
        * ace/Log_Msg.cpp:
        * ace/Profile_Timer.{h,cpp}:
          Removed checks for ACE_LACKS_FLOATING_POINT. Was only set for chorus
          which is now removed.

        * ace/OS_NS_Thread.cpp:
          Removed chorus support

        * ace/config-chorus.h:
          Removed.

        * ace/INET_Addr.cpp
        * ace/Lib_Find.cpp
        * ace/Local_Tokens.cpp
        * ace/Log_Record.cpp
        * ace/Parse_Node.cpp
          Removed check for ACE_HAS_BROKEN_CONDITIONAL_STRING_CASTS, is only
          set for psos which we don't support anymore

        * ace/os_include/os_signal.h:
          Removed check for ACE_SIGINFO_IS_SIGINFO_T, only set for psos

        * ace/config-psos-diab-mips.h
        * ace/config-psos-diab-ppc.h
        * ace/config-psos-diab.h
        * ace/config-psos-tm.h
        * ace/config-psosim-g++.h
          Removed from the repo, psos support has been removed

Tue May 30 10:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Stream.cpp:
          Use true/false, when demarshaling a string, check the result of the
          demarshaling of the length of the string, if that failed, just return
          directly instead of trying to demarshal a random lenght string

        * ace/Task.h:
        * ace/System_Time.h:
          Doxygen improvement

        * ace/ACE.cpp:
        * ace/SOCK_Dgram_Bcast.cpp:
        * ace/Sock_Connect.cpp:
        * ace/Process.cpp:
        * ace/OS_NS_unistd.cpp:
        * ace/Mem_Map.cpp:
          Removed chorus support

        * ace/config-fsu-pthread.h:
          Removed this file, this configuration isn't supported and used for
          ages

        * ace/Condition_Thread_Mutex.cpp:
        * ace/Recursive_Thread_Mutex.cpp:
          Removed fsu pthread support

        * ace/Process_Manager.cpp:
          Const improvement

        * ace/OS.inl:
        * ace/OS_NS_sys_socket.inl:
        * ace/OS_NS_stdlib.cpp:
        * ace/OS_NS_stdlib.inl:
        * ace/OS_NS_Thread.cpp:
          Removed psos support

        * ace/OS_NS_unistd.inl:
        * ace/OS_NS_stdio.{h,cpp,inl}:
        * ace/Handle_Set.h:
        * ace/OS_NS_Thread.{h,inl}:
          Removed psos and chorus support

        * ace/Thread_Manager.{h,cpp,inl}:
          Made terminated_ a real bool, removed chorus support, check for
          ACE_VXWORKS instead of VXWORKS

        * ace/OS_NS_sys_time.inl:
          Check for ACE_VXWORKS instead of VXWORKS

        * ace/MMAP_Memory_Pool.{h,cpp}:
          Removed chorus support, use bool internally and added an option to
          get each time an unique mmap filename

        * ace/config-linux-common.h:
          Added ACE_HAS_VOIDPTR_MMAP and removed KCC support

        * ace/ace_wchar.inl
        * ace/Default_Constants.h
        * ace/INET_Addr.h
        * ace/IPC_SAP.cpp
        * ace/Message_Queue.cpp
        * ace/Message_Queue.h
        * ace/Message_Queue.inl
        * ace/Message_Queue_T.cpp
        * ace/Message_Queue_T.h
        * ace/OS.h
        * ace/OS_NS_macros.h
        * ace/OS_NS_stdio.h
        * ace/OS_NS_stdio.inl
        * ace/OS_NS_stdlib.inl
        * ace/OS_NS_Thread.cpp
        * ace/OS_NS_Thread.h
        * ace/OS_NS_Thread.inl
        * ace/OS_NS_time.inl
        * ace/Recursive_Thread_Mutex.cpp
        * ace/Sched_Params.cpp
        * ace/Select_Reactor_T.cpp
        * ace/SOCK_Dgram_Bcast.cpp
        * ace/Thread_Manager.h
        * ace/Token.h
          Check for ACE_VXWORKS instead of VXWORKS

Mon May 29 22:08:50 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/OS_NS_Thread.inl (recursive_mutex_lock): *Really* make the compiler
          happy now.  Thanks Olli!

Mon May 29 21:12:50 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/OS_NS_Thread.inl (recursive_mutex_lock): Added a const_cast
          for ACE_Time_Value * to make the compiler happy when passing the
          timeout parameter to ACE_OS::cond_timed_wait().  Thanks to Olli
          Savia for helping here.

Mon May 29 20:30:44 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * We recently added the 2100th contributor to ACE+TAO+CIAO!!!  The
          2000th contributor was added in August of 2005, this means that
          over 100 different people have contributed to the project in the
          past 9 months!

Mon May 29 19:50:54 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Service_Configurator/IPC-tests/server/server_test.cpp (ACE_TMAIN):
          Changed

          ACE_Reactor::instance ()->run_reactor_event_loop ()

          to

          ACE_Reactor::run_event_loop ()

          so that reconfiguration happens properly after a SIGHUP or
          SIGINT occurs.  Thanks to Kevin Hu <Xiaotao dot Hu at ge dot
          com> for motivating this.

Mon May 29 18:10:50 UTC 2006  Steve Huston  <shuston@riverace.com>

        * tests/Signal_Test.cpp:
        * tests/Thread_Manager_Test.cpp: Add missing ACE_TEXT to a string.

Mon May 29 18:44:05 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Recursive_Mutex_Test.cpp: Enhanced this test to exercise
          the new timed feature of ACE_Recursive_Thread_Mutex.

Mon May 29 18:16:31 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Recursive_Thread_Mutex.h: Clarified that get_nesting_level()
          may return -1 on some platforms when ACE_HAS_RECURSIVE_MUTEXES
          is enabled.

Mon May 29 17:45:02 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Recursive_Thread_Mutex.inl: Moved some of the short accessor
          methods from the Recursive_Thread_Mutex.cpp file to here.

        * ace/Recursive_Thread_Mutex.h,
          ace/Recursive_Thread_Mutex.inl: Added support for time recursive
          mutexes, thanks also to Abdullah.

        * ace/OS_NS_Thread.h,
        * ace/OS_NS_Thread.inl: Added support for timed recursive mutexes.
          Thanks to Abdullah Sowayan <abdullah dot sowayan at lmco dot
          com> for contributing this.

Mon May 29 17:30:52 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/OS_NS_Thread.h: Updated the documentation to clarify why
          recursive mutexes can't be used for ACE_OS::mutex_lock().

Mon May 29 18:27:08 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/DLL/test_dll.cpp:

          Changed instances of a C-style cast from void* to
          pointer-to-function to a two-step reinterpret_cast
          using ptrdiff_t as an intermediate. C++ forbids casting
          directly between pointer-to-object and pointer-to-function,
          and some of the newer compilers are catching it.

Sat May 27 15:03:07 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * netsvcs/servers/main.cpp (ACE_TMAIN): Removed the following code:

          if (ACE::debug () == 0)
            ACE_LOG_MSG->priority_mask (~LM_DEBUG, ACE_Log_Msg::PROCESS);

          since (1) it makes debugging hard and (2) it's simply wrong
          since it's blowing away anything that's set by the
          ACE_Logging_Strategy in the svc.conf file.

Sat May 27 14:37:14 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Log_Record.cpp (print): Only print out the log records if the
          corresponding type is enabled for logging.

Sat May 27 14:35:21 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * netsvcs/servers/main.cpp: Enable the ignore_debug_flag in the
          ACE_Service_Config::open() call so that we can override the
          default ACE_Log_Priority settings in the svc.conf file.

Sat May 27 11:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/SCTP/hist.cpp:
          Fixed compile error

Fri May 26 22:02:48 UTC 2006  Steve Huston  <shuston@riverace.com>

        * examples/IPC_SAP/SPIPE_SAP/consumer_msg.cpp:
        * examples/IPC_SAP/SPIPE_SAP/consumer_read.cpp:
        * examples/IPC_SAP/SPIPE_SAP/server.cpp: Wide-char fixes; there's no
          wide-char variant for ACE_OS::fdetach().

        * examples/IPC_SAP/TLI_SAP/CPP-client.cpp:
        * examples/IPC_SAP/TLI_SAP/db-client.cpp:
        * examples/IPC_SAP/TLI_SAP/ftp-client.cpp:
        * examples/Connection/non_blocking/test_tli_acceptor.cpp:
        * examples/Connection/non_blocking/test_tli_connector.cpp:
          Wide-char/narrow-char fixes.

Fri May 26 21:47:56 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp,
        * netsvcs/lib/Server_Logging_Handler_T.cpp,
        * ace/Log_Msg_IPC.cpp: Removed the special case code for Windows
          since it seems like ACE (or Windows) now handles this properly.

Fri May 26 21:20:35 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Log_Record.cpp (operator>>): Add one when allocating the buffer.

Fri May 26 13:16:48 UTC 2006  Nanbor Wang  <nanbor@exothermic.txcorp.com>

        * ace/DLL_Manager.cpp:

          Fixed incorrect usage of ACE::debug check.  Thanks to Johnny for
          reporting this.

Fri May 26 15:04:55 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ASNMP/tests/Counter_Test.cpp:
        * ASNMP/tests/Gauge_Test.cpp:
        * performance-tests/SCTP/hist.cpp:

          Added static_cast<>s to eliminate implicit conversion warnings.

Fri May 26 12:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Naming_Test.cpp:
          Replaced assert with if statement, resolved argument not used
          warning in BCB6 release builds

Fri May 26 10:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1890_Regression_Test.cpp:
        * tests/Bug_2540_Regression_Test.cpp:
          New tests made by Carlos O'Ryan for the given bug numbers.

        * tests/run_test.lst:
        * tests/tests.mpc:
          Added the new tests above

Fri May 26 09:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/PerlACE/Run_Test.pm:
          Increased wait_interval_for_process_creation from 5 to 10 seconds.
          On the slower systems some tests failed because the startup time
          is longer then 5 seconds, especially if several configuration files
          are read and saved during startup

Fri May 26 08:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/diff-builds.pl:
          Fixed typo in comment

Thu May 25 04:58:44 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Tokens_Test.cpp (run_main): Don't try to spawn the
          netsvcs/server/main if it's not built.

Thu May 25 03:53:47 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/config_h.m4:

          Removed AH_TEMPLATE for ACE_LACKS_TCP_H.  This was replaced
          with ACE_LACKS_NETINET_TCP_H long ago.

Wed May 24 22:19:43 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Repository.{h, inl, cpp}:

          Changed size arguments type to size_t in ctor, open,
          current_size, total_size and the corresponding members.
          ACE_Service_Repository_Iterator::next_ now starts from 0 instead
          of -1 to avoid warnings about signed/unsigned comparisons.

        * ace/Service_Gestalt.cpp:

          Reverted the change "Wed May 24 14:00:43 UTC 2006 Iliyan
          Jeliazkov <iliyan@ociweb.com>", since now the
          Service_repository::instance() takes size_t argument.

        * performance-tests/Synch-Benchmarks/Base_Test/Synch_Benchmarks_Base_Test.mpc:
        * performance-tests/Synch-Benchmarks/Perf_Test/Synch_Benchmarks_Perf_Test.mpc:

          Fixed and error whereby the DLL's generated by this two project
          files did not match the name used in the svc configuration
          files, causing the test to crash because of missing DLL.

Wed May 24 13:08:08 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue.h: Added #include "ace/Thread_Mutex.h" on platforms
          that have ACE_Message_Queue_NT available; that class has a
          ACE_Thread_Mutex member so the include is needed to see the class.
          Thanks to Guy Peleg <guype at amdocs dot com> for this fix.

Wed May 24 17:39:47 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Remote_Tokens.cpp (request_reply): Added a helpful error
          message to make it easy to track down problems with TSS.

Wed May 24 17:22:31 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Change feature test to define ACE_LACKS_NATIVE_STRPTIME if
          system doesn't support strptime(), as it seems ACE doesn't
          follow its feature test macro naming conventions when it comes
          to strptime().

          Changed ACE_LACKS_STRPTIME_PROTOTYPE feature test to use
          AC_CHECK_DECL instead of AC_EGREP_HEADER.

Wed May 24 16:33:59 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:
        * m4/config_h.m4:

          Changed ACE_LACKS_STRPTIME and ACE_LACKS_STRPTIME_PROTOTYPE
          feature tests to use the same idiom as similar tests.  This
          Avoids requiring an AH_TEMPLATE for each feature test macro
          in config_h.m4.

Wed May 24 09:07:53 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * ace/Activation_Queue.cpp,
        * ace/Activation_Queue.inl: Fixed the queue() "setter" method
          so that it doesn't leak memory.  Thanks to David Chu <beyonddc
          dot storage at gmail dot com> for providing this fix.

Wed May 24 14:00:43 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.cpp:

          Added a cast from size_t to int in the ctor to match the
          interface of ::instance() and to quiet the 64bit compilers,
          complaining about loss of precision in the implicit conversion.

Tue May 23 19:21:55 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/Signal_Test.cpp:

          Reset SIGHUP handler to SIG_DFL to support cases where SIGHUP
          is ignored (running under nohup(1), etc.).

Tue May 23 10:55:59 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp (handle_input):
        * netsvcs/lib/Server_Logging_Handler_T.cpp
          (handle_logging_record): Cleaned up the code so that it should
          have no memory leaks and will also build cleanly on all the OS
          platforms.

        * ace/Log_Msg_IPC.cpp: Fix support for ACE_HAS_STREAM_PIPES.

Tue May 23 13:05:03 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Log_Msg.cpp:
          Fixing a memory leak found by valgrind.

        * ace/Timeprobe.cpp:
          Added missing include - this wouldn't comple with both noinline
          and ACE_COMPILE_TIMEPROPE set.

Mon May 22 21:13:15 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * bin/diff-builds.pl:

          Updated to allow diff between the tests failures today and on a
          specified date, for the clean builds (or, all the builds from
          the build score).

Mon May 22 19:06:41 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Log_Record.cpp (operator<<, operator>>): Have to use a different
          CDR array method when ACE_USES_WCHAR.

Mon May 22 09:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * netsvcs/lib/Client_Logging_Handler.cpp:
          Fixed compile error on Solaris

Mon May 22 04:53:29 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/Signal_Test.cpp:

          The change:
          Sat May 20 15:10:55 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

          Was not enough to get this test working on all platforms.

          Revert to using ACE_Sig_Guard in worker_child().  Handle the
          SIGINT race condition by raising it if and only if the child
          was not shut down by the parent.

Sun May 21 13:46:49 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/Service_Config_Test.cpp:

          Fixing Windows test failures, because errno gets overriden
          between Service Repository::insert() and testLimits(). Most
          likely, it happens in ace_yyparse (), however the existing
          mechanism for reporting parser errors does not allow for
          reliably propagating the cause of the error. Removing the test
          for the cause of the error and simply reporting the error, if it
          had occured.

Sat May 20 15:10:55 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/Signal_Test.cpp:

          Changed synchronous tests to block signals at the top level.
          This had been done with a ACE_Sig_Guard, but that lead to a race
          condition between when the guard was release and the delivery of
          the SIGINT the client sends to itself.  The SIGINT would then be
          handled by the default handler, which terminated the process
          before the "Ending" message was written to the log.

          #if'd out the ACE_DEBUG, etc. invocations from handle_signal().
          These result in signal-unsafe functions being called when the
          handler is called asynchronously.  A braver person would have
          just removed them entirely.

Fri May 19 20:08:29 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-sunos5.6.h:
        * ace/os_include/sys/os_mman.h: Moved the declaration of ::madvise()
          from config-sunos5.6.h to os_mman.h, to be compiled only when
          ACE_LACKS_MADVISE_PROTOTYPE is defined. Set
          ACE_LACKS_MADVISE_PROTOTYPE in config-sunos5.6.h where it used to
          declare madvise(). This allows autoconf-detected
          ACE_LACKS_MADVISE_PROTOTYPE platforms (such as Solaris 9) to
          compile correctly.

Fri May 19 17:53:51 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.cpp:

          Fixed a defect in process_directive () which was replacing the
          ENOSPC errno with EINVAL. Added #ifndef ACE_NLOGGING / #endif
          around logging statements.

        * ace/Service_Repository.cpp:

          Minor reformating.

        * tests/Service_Config_DLL.cpp:

          Added two independent service objects, to be used in the
          testLimits test. See testLimits().

        * tests/Service_Config_Test.cpp:

          Reworked the testLimits() to avoid printing the word "error",
          which confuses the test driver into thinking the test failed.

Fri May 19 17:51:33 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Service_Gestalt.cpp:

          Elminated memory leak found by valgrind.

Fri May 19 17:09:51 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Service_Config_Test.cpp:

          Fixed a warning due to assignment of a string literal to a
          non-const variable.

Thu May 18 17:42:09 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * bin/diff-builds.pl:

          Contributing a little tool to find the difference in the failing
          tests between two dates, on the same build. Or between two
          builds, on a particular date. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for mining and hosting the data used by
          this script.

Thu May 18 17:33:57 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:
        * m4/config_h.m4:

          Changed feature test for socklen_t to #include <sys/types.h>
          before <sys/socket.h>.  Use cannonical AC_CHECK_TYPE and
          AC_DEFINE with a third argument instead of a AH_TEMPLATE for
          ACE_HAS_SOCKLEN_T.  Fixes configuration on OpenBSD.  Thanks to
          Vladimir Panov <gbr at voidland dot org> for reporting this bug.

Thu May 18 16:37:46 UTC 2006  Steve Huston  <shuston@riverace.com>

        * configure.ac: Set a ACE_VERSION_NAME variable with the version
          string (canonical major.minor.beta), which may include a fix kit id.

        * bin/MakeProjectCreator/config/acedefaults.mpb: Change am_version from
          libtool's -version-info format (current:revision:age) to the ACE
          release number format (major.minor.beta) and rename it am_release.
          This is intended for use with the libtool's -release option and will
          result in library names that correspond to the ACE kit number.
          The -version-info option uses interface numbers meant to indicate a
          series of public API numbers. However, with ACE, things change
          pretty often. Rather than try to come up with a way of managing
          interface numbers, just use the release numbering that users know
          and are used to.

Thu May 18 15:15:16 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * bin/tao_orb_tests.lst:

          Removed Limits from the list of ORB tests because it is now part
          of ACE.

        * tests/Service_Config_Test.cpp:

          Added functionality to test gestalt size limits.

Thu May 18 15:21:33 UTC 2006  Steve Huston  <shuston@riverace.com>

        * NEWS:
        * ace/Task.{h inl cpp}: Reverted the changes from:
          Fri Apr 14 15:53:21 UTC 2006  Steve Huston  <shuston@riverace.com>
          Tasks that delete themselves from within close() would invalidate
          the lock that ACE_Task held across the close() call and perform
          undefined and illegal actions on the deleted lock upon return.
          Bugzilla #2339 remains unresolved.

Wed May 17 20:31:11 UTC 2006 Roopa Pundaleeka <roopa@txcorp.com>

        * ace/DLL_Manager.cpp:
        * ace/DLL_Manager.h:
          The dll handle is added to the to the
          handle_vector_ only after the library is opened
          successfully. This way, the vector does not have redundant
          handles.

        * ace/Object_Manager.cpp:
          ACE_DLL_Manager::close_singleton is called explicitly from the
          ACE_Object_Manager to make sure ACE_DLL_Manager gets cleaned up,
          even if there was an error while opening a lib file.

          Thanks to Timo Kuosmanen <ttkuosma at cc dot jyu dot fi> for
          reporting this.

Wed May 17 14:07:33 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * netsvcs/lib/Server_Logging_Handler_T.cpp: Improved the code so
          that it should compile and run properly on Windows.  Thanks to
          Phil Mesnier for reporting this.

Wed May 17 19:07:43 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Dynamic_Service_Dependency.h: Doxygen correction; use @c to
          set a word in "typewriter" font, but for known class names, there's
          no need to do this.

Wed May 17 17:56:49 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * examples/C++NPv1/Logging_Client.cpp
        * examples/C++NPv1/Logging_Handler.cpp
        * examples/C++NPv2/Logging_Handler.cpp

          Removed now-redundant CDR insertion/extration operators now
          defined in ace/Log_Record.{h,cpp}

Wed May 17 09:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_ipc.h:
        * ace/os_include/sys/os_socket.h:
        * ace/os_include/sys/os_stat.h:
        * ace/os_include/sys/os_types.h:
          Removed psos support

        * ace/os_include/sys/os_mman.h:
          Removed madvice prototype and ACE_LACKS_MADVISE_PROTOTYPE, it
          is not set in any config file

Wed May 17 02:23:31 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Log_Msg_IPC.cpp:

          Fix typo exposed on systems with ACE_HAS_STREAM_PIPES defined.
          I'll leave it to Will & Doug to do whatever the TO DO said to do.

Tue May 16 22:23:55 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ace/Log_Msg_IPC.cpp
        * ace/Log_Record.cpp
        * ace/Log_Record.h
        * ace/Log_Record.inl
        * netsvcs/lib/Client_Logging_Handler.cpp
        * netsvcs/lib/Server_Logging_Handler_T.cpp

          Fixed some problems that stemmed from changing ACE_Log_Msg
          msg_data_ from a fixed-size array to a dynamically-sized array.
          Thanks to Keith Muzzioli <Keith_W_Muzzioli at raytheon dot com>,
          John Black <John_K_Black at Raytheon dot com>, and Mitsuo
          Fukasawa <fukasawa_mitsuo at nifty dot com> for reporting this
          and to Doug Schmidt for helping to fix it!

Tue May 16 13:20:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_time.inl:
        * ace/OS_NS_time.{h,cpp,inl}:
          Removed chorus and psos support

        * ace/OS_Thread_Adapter.cpp:
          Removed psos support

Tue May 16 13:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_wait.{h,inl}:
          Remove chorus support

        * ace/OS_NS_stropts.inl:
        * ace/OS_NS_sys_stat.inl:
        * ace/OS_NS_string.inl:
          Removed psos support

Tue May 16 13:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Log_Msg.cpp:
        * ace/OS_NS_arpa_inet.{h,cpp,inl}:
        * ace/OS_NS_dirent.inl:
          Removed psos support

        * ace/INET_Addr.cpp:
        * ace/config-macros.h:
          Removed chorus support

        * ace/Unbounded_Queue.h:
          Removed remark about chorus

        * ace/config-cray.h:
          Removed explicit template instantiation define, we don't have that
          anymore

        * ace/config-hpux-11.00.h:
        * ace/config-sunos5.7.h:
        * ace/config-rtems.h:
        * ace/config-osf1-4.0.h:
          Removed kcc support

Mon May 15 11:30:14 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/tao_other_tests.lst:
          Added more tests that can't run in ACE_FOR_TAO configations due
          to dependency on something that avoids ACE_FOR_TAO.

Mon May 15 01:15:45 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/tao_orb_tests.lst:
        * bin/tao_other_tests.lst:
          Added !ACE_FOR_TAO to those tests for which MPC skips generating
          executables because it directly or indirectly avoids ACE_FOR_TAO.
          Indirect avoidance occurs when a project derives from a base
          project that avoids ACE_FOR_TAO.

Thu May 11 12:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Message_Block.h:
          Doxygen improvements

Thu May 11 11:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Dev_Poll_Reactor.cpp:
          Removed chorus support

Thu May 11 07:19:12 UTC 2006  Kees van Marle  <kvmarle@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_1254_Regression

Wed May 10 14:10:02 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-win32-msvc-7.h: MSVC 7.1 operator new throws an exception
          on an out-of-memory condition, but only when the standard C++
          library is used; the older CRT new() doesn't.

Tue May  9 11:38:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/orbsvcslib.mpb:
          Add -GT to the idlflags, all orbsvcs then do generate the TIE files,
          if people then use them, they get them out of the box.

Tue May  9 07:36:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          Removed -Sc, added -GT, see bugzilla bug 2525 for more info

Tue May  9 07:25:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Condition_T.{h,cpp,inl}:
        * ace/Local_Name_Space_T.cpp:
        * ace/Configuration.cpp:
        * ace/Sched_Params.cpp:
        * ace/Mutex.{h,cpp,inl}:
        * ace/Select_Reactor_T.cpp:
        * ace/Signal.cpp:
          Removed Chorus support

        * ace/CDR_Stream.cpp:
          Small layout change

        * ace/Event_Handler.cpp:
          Removed psos support

        * ace/Message_Block.h:
          Doxygen improvements

        * ace/Message_Block.cpp:
          Const improvement

Sun May  7 21:03:30 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.{h,cpp}:

          Weeding out the remaining issues with single threaded
          builds. The implementation now relies on the ACE_TSS_* macros to
          abstract from the differences among build styles and platform
          support for TSS.

        * ace/Service_Gestalt.{h,cpp}:

          Eliminated commented out code. Minor reformatting in places.

        * ace/TSS_T.{h,inl,cpp}:

          Added some comments to help others avoid a few pitfalls. Made
          ts_init() a non-const, which eliminates a few const_cast's.

Sun May  7 07:02:51 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.h:
        * ace/Service_Config.cpp:

          Refactored the TSS usage (again) to fix a nasty
          order-of-initialization problem. The gist of which is that, if
          the ptr (to a template class instance) is a static member, in
          static builds, it will be initialized by the process prologue
          code *after* another static initializer has had the chance to
          use and assign it a value. The solution was to use a method
          scope static instance, which C++ guarantees to be initialized by
          the (first) exit from that method.

        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.cpp:

          Refactored the construction to avoid using straight new in
          constructor initializer lists. Replaced new with ACE_NEW_* where
          appropriate.

Sat May  6 18:08:13 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add feature tests for ACE_LACKS_ASCTIME, ACE_LACKS_ACSTIME_R,
          ACE_LACKS_GETCWD, ACE_LACKS_GMTIME, ACE_LACKS_GMTIME_R,
          ACE_LACKS_LOCALTIME, and ACE_LACKS_STRFTIME.

Sat May  6 09:52:06 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * examples/DLL/test_dll.cpp: Renamed the DLLs and removed the "./"
          from the pathname.  Thanks to Sam and Roopa for reporting this
          and tracking it down, respectively.

Sat May  6 10:23:13 UTC 2006  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU: Add -lrt -laio to
          the LIBS. The Proactor framework needs this; I'm not sure why it
          never showed up until static builds were run.

Tue Apr 25 10:22:16 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * ace/OS_NS_string.cpp (strerror): Do a sanity check to make sure
          errnum >= 0 and < _sys_nerr and set errno to EINVAL if things
          are not sane.  Thanks to Aleksandar Vukajlovic <vukajlo at
          finsoft dot co dot yu> for this fix.

Fri May  5 19:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Default_Constants.h:
          Added a compile time check that ACE_DEFAULT_CDR_BUFSIZE must be
          defined to a value bigger then 0, it is 0 we get in a never ending
          loop in the CDR code

Fri May  5 17:01:32 UTC 2006  Steve Huston  <shuston@riverace.com>

        * examples/Service_Configurator/IPC-tests/client/local_spipe_client_test.cpp:
        * examples/Service_Configurator/IPC-tests/client/remote_thr_stream_client_test.cpp:
        * examples/Service_Configurator/IPC-tests/server/Handle_L_SPIPE.{cpp i h}:
          Wide-char corrections.

Fri May  5 13:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/FIFO.cpp:
        * ace/os_include/os_stddef.h:
          Removed psos support

        * ace/config-WinCE.h:
        * ace/os_include/os_stddef.h:
          Moved setting of ACE_LACKS_STDDEF_H and ACE_LACKS_PTRDIFF_T to the
          WinCE file

Fri May  5 13:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_openvms.GNU:
          Changed the way templates are handled

Fri May  5 11:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Reactor_Token_T.h:
          Removed workaround for vc6

Fri May  5 08:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/MMAP_Memory_Pool.{h,cpp}:
          Made guess_on_fault_ a real bool

Fri May  5 08:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_dirent.h:
        * ace/os_include/os_errno.h:
        * ace/os_include/os_netdb.h:
        * ace/os_include/os_stdint.h:
        * ace/os_include/os_time.h:
        * ace/os_include/os_string.h:
        * ace/os_include/os_stdlib.h:
          Removed psos support

        * ace/os_include/os_dlfcn.h:
        * ace/os_include/os_signal.h:
          Removed psos and kcc support

        * ace/os_include/os_pthread.h:
          Removed chorus support

        * ace/os_include/os_unistd.h:
          Removed chorus and psos support

Fri May  5 07:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_utsname.cpp:
        * ace/OS.h
          Removed psos and chorus support

        * ace/OS_NS_fcntl.cpp:
        * ace/Lib_Find.cpp:
        * ace/OS_NS_netdb.inl:
          Removed psos support

        * ace/Mem_Map.cpp:
          Removed chorus support

        * ace/IOStream.h:
          Removed checks for KCC compiler

Fri May  5 07:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Base_Thread_Adapter.h:
        * ace/SPIPE_Connector.cpp:
        * ace/SOCK_Dgram.cpp:
        * ace/Select_Reactor_T.cpp:
        * ace/Handle_Set.cpp:
          Removed code for psos, support for this platform will be removed

        * ace/CDR_Base.h:
          Removed check for KCC compiler

        * ace/Malloc_Allocator.h:
          Doxygen improvement

Thu May  4 22:11:06 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Message_Block.h: Made ACE_Data_Block::release_i() virtual.
          Thanks to Gary Fernandez <gary dot fernandez at ironmountain dot
          com> for this change.

Thu May  4 21:07:10 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/SPIPE_Acceptor.cpp (create_new_instance, close): Have to use
          ACE_TEXT_ALWAYS_CHAR to pass pipe name on wide-char w/
          ACE_HAS_STREAM_PIPES. Thanks to Gary Fernandez <gary dot
          fernandez at ironmountain dot com> for this fix and to Yasser
          Zabuair <yzabuair at hotmail dot com> for also reporting it.  This
          fixes bugid 2541.

        * THANKS: Added Gary and Yasser to the Hall of Fame.

Thu May  4 08:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted the change below, broke the sendfile test and Steve
        Huston changed things in such a way that sendfile is only
        used on Solaris 9 and newer

        Tue May  2 09:34:54 Pacific Daylight Time 2006    <ossama_othman at symantec dot com>
        * ace/OS_NS_sys_sendfile.inl (sendfile):
          Removed "::" global scope qualifier from platform sendfile()
          call.  It caused problem on Solaris 8.  Thanks to Simon Massey
          and Johnny Willemsen for analyzing the problem and suggesting
          this fix.

Thu May  4 08:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ace_for_tao.mpc:
          Added OS_NS_sys_sendfile

Thu May  4 00:43:32 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/Makefile.am:

          Add Dynamic_Service_Dependency.{cpp,h} to appropriate lists.

Wed May  3 16:02:10 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.h:
        * ace/Service_Config.cpp:

          Fixed a problem due to an attempt to access current_ before it
          has been initialized (a static ACE_TSS instance). The current_
          is now just a pointer to an ACE_TSS instance, which gets
          dynamicaly allocated upon invoking the current() method. The
          deallocation of that instance is left up to the Object Manager
          with which the dynamic ACE_TSS instance is registered.

        * ace/TSS_T.h:

          Added a ACE_TSS_SET () to complete the set of TSS access
          operations, which should work regardless of threading, TSS
          emulation and TSS availability.

Wed May  3 11:52:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Mem_Map.inl:
          Small const improvements

Wed May  3 10:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Mem_Map.{h,cpp,inl}:
          Made close_handle_ a bool

Wed May  3 08:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-macros.h:
          Removed support for KCC

Wed May  3 08:14:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_sendfile.h:
          Export sendfile_emulation to resolve link problems in the
          windows builds

Wed May  3 03:36:23 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Svc_Conf_y.cpp:

          Moved the ACE_BEGIN_VERSIONED_NAMESPACE_DECL macro to include
          ace_yyparse.

Tue May  2 09:34:54 Pacific Daylight Time 2006    <ossama_othman at symantec dot com>

        * ace/OS_NS_sys_sendfile.inl (sendfile):

          Removed "::" global scope qualifier from platform sendfile()
          call.  It caused problem on Solaris 8.  Thanks to Simon Massey
          and Johnny Willemsen for analyzing the problem and suggesting
          this fix.

Tue May  2 10:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-WinCE.h:
          Added ACE_LACKS_GETCWD, ACE_LACKS_ASCTIME, ACE_LACKS_ASCTIME_R,
          ACE_LACKS_GMTIME, ACE_LACKS_GMTIME_R, ACE_LACKS_LOCALTIME and
          ACE_LACKS_STRFTIME. These macros are new and will be used soon
          in the ACE_OS layer.

Mon May  1 19:49:45 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/ARGV.{h i cpp}: Filled out more of the documentation in this
          class, specifically mentioning that the class will enforce the
          "whitespace separates tokens, except when quoted" rule of command
          line parsing that's consistent with ACE_Get_Opt, etc. Also removed
          documentation of non-existant restrictions such as after using
          add(), can't use buf().
          Removed the State enum since the only value ever used was ITERATIVE,
          and changed "int state_" to "bool iterative_" (and removed the
          state() accessor). Changed substitute_env_args_ from int to bool.

        * ace/OS_NS_unistd.{h cpp} (argv_to_string, string_to_argv): Changed
          the substitute_env_args parameter from "int" to "bool" to better
          reflect what it is, a yes/no indicator.

Mon May  1 06:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_sunos5_g++.GNU:
        * include/makeinclude/platform_sunos5_sunc++.GNU:
          Also for solaris 10 link the sendfile lib

Sun Apr 30 04:21:37 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Svc_Conf_y.cpp:
          What I meant to commit last time.

Sun Apr 30 02:21:16 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Svc_Conf_y.cpp:
          Eliminating more warnings from the scoreboard. I'm not sure the
          best way to add this patch to ace/svcconf.mpb, since it affects
          more than just gnuace targets. The easiest would be to store the
          diff between this commit and the previous version and run patch,
          but I'm not sure how to integrate that solution.

Sat Apr 29 13:58:28 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.cpp:
          More fuzz cleanup.

Sat Apr 29 13:17:24 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/ACE.cpp:
          Fuzz cleanup.

        * THANKS:
          Added credits.

Fri Apr 28 22:31:52 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.cpp:

          Removed an ';' after ACE_TRACE, which was confusing GCC4 with
          "hidden visibility" enabled.

Fri Apr 28 21:22:53 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.cpp:
        * ace/Service_Gestalt.cpp:

          More re-formatting to weed out those pesky tabs.

Fri Apr 28 20:57:19 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-sunos5.8.h:
        * ace/config-sunos5.9.h: Moved ACE_HAS_SENDFILE from Solaris 8 to
          Solaris 9. Solaris 8 supports sendfilev[64] but not sendfile,
          at least not without some patches I don't know about.

Fri Apr 28 20:13:41 UTC 2006  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_g++.GNU:
        * include/makeinclude/platform_sunos5_sunc++.GNU:
          Solaris 9 puts sendfile() is a separate library, so LIBS needs
          -lsendfile on Solaris 9.

Fri Apr 28 18:03:11 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/ACE.cpp:
        * ace/DLL.cpp:
        * ace/DLL_Manager.cpp:
        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Dependency.cpp:
        * ace/Parse_Node.cpp:
        * ace/Service_Config.inl:
        * ace/Service_Config.cpp:
        * ace/Service_Gestalt.cpp:
        * ace/Service_Object.cpp:
        * ace/Service_Repository.cpp:
        * ace/Service_Types.cpp:
        * ace/Shared_Object.cpp:

          Applied formatting style consistent with ACE convention.

Fri Apr 28 15:48:25 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Service_Config.cpp (open_i): ACE_DEFAULT_SVC_CONF shouldn't
          be enclosed in ACE_LIB_TEXT since it's defined in terms of
          ACE_LIB_TEXT already.

Fri Apr 28 15:49:21 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Makefile.am:
          Added new Service_Gestalt files to the appropriate lists.

Fri Apr 28 15:42:59 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Service_Config.cpp:
          Fixed a problem killing some wchar builds.

        * ace/Service_Gestalt.h:
          Cleaned up the long-lines of the UNIMPLEMENTED functions.

Fri Apr 28 15:26:53 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Queue_Adapters.h: Clarified the use and restrictions with
          ACE_Async_Timer_Queue_Adapter.

Fri Apr 28 15:22:35 UTC 2006  Steve Huston  <shuston@riverace.com>

        * apps/JAWS2/JAWS/Concurrency.cpp: Removed unused variables.

Fri Apr 28 14:54:04 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-macros.h: HP aC++ needs to see the statement in
          ACE_NOTREACHED up to the version 6 series (Integrity). Also see
          Tue Apr 11 13:12:36 UTC 2006  Simon McQueen  <sm@prismtech.com>

Fri Apr 28 14:31:48 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/Service_Gestalt.h: Removed extraneous ';' from
          ACE_UNIMPLEMENTED_FUNC usage.

        * m4/ace.m4: Fixed incorrect variable referenced in case during
          --enable-uses-wchar.  Thanks to Paul Robinson <probinson at
          gmail dot com> for reporting this.

Fri Apr 28 14:03:50 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Dynamic_Service.h:
        * ace/Parse_Node.h:

          Fixed the usage of ACE_UNIMPLEMENTED_FUNC to remove the trailing
          semicolon. It was causing build errors on compilers that define
          the macro as empty.

Fri Apr 28 13:55:01 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.h:

          Fixed the usage of ACE_UNIMPLEMENTED_FUNC to remove the trailing
          semicolon. It was causing build errors on compilers that define
          the macro as empty.

Fri Apr 28 13:29:08 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * bin/tao_orb_tests.lst:

          Updated the conditions for running the ORB-specific service
          repository tests.

Fri Apr 28 13:23:57 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.h:

          Updated the declaration of current_ to match the definition in
          its use of ACE_TSS_TYPE macro, as they are not equivalent for
          a single-threaded builds.

Fri Apr 28 13:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Process_Mutex_Test.cpp:
          When spawn fails log an error and exit instead of using an assert
          which causes an abort of the exe

Fri Apr 28 13:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Pipe_Test.cpp:
          When spawn fails log an error and exit instead of using an assert
          which causes an abort of the exe

Fri Apr 28 12:49:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-openvms.h:
          Added __SIGNED_INT_TIME_T so that we get a signed time_t that
          matches the POSIX spec that ACE expects.

Fri Apr 28 12:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-openvms.h:
          Removed comments, macros are documented in generally, added
          ACE_LACKS_PERFECT_MULTICAST_FILTERING

Fri Apr 28 11:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/PerlACE/Process_VMS.pm:
          New file to be able to run the tests automatically on OpenVMS

        * bin/PerlACE/Process.pm:
          When running on OpenVMS use Process_VMS

        * ace/config-openvms.h:
          Added ACE_HAS_SIGISMEMBER_BUG

        * tests/run_test.pl:
          If ACE_ROOT is not set, add ../bin to lib

Fri Apr 28 09:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Process_Manager_Test.cpp:
          Also create a logfile for each child process started

Fri Apr 28 08:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/run_test.lst:
          Added Sendfile_Test

Fri Apr 28 08:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sendfile_Test.cpp:
          Added missing include

Thu Apr 27 21:04:08 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/OS_Memory.h: Allow configs to set ACE_bad_alloc to avoid
          extending the if-elif chain here further.

        * ace/config-win32-msvc.h: Regardless of MSVC version, MFC changes
          operator new to throw CMemoryException on out-of-memory condition.
          Version-specific settings still control the setting of
          ACE_HAS_NEW_NOTHROW. Thanks to Mohit Kapoor <Mohit dot Kapoor at
          siemens dot com> for this fix.

        * ace/Select_Reactor_T.cpp (handle_error): HACK ALERT! Some Linux
          kernels will return from select() with an "invalid" errno value,
          ERESTARTNOHAND, when compiled with profiling enabled. This works
          around the problem. This is a known kernel bug; see Red Hat Bugzilla
          https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=161468 and
          https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=123648 as well
          as Riverace support issue #167 and Riverace's complaint to Red Hat,
          support issue #17841808.

        * THANKS: Added Mohit Kapoor to the Hall of Fame.

Thu Apr 27 20:14:52 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.cpp:

          Fixed a complaint from a ACE_NDEBUG builds about unrefrenced
          variable (only used in ACE_ASSERT).

Thu Apr 27 18:33:18 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Aio_Platform_Test.cpp:
          When AIO is not available, just print an info message and exit

        * tests/run_test.lst:
          Added Aio_Platform_Test, it was not in this file at all

Thu Apr 27 18:21:17 UTC 2006  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-5.x.h: Added ACE_HAS_SIGSUSPEND.

Thu Apr 27 14:57:10 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Svc_Conf.y:
        * ace/Svc_Conf_Tokens.h:
        * ace/Svc_Conf_y.cpp:

          Fixed fuzz complaint about #include inside a versioned namespace
          in Svc_Conf_y.cpp. It was due to a code that Bison generates a
          part of the parser, from Svc_Conf.y. Changed the versioned
          namespace to encloses the non-generated code only, while the
          rest of the parser seems to be designed so that multiple parses
          can coexist without name clashes.

Thu Apr 27 14:29:07 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Dynamic_Service_Dependency.h:
        * ace/Dynamic_Service_Dependency.cpp:

          Updated to remove an empty inl file.

        * ace/Dynamic_Service_Dependency.inl:

          Removed this file.

Thu Apr 27 14:00:18 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Sock_Connect.cpp:
          Implemented get_ip_interfaces for OpenVMS

Thu Apr 27 11:19:18 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Array_Map.h:
        * ace/ATM_Addr.h:
        * ace/Atomic_Op_T.h:
        * ace/Base_Thread_Adapter.h:
        * ace/Cached_Connect_Strategy_T.h:
        * ace/Capabilities.h:
        * ace/Default_Constants.h:
        * ace/Hash_Map_Manager_T.h:
        * ace/Log_Msg_Callback.h:
        * ace/Log_Msg_IPC.h:
        * ace/Map_Manager.h:
        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Proactor.h:
        * ace/RB_Tree.h:
        * ace/Strategies_T.h:
        * ace/Timer_Heap_T.h:
        * ace/Timer_List_T.h:
        * ace/Timer_Queue_Adapters.h:
        * ace/Timer_Queue_T.h:
        * ace/Timer_Wheel_T.h:
          Fixed doxygen warnings

Thu Apr 27 01:49:18 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/OS_NS_sys_sendfile.h (sendfile, sendfile_emulation):
        * ace/OS_NS_sys_sendfile.cpp (sendfile_emulation):

          ACE_LOFF_T -> off_t.  Expected ACE_LOFF_T behavior is still
          under scrutiny.

        * ace/OS_NS_sys_sendfile.inl:

          Added missing <sys/sendfile.h> include directive.  Addresses
          infinite recursion at run-time when ACE_HAS_SENDFILE is defined.

          (sendfile):

          ACE_LOFF_T -> off_t, as above.

Wed Apr 26 22:00:21 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Parse_Node.h:
        * ace/Service_Gestalt.h:

          Correcting a build problem, caused by the extraneous semicolons
          after ACE_UNIMPLEMENTED_FUNC

Wed Apr 26 20:21:49 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

          The motivation for these changes was to enable support in ACE
          for multiple instances of Service Configuration Repository, or
          more appropriately - "Gestalt" (from the German word, meaning
          something that's more than the sum of its parts).  This is
          feature is necessary to enable support for ORB-specific, or more
          generally - service-specific sets of services, i.e. to be able
          to have dynamically loaded services to use their own private set
          of service objects. In the context of the implementation I will
          use "gestalt" as a synonym for service configuration context or
          service configuration repository.

          In order to accomplish this, the "instance"-related
          functionality of the former ACE_Service_Config class has been
          moved to another class - ACE_Service_Gestalt. The
          ACE_Service_Config retains all static interfaces and those
          members, pertaining to the concept of process-wide configuration
          state. The service config, as known today has been retained as a
          concept, but in its specialized semantics as holding a
          process-wide configuration state. The primary concept expressing
          an instance of configuration context is the gestalt. The
          implementation actually uses a specialization of
          ACE_Service_Gestalt in order to implement ACE_Service_Config as
          a singleton, special case of configuration context.

          The static methods in ACE_Service_Config provide access to
          process-wide gestalt (ubergestalt, anyone?) instance.

          For more details, here is the history of all included changes,
          with their motivation and explanation. It is ordered
          alphabetically, by the names of the changed files:

        * ace/ACE.cpp:

          Added to the condition evaluating ACE::debug() to include a
          check if environmental variable ACE_DEBUG has been set.

          Updated the debug() function to call getenv() only once by using
          a method-local static variable to hold the value from the
          environment.

        * ace/DLL.h:
        * ace/DLL.cpp:

          Implemented an operator=, needed in order to implement the
          ACE_Service_Configuration_Guard class.

        * ace/DLL_Manager.cpp:

          Improved the error diagnostics so that a "file not found" would
          not mask a "symbol not defined" error when loading a DLL.

        * ace/Dynamic_Service.h:

          "Privatized" copy ctor and operator= for ACE_Dynamic_Service
          objects since it is not designed for such operations.

        * ace/Dynamic_Service.inl:

          Added overloaded method instance() for ACE_ANTI_TCHAR.

        * ace/Dynamic_Service.cpp:

          Changes to enable instantiation of a service, based on the
          registration in a particular service repository. Adding a method
          that takes ACE_Service_Gestalt* additional parameter.

        * ace/Dynamic_Service_Base.h:
        * ace/Dynamic_Service_Base.cpp:

          Factored out a find_i() method to be used by the friend
          ACE_Dynamic_Service_Dependency class. It implements the specific
          lookup policy that extends the search to the global repository
          if the named service object can not be found locally.

          Added instance method, allowing the caller to explicitly specify
          the gestalt.

        * ace/Dynamic_Service_Dependency.h:
        * ace/Dynamic_Service_Dependency.inl:
        * ace/Dynamic_Service_Dependency.cpp:

          A newly introduced class, whose instances are designed to be
          embedded inside instances of other classes, typically created by
          DLL-based factories (service objects). This provides a way to
          declare dependency on a specific service, thus avoiding order of
          initialization issues with objects whose implementation code
          resides in dynamically loaded services.

          It is disastrous to have dynamically loadable services create
          and give away ownership of objects and then be unloaded before
          all those instances have been deleted. Normally the code for
          such objects classes resides within the TEXT segment of the DLL,
          which implements the service. If a service gets removed, its DLL
          may be unmapped from memory and then any attempt to invoke a
          method on the said objects will cause SEGV.

          Such instances must contain a member of
          ACE_Dynamic_Service_Dependency initialized with the service they
          depend on. @code ACE_Dynamic_Service_Dependency's constructor
          and destructor are "magical" - they work by maintaining the
          underlying dynamic service's DLL reference count.

          The problem was not present before because the one Service
          Repository outlived any other user objects. Now that an
          un-loadable service can own its configuration, the sequence of
          service finalization has been reversed.

          Updated the implementation of ACE_Dynamic_Service_Dependency
          class to ease debugging. ACE_Dynamic_Service_Dependency gets
          initialized whenever a dependent service gets loaded, to help us
          keep our access to dependent instances after their DLL is gone
          (by upping the ref count on the DLL).

          Updated usage of gestalt's instance() to current(). Removed
          unnecessary comments.

        * ace/Global_Macros.h:

          Changed the ACE_STATIC_SVC_DEFINE to use the new
          ACE_Service_Config::insert () method, which allows to streamline
          the Service Configuration interface and promote hiding the
          storage used for the static service descriptors.

        * ace/Parse_Node.h:
        * ace/Parse_Node.cpp:

          Changes to aid in keeping track of the gestalt, while deep in
          the guts of the svc.conf parser.

          Replaced the ACE_Service_Gestalt & in the method signatures with
          ACE_Service_Gestalt * to unify the interfaces.

          Updated the static function node's logic to use only
          ACE_Service_Gestalt public members and to no longer rely on
          knowledge about the internal storage representation of service
          repository.

          Removed a static_cast<> in ACE_Static_Function_Node::symbol()
          that was causing problems on some platforms. It was not even
          necessary as both sides were of the same type.

        * ace/Service_Config.{h,inl,cpp}:

          This separates the responsibilities between the service gestalt,
          which represents an _instance_ of configuration information, and
          the service config, which represents a special, process-wide,
          global configuration repository. Since both these entities
          represent the same concept - service configuration state, but
          from different aspects, the ACE_Service_Config now inherits
          (publicly) from ACE_Service_Gestalt.

          Lots of instance-related code moved to ACE_Service_Gestalt
          Replaced the use of char with ACE_ANTI_TCHAR and the appropriate
          ACE_TEXT_* macros.

          Moved the parsing of command-line options, pertaining to the
          process as a whole, here - in the parse_args_i () (protected,
          virtual).

          In order to resolve a problem caused by the inability of a
          dependent static service to determine which gestalt they need to
          register with, the concept of "current" was separated from the
          "global" gestalt. The current gestalt is pointed to by a
          pointer, stored in thread-specific storage (TSS) and manipulated
          by the ACE_Service_Config_Guard class that implements the
          "resource acquisition is initialization" idiom.

          Fixed an error in the separation of responsibilities between the
          instance gestalt and the global (ubergestalt), during
          initialization.  The bug can cause infinite recursion, when
          initializing an ORB, housed in a dynamic service. The singleton
          gestalt (i.e. ACE_Service_Config) must be initialized through
          open_i(), before open_i() can proceed initializing the specific
          gestalt instance. The difficulty is in that some use cases
          reverse the order of initialization by calling
          ACE_Service_Config::open () first and then, at some point call
          the instance gestalt open_i(). The solution is to use the
          is_initialized_ member together with an explicit call to
          ACE_Service_Config::global()->open_i().  To ease debugging of
          the process of registering static service, I have changes the
          ACE_Service_Config::static_svcs() to return
          ACE_Service_Gestalt::instance (), instead. Thus all the
          ACE_STATIC_SVC* macros are still working (no need to change
          existing code), but now there is a convenient place to debug -
          see the newly added ACE_Service_Gestalt::insert () method.  The
          header file no longer declares ACE_STATIC_SVCS,
          ACE_STATIC_SVCS_ITERATOR, ACE_SVC_QUEUE and
          ACE_SVC_QUEUE_ITERATOR. Those are now protected typedefs in
          ACE_Service_Gestalt, where they are actually used.

          Added new insert () method to use instead of the sequence
          static_svc ()->insert () which unnecessary exposes the internal
          storage structure of Service Configurator.  Made no_static_svcs_
          an instance member, instead of a class (static) member, thus
          providing for ability to set it per instance, not globally.

          Added default values for open_i() and declared private copy ctor
          and assignment operator for ACE_Service_Config_Guard, since it
          is not intended to be copied.

          Similarly, moved the parts of the open_i() functionality that
          did not belong in every instance of the gestalt.
          ACE_Service_Config is again a process-wide Singleton,registered
          with ACE_Object_Manager.

          Eliminated old #if 0-ed code in Service_Config.cpp.

        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.inl:
        * ace/Service_Gestalt.cpp:

          Encapsulates the idea of Service Configuration repository, or
          configuration context.

          Changed open_i to be able to detect if it is working on the
          special, process-wide instance (ubergestalt) or a "plain"
          gestalt instance, since there are things that must only be done
          once per process - like signal handler, logging key and
          daemon-ization of the whole process.

          Added an ignore_static_svcs parameter to
          ACE_Service_Gestalt::open_i in order to preserve the prior
          behavior of the singleton ACE_Service_Gestalt instance. Even
          though its no_static_svcs_ member was being initialized with 1,
          some clients (TAO) needs to be able to override it. Since now a
          call to open_i on an instance gestalt may precede in time the
          call to open_i on the ubergestalt, we need a mechanism to allow
          the no_static_svcs_ value to be overridden.

          Added the insert()'s implementation (described above).  Added a
          singleton() method to return the process-wide gestalt singleton
          (or ubergestalt?:). Used in open_i() to account for the fact
          that now a Service Gestalt may be called to open () prior to
          open () on the singleton instance, which would typically contain
          the bulk of the static service object descriptors.

          There was a problem with "hybrid" service objects, i.e. dynamic
          SO which contains static SO (dependent services).  The dependent
          services are typically registered via static ctor or static
          initializer at the point of loading of the dynamic SO's DLL.  As
          such, they end up registering before the dynamic SO.  Upon
          finalization of the service repository, the dynamic SO is
          finalized first, thus unloading its DLL and unmapping the TEXT
          segment, where the dependent static services code is.  When
          next, the static SO is to be finalized its memory is no longer
          at valid address.  The change ensures the dynamic service is
          registered *before* its dependent static services and will
          therefore be finalized last.  The solution is based upon the
          concept of forward declaring a dynamic service, named after the
          configuration file being processed.  Before processing a file,
          we simply check for an existing service with the same name and
          "pass" if we find one.

          Fixed the ACE_Service_Config_Guard's detection of the case where
          the forward service declaration was not replaced by a proper
          declaration as expected. It now properly removes the forward
          decl, not the "good" instance.

          Cleared up the TSS management issue, causing executable to crash
          on startup. The problem was due to an order-of-instantiation
          issue, involving the TSS-based pointer to the current
          gestalt. Used ACE_Object_Manager's shutting_down and starting_up
          methods to determine if it is safe to use the static ACE_TSS
          instance.

          Added const-ness for find().  Removed prototypes for initialize,
          resume, suspend and remove that used plain char type and
          conditionally compiled in only for WinCE and
          ACE_USES_WCHAR. Service_Config still declares and defines these
          (using ACE_ANTI_TCHAR). Updated to resolve problems when built
          with ACE_USES_WCHAR.

          Declared private copy ctor and assignment operator for
          ACE_Service_Gestalt and ACE_Service_Type_Factory, since their
          instances are not intended to be copied.  Added an
          ACE_UNIMPLEMENTED_FUNC macro for the copy-ctor and assignment
          operator of ACE_Service_Type_Factory.

          Reorganized to streamline the header file and remove unnecessary
          declarations and to add a decl for find_static_svc_descriptor().

          Changed the open() method's implementation to incorporate the
          additional parameter for open_i().

          Added the new find_static_svc_descriptor() member, which allows
          ACE_Static_Function_Node to not need to know how the static
          services are registered in the service repository.

        * ace/Service_Object.h:
        * ace/Service_Object.inl:
        * ace/Service_Object.cpp:

          Exposed the dll_ member through dll () const method because the
          reference is needed by the new ACE_Dynamic_Service_Dependency
          class. Fixed the dump () method.

        * ace/Service_Repository.h:
        * ace/Service_Repository.cpp:

          Added const-ness for the find* () methods. Added debugging.  The
          remove method changes the order of services registrations in the
          repository, which may break the Service Repository's invariant,
          imposed by the need to correctly finalize dynamic services with
          their own static services.

          For example, consider a case where a static service (S0) is
          registered in the repository. Then a DLL-based service (D1)
          registers its own static service (S1). So far the order is
          "finalization-compatible": S0 < D1 < S1, i.e. services will be
          finalized in reverse order and D1's DLL will still be available
          when finalizing S1.  Now let's remove (S0). Currently, after
          this operation the repository end up in this order: S1 < D1,
          which is trivially not finalization-compatible.

          Instead of replacing the pointer with the last ptr to a svc in
          the array (repository) and then decrementing the current size of
          the repo, the solution actually shifts left the rest of the
          array.

        * ace/Service_Types.cpp:
        * ace/Shared_Object.cpp:

          Removed some and updated existing debug statements. Eliminated
          dead partial instantiation code.

        * ace/Svc_Conf.y:
        * ace/Svc_Conf.h:
        * ace/Svc_Conf_Tokens.h:
        * ace/Svc_Conf_y.cpp:

          Changed to allow propagation of the knowledge about which
          gestalt is currently being used for service registrations.

          Factored the ACE_Svc_Conf_Param class out in its own translation
          unit.

        * ace/Svc_Conf_Param.h:

          Replaced the ACE_Service_Gestalt & in the method signatures with
          ACE_Service_Gestalt *

        * ace/svcconf.mpb:

          Updated the svcconf.mpb rule to allow building with Bison 2.0
          and up. The change adds #ifdef/#endif around the generated
          header file. A YYSTYPE_IS_DECLARED define is added in order to
          make sure the token declarations from the Svc_Conf_Tokens.h are
          used instead of those generated in the Svc_Conf_y.cpp file.

          Added the new Dynamic_Service_Dependency.* files.

        * bin/tao_orb_tests.lst:

          Adding the new tests to the automated test suite to run during
          the nightly builds.

Wed Apr 26 17:13:57 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/tao_orb_tests.lst:
          Added test for Parallel_Connect_Strategy. This test will take
          about 9 minutes to run to completion.

Wed Apr 26 14:22:31 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/tao_orb_tests.lst:
          Added tests for new POA features.

        * bin/MakeProjectCreator/config/endpointpolicy.mpb:
          Applications wishing to use the TAO EndpointPolicy should add
          this base project to their MPC files. This will include
          libTAO_EndpointPolicy in their link lines.

Wed Apr 26 14:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_hpux_kcc.GNU:
        * include/makeinclude/platform_irix6.x_kcc.GNU:
        * include/makeinclude/platform_linux_kcc.GNU:
        * include/makeinclude/platform_osf1_4.x_kcc.GNU:
        * include/makeinclude/platform_sunos5_kcc.GNU:
        * include/makeinclude/platform_tru64_kcc.GNU:
          Removed these files which are for the KAI C++ compiler. This
          compiler doesn't exist anymore and full support for KAI C++
          has been removed now from ACE/TAO. See bugzilla bug 2007

Wed Apr 26 13:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added TAO/tests/POA/Bug_2511_Regression

Wed Apr 26 12:52:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Process_Manager.cpp:
          Fixed fuzz errors and use const when possible

Wed Apr 26 12:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CDR_Test.cpp:
          Boolean is now size 1 or bigger, the marshaling code will take
          care that a Boolean is marshaled as octet of size 1

Wed Apr 26 11:28:28 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/tao_orb_tests.lst:
          Added TAO/tests/OBV/truncatable.

Wed Apr 26 10:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added TAO/tests/OBV

Wed Apr 26 09:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added TAO/tests/Portable_Interceptors/Bug_2510_Regression

Wed Apr 26 07:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks5.5.x.GNU:
          Increased template-depth to 50, hopefully this is large enough to
          also build CIAO

Tue Apr 25 16:44:04 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:
          Added code to support rewinding the output CDR to some previous
          location and updating a value there. This is required to support
          marshaling offset values were the target of the offset is not
          known until the final offset target is actually reached.

Tue Apr 25 13:50:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/Signal_Test.cpp:
          Fixed this test for (modern) Linux and Solaris at least.
          The crux is blocking signals before calling sigwait() when doing
          synchronous signal handling.

Tue Apr 25 09:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Base_Thread_Adapter.h:
        * ace/Cleanup.h:
          Fixed some errors I made

Tue Apr 25 09:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html:
          Updated supported platforms and use vc8 for the MPC examples

Tue Apr 25 08:49:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Base.h:
          Always use bool for Boolean, see bugzilla 2514 for more info

Tue Apr 25 06:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Log_Msg.h:
          Put back ACE_TSS_CLEANUP_NAME that got lost by accident with the
          vc6 cleanup. Thanks to Olli Savia for reporting this.

Mon Apr 24 17:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/run_test.lst:
          Added Signal_Test. Thanks to Martin Corino for notificing that
          we don't run this test on any platform.

Mon Apr 24 10:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added TAO/tests/Bug_1676_Regression

Mon Apr 24 09:57:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks5.5.x.GNU:
          Increase template depth to resolve compile errors when building
          TAO with the new sequence implementation

Mon Apr 24 09:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_types.h:
          Added ACE_LOFF_T for LynxOS. Thanks to Simon Massey for delivering
          the patch

Fri Apr 21 16:28:26 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

         Merge from ARMS Escher repository.

        * ace/OS_NS_Thread.cpp

          Updated sched_params() to not ignore the process id passed in.
          Also enhanced the Windows implementation to get a handle to the
          process specified before applying the priority class changes.

        * ace/Process_Manager.cpp
        * ace/Process_Manager.h

           Added methods set_scheduler and set_scheduler_all
           to set scheduling parameters for process(es) managed by this
           class.

        * bin/MakeProjectCreator/config/ciao_config_handlers.mpb

          Fixed build ordering problem in CIAO.

Fri Apr 21 07:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Caching_Utility_T.cpp:
          Removed invalid added const

Thu Apr 20 19:27:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_types.h:
          Added ACE_LOFF_T for the BSD variants, thanks to J.T. Conklin
          for delivering the patch

Thu Apr 20 18:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-macros.h:
          Removed setting of ACE_ANY_OPS_USE_NAMESPACE again. This causes
          problems when building CIAO. Thanks to Jeff Parsons for finding
          this.

Thu Apr 20 11:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/ACE_Init_Test.rc:
          Removed another msvc specific part

Thu Apr 20 11:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Added a check for deprecated macros, first one to check is
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION

        * tests/*.cpp:
        * protocols/*.cpp:
        * ACEXML/*.cpp:
        * performance-tests/*.cpp
        * netsvcs/*.cpp
          Removed all explicit template instantiations

        * ace/os_include/sys/os_types.h:
          Added ACE_LOFF_T typedef for VxWorks 6.2 and newer

Thu Apr 20 07:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_types.h:
          Always define ACE_LOFF_T so that we can use it in the sendfile
          wrapper

Thu Apr 20 07:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/svcconf.mpb:
          Removed Service_Templates.cpp

Wed Apr 19 19:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/*:
          Removed explicit template support

Wed Apr 19 15:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2368_Regression_Test.cpp:
          Fixed compile error and compile warning

Wed Apr 19 14:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_sendfile.h:
          Updated include to get size_t and ACE_LOFF_T to fix compile
          errors on Solaris

Wed Apr 19 13:31:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/APG/Logging/Use_Multiple_Sinks.cpp:
        * examples/APG/Logging/Use_Ostream.cpp:
        * examples/APG/Logging/LogManager.h:
          Removed vc6 workarounds

Wed Apr 19 13:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2368_Regression_Test.cpp:
        * tests/run_test.lst:
        * tests/tests.mpc:
          Added regression for bug 2368, this will fail because this bug
          isn't addressed yet

Wed Apr 19 13:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_sunos5_g++.GNU:
          Use -shared instead of -G when building shared libraries. Thanks to
          Alan L Batongbacal <alanlb at vt dot edu> for reporting this. This
          fixes bugzilla bug 1848.

Wed Apr 19 12:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/ACE_Init_Test.rc:
          Removed msvc specific lines

        * tests/tests.mpc:
          The ACE_Init_Test should use its resource file. Fixes bugzilla
          2495

        * ace/Capabilities.{h,cpp}:
          Prefix increment instead of postfix

        * ace/Hash_Map_Manager_T.{h,cpp}:
          Removed workaround for suncc 4.2

        * ace/Object_Manager.h:
        * ace/Parse_Node.h:
        * ace/POSIX_Proactor.h:
        * ace/Thread_Mutex.h:
          Doxygen improvements

        * ace/Parse_Node.cpp:
          Use prefix increment, initialise pointers with 0 and don't print
          an error message when we can't a dll, this gives false messages
          when using TAO. This fixes bugzilla 2383. Thanks to Ming Xiong
          for making a patch.

        * ace/Proactor.h:
          Removed all virtual keywords, not needed for this class. Fixes
          bugzilla 2178.

        * ace/Thread_Manager.h:
          Removed virtual keywords, not needed and safes footprint. Fixes
          bugzilla 2179.

        * bin/fuzz.pl:
          Added more msvc checks to detect code constructors for vc6 or
          vc7.0

Wed Apr 19 11:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Merged ACE changes from sendfile branch. Also made a lot of const
        improvements throughout ACE.

        Tue Apr  4 10:20:36 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Mem_Map.cpp (open):

        Only copy the filename to the ACE_Mem_Map::filename_ member
        if the call to open() succeeds.

        * ace/PI_Malloc.h (ACE_Malloc_Header):

        Added missing private and undefined copy constructor.  The
        corresponding assignment operator was already there.

        Wed Mar 29 14:51:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-sunos5.8.h:
        Solaris 8 and newer also support sendfile. It seems HPUX also
        supports it but with a different signature and semantics, so just
        don't try it there yet.

        Wed Mar 29 13:06:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/MMAP_Memory_Pool.{h,cpp,inl}:
        Added new .inl file to implement the new mmap accessors, include
        this new file in the header and implementation file

        Wed Mar 29 08:00:12 2006  Ossama Othman <ossama@dre.vanderbilt.edu>

        * ace/OS_NS_sys_sendfile.cpp
        * ace/OS_NS_sys_sendfile.h
        * ace/OS_NS_sys_sendfile.inl
        New sendfile wrapper

        * ace/MMAP_Memory_Pool.h:
        Added accessors for mmap

        * ace/ace.mpc
        Added OS_NS_sys_sendfile

        * ace/config-linux-common.h
        Added ACE_HAS_SENDFILE

Wed Apr 19 07:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Merged ACE changes from sequpdate3 branch

        * ace/config-osf1-3.2.h:
          Removed, very old

        * ace/config-tru64.h:
          Removed include of config-osf1-3.2.h

        * ace/OS_Dirent.cpp:
        * ace/OS_Memory.{cpp,inl}:
        * ace/OS_String.{cpp,inl}:
        * ace/Sync.cpp:
          Removed these files, where not build for a long time already

        * ace/ace.mpc:
          Removed files above

        * ace/OS_Memory.h:
        * ace/OS_String.h:
          Removed include of inline files

        * ace/config-win32-msvc6.h:
        * ace/config-kcc-common.h:
          Removed these files, vc6 and kcc are deprecated

        * ace/config-irix6.x-kcc.h:
        * ace/config-osf1-4.0.h:
        * ace/config-sunos5.5.h:
          Removed support for KCC

        * ace/Asynch_IO_Impl.h:
          Removed workarounds for KCC

        * ace/config-win32-msvc.h:
          Removed support for vc6 and vc7.0

        * ace/Array_Base.cpp:
        * ace/Array_Map.{h,cpp}:
        * ace/Base_Thread_Adapter.h:
        * ace/Cleanup.h:
        * ace/Log_Msg.h:
        * ace/Versioned_Namespace.h:
        * ace/Get_Opt.cpp:
        * ace/WIN32_Proactor.cpp:
        * ace/Message_Queue.cpp:
        * ace/CDR_Base.h:
          Removed work arounds for vc6

        * ace/README
        * ace/config-win32-msvc6.h:
        * ace/Global_Macros.h:
          Deprecated ACE_HAS_BROKEN_NAMESPACES, we drop msvc6 and I am
          removing the workarounds for this compiler one by one as part of the
          new sequence implementation. Because we deprecate this also
          ACE_NESTED_CLASS is deprecated

        * ace/config-win32-msvc6.h:
        * ace/config-win32-msvc7.h:
        * ace/config-win32-msvc8.h:
          Removed ACE_HAS_BROKEN_IMPLICIT_CONST_CAST, not used in ACE

        * ace/config-win32-msvc6.h:
        * ace/config-win32-visualage.h:
        * ace/Registry.h
          Removed ACE_HAS_BROKEN_NESTED_TEMPLATES, only used for msvc6 and
          visual age, both are being dropped

Wed Apr 19 07:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_2503_Regression

Tue Apr 18 20:49:16 2006  Wallace Zhang  <zhangw@ociweb.com>

        * ACE version 5.5.1 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
