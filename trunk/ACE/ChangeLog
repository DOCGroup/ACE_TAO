Tue Feb 20 15:54:20 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/OS_NS_Thread.cpp:

          Reverted my change to check PTHREAD_STACK_MIN.  I just realized
          that it may not be defined as an integral value (i.e., Solaris).

Tue Feb 20 15:46:06 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/OS_NS_Thread.cpp:

          Added ACE_UNUSED_ARG(id) for RTEMS and modified code to check
          that size (which is of type size_t) is less than PTHREAD_STACK_MIN
          only if PTHREAD_STACK_MIN is greater than zero.

        * ace/OS_NS_stdlib.cpp:

          Fixed a compile error on VxWorks where an attempt to cast
          ACE_thread_t to ACE_RANDR_TYPE failed (since ACE_thread_t is char*
          on VxWorks).

        * ace/SOCK_Dgram.cpp:

          The iov_len element of the iovec struct is unsigned on RTEMS (as
          it is with Linux and Borland C++), so use the same #if check to
          avoid code that causes warnings.

Tue Feb 20 15:06:04 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/SOCK_Dgram.cpp:

          The iov_len element of the iovec struct is unsigned on Linux (as
          it is with Borland C++), so use the same #if check to avoid code
          that causes warnings.

        * ace/Containers_T.cpp:
        * ace/Timer_Heap_T.cpp:
        * ace/UPIPE_Stream.cpp:
        * ace/UUID.cpp:

          Added static_cast<> to avoid conversion warnings.

Tue Feb 20 15:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * m4/compiler.m4:
          Fixed support for --enable-symbol-visibility. This fixes bugzilla
          bug 2771, thanks to Waba <waba-ace at waba dot be> for reporting
          this.

Tue Feb 20 14:43:00 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ASNMP/asnmp/pdu.cpp:
        * apps/JAWS2/JAWS/Cache_Manager.cpp:

          Added a check for self assignment.

        * ace/INET_Addr.cpp:
        * tests/Multicast_Test_IPV6.cpp:
        * examples/Web_Crawler/Command_Processor.cpp:

          Removed redundant code to avoid "statement is unreachable"
          warnings.

        * examples/APG/Naming/Temperature_Monitor.cpp:
        * examples/APG/Naming/Temperature_Monitor2.cpp:
        * examples/APG/Streams/Answerer.cpp:
        * examples/C++NPv1/Logging_Server.cpp:
        * examples/C++NPv1/Process_Per_Connection_Logging_Server.cpp:
        * examples/C++NPv1/Thread_Per_Connection_Logging_Server.h:

          Added ACE_NOTREACHED around unreachable code to avoid "statement
          is unreachable" warnings.

        * examples/Connection/blocking/SPIPE-acceptor.cpp:

          Reverted a bug that was introduced many years ago where threads
          would be spawned and then the main thread would exit.

        * performance-tests/SCTP/SOCK_SEQPACK_clt.cpp:
        * performance-tests/SCTP/SOCK_SEQPACK_srv.cpp:
        * performance-tests/SCTP/SOCK_STREAM_srv.cpp:

          Modified to only compile code if ACE_HAS_SCTP is defined.

        * tests/INET_Addr_Test.cpp:

          Check addr.get_host_addr() for non-zero before passing it to
          ACE_OS::strcmp().

Tue Feb 20 03:08:26 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/tests.mpc:
        * tests/Bug_2820_Regression_Test.cpp:
          A new test to demonstrate the problems in bug 2820.

Mon Feb 19 21:02:55 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Atomic_Op.inl:
        * ace/OS_NS_unistd.inl: Adjust code for less-than-modern Win32 systems
          such as Pharlap ETS to work with 64 bit file offsets and the lack
          of interlocked exchange-add.

Mon Feb 19 18:33:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SSL/SSL_Context.h:
          Layout change

        * ace/SSL/SSL_Context.inl (check_context):
          Set the verify mode correctly, fixes bugzilla bug 2819

Mon Feb 19 12:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_other_tests.lst:
          Added Secure_Invocation test, this tests basic functionality but
          seems to fail at this moment because of some broken support in
          TAO

Fri Feb 16 23:48:55 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.cpp:

          ACE_INLINE makes sense in .inl files (thanks Steve)

Fri Feb 16 13:38:04 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Dependency.cpp:
        * ace/Service_Config.h:
        * ace/Service_Config.inl:
        * ace/Service_Config.cpp:
        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.inl:
        * ace/Service_Gestalt.cpp:

          Reverting my changes since "Tue Feb 13 15:35:54 UTC 2007" as it
          has been causing problems, in particular with borland and
          no-threads builds.

Fri Feb 16 12:47:03 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Service_Config.cpp (global): Removed the ACE_INLINE qualifier
          from global() - if it's in the .cpp file, it shouldn't be marked
          as inline, and isn't marked thusly in the .h file. Fixes unsats.

        * ace/Service_Config.h: Fixed spelling error.

Thu Feb 15 20:04:01 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/OS_NS_stdlib.cpp (mkstemp_emulation):

          Include process and thread ID in random number generator seed
          value.  Addresses problems where the same seed value would end
          up being used for different processes and/or threads, resulting
          in identical filenames being generated.

          Addressed potential race condition on platforms that do not
          inline the value of ACE_Numeric_Limits<>::max().

Thu Feb 15 17:53:53 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * THANKS: Check-in rules 101: Check-in files that you have
          modified.  Don't ever forget this basic rule.

Thu Feb 15 13:50:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Stream.h:
        * ace/Connector.h:
        * ace/DEV_IO.h:
        * ace/FIFO_Recv.h:
        * ace/FIFO_Send.h:
        * ace/FIFO_Send_Msg.h:
        * ace/FILE_IO.h:
        * ace/INET_Addr.h:
        * ace/Local_Memory_Pool.h:
        * ace/Malloc_Base.h:
        * ace/MEM_IO.h:
        * ace/Mem_Map.h:
        * ace/MEM_SAP.h:
        * ace/MEM_Stream.h:
        * ace/Message_Block.h:
        * ace/MMAP_Memory_Pool.h:
        * ace/OS_NS_unistd.h:
        * ace/Pipe.h:
        * ace/Process_Manager.h:
        * ace/QoS/SOCK_Dgram_Mcast_QoS.h:
        * ace/Service_Types.h:
        * ace/Shared_Memory_Pool.h:
        * ace/SOCK_Dgram.h:
        * ace/SOCK_Dgram_Mcast.h:
        * ace/SOCK_IO.h:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/SPIPE_Stream.h:
        * ace/Stream.h:
        * ace/Task.h:
        * ace/Thread.h:
        * ace/Thread_Manager.h:
        * ace/UPIPE_Stream.h:
          Doxygen improvements

Thu Feb 15 13:38:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ATM_Connector.h:
        * ace/DEV_Connector.h:
        * ace/DEV_IO.h:
        * ace/Dev_Poll_Reactor.h:
        * ace/FILE_Connector.h:
        * ace/Hash_Map_Manager_T.h:
        * ace/IOStream_T.h:
        * ace/LOCK_SOCK_Acceptor.h:
        * ace/Map_Manager.h:
        * ace/MEM_IO.h:
        * ace/MEM_SAP.h:
        * ace/MEM_Stream.h:
        * ace/Message_Block.h:
        * ace/Message_Queue.h:
        * ace/Message_Queue_T.h:
        * ace/Module.h:
        * ace/Proactor.h:
        * ace/Reactor.h:
        * ace/Reactor_Impl.h:
        * ace/Select_Reactor_T.h:
        * ace/Sig_Handler.h:
        * ace/Signal.h:
        * ace/SOCK.h:
        * ace/SOCK_Acceptor.h:
        * ace/SOCK_Dgram.h:
        * ace/SOCK_IO.h:
        * ace/SOCK_SEQPACK_Acceptor.h:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/SPIPE_Connector.h:
        * ace/Stream.h:
        * ace/Svc_Handler.h:
        * ace/Task_Ex_T.h:
        * ace/Task_T.h:
        * ace/Thread_Manager.h:
        * ace/TLI_Acceptor.h:
        * ace/TLI_Connector.h:
        * ace/Token.h:
        * ace/WFMO_Reactor.h:
        * ace/XTI_ATM_Mcast.h:
          Doxygen improvements

Thu Feb 15 13:12:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/OS/Process/imore.cpp:

          Removed an enclosing block around code that caused issue with
          SunCC 5.8.  There was a comment claiming that the block was needed
          so that the ACE_Process_Options could elegantly close the file
          handlers that it kept, however the ACE_Process_Options object does
          not close the file handlers.  The ACE_Process does the handle
          closing.

Thu Feb 15 05:41:11 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.inl:
        * ace/Service_Gestalt.cpp:

          Moved find off-line because it requires a full declaration of
          ACE_Service_Repository, which is unavailable when the inl file
          is compiled (inlining on)

Wed Feb 14 23:05:16 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.h:
        * ace/Service_Config.inl:
        * ace/Service_Config.cpp:
        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.cpp:

          Moved the ACE_Unmanaged_Singleton usage to the implementation
          file and eliminated the unnecesary #includes, aiming to reduce
          the footprint.

Wed Feb 14 19:56:14 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * ace/Service_Config.h:
          s/TAO_Export/ACE_Export/

Wed Feb 14 19:21:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added bug 2809 regression

Wed Feb 14 17:33:22 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.h:
          Fixing a compile problem with g++ and borland compiler, which
          treat members of private nested classes as "hidden" even when
          the enclosing type has been exported.

Wed Feb 14 12:59:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Acceptor.h:
          Doxygen improvement

Wed Feb 14 11:31:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_stdio.h:
        * ace/os_include/os_unistd.h:
          Move ACE_STDIN, ACE_STDOUT and ACE_STDERR from stdio to unistd
          file and use STDIN_FILENO, STDOUT_FILENO and STDERROR_FILENO if
          these are defined yet, this way we use the same defines and header
          files as in the posix specification. This fixes bugzilla bug 2731.
          Thanks to Abdul Sowayan <abdullah dot sowayan at lmco dot com>
          for reporting this.

        * ace/Truncate.h:
          Added another const specialization for Borland C++

Wed Feb 14 11:03:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Process_Manager_Test.cpp:
          Added test code from bugzilla 2797, thanks to Yves Alloyer
          <alloyer at ipanematech dot com> for reporting this.

Wed Feb 14 10:06:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_other_tests.lst:
          Added TAO/orbsvcs/tests/Bug_2800_Regression/run_test.pl

Wed Feb 14 08:53:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Active_Map_Manager_T.h:
        * ace/Cache_Map_Manager_T.h:
        * ace/CDR_Size.h:
        * ace/CDR_Stream.h:
        * ace/Configuration.h:
        * ace/Dev_Poll_Reactor.h:
        * ace/Future.h:
        * ace/Future_Set.h:
        * ace/Hash_Cache_Map_Manager_T.h:
        * ace/High_Res_Timer.h:
        * ace/INET_Addr.h:
        * ace/IO_SAP.h:
        * ace/IPC_SAP.h:
        * ace/Map_T.h:
        * ace/MEM_SAP.h:
        * ace/Message_Block.h:
        * ace/Msg_WFMO_Reactor.h:
        * ace/Multihomed_INET_Addr.h:
        * ace/Priority_Reactor.h:
        * ace/Reactor.h:
        * ace/Reactor_Impl.h:
        * ace/Recursive_Thread_Mutex.h:
        * ace/Registry.h:
        * ace/Semaphore.h:
        * ace/Shared_Memory_MM.h:
        * ace/Shared_Memory_SV.h:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/Thread_Mutex.h:
        * ace/Timeprobe_T.h:
        * ace/WFMO_Reactor.h:
          Doxygen improvements

        * ace/Truncate.h:
          Fixed compile problems with Borland C++, thanks to Ossama for
          giving a solution.

Tue Feb 13 20:33:58 UTC 2007  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * THANKS: Added gzeleniy@gmail.com to the THANKS list.

Tue Feb 13 15:35:54 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.{h,inl,cpp}:

          Refactoring to simplify the TSS usage, reduce overhead and
          eliminate a memory leak.

        * ace/Service_Gestalt.cpp:

          Fixed a memory leak in Service_Type_Dynamic_Guard dtor. Updated
          logging.

        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Dependency.cpp:

          Updated to use SC::instance () to better express the contract
          for these classes. They simply don't need to be aware whether
          they are using a global, or a TSS-local gestalt .

Tue Feb 13 14:44:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks5.x.h:
          Removed VxWorks 5.4.2 support, we haven't build for it in years

Tue Feb 13 12:58:13 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ACEXML/common/Exception.h:
        * ACEXML/common/Exception.cpp:
        * ACEXML/common/SAXExceptions.h:
        * ACEXML/common/SAXExceptions.inl:
        * ACEXML/common/SAXExceptions.cpp:

          Changed the print() and message() methods to const.  There was no
          reason for thease to be non-const and it makes it possible to
          catch const references of the ACEXML exception types.

Mon Feb 12 20:24:04 UTC 2007  Steve Huston  <shuston@riverace.com>

        * examples/Logger/Acceptor-server/server_loggerd.cpp (handle_input):
        * examples/Logger/simple-server/Logging_Handler.cpp (handle_input):
          Log the host name of the peer, not "<localhost>", as previous code
          did; also make sure to put it in ACE_TCHAR form. See also
          Thu Feb  8 23:09:59 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

Mon Feb 12 19:20:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CORBA_macros.h:
          Fixed several macros which where using () around the exception
          to be thrown

Mon Feb 12 18:10:42 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Name_Request_Reply.cpp (timeout):
        * netsvcs/lib/Time_Request_Reply.cpp (timeout, decode):
          Truncate 64-bit time value down to the platform's time_t size.

Mon Feb 12 15:18:42 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/fuzz.pl:

          Check for the use of ACE_THROW_SPEC in TAO or CIAO code only.
          It's usage within ACE is still ok in some situations.

Mon Feb 12 14:44:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Removed old todo's, extended msvc ver check

        * ace/Codeset_IBM1047.cpp:
        * ace/Functor.cpp:
        * ace/Functor.inl:
        * ace/Hash_Map_Manager_T.cpp:
        * ace/Hash_Multi_Map_Manager_T.cpp:
        * ace/Sched_Params.cpp:
        * ace/Sched_Params.inl:
          Converted to doxygen style documentation

        * bin/doxygen-convert-h.pl:
          Only handle source files

Mon Feb 12 14:38:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CORBA_macros.h:
          Use ACE_LACKS_DEPRECATED_MACROS to make it possible to build without
          all the emulated exception macros. Will make sure people can't use them
          anymore in core code without noticing that

        * ace/Global_Macros.h:
          Just define ACE_THROW_SPEC again as about a week ago, we need a fuzz check
          to make sure people don't use this anymore in TAO

        * ace/Reactor.h:
          Layout change

        * tests/Thread_Manager_Test.cpp:
          Layout change to debug message

Mon Feb 12 14:35:25 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/doxygen-convert-h.pl:

          Allow filenames or directories.  If a directory is passed, it is
          recursively searched for any file.

Mon Feb 12 13:57:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/*.doxygen:
          Removed ACE_THROW_SPEC

Sat Feb 10 23:13:06 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Svc_Conf_Lexer.cpp (ace_yy_buffer_state): Disable VC8 warning
          C4351 (input_ elements will be default-initialized) for this
          block. The new behavior is good and desireable, so the warning
          noise can be silenced in this case.

        * ace/Timer_Hash_T.cpp (reschedule, schedule_i): When calculating the
          hash value, truncate the seconds value down to size_t range because
          the modulo value used to hash is a size_t. Avoids a compile warning
          about losing data when time_t is larger than size_t.

Fri Feb  9 21:40:02 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/High_Res_Timer.inl:
        * ace/High_Res_Timer.cpp:

          Removed ACE_WIN32 specific code in ACE_High_Res_Timer to reflect
          the change in the default value of ACE_HR_SCALE_CONVERSION.
          Removed uses of ACE_HRTIME_CONVERSION and use
          ACE_Utils::Truncate instead.

        * ace/OS_NS_time.h:

          Changed the check for defining ACE_HRTIME_CONVERSION and
          ACE_HRTIME_TO_U64 from ACE_HRTIME_T_IS_BASIC_TYPE to
          ACE_LACKS_UNSIGNEDLONGLONG_T.

        * tests/High_Res_Timer_Test.cpp:

          Updated the test to use ACE_Utils::Truncate instead of
          static_cast which caused 0 to be output when time_t is 64-bit.

Fri Feb  9 12:19:57 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/rm_exception_macros.pl:

          Fixed a bug where the end of the ACE_THROW_SPEC would not be
          recognized.

Thu Feb  8 23:09:59 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Logger/Acceptor-server/server_loggerd.cpp (handle_input):
        * examples/Logger/simple-server/Logging_Handler.cpp (handle_input):
        * examples/Logger/client/logging_app.cpp (ACE_TMAIN): Fixed these
          programs to use the proper (new) formatting for ACE_Log_Record.
          Thanks to Mouna Seri <seri at crhc dot uiuc dot edu> for
          reporting this.

Thu Feb  8 19:40:30 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Makefile.am:
        * ace/ace.mpc:
        * ace/Time_Request_Reply.{h cpp}:
        * netsvcs/lib/Makefile.am:
        * netsvcs/lib/lib.mpc:
        * netsvcs/lib/Time_Request_Reply.{h cpp}: Moved Time_Request_Reply
          from ace to netsvcs; it's only used from netsvcs and is only useful
          as an example of some ACE usage. Real time synch needs should be
          met using NTP.

        * ace/Name_Request_Reply.{h cpp}: Changed the sec_timeout_ transfer
          member from ACE_UINT32 to ACE_UINT64 to accomodate 64-bit time_t.

        * netsvcs/lib/TS_Clerk_Handler.h:
        * netsvcs/lib/TS_Server_Handler.h: Time_Request_Reply.h now is included
          from netsvcs/lib, not ace.

        * netsvcs/lib/Time_Request_Reply.{h cpp}: Changed the time-passing
          API arguments in the constructor and time() methods from ACE_UINT32
          to time_t. The on-wire protocol buffer fields that carry seconds
          values between clerk and server were changed from ACE_UINT32 to
          ACE_UINT64 to accomodate 64-bit time_t values.

        * NEWS: Explained the user-visible ramifications of these changes.

Thu Feb  8 09:23:50 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/MMAP_Memory_Pool.cpp:
          Removed empty else statement.

        * include/makeinclude/platform_linux.GNU:
          Fixed TCL/TK settings

Thu Feb  8 08:03:57 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/config-openbsd.h:
          Removed ACE_LACKS_CLEARERR and added ACE_HAS_3_PARAM_READDIR_R.

Wed Feb  7 23:04:49 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * bin/tao_other_tests.lst:

          Added two existing Notify Service examples into the autotest list.

Wed Feb  7 21:01:39 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Added a bit of info about building for National
          Instruments' LabVIEW RT which uses Pharlap ETS. In particular, if
          building for LabVIEW's Pharlap, add #define ACE_PHARLAP_LABVIEW_RT
          to your config.h file along with #include "ace/config-pharlap.h"
          to adjust for slight differences between stock Pharlap and
          LabVIEW RT's variant.

        * ace/config-pharlap.h: Pharlap doesn't supply InterlockedExchangeAdd
          and doesn't do SetFilePointerEx (needs ACE_LACKS_SETFILEPOINTEREX).

        * ace/OS_NS_Thread.cpp (sched_params): Don't attempt SetPriorityClass
          on Pharlap - it's not defined.

        * ace/OS_NS_Thread.inl (thr_getprio): For Pharlap ETS, use
          EtsGetTimeSlice() to determine the scheduling policy; if the time
          slice is anything other than 0, it's multitasking ACE_SCHED_OTHER.

        * ace/OS_NS_stdio.inl (cuserid): Pharlap doesn't go GetUserName() so
          make it ACE_NOTSUP_RETURN.
          (adjust_flock_params): Use SetFilePointer() instead of
          SetFilePointerEx(), even with 64 bit offsets, if
          ACE_LACKS_SETFILEPOINTEREX is set.

        * ace/OS_NS_unistd.inl (pwrite): For Windows platforms without
          overlapped I/O, don't rely on availability of SetFilePointerEx -
          platforms that have it also have overlapped I/O. In this case, use
          SetFilePointer with appropriate call differences for 32/64 bit
          file offsets.

        * ace/Pagefile_Memory_Pool.{h inl cpp}: Pharlap doesn't do this class.

        * ace/Configuration.{h cpp}:
        * ace/Registry.{h cpp}: The Windows registry is not available in
          Pharlap.

Wed Feb  7 14:44:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/rm_exception_macros.pl:

          Added the ability to remove the ACE_THROW_SPEC's completely.

Tue Feb  6 16:44:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Global_Macros.h:
          For the moment expand ACE_THROW_SPEC to nothing, we want to deprecate
          this in TAO and want to see the impact of this on the tests

Tue Feb  6 15:36:00 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Time_Value.inl: Remove the #if around #include "ace/Truncate.h"
          because ACE_Utils::Truncate is needed in a case that's not in a
          ACE_HAS_TIME_T_LONG_MISMATCH block.

Mon Feb  5 19:58:39 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Log_Record.cpp (operator>>): Use ACE_Utils::Truncate to truncate
          the received 64-bit time seconds to time_t.

Mon Feb  5 17:16:20 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-win32-msvc-8.h: Added a new setting for Windows VC8,
          ACE_HAS_TIME_T_LONG_MISMATCH, to capture the case that requires
          a replacement timeval def. See the following for details:
          Thu Feb  1 23:46:27 UTC 2007  Steve Huston  <shuston@riverace.com>
          This change isolates just the desktop VC8 compiler for the change,
          avoiding compilers that don't need it and/or can't deal with
          the code.

        * ace/Time_Value.{h inl}: Change code that uses a replacement timeval
          from ACE_WIN32 to ACE_HAS_TIME_T_LONG_MISMATCH.

Fri Feb  2 14:45:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Dynamic_Service_Base.cpp:
          Fixed compile error

Fri Feb  2 14:32:06 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:
          Modified default behavior (if no -a, -o, -t, -C options are given)
          so that the script looks for TAO in $TAO_ROOT as well as
          $ACE_ROOT/TAO and similarly for CIAO.  This change supports the peer
          style layout.

Fri Feb  2 14:08:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/rm_exception_macros.pl:
          Also zap ACE_THROW_RETURN from application code, that is also
          deprecated now

Fri Feb  2 12:03:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/TSS_T.cpp:
          Fixed merge error

Fri Feb  2 11:43:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * include/makeinclude/platform_hpux_aCC.GNU:
          Supress 3.xx warnings about non-return from functions
          (Anoyingly it doesn't seem to think that a throw
          terminates the execution flow of a function.)

Fri Feb  2 10:47:55 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/Proactor.cpp:
          Layout change.

        * ace/config-lynxos.h:
          Enabled POSIX_SIG_PROACTOR and made some cleanups.

        * ace/os_include/net/os_if.h:
          Removed LynxOS specific include.

        * tests/Proactor_Test.cpp:
        * tests/Proactor_Test_IPV6.cpp:
          Enabled these tests again even if ACE_HAS_BROKEN_SIGEVENT_STRUCT
          is defined.

Fri Feb  2 10:31:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CORBA_macros.h:
          Removed workaround for ACE_THROW_RETURN for HP aCC compiler. This is
          only needed for the HP 3.x compiler and we can suppress just this
          warning. When this has been build on the scoreboard we will
          zap the usage of this macro.

        * ace/Dynamic_Service.cpp:
        * ace/Dynamic_Service_Base.cpp:
        * ace/Service_Config.{h,cpp}:
        * ace/Service_Gestalt.cpp:
        * ace/TSS_T.cpp:
          Layout changes

        * ace/Thread_Manager.cpp:
          Const improvement

Fri Feb  2 06:56:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/ACETAOCIAO.style:
          Configuration file for profactor (see www.profactor.co.uk), a
          code beautifier tool that we want to use to reformat the code
          in ACE/TAO/CIAO.

Fri Feb  2 06:48:40 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/POSIX_CB_Proactor.h:
        * ace/config-aix-5.x.h:
        * ace/config-freebsd.h:
        * ace/config-integritySCA.h:
        * ace/config-macosx-panther.h:
        * ace/config-macosx-tiger.h:
        * ace/config-macosx.h:
        * ace/config-rtems.h:
        * ace/config-sunos5.4-g++.h:
        * ace/config-sunos5.4-sunc++-4.x.h:
        * ace/config-sunos5.5.h:
        * ace/config-vxworks5.x.h:
        * ace/config-vxworks6.2.h:
        * ace/config-vxworks6.3.h:
        * ace/config-vxworks6.4.h:

          Removed unnecessary sigval_t typedef and feature test macro
          ACE_LACKS_SIGVAL_T

Thu Feb  1 23:46:27 UTC 2007  Steve Huston  <shuston@riverace.com>

        * NEWS: Note change to ACE_Log_Record constructor.

        * ace/Log_Record.h (constructor): The "long time_stamp" argument was
          changed from long to time_t to correspond with what's expected.

        * ace/Log_Record.{h inl cpp}: The secs_ value was changed from
          ACE_UINT32 to time_t and is handled as a ACE_CDR::LongLong in the
          CDR insertion and extraction operators. The encode() and decode()
          methods are deprecated and will be removed in a future version of
          ACE.

        * ace/Message_Block.cpp (priority_status): Cast sec() value to
          suseconds_t size to avoid truncation warnings.

        * ace/Time_Value.{h inl cpp}: Use a private struct to manage time
          internally for Windows since Windows' struct timeval uses long
          values internally instead of the standard time_t/suseconds_t
          that the class API uses (and POSIX uses in timeval). When a
          real OS-defined timeval is needed, build it on the fly for Windows.

        * tests/High_Res_Timer_Test.cpp: When logging ACE_Time_Value-obtained
          sec/usec values, truncate them down to u_int size. Avoids passing
          64-bit values to ACE_Log_Msg when only 32 bits will be taken from
          the arg vector for a %u format spec. Fixes crashing of this test
          on Win/VC8.

        * examples/APG/Naming/Temperature_Monitor.cpp:
        * examples/APG/Naming/Temperature_Monitor2.cpp: Treat time as an int
          instead of a time_t; makes the logic easier even though it'll break
          sometime in 2038.

        * examples/ASX/UPIPE_Event_Server/event_server.cpp: Unify use of time_t
          to hold time values from ACE_OS::time().

        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp: When measuring messages
          per second, truncate seconds down to a 'long' to avoid truncation
          warnings at compile time from converting to double.

        * examples/Reactor/Misc/notification.cpp (svc): Initialize an
          ACE_Time_Value with secs / 2 instead of getting the seconds,
          multiplying into usecs, then dividing by 2. Avoids data truncation
          issues.

        * examples/Reactor/Multicast/Log_Wrapper.cpp (log_message): Cast
          result of time() to long to insert in the multicast buffer. Avoids
          truncation warning. Will stop recording a legit result sometime in
          2038 but the receiver isn't looking at the time field.

        * apps/gperf/src/Gen_Perf.cpp:
        * ASNMP/tests/test_config.h (randomize):
        * examples/Reactor/WFMO_Reactor/Multithreading.cpp:
        * protocols/ace/RMCast/Link.cpp:
        * protocols/ace/RMCast/Simulator.cpp:
        * protocols/examples/TMCast/Member/member.cpp:
        * tests/Auto_Event_Test.cpp:
        * tests/Handle_Set_Test.cpp:
        * tests/Recursive_Mutex_Test.cpp:
        * tests/Semaphore_Test.cpp:
        * tests/Thread_Mutex_Test.cpp:
        * tests/Timer_Queue_Test.cpp: Cast time_t to u_int for use as an
          ACE_OS::srand() seed - we just want some bits, not to fit it back in
          range with ACE_Utils::Truncate.

Thu Feb  1 11:21:32 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/POSIX_CB_Proactor.h:
        * ace/POSIX_CB_Proactor.cpp:
        * ace/Proactor.cpp:
        * ace/config-freebsd.h:
        * ace/config-lynxos.h:

          Introduced a new feature test macro ACE_HAS_BROKEN_SIGEVENT_STRUCT
          to make POSIX_CB_Proactor compile on FreeBSD 7.0-CURRENT.

        * tests/Proactor_Test.cpp:
        * tests/Proactor_Test_IPV6.cpp:

          Modified due to changes above.

Thu Feb  1 08:05:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Message_Queue.{h,cpp,inl}:
          Fixed compile errors in the NT Message Queue when build without
          threading under windows

        * ace/OS_NS_Thread.cpp:
          Layout changes

Wed Jan 31 23:06:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * ace/config-qnx-rtp-62x.h:

          Replaced ACE_LACKS_CUSERID with ACE_HAS_ALT_CUSERID to get the ACE
          library to provide us with a cuserid() function.

        * ASNMP/asnmp/asn1.cpp:
        * apps/drwho/global.h:
        * examples/IPC_SAP/SOCK_SAP/C-inclient.cpp:
        * examples/IPC_SAP/SOCK_SAP/C-inserver.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inserver.cpp:
        * examples/Logger/Acceptor-server/server_loggerd.cpp:
        * examples/Logger/client/logging_app.cpp:
        * examples/Logger/simple-server/Logging_Handler.cpp:
        * examples/Reactor/Multicast/Log_Wrapper.cpp:
        * examples/Reactor/Multicast/server.cpp:
        * netsvcs/lib/Name_Handler.cpp:

          Replaced htonl, htons, ntohl, and ntohs with the appropriate
          ACE_XTOYZ macro (ACE_HTONL, for example).  QNX doesn't have htonl and
          friends without adding extra #includes.

Wed Jan 31 19:03:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Basic_Types.h:

          Added constants ACE_FLT_MIN and ACE_DBL_MIN to provide consistency
          with ACE_FLT_MAX AND ACE_DBL_MAX.

        * ace/CDR_Base.h:
        * ace/CDR_Base.cpp:

          Enhanced the ACE_CDR::LongDouble class which is used on platforms
          where the native long double is not 16 bytes.

          Provided operators to support multiplication, division, addition
          and subtraction as well as conversion to the native long double.

          An assign() method is also provided to set the value of the
          ACE_CDR::LongDouble.  Since this class will be stored in a union
          (if used as an IDL type), it can not have a non-trivial constructor
          or assignment operator.  The existing
          ACE_CDR_LONG_DOUBLE_INITIALIZER macro is used to initialize the
          LongDouble and a new macro, ACE_CDR_LONG_DOUBLE_ASSIGNMENT, is
          used to assign to the LongDouble in a portable fashion.

        * bin/tao_orb_tests.lst:

          Added the new TAO LongDouble test.

Wed Jan 31 17:30:46 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-11.00.h:
        * include/makeinclude/platform_hpux_aCC.GNU: If stdcpplib=0 is
          selected at build time, explicitly set -AP compile option to use
          old C++ libraries and no std namespace. Also set
          ACE_LACKS_NUMERIC_LIMITS when -AP is set - there is a numeric_limits
          but not in std. Note that ACE_Array_Map won't build with stdcpplib=0
          but pre-ACE-5.5 legacy code will still build.

          Also removed the HP-UX 10.x remnants and pre-3.0 aC++ support
          from platform_hpux_aCC.GNU. Could probably safely remove more old
          compiler support (anything older than 3.56 probably) but I played
          it a little conservative for now.

Wed Jan 31 17:22:11 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * protocols/examples/examples.mwc:

          Removed the implicit usage.  It is not necessary since each
          example has a .mpc file.

        * protocols/examples/example_base.mpb:

          Removed this file.  It was not needed.

Wed Jan 31 16:55:23 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * ace/config-qnx-rtp-62x.h:

          Removed #define ACE_HAS_INLINED_OSCALLS as it seems to be both rarely
          used (only oddball platforms like unixware and other QNX versions
          have it) and also incompatible with inline=0 builds.
          Also added new config macros ACE_LACKS_STRPTIME (June 2006) and
          ACE_HAS_3_PARAM_READDIR_R (December 2006).
          These modifications have been tested with QNX 6.3 but from the docs
          on the QNX web site I believe they apply to QNX 6.2 as well.

Wed Jan 31 15:44:54 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/POSIX_CB_Proactor.h:
        * ace/POSIX_CB_Proactor.cpp:
          Use sigval (which is SUS defined) instead of sigval_t. If this
          change doesn't break on any platform I'll remove unnecessary
          typedef and related stuff.

Wed Jan 31 13:31:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Removed obsolete checks for environment macros

        * ace/Recycable.h:
          Removed empty brief doxygen tag

        * ace/OS_NS_unistd.inl:
        * ace/config-rtems.h:
          Renamed ACE_HAS_BROKEN_SZ_PAGESIZE to ACE_HAS_NOTSUP_SC_PAGESIZE

Wed Jan 31 13:21:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_hpux_gcc.GNU:
          Added improvement for GCC on HPUX IA64

Wed Jan 31 10:17:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_hpux_gcc.GNU:
          Improved support for GCC on HPUX IA64

Wed Jan 31 07:50:44 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/OS_NS_Thread.cpp (ACE_OS::sched_params):  Check if the
          ACE_id_t id that is being passed in is equal to ACE_SELF.  If
          so, pass ::GetCurrentProcessId() to ::OpenProcess() instead of
          id.  ACE_SELF is defined to be 0 on ACE_WIN32; process id 0 is
          the zero-page process, and we certainly don't want to attempt to
          set it to REALTIME_PRIORITY_CLASS :-)

Wed Jan 31 03:25:51 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/High_Res_Timer.h:

          Removed the special case default definition of
          ACE_HR_SCALE_CONVERSION to ACE_ONE_SECOND_IN_MSECS on Windows;
          added a #ifndef around the default definition in case the user
          wishes to change it.  This was done to prevent useless values
          like 0 showing up in calculations using ACE_Basic_Stats when the
          time intervals are of the order of a few microseconds.  Most of
          the current machines have a QueryPerformanceCounter()
          implementation that returns a value of atleast 3 MHz.  So it
          should be completely safe to use the definition of
          ACE_ONE_SECOND_IN_USECS as the default value for
          ACE_HR_SCALE_CONVERSION on contemporary x86 machines running
          Windows.

        * ace/Message_Block.inl:
        * ace/Message_Block.cpp:

          Moved the definition of
          ACE_Dynamic_Message_Strategy::priority_status() from
          Message_Block.inl to Message_Block.cpp.  It was a big function
          and it currently has code that causes a warning with VC8 on
          Windows.

Tue Jan 30 19:21:50 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Module.h:

          Removed the trailing comma from the last element of the enum.

Tue Jan 30 16:26:43 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/sets-manager.py:

          Modified to pin the version of MPC at the time of branching/tagging
          under modules/ACE/MPC.  Note:  This does not branch OR tag MPC,
          it simply causes the branch/tag to check out a specific
          revision of MPC.

Tue Jan 30 13:51:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Module.h:
        * ace/Module.cpp:

          There was no way to distinguish between flags not being set and
          flags to indicate that tasks should not be deleted.  I have
          changed the M_DELETE_NONE enum value to 4 and added a new enum
          value for use in flag initialization.  With this change, the
          close() method can determine if it needs to use the flags passed
          in or the internal flags.  This fixes Bugzilla #2497.

Tue Jan 30 11:35:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Countdown_Time.{h,cpp}:
          Readded destructor, missed that it updates the max_wait_time
          passed to the constructor

Tue Jan 30 10:44:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/wrapper_macros.GNU:
          When pipes is set to 1, also add -pipe to the CCFLAGS

        * include/makeinclude/platform_rtems.x_g++.GNU:
          Set pipes to 1, set DCCFLAGS

Tue Jan 30 10:14:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Unbounded_Set.cpp:
          Initialise pointer with 0.

        * ace/OS_NS_unistd.inl (getpagesize):
        * ace/config-rtems.h:
          RTEMS does define _SC_PAGESIZE, but using sysconf with _SC_PAGESIZE
          results in -1. Added a new define ACE_HAS_BROKEN_SC_PAGESIZE to be
          able to disable the usage of sysconf (_SC_PAGESIZE) for rtems 4.6,
          the ::getpagesize() function returns a correct value.

Tue Jan 30 09:46:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OS_Test.cpp:
          Added a test for ACE_OS::getpagesize(), it should return a value
          bigger then 0 else the memory pools don't work

Tue Jan 30 00:25:00 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-11.00.h: If the user sets RWSTD_NO_NAMESPACE to
          keep a lot of the standard C++ library out of the std namespace,
          avoid setting ACE_USES_STD_NAMESPACE_FOR_STDCPP_LIB, and also
          hoist everything else from std into the global namespace. This is
          necessary because RW wasn't consistent with using their internal
          _RWSTD_NO_NAMESPACE and the user-settable RWSTD_NO_NAMESPACE and
          some things end up in std and some not; so get the ones that ended
          up in std out to global with the rest of them.

Mon Jan 29 19:48:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Based_Pointer_Repository.cpp:
        * ace/Basic_Stats.cpp:
        * ace/Codeset_Registry.cpp:
        * ace/FILE.cpp:
        * ace/FILE_Addr.cpp:
          Layout improvements

Mon Jan 29 19:07:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/ciao.doxygen:
        * etc/ciao_config_handlers.doxygen:
        * etc/ciao_DAnCE.doxygen:
          Removed CIAO_NAMESPACE

Mon Jan 29 18:58:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Argv_Type_Converter.cpp:
        * ace/Asynch_Pseudo_Task.cpp:
        * ace/Cached_Connect_Strategy_T.cpp:
          Layout changes, result of experimenting with a code
          beautifier

        * ace/config-rtems.h:
          Improved rtems port, added support for building with
          threads=0

        * ace/config-sco-5.0.0.h:
          Removed commented out define

        * ace/config-vxworks6.4.h:
          putenv fails with VxWorks 6.4 with a pentium target

        * ace/Countdown_Time.{h,cpp}:
          Use bool, removed return value from most methods, it was
          meaningless, removed destructor, not needed to update members
          in a destructor

        * ace/Dev_Poll_Reactor.h:
          Export Token_Guard, fixes bugzilla 2786, thanks to
          <sailzeng at tencent dot com> for reporting this

        * OS_NS_pwd.inl (getpwnam_r):
          Initialize pointer with 0, simplified this a little

        * docs/ACE-guidelines.html:
          Updated example with doxygen style of documentation

Sun Jan 28 19:59:14 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ACE version 5.5.6 released.

Fri Jan 26 10:03:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Cached_Connect_Strategy_T.cpp
        * ace/Event_Handler_T.inl
        * ace/Future.cpp
        * ace/Future_Set.cpp
        * examples/C++NPv2/Reactor_Logging_Server_T.cpp
          Use typename

Thu Jan 25 19:59:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          The include of rules.cia.GNU must come before the include of
          rules.tao.GNU in order for CIAO libraries to have the correct
          version numbers.

        * bin/auto_run_tests.pl:

          Fixed the -l option to use the correct variable name and corrected
          a bug where the script changed to the wrong directory if the -l
          option was used.

        * bin/clean_sems.sh:

          Support the ngvipc command to clean up semaphores on MacOS X.

        * bin/rm_exception_macros.pl:

          A new script to assist users in the removal of all ACE related
          exception macros.

Thu Jan 25 19:24:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/*.doxygen:
          Removed ACE_ENV macros

Thu Jan 25 11:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Stream.h:
          Fixed typo, fixes part of bugzilla bug 2780, thanks to
          <sailzeng at tencent dot com> for reporting this.

        * docs/Download.html:
          Enabled links for source only packages, they are available
          from x.5.5

Thu Jan 25 07:50:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Containers_T.cpp:
          Use typename

Wed Jan 24 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Acceptor.h:
        * ace/Cached_Connect_Strategy_T.h:
        * ace/Connector.h:
          Use typename instead of ACE_TYPENAME which is now
          deprecated

        * ace/Codeset_IBM1047.cpp:
          Added missing includes

        * ace/config-aix-5.x.h:
        * ace/config-borland-common.h:
        * ace/config-cxx-common.h:
        * ace/config-g++-common.h:
        * ace/config-hpux-11.00.h:
        * ace/config-icc-common.h:
        * ace/config-irix6.x-sgic++.h:
        * ace/config-linux-common.h:
        * ace/config-lynxos.h:
        * ace/config-netbsd.h:
        * ace/config-suncc-common.h:
        * ace/config-sunos5.5.h:
        * ace/config-sunos5.6.h:
        * ace/config-tandem-nsk-mips-v2.h:
        * ace/config-tandem-nsk-mips-v3.h:
        * ace/config-unixware-7.1.0.udk.h:
        * ace/config-win32-dmc.h:
        * ace/config-win32-ghs.h:
        * ace/config-win32-interix.h:
        * ace/config-win32-msvc-7.h:
        * ace/config-win32-msvc-8.h:
        * ace/config-win32-visualage.h:
          Removed ACE_HAS_TYPENAME_KEYWORD, we do require that each
          compiler supports typename

        * ace/config-cygwin32.h:
        * ace/config-hpux-11.00.h:
        * ace/config-lynxos.h:
        * ace/config-macosx-panther.h:
        * ace/config-macosx-tiger.h:
        * ace/config-macosx.h:
        * ace/config-netbsd.h:
        * ace/config-openvms.h:
        * ace/config-rtems.h:
        * ace/config-sunos5.5.h:
        * ace/config-tandem-nsk-mips-v3.h:
        * ace/config-tru64.h:
          Removed ACE_HAS_MEMCHR

        * ace/config-doxygen.h:
          Enabled COIOP and Transport Current

        * ace/config-macros.h:
          Deprecated ACE_TYPENAME, users can still use it, but in some builds
          on the daily scoreboard it now can't be used anymore

        * ace/config-mvs.h:
          Improved MVS support

        * ace/Global_Macros.h:
        * ace/Malloc_T.h:
        * ace/Map_T.h:
        * ace/Strategies_T.h:
          Use typename

        * ace/Log_Msg.cpp:
        * ace/os_include/sys/os_types.h:
        * ace/Task.cpp:
          Added support for MVS

        * ace/OS_NS_string.{h,cpp,inl}:
          Replaced ACE_HAS_MEMCHR with ACE_LACKS_MEMCHR, this way a platform that
          lacks this method has to set an explicit define, maybe it now shows
          that all platforms have this method and we don't need an emulation
          anymore. Also removed several emulations that are not needed anymore

        * ace/OS_NS_Thread.inl:
          Layout changes

        * ace/OS_NS_wchar.{h,cpp}:
          Changed second argument of wcschr_emulation to wchar_t, that way we don't
          need a cast anymore

        * ace/Rtems_init.c:
          Improved this file

        * ace/Sock_Connect.cpp:
          Initialise some pointers with 0

        * bin/cvslog:
          Removed, not needed anymore

        * bin/fuzz.pl:
          Removed checks for emulated exception macros

        * examples/Export/run_test.pl:
          Use ACE_ROOT

        * examples/Misc/test_read_buffer.cpp:
          Initialise pointer with 0

        * include/makeinclude/platform_mvs.GNU:
          Improved support

        * netsvcs/servers/servers.mpc:
          Simplified

        * performance-tests/UDP/udp_test.cpp:
        * tests/Cached_Allocator_Test.cpp:
        * tests/Env_Value_Test.cpp:
        * tests/Handle_Set_Test.cpp:
          Removed ACE_LACKS_FLOATING_POINT check

        * tests/Thread_Creation_Threshold_Test.cpp:
          Added missing \n

Mon Jan 22 23:14:56 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ACE version 5.5.5 released.


Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
