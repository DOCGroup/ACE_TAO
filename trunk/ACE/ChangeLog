Wed Apr 25 09:44:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_other_tests.lst:
          Added Bug_2908_Regression

Wed Apr 25 08:45:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * ace/config-lynxos.h:
          LynxOS4.2 does not seem to have thread process scoping.

Wed Apr 25 08:16:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2912_Regression_Test.cpp:
          New regression for bug 2912. Thanks to Paul Daugherty
          <paul at nxicom dot com> for reporting this issue and delivering
          this regression test

        * ace/SSL/SSL_Asynch_Stream.cpp (do_SSL_read):
          Added ERR_clear_error before doing a SSL_read

        * tests/run_test.lst:
        * tests/tests.mpc:
          Added Bug_2912_Regression

Wed Apr 25 07:09:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_2356_Regression

Wed Apr 25 07:00:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Global_Macros.h:
          Also with msvc9 expand ACE_THROW_SPEC to throw (...)

        * ace/CDR_Stream.cpp (clone_from):
          Also copy the char and wchar translators

        * ace/UUID.cpp:
          Layout change

Tue Apr 24 13:37:42 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/SOCK_Dgram_Test.cpp: Add missing #include "ace/OS_NS_string.h"

Tue Apr 24 11:46:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Sock_Connect.cpp (get_ip_interfaces_aix):
          Fixed resource leak. Thanks to Werner Buchert
          <w dot buchert at medat dot de> for reporting this

Tue Apr 24 10:20:58 UTC 2007  Olli Savia  <ops@iki.fi>

        * include/makeinclude/platform_lynxos.GNU:
          Fixed run-time linking error with GCC 3.2.2.

Tue Apr 24 09:10:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/run_test.lst:
          Enabled Dirent test again for VxWorks RTP

        * ace/Addr.cpp:
          Initialise members in the constructor directly instead of
          calling a seperate method

        * ace/Arg_Shifter.cpp:
          Fixed typo in comment

Mon Apr 23 15:05:31 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/SOCK_Dgram_Test.cpp: Added additional tests to verify data
          and peer addresses from recv(). Also fixed errors in use of %p.

Mon Apr 23 13:39:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Base.inl:
          Fixed copy/paste bug in swap_4 and swap_8

Mon Apr 23 13:09:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Task.cpp:
          Fixed compile error with msvc9 beta

Mon Apr 23 12:19:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc.h:
        * ace/config-win32-msvc-9.h:
          Initial files for msvc9. Microsoft released a public beta called
          Orcas

Fri Apr 20 18:20:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc-7.h:
          msvc7 doesn't has intrin.h

Fri Apr 20 14:31:26 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/MakeProjectCreator/config/htbp.mpb:

          Added a 'requires' for ace_uuid.

        * examples/APG/Naming/naming.mpc:

          Added a 'requires' for ace_other (ACE naming services are within the
          ace_other MPC feature) to each project.

        * examples/Naming/Naming.mpc:

          Added a 'requires' for ace_other to each project.

        * performance-tests/Misc/Misc.mpc:

          Added a 'requires' for ace_other to the Misc_test_naming project.

        * bin/tao_orb_tests.lst:

          Only run Bug_2768_Regression when CORBA messaging is enabled.

Fri Apr 20 12:10:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc-7.h:
        * ace/config-win32-msvc-8.h:
        * ace/config-win32-msvc.h:
          Intel C++ 9.0 doesn't have the interlocked functions

Fri Apr 20 11:44:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_1330_Regression

Fri Apr 20 11:35:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Base.inl:
          Added ACE_HAS_BSWAP_16, ACE_HAS_BSWAP_32, and ACE_HAS_BSWAP_64.
          When one of the defines is set, we include os_byteswap.h and
          then use bswap_16, bswap_32, and bswap_64.

        * ace/config-linux-common.h:
          Added ACE_HAS_BYTESWAP_H, ACE_HAS_BSWAP_16, ACE_HAS_BSWAP_32, and
          ACE_HAS_BSWAP_64. This fixes bugzilla bug 2901.

Fri Apr 20 08:29:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/PerlACE/ProcessVX_Unix.pm:
          Updated to also run automatic regression tests with VxWorks 6.x
          in kernel mode.

Thu Apr 19 18:24:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_byteswap.h:
          New wrapper file for byteswap.h

Thu Apr 19 16:47:46 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/tao_orb_tests.lst:

          Use the -boost option for TAO/tests/Sequence_Unit_Tests when Config
          BOOST is present.

Thu Apr 19 14:25:39 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/OS_NS_time.h (ace_timezone): Changed ACE_HAS_WIN32 to
          ACE_WIN32 to fix a bug on Windows. Thanks to Jan Kalin <jan dot
          kalin at zag dot si> for this fix.

Thu Apr 19 14:10:18 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-doxygen.h: Turn on ACE_Dev_Poll_Reactor doc generation
          using ACE_HAS_DEV_POLL instead of ACE_HAS_EVENT_POLL. The latter
          will be automatatically turned off on systems w/o epoll and the
          docs get lost.

Thu Apr 19 13:59:06 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Obstack_T.cpp:

          Because the ACE_ALLOCATOR macro contains a return, head_ and curr_
          could technically be used without being initialized (however
          unlikely).  Initialize them to zero in the initializer list.

Thu Apr 19 13:29:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc.h:
          Don't set ACE_HAS_INTRINSIC_INTERLOCKED on WinCE

Thu Apr 19 11:01:49 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/SSL/SSL_SOCK_Stream.cpp:
          Added static_cast to silence compiler warning on LynxOS.

        * include/makeinclude/platform_lynxos.GNU:
          Added PLATFORM_X11_LIBS to PLATFORM_TK_LIBS to fix
          linking error on LynxOS.

Thu Apr 19 05:30:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_intrin.h:
          Don't declare the _Interlocked methods with Intel C++ 9.0

Wed Apr 18 14:11:28 UTC 2007  Olli Savia  <ops@iki.fi>

        * include/makeinclude/platform_lynxos.GNU:
          LynxOS's mkdir needs -f option to prevent it returning
          error if directory already exists.

Wed Apr 18 12:11:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/ace_foxreactor.mpb:
          Added new base project

Wed Apr 18 11:51:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          The DIOP test can run in a static build

Wed Apr 18 11:01:56 UTC 2007 Martin Corino  <mcorino@remedy.nl>

        * include/makeinclude/rules.lib.GNU:
          Change to enable building static libs on OpenVMS.

Wed Apr 18 10:52:00 UTC 2007  Ian Roberts  <ir@prismtech.com>

        * bin/tao_orb_tests.lst:
          Added Bug_2791_Regression.

Wed Apr 18 10:42:39 UTC 2007  Olli Savia  <ops@iki.fi>

        * include/makeinclude/platform_lynxos.GNU:
          Updated TCL/TK settings.

        * tests/TkReactor_Test.cpp:
          Fixed compile error on LynxOS.

Wed Apr 18 10:17:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/ace_fox.mpb:
        * bin/MakeProjectCreator/config/global.features:
        * ace/ace_foxreactor.mpc:
        * ace/FoxReactor/*:
        * include/makeinclude/platform_linux.GNU:
        * include/makeinclude/wrapper_macros.GNU:
          Added FoxReactor to integrate with the fox toolkit. Thanks to
          Dmitriy Nikitinskiy <nick at bel dot ru> for providing these
          files. This fixes bugzilla 1400

Wed Apr 18 09:45:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/vcl.mpb:
          Updated bds to bds4

Wed Apr 18 09:30:00 UTC 2007 Simon Massey  <sma@prismtech.com>

        * ace/SSL/SSL_Asynch_Stream.cpp:
        * ace/SSL/SSL_Context.cpp:

          Change variable name and comments so that compiler warnings
          don't trigger error indication on the scoreboard.

Wed Apr 18 09:29:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/QtReactor/QtReactor.{h,cpp}:
          Applied changes to work with Qt4. Thanks to Roland Sun
          <rolandsun at gmail dot com> for delivering the patches.
          This is part of bugzilla 2870. Also thanks to
          Ian Zagorskih <ianzag at megasignal dot com> for his report
          in bugzilla 2413.

Wed Apr 18 09:06:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc-8.h:
          WinCE doesn't have intrin.h

Tue Apr 17 22:11:11 UTC 2007  Steve Huston  <shuston@riverace.com>

        * netsvcs/lib/Server_Logging_Handler_T.cpp (parse_args): When calling
          ACE_LOG_MSG->open(), get the existing logging flags and pass them
          to open() in order to preserve any previously set flags, such as
          SYSLOG, etc. Thanks to Hubert Talbot <Hubert dot Talbot at criq
          dot qc dot ca> for this fix.

Tue Apr 17 14:36:00 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_orb_tests.lst:

          Neither 2804 nor 2844 will run in a minimum corba or corba e
          build.

Tue Apr 17 14:25:35 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/generate_compile_stats.sh:

          Don't error out if the destination directory doesn't exist yet, the
          script will attempt to create it before using it.

Tue Apr 17 12:11:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_2768_Regression

Tue Apr 17 11:32:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc-8.h:
        * ace/config-win32-msvc.h:
          Only msvc8 has intrin.h

Tue Apr 17 10:03:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Atomic_Op.inl:
          Added missing pragma intrinsic

Tue Apr 17 09:55:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-icc-common.h:
          Make use of the Intel C++ intrinsic interlocked functions on
          IA64 Linux. Intel support has promised Intel will deliver these
          functions in the near feature also for IA32/EM64T.

Tue Apr 17 09:41:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_intrin.h:
          Added ACE_HAS_IA64INTRIN_H and ACE_HAS_IA32INTRIN_H for supporting
          the Intel C++ intrinsic header files

Tue Apr 17 09:13:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_intrin.h:
          New wrapper file for intrin.h

        * ace/config-win32-msvc-7.h:
        * ace/config-win32-msvc-8.h:
        * ace/config-win32-msvc.h:
          Added ACE_HAS_INTRIN_H, moved some generic defines to the msvc.h
          file

        * ace/Atomic_Op.{h,inl}:
          Use the intrinsic Interlocked functions to increase the performance
          on Windows with the Microsoft compiler. See also
          http://msdn2.microsoft.com/en-us/library/f24ya7ct(VS.71).aspx.
          This fixes bugzilla bug 2891, thanks to Aleksandar Vukajlovic
          <vukajlo at finsoft dot co dot yu> for suggesting these changes.

Tue Apr 17 08:12:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/run_test.txt:
          Corrected variable that is used for VxWorks target

        * docs/ACE-FMM.html:
          Fixed html tag

Tue Apr 17 06:51:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CDR_File_Test.cpp:
        * tests/Log_Msg_Test.cpp:
          VxWorks 6.4 fixes the problem that we can't unlink in advance
          on a NFS share

        * tests/Svc_Handler_Test.cpp:
          Removed define for unlink in advance, not used

Mon Apr 16 23:00:16 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Timeprobe.h: Add #include "ace/config-lite.h" to pick up the
          config settings needed to do the right thing.

        * tests/Message_Block_Test.cpp: The text queued in the test's blocks
          are ACE_TCHAR, so don't try to change them into ACE_TCHAR for
          passing to ACE_OS::atoi() - just cast the char* to ACE_TCHAR*.
          Also, replaced ACE_ASSERTs with if/ACE_ERROR to allow the stuff to
          run on Release builds and not wipe out single-process systems on
          errors.

Mon Apr 16 17:56:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/generate_compile_stats.sh:

          Fixed usage statement to match actual argument parsing.
          Assume gcc is on the PATH instead of hard-coding /usr/bin/gcc.

Mon Apr 16 17:18:32 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * docs/svn/config:
        * docs/svn/svn-prefs.reg:

          Added README as a text file for the purposes of SVN end-of-line
          handling and keyword subsitution.

Mon Apr 16 15:41:39 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/config-sunos5.7.h:
        * ace/config-sunos5.8.h:

          Moved the setting of ACE_HAS_VFWPRINTF and
          ACE_SHM_OPEN_REQUIRES_ONE_SLASH to config-sunos5.7.h.  They are
          valid for this platform as well as SunOS 5.8.

Mon Apr 16 14:17:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/run_test.lst:
          Disable for the moment Dirent_Test on VxWorks RTP, it causes
          a crash of the target.

Mon Apr 16 13:01:00 UTC 2007 Simon Massey  <sma@prismtech.com>

        * ace/config-win32-msvc-7.h:
        * ace/config-win32-msvc-8.h:
        * ace/README:

          Add the new #define ACE_HAS_HEADER_ALLOCATED_CLASS_STATIC_CONST_INT_STOREAGE
          to the known offending platforms (Microsoft VC7 and VC8).

Mon Apr 16 11:01:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Log_Msg_Test.cpp:
          Made this test working for VxWorks 6.x kernel mode

        * tests/Handle_Set_Test.cpp:
        * tests/Priority_Reactor_Test.cpp:
        * tests/Process_Strategy_Test.cpp:
        * tests/Test_Output.cpp:
          Removed support for psos

        * tests/Barrier_Test.cpp:
          Fixed typo in comment

Mon Apr 16 08:41:56 UTC 2007 Martin Corino  <mcorino@remedy.nl>

        * tests/run_test.lst:
        * bin/tao_orb_tests.lst:

          (Temporary) exclusion of some tests which tend to cause too
          much trouble (spontaneous system reboots) on OpenVMS IA64
          for the moment. The cause seems to be some vulnerabilities in
          the OpenVMS IA64 threading library and that will take time
          to be resolved.

Sun Apr 15 06:04:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added bug 2805 regression

Sun Apr 15 06:04:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added bug 2844 regression

Sat Apr 14 18:57:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added bug 2804 regression

Thu Apr 12 19:14:00 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_other_tests.lst:

          Added the Bug_1385_Regression test.

Thu Apr 12 19:05:56 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/doxygen-convert-h.pl:

          Fixed a typo in a variable name.  Using strict would have caught
          this.

Thu Apr 12 12:18:20 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/auto_run_tests.pl:

          Remove intermediate '.' directories when printing the test name to
          allow the scoreboard matrix to read test output correctly.

Thu Apr 12 12:03:29 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Test_Output.cpp:

          Fixed the unused variable warning.

Thu Apr 12 11:50:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * protocols/ace/TMCast/GroupFwd.hpp:
          Don't use export with a forward declaration

Wed Apr 11 18:16:29 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ACEXML/apps/svcconf/Svcconf_Handler.cpp:
        * ACEXML/common/SAXExceptions.cpp:
        * ACEXML/common/StrCharStream.cpp:

          Fixed memory leaks.

        * ace/DLL.cpp:

          Delete dll_name_ before assigning to it.

        * ace/Select_Reactor_T.cpp:
        * ace/TP_Reactor.cpp:

          Check the timer_queue_ pointer before using it.

        * tests/Service_Config_DLL.cpp:

          Changed from ACE::strnew to ACE_OS::strdup to be consistent with
          what allocation method is expected (even though this code
          shouldn't be called).

        * tests/Test_Output.cpp:

          Always retain ownership of the output_file_ pointer (instead of
          giving it to ACE_Log_Msg).  This removes a memory leak (in certain
          situations) and simplifies things a bit.

Wed Apr 11 17:53:07 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Process_Manager.{h cpp} (terminate): The terminate(pid_t) method
          no longer removes the process from the process descriptor table;
          the pid remains available to call wait() on. This allows the
          Process_Manager_Spawn.cpp example from APG page 227 to work as
          expected. Thanks to Zhenghao Shi <Zhenghao dot Shi at alcatel dot
          com> for reporting this issue.

          Also, changed the ACE_Process_Descriptor class to be a struct
          (Process_Descriptor) inside ACE_Process_Manager. It's only used
          internally to that class.

          Also fixed the Doxygenization of ACE_Process_Manager quite a bit.

        * tests/Process_Manager_Test.cpp: Added a test to verify that
          ACE_Process_Manager::terminate() allows the process to wait()ed for.

        * THANKS: Added Zhenghao Shi to the Hall of Fame.

Wed Apr 11 14:02:37 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CORBA_macros.h:
          Added nothrow variant of ACE_NEW_THROW_EX. This fixes bugzilla
          bug 2889. With Borland C++ this resulted in a slightly smaller
          footprint

Wed Apr 11 12:33:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/OS_NS_sys_stat.inl:

          Added a static_cast to avoid a warning from gcc.

        * ace/SOCK_Dgram.cpp:

          Fixed my RTEMS detection for checking to see if iov_len is less
          than zero.

Wed Apr 11 11:37:42 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Reactor_Notify_Test.cpp:
        * tests/Time_Value_Test.cpp:

          Added static_cast and changed types to time_t to avoid warnings
          from gcc.

Wed Apr 11 10:57:07 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-g++-common.h:
          Improved gcc 4 visibility support, thanks to Max Khon
          <mkhon at swsoft dot com> for delivering the patch. This fixes
          bugzilla 2881

        * ace/Barrier.h:
          Doxygen improvements

        * ace/OS_NS_Thread.cpp:
          Use prefix increment/decrement

Tue Apr 10 20:27:07 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/Download.html: Updated the download page to clarify the
          status of autoconf.  Thanks to Eric Hughes <eh at narthex dot us>
          for clarifying this.

Tue Apr 10 17:20:46 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/CORBA_macros.h:  Reverted the change to exclude
          ACE_PRINT_EXCEPTION from being affected by
          ACE_LACKS_DEPRECATED_MACROS.

Sat Apr  7 12:17:45 UTC 2007 Phil Mesnier <mesnier_p@ociweb.com>

        * ace/Asynch_IO.cpp: fixed spelling error in include.

Fri Apr  6 19:48:20 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_Thread.inl (recursive_mutex_cond_unlock): Corrected for
          Windows Mobile 5, where the CRITICAL_SECTION LockCount member was
          changed from 0-base to 1-base.

Fri Apr  6 14:27:20 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Asynch_IO.h: Improved comments for ACE_Asynch_Read_Stream.

        * ace/Asynch_IO.cpp (read, write, cancel): If an operation is
          attempted on an object that hasn't yet been opened, refuse it
          with errno EFAULT. Thanks to Paul Daugherty <Paul at nextalk dot com>
          for reporting this.

Thu Apr  5 22:24:03 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/config-win32-msvc-8.h:  Removed the redundant define of
          ACE_HAS_NEW_NOTHROW.  Thanks to Ossama for pointing it out.

        * bin/ciao_tests.lst:  Added BasicSP to the list of tests that are
          run daily.

Thu Apr  5 15:48:12 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_other_tests.lst:

          Added the Bug_2561_Regression test.

Thu Apr  5 11:50:14 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/config/global.features:

          Set the link_codecfactory feature to zero.  This feature
          determines if the TAO_CodecFactory library is linked in if the TAO
          library is linked into an executable or dynamic library.

        * bin/tao_other_tests.lst:

          Disable a couple of performance tests that crash our QNX machine.

        * tests/run_test.lst:

          Disable the Sendfile_Test.  QNX doesn't support that interface.

Thu Apr  5 11:28:55 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Message_Queue_Test_Ex.cpp:

          Changed to use ACE_Auto_Basic_Ptr instead of auto_ptr.  Some
          implementations still don't have a reset() method.

Thu Apr  5 08:00:00 UTC 2007  Martin Corino <mcorino@remedy.nl>

        * bin/ace_tests.lst:

          Excluded RMCast tests for VxWorks.

Wed Apr  4 23:59:18 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/Test_Output.cpp (close): Don't delete output_file_ during
          close() - it prevents the output from being reset for another
          round of logging as is done with Object_Manager_Flipping_Test.
          The destructor will delete it (as the constructor allocated it)
          when the component framework cleanup runs at process rundown.

Wed Apr  4 22:01:35 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/CORBA_macros.h:  Restored  ACE_PRINT_EXCEPTION by removing
          it from being undefined if ACE_LACKS_DEPRECATED_MACROS is
          defined.

        * ace/config-win32-msvc-8.h: Define ACE_NEW_THROWS_EXCEPTIONS and
          ACE_HAS_NEW_NOTHROW for Visual C++ 8.0.

Wed Apr  4 19:06:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_other_tests.lst:

          Added the Bug_689_Regression test.

Wed Apr  4 16:32:03 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/Bug_1890_Regression_Test.cpp:
        * tests/Bug_2540_Regression_Test.cpp: Since these bugs are all about
          ACE_Select_Reactor, always run them on ACE_Select_Reactor. The
          tests rely on behavior that doesn't hold on ACE_WFMO_Reactor, so
          shouldn't be tried on simply the platform's default reactor.

Wed Apr  4 16:12:57 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_other_tests.lst:

          Added the Bug_1107_Regression test.

Wed Apr  4 11:57:48 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Log_Msg.cpp:

          When ACE::fini() is called, all of the exit hooks registered with
          the ACE_Object_Manager are called.  In single threaded mode, one
          of these is the cleanup adapter for the ACE_Log_Msg object
          allocated into a static pointer variable in
          ACE_Log_Msg::instance().

          Calling ACE::init() after ACE::fini() would not re-initialize the
          ACE_Log_Msg object and thus memory issues would arise as soon as
          it is used.

          I moved the static pointer variable to the file level and made a
          new cleanup adapter that would reset the static pointer variable
          when the ACE_Log_Msg object is deleted.  The next use of
          ACE_Log_Msg::instance() would then result in the allocation of a
          new ACE_Log_Msg object.

          This fixes Bug 2874.

Wed Apr  4 11:33:57 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/Env_Value_Test.cpp: Cast ACE_Env_Value to ACE_TCHAR to print
          its value.

Wed Apr  4 09:49:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * include/makeinclude/platform_lynxos.GNU:
          Minor warning elimination changes for ACE/TAO.

Tue Apr  3 22:29:41 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Default_Constants.h: Added ACE_DEFAULT_THREAD_STACKSIZE, which
          defaults to 0. This can be used to change the default stack size
          argument to ACE_OS::thr_create(). Useful when a platform's default
          stack size is not appropriate for an ACE application.

        * ace/OS_NS_Thread.{h cpp}:
        * ace/Thread.{h cpp}:
        * ace/Thread_Manager.{h cpp}: Changed the spawn[_n] stacksize default
          from 0 to ACE_DEFAULT_THREAD_STACKSIZE. Allows the above config
          setting to propagate through all thread-spawning methods.

        * ace/config-pharlap.h: Default ACE_DEFAULT_THREAD_STACKSIZE to 1MB.

        * ace/README: Added ACE_DEFAULT_THREAD_STACKSIZE.

        * tests/CDR_File_Test.cpp: Added ACE_HAS_PHARLAP to the condition in
          which the test file can't be pre-unlinked.

        * tests/Bug_2653_Regression_Test.cpp:
        * tests/CDR_File_Test.cpp:
        * tests/Env_Value_Test.cpp:
        * tests/MT_Reactor_Upcall_Test.cpp:
        * tests/Reactor_Dispatch_Order_Test.cpp:
        * tests/Reactor_Registration_Test.cpp:
          Replace ACE_ASSERTs with ACE_ERROR.

        * tests/Sendfile_Test.cpp: If client send fails, nothing will happen,
          so close the stream and quit.

        * tests/run_test.lst: Disabled unrunnable tests for Pharlap.

Tue Apr  3 18:14:07 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Service_Gestalt.h:

          Added the missing export for the ACE_Service_Type_Dynamic_Guard
          class.

Tue Apr  3 13:07:49 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_orb_tests.lst:

          Added the Bug_2734_Regression test.

Mon Apr  2 15:18:29 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Process.cpp: Add missing #include "ace/Auto_Ptr.h".
        * ace/Service_Config.cpp: Add missong #include "ace/Log_Msg.h".
          Thanks to Olof Granered <Olof dot Granered at mobitex dot com>
          for reporting these.

        * THANKS: Added Olof Granered to the Hall of Fame.

Mon Apr  2 15:11:24 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ACEXML/apps/svcconf/Svcconf.cpp:

          As part of the fixes for Bug 2735, we must set errno to EINVAL
          when a directive fails to parse.

Mon Apr  2 15:02:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Service_Object.cpp:

          Removed an unnecessary const_cast of the ACE_DLL data member in
          one of the constructors.

        * ace/Service_Config.h:

          Added an ACE_STATIC_SERVICE_DIRECTIVE similar to
          ACE_DYNAMIC_SERVICE_DIRECTIVE to ease the testing of processing
          single directives with the XML service configurator.

        * ACEXML/apps/svcconf/Svcconf_Handler.cpp:
        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.inl:
        * ace/Service_Gestalt.cpp:

          Fixed Bug 2677 by moving the ACE_Service_Type_Dynamic_Guard out of
          the Service_Gestalt.cpp and into the .h.  This guard is then used
          in ACEXML_Svcconf_Handler::endElement before loading a shared
          library which may insert an entity into the
          ACE_Service_Repository.  Upon unloading the shared library,
          objects will be destroyed in the proper order.  Thanks to Lothar
          Werzinger <lothar at tradescape dot biz> for reporting this.

        * bin/tao_orb_tests.lst:

          Added Bug_2677_Regression to the list of tests.

Fri Mar 30 14:51:19 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/svcconf-convert.pl:

          Only print out the output file if -verbose was used.

        * bin/tao_orb_tests.lst:

          Added the Bug_2735_Regression test.

Fri Mar 30 14:24:48 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Service_Gestalt.cpp:

          Added the word ERROR: on the three error messages that use
          LM_ERROR.  Always set the errno to EINVAL if processing a
          directive fails.  Also, reformatted some of the code.

Fri Mar 30 12:10:22 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Containers.{h,inl}:
          Changed the constructor of ACE_DLList_Node to accept a void* instead
          of void *&, no need for passing it by reference. Thanks to
          Wim van den Boogaard <wim dot van dot den dot boogaard at varianinc dot com>
          for reporting this.

        * ace/Containers_T.cpp:
          ACE_DLList<T>::insert_head/insert_tail, removed the workaround
          for the dereferencing warnings because the DLList_Node has been
          changed.

        * ace/Containers_T.h:
          Doxygen improvements

        * ace/Containers_T.cpp:
          Use prefix increment/decrement, initialize pointers with 0,
          simplified some methods, const improvements

        * ace/INET_Addr.cpp:
          Const improvement

Thu Mar 29 16:15:24 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/String_Base.h: Corrected comment.
        * ace/String_Base.{cpp inl}: Corrected calls to set() which specified
          'release' as 1/0 instead of true/false. Thanks to Jeff Parsons for
          pointing these out.

Thu Mar 29 15:46:19 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Misc/test_trace.cpp: Updated the documentation to
          explain various techniques for adding tracing to applications.
          Thanks to John McCabe <JGMCCABE at qinetiq dot com> and Steve
          Huston for clarifying the rules.

Thu Mar 29 12:15:22 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_2869_Regression

Thu Mar 29 11:23:22 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-doxygen.h:
          Added ACE_HAS_IP_MULTICAST

Thu Mar 29 09:11:22 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Base.inl:
          Corrected version check for Intel C++ 9.0

Wed Mar 28 15:34:49 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * examples/APG/Logging/Trace.h

          Removed usage of variadic macros, they are not really necessary
          here.

Wed Mar 28 10:45:22 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Event.{h,cpp}:
          Extende constructor with LPSECURITY_ATTRIBUTES sa argument that
          can be used to pass in the security attributes that are then
          passes to event_init. Also made the removed_ member a real bool.
          Thanks to Michael Graf <mg at leutek dot de> for proposing
          this change

Wed Mar 28 09:05:22 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Base.inl:
          Intel 9.0 doesn't deliver the intrinsic byte swapping operations.
          This has been checked with Intel, they confirm this issue but
          also indicate they will not fix this anymore for Intel 9.0,
          Intel 9.1 and 10.0 don't have this issue. So, disabled the
          intrinsic byte swapping operations when Intel 9.0 is used

Tue Mar 27 13:58:22 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_933_Regression

Mon Mar 26 20:46:34 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ASNMP/asnmp/asn1.cpp
        * examples/Threads/thread_specific.cpp

          Fixes for string aliasing warnings.

Mon Mar 26 15:56:19 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tests/Config_Test.cpp

          Workaround for strict aliasing warning from GCC.

Mon Mar 26 15:42:35 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tests/TSS_Test.cpp

          Workaround for strict aliasing warning from GCC.

Mon Mar 26 13:12:22 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
        * bin/tao_other_tests.lst:
          Moved DIOP test from other to orb tests

Sun Mar 25 23:22:22 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * contrib/utility/Utility/ExH/System/DescriptiveException.hpp
        * contrib/utility/Utility/ExH/System/DescriptiveException.ipp
        * contrib/utility/Utility/ExH/Compound.tpp
        * contrib/utility/Utility/ExH/Compound.hpp
        * contrib/utility/Utility/ExH/Logic/Exception.hpp
        * contrib/utility/Utility/ExH/Logic/DescriptiveException.hpp
        * contrib/utility/Utility/ExH/Logic/DescriptiveException.ipp
        * contrib/utility/Utility/ReferenceCounting/Interface.hpp
        * contrib/utility/Utility/ReferenceCounting/DefaultImpl.hpp

          An attempt to deal with copious warnings eminating from this
          in GCC CIDLC builds.

Fri Mar 23 12:40:32 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/CDR_Base.inl (swap_2, swap_4, swap_8):

          Take advantage of MSVC++ compiler intrinsic byte swapping
          functions to improve performance when demarshaling CDR streams
          sent by a host with a different byte ordering.

Fri Mar 23 15:48:42 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Handle_Gobbler.{h inl}: Removed left-over disabled code from
          Thu Mar 22 18:33:19 UTC 2007  Steve Huston  <shuston@riverace.com>

Fri Mar 23 15:36:48 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/DLL_Manager.cpp (close): After
          Thu Mar 22 18:33:19 UTC 2007  Steve Huston  <shuston@riverace.com>
          was closing the wrong handle value; fixed.

Fri Mar 23 15:19:18 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Stream.cpp:
          Fixed compile error when ACE_LACKS_CDR_ALIGNMENT is defined.
          Thanks to Aleksandar Vukajlovic <vukajlo at finsoft dot co dot yu>
          for reporting this

Fri Mar 23 13:11:18 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/tao_other_tests.lst:
          Added new SSLIOP tests to the script.

Fri Mar 23 12:42:02 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Makefile.am:
          Removed config-win32-visualage.h

Fri Mar 23 06:38:17 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tests/Log_Msg_Backend_Test.cpp

          Unused argument warnings.

Fri Mar 23 02:33:54 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * ace/ACE.cpp:

         Don't use raw "naked" calls, use the ones provided by ACE_OS.
         This fixes Bugzilla 2866.

Thu Mar 22 19:59:17 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/modules/GNUAutobuildProjectCreator.pm
        * bin/MakeProjectCreator/modules/GNUAutobuildWorkspaceCreator.pm

          Added logic to make this generator masquerade as the gnuace
          type for the purposes of specific/verbatim clauses.

Thu Mar 22 19:38:02 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Basic_Types.h:
        * ace/config-win32-common.h:
        * ace/config-win32.h:
        * ace/Global_Macros.h:
        * ace/OS_NS_errno.inl:
        * ace/OS_NS_sys_stat.{h,inl}:
        * ace/OS_NS_Thread.cpp:
        * ace/OS_NS_unistd.inl:
        * ace/Task.cpp:
        * ace/Timer_Heap_T.cpp:
          Removed support for Visual Age on Windows

        * ace/Condition_Thread_Mutex.{h,cpp,inl}:
          Changed removed_ member from int to real bool

        * ace/config-win32-visualage.h:
          Removed from the repo

        * ace/OS_NS_errno.inl:
          Removed workaround for BCB4

Thu Mar 22 19:25:02 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Abstract_Interface test

Thu Mar 22 18:44:02 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/ACE.inl:

          Updated a comment about ACE::nibble2hex() working with UNICODE.

        * ace/config-qnx-rtp-62x.h:

          QNX has the getifaddrs interface.

Thu Mar 22 18:33:19 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/DLL_Manager.cpp (ACE_DLL_Handle::close()): When a DLL needs to
          be closed, copy the handle value to a local variable and reset the
          object's handle_, then release the lock_, then do the dlclose()
          without holding the lock in case dlclose() causes a train of
          closes to end up coming back through ACE_DLL_Handle::close().

        * ace/Handle_Gobbler.{h inl}: Use ACE_Handle_Set instead of
          ACE_Unbounded_Set to hold the gobbled-up handles. Cuts execution
          time on AIX (at least my old-ish 5.2 box) from 7 minutes to a few
          seconds, allowing tests that use this to complete.

Thu Mar 22 18:25:01 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.{h cpp}: Corrected comments describing the format for
          %D timestamp. Thanks to Stefan Naewe for reporting this.

        * ace/OS_NS_Thread.inl (thread_mutex_init): On Windows, guard against
          InitializeCriticalSection throwing an out-of-memory exception. Thanks
          to Aleksandar Vukajlovic <vukajlo at finsoft dot co dot yu> for this.

        * ace/Log_Msg_Backend.h: Doxygenized and expanded comments.
        * ace/Log_Msg_IPC.h: Moved some comments re reset() from
          Log_Msg_Backend to here because they discuss resetting the IPC.

        * ace/Message_Queue_T.{h cpp}: Added an optional 'priority' argument
          to ACE_Message_Queue_Ex::enqueue_prio. There was previously no way
          to specify a priority for queueing; now there is. The priority
          defaults to 0 (lowest priority).
          Also fixed up the Doxygen stuff for ACE_Message_Queue_Ex.

        * tests/Message_Queue_Test_Ex.{h cpp}:
          Added a test for priority queueing.

        * tests/Log_Msg_Backend_Test.cpp: New test to illustrate how to set
          up a custom logging backend and test the hooks are called properly.

        * tests/tests.mpc:
        * tests/Makefile.am:
        * tests/run_test.lst: Added Log_Msg_Backend_Test.

        * tests/Auto_Event_Test.cpp:
        * tests/Semaphore_Test.cpp: Replace ACE_ASSERTS with if/ACE_ERROR to
          1) make sure it runs in Release mode, 2) not wipe out embedded
          systems on failures, 3) record something useful in the log. Also,
          changed error notices to LM_ERROR. When logging msecs (unsigned
          long) cast it to int; ACE_Log_Msg doesn't have the 'l' modifier and
          without it %d and long is a mismatch.

Thu Mar 22 16:29:16 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/modules/GNUAutobuildProjectCreator.pm
        * bin/MakeProjectCreator/modules/GNUAutobuildWorkspaceCreator.pm

          Added autobuild workspace creator to collate build output
          on a per makefile basis.

Thu Mar 22 14:51:46 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/make_release.py:

          Fixed a bug where the input file for bzip2 and gzip was not
          correct and the md5sum output file was missing a period.

        * docs/bczar/bczar.html:

          Updated the documentation and fixed some spelling mistakes.

        * bin/depgen.pl:

          Modified to use the dependency generator core that was moved into
          MPC.

        * bin/DependencyGenerator/DependencyEditor.pm:
        * bin/DependencyGenerator/DependencyGenerator.pm:
        * bin/DependencyGenerator/DependencyWriter.pm:
        * bin/DependencyGenerator/DependencyWriterFactory.pm:
        * bin/DependencyGenerator/MakeDependencyWriter.pm:
        * bin/DependencyGenerator/MakeObjectGenerator.pm:
        * bin/DependencyGenerator/NMakeDependencyWriter.pm:
        * bin/DependencyGenerator/NMakeObjectGenerator.pm:
        * bin/DependencyGenerator/ObjectGenerator.pm:
        * bin/DependencyGenerator/ObjectGeneratorFactory.pm:
        * bin/DependencyGenerator/Preprocessor.pm:

          Removed these files.

Wed Mar 21 12:12:26 CDT 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ACE version 5.5.7 released.

Tue Mar 20 12:42:13 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/diff-builds.pl:

          Sort the builds so that the output is in order and comparable
          between multiple runs of the same date.

Mon Mar 19 19:16:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_other_tests.lst:
          Disabled several tests for CORBA/e micro

Mon Mar 19 16:37:21 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/Download.html: Updated the comments about commercial
          support so they point to www.dre.vanderbilt.edu/support.html.
          Thanks to Hans van't Hag <hans dot vanthag at prismtech dot com>
          for motivating this.

Mon Mar 12 16:19:49 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tests/Future_Test.cpp: Updated this example to point to the
          right Active Object location.  Thanks to Joe French <JFrench at
          Soneticom dot com> for motivating this.

Mon Mar 19 07:53:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/vc8_warnings.mpb:
          Made vc8 and nmake more the same so that also with nmake the
          crt warnings are suppressed

Sun Mar 18 02:09:31 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/OS_NS_stdlib.cpp:  Fixed a race condition in
          ACE_OS::mkstemp_emulation() where the value from
          ACE_OS::gettimeofday() was truncated due to the use of
          ACE_Time_Value::msec(void) as opposed to
          ACE_Time_Value::msec(ACE_UINT64&) to convert it to milliseconds.
          This resulted in seed value passed to ACE_OS::rand_r() returning
          the same sequence of numbers when ACE_OS::mkstemp() was called
          successively from the same process.  As a result, the filenames
          returned from ACE_OS::mkstemp() ended up being the same, if the
          template passed in was the same between multiple successive
          calls to ACE_OS::mkstemp().

Thu Mar 15 14:44:21 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Select_Reactor_Base.cpp:
          The close() operation was trying to read from the notification
          pipe event if the notification pipe was not open.  I did not
          notice this could happen, but the reactor constructor has a flag
          for it.

Thu Mar 15 12:06:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted the change below, the test stats show that after adding
        the functions the Atomic_Op test does fail when these optimized
        functions are enabled.

        Mon Mar 5 09:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>
        * ace/Atomic_Op_Sparc.c:
        * ace/Atomic_Op.{h,cpp}:
          Added optimized functions for SunCC on x86. Thanks to
          Dennis Chernoivanov <cdi at tbricks dot com> for reporting this.
          If you want to enable these, add atomic_ops_sparc=1 to your
          platform_macros.GNU file

Thu Mar 15 11:20:31 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Reactor_Notify_Test.cpp:

          Removed the auto_ptr that deleted the Reactor instance.  It is
          managed by the ACE library and doesn't need to be deleted.

Wed Mar 14 21:34:03 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/ciao_tests.lst

          Added requirement for the RT-CCM test called RT_CAPABLE, used to
          indicate systems which are able to successfully run a test
          involving RT policies.

Wed Mar 14 12:32:36 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_orb_tests.lst:

          Silly me, I forgot the script name when I added the
          CORBA_e_compact_Implicit_Activation test.

Wed Mar 14 09:09:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-hpux-11.00.h:
          Set ACE_HAS_VSWPRINTF independent of the compiler used

Wed Mar 14 08:09:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-linux-common.h:
        * ace/config-lite.h:
        * include/makeinclude/platform_linux_suncc.GNU:
          Changes for the Sun Studio 12 Early Access compiler on linux

Tue Mar 13 22:04:35 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/unload_libace.mpb: Squish the VC8 warning about deprecated
          fopen().

Tue Mar 13 19:36:09 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_stdio.cpp (snprintf): Back off use of _vsnwprintf_s() in
          the wide-char version as was done in the narrow-char version (see
          Mon Mar 12 17:55:18 UTC 2007  Steve Huston  <shuston@riverace.com>).
          Also, in sprintf(), correct the selection of 3 vs 4 arg call for
          WinCE.

Tue Mar 13 18:43:28 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_orb_tests.lst:

          Added a new test that only runs when the CORBA_E_COMPACT
          configuration is enabled.

Tue Mar 13 13:21:49 UTC 2007  Olli Savia  <ops@iki.fi>

        * include/makeinclude/platform_lynxos.GNU:
          Removed unnecessary PLATFORM_SSL_* settings.

Tue Mar 13 12:13:37 UTC 2007  Steve Huston  <shuston@riverace.com>

        * bin/MakeProjectCreator/config/vc8_warnings.mpb: For the
          vc8_avoid_crt_secure_warnings feature, add /wd4996 to the nmake
          case since it seems to not pay attention to _CRT_NONSTDC_NO_WARNINGS.
          Also, reversed the default for VC8 SCL secure warnings - they're on
          by default since Ossama implemented the checked STL iterator stuff.

Tue Mar 13 09:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added new DynUnion_Test

Tue Mar 13 00:24:22 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * bin/MakeProjectCreator/config/vc8nmake.mpb:

          Subtract /EHsc from the compiler flags instead of /EHs.  MPC now
          uses /EHsc as the correct replacement for /GX.

Mon Mar 12 23:44:25 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/checked_iterator.h (ACE_make_checked_array_iterator):

          Added documentation for this header.

          Changed length type from ptrdiff_t to size_t.  The length refers
          to the length of an array, not a pointer difference.

Mon Mar 12 21:47:51 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * ace/OS_NS_stdio.inl:

          Fixed compilation errors on WinCE 5.0 builds.

Mon Mar 12 22:26:08 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/checked_iterator.h (ACE_make_checked_array_iterator):

          New function template that returns a checked iterator if
          supported by the platform (currently VC8 or better), and a
          pointer otherwise.

        * ace/Array_Map.cpp (ACE_Array_Map, grow, operator==):

          Call new ACE_make_checked_array_iterator<>() iterator factory
          function to generate destination iterator.  Addresses VC8
          "C4996" warnings when security related warnings are enabled.

        * ace/Makefile.am:
        * ace/ace.mpc:
        * ace/ace_for_tao.mpc:

          Added new ace/checked_iterator.h header to the appropriate
          header lists.

Mon Mar 12 21:15:46 UTC 2007  Carlos O'Ryan  <coryan@atdeesk.com>

        * tests/Reactor_Notify_Test.cpp:
          The test was verifying the behavior described in bug 2845.  I
          neglected to fix the test when we fixed the bug.  Mostly because
          I am stupid, but also because the test only worked as expected
          in a limited number of builds.
          This change should fix the test problems we are seeing on the
          scoreboard, but the only thing I can say for sure is:
          + I managed to reproduce the crash on my machine.
          + I understand why the test was crashing.
          + I believe the test was wrong and not the library.
          + I fixed the test and now valgrind is happy with it.

Mon Mar 12 17:55:18 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_stdio.inl (vsnprintf): Back out the attempt to use the
          new _vsnprintf_s() - it doesn't report the required string length
          when it exceeds maxlen and we need this info.

Mon Mar 12 17:38:26 UTC 2007  Steve Huston  <shuston@riverace.com>

        * bin/MakeProjectCreator/config/vc8_warnings.mpb:
        * bin/MakeProjectCreator/config/vc8nmake.mpb:
          Moved the _CRT_NONSTDC_NO_WARNINGS, _CRT_SECURE_NO_DEPRECATE, and
          _SCL_SECURE_NO_WARNINGS defs from vc8nmake.mpb to vc8_warnings.mpb
          so they're all in one place for easy maintenance and also can be
          switched on and off via MPC features.

          This effectively reverts the changes to vc8nmake.mpb since:
          Fri Mar  9 21:04:22 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-win32-msvc-8.h: Deleted the pragma disable for warning
          4355 (this used in base member initializer list). Added it to
          bin/MakeProjectCreator/config/vc8_warnings.mpb. This should both
          unblock it for regular users and block it for the CIDLC build.

Mon Mar 12 16:39:25 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Note that LabVIEW RT targets may require
          the user to copy Windows DLLs to the target for Debug mode.

Mon Mar 12 14:15:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/INET_Addr.cpp:
          Removed not needed return

Mon Mar 12 13:54:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_other_tests.lst:
          Don't run bug 2800 regression tests in a ST configuration

Mon Mar 12 13:12:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.3.h:
        * ace/config-vxworks6.4.h:
          Only when building a static rtp we enable aio by default. For
          building shared we need an optional library, see the file below
          how to enable this

        * include/makeinclude/platform_vxworks6.3.GNU:
          If you build rtp with shared library and want to use aio then you
          need to build the custom AioPx library first, then add aio=1
          to your platform_macros.GNU file to enable aio in ACE and link
          the needed additonal library

Mon Mar 12 12:35:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.3.h:
        * ace/config-vxworks6.4.h:
          VxWorks 6.4 does deliver strings.h in kernel mode and strcasecmp/
          strncasecmp can't be used in rtp mode, but can be used in kernel
          mode

Mon Mar 12 10:51:38 UTC 2007  Steve Huston  <shuston@riverace.com>

        * bin/MakeProjectCreator/config/vc8nmake.mpb: Added /D for
          _CRT_SECURE_NO_DEPRECATE and _SCL_SECURE_NO_WARNINGS to silence
          those compile warnings; added /wd4290 to silence the warnings
          "C++ exception specification ignored except to indicate a function
          is not __declspec(nothrow)". Note that the latter warning can also
          be remedied by using ACE_THROW_SPEC; this has been done for ACE
          but not in TAO.

Mon Mar 12 01:31:16 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/DLL/test_dll.cpp:

          This example was not working under Windows XP when compiled with
          Visual Studio 2003.NET. The culprit was the following line of code:

          dll.open (ACE_TEXT("./") ACE_DLL_PREFIX ACE_TEXT("DLL_Today"));

          We don't need to supply "./" to the open method, since $ACE_ROOT/lib
          is in DLL search path environment variable (PATH for Windows and
          LD_LIBRARY_PATH for unix-like systems).

Fri Mar  9 21:04:22 UTC 2007  Steve Huston  <shuston@riverace.com>

        * bin/MakeProjectCreator/config/vc8nmake.mpb: Added /wd4250
          (to disable inheritance via dominance warning) and
          /D _CRT_SECURE_NO_DEPRECATE to disable the warnings about
          deprecated CRT functions.

Fri Mar  9 16:49:03 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_string.inl (strncat): Disable the TR24731/2005 calls to
          strncat_s() and wcsncat_s() for now. The dest length includes the
          characters that were already in dest before appending src. To really
          use the safer functions, the dest max length is needed from the
          caller. So, we'll either need a new method or an added arg to the
          current methods.

Fri Mar  9 16:27:23 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_stdio.cpp (snprintf):
        * ace/OS_NS_string.inl (strncat): When using the "safe" calls from
          TR24731/2005, specify the dest count as the user-specified source
          length + 1 for the null. This assumes the caller knows the dest
          buffer is long enough to hold what's specified. Specifying
          _TRUNCATE as the src count gets the behavior we expect - the
          specified number of bytes are copied with the assurance a nul
          terminator is added. This avoids the CRT error handler.

Fri Mar  9 16:10:09 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg_NT_Event_Log.{h cpp}: Changed return type of log() from
          int to ssize_t. Matches changes from:
          Fri Mar  9 00:53:43 UTC 2007  Steve Huston  <shuston@riverace.com>

Thu Mar  9 09:44:14 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Time_Value.cpp (operator *=):

          Reverted bulk of the changes.  New implementation will be
          revisited as time permits.

Fri Mar 9 09:42:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks6.3.GNU:
          No need to explicitly link dl when building shared

Thu Mar  9 07:44:14 UTC 2007  Ossama Othman  <ossama_othman@symantec.com>

        * tests/Time_Value_Test.cpp (run_main):

          Simplified assertions.  Rather than test equality of sec() and
          usec() components separately, just test equality of the
          ACE_Time_Value objects as a whole.

Fri Mar  9 00:53:43 UTC 2007  Steve Huston  <shuston@riverace.com>

        Changes to resolve or quiet warnings from Visual Studio .NET 2005:

        * bin/MakeProjectCreator/config/acedefaults.mpb:
        * bin/MakeProjectCreator/config/vc8_warnings.mpb: Removed the
          default addition of _CRT_SECURE_NO_DEPRECATE from the MPC VC8
          project templates. Many of the places where the changes recommended
          by Microsoft could be made have been made (see further below). There
          are still a number of places where the warnings are generated,
          mostly because ACE wraps "unsafe" methods such as strcpy(), printf(),
          etc. These can't legitimately be changed. So most of what can (and
          should) be changed in ACE has been. To keep the warnings quiet
          without removing them from any user application that includes ACE
          headers, the acedefaults.mpb base project now inherits from
          vc8_warnings - vc8_warnings will, by default, silence the warnings
          we don't really need to see, but users of ACE will still get the
          warnings when building their apps, unless they take similar steps
          to silence them (or if they generate projects using the acedefaults
          base project with MPC).
          We can still elect to enable all the warnings by setting MPC features
          to 0 (see vc8_warnings.mpb for features). And this is a good thing
          to do still since we can improve the security situation by reviewing
          things flagged as warnings and repair what's needed (not everything
          flagged will be in need of a fix).

        * ace/config-win32-msvc-8.h: Removed most of the pragmas that silenced
          legit warnings from VC8. Added ACE_HAS_TR24731_2005_CRT indicating
          that there's a C Run-Time implementing C99 draft TR 24731 dated
          October 2005 detailing security improvements to the C run-time.
          This macros indicates that the more secure versions of the calls
          can be used where desireable.
          Also added a macro, ACE_WIN32_VC8, to easily tell where we need to
          selectively disable a warning that we can tell by inspection is
          irrelevant. Such as use of 'this' in an initializer list and we can
          tell by inspecting the code in question to be sure that the passed
          pointer isn't used to call a method on an object that's not fully
          constructed yet.

        * ace/config-macros.h: When ACE_HAS_TR24731_2005_CRT is defined,
          define ACE_SECURECRTCALL to make a call and adjust the returned
          error value to the ACE return value convention.

        * ace/README: Describe ACE_HAS_TR24731_2005_CRT.

        * NEWS: Described the removing of the warning preventers and that
          user code may trigger warnings that weren't showing up in previous
          ACE versions.

        * ace/Global_Macros.h: For VC8 with ACE_HAS_EXCEPTIONS, define
          ACE_THROW_SPEC as throw(...) always. VC8 always treats any throw
          spec as throw(...) and issues a warning to this effect. This change
          silences the warnings. The #if intends to set this for VC8 only,
          guessing that any VC9 will be _MSC_VER 1500.

        * ace/os_includes/sys/os_types.h: For non-Borland, non-Mingw ACE_WIN32
          change mode_t from u_short to int. Matches CRT docs.

        * ace/Local_Tokens.cpp:
        * ace/Select_Reactor_Base.inl:
        * ace/WFMO_Reactor.cpp:
        * apps/Gateway/Gateway/Event_Channel.cpp:
          Disable VC8's C4355 warning that 'this' is used in an initializer
          list; we know, and it's ok.

        * ace/Select_Reactor_T.cpp (ctor): Rather than pass a reference to
          'this' incompletely constructed object to token_, call token_'s
          reactor() method to set the reactor impl pointer.

        * ace/Registry.{h cpp}: Rearranged setting of Binding_Iterator in the
          inherited Iteration_State object. Instead of passing a reference to
          an object that's not yet fully constructed, call a new iterator()
          method to set that pointer.

        * ace/Service_Config.cpp (ctor): Rather than set the TSS pointer in
          the initializer list before it's complete, call ts_object() to set
          it within the constructor body. We could also catch a setup error
          here and throw an exception if ACE ever goes that way.

        * ace/OS_NS_time.h (ace_timezone): Use the GetTimeZoneInformation()
          system call to get timezone bias for all Windows platforms and
          compilers. Much easier and faster than going through the C run-time
          and will work with new US daylight savings changes automatically.

        * ace/OS_NS_sys_stat.inl: (umask):
        * ace/OS_NS_stdio.inl (vsnprintf):
        * ace/OS_NS_stdio.cpp (sprintf, snprintf):
        * ace/OS_NS_string.inl (strtok_r, strncat):
        * ace/OS_NS_string.cpp (strerror):
          Use "safer" functions when ACE_HAS_TR24731_2005_CRT.

        * ace/OS_NS_time.{inl cpp}: (asctime_r, ctime_r, gmtime_r,
          localtime_r): Use new functions when ACE_HAS_TR24731_2005_CRT.
          NOTE - I purposely did not substitute the secure version for the
          non _r methods (asctime, ctime, etc.) since that would have to use
          a local static variable. That defeats the purpose of being able to
          use a caller-supplied destination. Thus, the places that can
          substitute a secure function are, and those that can't don't. This
          will notify users of code that's potentially unsafe and allow them to
          switch to the safer _r version. We can set the
          _CRT_SECURE_NO_WARNINGS macro for non-inline builds (where the unsafe
          versions will be compiled in) and leave the warning in place for
          inlined builds to put the user on notice that a potentially unsafe
          method is being used.

        * ace/UUID.cpp (from_string_i): Use sscanf_s for VC8.

        * ace/Atomic_Op_T.{cpp inl}:
        * ace/INET_Addr.cpp:
        * ace/Filecache.cpp:
        * ace/Future.cpp:
        * ace/Map_Manager.inl:
        * ace/Message_Queue_T.cpp:
        * ace/Process_Mutex.cpp:
        * ace/RW_Process_Mutex.cpp:
        * ace/Stream.cpp: Don't use 'this' in initializer list. Quiets
          VC8's warnings.

        * protocols/ace/TMCast/Group.{hpp cpp}: Change 'throw' to
          ACE_THROW_SPEC to quiet the VC8 warnings.

        * tests/unload_libace.mpb: Add _CRT_SECURE_NO_WARNINGS for VC8. Else
          VC8 warns about fopen() and we don't care.

        * ace/README: Added ACE_LACKS_WIN32_GETPROCESSTIMES.

        * ace/config-WinCE.h: Added ACE_LACKS_WIN32_SECURITY_DESCRIPTORS and
          ACE_LACKS_WIN32_GETPROCESSTIMES.

        * ace/OS_NS_dirent.cpp (opendir_emulation): WinCE offers
          GetFileAttributes() but documents a failing return value as
          0xFFFFFFFF whereas on desktop/server Windows a failed call returns
          INVALID_FILE_ATTRIBUTES. So on WinCE, define INVALID_FILE_ATTRIBUTES.

        * ace/OS_NS_sys_resource.inl (getrusage): Don't try GetProcessTimes()
          on Win32 if ACE_LACKS_WIN32_GETPROCESSTIMES is set.

        * ace/OS_NS_stdio.inl (cuserid): WinCE returns ENOTSUP for these.

        * ace/OS_NS_unistd.inl (chdir): If ACE_HAS_WINCE, return ENOTSUP.

        * ace/Log_Record.cpp (operator<<): Truncate the message data length
          down to 32 bits (ACE_CDR::ULong) size since that's all the
          CDR ops and header field can handle.

        * ace/Log_Msg_Backend.h:
        * ace/Log_msg_UNIX_Syslog.{h cpp}:
        * ace/Log_Msg_IPC.h:
        * ace/Log_Msg_IPC.cpp (log): Changed the return type of log() from int
          to ssize_t to match what it's returning (byte count or error).
          Corrected the max_payload_size calculation
          to match the header that operator<< (above) writes. The MAXLOGMSGLEN
          isn't always enough now that ACE_Log_Record's data can be extended.

Fri Mar  9 00:57:26 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Event_Handler.cpp:
          Fixed bug 2845, the event handler destructor no longer calls
          purge_pending_notifications.  More details about the rationale
          can be found in the bug report.

        * NEWS:
        * docs/ACE-FMM.html:
          Prominently document the change, since it may catch people
          unawares.

Thu Mar  8 21:27:54 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/String_Base.{h cpp}: Change ACE_String_Base::release_ from int
          to bool. Thanks to Kelly Hickel for this change. This changes the
          signatures of the following methods:
            ACE_String_Base (const CHAR *s,
                             ACE_Allocator *the_allocator = 0,
                             int release = 1);
          to
            ACE_String_Base (const CHAR *s,
                             ACE_Allocator *the_allocator = 0,
                             bool release = true);

            ACE_String_Base (const CHAR *s,
                             size_type len,
                             ACE_Allocator *the_allocator = 0,
                             int release = 1);
          to
            ACE_String_Base (const CHAR *s,
                             size_type len,
                             ACE_Allocator *the_allocator = 0,
                             bool release = true);

            void set (const CHAR * s, int release = 1);
          to
            void set (const CHAR * s, bool release = true);

            void set (const CHAR * s, size_type len, int release);
          to
            void set (const CHAR * s, size_type len, bool release);

            void clear (int release = 0);
          to
            void clear (bool release = false);

        * ace/Configuration.cpp:
        * ACEXML/common/NamespaceSupport.cpp:
        * ACEXML/parser/parser/Entity_Manager.inl:
        * tests/SString_Test.cpp: Changes to string usage to
          reflect the above signature changes. Changed '0' args to 'false'.

        * NEWS: Added a description of the above changed methods.

Thu Mar  8 21:24:38 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/Cached_Conn_Test.cpp:
        * tests/Cached_Accept_Conn_Test.cpp: Replace use of ACE_ASSERT with
          ACE_ERROR. ACE_ASSERTS on single-process targets do really bad
          things...

Thu Mar 8 20:29:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks6.3.GNU:
          More changes to build with shared library support using VxWorks 6.x

Thu Mar 8 19:06:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks6.3.GNU:
          Only add dl to LDLIBS when building shared

Thu Mar  8 18:06:14 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Time_Value.cpp (operator *=):

          Removed vestigial time value saturation code that does not work
          correctly with latest implementation.

Thu Mar 8 14:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.2.h:
        * ace/config-vxworks6.3.h:
        * ace/config-vxworks6.4.h:
          Don't set ACE_HAS_SVR4_DYNAMIC_LINKING when we do a static
          rtp build.

Thu Mar 8 13:04:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks6.3.GNU:
          Added some initial support for building shared libraries
          with vxworks 6.3, this is not ready yet, in progress

Thu Mar  8 12:17:50 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/config/ace_openssl.mpb:
        * include/makeinclude/wrapper_macros.GNU:

          Moved the addition of SSL related macros out of wrapper_macros.GNU
          and into a specific section in ace_openssl.mpb.  The result is
          that the SSL related information is only added to the projects
          that inherit from ace_openssl (instead of every single project).

Thu Mar  8 02:59:02 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Notification_Queue.cpp:
          Fixed implementation of reset() make sure the code works right
          when there are null event handlers in the queue.  This should
          have been part of the original fixes for bug 2820.

        * tests/Notification_Queue_Unit_Test.cpp:
          Add new test cases for the reset() operation, in particular
          check for null event handlers in the queue.

Wed Mar  7 19:07:58 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Message_Block.cpp:

          Fixing a problem caused by inadvertently overwriting an external
          buffer passed in the constructor. It happens when
          ACE_INITIALIZE_MEMORY_BEFORE_USE is set (as result of setting
          ACE_HAS_VALGRIND). Thanks to Johnny Willemsen for reporting it.

Wed Mar  7 18:44:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/wrapper_macros.GNU:

          Fixed an issue where if ssl wasn't set to zero, it was assumed to
          be set to non-zero (ignoring the case where it could be set to
          empty).

Wed Mar  7 17:32:51 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Time_Value.cpp (operator*=):

          Altered implementation to avoid converting the microseconds
          component of the ACE_Time_Value to a fraction of a second.  In
          the case were the floating point type's mantissa width is the
          same as the width of the time_t (seconds) value, a maxed out
          ACE_Time_Value seconds component would utilize all bits in the
          mantissa, leaving no room for a fraction.  The microseconds
          component would end up not contributing to the multiplication.
          Multiply the seconds and microseconds components separately
          instead.  This also saves us a floating point division, which
          can be expensive.

Wed Mar  7 16:35:04 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/config/ace_openssl.mpb:
        * include/makeinclude/wrapper_macros.GNU:

          Removed the addition of $(SSL_ROOT)/include and $(SSL_ROOT)/lib
          from the includes and libpaths project variables and ssl and
          crypto from the lit_libs settings for gnuace (as was done for
          automake).

          This functionality will now come from wrapper_macros.GNU in the
          form of PLATFORM_SSL_CPPFLAGS, PLATFORM_SSL_LDFLAGS and
          PLATFORM_SSL_LIBS.  If these variables are not set, they will be
          given defaults based on the SSL_ROOT variable, as long as SSL_ROOT
          is set and is not set to /usr.

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Added support for the compile_flags and linkflags template
          variables.

Wed Mar 7 13:12:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks5.5.x.GNU:
        * include/makeinclude/platform_vxworks6.2.GNU:
          Simplified these files

        * include/makeinclude/platform_vxworks6.3.GNU:
          Added support to use a windows host system for the cross build

Wed Mar 7 12:34:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/wrapper_macros.GNU:
          Removed setting of ACELIB, in the generated makefiles it is
          always cleared again

        * bin/MakeProjectCreator/templates.gnu.mpb:
          Removed clearing of ACELIB and setting of tao_dont_use_idl_make_rule

Wed Mar 7 12:20:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/rules.local.GNU:
          Removed check for TAO_IDL_DEP, the generated GNUmakefiles do
          check for this

Wed Mar  7 11:46:46 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/Bug_2820_Regression_Test.cpp:
          Use the standard ACE workaround for platforms with a broken
          std::auto_ptr<>.

Wed Mar 7 09:56:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Atomic_Op.cpp:
          Implemented the single_cpu_* methods for PPC, because of the lack
          of a multi cpu ppc board we don't have these methods implemented
          and we don't enable this by default. If you want to use the PPC
          optimized operations for a single cpu board add
          ACE_HAS_BUILTIN_ATOMIC_OP to your config.h

Wed Mar  7 02:51:50 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/bczar/bczar.html

          Updated bczar documentation to reflect change in release script.

        * bin/make_release
        * bin/make_release.py

          Removed the old release script and added the new one.

Tue Mar  6 23:06:15 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Time_Value.cpp (operator*=):

          Use long double for internal computations if double is not large
          enough to retain precision of the time_t/suseconds_t values.
          This will only provide improved behavior with compilers that
          support double-extended precision floating numbers, i.e. >= 79
          bits.

          Added comments to explain what is being done in the
          implementation.

Tue Mar 6 07:47:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS.inl:
          Fixed compile error with VxWorks 6.x using a Windows host

Tue Mar  6 15:27:52 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * NEWS:

          Noted removal of eVC3/4 projects.

Tue Mar  6 15:00:00 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/INET_Addr_Test.cpp:
          Add test for ACE_INET_Addr::is_loopback () API. This tests a
          selected set of addresses to validate API's conformance with RFC
          3330.

Tue Mar  6 13:21:24 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * COPYING: Updated this file to clarify that the ACE license need
          not be shipped with binary-only releases.  Thanks to Michael
          Kircher <michael dot kircher at siemens dot com> and Werner
          Burger <werner dot burger at siemens dot com> for motivating
          this.

Tue Mar  6 12:43:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Date_Time_Test.cpp:

          Handle the rare case where the minute rolls over during the test.

Tue Mar  6 04:41:36 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/DLL/README:

          README was referring to files (dsp/dsw) used by Visual Studio C++ 6.
          Updated to refer to files (sln/vcproj) used by VC++ 7.1 or later.

Tue Mar  6 02:37:53 UTC 2007  Carlos O'Ryan  <coryan@atdeesk.com>

        * Merged changes from the fix_bug_2820 branch.  From revision
          77533 to revision 77546.

        Tue Mar  6 02:07:43 UTC 2007  Carlos O'Ryan  <coryan@atdeesk.com>

        * ace/Select_Reactor_Base.cpp:
          Fixed bugs in loop to extract event handlers from notification
          pipe.

        * tests/Bug_2820_Regression_Test.cpp:
          Fixed several problems in the test:
          - The Event_Handler called on the Reactor on its destructor, but
            by then the reactor was already destroyed.
          - Improved debugging messages.
          - Fixed memory management problems, valgrind is happy now.

        Mon Mar  5 18:01:36 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Notification_Queue.cpp:
          When deleting the queue we must decrease the reference count on
          all the event handlers stored there.

        * ace/Select_Reactor_Base.cpp:
          When the notification pipe is destroyed we must read the data
          stored there and release all the event handlers.  Otherwise the
          reference counts are broken.

        * tests/run_test.lst:
          Add Bug_2820_Regression_Test to the list.

        Mon Mar  5 17:16:16 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/Bug_2820_Regression_Test.cpp:
          The test was broken, it did not delete the Reactor, so it failed
          to test what we wanted.

Tue Mar  6 00:10:36 UTC 2007  Steve Huston  <shuston@riverace.com>

        * examples/ASX/UPIPE_Event_Server/event_server.cpp: Use ACE_DEBUG
          to display the message containing a time_t. Use of the standard
          iostream operator<< with time_t gives the Intel90 compiler fits.

Mon Mar  5 23:09:59 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.{h cpp}: Added new format specifiers:
          %b to format ssize_t values
          %B to format size_t values
          %: to format time_t values

          Note that these use, when necessary, printf format specifiers such
          as ACE_SIZE_T_FORMAT_SPECIFIER and ACE_INT64_FORMAT_SPECIFIER.
          The printf formatters can't be used portably in ACE_Log_Msg format
          strings because 1) some of them use %I, which has a different meaning
          in ACE_Log_Msg already and 2) some of the new printf formats are
          more complicated that ACE_Log_Msg knows how to deal with in its
          existing logic to use format modifiers. The new ACE_Log_Msg format
          specifiers make it easy to portably log these types that can change
          sizes across platforms.

        * ace/Log_Record.cpp (dump):
        * tests/Cached_Allocator_Test.cpp:
        * tests/High_Res_Timer_Test.cpp: Use the new ACE_Log_Msg format
          specifiers for size_t and time_t logged values.

Mon Mar  5 22:23:01 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/clean_sems.sh:

          s/xargs/xargs -r/  The -r switch to xargs prevents the command from
          being executed when there are no arguments.  This will prevent the
          extra scoreboard output on Linux (when rem_sems is used):
            usage: ipcrm [ [-q msqid] [-m shmid] [-s semid]
            [-Q msgkey] [-M shmkey] [-S semkey] ... ]
            deprecated usage: ipcrm {shm | msg | sem} id ...

Mon Mar  5 18:02:42 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Basic_Types.h (ACE_UINT64_MAX):

          Simplified preprocessor conditionals.

        * ace/RB_Tree.h (ACE_RB_Tree_Iterator_Base):

          Made copy constructor public instead of private.  The assignment
          operator was already public so there was nothing to be gained by
          making the copy constructor protected.  Addresses Sun Studio 10
          warnings.

        * ace/Time_Value.inl (to_usec):

          Added support for ACE_LACKS_UNSIGNEDLONGLONG_T case.

        * ace/UUID.cpp (get_systemtime):

          In the ACE_LACKS_UNSIGNEDLONGLONG_T case, wrap 64-bit integer
          constant with ACE_INT64_LITERAL macro.  Addresses potential
          problem where the constant is intepreted as a "long", instead of
          "long long".

Mon Mar  5 17:22:26 UTC 2007  Ciju John  <johnc@ociweb.com>

        * ace/INET_Addr.inl:
        * ace/INET_Addr.cpp:
        * ace/QoS/SOCK_Dgram_Mcast_QoS.cpp:
          RFC 3330 defines loopback as any address with 127.x.x.x. The
          is_loopback API currently simply compares against the
          INADDR_LOOPBACK macro. Doing so restricts loopback definition to
          127.0.0.1 which is inconsistent with the RFC definition. This
          change will include any address with 127.x.x.x as loopback.

Mon Mar  5 14:16:49 UTC 2007  Olli Savia  <ops@iki.fi>

        * tests/run_test.lst:
          Updated for LynxOS.

Mon Mar 5 11:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-hpux-11.00.h:
          Enabled ACE_HAS_VSFWPRINTF for aCC compiler

Mon Mar 5 09:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Atomic_Op_Sparc.c:
        * ace/Atomic_Op.{h,cpp}:
          Added optimized functions for SunCC on x86. Thanks to
          Dennis Chernoivanov <cdi at tbricks dot com> for reporting this.
          If you want to enable these, add atomic_ops_sparc=1 to your
          platform_macros.GNU file

Sat Mar  3 17:35:52 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Basic_Types.h (ACE_UINT64_MAX):

          Re-wrap the integer constant with the ACE_UINT64_LITERAL macro
          to ensure the appropriate type specifier is used.

Fri Mar  3 5:01:19 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Basic_Types.h (ACE_UINT64_MAX):

          Reintroduced this constant for the case where 64 bit integers
          are natively supported.  It was inadvertently removed.

          Removed stray semi-colon in ACE_LACKS_{UNSIGNED}LONGLONG_T
          case.

Fri Mar  2 21:42:54 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Basic_Types.h (ACE_UINT64_MAX):

          Corrected value for the ACE_LACKS_{UNSIGNED}LONG_LONG_T case.

          (ACE_U64_TO_U32, ACE_CU64_TO_CU32):

          Converted these macros to inlined functions.

          (ACE_LONGLONG_TO_PTR):

          Cast pointer to intptr_t instead of ptrdiff_t before casting
          to the pointer type.  The ptrdiff_t type  is meant for pointer
          differences.

        * ace/High_Res_Timer.cpp (dump):

          Drop ACE_CU64_TO_CU32 macro in favor of standard static_cast<>.
          There was no real use for that macro in this case.

        * ace/Numeric_Limits.h (ACE_Numeric_Limits):

          Added a specialization for ACE_U_LongLong.

        * ace/Sample_History.cpp (dump_samples):

          Removed unnecessary cast to 32 bit value.

          Corrected Log_Msg format specifier for unsigned type.

        * ace/Time_Value.cpp (operator*=):
        * tests/Time_Value_Test.cpp (run_main):

          Removed ACE_LACKS_NUMERIC_LIMITS preprocessor conditional.  Use
          ACE_Numeric_Limits<> instead.  It is always available.

        * ace/Time_Value.h (to_usec):
        * ace/Time_Value.inl (to_usec):

          Enabled support for this method when ACE_LACKS_LONGLONG_T is
          defined.

        * ace/UUID.cpp (get_systemtime):

          Fixed support for ACE_U_LongLong type.

Fri Mar  2 20:48:45 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Improved the description of using Pharlap ETS and
          described the ACE_PHARLAP_TESTLOG_TO_FILE config setting.

        * ace/config-pharlap.h: Add a IN_CLASSD(i) macro that always reports
          false. Although Pharlap is supposed to support multicast, the
          IN_CLASSD macro is only added at WinSock 2.

        * tests/Test_Output.cpp: Allow Pharlap to log to a file by setting
          ACE_PHARLAP_TESTLOG_TO_FILE in config.h. The default behavior of
          logging to the system console still stands.

Fri Mar  2 18:18:25 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/GNUACEWorkspaceCreator.pm:

          Override the targets method to supply a list of targets that can
          be used with Eclipse.

Fri Mar  2 17:48:09 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Truncate.h (Truncator):

          Fixed one more typo in the ACE_U_LongLong partial specialization
          of this functor.  Also corrected truncation logic.

Thu Mar  1 16:30:13 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * ace/Log_Msg.h (ACE_Log_Msg): Updated the document to remove the
          claim that stdout can be used.  Thanks to Ian C White
          <Ian_C_White at raytheon dot com> for reporting this.

Thu Mar 1 13:15:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-hpux-11.00.h:
          Removed ACE_HAS_VSWPRINTF, there are dependencies on this
          define and no time to handle this fully.

Thu Mar 1 12:28:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Sock_Connect.cpp:
          Fixed sun warning

Thu Mar 1 12:18:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Reactor/Misc/test_signals_2.cpp:
          Removed HPUX disabling, compiles fine on our system

Thu Mar 1 9:42:12 UTC 2007  Martin Corino  <mcorino@remedy.nl>

        * bin/PerlACE/Process_Unix.pm:
        * bin/PerlACE/ProcessVX_Unix.pm:
          Some fixes for running VxWorks 6.x RTP tests.

Thu Mar  1 08:51:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_stdio.{cpp,inl}:
          Introduced new ACE_HAS_VSWPRINTF that we can set when a platform
          has this method

        * ace/config-hpux-11.00.h:
          Added ACE_HAS_VSWPRINTF

Wed Feb 28 21:34:45 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * bin/tao_orb_tests.lst:

          Added two new TAO tests.

Wed Feb 28 19:16:12 UTC 2007  Martin Corino  <mcorino@remedy.nl>

        * ace/DLL_Manager.cpp:
        * ace/Parse_Node.cpp:
          Fixed pointer conversion warnings on OpenVMS.

Wed Feb 28 17:44:20 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Truncate.h (Truncator):

          Fixed typo in the ACE_LACKS_UNSIGNEDLONGLONG_T case.
          s/ACE_UIN32/ACE_UINT32/.

Wed Feb 28 13:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-hpux-11.00.h:
          Moved ACE_HAS_SSIZE_T outside of the compiler specific part, gcc
          and aCC do have ssize_t. Also moved ACE_HAS_XPG4_MULTIBYTE_CHAR
          outside of the compiler part.

Wed Feb 28 11:09:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.cpp (num_processors):
          Implemented for HPUX

Wed Feb 28 09:58:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/ADDIDL.DSM:
          Moved to TAO

        * bin/msvc_cidlc.pl:
          Moved to CIAO

        * indent_macros.perl:
        * indent_macros.pl:
          Renamed extension to .pl

Wed Feb 28 09:44:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/corba-boolean.perl:
        * bin/rm_exception_macros.pl:
        * bin/subst_env.pl:
        * bin/tao_env.pl:
        * bin/tao_svcconf.pl:
          Moved to TAO/bin, no need to ship these with ACE

Wed Feb 28 08:14:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/DLL_Manager.cpp:
          Fixed a deadlock that could occur when a dll is loaded which itselfs
          also loads a dll in its static initialisation. This fixes bugzilla bug
          2830.

Tue Feb 27 21:18:07 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * netsvcs/lib/Time_Request_Reply.cpp:
        * tests/Integer_Truncate_Test.cpp:
        * tests/CDR_File_Test.cpp:

          s/ACE_Utils::Truncate/ACE_Utils::truncate_cast/g.  The former is
          deprecated.

        * tests/High_Res_Timer_Test.cpp:

          Improved variable types to make use of
          ACE_Utils::truncate_cast<> unnecessary.

Tue Feb 27 18:55:12 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/CDR_Stream.cpp:
        * ace/Message_Block.cpp:

          The intent of the change is to better detect (and be able to
          recover from) a situation when memory allocation fails in
          constructing or initializing an ACE_Data_Block. It fixes a
          problem with the change from "Mon Feb 26 19:06:36 UTC 2007"
          which wasn't accounting for the new datablock size correctly.

Tue Feb 27 19:33:13 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Truncate.h:

          Added specializations for ACE_U_LongLong.

          Added yet another const specialization for BCB6 to work around
          its inability to use valid specializations with template
          parameters that are not const.

          Removed ACE_Utils::Truncate<> altogether.  Use
          ACE_Utils::truncate_cast<> instead.

Tue Feb 27 15:18:50 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/docs/templates/gnu.txt:

          Added documentation for template variables used by the gnuace
          project type.  This is used by document_template.pl found in
          MPC/devtools.

Tue Feb 27 14:59:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Process_Manager_Test.cpp:
          Fixed incorrect initialized variable

Tue Feb 27 14:20:26 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/CDR_Stream.cpp:
        * ace/Message_Block.cpp:

          Reverting my patch from "Mon Feb 26 19:06:36 UTC 2007". It needs
          more work.

Tue Feb 27 13:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/High_Res_Timer.cpp:
        * ace/DLL_Test.cpp:
          Removed check for KCC, that compiler is not supported anymore

Tue Feb 27 11:45:06 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/Notification_Queue_Unit_Test.cpp:
          Fixed compilation error in Redhat_Enterprise_Linux_3_Debug_WChar
          build.  Thanks to Johnny Willemsen for letting me know.

Tue Feb 27 03:34:40 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/Notification_Queue_Unit_Test.cpp:
          Use functions instead of macros to workaround compiler warnings
          in the HP-UX_11iv2_IA64_aCC_wchar build.
          The warnings were harmless, but the code is more readable this
          way in any case.  Thanks to Johnny Willemsen for bringing the
          warnings to my attention.

Mon Feb 26 20:58:05 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.cpp (insert):

          Removed the usage of fprintf to print messages about service
          descriptors, inserted using static initializers. It is the only
          way if you want to see what is being inserted before ACE_Log_Msg
          gets initialized but because it uses stderr directly, it may
          affect some aplications' expected output.

        * ace/Service_Repository.cpp (insert):

          Fixing a defective debug statement.

Mon Feb 26 19:06:36 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/CDR_Stream.cpp (grow_and_adjust, clone_nocopy):

          For large sizes the message block constructor may fail to
          allocate and/or initialize the necessary ACE_Data_Block
          instances. The failure to initialize can go unnoticed and may
          cause an unlimited number of recursive invocations of
          grow_and_adjust. The change adds a test for the invariant of the
          newly allocated ACE_Message_Block instance.

        * ace/Message_Block.cpp (clone_nocopy):

          When memory is scarce the allocation of ACE_Data_Block may
          succeed while the initialization can fail.  Adding a test,
          before the message block is declared good.

Mon Feb 26 17:17:08 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/PerlACE/Run_Test.pm:

          Set up the $PerlACE::CIAO_ROOT variable, just like $PerlACE::TAO_ROOT
          except for CIAO.

        * bin/auto_run_tests.pl:

          Find CIAO tests relative to the $CIAO_ROOT directory.

Mon Feb 26 13:56:42 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/ACETAOCIAO.style:
          Updated to version 1.12 of StyleManager

Mon Feb 26 13:03:19 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Added code to surround all libraries with a -Wl,--start-group and
          -Wl,--end-group only if the compiler is g++, we're linking static
          libraries, it's an executable and the 'link_groups' template
          variable is set.

Mon Feb 26 10:08:19 UTC 2007  Olli Savia  <ops@iki.fi>

        * tests/SOCK_Dgram_Bcast_Test.cpp:
          Pass correct buffer length to ACE_OS::vsnprintf().
          Thanks to Yves Alloyer <alloyer at ipanematech dot com> for
          reporting this and providing initial patch.

Mon Feb 26 08:50:13 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/Process.cpp (command_line):
          Pass correct buffer length to ACE_OS::vsnprintf().
          Thanks to Yves Alloyer <alloyer at ipanematech dot com> for
          reporting this and providing initial patch.

Sun Feb 25 17:26:37 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * bin/tao_orb_tests.lst:

          Added the DiffServ policy test's run_test.pl.

Sat Feb 24 23:01:16 UTC 2007  Steve Huston  <shuston@riverace.com>

        * configure.ac: Added ACE_CHECK_LACKS_FUNCS(alphasort)

Sat Feb 24 22:51:09 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-sunos5.5.h:
        * ace/config-sunos5.10.h: Add ACE_LACKS_ALPHASORT at Solaris 2.5 and
          remove it at Solaris 10. Solaris 8 and 9 have an alphasort() but
          only for use with the BSD cc compiler and with disclaimer that it's
          not supported for use with system libraries nor with multiple
          threads. Solaris 10 brings it into supported use.

Sat Feb 24 17:03:47 UTC 2007  Steve Huston  <shuston@riverace.com>

        * examples/NT_Service/main.cpp:
        * examples/NT_Service/nt_svc.{h cpp}: Don't check for disabling
          macros until a config file has been included, else it never builds
          anywhere. Thanks to Johnny Willemsen for pointing this out.

Sat Feb 24 09:01:19 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/config-linux.h:

          AIO support pulls in the rt library, which pulls in the pthread
          library.  Disable AIO in single-threaded builds.

        * tests/Recursive_Mutex_Test.cpp:

          Check if ACE_Recursive_Thread_Mutex::get_nesting_level() is
          supported before attempting to use it.

Sat Feb 24 08:34:08 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/config-openvms.h:
        * ace/config-qnx-rtp-62x.h:
        * ace/config-qnx-rtp-pre62x.h:
          Added ACE_LACKS_ALPHASORT.

Fri Feb 23 23:10:17 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tests/Recursive_Mutex_Test.cpp (test_recursion_depth):

          Issue error messages instead of assert()ing.  VxWorks builds
          will hang on a crash.  Thanks to Johnny for pointing this out.

Fri Feb 23 19:24:30 USMST 2007  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/SCTP/SOCK_SEQPACK_srv.cpp:

          Made run_server() and other functions and structures only compiled
          when ACE_HAS_SCTP is defined. This should resolve the warning that the
          run_server() is defined but not used on some platforms.

Fri Feb 23 17:47:28 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/Bug_2815_Regression_Test.cpp:
          The test should be enabled only if the notification queue is
          also enabled.  Basically purge_pending_notifications() is not
          supported without the notification queue, and that is the
          operation we want to test.

Fri Feb 23 15:37:03 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/OS_NS_dirent.inl (alphasort): Use a bigger hammer on the casts.

Fri Feb 23 10:50:41 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/OS_NS_dirent.inl:
          Fixed casts again. Hopefully now I got it right.

Fri Feb 23 08:56:15 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/OS_NS_dirent.inl:
          Added casts to fix compile errors.

        * ace/config-rtems.h:
        * ace/config-vxworks5.x.h:
        * ace/config-vxworks6.2.h:
        * ace/config-vxworks6.3.h:
        * ace/config-vxworks6.4.h:
          Added ACE_LACKS_ALPHASORT.

Thu Feb 22 18:37:00 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.h:
        * ace/Service_Config.inl:
        * ace/Service_Config.cpp:
        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.cpp:

          Fixing build troubles caused by the different ACE_TSS interface
          for single-threaded builds. Eliminated the intermediary class
          (TSS_Resources) and now storing the actual service gestalt
          pointer in TSS, thus reducig the memory allocation overhead.

Thu Feb 22 16:45:30 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/MT_SOCK_Test.cpp: Document the actual cause of what's been
          observed for some time with some Windows systems exhibiting a
          "delayed rejection" of connections in excess of the listener's
          backlog. Thank you to Aleksandar Vukajlovic <vukajlo at finsoft
          dot co dot yu> for citing the full cause with its supporting
          documentation and explanation.

Thu Feb 22 15:59:12 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-win32-common.h: Change the comments around ACE_HAS_PENTIUM
          to more accurately reflect its use and setting. With the switch to
          QueryPerformanceCounter() for high-res timers on Windows, this
          setting doesn't have any affect on timers, but it is used in
          some CDR operations. This resolves Bugzilla #1410.

        * ace/OS_NS_time.inl (gethrtime):
        * ace/gethrtime.cpp: Remove the comments directing the reader to a
          description of using RDTSC on Windows. The comment is long gone, and
          RDTSC isn't used on Windows/VC any longer anyway.

Thu Feb 22 15:07:22 UTC 2007  Ciju John  <johnc@ociweb.com>

        * bin/MakeProjectCreator/modules/GNUACEProjectCreator.pm:
        * bin/MakeProjectCreator/templates/gnu.mpd:
          Additions to support DDS specific build rules and versioning.

Thu Feb 22 13:56:42 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Makefile.am:
          Added Notification_Queue.{h,cpp,inl}:

        * ace/OS_NS_dirent.inl:
          Added include when ACE_LACKS_ALPHASORT is defined

Thu Feb 22 13:03:01 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * Merged changes from the bug_2815 branch.  From revision 77182 to
          revision 77315.

        Tue Feb 20 18:17:00 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/ace_for_tao.mpc:
          Add Notification_Queue.cpp to this file too.  Thanks to Johnny
          Willemsen for pointing this out.

          Mon Feb 19 21:53:58 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Intrusive_List.inl:
          I learned a minute ago that std::swap() was kosher.  Use it in
          favor of ACE_Swap<>.

          Mon Feb 19 21:47:48 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/run_test.lst:
        * tests/Bug_2815_Regression_Test.cpp:
          Adjusted the number of iterations so the test would pass on my
          G4-based laptop without optimizations or inlining.  The previous
          numbers were just guesses anyway and I hope the new numbers will
          result in no failures for the scoreboard.

          Mon Feb 19 21:29:32 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Notification_Queue.cpp:
          Modified the purging algorithm.  The algorithm used a temporary
          list to store the elements not purged, so basically all nodes
          were either moved to the free list or to the temporary list.
          The new algorithm only removes the nodes that needs purging.
          In the vast majority of the cases this is more efficient because
          most nodes are not purged.
          This resulted in a factor of 2 improvement for
          tests/Bug_2815_Regression_Test, keep in mind that in this
          program 1/16th of the nodes are purged.  So in practice I would
          expect even better results.
          I also changed the order in which the free nodes are re-used, I
          think LIFO order has a better chance of re-using the cache, but
          I have no evidence or experiments to prove this.

        * ace/Intrusive_List.h:
        * ace/Intrusive_List.cpp:
          Renamed the remove_i() function to unsafe_remove() and promoted
          its access to "public".  The function is not safe to use in
          general, thus the name, but it resulted in a factor of 2
          performance improvement for ACE_Notification_Queue.

        * tests/Bug_2815_Regression_Test.cpp:
          Fixed memory leaks (in the test not the library)

          Mon Feb 19 20:32:34 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Notification_Queue.h:
        * ace/Notification_Queue.inl:
        * ace/Notification_Queue.cpp:
          Re-factored to use ACE_Intrusive_List in the implementation.
          This eliminates memory allocations during additions and removal
          of elements.  Also, many of the operations cannot fail, so the
          code became smaller.

        * ace/Intrusive_List.h:
        * ace/Intrusive_List.inl:
          Add a swap() member function.

          Mon Feb 19 04:49:35 UTC 2007  coryan  <coryan@atdesk.com>

        * ace/Notification_Queue.h:
        * ace/Notification_Queue.cpp:
        * ace/ace.mpc:
          New class to encapsulate the implementation of a user-space
          based notification queue.  The code was duplicated in both
          Select_Reactor.{h,cpp} and Dev_Poll_Reactor.{h,cpp}

        * tests/tests.mpc:
        * tests/run_test.lst:
        * tests/Notification_Queue_Unit_Test.cpp:
          New unit test for the notification queue class.

        * ace/Dev_Poll_Reactor.h:
        * ace/Dev_Poll_Reactor.cpp:
        * ace/Select_Reactor_Base.h:
        * ace/Select_Reactor_Base.cpp:
          Refactored notification queue code to a new class
          (ACE_Notification_Queue)

        * tests/Bug_2815_Regression_Test.cpp:
          Add code to help with debugging.  Basically my refactoring above
          had at least one bug, and this test uncovered it.  But it was
          hard to debug because there was no single breakpoint to detect
          when the failure condition was triggered.

        * tests:
          Add new files to svn:ignore property.  Also added some old
          files.

        * tests/SSL:
        * include/makeinclude:
          Add missing files to svn:ignore

          Sun Feb 18 21:13:41 UTC 2007  coryan  <coryan@atdesk.com>

        * tests/tests.mpc:
        * tests/Bug_2815_Regression_Test.cpp:
          Add new regression test for bug 2815.  I have not added the test
          to the automated test suite because (1) it fails, and (2) it is
          a test to reproduce performance

Thu Feb 22 12:58:42 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/compiler.bor:
          Removed BCB4/5 support

Thu Feb 22 11:19:59 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/OS_NS_dirent.h:
        * ace/OS_NS_dirent.inl:
          Added ACE_OS::alphasort(). alphasort() is a BSD extension found
          on Linux as well.

        * ace/config-lynxos.h:
          Added ACE_LACKS_ALPHASORT_PROTOTYPE.

        * ace/config-win32-common.h:
          Added ACE_LACKS_ALPHASORT.

        * ace/os_include/os_dirent.h:
          Added alphasort prototype.

        * tests/Dirent_Test.cpp:
          Chaged to use use ACE_OS::alphasort().

Thu Feb 22 09:24:42 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Truncate.h (Truncate, truncate_cast):
          Also renamed the Borland part

Thu Feb 22 04:57:42 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tests/NonBlocking_Conn_Test.cpp (test_connect):

          Fixed syntax error.  s/sizeof ACE_TCHAR/sizeof (ACE_TCHAR)/.

Wed Feb 21 21:46:18 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-pharlap.h:
        * ace/config-WinCE.h:
        * ace/OS_NS_stdio.inl:
        * ace/OS_NS_unistd.inl: Changed ACE_LACKS_SETFILEPOINTEREX to
          ACE_LACKS_WIN32_SETFILEPOINTEREX to be consistent with the other
          ACE_*_WIN32_*things.

        * ace/config-pharlap.h:
        * ace/config-WinCE.h:
        * ace/NT_Service.{h cpp}:
        * examples/NT_Service/nt_svc.h:
        * examples/NT_Service/main.cpp:
          Also added ACE_LACKS_WIN32_SERVICES for Pharlap and CE. This marks
          a platform that is Windows, but doesn't have Windows services.

        * ace/Configuration.{h cpp}:
        * ace/Registry.{h cpp}: Rather than exclude registry-using code using
          ACE_HAS_PHARLAP, use a new setting ACE_LACKS_WIN32_REGISTRY.

        * ace/config-pharlap.h: Added ACE_LACKS_WIN32_REGISTRY.

        * protocols/ace/HTBP/HTBP_Environment.cpp:
        * examples/Reactor/WFMO_Reactor/Registry_Changes.cpp:
        * examples/Registry/test_registry_update.cpp:
        * examples/Registry/test_registry_iterator.cpp:
        * tests/Config_Test.cpp: Don't try registry stuff
          if ACE_LACKS_WIN32_REGISTRY is set.

        * examples/Reactor/WFMO_Reactor/Window_Messages.cpp: Don't try this if
          ACE_LACKS_MSG_WFMO is set.

        * apps/JAWS/server/IO.{h cpp}:
        * apps/JAWS/server/HTTP_Handler.{h cpp}:
        * apps/JAWS/server/HTTP_Server.{h cpp}:
        * apps/JAWS2/JAWS/IO.{h cpp}:
        * apps/JAWS2/JAWS/IO_Acceptor.{h cpp}:
        * apps/JAWS2/JAWS/IO_Handler.{h cpp}:
        * apps/JAWS3/jaws3/Asynch_IO.cpp:
        * examples/APG/Proactor/HA_Proactive_Status.{h cpp}:
        * examples/Connection/blocking/SPIPE-acceptor.{h cpp}:
        * examples/Connection/blocking/test_spipe_acceptor.cpp:
        * examples/Reactor/Proactor/post_completions.cpp:
        * examples/Reactor/Proactor/simple_test_proactor.cpp:
        * examples/Reactor/Proactor/test_cancel.cpp:
        * examples/Reactor/Proactor/test_end_event_loop.cpp:
        * examples/Reactor/Proactor/test_multiple_loops.cpp:
        * examples/Reactor/Proactor/test_proactor.cpp:
        * examples/Reactor/Proactor/test_proactor2.cpp:
        * examples/Reactor/Proactor/test_proactor3.cpp:
        * examples/Reactor/Proactor/test_timeout.cpp:
        * examples/Reactor/Proactor/test_timeout_st.cpp:
        * examples/Reactor/Proactor/test_udp_proactor.cpp:
        * examples/Reactor/WFMO_Reactor/Talker.cpp:
          Decide on whether or not to compile the asynch support classes
          based on ACE_HAS_WIN32_OVERLAPPED_IO, not ACE_WIN32. ACE_WIN32
          is broader than that overlapped I/O-capable ones; Pharlap ETS
          doesn't do overlapped I/O, for instance.

Wed Feb 21 19:27:14 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/Array_Base.cpp (size):

          Simplified return value logic.

        * ace/Auto_Ptr.h (ACE_auto_ptr_reset):

          Added missing "brief" documentation.

        * ace/Caching_Strategies_T.inl:
        * ace/Svc_Handler.cpp (init):

          Removed unnecessary uses of ACE_UNUSED_ARG macro.  Just comment
          out the parameter name instead.

        * ace/DLL_Manager.cpp (unload_all):
        * ace/Functor.inl (operator()):
        * ace/OS_NS_unistd.h (sbrk):
        * ace/OS_NS_unistd.inl (sbrk):
        * ace/Parse_Node.cpp:
        * ace/Timer_Hash_T.cpp:

          Corrected type used to store pointer value.
          s/ptrdiff_t/{u}intptr_t/.

        * ace/SOCK_Dgram.cpp:

          Fixed unused argument warning.

        * ace/String_Base_Const.cpp:

          Workaround npos constant run-time initialization problem in some
          mixed shared/static linking conditions by making it easy for the
          compiler to embed the value of the constant in the object file
          at compile-time.

        * ace/Truncate.h (Truncate, truncate_cast):

          Deprecated ACE_Utils::Truncate() function name in favor of
          ACE_Utils::truncate_cast().  The latter better reflects what the
          function template actually does.

        * ace/Unbounded_Set.cpp:
        * ace/Unbounded_Set.h:
        * ace/Unbounded_Set.inl:

          Implement find() method in terms of begin/end iterators to prevent
          search from looping indefinitely under some race condition
          scenarios.

          Added missing const_iterator factory methods.

          Added missing const_iterator equality and inequality operators.

        * ace/OS_NS_unistd.inl:
        * ace/Time_Value.inl:
        * ace/Token_Request_Reply.inl:
        * ace/FILE_IO.cpp:
        * ace/Filecache.cpp:
        * ace/High_Res_Timer.cpp:
        * ace/Log_Record.cpp:
        * ace/MMAP_Memory_Pool.cpp:
        * ace/Mem_Map.cpp:
        * ace/Message_Queue.cpp:
        * ace/Message_Queue_T.cpp:
        * ace/Name_Request_Reply.cpp:
        * ace/Process.cpp:
        * ace/SOCK_Dgram.cpp:
        * ace/SOCK_IO.cpp:
        * ace/Timer_Hash_T.cpp:

          s/ACE_Utils::Truncate/ACE_Utils::truncate_cast/g.  The former is
          deprecated.

        From Andrew Schnable
        * ace/os_include/os_unistd.h (X_OK):

          Windows has no access() test for X_OK.  Use R_OK instead.

        From Russell Mora
        * ace/ACE.inl (hex2byte):
        * ace/Capabilities.h (is_line, is_empty):
        * ace/Capabilities.cpp (parse, fillent, is_entry, is_empty, is_line):
        * ace/Get_Opt.cpp (long_option):
        * ace/OS_NS_ctype.inl (ace_isalnum):

          Added ACE::ace_isalnum, ACE::ace_isdigit and ACE::ace_islower
          and changed to use them where appropriate.  This prevents the
          narrow char versions being called with wide chars.

        * ace/Asynch_IO.cpp:

          Fixed preprocessor scoping issue in builds where
          ACE_HAS_AIO_CALLS is undefined and versioned namspaces are
          enabled.   ACE_END_VERSIONED_NAMESPACE_DECL ended up being
          preprocessed when it should not have.

        * ace/Configuration_Import_Export.cpp (export_config):

          Check the return value of fclose() is required because data may
          have been buffered and will be fflush()d with the fclose().

        * ace/Log_Msg.h:
        * ace/Log_Msg.cpp:

          Changed message offset to correct type, ptrdiff_t, since it
          contains a pointer difference value.

        * ace/Null_Semaphore.h:

          Added include to get definition of size_t.  This is required for
          static single-threaded builds on Darwin.

        * ace/OS_NS_stdio.inl (cuserid):

          Check for unexpected failure of getpwuid function; don't
          dereference null pointer.

        * ace/Process.cpp (spawn):

          On Windows platforms a process handle is a pointer, not an int.
          Corrected format specifiers accordingly.

        * ace/RB_Tree.cpp (remove_i):

         Fixes for Coverity REVERSE_INULL issues.  Check for null pointer
         before dereferencing.

        * ace/Recursive_Thread_Mutex.cpp (get_nesting_level):

          Reverted change that altered implementation for IA64 Windows
          builds.  The returned nesting level was incorrect.  Use the
          implementation used by both 32-bit and AMD 64 bit builds.

        * tests/Recursive_Mutex_Test.cpp (test_recursion_depth):

          Added test cases for the above problem.

        * ace/SOCK_Connector.cpp (shared_connect_finish):

          On Windows, in order to detect when the socket that has been
          bound to is in TIME_WAIT we need to do the connect (which will
          always return EWOULDBLOCK) and then do an
          ACE::handle_timed_complete() (with timeout==0, i.e. poll).  This
          will do a select() on the handle which will immediately return
          with the handle in an error state.  The error code is then
          retrieved with getsockopt().

          Good sockets however will return from the select() with ETIME -
          in this case return EWOULDBLOCK so the wait strategy can
          complete the connection.

        * ace/Service_Manager.cpp (list_services):

          Type conversion - it is unlikely the name of the service is a
          string bigger than 2GB (on 32-bit systems) so a static_cast<> is
          safe here.

        * ace/Svc_Conf_Lexer.cpp (scan):

          Changed the loop indexing to allow loop variable to be the same
          type as variable used to initialise the loop.  This avoids
          conversion warnings.

          (yylex):

          Fixed unused variable warning.

        * ace/UNIX_Addr.inl (set):

          Correct wide string to narrow string conversion.

        * ace/config-cxx-common.h:

          Eliminated copious amounts of warnings.

        * ace/config-linux.h (ACE_HAS_CLOCK_GETTIME):
        * ace/config-linux-common.h (ACE_HAS_CLOCK_GETTIME):

          On linux clock_gettime/clock_settime are not available for
          single-threaded builds.

        * ace/os_include/os_dlfcn.h (ACE_DEFAULT_SHLIB_MODE):

          Added DYNAMIC_PATH to the default flags used to call shl_load()
          on HP 11.00 (PARISC1.1/32-bit) so that RPATH and SHLIB_PATH are
          searched to find the requested .sl.

        * bin/MakeProjectCreator/templates/gnu.mpd (FORCED_IDL_STUBS):

          PCH source files are also dependent on the IDL compiler
          generated files.

        * include/makeinclude/platform_hpux_aCC.GNU (SONAME):

          HP platform (non-g++) was missing the appropriate LDFLAGS for
          building versioned shared libraries.  Copied from the hpux
          section of platform_g++_common.GNU.

          Disable warnings when 64 bit file offsets are enabled in HP
          11.11 builds.

        * include/makeinclude/platform_irix6.x_sgic++.GNU (AR, ARFLAGS):

          By default IRIX uses a prelinker to instantiate templates, thus
          archives need to be created via CC (using the -ar option) so
          that the required templates can be instantiated.  This was the
          cause of the missing symbols problems reported by users of the
          static libraries.

        * include/makeinclude/platform_tru64_cxx.GNU:

          It seems that the default debug level in the Compaq C++ compiler
          really goes to town when a template is instantiated - it seems
          to add debug information for every scrap of code that the
          template instantiation ever see resulting in debug template
          instantiations that are up to 1000x bigger than their release
          counterparts.  Dialing the level back down to -g1 (-g2 is the
          default) seems to avoid this issue and we still get debug
          symbols for the template instantiation itself.

        * tests/NonBlocking_Conn_Test.cpp (test_connect):

          Fixed potential buffer overrun error.

        From Duane Binder
        * ace/ace_wchar.h:

          Added ACE_TEXT_ macros needed by some apps.

        * ace/Process.inl (creation_flags):
        * ace/Naming_Context.cpp:
        * ace/Registry_Name_Space.cpp:
        * ace/Registry_Name_Space.h:

          Use ACE_USES_WCHAR not UNICODE.  Whether ACE uses Windows
          wchar_t APIs is controlled by ACE_USES_WCHAR and not UNICODE.

        * include/makeinclude/platform_freebsd.GNU:

          Remove pthread and semaphore references for singled threaded
          FreeBSD builds.

        * include/makeinclude/platform_linux.GNU (LIBS):

          Prevent single threaded linux builds from linking libpthread
          (via librt).

        * include/makeinclude/rules.lib.GNU:

          Not all static libraries have template instantiations.  Test if
          $(TEMPINCDIR) exists before trying to add objects in an archive
          library (was a problem on Tru64 with debug builds).

Wed Feb 21 14:23:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added bug 1592 regression

Tue Feb 20 17:56:25 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * COPYING: Clarified how the COPYING file need to be included with
          any code released.  Thanks to Scott Mark <sjm at pobox dot com>
          for helping clarify this.

Wed Feb 21 08:35:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Swap.{h,cpp,inl}:
          Removed, use std::swap instead of ACE_Swap

        * ace/ace.mpc:
        * ace/ace_for_tao.mpc:
        * ace/Makefile.am:
          Removed Swap.{h,cpp,inl}

Wed Feb 21 08:13:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/IPC_SAP/SSL_SAP/SSL-server-poll.cpp:
        * examples/IPC_SAP/SSL_SAP/SSL-server-simple.cpp:
        * examples/IPC_SAP/SSL_SAP/SSL-server.cpp:
          Fixed compile problems when wchar is enabled

Tue Feb 20 19:15:30 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/run_test.lst:

          Adding Object_Manager_Flipping_Test to the list of running
          tests.

Tue Feb 20 18:08:47 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/Object_Manager_Flipping_Test.cpp:
        * tests/tests.mpc:

          Adding new test verifying that after ACE::fini has been called,
          the correct pointer value has been stored in TSS for the Service
          Config.  A subsequent call to ACE::init may SEGV
          otherwise. Thanks to Bjoern Rasmussen <bjoern.d.rasmussen at
          gmail dot com> for reporting it.

Tue Feb 20 17:15:37 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * ace/config-qnx-rtp.h:
        * include/makeinclude/platform_qnx_rtp_gcc.GNU:

          Moved the version detection from the platform_macros file to the
          config file.  This allows us to use the QNX system-defined macro
          _NTO_VERSION, which works in cross-compile environments.  The old
          method of reading the version number from the "uname -a" output is
          not compatible with cross-compilation.

Tue Feb 20 16:38:24 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/templates/gnu.mpd
        * bin/MakeProjectCreator/config/global.features

          Added logic in gnu template for new XSC custom type in CIAO,
          and disabled xsc by default in global.features.

Tue Feb 20 16:12:57 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/Bug_2820_Regression_Test.cpp: ACEify use of auto_ptr.

Tue Feb 20 16:06:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_stdlib.h:
          Simplified the ACE_RANDR_TYPE define setting

        * ace/OS_NS_stdio.inl:
        * ace/SOCK_Dgram.cpp:
        * ace/WFMO_Reactor.cpp:
          Simplified Borland C++ checks, no need to check for the version
          number

Tue Feb 20 15:54:20 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/OS_NS_Thread.cpp:

          Reverted my change to check PTHREAD_STACK_MIN.  I just realized
          that it may not be defined as an integral value (i.e., Solaris).

Tue Feb 20 15:46:06 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/OS_NS_Thread.cpp:

          Added ACE_UNUSED_ARG(id) for RTEMS and modified code to check
          that size (which is of type size_t) is less than PTHREAD_STACK_MIN
          only if PTHREAD_STACK_MIN is greater than zero.

        * ace/OS_NS_stdlib.cpp:

          Fixed a compile error on VxWorks where an attempt to cast
          ACE_thread_t to ACE_RANDR_TYPE failed (since ACE_thread_t is char*
          on VxWorks).

        * ace/SOCK_Dgram.cpp:

          The iov_len element of the iovec struct is unsigned on RTEMS (as
          it is with Linux and Borland C++), so use the same #if check to
          avoid code that causes warnings.

Tue Feb 20 15:06:04 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/SOCK_Dgram.cpp:

          The iov_len element of the iovec struct is unsigned on Linux (as
          it is with Borland C++), so use the same #if check to avoid code
          that causes warnings.

        * ace/Containers_T.cpp:
        * ace/Timer_Heap_T.cpp:
        * ace/UPIPE_Stream.cpp:
        * ace/UUID.cpp:

          Added static_cast<> to avoid conversion warnings.

Tue Feb 20 15:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * m4/compiler.m4:
          Fixed support for --enable-symbol-visibility. This fixes bugzilla
          bug 2771, thanks to Waba <waba-ace at waba dot be> for reporting
          this.

Tue Feb 20 14:43:00 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ASNMP/asnmp/pdu.cpp:
        * apps/JAWS2/JAWS/Cache_Manager.cpp:

          Added a check for self assignment.

        * ace/INET_Addr.cpp:
        * tests/Multicast_Test_IPV6.cpp:
        * examples/Web_Crawler/Command_Processor.cpp:

          Removed redundant code to avoid "statement is unreachable"
          warnings.

        * examples/APG/Naming/Temperature_Monitor.cpp:
        * examples/APG/Naming/Temperature_Monitor2.cpp:
        * examples/APG/Streams/Answerer.cpp:
        * examples/C++NPv1/Logging_Server.cpp:
        * examples/C++NPv1/Process_Per_Connection_Logging_Server.cpp:
        * examples/C++NPv1/Thread_Per_Connection_Logging_Server.h:

          Added ACE_NOTREACHED around unreachable code to avoid "statement
          is unreachable" warnings.

        * examples/Connection/blocking/SPIPE-acceptor.cpp:

          Reverted a bug that was introduced many years ago where threads
          would be spawned and then the main thread would exit.

        * performance-tests/SCTP/SOCK_SEQPACK_clt.cpp:
        * performance-tests/SCTP/SOCK_SEQPACK_srv.cpp:
        * performance-tests/SCTP/SOCK_STREAM_srv.cpp:

          Modified to only compile code if ACE_HAS_SCTP is defined.

        * tests/INET_Addr_Test.cpp:

          Check addr.get_host_addr() for non-zero before passing it to
          ACE_OS::strcmp().

Tue Feb 20 03:08:26 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/tests.mpc:
        * tests/Bug_2820_Regression_Test.cpp:
          A new test to demonstrate the problems in bug 2820.

Mon Feb 19 23:13:07 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/WFMO_Reactor.h: Clarify description of ok_to_wait().

        * ace/WFMO_Reactor.cpp (ok_to_wait): Since WinCE can't use the
          waitAll arg to atomically wait for both the lock and ok_to_wait
          event, use a 2-step process to get both individually. This avoids
          entering wfmo either without the ok_to_wait event or without
          the lock. Thanks to Craig Johnson for reporting this. Also see:
          Mon Oct 16 14:24:25 UTC 2006  Steve Huston  <shuston@riverace.com>

Mon Feb 19 21:02:55 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Atomic_Op.inl:
        * ace/OS_NS_unistd.inl: Adjust code for less-than-modern Win32 systems
          such as Pharlap ETS to work with 64 bit file offsets and the lack
          of interlocked exchange-add.

Mon Feb 19 18:33:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SSL/SSL_Context.h:
          Layout change

        * ace/SSL/SSL_Context.inl (check_context):
          Set the verify mode correctly, fixes bugzilla bug 2819

Mon Feb 19 12:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_other_tests.lst:
          Added Secure_Invocation test, this tests basic functionality but
          seems to fail at this moment because of some broken support in
          TAO

Fri Feb 16 23:48:55 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.cpp:

          ACE_INLINE makes sense in .inl files (thanks Steve)

Fri Feb 16 13:38:04 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Dependency.cpp:
        * ace/Service_Config.h:
        * ace/Service_Config.inl:
        * ace/Service_Config.cpp:
        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.inl:
        * ace/Service_Gestalt.cpp:

          Reverting my changes since "Tue Feb 13 15:35:54 UTC 2007" as it
          has been causing problems, in particular with borland and
          no-threads builds.

Fri Feb 16 12:47:03 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Service_Config.cpp (global): Removed the ACE_INLINE qualifier
          from global() - if it's in the .cpp file, it shouldn't be marked
          as inline, and isn't marked thusly in the .h file. Fixes unsats.

        * ace/Service_Config.h: Fixed spelling error.

Thu Feb 15 20:04:01 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * ace/OS_NS_stdlib.cpp (mkstemp_emulation):

          Include process and thread ID in random number generator seed
          value.  Addresses problems where the same seed value would end
          up being used for different processes and/or threads, resulting
          in identical filenames being generated.

          Addressed potential race condition on platforms that do not
          inline the value of ACE_Numeric_Limits<>::max().

Thu Feb 15 17:53:53 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * THANKS: Check-in rules 101: Check-in files that you have
          modified.  Don't ever forget this basic rule.

Thu Feb 15 13:50:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Stream.h:
        * ace/Connector.h:
        * ace/DEV_IO.h:
        * ace/FIFO_Recv.h:
        * ace/FIFO_Send.h:
        * ace/FIFO_Send_Msg.h:
        * ace/FILE_IO.h:
        * ace/INET_Addr.h:
        * ace/Local_Memory_Pool.h:
        * ace/Malloc_Base.h:
        * ace/MEM_IO.h:
        * ace/Mem_Map.h:
        * ace/MEM_SAP.h:
        * ace/MEM_Stream.h:
        * ace/Message_Block.h:
        * ace/MMAP_Memory_Pool.h:
        * ace/OS_NS_unistd.h:
        * ace/Pipe.h:
        * ace/Process_Manager.h:
        * ace/QoS/SOCK_Dgram_Mcast_QoS.h:
        * ace/Service_Types.h:
        * ace/Shared_Memory_Pool.h:
        * ace/SOCK_Dgram.h:
        * ace/SOCK_Dgram_Mcast.h:
        * ace/SOCK_IO.h:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/SPIPE_Stream.h:
        * ace/Stream.h:
        * ace/Task.h:
        * ace/Thread.h:
        * ace/Thread_Manager.h:
        * ace/UPIPE_Stream.h:
          Doxygen improvements

Thu Feb 15 13:38:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ATM_Connector.h:
        * ace/DEV_Connector.h:
        * ace/DEV_IO.h:
        * ace/Dev_Poll_Reactor.h:
        * ace/FILE_Connector.h:
        * ace/Hash_Map_Manager_T.h:
        * ace/IOStream_T.h:
        * ace/LOCK_SOCK_Acceptor.h:
        * ace/Map_Manager.h:
        * ace/MEM_IO.h:
        * ace/MEM_SAP.h:
        * ace/MEM_Stream.h:
        * ace/Message_Block.h:
        * ace/Message_Queue.h:
        * ace/Message_Queue_T.h:
        * ace/Module.h:
        * ace/Proactor.h:
        * ace/Reactor.h:
        * ace/Reactor_Impl.h:
        * ace/Select_Reactor_T.h:
        * ace/Sig_Handler.h:
        * ace/Signal.h:
        * ace/SOCK.h:
        * ace/SOCK_Acceptor.h:
        * ace/SOCK_Dgram.h:
        * ace/SOCK_IO.h:
        * ace/SOCK_SEQPACK_Acceptor.h:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/SPIPE_Connector.h:
        * ace/Stream.h:
        * ace/Svc_Handler.h:
        * ace/Task_Ex_T.h:
        * ace/Task_T.h:
        * ace/Thread_Manager.h:
        * ace/TLI_Acceptor.h:
        * ace/TLI_Connector.h:
        * ace/Token.h:
        * ace/WFMO_Reactor.h:
        * ace/XTI_ATM_Mcast.h:
          Doxygen improvements

Thu Feb 15 13:12:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/OS/Process/imore.cpp:

          Removed an enclosing block around code that caused issue with
          SunCC 5.8.  There was a comment claiming that the block was needed
          so that the ACE_Process_Options could elegantly close the file
          handlers that it kept, however the ACE_Process_Options object does
          not close the file handlers.  The ACE_Process does the handle
          closing.

Thu Feb 15 05:41:11 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Gestalt.inl:
        * ace/Service_Gestalt.cpp:

          Moved find off-line because it requires a full declaration of
          ACE_Service_Repository, which is unavailable when the inl file
          is compiled (inlining on)

Wed Feb 14 23:05:16 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.h:
        * ace/Service_Config.inl:
        * ace/Service_Config.cpp:
        * ace/Service_Gestalt.h:
        * ace/Service_Gestalt.cpp:

          Moved the ACE_Unmanaged_Singleton usage to the implementation
          file and eliminated the unnecesary #includes, aiming to reduce
          the footprint.

Wed Feb 14 19:56:14 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * ace/Service_Config.h:
          s/TAO_Export/ACE_Export/

Wed Feb 14 19:21:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added bug 2809 regression

Wed Feb 14 17:33:22 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.h:
          Fixing a compile problem with g++ and borland compiler, which
          treat members of private nested classes as "hidden" even when
          the enclosing type has been exported.

Wed Feb 14 12:59:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Acceptor.h:
          Doxygen improvement

Wed Feb 14 11:31:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_stdio.h:
        * ace/os_include/os_unistd.h:
          Move ACE_STDIN, ACE_STDOUT and ACE_STDERR from stdio to unistd
          file and use STDIN_FILENO, STDOUT_FILENO and STDERROR_FILENO if
          these are defined yet, this way we use the same defines and header
          files as in the posix specification. This fixes bugzilla bug 2731.
          Thanks to Abdul Sowayan <abdullah dot sowayan at lmco dot com>
          for reporting this.

        * ace/Truncate.h:
          Added another const specialization for Borland C++

Wed Feb 14 11:03:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Process_Manager_Test.cpp:
          Added test code from bugzilla 2797, thanks to Yves Alloyer
          <alloyer at ipanematech dot com> for reporting this.

Wed Feb 14 10:06:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_other_tests.lst:
          Added TAO/orbsvcs/tests/Bug_2800_Regression/run_test.pl

Wed Feb 14 08:53:58 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Active_Map_Manager_T.h:
        * ace/Cache_Map_Manager_T.h:
        * ace/CDR_Size.h:
        * ace/CDR_Stream.h:
        * ace/Configuration.h:
        * ace/Dev_Poll_Reactor.h:
        * ace/Future.h:
        * ace/Future_Set.h:
        * ace/Hash_Cache_Map_Manager_T.h:
        * ace/High_Res_Timer.h:
        * ace/INET_Addr.h:
        * ace/IO_SAP.h:
        * ace/IPC_SAP.h:
        * ace/Map_T.h:
        * ace/MEM_SAP.h:
        * ace/Message_Block.h:
        * ace/Msg_WFMO_Reactor.h:
        * ace/Multihomed_INET_Addr.h:
        * ace/Priority_Reactor.h:
        * ace/Reactor.h:
        * ace/Reactor_Impl.h:
        * ace/Recursive_Thread_Mutex.h:
        * ace/Registry.h:
        * ace/Semaphore.h:
        * ace/Shared_Memory_MM.h:
        * ace/Shared_Memory_SV.h:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/Thread_Mutex.h:
        * ace/Timeprobe_T.h:
        * ace/WFMO_Reactor.h:
          Doxygen improvements

        * ace/Truncate.h:
          Fixed compile problems with Borland C++, thanks to Ossama for
          giving a solution.

Tue Feb 13 20:33:58 UTC 2007  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * THANKS: Added gzeleniy@gmail.com to the THANKS list.

Tue Feb 13 15:35:54 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ace/Service_Config.{h,inl,cpp}:

          Refactoring to simplify the TSS usage, reduce overhead and
          eliminate a memory leak.

        * ace/Service_Gestalt.cpp:

          Fixed a memory leak in Service_Type_Dynamic_Guard dtor. Updated
          logging.

        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Dependency.cpp:

          Updated to use SC::instance () to better express the contract
          for these classes. They simply don't need to be aware whether
          they are using a global, or a TSS-local gestalt .

Tue Feb 13 14:44:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks5.x.h:
          Removed VxWorks 5.4.2 support, we haven't build for it in years

Tue Feb 13 12:58:13 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ACEXML/common/Exception.h:
        * ACEXML/common/Exception.cpp:
        * ACEXML/common/SAXExceptions.h:
        * ACEXML/common/SAXExceptions.inl:
        * ACEXML/common/SAXExceptions.cpp:

          Changed the print() and message() methods to const.  There was no
          reason for thease to be non-const and it makes it possible to
          catch const references of the ACEXML exception types.

Mon Feb 12 20:24:04 UTC 2007  Steve Huston  <shuston@riverace.com>

        * examples/Logger/Acceptor-server/server_loggerd.cpp (handle_input):
        * examples/Logger/simple-server/Logging_Handler.cpp (handle_input):
          Log the host name of the peer, not "<localhost>", as previous code
          did; also make sure to put it in ACE_TCHAR form. See also
          Thu Feb  8 23:09:59 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

Mon Feb 12 19:20:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CORBA_macros.h:
          Fixed several macros which where using () around the exception
          to be thrown

Mon Feb 12 18:10:42 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Name_Request_Reply.cpp (timeout):
        * netsvcs/lib/Time_Request_Reply.cpp (timeout, decode):
          Truncate 64-bit time value down to the platform's time_t size.

Mon Feb 12 15:18:42 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/fuzz.pl:

          Check for the use of ACE_THROW_SPEC in TAO or CIAO code only.
          It's usage within ACE is still ok in some situations.

Mon Feb 12 14:44:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Removed old todo's, extended msvc ver check

        * ace/Codeset_IBM1047.cpp:
        * ace/Functor.cpp:
        * ace/Functor.inl:
        * ace/Hash_Map_Manager_T.cpp:
        * ace/Hash_Multi_Map_Manager_T.cpp:
        * ace/Sched_Params.cpp:
        * ace/Sched_Params.inl:
          Converted to doxygen style documentation

        * bin/doxygen-convert-h.pl:
          Only handle source files

Mon Feb 12 14:38:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CORBA_macros.h:
          Use ACE_LACKS_DEPRECATED_MACROS to make it possible to build without
          all the emulated exception macros. Will make sure people can't use them
          anymore in core code without noticing that

        * ace/Global_Macros.h:
          Just define ACE_THROW_SPEC again as about a week ago, we need a fuzz check
          to make sure people don't use this anymore in TAO

        * ace/Reactor.h:
          Layout change

        * tests/Thread_Manager_Test.cpp:
          Layout change to debug message

Mon Feb 12 14:35:25 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/doxygen-convert-h.pl:

          Allow filenames or directories.  If a directory is passed, it is
          recursively searched for any file.

Mon Feb 12 13:57:06 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/*.doxygen:
          Removed ACE_THROW_SPEC

Sat Feb 10 23:13:06 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Svc_Conf_Lexer.cpp (ace_yy_buffer_state): Disable VC8 warning
          C4351 (input_ elements will be default-initialized) for this
          block. The new behavior is good and desireable, so the warning
          noise can be silenced in this case.

        * ace/Timer_Hash_T.cpp (reschedule, schedule_i): When calculating the
          hash value, truncate the seconds value down to size_t range because
          the modulo value used to hash is a size_t. Avoids a compile warning
          about losing data when time_t is larger than size_t.

Fri Feb  9 21:40:02 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/High_Res_Timer.inl:
        * ace/High_Res_Timer.cpp:

          Removed ACE_WIN32 specific code in ACE_High_Res_Timer to reflect
          the change in the default value of ACE_HR_SCALE_CONVERSION.
          Removed uses of ACE_HRTIME_CONVERSION and use
          ACE_Utils::Truncate instead.

        * ace/OS_NS_time.h:

          Changed the check for defining ACE_HRTIME_CONVERSION and
          ACE_HRTIME_TO_U64 from ACE_HRTIME_T_IS_BASIC_TYPE to
          ACE_LACKS_UNSIGNEDLONGLONG_T.

        * tests/High_Res_Timer_Test.cpp:

          Updated the test to use ACE_Utils::Truncate instead of
          static_cast which caused 0 to be output when time_t is 64-bit.

Fri Feb  9 12:19:57 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/rm_exception_macros.pl:

          Fixed a bug where the end of the ACE_THROW_SPEC would not be
          recognized.

Thu Feb  8 23:09:59 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * examples/Logger/Acceptor-server/server_loggerd.cpp (handle_input):
        * examples/Logger/simple-server/Logging_Handler.cpp (handle_input):
        * examples/Logger/client/logging_app.cpp (ACE_TMAIN): Fixed these
          programs to use the proper (new) formatting for ACE_Log_Record.
          Thanks to Mouna Seri <seri at crhc dot uiuc dot edu> for
          reporting this.

Thu Feb  8 19:40:30 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Makefile.am:
        * ace/ace.mpc:
        * ace/Time_Request_Reply.{h cpp}:
        * netsvcs/lib/Makefile.am:
        * netsvcs/lib/lib.mpc:
        * netsvcs/lib/Time_Request_Reply.{h cpp}: Moved Time_Request_Reply
          from ace to netsvcs; it's only used from netsvcs and is only useful
          as an example of some ACE usage. Real time synch needs should be
          met using NTP.

        * ace/Name_Request_Reply.{h cpp}: Changed the sec_timeout_ transfer
          member from ACE_UINT32 to ACE_UINT64 to accomodate 64-bit time_t.

        * netsvcs/lib/TS_Clerk_Handler.h:
        * netsvcs/lib/TS_Server_Handler.h: Time_Request_Reply.h now is included
          from netsvcs/lib, not ace.

        * netsvcs/lib/Time_Request_Reply.{h cpp}: Changed the time-passing
          API arguments in the constructor and time() methods from ACE_UINT32
          to time_t. The on-wire protocol buffer fields that carry seconds
          values between clerk and server were changed from ACE_UINT32 to
          ACE_UINT64 to accomodate 64-bit time_t values.

        * NEWS: Explained the user-visible ramifications of these changes.

Thu Feb  8 09:23:50 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/MMAP_Memory_Pool.cpp:
          Removed empty else statement.

        * include/makeinclude/platform_linux.GNU:
          Fixed TCL/TK settings

Thu Feb  8 08:03:57 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/config-openbsd.h:
          Removed ACE_LACKS_CLEARERR and added ACE_HAS_3_PARAM_READDIR_R.

Wed Feb  7 23:04:49 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * bin/tao_other_tests.lst:

          Added two existing Notify Service examples into the autotest list.

Wed Feb  7 21:01:39 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Added a bit of info about building for National
          Instruments' LabVIEW RT which uses Pharlap ETS. In particular, if
          building for LabVIEW's Pharlap, add #define ACE_PHARLAP_LABVIEW_RT
          to your config.h file along with #include "ace/config-pharlap.h"
          to adjust for slight differences between stock Pharlap and
          LabVIEW RT's variant.

        * ace/config-pharlap.h: Pharlap doesn't supply InterlockedExchangeAdd
          and doesn't do SetFilePointerEx (needs ACE_LACKS_SETFILEPOINTEREX).

        * ace/OS_NS_Thread.cpp (sched_params): Don't attempt SetPriorityClass
          on Pharlap - it's not defined.

        * ace/OS_NS_Thread.inl (thr_getprio): For Pharlap ETS, use
          EtsGetTimeSlice() to determine the scheduling policy; if the time
          slice is anything other than 0, it's multitasking ACE_SCHED_OTHER.

        * ace/OS_NS_stdio.inl (cuserid): Pharlap doesn't go GetUserName() so
          make it ACE_NOTSUP_RETURN.
          (adjust_flock_params): Use SetFilePointer() instead of
          SetFilePointerEx(), even with 64 bit offsets, if
          ACE_LACKS_SETFILEPOINTEREX is set.

        * ace/OS_NS_unistd.inl (pwrite): For Windows platforms without
          overlapped I/O, don't rely on availability of SetFilePointerEx -
          platforms that have it also have overlapped I/O. In this case, use
          SetFilePointer with appropriate call differences for 32/64 bit
          file offsets.

        * ace/Pagefile_Memory_Pool.{h inl cpp}: Pharlap doesn't do this class.

        * ace/Configuration.{h cpp}:
        * ace/Registry.{h cpp}: The Windows registry is not available in
          Pharlap.

Wed Feb  7 14:44:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/rm_exception_macros.pl:

          Added the ability to remove the ACE_THROW_SPEC's completely.

Tue Feb  6 16:44:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Global_Macros.h:
          For the moment expand ACE_THROW_SPEC to nothing, we want to deprecate
          this in TAO and want to see the impact of this on the tests

Tue Feb  6 15:36:00 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Time_Value.inl: Remove the #if around #include "ace/Truncate.h"
          because ACE_Utils::Truncate is needed in a case that's not in a
          ACE_HAS_TIME_T_LONG_MISMATCH block.

Mon Feb  5 19:58:39 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/Log_Record.cpp (operator>>): Use ACE_Utils::Truncate to truncate
          the received 64-bit time seconds to time_t.

Mon Feb  5 17:16:20 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-win32-msvc-8.h: Added a new setting for Windows VC8,
          ACE_HAS_TIME_T_LONG_MISMATCH, to capture the case that requires
          a replacement timeval def. See the following for details:
          Thu Feb  1 23:46:27 UTC 2007  Steve Huston  <shuston@riverace.com>
          This change isolates just the desktop VC8 compiler for the change,
          avoiding compilers that don't need it and/or can't deal with
          the code.

        * ace/Time_Value.{h inl}: Change code that uses a replacement timeval
          from ACE_WIN32 to ACE_HAS_TIME_T_LONG_MISMATCH.

Fri Feb  2 14:45:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Dynamic_Service_Base.cpp:
          Fixed compile error

Fri Feb  2 14:32:06 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:
          Modified default behavior (if no -a, -o, -t, -C options are given)
          so that the script looks for TAO in $TAO_ROOT as well as
          $ACE_ROOT/TAO and similarly for CIAO.  This change supports the peer
          style layout.

Fri Feb  2 14:08:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/rm_exception_macros.pl:
          Also zap ACE_THROW_RETURN from application code, that is also
          deprecated now

Fri Feb  2 12:03:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/TSS_T.cpp:
          Fixed merge error

Fri Feb  2 11:43:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * include/makeinclude/platform_hpux_aCC.GNU:
          Supress 3.xx warnings about non-return from functions
          (Anoyingly it doesn't seem to think that a throw
          terminates the execution flow of a function.)

Fri Feb  2 10:47:55 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/Proactor.cpp:
          Layout change.

        * ace/config-lynxos.h:
          Enabled POSIX_SIG_PROACTOR and made some cleanups.

        * ace/os_include/net/os_if.h:
          Removed LynxOS specific include.

        * tests/Proactor_Test.cpp:
        * tests/Proactor_Test_IPV6.cpp:
          Enabled these tests again even if ACE_HAS_BROKEN_SIGEVENT_STRUCT
          is defined.

Fri Feb  2 10:31:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CORBA_macros.h:
          Removed workaround for ACE_THROW_RETURN for HP aCC compiler. This is
          only needed for the HP 3.x compiler and we can suppress just this
          warning. When this has been build on the scoreboard we will
          zap the usage of this macro.

        * ace/Dynamic_Service.cpp:
        * ace/Dynamic_Service_Base.cpp:
        * ace/Service_Config.{h,cpp}:
        * ace/Service_Gestalt.cpp:
        * ace/TSS_T.cpp:
          Layout changes

        * ace/Thread_Manager.cpp:
          Const improvement

Fri Feb  2 06:56:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/ACETAOCIAO.style:
          Configuration file for profactor (see www.profactor.co.uk), a
          code beautifier tool that we want to use to reformat the code
          in ACE/TAO/CIAO.

Fri Feb  2 06:48:40 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/POSIX_CB_Proactor.h:
        * ace/config-aix-5.x.h:
        * ace/config-freebsd.h:
        * ace/config-integritySCA.h:
        * ace/config-macosx-panther.h:
        * ace/config-macosx-tiger.h:
        * ace/config-macosx.h:
        * ace/config-rtems.h:
        * ace/config-sunos5.4-g++.h:
        * ace/config-sunos5.4-sunc++-4.x.h:
        * ace/config-sunos5.5.h:
        * ace/config-vxworks5.x.h:
        * ace/config-vxworks6.2.h:
        * ace/config-vxworks6.3.h:
        * ace/config-vxworks6.4.h:

          Removed unnecessary sigval_t typedef and feature test macro
          ACE_LACKS_SIGVAL_T

Thu Feb  1 23:46:27 UTC 2007  Steve Huston  <shuston@riverace.com>

        * NEWS: Note change to ACE_Log_Record constructor.

        * ace/Log_Record.h (constructor): The "long time_stamp" argument was
          changed from long to time_t to correspond with what's expected.

        * ace/Log_Record.{h inl cpp}: The secs_ value was changed from
          ACE_UINT32 to time_t and is handled as a ACE_CDR::LongLong in the
          CDR insertion and extraction operators. The encode() and decode()
          methods are deprecated and will be removed in a future version of
          ACE.

        * ace/Message_Block.cpp (priority_status): Cast sec() value to
          suseconds_t size to avoid truncation warnings.

        * ace/Time_Value.{h inl cpp}: Use a private struct to manage time
          internally for Windows since Windows' struct timeval uses long
          values internally instead of the standard time_t/suseconds_t
          that the class API uses (and POSIX uses in timeval). When a
          real OS-defined timeval is needed, build it on the fly for Windows.

        * tests/High_Res_Timer_Test.cpp: When logging ACE_Time_Value-obtained
          sec/usec values, truncate them down to u_int size. Avoids passing
          64-bit values to ACE_Log_Msg when only 32 bits will be taken from
          the arg vector for a %u format spec. Fixes crashing of this test
          on Win/VC8.

        * examples/APG/Naming/Temperature_Monitor.cpp:
        * examples/APG/Naming/Temperature_Monitor2.cpp: Treat time as an int
          instead of a time_t; makes the logic easier even though it'll break
          sometime in 2038.

        * examples/ASX/UPIPE_Event_Server/event_server.cpp: Unify use of time_t
          to hold time values from ACE_OS::time().

        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp: When measuring messages
          per second, truncate seconds down to a 'long' to avoid truncation
          warnings at compile time from converting to double.

        * examples/Reactor/Misc/notification.cpp (svc): Initialize an
          ACE_Time_Value with secs / 2 instead of getting the seconds,
          multiplying into usecs, then dividing by 2. Avoids data truncation
          issues.

        * examples/Reactor/Multicast/Log_Wrapper.cpp (log_message): Cast
          result of time() to long to insert in the multicast buffer. Avoids
          truncation warning. Will stop recording a legit result sometime in
          2038 but the receiver isn't looking at the time field.

        * apps/gperf/src/Gen_Perf.cpp:
        * ASNMP/tests/test_config.h (randomize):
        * examples/Reactor/WFMO_Reactor/Multithreading.cpp:
        * protocols/ace/RMCast/Link.cpp:
        * protocols/ace/RMCast/Simulator.cpp:
        * protocols/examples/TMCast/Member/member.cpp:
        * tests/Auto_Event_Test.cpp:
        * tests/Handle_Set_Test.cpp:
        * tests/Recursive_Mutex_Test.cpp:
        * tests/Semaphore_Test.cpp:
        * tests/Thread_Mutex_Test.cpp:
        * tests/Timer_Queue_Test.cpp: Cast time_t to u_int for use as an
          ACE_OS::srand() seed - we just want some bits, not to fit it back in
          range with ACE_Utils::Truncate.

Thu Feb  1 11:21:32 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/POSIX_CB_Proactor.h:
        * ace/POSIX_CB_Proactor.cpp:
        * ace/Proactor.cpp:
        * ace/config-freebsd.h:
        * ace/config-lynxos.h:

          Introduced a new feature test macro ACE_HAS_BROKEN_SIGEVENT_STRUCT
          to make POSIX_CB_Proactor compile on FreeBSD 7.0-CURRENT.

        * tests/Proactor_Test.cpp:
        * tests/Proactor_Test_IPV6.cpp:

          Modified due to changes above.

Thu Feb  1 08:05:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Message_Queue.{h,cpp,inl}:
          Fixed compile errors in the NT Message Queue when build without
          threading under windows

        * ace/OS_NS_Thread.cpp:
          Layout changes

Wed Jan 31 23:06:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * ace/config-qnx-rtp-62x.h:

          Replaced ACE_LACKS_CUSERID with ACE_HAS_ALT_CUSERID to get the ACE
          library to provide us with a cuserid() function.

        * ASNMP/asnmp/asn1.cpp:
        * apps/drwho/global.h:
        * examples/IPC_SAP/SOCK_SAP/C-inclient.cpp:
        * examples/IPC_SAP/SOCK_SAP/C-inserver.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inserver.cpp:
        * examples/Logger/Acceptor-server/server_loggerd.cpp:
        * examples/Logger/client/logging_app.cpp:
        * examples/Logger/simple-server/Logging_Handler.cpp:
        * examples/Reactor/Multicast/Log_Wrapper.cpp:
        * examples/Reactor/Multicast/server.cpp:
        * netsvcs/lib/Name_Handler.cpp:

          Replaced htonl, htons, ntohl, and ntohs with the appropriate
          ACE_XTOYZ macro (ACE_HTONL, for example).  QNX doesn't have htonl and
          friends without adding extra #includes.

Wed Jan 31 19:03:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Basic_Types.h:

          Added constants ACE_FLT_MIN and ACE_DBL_MIN to provide consistency
          with ACE_FLT_MAX AND ACE_DBL_MAX.

        * ace/CDR_Base.h:
        * ace/CDR_Base.cpp:

          Enhanced the ACE_CDR::LongDouble class which is used on platforms
          where the native long double is not 16 bytes.

          Provided operators to support multiplication, division, addition
          and subtraction as well as conversion to the native long double.

          An assign() method is also provided to set the value of the
          ACE_CDR::LongDouble.  Since this class will be stored in a union
          (if used as an IDL type), it can not have a non-trivial constructor
          or assignment operator.  The existing
          ACE_CDR_LONG_DOUBLE_INITIALIZER macro is used to initialize the
          LongDouble and a new macro, ACE_CDR_LONG_DOUBLE_ASSIGNMENT, is
          used to assign to the LongDouble in a portable fashion.

        * bin/tao_orb_tests.lst:

          Added the new TAO LongDouble test.

Wed Jan 31 17:30:46 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-11.00.h:
        * include/makeinclude/platform_hpux_aCC.GNU: If stdcpplib=0 is
          selected at build time, explicitly set -AP compile option to use
          old C++ libraries and no std namespace. Also set
          ACE_LACKS_NUMERIC_LIMITS when -AP is set - there is a numeric_limits
          but not in std. Note that ACE_Array_Map won't build with stdcpplib=0
          but pre-ACE-5.5 legacy code will still build.

          Also removed the HP-UX 10.x remnants and pre-3.0 aC++ support
          from platform_hpux_aCC.GNU. Could probably safely remove more old
          compiler support (anything older than 3.56 probably) but I played
          it a little conservative for now.

Wed Jan 31 17:22:11 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * protocols/examples/examples.mwc:

          Removed the implicit usage.  It is not necessary since each
          example has a .mpc file.

        * protocols/examples/example_base.mpb:

          Removed this file.  It was not needed.

Wed Jan 31 16:55:23 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * ace/config-qnx-rtp-62x.h:

          Removed #define ACE_HAS_INLINED_OSCALLS as it seems to be both rarely
          used (only oddball platforms like unixware and other QNX versions
          have it) and also incompatible with inline=0 builds.
          Also added new config macros ACE_LACKS_STRPTIME (June 2006) and
          ACE_HAS_3_PARAM_READDIR_R (December 2006).
          These modifications have been tested with QNX 6.3 but from the docs
          on the QNX web site I believe they apply to QNX 6.2 as well.

Wed Jan 31 15:44:54 UTC 2007  Olli Savia  <ops@iki.fi>

        * ace/POSIX_CB_Proactor.h:
        * ace/POSIX_CB_Proactor.cpp:
          Use sigval (which is SUS defined) instead of sigval_t. If this
          change doesn't break on any platform I'll remove unnecessary
          typedef and related stuff.

Wed Jan 31 13:31:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Removed obsolete checks for environment macros

        * ace/Recycable.h:
          Removed empty brief doxygen tag

        * ace/OS_NS_unistd.inl:
        * ace/config-rtems.h:
          Renamed ACE_HAS_BROKEN_SZ_PAGESIZE to ACE_HAS_NOTSUP_SC_PAGESIZE

Wed Jan 31 13:21:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_hpux_gcc.GNU:
          Added improvement for GCC on HPUX IA64

Wed Jan 31 10:17:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_hpux_gcc.GNU:
          Improved support for GCC on HPUX IA64

Wed Jan 31 07:50:44 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/OS_NS_Thread.cpp (ACE_OS::sched_params):  Check if the
          ACE_id_t id that is being passed in is equal to ACE_SELF.  If
          so, pass ::GetCurrentProcessId() to ::OpenProcess() instead of
          id.  ACE_SELF is defined to be 0 on ACE_WIN32; process id 0 is
          the zero-page process, and we certainly don't want to attempt to
          set it to REALTIME_PRIORITY_CLASS :-)

Wed Jan 31 03:25:51 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/High_Res_Timer.h:

          Removed the special case default definition of
          ACE_HR_SCALE_CONVERSION to ACE_ONE_SECOND_IN_MSECS on Windows;
          added a #ifndef around the default definition in case the user
          wishes to change it.  This was done to prevent useless values
          like 0 showing up in calculations using ACE_Basic_Stats when the
          time intervals are of the order of a few microseconds.  Most of
          the current machines have a QueryPerformanceCounter()
          implementation that returns a value of atleast 3 MHz.  So it
          should be completely safe to use the definition of
          ACE_ONE_SECOND_IN_USECS as the default value for
          ACE_HR_SCALE_CONVERSION on contemporary x86 machines running
          Windows.

        * ace/Message_Block.inl:
        * ace/Message_Block.cpp:

          Moved the definition of
          ACE_Dynamic_Message_Strategy::priority_status() from
          Message_Block.inl to Message_Block.cpp.  It was a big function
          and it currently has code that causes a warning with VC8 on
          Windows.

Tue Jan 30 19:21:50 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Module.h:

          Removed the trailing comma from the last element of the enum.

Tue Jan 30 16:26:43 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * bin/sets-manager.py:

          Modified to pin the version of MPC at the time of branching/tagging
          under modules/ACE/MPC.  Note:  This does not branch OR tag MPC,
          it simply causes the branch/tag to check out a specific
          revision of MPC.

Tue Jan 30 13:51:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Module.h:
        * ace/Module.cpp:

          There was no way to distinguish between flags not being set and
          flags to indicate that tasks should not be deleted.  I have
          changed the M_DELETE_NONE enum value to 4 and added a new enum
          value for use in flag initialization.  With this change, the
          close() method can determine if it needs to use the flags passed
          in or the internal flags.  This fixes Bugzilla #2497.

Tue Jan 30 11:35:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Countdown_Time.{h,cpp}:
          Readded destructor, missed that it updates the max_wait_time
          passed to the constructor

Tue Jan 30 10:44:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/wrapper_macros.GNU:
          When pipes is set to 1, also add -pipe to the CCFLAGS

        * include/makeinclude/platform_rtems.x_g++.GNU:
          Set pipes to 1, set DCCFLAGS

Tue Jan 30 10:14:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Unbounded_Set.cpp:
          Initialise pointer with 0.

        * ace/OS_NS_unistd.inl (getpagesize):
        * ace/config-rtems.h:
          RTEMS does define _SC_PAGESIZE, but using sysconf with _SC_PAGESIZE
          results in -1. Added a new define ACE_HAS_BROKEN_SC_PAGESIZE to be
          able to disable the usage of sysconf (_SC_PAGESIZE) for rtems 4.6,
          the ::getpagesize() function returns a correct value.

Tue Jan 30 09:46:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OS_Test.cpp:
          Added a test for ACE_OS::getpagesize(), it should return a value
          bigger then 0 else the memory pools don't work

Tue Jan 30 00:25:00 UTC 2007  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-11.00.h: If the user sets RWSTD_NO_NAMESPACE to
          keep a lot of the standard C++ library out of the std namespace,
          avoid setting ACE_USES_STD_NAMESPACE_FOR_STDCPP_LIB, and also
          hoist everything else from std into the global namespace. This is
          necessary because RW wasn't consistent with using their internal
          _RWSTD_NO_NAMESPACE and the user-settable RWSTD_NO_NAMESPACE and
          some things end up in std and some not; so get the ones that ended
          up in std out to global with the rest of them.

Mon Jan 29 19:48:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Based_Pointer_Repository.cpp:
        * ace/Basic_Stats.cpp:
        * ace/Codeset_Registry.cpp:
        * ace/FILE.cpp:
        * ace/FILE_Addr.cpp:
          Layout improvements

Mon Jan 29 19:07:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/ciao.doxygen:
        * etc/ciao_config_handlers.doxygen:
        * etc/ciao_DAnCE.doxygen:
          Removed CIAO_NAMESPACE

Mon Jan 29 18:58:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Argv_Type_Converter.cpp:
        * ace/Asynch_Pseudo_Task.cpp:
        * ace/Cached_Connect_Strategy_T.cpp:
          Layout changes, result of experimenting with a code
          beautifier

        * ace/config-rtems.h:
          Improved rtems port, added support for building with
          threads=0

        * ace/config-sco-5.0.0.h:
          Removed commented out define

        * ace/config-vxworks6.4.h:
          putenv fails with VxWorks 6.4 with a pentium target

        * ace/Countdown_Time.{h,cpp}:
          Use bool, removed return value from most methods, it was
          meaningless, removed destructor, not needed to update members
          in a destructor

        * ace/Dev_Poll_Reactor.h:
          Export Token_Guard, fixes bugzilla 2786, thanks to
          <sailzeng at tencent dot com> for reporting this

        * OS_NS_pwd.inl (getpwnam_r):
          Initialize pointer with 0, simplified this a little

        * docs/ACE-guidelines.html:
          Updated example with doxygen style of documentation

Sun Jan 28 19:59:14 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ACE version 5.5.6 released.

Fri Jan 26 10:03:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Cached_Connect_Strategy_T.cpp
        * ace/Event_Handler_T.inl
        * ace/Future.cpp
        * ace/Future_Set.cpp
        * examples/C++NPv2/Reactor_Logging_Server_T.cpp
          Use typename

Thu Jan 25 19:59:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          The include of rules.cia.GNU must come before the include of
          rules.tao.GNU in order for CIAO libraries to have the correct
          version numbers.

        * bin/auto_run_tests.pl:

          Fixed the -l option to use the correct variable name and corrected
          a bug where the script changed to the wrong directory if the -l
          option was used.

        * bin/clean_sems.sh:

          Support the ngvipc command to clean up semaphores on MacOS X.

        * bin/rm_exception_macros.pl:

          A new script to assist users in the removal of all ACE related
          exception macros.

Thu Jan 25 19:24:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/*.doxygen:
          Removed ACE_ENV macros

Thu Jan 25 11:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Stream.h:
          Fixed typo, fixes part of bugzilla bug 2780, thanks to
          <sailzeng at tencent dot com> for reporting this.

        * docs/Download.html:
          Enabled links for source only packages, they are available
          from x.5.5

Thu Jan 25 07:50:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Containers_T.cpp:
          Use typename

Wed Jan 24 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Acceptor.h:
        * ace/Cached_Connect_Strategy_T.h:
        * ace/Connector.h:
          Use typename instead of ACE_TYPENAME which is now
          deprecated

        * ace/Codeset_IBM1047.cpp:
          Added missing includes

        * ace/config-aix-5.x.h:
        * ace/config-borland-common.h:
        * ace/config-cxx-common.h:
        * ace/config-g++-common.h:
        * ace/config-hpux-11.00.h:
        * ace/config-icc-common.h:
        * ace/config-irix6.x-sgic++.h:
        * ace/config-linux-common.h:
        * ace/config-lynxos.h:
        * ace/config-netbsd.h:
        * ace/config-suncc-common.h:
        * ace/config-sunos5.5.h:
        * ace/config-sunos5.6.h:
        * ace/config-tandem-nsk-mips-v2.h:
        * ace/config-tandem-nsk-mips-v3.h:
        * ace/config-unixware-7.1.0.udk.h:
        * ace/config-win32-dmc.h:
        * ace/config-win32-ghs.h:
        * ace/config-win32-interix.h:
        * ace/config-win32-msvc-7.h:
        * ace/config-win32-msvc-8.h:
        * ace/config-win32-visualage.h:
          Removed ACE_HAS_TYPENAME_KEYWORD, we do require that each
          compiler supports typename

        * ace/config-cygwin32.h:
        * ace/config-hpux-11.00.h:
        * ace/config-lynxos.h:
        * ace/config-macosx-panther.h:
        * ace/config-macosx-tiger.h:
        * ace/config-macosx.h:
        * ace/config-netbsd.h:
        * ace/config-openvms.h:
        * ace/config-rtems.h:
        * ace/config-sunos5.5.h:
        * ace/config-tandem-nsk-mips-v3.h:
        * ace/config-tru64.h:
          Removed ACE_HAS_MEMCHR

        * ace/config-doxygen.h:
          Enabled COIOP and Transport Current

        * ace/config-macros.h:
          Deprecated ACE_TYPENAME, users can still use it, but in some builds
          on the daily scoreboard it now can't be used anymore

        * ace/config-mvs.h:
          Improved MVS support

        * ace/Global_Macros.h:
        * ace/Malloc_T.h:
        * ace/Map_T.h:
        * ace/Strategies_T.h:
          Use typename

        * ace/Log_Msg.cpp:
        * ace/os_include/sys/os_types.h:
        * ace/Task.cpp:
          Added support for MVS

        * ace/OS_NS_string.{h,cpp,inl}:
          Replaced ACE_HAS_MEMCHR with ACE_LACKS_MEMCHR, this way a platform that
          lacks this method has to set an explicit define, maybe it now shows
          that all platforms have this method and we don't need an emulation
          anymore. Also removed several emulations that are not needed anymore

        * ace/OS_NS_Thread.inl:
          Layout changes

        * ace/OS_NS_wchar.{h,cpp}:
          Changed second argument of wcschr_emulation to wchar_t, that way we don't
          need a cast anymore

        * ace/Rtems_init.c:
          Improved this file

        * ace/Sock_Connect.cpp:
          Initialise some pointers with 0

        * bin/cvslog:
          Removed, not needed anymore

        * bin/fuzz.pl:
          Removed checks for emulated exception macros

        * examples/Export/run_test.pl:
          Use ACE_ROOT

        * examples/Misc/test_read_buffer.cpp:
          Initialise pointer with 0

        * include/makeinclude/platform_mvs.GNU:
          Improved support

        * netsvcs/servers/servers.mpc:
          Simplified

        * performance-tests/UDP/udp_test.cpp:
        * tests/Cached_Allocator_Test.cpp:
        * tests/Env_Value_Test.cpp:
        * tests/Handle_Set_Test.cpp:
          Removed ACE_LACKS_FLOATING_POINT check

        * tests/Thread_Creation_Threshold_Test.cpp:
          Added missing \n

Mon Jan 22 23:14:56 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * ACE version 5.5.5 released.


Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
