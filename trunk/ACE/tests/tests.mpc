//  -*- MPC -*-
// $Id$

project(Test_Output) : acelib, script {
  sharedname = Test_Output
  dynamicflags = TEST_OUTPUT_BUILD_DLL
  Source_Files {
    Test_Output.cpp
  }
  Header_Files {
    Test_Output_Export.h
    test_config.h
  }
  Resource_Files {
  }
  Script_Files {
    run_test.pl
    run_test.lst
  }

  verbatim(automake,local) {
dist_check_SCRIPTS = run_test.pl run_test.lst
TESTS = $(noinst_PROGRAMS)
TESTS_ENVIRONMENT = $(srcdir)/run_test.pl -t
  }
}

project(Framework Component DLL) : acelib {
  sharedname   = Framework_Component_DLL
  dynamicflags = FRAMEWORK_COMPONENT_DLL_BUILD_DLL

  Source_Files {
    Framework_Component_DLL.cpp
  }
  Header_Files {
    Framework_Component_DLL.h
    Framework_Component_DLL_Export.h
  }
  Resource_Files {
  }
}


project(DLL Test Parent Lib) : acelib {
  sharedname   = DLL_Test_Parent
  dynamicflags = DLL_TEST_PARENT_BUILD_DLL

  Source_Files {
    DLL_Test_Parent.cpp
  }
  Header_Files {
    DLL_Test_Parent_Export.h
    test_config.h
  }
  Resource_Files {
  }
}

project(DLL Test Lib) : acelib, dll_test_parent_lib {
  sharedname   = DLL_Test_Lib
  dynamicflags = ACE_SVC_BUILD_DLL

  Source_Files {
    DLL_Test_Impl.cpp
  }
  Header_Files {
    test_config.h
  }
  Resource_Files {
  }
}

project(Based Pointer Test Lib) : acelib {
  avoids      += ace_for_tao
  sharedname   = Based_Pointer_Test_Lib
  dynamicflags = ACE_SVC_BUILD_DLL

  Source_Files {
    Based_Pointer_Test_Lib.cpp
  }
  Resource_Files {
  }
}

project(Service Config DLL) : acelib {
  sharedname   = Service_Config_DLL
  dynamicflags = SERVICE_CONFIG_DLL_BUILD_DLL

  Source_Files {
    Service_Config_DLL.cpp
  }
  Header_Files {
    Service_Config_DLL.h
    Service_Config_DLL_Export.h
  }
  Resource_Files {
  }
}

project(ACE Init Test) : acetest {
  exename = ACE_Init_Test
  Source_Files {
    ACE_Init_Test.cpp
  }
  Resource_Files {
    ACE_Init_Test.rc
  }
}

project(ACE Test) : acetest {
  exename = ACE_Test
  Source_Files {
    ACE_Test.cpp
  }
}

project(Aio Platform Test) : acetest {
  exename = Aio_Platform_Test
  Source_Files {
    Aio_Platform_Test.cpp
  }
}

project(Arg Shifter Test) : acetest {
  exename = Arg_Shifter_Test
  Source_Files {
    Arg_Shifter_Test.cpp
  }
}

project(Array Map Test) : acetest {
  exename = Array_Map_Test
  Source_Files {
    Array_Map_Test.cpp
  }
}

project(ARGV Test) : acetest {
  exename = ARGV_Test
  Source_Files {
    ARGV_Test.cpp
  }
}

project(Atomic Op Test) : acetest {
  exename = Atomic_Op_Test
  Source_Files {
    Atomic_Op_Test.cpp
  }
}

project(Auto Event Test) : acetest {
  exename = Auto_Event_Test
  Source_Files {
    Auto_Event_Test.cpp
  }
}

project(Auto IncDec Test) : acetest {
  exename = Auto_IncDec_Test
  Source_Files {
    Auto_IncDec_Test.cpp
  }
}

project(Barrier Test) : acetest {
  exename = Barrier_Test
  Source_Files {
    Barrier_Test.cpp
  }
}

project(Basic Types Test) : acetest {
  exename = Basic_Types_Test
  Source_Files {
    Basic_Types_Test.cpp
  }
}

project(Bound Ptr Test) : acetest {
  avoids += ace_for_tao
  exename = Bound_Ptr_Test
  Source_Files {
    Bound_Ptr_Test.cpp
  }
}

project(Buffer Stream Test) : acetest {
  exename = Buffer_Stream_Test
  Source_Files {
    Buffer_Stream_Test.cpp
  }
}

project(Bug_1576_Regression_Test) : acetest {
  exename = Bug_1576_Regression_Test
  Source_Files {
    Bug_1576_Regression_Test.cpp
  }
}

project(Bug_1890_Regression_Test) : acetest {
  exename = Bug_1890_Regression_Test
  Source_Files {
    Bug_1890_Regression_Test.cpp
  }
}

project(Bug_2368_Regression_Test) : acetest {
  exename = Bug_2368_Regression_Test
  Source_Files {
    Bug_2368_Regression_Test.cpp
  }
}

project(Bug_2497_Regression_Test) : acetest {
  exename = Bug_2497_Regression_Test
  Source_Files {
    Bug_2497_Regression_Test.cpp
  }
}

project(Bug_2540_Regression_Test) : acetest {
  exename = Bug_2540_Regression_Test
  Source_Files {
    Bug_2540_Regression_Test.cpp
  }
}

project(Bug_2653_Regression_Test) : acetest {
  exename = Bug_2653_Regression_Test
  Source_Files {
    Bug_2653_Regression_Test.cpp
  }
}

project(Bug_2815_Regression_Test) : acetest {
  exename = Bug_2815_Regression_Test
  Source_Files {
    Bug_2815_Regression_Test.cpp
  }
}

project(Bug_2820_Regression_Test) : acetest {
  exename = Bug_2820_Regression_Test
  Source_Files {
    Bug_2820_Regression_Test.cpp
  }
}

project(Bug_2975_Regression_Test) : acetest {
  exename = Bug_2975_Regression_Test
  Source_Files {
    Bug_2975_Regression_Test.cpp
  }
}

project(Cache Map Manager Test) : acetest {
  exename = Cache_Map_Manager_Test
  Source_Files {
    Cache_Map_Manager_Test.cpp
  }
}

project(Memcpy_Test) : acetest {
  avoids += ace_for_tao
  exename = Memcpy_Test
  Source_Files {
    Memcpy_Test.cpp
  }
}

project(Cached Accept Conn Test) : acetest {
  avoids += ace_for_tao
  exename = Cached_Accept_Conn_Test
  Source_Files {
    Cached_Accept_Conn_Test.cpp
  }
}

project(Cached Allocator Test) : acetest {
  avoids += ace_for_tao
  exename = Cached_Allocator_Test
  Source_Files {
    Cached_Allocator_Test.cpp
  }
}

project(Cached Conn Test) : acetest {
  avoids += ace_for_tao
  exename = Cached_Conn_Test
  Source_Files {
    Cached_Conn_Test.cpp
  }
}

project(Capabilities Test) : acetest {
  avoids += ace_for_tao
  exename = Capabilities_Test
  Source_Files {
    Capabilities_Test.cpp
  }
}

project(CDR File Test) : acetest {
  avoids += ace_for_tao
  exename = CDR_File_Test
  Source_Files {
    CDR_File_Test.cpp
    CE_fostream.cpp
  }
}

project(CDR Test) : acetest {
  exename = CDR_Test
  Source_Files {
    CDR_Test.cpp
  }
}

project(Collection Test) : acetest {
  exename = Collection_Test
  Source_Files {
    Collection_Test.cpp
  }
}

project(Config Test) : acetest {
  avoids += ace_for_tao
  exename = Config_Test
  Source_Files {
    Config_Test.cpp
  }
  Documentation_Files {
    Config_Test.ini
    Config_Test_Import_1.ini
  }
}

project(Conn Test) : acetest {
  avoids += ace_for_tao
  exename = Conn_Test
  Source_Files {
    Conn_Test.cpp
  }
}

project(Date Time Test) : acetest {
  avoids += ace_for_tao
  exename = Date_Time_Test
  Source_Files {
    Date_Time_Test.cpp
  }
}

project(Dev Poll Reactor Test) : acetest {
  exename = Dev_Poll_Reactor_Test
  Source_Files {
    Dev_Poll_Reactor_Test.cpp
  }
}

project(Dirent Test) : acetest {

  exename = Dirent_Test
  Source_Files {
    Dirent_Test.cpp
  }
}

project(DLList Test) : acetest {
  avoids += ace_for_tao
  exename = DLList_Test
  Source_Files {
    DLList_Test.cpp
  }
}

project(DLL Test) : acetest, dll_test_parent_lib {
  after  += DLL_Test_Lib
  libs   += DLL_Test_Lib
  exename = DLL_Test
  Source_Files {
    DLL_Test.cpp
  }
}

project(Dynamic Test) : acetest {
  exename = Dynamic_Test
  Source_Files {
    Dynamic_Test.cpp
  }
}

project(Enum Interfaces Test) : acetest {
  exename = Enum_Interfaces_Test
  Source_Files {
    Enum_Interfaces_Test.cpp
  }
}

project(Env Value Test) : acetest {
  exename = Env_Value_Test
  Source_Files {
    Env_Value_Test.cpp
  }
}

project(Future Test) : acetest {
  avoids += ace_for_tao
  exename = Future_Test
  Source_Files {
    Future_Test.cpp
  }
}

project(Future Set Test) : acetest {
  avoids += ace_for_tao
  exename = Future_Set_Test
  Source_Files {
    Future_Set_Test.cpp
  }
}

project(Get Opt Test) : acetest {
  exename = Get_Opt_Test
  Source_Files {
    Get_Opt_Test.cpp
  }
}

project(Handle Set Test) : acetest {
  avoids += ace_for_tao
  exename = Handle_Set_Test
  Source_Files {
    Handle_Set_Test.cpp
  }
}

project(High Res Timer Test) : acetest {
  avoids += ace_for_tao
  exename = High_Res_Timer_Test
  Source_Files {
    High_Res_Timer_Test.cpp
  }
}

project(Hash Map Manager Test) : acetest {
  exename = Hash_Map_Manager_Test
  Source_Files {
    Hash_Map_Manager_Test.cpp
  }
}

project(Hash Multi Map Manager Test) : acetest {
  exename = Hash_Multi_Map_Manager_Test
  Source_Files {
    Hash_Multi_Map_Manager_Test.cpp
  }
}

project(Hash Map Bucket Iterator Test) : acetest {
  exename = Hash_Map_Bucket_Iterator_Test
  Source_Files {
    Hash_Map_Bucket_Iterator_Test.cpp
  }
}

project(INET Addr Test) : acetest {
  exename = INET_Addr_Test
  Source_Files {
    INET_Addr_Test.cpp
  }
}

project(Integer_Truncate Test) : acetest {
  exename = Integer_Truncate_Test
  Source_Files {
    Integer_Truncate_Test.cpp
  }
}

project(IOStream Test) : acetest {
  exename = IOStream_Test
  Source_Files {
    IOStream_Test.cpp
  }
}

project(Lazy Map Manager Test) : acetest {
  exename = Lazy_Map_Manager_Test
  Source_Files {
    Lazy_Map_Manager_Test.cpp
  }
}

project(Log Msg Test) : acetest {
  avoids += ace_for_tao
  exename = Log_Msg_Test
  Source_Files {
    Log_Msg_Test.cpp
  }
}

project(Log Msg Backend Test) : acetest {
  avoids += ace_for_tao
  exename = Log_Msg_Backend_Test
  Source_Files {
    Log_Msg_Backend_Test.cpp
  }
}

project(Logging Strategy Test) : acetest {
  exename = Logging_Strategy_Test
  Source_Files {
    Logging_Strategy_Test.cpp
  }
}

project(Malloc Test) : acetest {
  avoids += ace_for_tao
  exename = Malloc_Test
  Source_Files {
    Malloc_Test.cpp
  }
}

project(Manual_Event Test) : acetest {
  exename = Manual_Event_Test
  Source_Files {
    Manual_Event_Test.cpp
  }
}

project(Map Test) : acetest {
  avoids += ace_for_tao
  exename = Map_Test
  Source_Files {
    Map_Test.cpp
  }
}

project(Map Manager Test) : acetest {
  avoids += ace_for_tao
  exename = Map_Manager_Test
  Source_Files {
    Map_Manager_Test.cpp
  }
}

project(Max Default Port Test) : acetest {
  exename = Max_Default_Port_Test
  Source_Files {
    Max_Default_Port_Test.cpp
  }
}

project(MEM Stream Test) : acetest {
  avoids += ace_for_tao
  exename = MEM_Stream_Test
  Source_Files {
    MEM_Stream_Test.cpp
  }
}

project(Mem Map Test) : acetest {
  avoids += ace_for_tao
  exename = Mem_Map_Test
  Source_Files {
    Mem_Map_Test.cpp
  }
}

project(MM Shared Memory Test) : acetest {
  avoids += ace_for_tao
  exename = MM_Shared_Memory_Test
  Source_Files {
    MM_Shared_Memory_Test.cpp
  }
}

project(MT Reactor Timer Test) : acetest {
  exename = MT_Reactor_Timer_Test
  Source_Files {
    MT_Reactor_Timer_Test.cpp
  }
}

project(MT Reactor Upcall Test) : acetest {
  exename = MT_Reactor_Upcall_Test
  Source_Files {
    MT_Reactor_Upcall_Test.cpp
  }
}

project(MT SOCK Test) : acetest {
  exename = MT_SOCK_Test
  Source_Files {
    MT_SOCK_Test.cpp
  }
}

project(Message Block Test) : acetest {
  avoids += ace_for_tao
  exename = Message_Block_Test
  Source_Files {
    Message_Block_Test.cpp
  }
}

project(Message Queue Test) : acetest {
  avoids += ace_for_tao
  exename = Message_Queue_Test
  Source_Files {
    Message_Queue_Test.cpp
  }
}

project(Message Queue Test Ex) : acetest {
  avoids += ace_for_tao
  exename = Message_Queue_Test_Ex
  Source_Files {
    Message_Queue_Test_Ex.cpp
  }
}

project(Message Queue Notifications Test) : acetest {
  exename = Message_Queue_Notifications_Test
  Source_Files {
    Message_Queue_Notifications_Test.cpp
  }
}

project(Multicast Test) : acetest {
  exename = Multicast_Test
  Source_Files {
    Multicast_Test.cpp
  }
}

project(Multihomed INET Addr Test) : acetest {
  avoids += ace_for_tao
  exename = Multihomed_INET_Addr_Test
  Source_Files {
    Multihomed_INET_Addr_Test.cpp
  }
}

project(Network_Adapters_Test) : acetest {
  exename = Network_Adapters_Test
  Source_Files {
    Network_Adapters_Test.cpp
  }
}

project(New Fail Test) : acetest {
  exename = New_Fail_Test
  Source_Files {
    New_Fail_Test.cpp
  }
}

project(Notification Queue Unit Test) : acetest {
  exename = Notification_Queue_Unit_Test
  Source_Files {
    Notification_Queue_Unit_Test.cpp
  }
}

project(Notify Performance Test) : acetest {
  avoids += ace_for_tao
  exename = Notify_Performance_Test
  Source_Files {
    Notify_Performance_Test.cpp
  }
}

project(Object Manager Test) : acetest {
  exename = Object_Manager_Test
  Source_Files {
    Object_Manager_Test.cpp
  }
}

project(Object Manager Flipping Test) : acetest {
  exename = Object_Manager_Flipping_Test
  Source_Files {
    Object_Manager_Flipping_Test.cpp
  }
}

project(Obstack Test) : acetest {
  exename = Obstack_Test
  Source_Files {
    Obstack_Test.cpp
  }
}

project(OrdMultiSet Test) : acetest {
  exename = OrdMultiSet_Test
  Source_Files {
    OrdMultiSet_Test.cpp
  }
}

project(OS Test) : acetest {
  exename = OS_Test
  Source_Files {
    OS_Test.cpp
  }
}

project(Proactor Scatter Gather Test) : acetest {
  avoids += ace_for_tao
  exename = Proactor_Scatter_Gather_Test
  Source_Files {
    Proactor_Scatter_Gather_Test.cpp
  }
}

project(Proactor Test) : acetest {
  avoids += ace_for_tao
  exename = Proactor_Test
  Source_Files {
    Proactor_Test.cpp
  }
}

project(Proactor Timer Test) : acetest {
  avoids += ace_for_tao
  exename = Proactor_Timer_Test
  Source_Files {
    Proactor_Timer_Test.cpp
  }
}

project(Process Manual Event Test) : acetest {
  exename = Process_Manual_Event_Test
  Source_Files {
    Process_Manual_Event_Test.cpp
  }
}

project(Process Mutex Test) : acetest {
  avoids += ace_for_tao
  exename = Process_Mutex_Test
  Source_Files {
    Process_Mutex_Test.cpp
  }
}

project(Process Semaphore Test) : acetest {
  avoids += ace_for_tao
  exename = Process_Semaphore_Test
  Source_Files {
    Process_Semaphore_Test.cpp
  }
}

project(Process Strategy Test) : acetest {
  avoids += ace_for_tao    // Requires ace/File_Lock
  exename = Process_Strategy_Test
  Source_Files {
    Process_Strategy_Test.cpp
  }
}

project(Priority Buffer Test) : acetest {
  exename = Priority_Buffer_Test
  Source_Files {
    Priority_Buffer_Test.cpp
  }
}

project(Dynamic Priority Test) : acetest {
  exename = Dynamic_Priority_Test
  Source_Files {
    Dynamic_Priority_Test.cpp
  }
}

project(Priority Task Test) : acetest {
  exename = Priority_Task_Test
  Source_Files {
    Priority_Task_Test.cpp
  }
}

project(Priority Reactor Test) : acetest {
  avoids += ace_for_tao
  exename = Priority_Reactor_Test
  Source_Files {
    Priority_Reactor_Test.cpp
  }
}

project(Process Manager Test) : acetest {
  avoids += ace_for_tao
  exename = Process_Manager_Test
  Source_Files {
    Process_Manager_Test.cpp
  }
}

project(Pipe Test) : acetest {
  exename = Pipe_Test
  Source_Files {
    Pipe_Test.cpp
  }
}

project(RB Tree Test) : acetest {
  exename = RB_Tree_Test
  Source_Files {
    RB_Tree_Test.cpp
  }
}

project(Reactors Test) : acetest {
  exename = Reactors_Test
  Source_Files {
    Reactors_Test.cpp
  }
}

project(Reactor Exceptions Test) : acetest {
  exename = Reactor_Exceptions_Test
  Source_Files {
    Reactor_Exceptions_Test.cpp
  }
}

project(Reactor Notify Test) : acetest {
  avoids += ace_for_tao
  exename = Reactor_Notify_Test
  Source_Files {
    Reactor_Notify_Test.cpp
  }
}

project(Reactor Notification Queue Test) : acetest {
  exename = Reactor_Notification_Queue_Test
  Source_Files {
    Reactor_Notification_Queue_Test.cpp
  }
}

project(Reactor Dispatch Order Test) : acetest {
  exename = Reactor_Dispatch_Order_Test
  Source_Files {
    Reactor_Dispatch_Order_Test.cpp
  }
}

project(Reactor Performance Test) : acetest {
  avoids += ace_for_tao
  exename = Reactor_Performance_Test
  Source_Files {
    Reactor_Performance_Test.cpp
  }
}

project(Reactor Remove Resume Test) : acetest {
  exename = Reactor_Remove_Resume_Test
  Source_Files {
    Reactor_Remove_Resume_Test.cpp
  }
}

project(Reactor Timer Test) : acetest {
  avoids += ace_for_tao
  exename = Reactor_Timer_Test
  Source_Files {
    Reactor_Timer_Test.cpp
  }
}

project(Reader Writer Test) : acetest {
  exename = Reader_Writer_Test
  Source_Files {
    Reader_Writer_Test.cpp
  }
}

project(Recursive Condition Bug Test) : acetest {
  exename = Recursive_Condition_Bug_Test
  Source_Files {
    Recursive_Condition_Bug_Test.cpp
  }
}

project(Recursive Condition Test) : acetest {
  exename = Recursive_Condition_Test
  Source_Files {
    Recursive_Condition_Test.cpp
  }
}

project(Recursive Mutex Test) : acetest {
  exename = Recursive_Mutex_Test
  Source_Files {
    Recursive_Mutex_Test.cpp
  }
}

project(Refcounted Auto Ptr Test) : acetest {
  avoids += ace_for_tao
  exename = Refcounted_Auto_Ptr_Test
  Source_Files {
    Refcounted_Auto_Ptr_Test.cpp
  }
}

project(Reverse Lock Test) : acetest {
  exename = Reverse_Lock_Test
  Source_Files {
    Reverse_Lock_Test.cpp
  }
}

project(Semaphore Test) : acetest {
  avoids += ace_for_tao
  exename = Semaphore_Test
  Source_Files {
    Semaphore_Test.cpp
  }
}

project(Sendfile Test) : acetest {
  exename = Sendfile_Test
  Source_Files {
    Sendfile_Test.cpp
  }
}

project(Signal Test) : acetest {
  exename = Signal_Test
  Source_Files {
    Signal_Test.cpp
  }
}

project(Sigset Ops Test) : acetest {
  exename = Sigset_Ops_Test
  Source_Files {
    Sigset_Ops_Test.cpp
  }
}

project(Simple Message Block Test) : acetest {
  exename = Simple_Message_Block_Test
  Source_Files {
    Simple_Message_Block_Test.cpp
  }
}

project(SOCK Test) : acetest {
  exename = SOCK_Test
  Source_Files {
    SOCK_Test.cpp
  }
}

project(SOCK Dgram Test) : acetest {
  exename = SOCK_Dgram_Test
    Source_Files {
      SOCK_Dgram_Test.cpp
  }
}

project(SOCK Connector Test) : acetest {
  exename = SOCK_Connector_Test
  Source_Files {
    SOCK_Connector_Test.cpp
  }
}

project(SOCK Netlink Test) : acetest {
  avoids += ace_for_tao
  exename = SOCK_Netlink_Test
  Source_Files {
    SOCK_Netlink_Test.cpp
  }
}

project(SOCK Send Recv Test) : acetest {
  exename = SOCK_Send_Recv_Test
  Source_Files {
    SOCK_Send_Recv_Test.cpp
  }
}

project(SPIPE Test) : acetest {
  avoids += ace_for_tao
  exename = SPIPE_Test
  Source_Files {
    SPIPE_Test.cpp
  }
}

project(SString Test) : acetest {
  exename = SString_Test
  Source_Files {
    SString_Test.cpp
  }
}

project(SV Shared Memory Test) : acetest {
  avoids += ace_for_tao
  exename = SV_Shared_Memory_Test
  Source_Files {
    SV_Shared_Memory_Test.cpp
  }
}

project(Svc Handler Test) : acetest {
  avoids += ace_for_tao
  exename = Svc_Handler_Test
  Source_Files {
    Svc_Handler_Test.cpp
  }
}

project(Task Test) : acetest {
  exename = Task_Test
  Source_Files {
    Task_Test.cpp
  }
}

project(Task_Ex Test) : acetest {
  exename = Task_Ex_Test
  Source_Files {
    Task_Ex_Test.cpp
  }
}

project(Thread Manager Test) : acetest {
  exename = Thread_Manager_Test
  Source_Files {
    Thread_Manager_Test.cpp
  }
}

project(Thread Mutex Test) : acetest {
  exename = Thread_Mutex_Test
  Source_Files {
    Thread_Mutex_Test.cpp
  }
}

project(Thread Pool Test) : acetest {
  exename = Thread_Pool_Test
  Source_Files {
    Thread_Pool_Test.cpp
  }
}

project(Thread Creation Threshold Test) : acetest {
  exename = Thread_Creation_Threshold_Test
  Source_Files {
    Thread_Creation_Threshold_Test.cpp
  }
}

project(Timeprobe Test) : acetest {
  exename = Timeprobe_Test
  Source_Files {
    Timeprobe_Test.cpp
  }
}

project(Time Service Test) : acetest {
  exename = Time_Service_Test
  Source_Files {
    Time_Service_Test.cpp
  }
}

project(Time Value Test) : acetest {
  exename = Time_Value_Test
  Source_Files {
    Time_Value_Test.cpp
  }
}

project(Timer Queue Test) : acetest {
  avoids += ace_for_tao
  exename = Timer_Queue_Test
  Header_Files {
    randomize.h
  }
  Source_Files {
    Timer_Queue_Test.cpp
  }
}

project(Token Strategy Test) : acetest {
  exename = Token_Strategy_Test
  Source_Files {
    Token_Strategy_Test.cpp
  }
}

project(TP Reactor Test) : acetest {
  avoids += ace_for_tao
  exename = TP_Reactor_Test
  Source_Files {
    TP_Reactor_Test.cpp
  }
}

project(TSS Test) : acetest {
  exename = TSS_Test
  Source_Files {
    TSS_Test.cpp
  }
}

project(TSS Static Test) : acetest {
  exename = TSS_Static_Test
  Source_Files {
    TSS_Static_Test.cpp
  }
}

project(Vector Test) : acetest {
  exename = Vector_Test
  Source_Files {
    Vector_Test.cpp
  }
}

project(UPIPE SAP Test) : acetest {
  avoids += ace_for_tao
  exename = UPIPE_SAP_Test
  Source_Files {
    UPIPE_SAP_Test.cpp
  }
}

project(Upgradable RW Test) : acetest {
  avoids += ace_for_tao
  exename = Upgradable_RW_Test
  Source_Files {
    Upgradable_RW_Test.cpp
  }
}

project(Naming Test) : acetest {
  avoids   += ace_for_tao
  exename   = Naming_Test
  requires += ace_other
  Header_Files {
    randomize.h
  }
  Source_Files {
    Naming_Test.cpp
  }
}

project(Thread Pool Reactor Test) : acetest {
  exename   = Thread_Pool_Reactor_Test
  requires += ace_other

  Source_Files {
    Thread_Pool_Reactor_Test.cpp
  }
}

project(Thread Pool Reactor Resume Test) : acetest {
  exename   = Thread_Pool_Reactor_Resume_Test
  requires += ace_other

  Source_Files {
    Thread_Pool_Reactor_Resume_Test.cpp
  }
}

project(XtMotifReactor Test) : acetest, ace_xtreactor, ace_motif {
  exename   = XtMotifReactor_Test

  Source_Files {
    XtMotifReactor_Test.cpp
  }
}

project(XtAthenaReactor Test) : acetest, ace_xtreactor, ace_athena {
  exename   = XtAthenaReactor_Test
  Source_Files {
    XtAthenaReactor_Test.cpp
  }
}

project(FlReactor Test) : acetest, ace_flreactor {
  exename   = FlReactor_Test

  Source_Files {
    FlReactor_Test.cpp
  }
}

project(TkReactor Test) : acetest,ace_tkreactor {
  exename   = TkReactor_Test

  Source_Files {
    TkReactor_Test.cpp
  }
}

project(Codecs Test) : acetest {
  avoids   += ace_for_tao
  exename   = Codecs_Test
  requires += ace_codecs

  Source_Files {
    Codecs_Test.cpp
  }
}

project(Tokens Test) : acetest {
  exename   = Tokens_Test
  requires += ace_token

  Source_Files {
    Tokens_Test.cpp
  }
}

project(CDR Array Test) : acetest {
  avoids += ace_for_tao
  exename = CDR_Array_Test
  Source_Files {
    CDR_Array_Test.cpp
  }
}

project(Service Config Test) : acetest {
  after  += Service_Config_DLL
  exename = Service_Config_Test
  Source_Files {
    Service_Config_Test.cpp
  }
}

project(Framework Component Test) : acetest {
  after  += Framework_Component_DLL
  exename = Framework_Component_Test
  Source_Files {
    Framework_Component_Test.cpp
  }
}

project(FIFO Test) : acetest {
  avoids += ace_for_tao
  exename = FIFO_Test
  Source_Files {
    FIFO_Test.cpp
  }
  Header_Files {
  }
}

project(WFMO Reactor Test) : acetest {
  exename = WFMO_Reactor_Test
  Source_Files {
    WFMO_Reactor_Test.cpp
  }
  Header_Files {
  }
}

project(NonBlocking Conn Test) : acetest {
  exename = NonBlocking_Conn_Test
  Source_Files {
    NonBlocking_Conn_Test.cpp
  }
  Header_Files {
  }
}

project(Reference Counted Event Handler Test) : acetest {
  exename = Reference_Counted_Event_Handler_Test
  Source_Files {
    Reference_Counted_Event_Handler_Test.cpp
  }
  Header_Files {
  }
}

project(MT Ref Counted Event Handler Test) : acetest {
  exename = MT_Reference_Counted_Event_Handler_Test
  Source_Files {
    MT_Reference_Counted_Event_Handler_Test.cpp
  }
  Header_Files {
  }
}

project(MT Reference Counted Notify Test) : acetest {
  exename = MT_Reference_Counted_Notify_Test
  Source_Files {
    MT_Reference_Counted_Notify_Test.cpp
  }
  Header_Files {
  }
}

project(Timer Cancellation Test) : acetest {
  exename = Timer_Cancellation_Test
  Source_Files {
    Timer_Cancellation_Test.cpp
  }
  Header_Files {
  }
}

project(Timer Queue Reference Counting Test) : acetest {
  exename = Timer_Queue_Reference_Counting_Test
  Source_Files {
    Timer_Queue_Reference_Counting_Test.cpp
  }
  Header_Files {
  }
}

project(Reactor Registration Test) : acetest {
  exename = Reactor_Registration_Test
  Source_Files {
    Reactor_Registration_Test.cpp
  }
  Header_Files {
  }
}

project(UUID_Test) : acetest {
  avoids   += ace_for_tao
  exename   = UUID_Test
  requires += ace_uuid
  Source_Files {
    UUID_Test.cpp
  }
}

project(Unbounded Set Test) : acetest {
  exename = Unbounded_Set_Test
  Source_Files {
    Unbounded_Set_Test.cpp
  }
}

project(INET Addr Test IPV6) : acetest {
  exename = INET_Addr_Test_IPV6
  Source_Files {
  INET_Addr_Test_IPV6.cpp
  }
}

project(Max Default Port Test IPV6) : acetest {
  exename = Max_Default_Port_Test_IPV6
  Source_Files {
  Max_Default_Port_Test_IPV6.cpp
  }
}

project(Multicast Test IPV6) : acetest {
  exename = Multicast_Test_IPV6
  Source_Files {
  Multicast_Test_IPV6.cpp
  }
}

project(Multihomed INET Addr Test IPV6) : acetest {
  avoids += ace_for_tao
  exename = Multihomed_INET_Addr_Test_IPV6
  Source_Files {
  Multihomed_INET_Addr_Test_IPV6.cpp
  }
}

project(Proactor Test IPV6) : acetest {
  avoids += ace_for_tao
  exename =  Proactor_Test_IPV6
  Source_Files {
   Proactor_Test_IPV6.cpp
  }
}

project(SOCK Send Recv Test IPV6) : acetest {
  exename = SOCK_Send_Recv_Test_IPV6
  Source_Files {
  SOCK_Send_Recv_Test_IPV6.cpp
  }
}

project(SOCK Test IPv6) : acetest {
  exename = SOCK_Test_IPv6
  Source_Files {
  SOCK_Test_IPv6.cpp
  }
}

project(SOCK_Dgram_Bcast_Test) : acetest {
  avoids += ace_for_tao
  exename = SOCK_Dgram_Bcast_Test
  Source_Files {
  	SOCK_Dgram_Bcast_Test.cpp
  }
}

project(SOCK_SEQPACK_SCTP_Test) : acetest {
  avoids += ace_for_tao
  exename = SOCK_SEQPACK_SCTP_Test
  Source_Files {
  	SOCK_SEQPACK_SCTP_Test.cpp
  }
}

project(QtReactor Test) : acetest, ace_qtreactor {
  exename   = QtReactor_Test
  MOC_Files {
    QtReactor_Test.h
  }
  Source_Files {
    QtReactor_Test_moc.cpp
    QtReactor_Test.cpp
  }
}

project(Based Pointer Test) : acetest {
  avoids += ace_for_tao
  after  += Based_Pointer_Test_Lib
  exename = Based_Pointer_Test
  Source_Files {
    Based_Pointer_Test.cpp
  }
}

project(Library Unload): unload_libace {
  avoids += wince
  exename = UnloadLibACE
  staticflags += ACE_AS_STATIC_LIBS
  Source_Files {
    Unload_libACE.cpp
  }
  Resource_Files {
  }
}

project(Bug_2659_Regression_Test) : acetest {
  exename = Bug_2659_Regression_Test
  Source_Files {
    Bug_2659_Regression_Test.cpp
  }
}

project(Bug_2609_Regression_Test) : acetest {
  avoids      += ace_for_tao
  exename = Bug_2609_Regression_Test
  Source_Files {
    Bug_2609_Regression_Test.cpp
  }
}

project(Bug_2610_Regression_Test) : acetest {
  avoids      += ace_for_tao
  exename = Bug_2610_Regression_Test
  Source_Files {
    Bug_2610_Regression_Test.cpp
  }
}
