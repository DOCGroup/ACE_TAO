--- Svc_Conf_l.cpp.orig	Tue May  5 12:04:05 1998
+++ Svc_Conf_l.cpp	Tue May  5 12:04:51 1998
@@ -1,7 +1,8 @@
+#define ACE_BUILD_DLL
 /* A lexical scanner generated by flex */
 
 /* Scanner skeleton version:
- * $Header: /home/daffy/u0/vern/flex/flex-2.4.7/RCS/flex.skl,v 1.2 94/08/03 11:13:24 vern Exp $
+ * Header: /home/daffy/u0/vern/flex/flex-2.4.7/RCS/flex.skl,v 1.2 94/08/03 11:13:24 vern Exp
  */
 
 #define FLEX_SCANNER
@@ -134,7 +135,9 @@
 		} \
 	while ( 0 )
 
+#if 0
 #define unput(c) ace_yyunput( c, ace_yytext_ptr )
+#endif /* 0 */
 
 
 struct ace_yy_buffer_state
@@ -209,7 +212,9 @@
  */
 static int ace_yy_did_buffer_switch_on_eof;
 
+#if 0
 static void ace_yyunput ACE_YY_PROTO(( int c, char *buf_ptr ));
+#endif /* 0 */
 void ace_yyrestart ACE_YY_PROTO(( FILE *input_file ));
 void ace_yy_switch_to_buffer ACE_YY_PROTO(( ACE_YY_BUFFER_STATE new_buffer ));
 void ace_yy_load_buffer_state ACE_YY_PROTO(( void ));
@@ -217,12 +222,14 @@
 void ace_yy_delete_buffer ACE_YY_PROTO(( ACE_YY_BUFFER_STATE b ));
 void ace_yy_init_buffer ACE_YY_PROTO(( ACE_YY_BUFFER_STATE b, FILE *file ));
 
+#if 0
 static int ace_yy_start_stack_ptr = 0;
 static int ace_yy_start_stack_depth = 0;
 static int *ace_yy_start_stack = 0;
 static void ace_yy_push_state ACE_YY_PROTO(( int new_state ));
 static void ace_yy_pop_state ACE_YY_PROTO(( void ));
 static int ace_yy_top_state ACE_YY_PROTO(( void ));
+#endif /* 0 */
 
 static void *ace_yy_flex_alloc ACE_YY_PROTO(( unsigned int ));
 static void *ace_yy_flex_realloc ACE_YY_PROTO(( void *, unsigned int ));
@@ -689,112 +696,112 @@
 ACE_YY_USER_ACTION
 # line 42 "Svc_Conf.l"
 { return token (ACE_DYNAMIC); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 3:
 ACE_YY_USER_ACTION
 # line 43 "Svc_Conf.l"
 { return token (ACE_STATIC); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 4:
 ACE_YY_USER_ACTION
 # line 44 "Svc_Conf.l"
 { return token (ACE_SUSPEND); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 5:
 ACE_YY_USER_ACTION
 # line 45 "Svc_Conf.l"
 { return token (ACE_RESUME); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 6:
 ACE_YY_USER_ACTION
 # line 46 "Svc_Conf.l"
 { return token (ACE_REMOVE); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 7:
 ACE_YY_USER_ACTION
 # line 47 "Svc_Conf.l"
 { return token (ACE_USTREAM); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 8:
 ACE_YY_USER_ACTION
 # line 48 "Svc_Conf.l"
 { return token (ACE_MODULE_T); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 9:
 ACE_YY_USER_ACTION
 # line 49 "Svc_Conf.l"
 { return token (ACE_SVC_OBJ_T); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 10:
 ACE_YY_USER_ACTION
 # line 50 "Svc_Conf.l"
 { return token (ACE_STREAM_T); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 11:
 ACE_YY_USER_ACTION
 # line 51 "Svc_Conf.l"
 { return token (ACE_ACTIVE); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 12:
 ACE_YY_USER_ACTION
 # line 52 "Svc_Conf.l"
 { return token (ACE_INACTIVE); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 13:
 ACE_YY_USER_ACTION
 # line 53 "Svc_Conf.l"
 { return token (ACE_COLON); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 14:
 ACE_YY_USER_ACTION
 # line 54 "Svc_Conf.l"
 { return token (ACE_STAR); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 15:
 ACE_YY_USER_ACTION
 # line 55 "Svc_Conf.l"
 { return token (ACE_LPAREN); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 16:
 ACE_YY_USER_ACTION
 # line 56 "Svc_Conf.l"
 { return token (ACE_RPAREN); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 17:
 ACE_YY_USER_ACTION
 # line 57 "Svc_Conf.l"
 { return token (ACE_LBRACE); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 18:
 ACE_YY_USER_ACTION
 # line 58 "Svc_Conf.l"
 { return token (ACE_RBRACE); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 19:
 ACE_YY_USER_ACTION
 # line 59 "Svc_Conf.l"
 { // Eliminate the opening and closing double quotes
-		        *strrchr (ace_yytext, '"') = '\0';
+		        *ACE_OS::strrchr (ace_yytext, '"') = '\0';
 			ace_yyleng -= 1;
-                        ace_yylval.ident_ = ace_obstack->copy (ace_yytext + 1, ace_yyleng);
+                        ace_yylval.ident_ = ace_obstack->copy (ace_yytext + 1, ace_yyleng);
 			return token (ACE_STRING); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 20:
 ACE_YY_USER_ACTION
 # line 64 "Svc_Conf.l"
-{
-		        ace_yylval.ident_ = ace_obstack->copy (ace_yytext, ace_yyleng);
-			return token (ACE_IDENT);
+{
+		        ace_yylval.ident_ = ace_obstack->copy (ace_yytext, ace_yyleng);
+			return token (ACE_IDENT);
 		      }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 21:
 ACE_YY_USER_ACTION
 # line 68 "Svc_Conf.l"
-{
-		        ace_yylval.ident_ = ace_obstack->copy (ace_yytext, ace_yyleng);
-			return token (ACE_PATHNAME);
+{
+		        ace_yylval.ident_ = ace_obstack->copy (ace_yytext, ace_yyleng);
+			return token (ACE_PATHNAME);
 		      }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 22:
 ACE_YY_USER_ACTION
 # line 72 "Svc_Conf.l"
@@ -808,14 +811,15 @@
 case 24:
 ACE_YY_USER_ACTION
 # line 74 "Svc_Conf.l"
-{ ACE_ERROR ((LM_ERROR, "unknown char = %d\n", *ace_yytext)); }
+{ ACE_ERROR ((LM_ERROR, ASYS_TEXT ("unknown char = %d\n"),
+              *ace_yytext)); }
 	ACE_YY_BREAK
 case ACE_YY_STATE_EOF(INITIAL):
 case ACE_YY_STATE_EOF(PARAMETERS):
 case ACE_YY_STATE_EOF(NORMAL):
 # line 75 "Svc_Conf.l"
 { ACE_YY_NEW_FILE; ace_yyterminate(); }
-	ACE_YY_BREAK
+	/* ACE_YY_BREAK */
 case 25:
 ACE_YY_USER_ACTION
 # line 76 "Svc_Conf.l"
@@ -1148,6 +1152,7 @@
 	}
 
 
+#if 0
 #ifdef ACE_YY_USE_PROTOS
 static void ace_yyunput( int c, register char *ace_yy_bp )
 #else
@@ -1192,7 +1197,7 @@
 	 */
 	ACE_YY_DO_BEFORE_ACTION; /* set up ace_yytext again */
 	}
-
+#endif /* 0 */
 
 #ifdef __cplusplus
 static int ace_yyinput()
@@ -1400,6 +1405,7 @@
 	}
 
 
+#if 0
 #ifdef ACE_YY_USE_PROTOS
 static void ace_yy_push_state( int new_state )
 #else
@@ -1445,7 +1451,7 @@
 	{
 	return ace_yy_start_stack[ace_yy_start_stack_ptr - 1];
 	}
-
+#endif /* 0 */
 
 #ifdef ACE_YY_USE_PROTOS
 static void ace_yy_fatal_error( const char msg[] )
