<?xml version="1.0" encoding="utf-8"?>

<!--  -->

<!--

Description
XML QoS Profile

This file is used to create a situation which causes an on_rejected_sample event.

The QoS configuration of the DDS entities in the generated example is
loaded from this file.

This file is used only when it is in the current working directory
or when the environment variable
NDDS_QOS_PROFILES is defined and points to this file.

For more information about XML QoS Profiles see Chapter 15 in the
RTI Data Distribution Service user manual.
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="c:/ndds/ndds.4.5d/scripts/../resource/rtiddsgen/../qos_profiles_4.5d/schema/rti_dds_qos_profiles.xsd" version="4.5d">
  <!-- QoS Library containing the QoS profile used in the generated example.

        A QoS library is a named set of QoS profiles.
    -->
  <qos_library name="HelloTest_Library">
    <!-- QoS profile used to configure reliable communication between the DataWriter
             and DataReader created in the example code.

             A QoS profile groups a set of related QoS.
        -->
    <qos_profile name="HelloProfile" is_default_qos="false">
      <!-- QoS used to configure the data writer created in the example code -->
      <datawriter_qos>
        <reliability>
          <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
          <max_blocking_time>
            <sec>0</sec>
            <nanosec>100000000</nanosec>
          </max_blocking_time>
        </reliability>
        <durability>
          <kind>TRANSIENT_DURABILITY_QOS</kind>
        </durability>
        <durability_service>
          <history_kind>KEEP_LAST_HISTORY_QOS</history_kind>
          <history_depth>10</history_depth>
           <max_samples>10</max_samples>
          <max_samples_per_instance>10</max_samples_per_instance>
          <max_instances>2</max_instances>
        </durability_service>
        <protocol>
          <rtps_reliable_writer>
            <max_heartbeat_retries>10</max_heartbeat_retries>
          </rtps_reliable_writer>
        </protocol>
       </datawriter_qos>
      <!-- QoS used to configure the data reader created in the example code -->
      <datareader_qos>
        <durability>
          <kind>VOLATILE_DURABILITY_QOS</kind>
        </durability>
        <deadline>
          <period>
            <sec>DURATION_INFINITE_SEC</sec>
            <nanosec>DURATION_INFINITE_NSEC</nanosec>
          </period>
        </deadline>
        <latency_budget>
          <duration>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </duration>
        </latency_budget>
        <liveliness>
          <kind>AUTOMATIC_LIVELINESS_QOS</kind>
          <lease_duration>
            <sec>DURATION_INFINITE_SEC</sec>
            <nanosec>DURATION_INFINITE_NSEC</nanosec>
          </lease_duration>
        </liveliness>
        <reliability>
          <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
          <max_blocking_time>
            <sec>0</sec>
            <nanosec>100000000</nanosec>
          </max_blocking_time>
        </reliability>
        <destination_order>
          <kind>BY_RECEPTION_TIMESTAMP_DESTINATIONORDER_QOS</kind>
        </destination_order>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>10</depth>
        </history>
        <resource_limits>
          <initial_samples>1</initial_samples>
          <initial_instances>1</initial_instances>
          <max_samples>10</max_samples>
          <max_instances>1</max_instances>
          <max_samples_per_instance>10</max_samples_per_instance>
        </resource_limits>
        <user_data>
          <value></value>
        </user_data>
        <ownership>
          <kind>SHARED_OWNERSHIP_QOS</kind>
        </ownership>
        <time_based_filter>
          <minimum_separation>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </minimum_separation>
        </time_based_filter>
        <reader_data_lifecycle>
          <autopurge_nowriter_samples_delay>
            <sec>DURATION_INFINITE_SEC</sec>
            <nanosec>DURATION_INFINITE_NSEC</nanosec>
          </autopurge_nowriter_samples_delay>
          <autopurge_disposed_samples_delay>
            <sec>DURATION_INFINITE_SEC</sec>
            <nanosec>DURATION_INFINITE_NSEC</nanosec>
          </autopurge_disposed_samples_delay>
        </reader_data_lifecycle>
        </datareader_qos>
    </qos_profile>
  </qos_library>
</dds>