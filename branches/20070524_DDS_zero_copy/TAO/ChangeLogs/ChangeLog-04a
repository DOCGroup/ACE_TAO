Sat Jul 31 07:00:20 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/Security/Security_ORBInitializer.cpp:

	  Added missing "tao/ORB_Constants.h" include.  Fixes compile-time
	  error in builds where inlining is disabled.

Sat Jul 31 00:43:37 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	The following changes represent a basic/core implemenation of the
	CSIv2 specification and slight variation of the informal standard
	SecurityLevel3 API.  Higher level features requiring the Security
	Attribute Service will be pushed to the	next beta.

	* orbsvcs/orbsvcs/Security.mpc:

	  Removed obsolete IDL files from the source list, and added newer
	  ones.

	* orbsvcs/orbsvcs/Security/SL2_EstablishTrustPolicy.cpp:
	* orbsvcs/orbsvcs/Security/SL2_EstablishTrustPolicy.h:
	* orbsvcs/orbsvcs/Security/SL2_QOPPolicy.cpp:
	* orbsvcs/orbsvcs/Security/SL2_QOPPolicy.h:

	  Renamed these files by prepending "SL2_" to them to make it
	  clear they are SecurityLevel2 policy implementations.

	* orbsvcs/orbsvcs/Security/SL3_CredentialsAcquirerFactory.cpp:
	* orbsvcs/orbsvcs/Security/SL3_CredentialsAcquirerFactory.h:
	* orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.cpp:
	* orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.h:
	* orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.cpp:
	* orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.h:
	* orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.inl:
	* orbsvcs/orbsvcs/Security/SL3_SecurityCurrent_Impl.cpp:
	* orbsvcs/orbsvcs/Security/SL3_SecurityCurrent_Impl.h:

	  New SecurityLevel3 related sources.

	* orbsvcs/orbsvcs/Security/CSI_Utils.cpp:
	* orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.cpp:
	* orbsvcs/orbsvcs/Security/SL3_SecurityManager.cpp:
	* orbsvcs/orbsvcs/Security/SL3_SecurityManager.h:
	* orbsvcs/orbsvcs/Security/Security_Current.cpp:
	* orbsvcs/orbsvcs/Security/Security_Current.h:
	* orbsvcs/orbsvcs/Security/Security_Current.inl:
	* orbsvcs/orbsvcs/Security/Security_Current_Impl.cpp:
	* orbsvcs/orbsvcs/Security/Security_Current_Impl.h:
	* orbsvcs/orbsvcs/Security/Security_ORBInitializer.cpp:
	* orbsvcs/orbsvcs/Security/Security_ORBInitializer.h:
	* orbsvcs/orbsvcs/Security/Security_PolicyFactory.cpp:
	* orbsvcs/orbsvcs/Security/Security_PolicyFactory.h:

	  Enabled some CSIv2/SecurityLevel3 features.

	  Code cleanup.

	* orbsvcs/orbsvcs/Security/EstablishTrustPolicy.cpp:
	* orbsvcs/orbsvcs/Security/EstablishTrustPolicy.h:
	* orbsvcs/orbsvcs/Security/InvocationCredentialsPolicy.cpp:
	* orbsvcs/orbsvcs/Security/InvocationCredentialsPolicy.h:
	* orbsvcs/orbsvcs/Security/MechanismPolicy.cpp:
	* orbsvcs/orbsvcs/Security/MechanismPolicy.h:
	* orbsvcs/orbsvcs/Security/PrincipalAuthenticator.cpp:
	* orbsvcs/orbsvcs/Security/PrincipalAuthenticator.h:
	* orbsvcs/orbsvcs/Security/QOPPolicy.cpp:
	* orbsvcs/orbsvcs/Security/QOPPolicy.h:
	* orbsvcs/orbsvcs/Security/SecurityManager.cpp:
	* orbsvcs/orbsvcs/Security/SecurityManager.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_ReceivedCredentials.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_ReceivedCredentials.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Vault.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Vault.h:

	  Removed these files.  They were either obsolete, not maintained
	  or have been renamed.

	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.cpp:
	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.h:
	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.cpp:
	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.h:
	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.inl:
	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.h:
	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.cpp:
	* orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Accept_Strategy.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Accept_Strategy.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.i:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.i:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.inl:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.inl:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.inl:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_EVP_PKEY.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_EVP_PKEY.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_EVP_PKEY.inl:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.i:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Util.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Util.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_X509.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_X509.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_X509.inl:
	* orbsvcs/orbsvcs/SSLIOP/ssl_endpoints.cpp:
	* orbsvcs/orbsvcs/SSLIOP/ssl_endpoints.i:

	  Integrated basic CSIv2 features.

	  Most classes are now in the TAO::SSLIOP namespace.

	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_ClientCredentials.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_ClientCredentials.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirerFactory.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirerFactory.h:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.h:

	  New SSLIOP-specific implementations of SecurityLevel3 or related
	  interfaces.

	* orbsvcs/tests/Security/Secure_Invocation/Foo_i.cpp:
	* orbsvcs/tests/Security/Secure_Invocation/Foo_i.h:
	* orbsvcs/tests/Security/Secure_Invocation/README:
	* orbsvcs/tests/Security/Secure_Invocation/server.cpp:

	  The SecurityLevel2::Current object this test used is no longer
	  supported.  Updated to use the SecurityLevel3::SecurityCurrent
	  object instead.

Sat Jul 31 03:16:12 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* Release: Include TAO.mwc which is very important.

Fri Jul 30 17:48:53 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* docs/releasenotes/index.html:

	  Updated Security Service release notes.

Fri Jul 30 17:29:36 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* NEWS:  Added TAO 1.4.2 noteworthy items.

Thu Jul 29 08:39:17 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_redef.cpp:

          Fixed bug in handling forward declared eventtypes, which
          was causing bogus "illegal redefinition" errors.

Wed Jul 28 00:03:42 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* orbsvcs/tests/Security/SecurityLevel1/SLevel1_Test.idl
	* orbsvcs/tests/Security/SecurityLevel1/SLevel1_Test_i.h
	* orbsvcs/tests/Security/SecurityLevel1/SLevel1_Test_i.cpp
	  (authorize_level1):

	  Added SLevel1_Server::NoSecurityAttributes to the exception
	  specification for this method.  The implementation of this
	  method potentially throws this exception.  Fixes a CBuilderX
	  compile-time warning regarding exception specification
	  violation.

Tue Jul 27 17:42:37 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/OctetSeqC.h:

          Put back explicit template instantiation of the sequence
          base class that was inadvertently left out of the hand-crafting
          from the last regeneration.

Tue Jul 27 06:11:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Security/SL3_SecurityManager.h:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.h:
        * orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.h:
        * orbsvcs/orbsvcs/Security/SL3_ContextEstablishmentPolicy.h:
        * orbsvcs/orbsvcs/Security/CSI_Utils.h:
          Fixed fuzz errors about missing /**/ and incorrect doxygen file
          tags

Mon Jul 26 12:22:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/sfp.idl:
          Removed "typedef sequence<char> my_seq_char" from this file, it is
          not used and caused problems with the vc71 build when linking the
          AV library, because the TAO and AV library than both export an
          ACE_Unbounded_Set<char>.

Sun Jul 25 22:13:48 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* Release:

	  Makefile with release information.

Sat Jul 24 01:41:42 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* TAO_IDL/be/be_visitor_traits.cpp (visit_interface):

	  Prepend a "::" to the node name to force the generated node name
	  to be relative to the global namespace not the generated TAO
	  namespace.  Addresses TAO namespace conflicts.

Fri Jul 23 23:18:36 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/Security/CSI_Utils.cpp
	  (extract_sas_service_context):

	  Corrected return type to match prototype declared in header.
	  Fixes compile time errors.

Fri Jul 23 10:27:13 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/Security/CSI_Utils.h (IOP::ServiceContext):

	  Corrected IOP::ServiceContext forward declaration.  It is a
	  struct, not a class.  Fixes compile-time warnings.

Thu Jul 22 14:05:49 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tests/Portable_Interceptors/PolicyFactory/PI_PolicyFactory.mpc:

	  Added missing ".cpp" extensions to some source files.  Fixes
	  link-time errors.

Thu Jul 22 10:10:26 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/SecurityLevel3.idl:

	  Commented out "truncatable" valuetype keyword.  TAO_IDL
	  currently does not support this feature.

	* orbsvcs/orbsvcs/Security/SL3_SecurityManager.cpp
	  (get_target_credentials):

	  Fixed unused argument warnings.

Wed Jul 21 12:55:03 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Updated checks for valid name identifier (passed as an
          argument to a create_*_tc() method) to conform to the
          latest CORBA spec (3.0.3, formal/04-03-01) which rejects
          a null string and accepts an empty string. Thanks to
          Frank Pilhofer <fp@mc.com> for pointing out that the spec
          has changed in this regard. Closes [BUGID:1885].

Wed Jul 21 08:55:48 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnySeqA.cpp:
        * tao/CharSeqA.cpp:
        * tao/DoubleSeqA.cpp:
        * tao/LongDoubleSeqA.cpp:
        * tao/LongLongSeqA.cpp:
        * tao/LongSeqA.cpp:
        * tao/ULongLongSeqA.cpp:
        * tao/WCharSeqA.cpp:
        * tao/WStringSeqA.cpp:

          New files overlooked in the checkin of

          Tue Jul 20 15:08:09 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

Tue Jul 20 21:54:00 2004  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/driver/drv_preproc.cpp (DRV_get_orb_idl_includes):
	  Don't crash if orb.idl file could not be opened.

Tue Jul 20 15:45:43 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/corba.h:

          Added includes of the new sequences stub header files. Thanks
          again to Frank Pilhofer <fp@mc.com> for the reminder.

Tue Jul 20 15:08:09 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnySeqC.cpp:
        * tao/AnySeqC.h:
        * tao/AnySeqC.inl:
        * tao/AnySeqS.h:
        * tao/CharSeqC.cpp:
        * tao/CharSeqC.h:
        * tao/CharSeqC.inl:
        * tao/CharSeqS.h:
        * tao/DoubleSeqC.cpp:
        * tao/DoubleSeqC.h:
        * tao/DoubleSeqC.inl:
        * tao/DoubleSeqS.h:
        * tao/LongDoubleSeqC.cpp:
        * tao/LongDoubleSeqC.h:
        * tao/LongDoubleSeqC.inl:
        * tao/LongDoubleSeqS.h:
        * tao/LongLongSeqC.cpp:
        * tao/LongLongSeqC.h:
        * tao/LongLongSeqC.inl:
        * tao/LongLongSeqS.h:
        * tao/LongSeqC.cpp:
        * tao/LongSeqC.h:
        * tao/LongSeqC.inl:
        * tao/LongSeqS.h:
        * tao/StringSeqC.inl:
        * tao/ULongLongSeqC.cpp:
        * tao/ULongLongSeqC.h:
        * tao/ULongLongSeqC.inl:
        * tao/ULongLongSeqS.h:
        * tao/WCharSeqC.cpp:
        * tao/WCharSeqC.h:
        * tao/WCharSeqC.inl:
        * tao/WCharSeqS.h:
        * tao/WStringSeqC.cpp:
        * tao/WStringSeqC.h:
        * tao/WStringSeqC.inl:
        * tao/WStringSeqS.h:
        * tao/AnySeq.pidl:
        * tao/CharSeq.pidl:
        * tao/DoubleSeq.pidl:
        * tao/LongDoubleSeq.pidl:
        * tao/LongLongSeq.pidl:
        * tao/LongSeq.pidl:
        * tao/ULongLongSeq.pidl:
        * tao/WCharSeq.pidl:
        * tao/WStringSeq.pidl:

          New files, .pidl files containing sequences of basic types
          that were not already added to TAO, and the associated generated
          files. Thanks to Frank Pilhofer <fp@mc.com> for urging us to
          add the remaining sequences of basic types to TAO. This closes
          [BUGID:1888].

        * tao/OctetSeqC.inl:

          Replaced OctetSeqC.i with the above file.

        * tao/orb.idl:

          Added includes of the above new .pidl files.

        * tao/tao.mpc:

          Added source files above to the project.

        * tao/StringSeq.pidl:

          Updated suggested command line for IDL compiler.

        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.h:
        * tao/OctetSeqS.h:
        * tao/StringSeqA.cpp:
        * tao/StringSeqC.cpp:
        * tao/StringSeqC.h:
        * tao/StringSeqS.h:

          Regenerated the above files.

        * tao/OctetSeqC.i:
        * tao/OctetSeqS.cpp:
        * tao/OctetSeqS.i:
        * tao/OctetSeqS_T.cpp:
        * tao/OctetSeqS_T.h:
        * tao/OctetSeqS_T.i:
        * tao/StringSeqC.i:

          Removed these files from the repository. The .i extension is now
          obsolete and all skeleton header files in TAO have been modified
          to be simply dummies that the IDL compiler can include in its
          generated skeleton header files, so the skeleton source, inline
          and template files need no longer be compiled and linked in TAO.

        * tests/Param_Test/Param_Test.mpc:

          Removed param_test_i.cpp from the client project file.

        * tests/Param_Test/any.cpp:
        * tests/Param_Test/anyop.cpp:
        * tests/Param_Test/big_union.cpp:
        * tests/Param_Test/complex_any.cpp:
        * tests/Param_Test/complex_any.h:
        * tests/Param_Test/param_test.idl:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/param_test_i.h:
        * tests/Param_Test/ub_any_seq.cpp:
        * tests/Param_Test/ub_any_seq.h:
        * tests/Param_Test/ub_long_seq.cpp:
        * tests/Param_Test/ub_long_seq.h:
        * tests/Param_Test/ub_short_seq.cpp:
        * tests/Param_Test/ub_short_seq.h:
        * tests/Param_Test/ub_str_seq.cpp:
        * tests/Param_Test/ub_str_seq.h:
        * tests/Param_Test/ub_wstr_seq.cpp:
        * tests/Param_Test/ub_wstr_seq.h:

          Replaced sequences of shorts, longs, strings, wstrings, and anys
          with the newly added CORBA counterparts.

Mon Jul 19 19:00:33 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* docs/ORBEndpoint.html:

	  Fixed typo.

Mon Jul 19 13:21:00 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * TAO_IDL/be_include/be_visitor_amh_pre_proc.h:

          - Added code generation for attributes. This closes
            [BUGID:1880].
          - Added code generation for oneway operations, since if
            a SyncScope policy is set with the value SYNC_WITH_SERVER
            or SYNC_WITH_TARGET, we will want the client to get
            any system exceptions that may be thrown during execution.
          - Removed visit_attribute() method. since it is never called.
            Code generation for attributes is handled by a special
            method that requires the response handler and the
            exception holder to be passed in as well as the attribute.

Mon Jul 19 11:08:29 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/fe_extern.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/include/fe_extern.h:

          Moved calls to ACE_Utils::UUID_GENERATOR::instance ()
          (which returns a template singleton instantiation)
          from the TAO_IDL executable to the front end library.
          Compiling the executable files in more than one build,
          as we do now, causes problems with Tru64 if there
          are templates in any of the executable files, since
          Tru64 handles template instantiations differently than
          other compilers. Moving code that involves template
          instantiations to the front end or back end library
          solves the problem, since these files are compiled
          only once. Thanks to Johnny Willemsen <jwillemsen@remedy.nl>
          for reporting the problem.

Mon Jul 19 06:25:05 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_1630_Regression/test.mpc:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
        * performance-tests/Sequence_Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Thread_Per_Conn.mpc:
        * performance-tests/Sequence_Latency/Thread_Pool/Thread_Pool.mpc:
        * tests/Bug_1330_Regression/Bug_1330_Regression.mpc:
        * tests/Bug_1627_Regression/test.mpc:

          Switch the usage of the client base project for taoexe.  The
          client base project was not useful and caused warnings from MPC.

Mon Jul 19 01:09:21 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Security/CSI_Utils.cpp:
        * orbsvcs/orbsvcs/Security/CSI_Utils.h:
        * orbsvcs/orbsvcs/Security/SL3_ContextEstablishmentPolicy.cpp:
        * orbsvcs/orbsvcs/Security/SL3_ContextEstablishmentPolicy.h:
        * orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.cpp:
        * orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.h:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.h:
        * orbsvcs/orbsvcs/Security/SL3_SecurityManager.cpp:
        * orbsvcs/orbsvcs/Security/SL3_SecurityManager.h:

          New CSIv2 source files.  More to follow ...

        * orbsvcs/orbsvcs/Security.mpc:

          Added new CSIv2 source files to the Security project.

Mon Jul 19 00:57:23 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/ATLAS.idl:
        * orbsvcs/orbsvcs/CSI.idl:
        * orbsvcs/orbsvcs/CSIIOP.idl:
        * orbsvcs/orbsvcs/GSSUP.idl:
        * orbsvcs/orbsvcs/SL3CSI.idl:
        * orbsvcs/orbsvcs/SL3TCPIP.idl:
        * orbsvcs/orbsvcs/SL3TLS.idl:
        * orbsvcs/orbsvcs/SecurityLevel3.idl:

          New CSIv2 IDL source files.

Sun Jul 18 21:09:18 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/PolicyFactory/server.cpp (main):

          Fixed unused variable warning in non-debug builds where
          ACE_NTRACE is defined.

Sun Jul 18 08:54:29 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PolicyFactory_Registry.cpp (factory_exists):
        * tao/PolicyFactory_Registry.h (factory_exists):

          New method that allows the caller to determine if a
          PolicyFactory corresponding to the given PolicyType exists in
          the registry.  Part of the create_POA() policy fix described
          below.

        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp
          (destroy_interceptors):

          Prevent exceptions from being propagated to the caller.  The
          exception specification on this method is empty since this
          method performs resource cleanup.  Fixes a memory leak that
          would occur if an exception was thrown in an
          IORInterceptor::destroy() call, and an abort caused by a call to
          the unexpected exception handler.

        * tao/PortableServer/Default_Policy_Validator.cpp
          (legal_policy_impl):

          Consider a PolicyType with a corresponding registered
          PolicyFactory to be legal.  This addresses the problem where the
          POA would not accept user defined policies that have a
          corresponding PolicyFactory registered with the ORB, e.g. the
          CSIv2 SecurityLevel3::ObjectCredentialsPolicy, when calling
          PortableServer::POA::create_POA().

        * tests/Portable_Interceptors/PolicyFactory/IORInterceptor.cpp:
        * tests/Portable_Interceptors/PolicyFactory/IORInterceptor.h:
        * tests/Portable_Interceptors/PolicyFactory/PI_PolicyFactory.mpc:
        * tests/Portable_Interceptors/PolicyFactory/Policy.cpp:
        * tests/Portable_Interceptors/PolicyFactory/Policy.h:
        * tests/Portable_Interceptors/PolicyFactory/PolicyFactory.cpp:
        * tests/Portable_Interceptors/PolicyFactory/PolicyFactory.h:
        * tests/Portable_Interceptors/PolicyFactory/README:
        * tests/Portable_Interceptors/PolicyFactory/Server_ORBInitializer.cpp:
        * tests/Portable_Interceptors/PolicyFactory/Server_ORBInitializer.h:
        * tests/Portable_Interceptors/PolicyFactory/run_test.pl:
        * tests/Portable_Interceptors/PolicyFactory/server.cpp:
        * tests/Portable_Interceptors/PolicyFactory/test.idl:

          New regression test to verify properly functioning
          PortableInterceptor::PolicyFactory support.

Sun Jul 18 00:59:21 2004  Marek Brudka  <mbrudka@elka.pw.edu.pl>

        * tests/QtTests/server.cpp:
        Someone defined index macro under QNXNTO! Had to undefine it locally.

Sat Jul 17 12:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
          Only build when TAO_HAS_CORBA_MESSAGING is 1, just the same as in
          the header file used

Mon Jul 12 21:50:12 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Direct_Priority_Mapping.h:
        * tao/RTCORBA/Linear_Network_Priority_Mapping.h:
          Converted old style of documentation to doxygen style

Sun Jul 11 20:15:17 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Fixed incorrect link and fixed a typo and a few spaces

Sat Jul 10 12:43:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:

          Fixed a improper use of Object_var which showed up as test
          failures in the deffered synchronous tests.

Sat Jul 10 10:23:33 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO-INSTALL.html:

          Added information for users who build from anon cvs repository.

Fri Jul  9 20:32:33 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:

          More warning fixes.

Fri Jul  9 07:29:57 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:

          Fixed warnings in the daily builds. Thanks to Johnny for letting
          me know about this. This should also fix the problems in DSI
          tests.

Thu Jul  8 17:48:42 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.h:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.h:

          Corrected the memory leak fix in this checkin
          "Fri Jun 11 15:30:57 2004  Balachandran Natarajan
          <bala@dre.vanderbilt.edu>".

          This should fix the failure with Bug_1482_Regression tests in
          our daily builds. Coincidentally this should also fix the
          problem that Keith O'Hara reported while trying to run FT_App
          tests.

Thu Jul  8 18:25:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          In the #if/endif pair for __ACE_INLINE__ also generate __ACE_INLINE__
          in the comments after the endif

        * TAO_IDL/be/be_interface.cpp:
          Generate some extra new lines to fix the compile errors in the
          dynamic hash build. Some code was placed after an endif which
          should be on a new line.

Wed Jul  7 15:39:09 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * docs/releasenotes/index.html:

          Updated the TAO Load Balancer release notes.

Tue Jul  6 14:25:37 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * docs/releasenotes/index.html:

          Updated the IDL compiler Current Status list.

Mon Jul  5 13:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/driver/drv_preproc.cpp:
          In case we use an uuid to generate a temporary filename, add
          the file_extension also to the filename. This fixes compile
          problems in the Borland and MinGW builds

Mon Jul  5 13:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Sequence_Latency/AMH_Single_Threaded/run_test.pl:
          Made this file executable so that we can run it from our daily
          performance build

Sat Jul  3 13:35:28 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_produce.cpp:

          Moved the initialization of the stream for generated file
          containing Any operators (if the option is set to generate
          these into a separate file) again, to BE_produce, just
          after the preprocessing visitors and before the stub header
          visitor. The stream for the *A.cpp file, if applicable,
          must be set before the stub source visitor is launched,
          since, if the *A.cpp file is being generated, #includes
          of Any-related ORB files will be redirected there, and
          this happens before the actual Any operator pass. But
          the stream cannot be initialized too early, since the
          filename for this iteration (if we are processing multiple
          IDL files) must be set first.

Sat Jul  3 11:25:54 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Moved the initialization of the stream for generated file
          containing Any operators (if the option is set to generate
          these into a separate file) out of the TAO_CodeGen
          constructor and into the method that sets up the stub
          source stream. Now that we are no longer forking for each
          IDL file processed, a single code generator is initialized
          for all files, and it is done earlier in the process than
          previously. Other key values needed for setting up the
          Any operator file stream have not yet been set, so it was
          necessary to move the Any operator file stream initialization
          to a more appropriate place.

Sat Jul  3 10:06:19 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp:

          Put back an O_EXCL file open flag that was inadvertently
          removed in a previous checkin.

Fri Jul  2 15:39:42 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/include/fe_extern.h:

          Moved bits of code that instantiate ACE_Env_Value<char*> into
          new methods created in the front end library. Having them in
          the executable was causing a problem for Tru64 builds, since
          the executable is compiled in multiple builds linking to
          different backend libraries. The Tru64 compiler deals with
          templates differently than other compilers, and the VPATH
          solution for g++ that allowed the same object files to be
          linked in different builds does not work for cxx.

Fri Jul  2 13:20:46 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:

          Put back the code using mkstemp() (for platforms that support
          it) to generate unique and secure temporary file names. This
          code was removed in

          Thu Jul  1 20:01:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          For platforms that do not support mkstemp(), we now use ACE's
          uuid generator to generate a suffix for the base names of the
          needed temporary files.

Fri Jul  2 16:11:12 UTC 2004 Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp:
          Fixed the usage of auto_ptr to fix compile errors in the HPUX
          builds. Thanks to Don Hinton for pointing out the way to fix
          this.

Thu Jul  1 21:18:06 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h:

          Corrected typo in documentation.  Thanks to Thomas Lockhart for
          supplying a patch.

Thu Jul  1 20:01:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/ast/ast_root.cpp:
        * TAO_IDL/be/be_produce.cpp:
        * TAO_IDL/be/be_root.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/include/ast_root.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/util/utl_global.cpp:

          Changed the method of processing multiple file in a single
          execution from forking off separate processes for each
          file to simply iterating over the files in a single
          process. Unique temporary filenames are now created using
          random numbers instead of process ids as before.

        * orbsvcs/IFR_Service/be_produce.cpp:

          Removed the deletion of pointers to the global data classes,
          since these pointers are now reused for each file processed.
          The final deletion of these pointers now occurs in the main()
          loop of the executable. A similar change was made to
          TAO_IDL/be/be_produce.cpp as part of the changes above.

Thu Jul  1 08:54:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Multi_Priority_Mapping.{h,cpp}:
          Added checks for TAO_HAS_CORBA_MESSAGING != 0 in these files,
          we shouldn't build this when corba message is 0.

Thu Jul  1 00:18:07 2004  Marek Brudka  <mbrudka@elka.pw.edu.pl>

        * TAO_IDL/include/utl_string.h:
        Fixed small compilation error related to lack of size_t in
        included headers.

Wed Jun 30 11:55:46 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_root.cpp:
        * TAO_IDLinclude/ast_root.h:
        * TAO_IDLinclude/utl_scope.h:

          Made the nmembers() method of UTL_Scope virtual and
          added an override in AST_Root, so we can get a member
          count of the global scope without the predefined types
          and other keyword entries that are added at startup.

Wed Jun 30 06:50:37 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Reverted some of the changes in

          Tue Jun 29 11:13:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          so that TAO_IFR_EXE once again depends on TAO and IFR_Client.
          MSVC6 seems to think this is necessary. Thanks to Johnny
          Willemsen <jwillemsen@remedy.nl> for pointing this out.

Wed Jun 30 10:19:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Redundant_Naming/README:
          Fixed minor error, -R should be -r, this matches the run_test.pl
          script in the same directory. Thanks to Stanislaw Trytek
          <tryteks@pit.edu.pl> for noticing this.

Wed Jun 30 08:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Added missing include to fix compile error in LynxOS build

Tue Jun 29 11:13:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:

          Removed unused local variables.

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Modified TAO_IFR_EXE project to remove dependency on TAO
          and IFR_Client libraries, and added include paths to
          enable the preprocessor to find some TAO header files
          that are unavoidably included via be_global.h.

Mon Jun 28 23:48:55 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Xt_Stopwatch/Stopwatch_display.cpp (ACE_RCSID):

          Corrected typo in ACE_RCSID macro call.

Mon Jun 28 10:31:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connector_Registry.h:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Generator_Parser.h:
        * tao/GIOP_Message_Generator_Parser_10.h:
        * tao/GIOP_Message_Generator_Parser_12.h:
        * tao/GIOP_Message_Lite.h:
        * tao/Pluggable_Messaging.h:
        * tao/Transport.h:
          Small doxygen improvements.

        * tao/Transport.cpp:
          Fixed method name in debug statement

Mon Jun 28 09:31:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Operation_Table.h:
          Doxygen documentation improvement

Mon Jun 28 08:12:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Protocols/Protocols.mpc:
          Replaced requires under_construction_not_build_nightly_yet
          with dummy_label. Features are enabled by default with MPC,
          so the first one doesn't work, dummy_label is disabled
          in global.features. This prevents this test from building

Sun Jun 27 21:49:55 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/Security/MT_IIOP_SSL/test_i.cpp:
        * tests/Xt_Stopwatch/Stopwatch_display.cpp:
        * tests/Xt_Stopwatch/server.cpp:

          Added missing includes.

Sun Jun 27 11:20:10 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tao/PortableServer/AMH_Response_Handler.cpp:
          Rearranged the code in the TAO_AMH_Response_Handler destructor
          to solve problems with the SGI compiler.  Thanks to Simu Ruelle
          <simu.dcnruelle@wanadoo.fr> for motivating this.

Sun Jun 27 09:39:36 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:

          Missed to checkin the fix applied in this entry "Fri Jun 25
          06:12:49 2004  Balachandran Natarajan
          <bala@dre.vanderbilt.edu>".

        * tao/orbconf.h:

          Set TAO_USE_DOTTED_DECIMAL_ADDRESSES 1 on win32. Users find
          broken DNS surprising on Win32.

          If the user sets a value through their config.h, the change
          should have no effect. Thanks to Boris for the suggestion and
          Valery Salamakha for motivating this fix.

Fri Jun 25 14:45:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Utils.h:
          Removed part of old documentation header

        * tao/Transport_Descriptor_Interface.h:
          Doxygen tag fix

Fri Jun 25 11:43:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Any.h:
        * tao/Any_Impl.h:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Generator_Parser_12.h:
        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Profile.h:
        * tao/ORB_Core.h:
        * tao/orbconf.h:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Queued_Message.h:
        * tao/Stub.h:
        * tao/Thread_Per_Connection_Handler.h:
        * tao/Transport.h:
        * tao/Transport_Cache_Manager.h:
          Fixed small documentation typos and doxygen tag usage

Fri Jun 25 06:12:49 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.cpp (TAO):

          Removed wrong comments in the file.

        * tao/IIOP_Connector.cpp (make_connection):
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:

          Fixed an error in the above method. While trying to wait for
          connection completion, we never passed in the max_wait_time,
          assuming that the reactor would take care of it. The reactor did
          take care of unblocking after the specified time, but it never
          knows whether it was timeout on the handler or a timeout to
          drive the reactor. This never set the errno which we in TAO
          check to see whether it was timeout. This lead to a problem
          where timeouts where being seen as transient exceptions. Thanks
          to Milan Cvetkvic <milan dot cvetkovic at mpathix dot com> for
          reporting this problem.

Fri Jun 25 08:40:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
          Fixed unreachable code warning in Tru64 build

Fri Jun 25 08:36:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
          Made first argument of is_primary_member() const, just as it is
          declared in the header file.

Fri Jun 25 08:32:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/Repository_Configuration.cpp:
          Fixed unreachable code warnings in Tru64 build

Fri Jun 25 07:38:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.{h,cpp}:
          Moved include of ace/Null_Condition.h from cpp to h file to
          fix compile errors in our HPUX aCC build.

Thu Jun 24 18:29:12 2004  Irfan Pyarali  <irfan@oomworks.com>

        * performance-tests/Protocols:

          Broke test up into sender, distributor, and receiver components
          rather than client and server.  One can still get the old
          behavior by going directly from the sender to the receiver. Both
          receiver and distributor implement the same
          interface. distributor simply forwards all calls to the
          receiver.

Thu Jun 24 14:29:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Fixed typo in debug message

Thu Jun 24 14:21:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Codeset_Manager.cpp:
          Make formatting of a debug message the same as the others in TAO

        * tao/IIOP_Transport.h:
        * tao/ORB_Core.h:
        * tao/orbconf.h:
        * tao/Transport_Acceptor.h:
        * tao/Transport_Connector.h:
          Small doxygen tag fixes

Thu Jun 24 13:44:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/AMH_Single_Threaded/run_test.pl:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/run_test.pl:
          Corrected uselib path. Tests moved one directory level up, so
          also a ../ must be removed from the uselib path

Thu Jun 24 12:42:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_root/root.cpp:
          Don't generate #if 0/#endif around the explicit template
          instantiations in the skeleton file. I will generate the
          explicit template instantiations for the AMH_RH's in this
          file, so the code must be enabled.

Thu Jun 24 10:32:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Invocation_Base.cpp:
          Zapped unneeded ACE_UNUSED_ARG

Thu Jun 24 08:38:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * examples/Callback_Quoter/Notifier_Input_Handler.cpp:
        * tests/Param_Test/helper.cpp:
          Added missing includes for Tru64 no online build

Thu Jun 24 06:31:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Abstract_Interface/test_i.cpp:
        * tests/Bug_1269_Regression/Echo_Caller.cpp:
        * tests/Bug_1269_Regression/Echo.cpp:
        * tests/Bug_1270_Regression/Echo.cpp:
        * tests/Bug_1361_Regression/Echo.cpp:
        * tests/Bug_1020_Regression/Echo.cpp:
        * tests/Bug_1020_Regression/Server_i.cpp:
          Strange, our code had a bunch of TAO_ENV* in the cpp
          files. Changed them to the ACE_ENV* equivalents.

Wed Jun 23 14:29:12 2004  Irfan Pyarali  <irfan@oomworks.com>

        * performance-tests/Protocols:

          Several things were cleaned up and latency and throughput
          testing were added.

Wed Jun 23 14:29:12 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp (DRV_init):
        * TAO_IDLfe/fe_init.cpp (FE_init):

          Moved code that sets the preprocessor back into the executable
          build from the front end library where it was recently moved.
          This code checks for a preprocessor directive given to the
          C++ compiler, and the preprocessor was not getting set
          correctly on some platforms because the directive was
          passed in the executable build and not the front end
          library build.

Wed Jun 23 15:24:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Asynch_Queued_Message.h:
        * tao/ORB.h:
        * tao/Profile.h:
        * tao/Profile_Transport_Resolver.h:
          Small doxygen tag and documentation updates

Wed Jun 23 12:26:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Allocator.h:
          New base template for TAO allocators.

        * tao/Buffer_Allocator_T.{h,cpp}:
          New buffer allocator template capable of allocating an object
          of a certain type that is passed a template parameter with an
          allocator which type can also be passed as template parameter.

          These templates will be used for allocating the AMH response
          handler by using an allocator which will be added soon. Thanks to
          Balachandran Natarajan for helping with this.

Wed Jun 23 08:34:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
          Added missing includes for Tru64 no online build

Wed Jun 23 08:14:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
          Added missing includes for Tru64 no online build

Wed Jun 23 06:52:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/ORB.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/Transport.cpp:
          Replaced all checks for ACE_HAS_MEMORY_PROFILER with
          ACE_INITIALIZE_MEMORY_BEFORE_USE. This covers better what we do.

        * tao/Strategies/DIOP_Transport.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_i.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
          Replaced ACE_HAS_PURIFY with ACE_INITIALIZE_MEMORY_BEFORE_USE

Tue Jun 22 19:51:36 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/orbconf.h:

          Removed some of the TAO_ENV* macros. They were supposed to be
          deprecated from time immemorial and it was finally time to bid
          adieu.

        * tao/Any_Unknown_IDL_Type.cpp:
        * tao/ORBInitializer_Registry.h:
        * tao/ORB_Core.cpp:
        * tao/PortableServer/Object_Adapter.cpp:

          Strange, our code had a bunch of TAO_ENV* in the cpp
          files. Changed them to the ACE_ENV* equivalents.

Tue Jun 22 11:45:07 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Added VPATH statement to the verbatim block of the TAO_IFR_EXE
          project. This allows the gnu linker to find object files
          built from source files in some directory which is not a
          subdirectory of the local one. Thanks to Don Hinton
          <dhinton@dre.vanderbilt.edu> and Bala Natarajan
          <bala@dre.vanderbilt.edu> for their help with this problem.

Tue Jun 22 14:10:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/ORB.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/Transport.cpp:
          Replaced all checks for ACE_HAS_PURIFY with ACE_HAS_MEMORY_PROFILER,
          this is also set for valgrind and reduces the number of errors we
          get from valgrind

Tue Jun 22 08:40:02 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/be_global.cpp (prep_be_arg):

          Fixed unused arg warning.

Tue Jun 22 08:04:14 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Exception.cpp:
        * tao/orbconf.h:

          Removed # define's for  TAO_NAMESPACE_BEGIN, TAO_NAMESPACE_END,
          TAO_NAMESPACE_TYPE,  and TAO_NAMESPACE_DEFINE.

        * orbsvcs/orbsvcs/Notify/Notify_Extensions.cpp:

          Changed usage of the above macros to vanilla c++ keywords.

Tue Jun 22 12:44:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Sequence_Latency/AMH/Single_Threaded:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded:
          Moved the files from the first directory to the second. For the
          automatic performance tests scoreboard the tests must be directly
          under Sequence_Latency.

        * performance-tests/Latency/AMH/Single_Threaded:
        * performance-tests/Latency/AMH_Single_Threaded:
          Moved the files from the first directory to the second. For the
          automatic performance tests scoreboard the tests must be directly
          under Latency.

        * performance-tests/Latency/README:
          Updated location of AMH test

Tue Jun 22 07:18:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_global.cpp:
          Added missing includes for Tru64 no online build

Mon Jun 21 23:25:59 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Colocated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Federated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/RTCORBA_Baseline.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/RTCORBA_Callback.mpc:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/TCP_Baseline.mpc:

          Added "avoids += minimum_corba" entry.  The RTEC_Perf library
          these projects depend on cannot be built when minimum CORBA
          support is enabled so don't build thse projects in the minimum
          CORBA case either.

Mon Jun 21 09:04:23 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_init.cpp:
        * orbsvcs/IFR_Service/be_init.cpp:

          New files, see below.

        * orbsvcs/IFR_Service/drv_args_ifr.cpp:
        * orbsvcs/IFR_Service/drv_extern_ifr.h:
        * orbsvcs/IFR_Servicedrv_preproc_ifr.cpp:
        * orbsvcs/IFR_Service/tao_ifr.cpp:

          Removed files, see below.

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/tao_idl.mpc:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_extern.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/include/fe_extern.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:
        * orbsvcs/IFR_Service/IFR_Service.mpc:
        * orbsvcs/IFR_Service/be_extern.h:
        * orbsvcs/IFR_Service/be_global.cpp:
        * orbsvcs/IFR_Service/be_global.h:
        * orbsvcs/IFR_Service/be_produce.cpp:

          Refactored startup/initialization code of the
          IDL compiler and IFR loader to eliminate
          all duplicated code. Both executables now build
          exactly the same files, and the differences in
          initialization have all been moved into the
          respective backend libraries.

Mon Jun 21 13:54:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/CRC.{h,cpp}:
          Zapped these files from the repo, they are removed from the projects
          more than a year ago, but aren't deleted from the repo at that moment

Mon Jun 21 06:51:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/SCTP_SEQ.{h,cpp}:
        * orbsvcs/orbsvcs/AV.mpc:
          Instead of adding the sctp files conditionally to the generated
          makefile, always add the files, but use ACE_HAS_SCTP in the code
          itself. This makes the MPC file easier and more portable.

Sun Jun 20 18:34:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Typecode_Constants.cpp:

          Removed all the use of stupid namespace macros. Moved TC_opaque
          and TC_completion_status inside the TAO namespace. They are
          proprietary to TAO and shouldn't have been in the global
          namespace in the first place.

        * tao/Exception.cpp:
        * tao/Marshal.h:
        * tao/append.cpp:

          Added TAO namespace scoping to the extern declarations in these
          places for the typecodes mentioned above.

Sun Jun 20 12:45:36 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/Advanced/ch_3/Advanced_ch_3.mpc:
        * tests/Oneway_Buffering/Oneway_Buffering.mpc:
        * tests/Policies/Policies.mpc:
        * tests/Timeout/Timeout.mpc:

          Added missing "requires += corba_messaging" to projects that
          need it.  The clients require CORBA::Object methods only
          available when CORBA messaging support is enabled.

Sun Jun 20 12:17:50 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FtRtEvent.mpc (FTRT_EventChannel):

          Removed "avoids += minimum_corba".  It is now inherited via the
          ftrtevent base project.

        * performance-tests/Protocols/client.cpp (run):

          Fixed another emulated exception problem compile-time problem.
          ACE_ENV_SINGLE_ARG_PARAMETER in this case, not
          ACE_ENV_ARG_PARAMETER.

        * performance-tests/Protocols/server.cpp (end_test):

          Fixed "unused parameter warning in emulated exception builds.

Sun Jun 20 20:23:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Callback_Quoter/Consumer_Input_Handler.h:
        * examples/Callback_Quoter/Consumer_Signal_Handler.h:
        * examples/Callback_Quoter/Supplier_i.h:
          Removed include of ace/OS.h

        * examples/Callback_Quoter/Supplier_i.cpp:
          Added missing include

Sun Jun 20 18:03:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/On_Demand/Smart_Test_Factory.h:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.h:
        * orbsvcs/tests/FtRtEvent/PushSupplier.h:
          Don't mix virtual and non-virtual bases. This fixes warnings
          from the HP aCC compiler.

Sun Jun 20 17:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Registry.cpp:
        * tao/Object_KeyC.cpp:
        * tao/ORB.cpp:
        * tao/Profile.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
          Added include of ace/os_include/os_ctype.h to fix compile errors
          in the Tru64 build.

Sun Jun 20 10:22:23 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/TAO-metrics.html:

          Updated links.

        * docs/orbsvcs.html:

          This file was woefully out of date. Updated this file with new
          information.

Sun Jun 20 15:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
          Added include of ace/OS_NS_string.h to fix compile errors in
          HPUX builds

Sun Jun 20 09:10:37 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * docs/index.html: Added libraries.html.

        * docs/libraries.html: Updated the documentation to be more consistent.

Sun Jun 20 00:34:25 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/LocalObject.html:
        * docs/Tags.html:

          Updated documentation.

        * docs/libraries.html:

          New documentation for different libraries in $TAO_ROOT/tao.

Sat Jun 19 21:56:52 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp (push_structured_events):
        * performance-tests/Protocols/client.cpp (run):
        * performance-tests/Protocols/server.cpp (start_test):

          Fixed emulated exception compile-time errors and warnings.

Sat Jun 19 12:20:01 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO-INSTALL.html:

          Updated the file with relevant and latest information.

        * docs/minimumTAO.html:

          Moved the minimumTAO file from ACE_wrappers/docs, since it has
          no place there.

Sat Jun 19 09:43:06 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FtRtEvent.mpc (FTRT_EventChannel):

          This project requires CORBA messaging support.

Sat Jun 19 09:05:37 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:

          Added missing "avoids += minimum_corba".  These services require
          functionality that is disabled when minimum CORBA support is
          enabled.

Sat Jun 19 12:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * interop-tests/wchar/client.cpp:
        * interop-tests/wchar/server.cpp:
          Removed include of ace/streams.h, these are not needed and this
          fixes also the compile errors in the SuSE 90 builds.

Sat Jun 19 12:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/driver/drv_args.cpp:
          Added missing includes for Tru64 no online build

Fri Jun 18 14:29:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Impl.cpp:
        * tao/Acceptor_Registry.cpp:
        * tao/Adapter.cpp:
        * tao/Codeset_Manager.cpp:
        * tao/Condition.cpp:
        * tao/Connector_Registry.cpp:
        * tao/DLL_ORB.cpp:
        * tao/Exception.cpp:
        * tao/FILE_Parser.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_State.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Lite_Factory.cpp:
        * tao/IOP_CodecC.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/Object.cpp:
        * tao/Object_Ref_Table.cpp:
        * tao/Policy_Validator.cpp:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/TAO_Internal.cpp:
        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/Transport.cpp:
        * tao/WrongTransactionC.cpp:
        * tao/default_client.cpp:
        * tao/default_resource.cpp:
        * tao/default_server.cpp:
        * tao/IORManipulation/IORC.cpp:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTScheduling/RTSchedulerC.cpp:
        * tao/Strategies/SCIOP_Acceptor.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Lite_Factory.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Factory.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/Strategies/advanced_resource.cpp:
          Replaced ACE_LIB_TEXT, with ACE_TEXT, the first is only
          for within the ACE library

Fri Jun 18 08:42:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/drv_preproc_ifr.cpp:
        * orbsvcs/IFR_Service/tao_ifr.cpp:

          Updated files to reflect recent changes to IDL compiler front
          end in

          Thu Jun 17 12:51:40 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

Fri Jun 18 09:48:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connection_Handler.cpp:
          Improved output of debug messages.

        * tao/IIOP_Endpoint.cpp (set):
          In case we don't use dotted decimal addresses and the get_host_name()
          calls fails, log a message at level 5 that the get_host_name() has
          failed. This can be due to a misconfigured dns server and this
          call could take a long time then causing the app to not respond to
          other requests. This way the user can detect this a little bit easier
          from the log. In case the get_host_name() and get_host_addr()
          both fail we log an error instead of a debug message because we
          return -1 in that case and don't set the host_ member.

Fri Jun 18 09:13:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
          Don't mix virtual and non-virtual bases. This fixes warnings
          from the HP aCC compiler.

Thu Jun 17 13:53:38 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:

          Fixed IDL compiler crash caused by illegal valuetype
          member declaration.

Thu Jun 17 12:51:40 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_global.cpp:

          Removed all support for reading from standard input (for
          example 'tao_idl < foo.idl'). Reasons for this change are:

          - The IDL compiler has no filename on which to base the
            names of the generated files. Even if we make up a
            name, the generated files are unusable if foo.idl is
            included in another IDL file.

          - Most if not all C++ compilers (including gcc and Visual Studio)
            do not accept this kind of input.

          The above command line now outputs the error message
          "IDL: No input files" similarly to gcc's output in a similar
          situation.

Wed Jun 16 19:11:16 2004  Irfan Pyarali  <irfan@oomworks.com>

        * performance-tests/Protocols/server.cpp:

          Added ability to measure inter-arrival times of incoming frames.
          Also tracks which invocations were received and which were
          missed.

        * performance-tests/Protocols/client.cpp:

          Added ability to select protocol for test messages.  All setup
          and teardown messages will be using TCP while the test messages
          will use the specified protocol.

        * performance-tests/Protocols/test.idl:

          Separated setup, teardown, and shutdown of the test.

Wed Jun 16 15:54:56 2004  Irfan Pyarali  <irfan@oomworks.com>

        * performance-tests/Protocols/client.cpp (run):

          Small fix.

Wed Jun 16 13:54:56 2004  Irfan Pyarali  <irfan@oomworks.com>

        * performance-tests/Protocols/client.cpp:
        * performance-tests/Protocols/server.cpp:
        * performance-tests/Protocols/test.idl:

          Added ability to send messages of arbitrary size.

Wed Jun 16 11:25:49 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCORBA/Diffserv/server.cpp:
        * performance-tests/Protocols/client.cpp:
        * performance-tests/Protocols/server.cpp:

          Minor fixes.  Thanks to Johnny for pointing them out.

Wed Jun 16 11:52:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Updated old link

Sun Jun 13 00:38:20 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.cpp (push_structured_events):
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp (push_structured_events):

          Fixed improper assignment of a non-boolean value to a bool
          member.

Tue Jun 15 20:53:28 2004  Irfan Pyarali  <irfan@oomworks.com>

        * examples/PluggableUDP/tests/Basic/server.cpp:

          Added missing header file.

        * examples/PluggableUDP/tests/Basic/run_test.pl:

          Added -ORBdebuglevel option.

        * performance-tests/RTCorba/Thread_Pool/client.cpp:

           Fixed options help error.

Tue Jun 15 20:28:30 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Strategies/SCIOP_Endpoint.cpp:

          Added missing include files.

        * performance-tests/Protocols/server.cpp:
        * performance-tests/Protocols/client.cpp:

          Minor fix.

Tue Jun 15 16:13:30 2004  Irfan Pyarali  <irfan@oomworks.com>

        * performance-tests/Protocols:

          New test for measuring the performance of protocols under
          varying network conditions.

Mon Jun 14 19:34:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          The IDL compiler now generates .inl files instead of .i so updated
          this file

Mon Jun 14 19:32:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Updated supported environments table

Mon Jun 14 17:17:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Array_VarOut_T.inl:
          Corrected return type of TAO_Array_Forany_T<>::nocopy so that it
          matches its declaration

Mon Jun 14 17:13:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
          Added needed includes

Mon Jun 14 17:07:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.cpp:
          Added needed includes

Mon Jun 14 16:50:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/UIOP_Acceptor.cpp:
          Added needed includes

Mon Jun 14 11:50:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueFactory_Map.cpp:
          To make things easier to maintenance use the new
          ACE_HAS_EXPLICIT_STATIC_TEMPLATE_MEMBER_INSTANTIATION macro to check
          whether we need to explicit instantiate static template members.
          This macro is set for the GNU compiler for AIX, HPUX and VxWorks.

        * performance-tests/Cubit/TAO/DII_Cubit/client.cpp:
        * performance-tests/CCubit/TAO/IDL_Cubit/collocation_test.cpp:
        * performance-tests/CCubit/TAO/IDL_Cubit/server.cpp:
        * performance-tests/CRTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp:
        * performance-tests/CRTCorba/Thread_Pool/client.cpp:
          Added needed includes

Mon Jun 14 10:53:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/mfc/server.cpp:
          Added missing include to fix compile error in mfc builds

Mon Jun 14 09:27:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/IFR_Service/drv_args_ifr.cpp:
        * orbsvcs/IFR_Service/drv_preproc_ifr.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/Server_Repository.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * orbsvcs/PSS/PSDL_Datastore.cpp:
        * orbsvcs/Time_Service/Clerk_i.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.cpp:
        * orbsvcs/examples/RtEC/MCast/MCast.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/client.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/client.cpp:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/client.cpp:
        * orbsvcs/tests/Concurrency/CC_client.cpp:
        * orbsvcs/tests/Concurrency/CC_command.cpp:
        * orbsvcs/tests/CosEvent/Basic/Pull_Push_Event.cpp:
        * orbsvcs/tests/CosEvent/Basic/Push_Event.cpp:
        * orbsvcs/tests/CosEvent/Basic/Random.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.cpp:
        * orbsvcs/tests/Event/Basic/Control.cpp:
        * orbsvcs/tests/Event/Basic/Random.cpp:
        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp:
        * orbsvcs/tests/Event/lib/Driver.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * orbsvcs/tests/ImplRepo/nestea_i.cpp:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/client.cpp:
        * orbsvcs/tests/Log/Basic_Log_Test/Basic_Log_Test.cpp:
        * orbsvcs/tests/Notify/Basic/AdminProperties.cpp:
        * orbsvcs/tests/Notify/Basic/Sequence.cpp:
        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:
        * orbsvcs/tests/RTCosScheduling/Object1_i.cpp:
        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * orbsvcs/tests/Time/Client_i.cpp:
          Added needed includes

Mon Jun 14 07:04:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Callback_Quoter/Notifier_Input_Handler.cpp:
        * examples/Content_Server/AMI_Iterator/Content_Iterator_i.cpp:
        * examples/Content_Server/AMI_Iterator/client.cpp:
        * examples/Content_Server/AMI_Observer/client.cpp:
        * examples/Content_Server/SMI_Iterator/Content_Iterator_i.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/client.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_Client_i.cpp:
        * examples/PluggableUDP/tests/Performance/UDP_PerformanceClient.cpp:
        * examples/RTCORBA/Activity/Thread_Task.cpp:
        * examples/Simple/Simple_util.cpp:
        * examples/Simple/chat/Client_i.cpp:
        * tests/AMH_Oneway/server.cpp:
        * tests/AMI_Timeouts/timeout_client.cpp:
        * tests/AMI_Timeouts/timeout_i.cpp:
        * tests/Bug_1361_Regression/Server_Thread_Pool.cpp:
        * tests/Bug_1551_Regression/Hello.cpp
        * tests/Bug_1551_Regression/server.cpp
        * tests/Connection_Purging/client.cpp
        * tests/File_IO/server.cpp
        * tests/Leader_Followers/client.cpp
        * tests/LongUpcalls/AMI_Manager.cpp
        * tests/LongUpcalls/Manager.cpp
        * tests/MProfile/client.cpp
        * tests/MProfile_Forwarding/client.cpp
        * tests/MT_Timeout/Client_Task.cpp
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp
        * tests/Queued_Message_Test/Queued_Message_Test.cpp
        * tests/RTCORBA/Client_Protocol/client.cpp
        * tests/RTCORBA/Explicit_Binding/client.cpp
        * tests/RTCORBA/Thread_Pool/client.cpp
        * tests/RTCORBA/Thread_Pool/server.cpp
        * tests/RTCORBA/Thread_Pool/test_i.cpp
        * tests/RTScheduling/Thread_Cancel/test.cpp
        * tests/Timed_Buffered_Oneways/client.cpp
          Added needed includes

        * examples/RTCORBA/Activity/Activity.cpp:
          Use ACE_Reactor::timer_queue instead of the deprecated set_timer_queue

Sun Jun 13 15:28:03 2004  Phil Mesnier  <mesnier_p@ociweb.com>

        * interop-tests/wchar/client.cpp:
        * interop-tests/wchar/server.cpp:
          Ensure the run_test.pl script does not generate an error when
          the test is run on a platform without wchar support. In that
          case it simply reports that the test requires wchar support and
          moves on.

Sun Jun 13 14:12:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ih.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_is.cpp:

          Disabled generation of implementation class for abstract
          interfaces, since there is no skeleton class to inherit from.
          Thanks to Jiang Wei <jiangwei_1976@yahoo.com.cn> for reporting
          this bug.  Fixes bugid 1849.

Sun Jun 13 17:23:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
        * orbsvcs/orbsvcs/Trader/Trading_Loader.cpp:
          Added needed includes

Sun Jun 13 17:14:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.cpp:
          Added needed includes

Sun Jun 13 17:10:12 2004  UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
          Added needed includes

Sun Jun 13 07:56:20 2004  Phil Mesnier  <mesnier_p@ociweb.com>

        * interop-tests/wchar/client.cpp:
        * interop-tests/wchar/interop_wchar_i.cpp:
        * interop-tests/wchar/wchar_reference.cpp:
        * interop-tests/wchar/wchar_reference.h:
          Fixed the build in the non-wchar case so that the test builds
          clean, even if the result is trivial.

        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.h:
          Another fuzz related fix.

Sun Jun 14 11:36:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Operation_Table.cpp:
          Also on AIX we must explictly instantiate static template members.
          To make things easier to maintenance use the new
          ACE_HAS_EXPLICIT_STATIC_TEMPLATE_MEMBER_INSTANTIATION macro to check
          whether we need to do this. This macro is set for the GNU compiler for
          AIX, HPUX and VxWorks. Thanks to Ciaran Moran
          <ciaran.moran@similaritysystems.com> for reporting this. This fixes
          bugzilla 1823.

        * tao/ORB_Table.cpp:
        * tao/ORBInitializer_Registry.cpp:
        * tao/TSS_Resources.cpp:
          Also use the new macro above to determine whether to explicitly
          instantiate static template members.

Fri Jun 12 12:18:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/TCP.h:
          Don't mix virtual and non-virtual bases. This fixes warnings
          from the HP aCC compiler.

Fri Jun 11 22:11:38 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Array_VarOut_T.inl (operator[]):
        * tao/Fixed_Array_Argument_T.inl:

          More cases where MSVC++ 6 brain damage requires a
          reinterpret_cast<> or C-style "sledgehammer" cast instead of the
          proper const_cast<>.

Fri Jun 11 23:46:51 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

       * utils/IOR-parser/IOR-parser.mpc:
       * utils/IOR-parser/Orbix.IOR:
       * utils/IOR-parser/README:
       * utils/IOR-parser/Tao.IOR:
       * utils/IOR-parser/TaoSimple.IOR:
       * utils/IOR-parser/VisiBroker.IOR:
       * utils/IOR-parser/ior-handler.cpp:
       * utils/IOR-parser/ior-handler.h:
       * utils/IOR-parser/ior-parser.cpp:

          Removed these files from the repo. The utility is outdated and
          is superceeded by catior utility.

Fri Jun 11 21:47:12 2004  Phil Mesnier  <mesnier_p@ociweb.com>

        * interop-tests/wchar/interop_wchar.mpc:
        * tao/UTF16_BOM_Factory.h:
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.h:
          More fuzz fixes

Fri Jun 11 15:30:57 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.cpp:

          Fixed a memory leak from forwarded object references.

Fri Jun 11 12:11:16 2004  Phil Mesnier  <mesnier_p@ociweb.com>

        * interop-tests/wchar/client.cpp:
        * interop-tests/wchar/interop_wchar_i.cpp:
        * interop-tests/wchar/interop_wchar_i.h:
        * interop-tests/wchar/server.cpp:
          Added support for non-native exceptions.

        * interop-tests/wchar/interop_wchar.mpc:
        * tao/UTF16_BOM_Translator.h:
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.cpp:
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.h:
          Fixed fuzz reported issues.

        * interop-tests/wchar/run_tests.pl:
          Added argument to client command line causing server shutdown at
          test completion.

Fri Jun 11 13:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTCORBA/diffs/RTCORBA.diff:
          Made inheritance from TAO_Encodable also virtual, so that
          we don't mix virtual and non-virtual bases. This fixes warnings
          from the HP aCC compiler.

Thu Jun 10 19:44:55 2004  Olli Savia  <ops@iki.fi>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:

          Replaced NULL with 0 to fix build problems on LynxOS.

Wed Jun  9 15:04:16 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Array_VarOut_T.h (nocopy):
        * tao/Array_VarOut_T.inl (nocopy):

          Reverted change that made the return type of this method bool
          instead of CORBA::Boolean.  It turns out it is a CORBA defined
          method, meaning that it should return CORBA::Boolean.  Thanks to
          Jeff Parsons for pointing this out.

Wed Jun 09 16:49:17 2004  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/ImplRepo_Service/Activator_NT_Service.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.h:
        * tao/PortableServer/ImplRepo.pidl:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImplRepoC.h:
        * tao/PortableServer/ImplRepoC.i:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/ImplRepoS.h:
        * tao/PortableServer/ImplRepoS.i:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/ImR_LocatorC.h:
        * tao/PortableServer/ImR_LocatorC.i:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImR_LocatorS.h:
        * tao/PortableServer/ImR_LocatorS.i:

          Added command 'shutdown-repo' to tao_imr to permit the remote
          orderly shutdown of the ImR and any Activators registered with
          it.  This closes bug # 1335.

Tue Jun  8 17:00:14 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Any_Array_Impl_T.h (extract):
        * tao/Any_Array_Impl_T.cpp (extract):

          Made slice parameter non-const.  Part of a work-around for
          MSVC++ 6 issues involving conversion of non-const
          multidimensional arrays to const ones (e.g. int*[3][10] ->
          const int*[3][10]).

        * tao/Any_Array_Impl_T.inl:

          Added an Emacs C++ mode comment.

        * tao/Array_VarOut_T.h:

          No need to use CORBA::Boolean typedef.  The standard C++ bool
          type is fine for this case since this code is used internally
          within TAO.

        * tao/Array_VarOut_T.inl (in):

          MSVC++ 6 can't handle the const_cast<> in the multi-dimensional
          array case so reinterpret_cast<> cast instead.  It's not clear
          if this is really the right thing to do but the code won't
          compile with MSVC++ 6 without it.  We use a reinterpret_cast<>
          instead of a C-style "sledgehammer" cast to make it obvious that
          this code may have unresolved issues, and also to make it easier
          for others to find this code.

        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp (visit_array):

          Removed const_cast<> from CORBA::any extraction operator for
          CORBA IDL arrays.  It is no longer necessary, nor did it have
          the desired effect with broken MSVC++ 6.

Tue Jun  8 15:35:20 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp (visit_array):

          Simplified generated CORBA::Any insertion operator for CORBA IDL
          arrays.  The multiple const_cast<>s in the generated code are no
          longer necessary.  Fixes a compile-time error exhibited by
          MSVC++ 6.

Tue Jun  8 09:07:43 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:

          Added code generation for the implementation of the static
          _downcast() method for the value factory. Thanks to Jiang
          Wei <jiangwei_1976@yahoo.com.cn> for reporting the missing
          implementation. This closes [BUGID:1834].

        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:

          Cosmetic changes to code generation.

Tue Jun 08 12:07:55 2004  Simon McQueen  <sm@prismtechnologies.com>

         * tao/ORB_Core.cpp:
         * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
         * orbsvcs/ImplRepo_Service/Locator_Options.cpp:

           Allow the setting of an environment variable 'TAO_USE_IMR'
           which has the same effect as specifying an -ORBUseIMR value for
           all servers on a host (any explicitly set -ORBUseIMR value
           passed to individual ORBs will override it).

           This fixes bug #1336.

Fri Jun  4 00:16:19 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/CORBA_String.cpp (string_dup):
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Transport.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Transport.cpp:

          Minor "const correctness" improvements.

        * tao/Exception.h (initialized_):

          This member is now a "bool" instead of an "int."  The former is
          the more appropriate type in this case.

        * tao/Exception.cpp (init):

          Made array containing exception names static since its contents
          are fixed.

        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.i:
        * tao/Strategies/UIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Connector.cpp:

          Made arrays with fixed content static.  Reduces footprint
          slightly.

          Converted all ACE cast macro calls to their ANSI C++ cast
          counterparts.

          Minor "const correctness" improvements.

          Use prefix {in,dec}rement operators where applicable instead of
          postfix operators.  The former are more efficient.

        * tao/IIOP_Acceptor.h (TAO_IIOP_Acceptor):

          Reordered some class members/attributes to prevent the compiler
          from necessarily adding alignment padding.  Reduces the size of
          this class.

        * tao/IIOP_Connector.h (lite_flag_):
        * tao/Strategies/UIOP_Acceptor.h:
        * tao/Strategies/UIOP_Connector.h:

          No need to declare this member as a "CORBA::Boolean".  The
          standard C++ "bool" is fine, particularly since this flag is
          used internally.

        * tao/Strategies/UIOP_Endpoint.cpp:

          Converted all ACE cast macro calls to their ANSI C++ cast
          counterparts.

Wed Jun  2 00:37:17 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Acceptor_Registry.cpp:
        * tao/Any.cpp:
        * tao/Any_Array_Impl_T.cpp:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Impl.cpp:
        * tao/Any_Impl_T.cpp:
        * tao/Any_Special_Impl_T.cpp:
        * tao/Any_SystemException.cpp:
        * tao/Array_VarOut_T.cpp:
        * tao/Array_VarOut_T.inl:
        * tao/Base_Transport_Property.cpp:
        * tao/CDR.i:
        * tao/CDR_Encaps_Codec.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/CORBA_String.cpp:
        * tao/ClientRequestInfo_i.cpp:
        * tao/Fixed_Array_Argument_T.inl:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_State.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/Invocation_Base.cpp:
        * tao/LocalObject.cpp:
        * tao/MCAST_Parser.cpp:
        * tao/NVList.i:
        * tao/ORB_Core.cpp:
        * tao/ORB_Table.cpp:
        * tao/Object.cpp:
        * tao/Object_Ref_Table.cpp:
        * tao/ParameterMode.cpp:
        * tao/Sequence.i:
        * tao/Sequence_T.i:
        * tao/Service_Context.cpp:
        * tao/Sync_Strategies.cpp:
        * tao/Tagged_Components.cpp:
        * tao/Tagged_Profile.i:
        * tao/TimeBaseC.cpp:
        * tao/Transport.cpp:
        * tao/Transport_Connector.cpp:
        * tao/Var_Array_Argument_T.inl:
        * tao/orbconf.h:
        * tao/target_specification.i:

          Converted all ACE cast macro calls to their ANSI C++ cast
          counterparts.

        * tao/Array_VarOut_T.h (nocopy_):

          Made this attribute "const."  Its value never changes.

        * tao/Asynch_Queued_Message.cpp:
        * tao/Codeset_Manager.cpp:
        * tao/Exception.cpp:
        * tao/IIOP_Transport.cpp:
        * tao/Incoming_Message_Queue.cpp:
        * tao/ORB.cpp:
        * tao/Object_KeyC.cpp:
        * tao/Synch_Queued_Message.cpp:
        * tao/Transport_Cache_Manager.cpp:
        * tao/UTF16_BOM_Translator.cpp:
        * tao/append.cpp:
        * tao/skip.cpp:

          Converted all ACE cast macro calls to their ANSI C++ cast
          counterparts.

          Use prefix {in,dec}rement operators where applicable instead of
          postfix operators.  The former are more efficient.

        * tao/CORBA_String.h (operator CORBA::WChar *):
        * tao/CORBA_String.inl (operator CORBA::WChar *):

          Corrected this conversion operator.  The latest C++ mapping
          requires that the conversion return "CORBA::WChar *&" instead.

        * tao/GIOPC.h:

          No need to include "tao/Any.h".

        * tao/PortableInterceptorC.h:

          No need to include "tao/Any.h", nor "tao/PolicyC.h".  Include
          the much lighterweight "tao/Policy_ForwardC.h" instead.

        * tao/Var_Array_Argument_T.cpp:

          Nuked trailing whitespace.

        * tao/default_resource.cpp:
        * tao/default_server.cpp:

          Use prefix {in,dec}rement operators where applicable instead of
          postfix operators.  The former are more efficient.

        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Timeout_Handler.cpp:
        * tao/Messaging/Messaging_PolicyFactory.cpp:

          Corrected ACE_RCSID macro arguments.  "tao" -> "Messaging".

Tue Jun  1 23:20:18 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/interceptors.html:

          Updated Portable Interceptor release notes.  Thanks to Trina
          Wisler <trina.wisler@hp.com> for raising questions that revealed
          obsolete comments in these notes.

Sat May 29 12:21:17 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp (DRV_check_for_include):

          Added code to remove whitespace before checking for '#'.
          The CORBA spec allows whitespace to appear before any
          preprocessing directive. Thanks to
          Merlin Ran <merlinr@21cn.com> for sending in the
          example IDL files that uncovered this bug.

Fri May 28 18:46:11 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/be_include/be_visitor_ccm_pre_proc.h:

          Added method visit_eventtype_fwd(), so the implied
          IDL for a forward declared eventtype Foo (namely the
          associated FooConsumer interface) can be added to the
          AST and used before the eventtype is fully defined.

        * TAO_IDL/be/be_visitor_eventtype_fwd.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/eventtype_fwd_ch.cpp:

          Added code to the eventtype_fwd visitor to generate a
          forward declaration of the associated consumer interface.

        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be_include/be_decl.h:

          Added flag and accessors specific to the ccm_pre_proc
          visitor, to mark the forward declared eventtype as
          processed by this visitor, in order to prevent its
          being processed again when the full definition is seen.

        * TAO_IDL/util/utl_scope.cpp:

          Added code to return a forward declared eventtype's
          associated full-definition node from a lookup, similar
          to what is already done for interfaces, valuetypes and
          components.

        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:

          Fixed several mistakes in generated code when ValueBase
          appears in a union, struct, exception, sequence, or array.

        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:

          Fixed parsing code to recognize and handle CORBA::Object
          as the interface type of a provides or uses declaration.

Thu May 27 18:28:59 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_Basic_Impl.cpp:

          Modified constructor to put CORBA::tk_null in the kind_
          member if the TypeCode_ptr argument is null (which would be
          the case if an application tries to insert a basic type
          into an Any before initializing an ORB), avoid the crash
          that would result from accessing a null TypeCode_ptr.
          Extractions from this Any will fail, since the check for
          type code equivalence will catch the null TypeCode_ptr
          and return false. It would be nice to throw BAD_TYPECODE
          when we see Any insertion before ORB initialization, but
          unfortunately there is no way to do it so that (1) the
          application can catch it and (2) it will work with
          emulated exceptions. Thanks to David Fleeman
          <dfleeman@prime.cs.ohiou.edu> for catching this bug,
          which resurfaced due to the overhaul of the Any_Basic_Impl
          class about 8 months ago.

Thu May 27 11:56:27 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_typedef.cpp:
        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/ctor_assign.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_cs.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/fe/fe_declarator.cpp:
        * TAO_IDL/fe/fe_extern.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_scope.cpp:

          Replaced all uses of deprecated ACE cast macros with standard
          C++ casts.

Thu May 27 11:18:46 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * man/man1/TAO_Concurrency_Service.1:
        * man/man1/TAO_CosEvent_Service.1:
        * man/man1/TAO_Event_Service.1:
        * man/man1/tao_idl.1:
        * man/man7/TAO.7:

          Removed these man pages.  They are out-of-date and no longer
          maintained.

Wed May 26 13:44:32 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any.h:
        * tao/Any_Impl.cpp:
        * tao/Any_Impl.h:

          Added comments to the void* value() method saying that it no
          longer appears in the CORBA C++ mapping, is deprecated by the
          OMG, and is no longer used in TAO.  Thanks to Mike Hepburn
          <mike@anvil.com> for motivating this change.

        * tao/append.cpp (TAO_Marshal_Union::append):
        * tao/skip.cpp (TAO_Marshal_Union::skip):

          In finding the value of an enum discriminator, replace the
          call to the Any::value() with the creation of an ACE
          Message Block and the marshaling of the Any's contents
          into it. This removes the last remaining uses of the
          Any's void* value() in TAO.

Mon May 24 22:48:44 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:

          Clean up the formatting of code generation for valuetype
          factory operations.

Mon May 24 09:57:24 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp (gen_throw_spec):

          Added another leading double colon generation, this one
          in the node helper method that generates the throw
          spec for other node helper methods that generate base
          class operations by traversing the inheritance graph.
          Thanks to Jessica Pistole <Jessica.Pistole@jhuapl.ed>
          for pointing this one out.

Sun May 23 17:31:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_argument/vardecl_ss.cpp:

          Added yet another leading double colon to the declarations
          of the arguments inside the skeleton method body. Thanks
          to Tao Lu <lu@dre.vanderbilt.edu> for finding the bug.

Sun May 23 14:46:52 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:

          Reverted changed just made in

          Sun May 23 14:00:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          For some reason, the leading '::' before an operation name
          in *C.cpp confuses MSVC 7.1 about the preceding return type
          declaration, if it is itself a scoped name.

        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp:

          Fixed duplicate generation of the definition of array helper
          methods - the check to exclude generation when the array
          in question is from an included file had a hole in it.
          Thanks to Thomas Groth <groth.th@nord-com.net> for sending
          in the example pair of IDL files that demonstrated the
          problem.

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:

          Fixed implied IDL generation of reply handler interface to
          have the scoped name correctly set, so it in turn generates
          correctly when used as the first argument in the sendc_*
          method.

Sun May 23 14:00:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_argument/argument.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:

          Added leading double colons to the generation of scoped
          names for the argument list, in the stub head and source
          files, and to the generation of the operation name in
          the stub source file.

Sun May 23 12:03:04 2004  Olli Savia  <ops@iki.fi>

        * TAO_IDL/util/utl_global.cpp:

          Removed platform specific portions of filename canonicalization
          and replaced them with the new ACE_OS::realpath() function.

          Utilized ACE macros instead of conditional compilation.

Fri May 21 17:25:05 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:

          Added leading double colons in several places where scoped
          names are generated - in the exception list in raises
          clauses, and in the template argument to TAO::Arg_Traits
          when it is instantiated. Thanks again to Jessica Pistole
          <Jessica.Pistole@jhuapl.edu> and also to Ed Mulholland
          <emulholl@atl.lmco.com> for coming up with the use cases
          where the necessity for disambiguation is demonstrated.

Fri May 21 15:01:06 2004  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.cpp:

          Added the explicit include of OS.h necessary to get lib built on
          linux with gcc 3.3.1. Also included the changelog entry I
          apparently neglected to commit.

Fri May 21 09:20:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_union.cpp:

          Added missing check for 0 when narrowing elements of
          a union's scope to union_branch.

Thu May 20 21:28:41 2004  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/UTF16_BOM_Factory.cpp:
        * tao/UTF16_BOM_Factory.h:
        * tao/UTF16_BOM_Translator.cpp:
        * tao/UTF16_BOM_Translator.h:
        * tao/Codeset_Manager.cpp:
        * tao/Codeset_Manager.h:
        * tao/tao.mpc:

          Using UTF16 as the native wide character codeset requires a
          special translator even if the transmission wide char codeset is
          also UTF16. this is because byte ordering for UTF16 data is
          independant of the byte order of the enclosing encapsulation. In
          addition, an optional byte order marker (BOM) may be serialized
          with the data. No other wide char codeset suffers from this
          feature.

          As defined by the CORBA specification (up to 3.0.2), UTF-16 data
          is implictly big-endian if no BOM is present. In my opinion,
          this violates the UTF specification that states that unicode
          data implies no ordering. To me, it seems like if no BOM is
          present the byte order of the containing encapsulation should
          enforce the order.

        * interop-tests:

          This is a new directory intended to hold a suite of tests
          designed to demonstrated interoperability between TAO and other
          ORBs. Right now the only "other" ORB people are interested in
          testing with is JacORB.

        * interop-tests/wchar:

          This is a test used to validate wide character data
          interoperability. It contains implementations for both TAO and
          JacORB clients and servers. See the associated README file for
          more details.

        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.cpp:
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.h:

          Fixed a number of issues related to translation that were
          discovered after actually building and running on a proper UCS4
          enabled system rather than on a simulated environment. This
          included correcting an error in the computation of an index used
          to read raw UTF16 data, forcing the output to use BOM correctly,
          and to raise a MARSHAL exception if a single UCS4 wchar value
          cannot be encoded into a single UTF16 value.

Thu May 20 17:14:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:

          Added leading '::' before generating scoped names
          of inherited interfaces (for component, supported
          interfaces) to avoid ambiguity when a module name
          is repeated at a different level of nesting. Thanks
          to Jessica Pistole <Jessica.Pistole@jhuapl.edu> for
          pointing out the bug.

Wed May 19 18:28:21 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCORBA/Diffserv:

          Renamed TAO_Custom_Network_Priority_Mapping to
          Custom_Network_Priority_Mapping.

Wed May 19 09:14:00 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp (validate_included_idl_files):

          Changed more instances similar to the change in

          Tue May 18 10:15:02 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          Again, thanks to Olli Savia <ops@iki.fi> for pointing them out.

Wed May 19 10:19:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Options.html:
          Added documentation of -ORBVerboseLogging. Thanks to
          Cyrille Chépélov <cyrille@softek.fr> for supplying this.

Wed May 19 09:20:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/NamingViewer/BindNewContext.h:
        * utils/NamingViewer/NamingObject.h:
        * utils/NamingViewer/NamingTreeCtrl.h:
        * utils/NamingViewer/NamingViewerDlg.{h,cp}:
          Corrected include paths

Tue May 18 10:15:02 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sunsoft.cpp:

          Changed the generation of boolean literals and case labels
          to use 'true' and 'false'. With case labels, this output
          will make it immediately obvious by inspection of source
          code that we are dealing with a union having a boolean
          discriminator, without having to check the header file or
          the IDL file. The display of boolean literals (rhs of
          boolean constants) was also change for consistency.

        * TAO_IDL/be/be_union.cpp:
        * TAO_IDL/be_include/be_union.h:

          In the helper method to decide whether an empty default case
          should be added to switch statements in generated code for
          union copy constructor, assignment operators, CDR operators,
          etc., changed one of the factors from the number of members
          to the number of labels, since a union member may have
          multiple case labels.

        * TAO_IDL/util/utl_global.cpp (validate_included_idl_files):

          Changed a check for null path from 'pre_abspath', which is
          allocated on the stack and is never null, to the return
          value of the macro FULLPATH, which is what we want. Thanks
          to Olli Savia <ops@iki.fi> for pointing this out.

Tue May 18 09:37:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/mfc/server.cpp:
          Fixed compile error

Tue May 18 09:35:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/NamingViewer/BindDialog.h:
          Fixed include path

Mon May 17 17:33:27 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_union.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_assign_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_reset_cs.cpp:
        * TAO_IDL/be_include/be_union.h:

          Removed generation of empty union default case (as distinguished
          from the non-empty explicit default case when the IDL union
          has an explicit default case label) when the discriminator
          is of boolean type and the union has 2 members. In the
          case where the descriminator is an enum type and all the enum
          values are used as case labels, the empty default case is
          required by some compilers (this fix was made to the IDL
          compiler some time ago). In the case in question, however,
          it seems some compilers emit warnings if the switch
          statements have 2 cases plus the default. These generated
          switch statements appear in the union's copy constructor,
          assignment operator, _reset() method, and CDR operators.

Mon May 17 12:46:26 2004  Carlos O'Ryan  <coryan@atdesk.com>

        * orbsvcs/performance-tests/RTEvent/lib/Shutdown.h:
        * orbsvcs/performance-tests/RTEvent/lib/Shutdown.inl:
          Fixed more exception macros problems.

Mon May 17 11:23:23 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.i:
          Changed formatting of the code so that we don't get incorrect fuzz
          errors.

Mon May 17 11:18:23 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/ImplRepo/NameService/run_test.pl:
          Because of the MPC conversion we don't need a special tao_imr
          location for windows anymore

Mon May 17 09:49:23 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/ImplRepo/locked/run_test.pl:
          Because of the MPC conversion we don't need a special tao_imr
          location for windows anymore

Fri May 14 22:04:23 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/RTCORBA/Linear_Network_Priority_Mapping.cpp (to_network):
        * tests/RTCORBA/Diffserv/Custom_Network_Priority_Mapping.cpp
          (to_network):

          Fixed "conversion from double to int" warnings.

Fri May 14 15:38:09 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCORBA/Diffserv/server.cpp (main):

          Minor fix.

Fri May 14 15:29:36 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tao/RTCORBA/Linear_Network_Priority_Mapping:

          Several changes were made to simplify this class. <increment_>,
          <max_> and <min_> were removed.  Conversion from corba to
          network in to_network() was corrected.

        * tao/IIOP_Connection_Handler.cpp (set_dscp_codepoint):

          "Failed to set Diffserv" message was incorrectly getting printed
          out. IPDSFIELD_DSCP_DEFAULT was made a valid DiffServ code
          point.

        * tests/RTCORBA/Diffserv/server.cpp:

          test_method() was modified since there is no passing or
          respecting of corba (thread) priorities.  Only network
          priorities are set. Command line options were also simplified.
          Both servants are registered in the same instance of the
          server.  The first one in the RootPOA and the other one in a POA
          with the correct ServerProtocolPolicy.

        * tests/RTCORBA/Diffserv/client.cpp:

          Serveral changes were made to correct and simplify code in this
          file.  PolicyCurrent was used rather than using the ORB_Core.
          Command line options were also simplified.  Server is shutdown
          only if specified.

        * tests/RTCORBA/Diffserv/Custom_Network_Priority_Mapping:

          Several changes were made to simplify this class. <increment_>,
          <corba_priority_>, <max_> and <min_> were removed.
          desired_priority() was renamed to corba_priority().  Conversion
          from corba to network in to_network() was corrected.  An assert
          was added to to_CORBA() since it should never be called.

Fri May 14 09:43:03 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/DII_Invocation.cpp (handle_user_exception):

          In the loop that checks for a match with the exception list,
          changed the local variable holding the list item to
          CORBA::TypeCode_var, since the list's item() method duplicates
          the type code it returns. Thanks to Vinod Kumar
          <vinod_kumar@agilent.com> for reporting the potential memory
          leak.

Thu May 13 22:35:59 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Param_Test/helper.cpp (gen_fixed_struct, gen_step):

          Fixed "unsafe use of type 'bool' in % operation" warning
          exhibited by MSVC++ 7.1 by forcing the modulus operator to be
          executed prior to the cast to a bool, instead of executing the
          modulus operator on a boolean value.

Thu May 13 20:26:53 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/RTEvent/lib/ORB_Shutdown.inl
          (operator):

          Added missing ACE_TRY_CHECK.  Fixes a warning about an unused
          label in emulated exception builds.

Thu May 13 13:32:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Muxed_GIOP_Versions/run_test.pl:
          Increased timeout of the server, the server runs the orb for 120
          seconds and then quits, so in the run_test.pl we now don't wait
          120 seconds but 150, the test looks to be failing on the slower
          windows systems but almost takes 120 seconds on my fast
          development system.

Thu May 13 12:50:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Crash_On_Write/client.cpp:
          Output some more iteration message so that we can better see
          in the daily builds what happens during the crash of this
          test on Windows.

Thu May 13 11:26:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Reply/client.cpp:
          When the client has receivel all replies invoke the shutdown() on
          the server so that the server stops controlled.

        * tests/Big_Reply/Client_Task.cpp:
          Fixed typos and formatting.

        * tests/Big_Reply/server.cpp:
          Added some extra lines so that we can see that the server starts
          and stops.

        * tests/Big_Reply/run_test.pl:
          Use WaitKill instead of TerminateWaitKill on the server. Under
          Windows the TerminateWaitKill just doesn't give any feedback that
          the server has been killed, WaitKill does give this info correctly.

Thu May 13 09:22:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Big_Request_Muxing/server.cpp:
          Added some more debug lines and changed timeouts and way of
          ending the server in the perl script. On Windows it seems the
          server was killed before it was really finished. On my system
          this tests runs now without problems.

Wed May 12 21:46:11 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Update_Manager.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Update_Manager.h:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/server.cpp:

          Fixed single-threaded build compile-time errors
          (e.g. "ACE_MT_SYNCH" -> "ACE_SYNCH", "ACE_Thread_Mutex" ->
          "ACE_SYNCH_MUTEX", etc.).

Wed May 12 20:09:16 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_i.cpp:
        * tests/Connection_Timeout/client.cpp (main):

          Fixed "use of undefined preprocessor constant" warnings
          revealed by compiling with g++'s "-Wundef" preprocessor flag.

        * tests/Big_Twoways/Session.cpp (validate_connections):
        * tests/LongUpcalls/AMI_Manager.cpp (validate_connection):
        * tests/LongUpcalls/Manager.cpp (validate_connection):

          A preprocessor conditional was checking the value of an
          incorrect preprocessor constant.  "TAO_HAS_MESSAGING" ->
          "TAO_HAS_CORBA_MESSAGING".  Fixes problem where code that used
          CORBA::Object::_validate_connection() method was never called.

        * tests/ICMG_Any_Bug/client.cpp:

          Reordered #include preprocessor directives to force all
          necessary non-dependent names to be parsed prior to the
          templates that use them (i.e. TAO_Pseudo_{Var,Out}_T).  Fixes
          GNU g++ 3.4 compile-time errors.

Wed May 12 09:31:10 2004  Carlos O'Ryan  <coryan@atdesk.com>

        * orbsvcs/performance-tests/RTEvent/lib/ORB_Shutdown.h:
        * orbsvcs/performance-tests/RTEvent/lib/ORB_Shutdown.inl:
          Another case of simulated exceptions not working well with
          Auto_Functor.

Wed May 12 12:04:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp (process_parsed_messages):
          In case of TAO_PLUGGABLE_MESSAGE_MESSAGERROR an ACE_ERROR_RETURN
          was used, but this was inside a TAO_debug_level check. The result
          was that when we enabled TAO_debug we get an error -1, without
          TAO_debug, we just return 0 and ignore the error. This is really
          not wat we want.

        * tao/Adapter.cpp:
        * tao/Codeset_Manager.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_State.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Endpoint.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/Leader_Follower.cpp:
        * tao/Object.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/Policy_Validator.cpp:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Synch_Reply_Dispatcher.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/RTCORBA/Multi_Priority_Mapping.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
          During searching for a ACE_DEBUG line with a side effect I updated
          the formatting of debug lines, changed some checks from
          TAO_debug_level >= 3 to TAO_debug_level > 2 and use {} around
          ACE_DEBUG lines to make clear that when checking TAO_debug_level
          we do after that only the ACE_DEBUG and nothing more.

Wed May 12 09:24:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Muxed_TMS.cpp:
          Improved formatting of some debug lines, in the dispatch_reply()
          in case of an unbind error it is not needed to check the result
          again because this is already done by an if, also we logged the
          request id twice, removed one logging.

Wed May 12 09:09:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Codeset_Manager.cpp:
          Updated formatting of the debug lines so that the formatting is
          similar to the rest of the debug lines in TAO. This makes the logging
          easier to read.

Wed May 12 08:48:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IFR_Client/IFR_Base.pidl:
          Changed file header to doxygen style

Wed May 12 06:52:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.h:
          Removed usage of ACE_INLINE_FOR_GNUC, this was for a bug in GCC 2.7.3
          which we don't support anymore

Tue May 11 22:28:45 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/be_include/be_visitor_ccm_pre_proc.h:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/include/ast_interface.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/util/utl_global.cpp:

          The creation and addition to the AST of the uses-multiple-related
          implied IDL nodes (a struct containing connection info
          and a sequence of these structs) has been moved from the
          class be_visitor_ccm_pre_proc to the parser. An operation
          returning the sequence appears not only in implied IDL,
          but also in the generated executor IDL. This means that
          the sequence must be in the symbol table so it can be
          looked up, and therefore the addition of implied IDL nodes just
          before code generation is no longer sufficient.

Tue May 11 11:49:20 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_interface.cpp:

          Cosmetic changes.

        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:

          Fixed assignment of scoped names to implied IDL constructs
          related to 'uses multiple' that are added to the AST before
          code generation.

Tue May 10 13:36:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Remote_Invocation.cpp:
          Improved debug lines so that formatting is the same as in the
          rest of TAO and the method names are given.

Tue May 10 13:01:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Changed a few debug lines to make the logs more readable

Tue May 10 12:33:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Transport.cpp:
          Removed not spaces in debug lines

Tue May 10 12:03:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Corrected incorrect method names in ACE_DEBUG lines, found this
          will searching why some tests fail on Windows.

Tue May 10 08:50:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Asynch_Reply_Dispatcher.{h,cpp}:
          Added an ACE_Allocator* to the constructor argument list which
          is passed to the base.

        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
          Instead of always allocating the reply dispatcher from the heap,
          try to get an allocator, if we get one, use that allocator to
          allocate the object and pass the alloctaor pointer to the object.
          When there is no allocator, we use the heap.

Tue May 10 08:39:56 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/releasenotes/index.html:
          Added missing html tag

Tue May 10 08:31:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Asynch_Reply_Dispatcher_Base.{h,cpp}:
          Added an ACE_Allocator pointer member which can be passed
          with the constructor. This is the allocator that is then used
          to allocate this instance of the reply dispatcher. This
          allocator will then be used to free this object. When no
          allocator has been passed, we assume we come from the heap. This
          is added to be able to get the AMI Reply handlers from a local
          memory pool.

Mon May 10 10:00:23 2004  Carlos O'Ryan  <coryan@atdesk.com>

        * orbsvcs/performance-tests/RTEvent/lib/Auto_Disconnect.h:
        * orbsvcs/performance-tests/RTEvent/lib/Auto_Disconnect.inl:
          The Auto_Functor class does not use simulated exceptions, move
          that code into the functor.

Mon May  9 13:47:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI_Buffering/AMI_Buffering_Admin.cpp:
          Added missing ACE_CHECK macro usage

Mon May  9 13:14:24 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI_Buffering/AMI_Buffering.cpp:
          Added missing ACE_CHECK macro usage

Mon May  9 10:02:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        For AMH and AMI TAO allocates response handlers currently from the
        heap. This checkin adds the needed code to retrieve allocators for
        allocating the AMH/AMI response handlers and to make things
        configurable. The needed changes to use these allocators will be
        added soon.

        * tao/Resource_Factory.{h,cpp}:
          Added methods to get an amh or ami response handler
          allocator. This allocator is then used later to allocate the
          amh/ami response handlers.

        * tao/default_resource.{h,cpp}:
          Overruled the amh/ami response handler allocator methods to
          give back a heap allocator or a local memory pool allocator
          dependent on the define TAO_USE_LOCAL_MEMORY_POOL

        * tao/Thread_Lane_Resources.{h,cpp}:
          Added accessors and members for storing the amh/ami allocators.
          The allocators are stored in a instance of this class. When no
          allocator is set then we get one from the resource factory.

        * tao/Thread_Lane_Resources.i:
          Removed this file, it is empty and when we need it, we will add
          it again.

        * tao/Strategies/advanced_resource.{h,cpp}:
          Added option to configure a not locked version of the local
          memory pool allocator just the same way we can do for the other
          allocators. New options are -ORBAMIResponseHandlerAllocator and
          -ORBAMHResponseHandlerAllocator

        * docs/Options.html:
          Documented -ORBAMIResponseHandlerAllocator and
          -ORBAMHResponseHandlerAllocator

Sat May  8 00:41:20 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/examples/LoadBalancing/ServerRequestInterceptor.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ServerRequestInterceptor.h:

          Changed "ACE_Thread_Mutex" template argument to
          "ACE_SYNCH_MUTEX".  Allows this code to build in single-threaded
          builds.

        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/server.cpp:

          Use the "ACE_SYNCH" trait instead of "ACE_MT_SYNCH".  Doing so
          allows the code to build in a single threaded environment.
          Fixes single-threaded build compile-time errors.

Fri May  7 14:58:59 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * orbsvcs/tests/RTCosScheduling/server.cpp:

          Include "tao/Version.h" to pull in TAO_*_VERSION preprocessor
          constant definitions.  Addresses undefined preprocessor constant
          g++ warnings when using the "-Wundef" preprocessor flag.

Fri May  7 16:44:33 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:

          When creating implied IDL nodes for home declarations,
          appended 'Explicit' to the name of the parent (which,
          if it exists, will have already been created as implied
          IDL) of an explicit home interface. Without this suffix,
          explicit home interfaces would inherit from both the
          explicit and implicit base class home interfaces,
          leading to problems compiling the servant class
          for the derived home, generated by the CIDL compiler.

Fri May  7 14:46:25 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * GNUmakefile:

          Removed this GNUmakefile.  It must now be generated by MPC.

Fri May  7 10:34:24 2004  Carlos O'Ryan  <coryan@atdesk.com>

        * orbsvcs/performance-tests/RTEvent/lib/Auto_Disconnect.h:
        * orbsvcs/performance-tests/RTEvent/lib/Auto_Disconnect.inl:
        * orbsvcs/performance-tests/RTEvent/lib/Auto_Disconnect.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Auto_Functor.h:
        * orbsvcs/performance-tests/RTEvent/lib/Auto_Functor.inl:
        * orbsvcs/performance-tests/RTEvent/lib/Auto_Functor.cpp:
          Removed, use the ACE_Utils::Auto_Functor<> class template.

        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/client.cpp:
          Use reset() instead of the assignment operator for some
          Auto_Functor related classes.

        * tao/Utils/ORB_Destroyer.h:
        * tao/Utils/Implicit_Deactivator.h:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.h:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.h:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.h:
        * orbsvcs/performance-tests/RTEvent/lib/Control.cpp:
          Workaround MSVC6 lameness, use ACE_Utils::Auto_Functor
          explicitly instead of the type introduced into TAO::Utils.

Fri May  7 08:47:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.mpc:
          Removed explicit listing of files

        * tao/PortableServer/ThruPOA_Object_Proxy_Impl.{cpp,h}:
        * tao/PortableServer/Direct_Object_Proxy_Impl.{cpp,h}:
          Removed these files from the repo. Old and not used for a long
          time.

Thu May  6 22:14:05 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * rules.tao.GNU:
        * TAO_IDL/be/be_global.cpp (BE_GlobalData):
        * TAO_IDL/driver/drv_args.cpp:

          ".inl" is now the default TAO_IDL generated stub/skeleton inline
          file extension instead of ".i".  The latter is generally used
          for preprocessed C sources.  Updated these files accordingly.

        * TAO_IDL/driver/drv_preproc.cpp:

          Fixed potential buffer overrun problem where temporary filename
          could extend beyond character array boundary.

          Use mkstemp() to create temporary files if supported by the
          platform.  Closes some security holes (e.g. easily guessed
          temporary filenames, and race condition between check for
          existence of file with selected name and opening that file).
          Also addresses GNU linker warnings about dangerous use of
          mktemp() function.

          Cleaned up some ACE_ERROR macro arguments.  They were
          unnecessarily complicated (e.g. unnecessarily using too many
          "%s" arguments).

Thu May 7 2:00:00 2004  Marek Brudka  <mbrudka@elka.pw.edu.pl>

        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/CosEC_RtEC_Based_Tests_Multiple.mpc:
          moved to CosEC_RtEC_Based_Mult.mpc, project names changed from
          *Supplier, *Consumer to resp. *Supp, *Cons
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Thread_Per_Connection.mpc:
          moved to Thread_Per_Conn.mpc. Project names *Sequence* changed to *Seq*.

Thu May 7 1:00:00 2004  Marek Brudka  <mbrudka@elka.pw.edu.pl>

        * orbsvcs/tests/Notify/*.mpc:
          *Sequence*.mpc moved to *Seq*.mpc
          *Structured*.mpc moved to *Struct*.mpc
          Project names inside *mpc changed according to rules:
            *Notify*     -> *Ntf*
            *Structured* -> *Struct*
            *Sequence*   -> *Seq*
            *Consumer*   -> *Cons*
            *Supplier*   -> *Supp*
        * orbsvcs/tests/AVStreams/*mpc:
          AVStreams*.mpd moved tt AVS*.mpc
          Projects names inside *mp changed according to rules:
          *sender*   -> *send*
          *receiver* -> *recv*
        * orbsvcs/tests/InterfaceRepo/*mpc:
          InterfaceRepo*.mpc moved to IFR*.mpc

Thu May 6 23:00:00 2004  Marek Brudka  <mbrudka@elka.pw.edu.pl>

        * tests/Smart_Proxies/Smart_Proxies*.mpc: truncated to SP_*.mpc
        * tests/NestedUpcall/Triangle_Test/Traingle_Test.mpc:
          truncated to TT.mpc

Thu May 6 22:30:00 2004  Marek Brudka  <mbrudka@elka.pw.edu.pl>

        * tests/RTCORBA/Profile_And_Endpoint_Selection/Profile_And_Endpoint_Selection.mpc:
          truncated to PaESelection.mpc
        * tests/RTCORBA/MT_Client_Protocol_Priority/RTCORBA_MT_Client_Protocol_Priority.mpc
          truncated to RTCORBA_MT_Client_Proto_Prio.mpc

Thu May 6 22:12:00 2004  Marek Brudka  <mbrudka@elka.pw.edu.pl>

        * tests/Portable_Interceptors: Portable_Interceptors*.mpc were
        truncated to PI_*.mpc.

Thu May  6 13:12:15 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp
          (write_ior):
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp (write_ior):
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp
          (create_operation_list):
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp
          (~TAO_CEC_TypedProxyPushConsumer):
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.cpp
          (activate, get_state):
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.cpp
          (get_state):
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp (init):
        * orbsvcs/tests/FT_App/FT_Creator.cpp (run):
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp
          (create_group):
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp
          (init):
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp (write_ior_file):
        * orbsvcs/tests/FT_App/FT_Client.cpp (pass):
        * orbsvcs/tests/FtRtEvent/PushConsumer.cpp
          (disconnect_push_consumer):
        * orbsvcs/tests/FtRtEvent/PushSupplier.cpp
          (disconnect_push_supplier):
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp
          (send_reply):

          Fixed "better conversion sequence" g++ warning.

Thu May  6 09:44:16 2004  Steve Totten  <totten_s@ociweb.com>

        * docs/releasenotes/FT_FaultAnalyzerFramework.jpg:
        * docs/releasenotes/FT_PrototypeArchitecture.jpg:

          Added missing figures for the FT services release notes.
          Thanks to Gautam Thaker <gthaker@atl.lmco.com> for noticing
          they were missing.

Wed May  5 23:46:42 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Messaging/Asynch_Invocation.h:

          Updated to use ACE_Utils::Auto_Functor<> instead of the
          deprecated TAO::Utils::Auto_Functor<> class.

Wed May  6 00:00:00 2004  Marek Brudka  <mbrudka@elka.pw.edu.pl>

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation:

          Portable_Interceptors_Service_Context_Manipulation.mpc was
          truncated to PI_Svc_Context_Manip.mpc to enable file
          manipulation for FS without support for very long filenames
          (eg. QNX).

Wed May  5 15:10:41 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB.cpp (init_orb_globals):

          Added run-time check for sizeof CORBA::Boolean.  TAO's (ACE's)
          CDR stream implementation expects the CDR boolean to have a size
          of one.  This is mostly a sanity check for us to prevent release
          of an ACE/TAO distribution with an incorrectly sized CDR boolean
          type on platforms that we support, or are at least have active
          builds on our scoreboard.  The check was added since some C++
          compilers do not implement a true C++ bool type, but rather
          implement it in terms of an integer type.  Thanks to Bala for
          pointing out that this is the case for some compilers.

Wed May  5 17:07:33 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_interface_header.cpp:
        * TAO_IDL/include/fe_interface_header.h:
        * TAO_IDL/include/utl_err.h:
        * TAO_IDL/util/utl_err.cpp:

          Plugged several holes in error checking for components
          and homes, and created new error messages to be more
          informative in some of these cases. Also cleaned up and
          untangled the code in fe_interface_header.cpp. The fix
          closes [BUGID:1801].

Wed May  5 09:13:46 2004  Carlos O'Ryan  <coryan@atdesk.com>

        * tao/tao.mpc:
        * tao/Auto_Functor.h:
        * tao/Auto_Functor.inl:
        * tao/Auto_Functor.cpp:
          Moved the implementation to the ACE library.  Take advantage of
          the 'using namespace' directive to preserve backwards
          compatibility.

        * tao/Utils/Utils.mpc:
        * tao/Utils/Auto_Functor.h:
          This header was dropped when the class template was moved up,
          re-introduced said header file to recover backwards
          compatibility.

Tue May  4 00:12:26 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp:

          Include "tao/DynamicInterface/DII_CORBA_methods.h" first to
          force CORBA::release(CORBA::Request...) prototype to be parsed
          before TAO_Pseudo_{Var,Out}_T templates.  All required
          non-dependent names must be parsed prior to the template in
          question when using compilers like g++ 3.4.x.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_T.cpp:

          Include "ace/INET_Addr.h" to pull in ACE_INET_Addr class
          declaration.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.cpp:

          Fixed "TAO_HAS_SCIOP" is not defined warning exhibited by g++
          3.4.

Mon May  3 13:15:51 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/mfc/server.mpc:
        * utils/NamingViewer/NamingViewer.mpc:

          Inhert from ace_mfc instead of mfc.

Mon May  3 00:00:00 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * Makefile*:

          Removed all Makefiles.  GNUmakefiles must now be generated by
          MPC.

Sun May  2 17:04:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DynamicInterface.mpc:
        * tao/Messaging/Messaging.mpc:
          Removed source and header section, let just MPC do its job
          determining which files are in the directory.

Sun May  2 13:44:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SCIOP_Acceptor.cpp:
          Added include of tao/CDR.h to fix compile problems in sciop
          enabled builds.

Sat May  1 22:36:22 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * Makefile:
        * GNUmakefile:

          Renamed "Makefile" to "GNUmakefile" to make it obvious to
          users that GNU Make is required to parse the file.

Sat May  1 22:05:59 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/OBV/Typed_Events/Event_Types_impl.h:
        * examples/OBV/Typed_Events/Event_Types_impl.cpp
          (create_for_unmarshal):
        * tests/OBV/Factory/FactoryC_impl.h (Value2_init):
        * tests/OBV/Factory/FactoryC_impl.cpp (create_for_unmarshal):

          Added missing emulated exception macro argument.  Fixes
          compile-time errors in emulated exceptions builds.

        * examples/OBV/Simple_util.cpp:

          Added missing #includes.  Addresses compile-time errors.

Fri Apr 30 16:29:39 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:

          Changed the setting of the internal IDL compler flag for
          encountering an abstract interface to happen not only
          when an interface is abstract but also when it has an
          abstract parent. This change is because the abstract
          parent may be declared in an included IDL file, and
          inclusion of AbstractBase.cpp and Abstract_Invocation_Base.cpp
          generated by that file may have come in the stub source file,
          in which case the inclusion will have to be repeated in the
          stub source file generated from the main IDL file.

        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interceptors_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/thru_poa_proxy_impl_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/thru_poa_proxy_impl_ss.cpp:
        * TAO_IDL/ast/ast_attribute.cpp:
        * TAO_IDL/include/ast_attribute.h:

          Added code generation for attributes inherited from an
          abstract interface, for the skeleton class itself and for
          the collocation classes. Also added code generation for
          interceptor classes corresponding to the operations
          implied by such attributes. Thanks to Jiang Wei
          <jiangwei_1976@yahoo.com.cn> for reporting this problem.
          This fix closes the reopened [BUGID:1796].

Fri Apr 30 07:32:03 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/mfc/StdAfx.h:
        * examples/mfc/client.mpc:
        * examples/mfc/server.mpc:
        * examples/mfc/server.cpp:
        * examples/mfc/w32_test_impl.cpp:

          Modified the client and server to build and run properly on
          Windows.

Fri Apr 30 000:35:01 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:

          Added generation of 'public:' before generation of pure virtual
          _add_ref() and _remove_ref() methods necessary for valuetypes
          that support an abstract interface. They must be public so
          CORBA::add_ref() and CORBA::remove_ref() can access them.
          Thanks to Jiang Wei <jiangwei_1976@yahoo.com.cn> for reporting
          the problem. This fix closes [BUGID:1796].

Thu Apr 29 14:25:44 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Sequence.cpp (check_bounds):

          Removed ACE_OS::abort() call that was never reached.  Fixes an
          "unreachable code" warning exhibited by Compaq C++.

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp (list):

          Commented out code that is never reached due to an exception
          being thrown.  Fixes an "unreachable code" warning.

        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp (init):
        * performance-tests/Anyop/anyop.cpp (main):

          Fixed "set but never used" variable Compaq C++ warning.

Thu Apr 29 13:32:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Simple.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Struct.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Map.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory.cpp:
          Fixed warning in Tru64 build about extra ";" ignored

Thu Apr 29 13:26:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Strategy.h:
          Fixed warning in Tru64 build about extra ";" ignored

Thu Apr 29 08:18:23 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Synch_Invocation.h:
        * tao/Transport.h:
          Improved doxygen documentation

Thu Apr 29 07:26:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Base_Transport_Property.h:
          Converted some old style documentation to doxygen style

        * tao/Adapter.h:
          Improved doxygen documentation tag usage.

Wed Apr 28 22:17:03 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:

          Do not call ACE_OS::clearerr() if ACE_LACKS_CLEARERR is
          defined.  Addresses build problems on OpenBSD.

Wed Apr 28 06:32:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * tao/Exception.cpp:

          Removed the comment that _type () is deprecated.  Infact it's
          not.

Wed Apr 28 10:41:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMH_Oneway/client.cpp:
        * tests/AMH_Oneway/server.cpp:
          Extended this test so that with -n the number of iterations can be
          passed to client and server.

Wed Apr 28 08:25:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocalObject.cpp:
          Use prefix increment and decrement for the refcount of
          TAO_Local_RefCounted_Object because this is faster than
          postfix.

Tue Apr 27 17:12:43 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:

          Fixed a ACE_NEW macros usage.

Tue Apr 27 16:39:07 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableInterceptor.pidl:
        * tao/Bounds.pidl:
        * tao/Policy.pidl:
        * tao/IOP_Codec.pidl:

          Added documentation about the need to make this change.

        * tao/BoundsA.cpp:
        * tao/BoundsC.cpp:
        * tao/IOP_CodecA.cpp:
        * tao/IOP_CodecC.cpp:
        * tao/PolicyA.cpp:
        * tao/PolicyC.cpp:
        * tao/PortableInterceptorA.cpp:
        * tao/PortableInterceptorC.cpp:

          Moved typecodes for exceptions *C.cpp. This will ensure that
          *A.o are not linked in while making a binary. The *A.o can
          increase the footprint drastically. The last regeneration just
          increased simple client footprint by just 25K.

        * tao/Valuetype/ValueFactory.h:

          Added additional includes to fix compile errors in builds where
          native exceptions are disabled.

Tue Apr 27 13:37:38 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Reordered generated includes so that the Valuetype headers are
          included prior to the ORB core headers.  This forces names that
          are potentially used as non-dependent names
          (e.g. CORBA::add_ref()) in templates
          (e.g. TAO_Pseudo_{Var,Out}_T) to be parsed prior to those
          templates.  Fixes GNU g++ 3.4 errors.  GNU g++ 3.4 requires that
          all required non-dependent names be parsed prior to the
          template.

        * tao/DynamicInterface/DII_CORBA_methods.h:
        * tao/DynamicInterface/Request.h:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/Value_CORBA_methods.h:

          Moved prototypes in the CORBA namespace used as non-dependent
          names in the TAO_Pseudo_{Var,Out}_T template to the
          "*_CORBA_methods.h" forward declaration header so that they may
          be parsed before the templates.  Fixes some GNU g++ 3.4
          compile-time errors.

        * tests/DSI_Gateway/test_dsi.h:
        * tests/Param_Test/client.cpp:
        * tests/Param_Test/client.h:
        * tests/Param_Test/driver.cpp:
        * orbsvcs/examples/ORT/Gateway_i.h:
        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.h:
        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Latency/Deferred/client.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/Deferred/client.cpp:

          Reordered includes so that all non-dependent names are parsed
          before the templates that use them.  Fixes some GNU g++ 3.4
          compile-time errors.

Tue Apr 27 12:07:22 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp (main):
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp (main):
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.cpp
          (main):

          Fixed "comparison is always true due to limited range of data
          type" warning.  A boolean value is always going to be less than
          or equal to one (i.e. false (0) or true (1)).

        * examples/mfc/client.cpp:

          Removed unnecessary TAO header #includes.

Tue Apr 27 13:57:48 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/Makefile.BE:
        * TAO_IDL/Makefile.EXE:
        * TAO_IDL/Makefile.FE:

          Updated dependencies.

        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:

          Added environment variables for create_for_unmarshal ().

        * tao/Valuetype/ValueFactory.h:

          Added an environment for create_for_unmarshal ();

Tue Apr 27 08:59:24 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp
          (compute_default_label):

          Do not increment a boolean value.  It doesn't make much sense to
          do so.  Logically negate the boolean value instead.  Fixes a
          "incrementing a bool value is deprecated" warning exhibited by
          MSVC++ 7.1.

Tue Apr 27 13:20:42 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/run_test.pl:
          Fixed an error in this script when -exclusive was passed as
          commandline option

Tue Apr 27 13:02:23 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Default_Thread_Lane_Resources_Manager.h:
        * tao/Thread_Lane_Resources_Manager.h:
          Converted some old style documentation to doxygen style

        * tao/DynamicInterface/DII_Reply_Dispatcher.h:
          Converted class description to doxygen style.

Tue Apr 27 06:55:46 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/mfc/client.mpc:
        * examples/mfc/client.cpp:

          Added #include of ace/streams.h and set the Resource_Files to
          empty.

        * tests/Param_Test/Param_Test.mpc:

          I missed one of the A.cpp files in my change from Mon Apr 26
          06:22:03 2004.

Mon Apr 26 13:52:49 2004  Carlos O'Ryan  <coryan@atdesk.com>

        * Fixes for:
            http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1779

        * tao/params.i:
          The sock_{snd,rcv}buf_size were silently truncated to
          ACE_DEFAULT_MAX_SOCKET_BUFSIZ.  Silent truncation is generally
          evil, but in this case it is worse:  the compile-time value
          stored in ACE_DEFAULT_MAX_SOCKET_BUFSIZ may have no relationship
          with the run-time maximum in the socket.  In some platforms (I
          am thinking Linux) you can also change the maximum socket buffer
          sizes while the kernel is running, so even an startup-time value
          would be wrong.  Better to move that policy decision to the
          application.
          Removed code in #if 0/#endif blocks, that's what CVS is for.

        * tao/Connection_Handler.cpp:
          Do not change the socket buffer size(s) if the application sets
          them to 0.  In some platforms, notably Linux, the kernel
          adaptively grows the size of the buffer according to the demands
          of the application, but *only* if the application does not set
          the buffer size explicitly.

Mon Apr 26 09:08:09 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Strategies/SHMIOP_Connector.cpp (TAO_SHMIOP_Connector):

          Corrected constructor argument type from CORBA::Octet to
          CORBA::Boolean to match the one in the header.  These two types
          are now distinct.

Mon Apr 26 10:06:12 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/mfc/client.mpc:
        * examples/mfc/client.cpp:

          Removed the mfc base class from this project and fixed some
          #include path problems.  The client is not an MFC application.

        * examples/mfc/server.mpc:

          Remove the unnecessary 'specific' section.

        * utils/NamingViewer/NamingViewer.mpc:

          Removed the 'specific' sections.  They have been moved up into the
          mfc base project.

Mon Apr 26 06:22:03 2004  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Param_Test/Param_Test.mpc:

          With a recent feature addition, it is no longer necessary to list
          the A.cpp files, if there are no other idl generated files listed.

Mon Apr 26 08:52:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Resource_Factory.h:
          Improved doxygen documentation

Mon Apr 26 08:24:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Resource_Factory.h:
        * tao/Thread_Lane_Resources.{h,cpp}:
          Improved doxygen documentation

Mon Apr 26 00:33:13 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/Security/SSLIOP-USAGE.html:

          Corrected typo in sample code.

Mon Apr 26 00:09:54 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/releasenotes/index.html:

          Updated Security Service release notes.

Sun Apr 25 17:03:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/LoadBalancing/server.cpp:
          Fixed warning in Tru64 build about extra ";" ignored

Sun Apr 25 09:48:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation/Collocation.cpp:
          Added include of tao/Strategies/advanced_resource.h. Thanks to
          Werner Buchert <w.buchert@medat.de> for reporting that this test
          didn't work anymore.

        * tests/Collocation/run_test.pl:
          Added this new perl script to run this test automatically

Fri Apr 23 22:38:41 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Smart_Proxies/Benchmark/client.cpp:

          Include "ace/OS_NS_errno.h" to pull in ACE_OS::last_error()
          function prototype.

Fri Apr 23 22:16:53 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/Event/Mcast/Common/Gateway_EC.cpp:

          Include "ace/OS_NS_stdio.h" to pull in f{open,close,printf}()
          function prototypes.

Fri Apr 23 20:28:35 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/PSS/PSDL_String.cpp:
        * orbsvcs/PSS/PSDL_String.h:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.h:
        * orbsvcs/orbsvcs/AV/sfp.cpp:
        * orbsvcs/orbsvcs/AV/sfp.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.i:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.i:
        * orbsvcs/orbsvcs/Naming/Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Entries.h:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.h:
        * orbsvcs/orbsvcs/Naming/Persistent_Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Entries.h:
        * orbsvcs/orbsvcs/Notify/EventType.cpp:
        * orbsvcs/orbsvcs/Notify/EventType.h:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.h:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.inl:
        * orbsvcs/orbsvcs/Notify/Property_T.h:
        * orbsvcs/orbsvcs/Notify/Property_T.inl:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.i:
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.h:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.h:
        * orbsvcs/tests/FtRtEvent/PushConsumer.h:
        * orbsvcs/tests/FtRtEvent/PushSupplier.h:
        * examples/Callback_Quoter/Notifier_i.cpp:
        * examples/Callback_Quoter/Notifier_i.h:
        * examples/Simple/chat/Broadcaster_i.cpp:
        * examples/Simple/chat/Broadcaster_i.h:

          Changed return types for equality, relational and logical
          operators to "bool", as is the norm for modern C++.

Fri Apr 23 15:16:37 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/component_cs.cpp:

          In the generated _is_a() method, changed the call to the
          base class CORBA::Object::_is_a() to use the
          ACE_NESTED_CLASS macro, similarly to what is done for
          regular interfaces. We must use the macro because
          MSVC 6.0 has scope resolution problems. Thanks to
          Bayu Hendradjaya <bayu@cs.newcastle.edu.au> for reporting
          the problem that cropped up in the CIAO Hello example
          on Borland BCB5.

Fri Apr 23 14:43:40 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:

          Made changes to fix some windows builds.

Fri Apr 23 14:01:25 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Messaging.h:
          Doxygen improvement

Fri Apr 23 13:54:45 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/AMH_Response_Handler.h:
        * tao/PortableServer/Default_Acceptor_Filter.h:
        * tao/PortableServer/POA.h:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/ServerInterceptorAdapter.h:
        * tao/PortableServer/ServerRequestInfo.h:
          Doxygen improvement

Fri Apr 23 13:34:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Any_Special_Impl_T.h:
        * tao/Synch_Invocation.h:
        * tao/TAO_Internal.h:
          Doxygen improvement

Fri Apr 23 13:05:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Queue.h:
        * tao/Interceptor_List.h:
        * tao/LF_CH_Event.h:
        * tao/Resource_Factory.h:
        * tao/Resume_Handle.h:
        * tao/Synch_Reply_Dispatcher.h:
          Doxygen improvement

Fri Apr 23 12:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Utils.h:
          Doxygen improvement

Fri Apr 23 11:42:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Remote_Invocation.h:
          Fixed doxygen documentation

Fri Apr 23 11:32:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1495_Regression/interceptors.cpp:
        * tests/Smart_Proxies/Collocation/Diamond_i.cpp:
          Fixed warning in Tru64 build about extra ";" ignored

Fri Apr 23 11:30:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/LoadBalancing/client.cpp:
          Fixed warning in Tru64 build about extra ";" ignored

Thu Apr 22 23:15:20 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Cache_Entries.h:
        * tao/Cache_Entries.inl:
        * tao/GIOP_Message_Version.h:
        * tao/GIOP_Message_Version.inl:
        * tao/Sequence.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/POA.h:
        * tao/PortableServer/POA.i:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/include/ast_expression.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Operators.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Operators.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:

          Changed all return types for equality, relational and logical
          operators to "bool", as is the norm for modern C++.

        * tao/Sequence.cpp:

          Slightly optimized the equality operator implementation in the
          non-inline case.

          Changed return type of equality operators to "bool" is the norm
          for modern C++.

        * tao/TAO_Singleton.cpp:
        * tao/Strategies/SCIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Vault.cpp:

          Replaced "Synch_T.h" include with lighter weight ones.  Fixes
          "fuzz" errors.

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:

          Added minor code review comments for Jai.

Thu Apr 22 20:02:19 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.h:

          In create_union_tc(), replaced the call to insert_label_value()
          with a call to marshal_value() on the Any_Impl contained in
          the Any label member of the CORBA::UnionMember element of
          the sequence passed as an argument to create_union_tc().
          The insert_label_value() method called any->value(), which is
          not implemented for the basic types legal for union discriminators.
          Also removed insert_label_value() since it is not used
          anywhere else. Thanks to Ramiro Peñataro <ramiro.penataro@iac.es>
          for reporting the problem, which cropped up when trying to
          create an operation in the Interface Repository with a complex
          return type containing a union. In a routine check for the
          error of a oneway operation with a non-void return type, a
          call was made to the TypeCodeFactory to get the type code of
          the operation's return type, and the call was failing.

Thu Apr 22 18:40:05 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:

          Removed some unwanted includes.

Thu Apr 22 18:22:27 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:

          Fixed some #includes to fix some builds.

Thu Apr 22 13:21:06 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/LoadBalancer/LoadManager.cpp:

          Made a change to fix a fuzz build error.

          The change was to include a ACE_MACRO in one
          of the function calls.

Thu Apr 22 13:01:55 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.h:

          Made changes to include some files.

          This change will fix some more windows builds.

Thu Apr 22 12:53:49 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:

          Made a change to include the right .cpp file.

          This should fix some of the windows builds.

Thu Apr 22 12:43:33 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Roundtrip.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Roundtrip.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Test.idl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/client.cpp:

          Made some changes to remove unwanted functions and function
          arguments.

Thu Apr 22 10:19:41 2004  Chad Elliott  <elliott_c@ociweb.com>

        * utils/NamingViewer/NamingViewer.mpc:

          Added vc8 to the 'specific' section that also has vc71.

Thu Apr 22 09:03:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/Nil.{h,cpp}:
          Removed this file. It was empty, is the last issue from
          Bug 1705.

        * orbsvcs/orbsvcs/AV/MCast.cpp:
        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/Transport.cpp:
        * orbsvcs/orbsvcs/Makefile.av:
        * orbsvcs/orbsvcs/AV.mpc:
          Removed references to Nil.{h,cpp}:

Thu Apr 22 08:33:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/Utils/Safe_InputCDR.inl:
          Fixed Tru64 warning

Thu Apr 22 07:51:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.h:
          Fixed include path

Thu Apr 22 06:48:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocated_Invocation.cpp:
        * tao/Collocated_Invocation.h:
          Swapped the first arguments to target and then effective_target
          so that this matches the signature of the base class.

        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.h:
          Updated for the signature change of Collocated_Invocation. Also
          when we have a collocated proxy broker set we could by theory
          use a collocated invocation, so then use
          TAO_ORB_Core::collocation_strategy to see how the collocation
          strategy is set. Dependent on this we do a collocated or remote
          invocation. If is now possible that a remote invocation that
          gets a forward location to a collocated servant now switches
          from the remote invocation path to the collocated invocation path.
          This fixes Bug 1495. Thanks to Bala for helping me with this.

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
          Previously when a servant was remote, no collocated proxy broker
          was created, but by the change in Invocation_Adapter above it
          can happen that we get a forward reference to a collocated servant
          and then we need a collocated proxy broker. Changed the generated
          code that the cpb is set when there is a valid
          Proxy_Broker_Factory_function_pointer.

        * tao/DomainC.cpp
        * tao/DomainC.h
        * tao/DomainC.i
        * tao/PolicyC.cpp
        * tao/PolicyC.h
        * tao/PolicyC.i
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BaseC.i
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_BasicC.i
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ComponentsC.h
        * tao/IFR_Client/IFR_ComponentsC.i
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/IFR_Client/IFR_ExtendedC.i
        * tao/Messaging/MessagingC.cpp
        * tao/Messaging/MessagingC.h
        * tao/Messaging/MessagingC.i
        * tao/PortableServer/ImR_LocatorC.cpp
        * tao/PortableServer/ImR_LocatorC.h
        * tao/PortableServer/ImR_LocatorC.i
        * tao/PortableServer/ImplRepoC.cpp
        * tao/PortableServer/ImplRepoC.h
        * tao/PortableServer/ImplRepoC.i
          Regenerated these files because of the change of the signature
          of the setup_collocation method.

        * tests/Bug_1495_Regression/Bug_1495.mpc:
          Removed dummy_label so that this test is build.

Wed Apr 21 18:50:39 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/Makefile:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/ORBInitializer.cpp:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/ORBInitializer.h:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/Roundtrip.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/Roundtrip.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/Test.idl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/default.conf:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/default.conf.xml:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/default_configuration.pl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/svc.conf.xml:

          Added a new test under the LBPerf performance test directory.

          This test will use the CPU Utilization monitor and monitor
          the CPU utilization percentage to make load balancing decisions.


Wed Apr 21 18:30:25 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.h:

          Removed a function as it was not used at all.

Wed Apr 21 18:05:19 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:

          Made some changes to address some errors associated with
          emulated exception builds.

Wed Apr 21 11:08:22 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/LoadBalancer/Makefile.LoadMonitor:

          Corrected an error, which was to include the correct
          .h and .cpp files.

Wed Apr 21 10:57:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.CosLoadBalancing:

          Corrected an error, which was to remove an include
          of a file which is not checked-in yet.

Wed Apr 21 12:11:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1495_Regression:
          Added this new test. This test is written by Will Otte
          <wotte@dre.vanderbilt.edu>. This tests when a forward location
          from a remote servant to a collocated servant is done, also
          the collocated path for the invocation to the collocated
          servant is taken. This test will fail at this moment but
          when I commit my changes it will run without problems.

Wed Apr 21 09:02:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Domain.pidl:
          Updated regeneration message

Wed Apr 21 08:12:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/driver/drv_args.cpp:
          Added missing space to the usage message of -Gd

Tue Apr 20 19:11:16 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:

          As a result of the new CPU utilization monitor,
          the old CPU load average monitor is moved to this new
          file and new class definitions.

Tue Apr 20 19:05:02 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:

          Added a new load monitor in the TAO load balancing
          service.

          This monitor reports the CPU load in terms of utilization
          percentage.

          Right now, i have got implementations for Linux versions
          and i am in the process of writing Windows version of the same.

          Thanks to Ossama Othman <ossama@dre.vanderbilt.edu> for
          working with me in this.

Tue Apr 20 13:35:24 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/LoadBalancing/LBPerf:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/LoadBalancing.mpc:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ORBInitializer.cpp:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ORBInitializer.h:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/RPS_Monitor.h:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/RPS_Monitor.cpp:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Roundtrip.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Roundtrip.h:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ServerRequestInterceptor.h:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ServerRequestInterceptor.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Test.idl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/default.conf:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/default.conf.xml:
        *
          orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/default_configuration.xml:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/run_test.pl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/svc.conf:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/svc.conf.xml:

          Added a new directory LBPerf, which will host the benchmarking
          code to test different facets of the TAO Load Balancing
          service.

          Made an initial check-in of the Request-per-second monitor
          test written by Ossama Othman <ossama@dre.vanderbilt.edu>.

Tue Apr 20 13:22:28 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/LoadBalancer/LoadManager.cpp:
        * orbsvcs/LoadBalancer/Makefile.LoadManager:

          Added code to make LoadManager use corbaloc.

          Thanks to Eric Mcwhorter <emcwhorter@rightnow.com>
          for the suggested fix.

Tue Apr 20 12:46:59 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:

          Made changes to accomodate the two new load balancing
          strategies added.

Tue Apr 20 12:40:14 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:

          Added two new load balancing strategies LoadAverage and
          LoadMinimum.

Tue Apr 20 12:16:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:

          Added usage message for -Ge 2 option. Thanks to Johnny
          Willemsen <jwillemsen@remedy.nl> for pointing out the
          oversight.

Tue Apr 20 11:56:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_decl.cpp:

          Fixed mistake in accessor method for one of the 'visited'
          flags that was causing the #pragma instantiate directive
          for argument helper class templates to not get generated.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          reporting the problem.

Tue Apr 20 12:31:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp:
          Added include of tao/CDR.h

Tue Apr 20 12:29:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp:
          Added include of tao/CDR.h

Tue Apr 20 12:24:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
          Added include of tao/CDR.h

Mon Apr 19 13:04:27 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/POA/TIE/POA_TIE.mpc:
        * performance-tests/Sequence_Latency/AMI/ami.mpc:

          Removed unnecessary subtraction of -Sc from idlflags.

Mon Apr 19 16:57:23 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/POA_Hooks.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
          Added include of tao/CDR.h

Mon Apr 19 09:18:21 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Logging_Service/Notify_Logging_Service/svc.conf:

          Turn the new-lines into something sane.

Mon Apr 19 13:23:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        The last file from my regeneration work. This is the file with the
        most changes done by hand. Now back to the real work.

        * tao/PortableServer/PortableServerC.{h,cpp,i}:
          Regenerated these files

        * tao/PortableServer/PortableServerA.cpp:
          New file

        * tao/PortableServer/Makefile:
        * tao/PortableServer/PortableServer.mpc:
          Added new PortableServerA.cpp

Mon Apr 19 11:57:41 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Added include of tao/CDR.h

Mon Apr 19 11:41:53 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Added include of tao/CDR.h

Mon Apr 19 11:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Array_Impl_T.cpp:
          Added include of tao/CDR.h

Mon Apr 19 09:17:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/diffs/ImR_Activator.diff:
        * tao/PortableServer/ImR_Activator.pidl:
          Zapped these files from the repo

Mon Apr 19 09:06:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
          Added include of tao/CDR.h

Mon Apr 19 08:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDirPolicyC.{h,cpp,i}:
        * tao/Domain/DomainS_T.{h,cpp,i}:
        * tao/Domain/DomainS.{h,cpp,i}:
        * tao/DynamicAny/DynamicAnyC.{h,cpp,i}:
        * tao/IFR_Client/IFR_BaseC.{h,cpp,i}:
        * tao/IFR_Client/IFR_BasicC.{h,cpp,i}:
        * tao/IFR_Client/IFR_ComponentsC.{h,cpp,i}:
        * tao/IFR_Client/IFR_ExtendedC.{h,cpp,i}:
        * tao/IORInterceptor/IORInterceptorC.{h,cpp,i}:
        * tao/IORTable/IORTableC.{h,cpp,i}:
        * tao/Messaging/Messaging_No_ImplC.{h,cpp,i}:
        * tao/Messaging/Messaging_RT_PolicyC.{h,cpp,i}:
        * tao/Messaging/Messaging_SyncScope_PolicyC.{h,cpp,i}:
        * tao/Messaging/MessagingC.{h,cpp,i}:
        * tao/Messaging/MessagingS.{h,cpp,i}:
        * tao/Messaging/MessagingS_T.{h,cpp,i}:
        * tao/Messaging/TAO_ExtC.{h,cpp,i}:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.{h,cpp,i}:
        * tao/RTCORBA/RTCORBAC.{h,cpp,i}:
        * tao/RTPortableServer/RTPortableServerA.cpp:
        * tao/RTPortableServer/RTPortableServerC.{h,cpp,i}:
        * tao/RTScheduling/RTSchedulerC.{h,cpp,i}:
        * tao/TypeCodeFactory/TypeCodeFactoryC.{h,cpp,inl}:
        * tao/PortableServer/Default_ORTC.{h,cpp,i}:
        * tao/PortableServer/ImplRepoC.{h,cpp,i}:
        * tao/PortableServer/ImplRepoS.{h,cpp,i}:
        * tao/PortableServer/ImR_LocatorC.{h,cpp,i}:
        * tao/PortableServer/ImR_LocatorS.{h,cpp,i}:
        * tao/PortableServer/PolicyS.{h,cpp,i}:
        * tao/PortableServer/PolicyS_T.{h,cpp,i}:
        * tao/IORManipulation/IORC.{h,cpp,i}:
          Regenerated these files

        * tao/IFR_Client/IFR_BaseA.cpp:
        * tao/IFR_Client/IFR_BasicA.cpp:
        * tao/IFR_Client/IFR_ComponentsA.cpp:
        * tao/IFR_Client/IFR_ExtendedA.cpp:
        * tao/IORManipulation/IORA.cpp:
          Added these new files to the repo

        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/Messaging/Messaging.cpp:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
          Added include of tao/CDR.h

        * tao/IFR_Client/IFR_Base.pidl:
        * tao/IFR_Client/IFR_Basic.pidl:
        * tao/IFR_Client/IFR_Components.pidl:
        * tao/IFR_Client/IFR_Extended.pidl:
        * tao/Policy/Policy.pidl:
        * tao/ObjRefTemplate/ObjectReferenceTemplate.pidl:
        * tao/RTCORBA/RTCORBA.pidl:
        * tao/PortableServer/PortableServer.pidl:
        * tao/IORManipulation/IOR.pidl:
          Updated regeneration message

        * tao/IFR_Client/Makefile:
        * tao/IORManipulation/Makefile:
          Added new files

Fri Apr 16 16:32:32 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp (parse_args):

          ptrdiff_t is a signed type, so use the
          ACE_INT64_FORMAT_SPECIFIER instead of its unsigned counterpart
          when reading a value into a ptrdiff_t variable via sscanf().
          Fixes a g++ warning regarding mismatched format specifiers and
          corresponding arguments in 64 bit platform builds.

Fri Apr 16 10:28:42 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RTPortableServer.h:
          Fixed fuzz error

Fri Apr 16 09:24:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocated_Invocation.h:
        * tao/LocateRequest_Invocation.h:
        * tao/operation_details.h:
        * tao/ORB.h:
        * tao/Server_Strategy_Factory.h:
        * tao/Service_Context.h:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTPortableServer/RT_Acceptor_Filters.h:
        * tao/RTPortableServer/RT_Collocation_Resolver.h:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.h:
        * tao/RTPortableServer/RT_POA.h:
        * tao/RTPortableServer/RTPortableServer.h:
        * tao/RTPortableServer/RTPortableServer.pidl:
          Doxygen documentation fixes.

Thu Apr 15 23:13:55 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Any.h:

          Reverted change "Wed Apr 14 06:42:12 UTC 2004  Johnny Willemsen
          <jwillemsen@remedy.nl>" that added a #include
          "tao/Exception.h" to address emulated exception compile-time
          problems.  Including "ace/CORBA_macros.h" instead is enough and
          much lighterweight.

        * tao/PolicyC.h:

          Include "tao/Exception.h" to pull in CORBA exception class
          declarations.

Thu Apr 15 06:00:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Custom_Marshal/ECM_Data.cpp:
          Added include of tao/CDR.h

Thu Apr 15 14:27:12 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/OctetSeqC.h:

          Reluctantly added a handcraft to this generated file, but it
          wouldn't work anywhere else. Visual Studio .NET has a bug
          (see http://support.microsoft.com/default.aspx?scid=kb;en-us;309801)
          where a template base class is not imported correctly, leading
          to 'multiply defined' link errors if an application has a
          child of the same base class. The TAO POA library uses a
          sequence of CORBA::OctetSeq, resulting in the above link error
          if an application server uses the same type. Since the conflict
          is with *C.obj, the fix must go into a file that will be included
          in that translation unit, to force the correct import. We force
          the import with

          #if defined ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION_EXPORT
            template class TAO_Export TAO_Unbounded_Sequence<CORBA::OctetSeq>;
          #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION_EXPORT */

          and the TAO export macro will be read by the application as
          __declspec(dllimport). Placement of the instantiation was tricky,
          since it had to be a place where

          - TAO_Unbounded_Sequence is known
          - CORBA::OctetSeq is known
          - the instantiation will be seen when building *C.obj
          - it will not conflict with the implicit PortableServer export

          Thanks to Bala <bala@dre.vanderbilt.edu> for his help with this
          bug, and to Scott Gammill <zumo@flashmail.com> for both reporting
          the bug and for pointing us to the Microsoft Knowledge Base article
          that finally explained it.

        * tests/IDL_Test/sequence.idl:

          Added IDL to test for the above bug.

Thu Apr 15 12:02:20 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:

          Include "tao/CDR.h" to pull in required TAO CDR class
          declarations.   Thanks to Johnny Willemsen for pointing out this
          is now necessary.

Thu Apr 15 13:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile:
          By accident I commited a MPC Borland makefile, reverted back to the
          original one.

Thu Apr 15 12:56:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/UIOP_Acceptor.cpp:
          Added include of tao/CDR.h

Thu Apr 15 12:51:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORTable/IORTableC.h:
          Temporarily added tao/CDR.h include

        * tao/PortableServer/PortableServerC.h:
          Fixed typo in include

Thu Apr 15 12:24:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServerC.h:
          Added include of tao/CDR.h. This will be regenerated soon and
          then it is not needed, but on Linux it seems we need this
          include for the moment to get things building

Thu Apr 15 12:16:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/examples/Buffered_AMI/Makefile:
        * tao/examples/Buffered_Oneways/Makefile:
        * tao/tests/AMI_Buffering/Makefile:
        * tao/tests/Oneway_Buffering/Makefile:
        * tao/tests/Policies/Makefile:
        * tao/tests/Timed_Buffered_Oneways/Makefile:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile:
          Removed tao/TAOA.h from the dependencies by hand. Regenerating
          everything would be the best but we are removing these files
          soon, so by this we can now build without problems.

        * performance-tests/RTCorba/Oneways/Reliable/client.cpp:
          Removed include of tao/TAOA.h

Thu Apr 15 12:06:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Log/Notify/Notify_Supplier.{h,cpp}:
          Fixed include paths

Thu Apr 15 11:56:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/diffs/Bounds.diff:
        * tao/diffs/Dynamic.diff:
          These diffs are not needed anymore. All other diffs will be updated
          soon when everything builds and runs ok.

Thu Apr 15 11:52:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
          Removed include of tao/IOP_IORA.h because this file is zapped

Thu Apr 15 11:41:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BooleanSeqA.cpp:
        * tao/BooleanSeqC.{h,cpp}:
        * tao/BoundsA.cpp:
        * tao/BoundsC.{h,cpp}:
        * tao/CONV_FRAMEA.cpp:
        * tao/CONV_FRAMEC.{h,cpp,i}:
        * tao/CONV_FRAMES.i:
        * tao/CONV_FRAMES_T.i:
        * tao/CurrentA.cpp:
        * tao/CurrentC.{h,cpp,i}:
        * tao/DomainA.cpp:
        * tao/DomainC.{h,cpp}:
        * tao/DynamicParameterA.cpp:
        * tao/DynamicParameterC.{h,cpp}:
        * tao/DynamicA.cpp:
        * tao/DynamicC.{h,cpp}:
        * tao/FloatSeqA.cpp:
        * tao/FloatSeqC.{h,cpp}:
        * tao/IIOP_EndpointsA.cpp:
        * tao/IIOP_EndpointsC.{h,cpp}:
        * tao/IIOPA.cpp:
        * tao/IIOPC.{h,cpp}:
        * tao/IOP_CodecA.cpp:
        * tao/IOP_CodecC.{h,cpp}:
        * tao/IOP_IORA.cpp:
        * tao/IOP_IORC.{h,cpp,i}:
        * tao/IOPC.{h,cpp,i}:
        * tao/IOPS_T.{h,cpp,i}:
        * tao/Messaging_PolicyValueA.cpp:
        * tao/Messaging_PolicyValueC.{h,cpp}:
        * tao/Messaging_SyncScopeC.{h,cpp}:
        * tao/Object_KeyC.cpp:
        * tao/OctectSeqA.cpp:
        * tao/OctectSeqC.{h,cpp,i}:
        * tao/Policy_ForwardA.cpp:
        * tao/Policy_ForwardC.{h,cpp}:
        * tao/PolicyA.cpp:
        * tao/PolicyC.{h,cpp}:
        * tao/PolicyIntereceptorA.cpp:
        * tao/PolicyIntereceptorC.{h,cpp}:
        * tao/ServicesA.cpp:
        * tao/ServicesC.{h,cpp,i}:
        * tao/ServicesS.{h,cpp,i}:
        * tao/ServicesS_T.{h,cpp,i}:
        * tao/ShortSeqA.cpp:
        * tao/ShortSeqC.{h,cpp}:
        * tao/StringSeqA.cpp:
        * tao/StringSeqA.{h,cpp}:
        * tao/TAOA.cpp:
        * tao/TAOC.{h,cpp,i}:
        * tao/TimeBaseA.cpp:
        * tao/TimeBaseC.{h,cpp,i}:
        * tao/TimeBaseS.i:
        * tao/TimeBaseS_T.{h,cpp,i}:
        * tao/ULongSeqA.cpp:
        * tao/ULongSeqC.{h,cpp}:
        * tao/UShortSeqA.cpp:
        * tao/UShortSeqC.{h,cpp}:
        * tao/WrongTranstionA.cpp:
        * tao/WrongTranstionC.{h,cpp}:
          Regenerated these files. Typecodes are moved from the C.cpp to the
          A.cpp file, tao/CDR.h is moved from the C.h to the C.cpp file.
          Operator << and >> are moved from the C.i to the C.cpp file

        * tao/Buffering_Constraint_Policy.cpp:
          Include TAOC.h instead of TAOA.h because TAOA.h is removed

        * tao/CONV_FRAMEA.h:
        * tao/CurrentA.h:
        * tao/IIOP_EndpointsA.h:
        * tao/IIOP_EndpointsC.inl:
        * tao/IIOPA.h:
        * tao/IOP_IORA.h:
        * tao/OctectSeqA.h:
        * tao/ServicesA.h:
        * tao/TAOA.h:
        * tao/TimeBaseA.h:
          Removed these files, these are obsolete

        * tao/IIOP_Acceptor:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Server_Request.h:
        * tao/PortableServer/PolicyS.cpp:
        * tests/CDR/basic_types.cpp:
        * tests/CDR/growth.cpp:
        * tests/OctetSeq/OctetSeq.cpp:
          Added include of tao/CDR.h

        * tao/Incoming_Message_Queue.h:
          Added include of ace/Message_Block.h

        * tao/Makefile.tao:
          Removed some files from the dependencies

        * tao/Tagged_Profile.cpp:
          Changed IOP::IOR::_profiles_seq to IOP::TaggedProfileSeq because
          the classname generated by the idl compiler has been changed.

        * tao/Transport.h:
          Added include of ace/Time_Value.h

        * tao/examples/Buffered_AMI/client.cpp:
        * tao/examples/Buffered_Oneways/client.cpp:
        * tao/tests/AMI_Buffering/client.cpp:
        * tao/tests/Oneway_Buffering/client.cpp:
        * tao/tests/Policies/Manipulation.cpp:
        * tao/tests/Timed_Buffered_Oneways/client.cpp:
          Replaced include of tao/TAOA.h by tao/TAOC.h

Thu Apr 15 07:11:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
          Fixed compile error

Thu Apr 15 06:25:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Log/Notify/Log_Notify.mpc:
          Fixed incorrect file in supplier project. Thanks to Rob Boyer
          <rboyer@euphonix.com> for reporting this.

Wed Apr 14 23:07:54 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Abstract_Servant_Base.h:
        * tao/Adapter.h:
        * tao/Any.h:

          Include "tao/CORBA_methods.h" before "tao/Pseudo_VarOut_T.h" to
          make sure CORBA::release() overrides are declared prior to
          parsing the TAO_Pseudo_{Var,Out}_T template.  Addresses g++ 3.4
          pre-release compile-time failures.

        * tao/Adapter.cpp:
        * tao/ORB_Core.h:
        * tao/DynamicInterface/Request.h:
        * tao/Valuetype/AbstractBase.h:

          Reordered includes to prevent TAO_Pseudo_{Var,Out}_T template
          from being parsed prior to declaring all types that could be
          potential template parameters.

        * tao/CORBA_methods.h:

          Reverted change that added CORBA::ExceptionList related types
          and functions to this header due to inconsistent DLL linkage
          issues on MS Windows.

        * tao/Pseudo_VarOut_T.h:

          Do not include "tao/CORBA_methods.h" in this header.  It
          introduced compilation issues in g++ 3.4 pre-release builds due
          to the fact some necessary types were declared after the
          TAO_Pseudo_{Var,Out}_T template was parsed, essentially making
          the type invisible to the template.  This is due to the fact
          that g++ 3.4.x performs name lookups and binding at template
          parsing time, not instantiation time.

        * tao/default_environment.h:

          Include "tao/TAO_Export.h" to pull in TAO_Export macro
          definitions.

        * tao/DynamicInterface/DII_CORBA_methods.h:

          Moved all DII related functions in the CORBA namespace
          (e.g. release()) to this new header.  This header makes it
          easier to declare CORBA::release() prototypes before the
          TAO_Pseudo_{Var,Out}_T templates are parsed.

        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/ExceptionList.h:

          Moved all DII related functions in the CORBA namespace
          (e.g. release()) to the new DLL_CORBA_methods.h header.

          Include the new DII_CORBA_methods.h header before
          tao/Pseudo_VarOut_T.h to make sure the DII types and functions
          we care about are declared before the TAO_Pseudo_{Var,Out}_T
          templates are parsed.  Addresses g++ 3.4.x compile-time issues.

        * tao/DynamicInterface/ExceptionList.inl:

          Nuked trailing whitespace.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h (internals_):
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.h (internals_):

          Declared this mutex member as "mutable" so that performing a
          const_cast<> in const methods is unnecessary.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp:

          Removed all const_cast<> mutex hacks in const methods.  They are
          no longer necessary since the mutex member (internals_) is now
          mutable.

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:

          Removed "InternalGuard" typedef.  It is no longer used.

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.cpp:

          Replaced all ACE_Guard uses with the corresponding ACE_GUARD
          macro.  Addresses unused variable warnings.

        * orbsvcs/tests/Security/Big_Request/client.cpp:

          Cosmetic changes.

        * tests/Portable_Interceptors/ForwardRequest/Server_Request_Interceptor.h:
        * tests/Portable_Interceptors/ORB_Shutdown/Server_Request_Interceptor.h:

          Made destructor protected to enforce proper memory management
          through reference counting.

Wed Apr 14 17:48:40 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          Fixed generation of TAO::Objref_Traits<>::tao_marshal() method
          to check for a null object reference.

        * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:

          Removed file, visitor is no longer used.

Wed Apr 14 12:39:37 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/Simple/time-date/Simple_time_date.mpc:

          Added . to libpaths for the client project.  This will allow the
          GNUmakefile to find the library and determine that it's ok to
          build the client.

Wed Apr 14 10:08:18 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          For the IFRService project, rely on the ifrservice base project to
          get the settings for minimum_corba.  Also, for the other projects
          inherit from minimum_corba instead of directly adding
          minimum_corba to 'avoids'.

Wed Apr 14 13:51:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        All added includes below are needed because of my regenerations
        of stub/skeleton files in the archive. One of the changes is that tao/CDR.h
        is not included anymore in the header file, but in the implementation
        file, so you don't get tao/CDR.h for free anymore when you include a
        stub file. Just committing these files now, the updated stub/skeleton
        files will follow soon, but need to test another few builds to see if
        I didn't miss any other files.

        * tao/Any_Unknown_IDL_Type.cpp:
        * tao/append.cpp:
        * tao/Asynch_Reply_Dispatcher_Base.h:
        * tao/Connector_Registry.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Lite.h:
        * tao/GIOP_Utils.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/NVList.cpp:
        * tao/UB_String_Argument_T.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/Tagged_Components.cpp:
        * orbsvcs/orbsvcs/AV/sfp.h:
        * tao/skip.cpp:
        * tao/Service_Context.cpp:
        * tao/Object.cpp:
        * tao/Profile.cpp:
        * tao/ORB.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Valuetype/ValueBase.cpp:
        * tao/Valuetype/AbstractBase.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.cpp:
          Added include of tao/CDR.h

        * tao/Bounds.pidl:
        * tao/Current.pidl:
        * tao/Domain.pidl:
        * tao/IIOP.pidl:
        * tao/IIOP_Endpoints.pidl:
          Updated regeneration message

Wed Apr 14 12:44:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Generate tao/CDR.h into the skeleton file.

Wed Apr 14 07:43:18 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOPA.cpp:
        * tao/GIOPC.{h,cpp,i}:
          Regenerated

        * tao/GIOPA.h:
          Removed

        * tao/tao.mpc:
          GIOPA.cpp was not listed, but GIOPC.app was twice in the file list,
          corrected this.

Wed Apr 14 06:49:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/tao_idl.mpc:
          Made another optimize line valid again. This should fix the
          crashing of the TAO_IDL compiler in the msvc release builds

Wed Apr 14 06:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Any.h:
          Added include of tao/Exception.h to fix compile problems

Tue Apr 13 12:22:18 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/GIOP.pidl:

          In the suggested IDL compiler command line options to
          regenerate this file, removed -Gp (thru-POA collocation)
          and -Gd (direct collocation) since the file contains
          no interfaces, and added -GA, to generate Any operator
          and type code bodies in a separate file called GIOPA.cpp.

Tue Apr 13 12:00:18 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_root/any_op.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:

          Moved the check for the -GA option set and resulting
          conditional switch of the output stream file pointer
          from the root visitor to the any_op visitor.

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:

          Added check for the -GA option set and resulting
          conditional generation of type code body in *A.cpp
          instead of the default *C.cpp.

        * TAO_IDL/driver/drv_args.cpp:
        * docs/compiler.html:
        * tests/Hello/Hello.mpc:
        * tests/Hello/README:
        * tests/IDL_Test/IDL_Test.mpc:
        * tests/IDL_Test/README:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Param_Test/README:

          Made the IDL compiler option -GA (generation of Any operator
          and type code bodies into a separate file with the extension
          *A.cpp), recently added and up until now intended only for
          TAO developers, available to all users. More flexible than
          the -Sa and -St options, which suppress generation of Any
          operators and type codes respectively, this option enables
          clients and servers to independently decide whether to
          compile and link TypeCode- and Any-related code. Changes
          involving this option include:

          - Add usage message to the IDL compiler.

          - Adding the option to the IDL compiler command line in
            Param_Test, IDL_Test and the Hello test. In the latter
            test, the resulting testA.cpp file is not included in
            either the client or server build, testing the decoupling
            of the dependency when a client or server does not use
            type codes or Anys.

          - Updating the README files of the above tests to document
            the added option.

          - Adding documentation of the option to the table of IDL
            compiler command line options in TAO/docs/compiler.html.

Tue Apr 13 13:36:27 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Dynamic_Parameter.pidl:
          Updated regeneration message

        * tao/Dynamic_ParameterA.cpp:
        * tao/Dynamic_ParameterC.{h,cpp,i}:
          Regenerated

        * tao/Dynamic_ParameterA.h:
        * tao/Dynamic_ParameterC.inl:
          Removed, not needed

        * tao/Makefile.h:
          Removed Dynamic_ParameterA.h from dependencies

Tue Apr 13 11:01:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DomainC.{h,cpp,i}:
        * tao/DomainA.cpp:
          Regenerated

        * tao/DomainA.h:
          Removed

        * tao/Makefile.tao:
          Removed DomainA.h from dependencies

Tue Apr 13 10:35:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Pollable.pidl:
          Removed spaces

        * tao/Policy_Forward.pidl:
        * tao/Policy.pidl:
        * tao/IOP_IOR.pidl:
          Updated usage message

        * tao/PollableC.{h,cpp,i}:
        * tao/PolicyA.cpp:
        * tao/PolicyC.{h,cpp,i}:
        * tao/Policy_ForwardA.cpp:
        * tao/Policy_ForwardC.{h,cpp,i}:
          Regenerated these files

        * tao/UShortSeqC.h:
          Removed dependency of ORB.h

        * tao/PolicyA.h:
        * tao/Policy_ForwardA.h:
          Removed

        * tao/Makefile.tao:
          Removed removed files from dependencies

Tue Apr 13 10:08:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.CosNaming:
          Fixed error in dependencies

Tue Apr 13 10:05:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Default_ORT.pidl:
        * tao/PortableServer/Default_ORTC.{h,cpp,i}:
        * tao/PortableServer/ImplRepoC.{h,cpp,i}:
        * tao/PortableServer/ImplRepoS.{h,cpp,i}:
          Regenerated these files

        * tao/PortableServer/ImR_Locator.pidl
        * tao/PortableServer/ImplRepo.pidl:
          Updated regeneration message

Tue Apr 13 08:13:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocateRequest_Invocation_Adapter.h:
          Added forward declaration of ACE_Time_Value, this is used and
          with my regeneration this is not included anymore implicitly

Mon Apr 12 23:57:24 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Acceptor_Registry.cpp:
        * tao/Connector_Registry.cpp:
        * tao/Invocation_Adapter.h:
        * tao/Invocation_Base.cpp:
        * tao/Invocation_Endpoint_Selectors.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/Transport.cpp:

          Improved "const correctness".

        * tao/Adapter.cpp:
        * tao/Any.cpp:
        * tao/Any_Impl.cpp:
        * tao/Any_Unknown_IDL_Type.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/CORBANAME_Parser.cpp:
        * tao/Codeset_Manager.cpp:
        * tao/DLL_Parser.cpp:
        * tao/Default_Collocation_Resolver.cpp:
        * tao/Default_Endpoint_Selector_Factory.cpp:
        * tao/Default_Protocols_Hooks.cpp:
        * tao/Default_Stub_Factory.cpp:
        * tao/Default_Thread_Lane_Resources_Manager.cpp:
        * tao/DomainC.cpp:
        * tao/Environment.cpp:
        * tao/Exception.cpp:
        * tao/FILE_Parser.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Factory.cpp:
        * tao/IIOP_Lite_Factory.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/IIOP_Transport.cpp:
        * tao/Incoming_Message_Queue.cpp:
        * tao/MCAST_Parser.cpp:
        * tao/ORB.cpp:
        * tao/ORBInitInfo.cpp:
        * tao/ORBInitializer_Registry.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Table.cpp:
        * tao/Object.cpp:
        * tao/Object_KeyC.cpp:
        * tao/Profile.cpp:
        * tao/Request_Dispatcher.h:
        * tao/Resource_Factory.cpp:
        * tao/Sequence.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/TAO_Internal.cpp:
        * tao/Transport_Cache_Manager.cpp:
        * tao/Transport_Connector.cpp:
        * tao/Typecode.cpp:
        * tao/default_client.cpp:
        * tao/default_resource.cpp:
        * tao/default_server.cpp:
        * tao/params.cpp:
        * tao/Domain/DomainS.cpp:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynamicAnyC.cpp:
        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/IORInterceptor/IORInterceptorC.cpp:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORManipulation/IORManip_Loader.cpp:
        * tao/IORManipulation/IORManipulation.cpp:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/PortableServer.cpp:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/ServerRequestInfo.cpp:
        * tao/RTCORBA/RT_Endpoint_Selector_Factory.cpp:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Stub_Factory.cpp:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Endpoint.cpp:
        * tao/Strategies/DIOP_Factory.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Endpoint.cpp:
        * tao/Strategies/SHMIOP_Factory.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/UIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/Strategies/UIOP_Endpoint.cpp:
        * tao/Strategies/UIOP_Factory.cpp:
        * tao/Strategies/UIOP_Lite_Factory.cpp:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/advanced_resource.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/AbstractBase.inl:
        * tao/Valuetype/ValueFactory_Map.h:

          Added missing #includes necessary for the
          ACE_TEMPLATES_REQUIRE_SOURCE + non-inlined case, in addition to
          GNU g++ 3.4 (pre-release) preprocessor errors.  Thanks to
          Oliver Kellogg <Oliver.Kellogg@sysde.eads.net> and Roland Meub
          <roland.meub@gmx.de> for providing patches.

        * tao/Any.i:
        * tao/IOP_IOR.pidl:
        * tao/ParameterMode.h:
        * tao/Resource_Factory.h:
        * tao/Sequence.i:
        * tao/Valuetype/ValueBase.inl:

          Nuked trailing whitespace.

        * tao/Asynch_Queued_Message.h (size_):

          Made this class member "const".  Its value never changes.

        * tao/Asynch_Queued_Message.cpp (TAO_Asynch_Queued_Message):

          Initialize "size_" member in base member initializer list since
          that member is now "const".

        * tao/GIOP_Message_Base.cpp:
        * tao/Invocation_Adapter.cpp:

          Corrected typo in comment.

        * tao/CORBA_methods.h:
        * tao/DynamicInterface/ExceptionList.h:

          Moved CORBA::{release,is_nil}(CORBA::ExceptionList *) prototypes
          to CORBA_methods.h.  Fixes GNU g++ 3.4 (pre-release)
          compile-time errors.  Thanks to Oliver Kellogg
          <Oliver.Kellogg@sysde.eads.net> and Roland Meub
          <roland.meub@gmx.de> for providing patches.

        * tao/IORInterceptor_Adapter.h (destroy_interceptors):

          Neglected to commit this file when this change "Fri Mar 26
          14:32:35 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>" was
          committed.

        * tao/Policy_Set.cpp (get_policy_overrides):

          Improved exception safety, "const correctness" and performance.

        * tao/Profile_Transport_Resolver.cpp:
        * tao/Synch_Invocation.h:

          Minor code cleanup.

        * tao/Valuetype/Value_CORBA_methods.h:

          New file containing prototypes for methods in the CORBA
          namespace.

        * tao/Valuetype/ValueBase.h:

          Moved CORBA::{add,remove}_ref() prototypes to new
          Value_CORBA_methods.h header.

          (TAO_OBV_GIOP_Flags):

          Changed this class to a namespace, which is really what it was
          intended to be.

          All constants in this namespace are now set in the header, which
          is consistent with our current TAO conventions.

        * tao/Valuetype/ValueBase.cpp:

          Moved static constant definitions to the header, which is
          consistent with our current TAO conventions.

        * tao/Valuetype/Value_VarOut_T.cpp:

          Include new "Value_CORBA_methods.h" header to pull in
          CORBA::{add,remove}_ref(CORBA::ValueBase *) function
          prototypes.  Addresses GNU g++ 3.4 (pre-release) compile-time
          problems.  Thanks to Oliver Kellogg
          <Oliver.Kellogg@sysde.eads.net> and Roland Meub
          <roland.meub@gmx.de> for providing patches.

Tue Apr 13 06:46:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/Makefile:
        * tao/Makefile.tao:
          Removed references to the files I removed yesterday. I am already
          so familiar with MPC that I forgot the dependencies in the GNU
          makefiles that are in the archive ;-).

Mon Apr 12 14:27:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/GIOP.pidl:

          Uncommented the omg.org #pragma prefix directive, and
          updated the suggested IDL compiler command line options
          for regenerating this file.

Mon Apr 12 13:58:32 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/corba.h:

          Added inclusion of the stub header files for all the
          sequences of CORBA basic types that have been added to
          TAO so far. Sequences of CORBA basic types are now required
          to be contained in a compliant ORB, so users should be
          able to employ them in applications even if they do not
          appear in any IDL files. These inclusions in corba.h
          enable users to get access to these sequences and several
          other types in the ORB, without requiring any knowledge
          of TAO internals to determine the specific include files
          needed.

        * tao/DynamicAny/DynamicAny.mpc:

          Added valuetype dependency to generated project and makefiles.
          The absence of this dependency is a legacy from the days
          when TAO did not support valuetypes.

        * tao/DynamicAny/DynamicAny.pidl:
        * tao/RTCORBA/RTCORBA.pidl:

          Added include path to TAO_ROOT to the suggested IDL compiler
          command line options for regenerating these files.

Mon Apr 12 13:54:32 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/FTORB.mpc:

          Made the FT_ClientORB project depend upon ace_uuid.

Mon Apr 12 13:36:43 2004  Chad Elliott  <elliott_c@ociweb.com>

        * utils/NamingViewer/NamingViewer.mpc:

          Removed a misleading comment.

Mon Apr 12 18:16:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjectIdListC.{h,cpp.i}:
        * tao/PI_ForwardC.{h,cpp,i}:
        * tao/PortableInterceptorA.cpp:
        * tao/PortableInterceptorC.{h,cpp,i}:
        * tao/ShortSeqA.cpp:
        * tao/ShortSeqC.{h,cpp,i}:
          Regenerated these files

        * tao/ObjectIdList.pidl:
        * tao/PI_Forward.pidl:
        * tao/PortableInterceptor.pidl:
          Updated regeneration message

        * tao/PortableInterceptorA.h:
          Removed these files

Mon Apr 12 18:09:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RTCORBAC.{h,cpp,i}:
        * tao/RTPortableServer/RTPortableServerA.cpp:
        * tao/RTPortableServer/RTPortableServerC.{h,cpp,i}:
        * tao/TypeCodeFactory/TypeCodeFactoryC.{h,cpp,i}:
        * tao/DynamicAny/DynamicAnyC.{h,cpp,i}:
        * tao/BooleanSeqA.cpp:
        * tao/BooleanSeqC.{h,cpp,i}:
        * tao/BoundsA.cpp:
        * tao/BoundsC.{h,cpp,i}:
        * tao/DynamicA.cpp:
        * tao/DynamicC.{h,cpp,i}:
        * tao/FloatSeqA.cpp:
        * tao/FloatSeqC.{h,cpp,i}:
        * tao/IOP_CodecA.cpp:
        * tao/IOP_CodecC.{h,cpp,i}:
        * tao/Messaging_PolicyValueA.cpp:
        * tao/Messaging_PolicyValueC.{h,cpp,i}:
        * tao/Object_KeyC.{h,cpp,i}:
        * tao/Messaging_SyncScopeC.{h,cpp,i}:
          Regenerated these files

        * tao/RTPortableServer/RTPortableServer.pidl:
        * tao/TypeCodeFactory/TypeCodeFactory.pidl:
        * tao/DynamicAny/DynamicAny.pidl:
        * tao/BooleanSeq.pidl:
        * tao/Bounds.pidl:
        * tao/Dynamic.pidl:
        * tao/FloatSeq.pidl:
        * tao/IOP_Codec.pidl:
        * tao/Messaging_PolicyValue.pidl:
        * tao/Messaging_SyncScope.pidl:
        * tao/Object_Key.pidl:
          Updated regeneration message

        * tao/RTPortableServer/RTPortableServerA.h:
        * tao/BoundsA.h:
        * tao/DynamicA.h:
        * tao/IOP_CodecA.h:
        * tao/Messaging_PolicyValueA.h:
          Removed these files

Mon Apr 12 12:20:09 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_scope.cpp:

          - To the logic for generation of ORB include files, added
            a special case for the occurrence of ValueBase, separating
            it from the occurrence of a valuetype declaration. This
            change allows us to avoid the inclusion of ValueFactory.h
            when all we have is a ValueBase member or parameter.

          - Move the generation of the include of CDR.h to the stub
            source file. Now that all CDR operators are uninlined,
            this include no longer needs to appear in the stub header
            file.

Mon Apr 12 16:48:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ULongSeqA.cpp:
        * tao/ULongSeqC.{h,cpp,i}:
        * tao/StringSeqA.cpp:
        * tao/StringSeqC.{h,cpp,i}:
          Regenerated these files

        * tao/StringSeq.pidl:
        * tao/ULongSeq.pidl:
          Updated regeneration message

        * tao/ULongSeqS.i:
        * tao/StringSeqA.h:
          Removed these files, not needed anymore

Mon Apr 12 16:41:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/WrongTransactionA.cpp:
        * tao/WrongTransactionC.{h,cpp,i}:
        * tao/UShortSeqA.cpp:
        * tao/UShortSeqC.{h,cpp,i}:
          Regenerated these files

        * tao/WrongTransaction.pidl:
        * tao/UShortSeq.pidl:
          Updated regeneration message

        * tao/WrongTransactionA.h:
        * tao/UShortSeqS.i:
        * tao/diffs/WrongTransaction.diff:
          Removed these files, not needed anymore

Mon Apr 12 11:27:36 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/performance-tests/RTEvent/Roundtrip/Roundtrip.mpc:

          Changed the names of the projects in this mpc file to avoid
          conflicts with a couple of projects down in CIAO.

Mon Apr 12 16:22:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Messaging_No_Impl.pidl:
        * tao/Messaging/Messaging_RT_Policy.pidl:
        * tao/Messaging/Messaging_SyncScope_Policy.pidl:
        * tao/Messaging/TAO_Ext.pidl:
          Updated regeneration message

        * tao/Messaging/Messaging_No_ImplC.{h,cpp,i}:
        * tao/Messaging/Messaging_RT_PolicyC.{h,cpp,i}:
        * tao/Messaging/Messaging_SyncScope_PolicyC.{h,cpp,i}:
        * tao/Messaging/MessagingS.{h,cpp,i}:
        * tao/Messaging/MessagingC.{h,cpp,i}:
        * tao/Messaging/MessagingS_T.{h,cpp,i}:
        * tao/Messaging/TAO_ExtC.{h,cpp,i}:
          Regenerated these files with the latest version of the IDL compiler.
          More updated will follow.

Mon Apr 12 11:08:25 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_field/field_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_ci.cpp:

          Fixed warnings (and an errror) in the daily builds.

Mon Apr 12 10:50:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/Container_i.cpp (destroy_i):

          Added temporary caching and restoring for the current
          ACE_Configuration_Section_Key, while we are calling
          destroy_i() on the containers contents. If the container
          is a module that contains another module, the destroy_i()
          we are in will be called recursively so the state must
          be preserved. Thanks to Ramiro Penataro <c>
          for reporting the problem.

        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:

          Added missing destroy() call to an object returned from an
          IFR query.

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp:

          Added some explicit casts to eliminate converstion warnings
          from MSVC.

Mon Apr 12 10:46:26 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TODO:

          Removed this from the repo. Thanks to Johnny for pointing this
          out.

Mon Apr 12 10:43:19 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.{h,cpp}: Added a new
          comparison function comp_tuple_finish_times which can compare
          RT_Info_Tuple structures.

        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp: Used the above
          comparison function instead of comp_entry_finish_times which was
          causing a segfault.

Mon Apr 12 15:35:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDirPolicyC.h:
          Removed wrongly added path

Mon Apr 12 10:11:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.mpc:

          Reverted the change I made in

          Fri Apr  9 12:28:48 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          since it was not necessary with recent changes to the MPC
          framework.

Mon Apr 12 14:01:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDirPolicyC.{h,cpp,i}:
          Regenerated these files with the latest version of the TAO_IDL
          compiler. More generated files will be updated shortly.

Mon Apr 12 13:56:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Added Template_Files to make sure that some extra files are also
          generated to the install section

        * tao/Object_Proxy_Impl.h:
        * tao/target_specification.h:
        * tao/Parser_Registry.h:
        * tao/ObjectKey_Table.h:
        * tao/objectid.h:
        * tao/Default_Collocation_Resolver.h:
        * tao/Invocation_Base.h:
          Fixed types and improved doxygen documentation

Mon Apr 12 08:02:54 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_field/field_ci.cpp:

          Fixed warnings.

Sun Apr 11 18:33:35 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * */*.icc:

          Axed them from the repo. Thanks tp Johnny for reminding me to do
          this.

Sun Apr 11 18:20:40 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/POA/DSI/DSI.DSW:

          Removed this from the repo.

Sat Apr 10 23:39:54 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * */*.ds[p,w]:

          Removed.

Sat Apr 10 17:54:54 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_decl.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_field/field_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_ci.cpp:
        * TAO_IDL/be_include/be_visitor_sequence.h:

          - Added check for sequence locality (sequence element type
            is or contains a local interface) before generating CDR
            stream operators. Thanks to Johny Willemsen
            <jwillemsen@remedy.nl> for reporting the bug.

          - Removed calls and inclusions of class be_visitor_sequence_ci,
            since its only method, visit_sequence() does nothing.

        * TAO_IDL/be_include/be_visitor_sequence/sequence_ci.h:
        * TAO_IDL/be/be_visitor_sequence/sequence_ci.cpp:

          Removed files containing class be_visitor_sequence_ci from
          the repository.

Sat Apr 10 14:21:44 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:

          Fixed typos in error messages. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing out the mistakes.

Sat Apr 10 14:07:20 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:

          Added missing check for locality constraint (struct contains a
          local interface at some level) to match the check in
          cdr_op_cs.cpp.

Fri Apr  9 23:25:04 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:

          Fixed unused variable warning.

Fri Apr  9 12:33:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:

          Added usage message for the option to generate debug file/line#
          info for implementation classes. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing out the oversight.

Fri Apr  9 12:28:48 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.ll (idl_store_pragma):
        * TAO_IDL/fe/lex.yy.cpp (idl_store_pragma):

          Moved the check for the repo id having been
          already set with 'typeid' earlier, before the
          call to replace the repo id itself. The previous logic,
          coupled with the recent change to compute repository
          IDs in the IDL compiler eagerly, led to bogus errors
          when a #pragma ID directive is encountered in an IDL
          file. Thanks to Mehrdad Nazari <mehrdad.nazari@excite.com>
          for reporting the bug.

        * TAO_IDL/include/utl_err.h (id_reset_error):
        * TAO_IDL/util/utl_err.cpp (id_reset_error):

          Change the two char* parameters of this method
          to have the 'const' qualifier.

        * TAO_IDL/ast/ast_decl.cpp:

          Changed the logic of the repo id set method to
          reflect the changes above in lex.yy.cpp.

        * TAO_IDL/tao_idl.mpc:

          Commented out occurrences of

             optimize = <nothing>

          There are comments that this doesn't work on Windows,
          but the line itself was left uncommented. The comment
          is correct, the line does indeed break project generation
          on Windows.

        * TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_cs.cpp:
        * TAO_IDL/be_include/be_visitor_enum/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_cdr_cs.h:

          New files, renamed from the corresponding *_ci.* versions,
          which were removed from the repository.

        * TAO_IDL/be/be_visitor_component_fwd/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_component/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_typedef/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_ci.cpp:
        * TAO_IDL/be_include/be_visitor_component/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_component_fwd/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_enum/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_eventtype_fwd/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_exception/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_field/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_interface/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_interface_fwd/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_sequence/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_structure/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_typedef/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_union/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_union_branch/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_cdr_ci.h:
        * TAO_IDL/be_include/be_visitor_valuetype_fwd/cdr_op_ci.h:

          Visitor files removed from the repository. Code from some
          of these files has been moved to the corresponding *_cs.*
          files, see below.

        * TAO_IDL/be/be_visitor_array.cpp:
        * TAO_IDL/be/be_visitor_component.cpp:
        * TAO_IDL/be/be_visitor_component_fwd.cpp:
        * TAO_IDL/be/be_visitor_enum.cpp:
        * TAO_IDL/be/be_visitor_eventtype.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd.cpp:
        * TAO_IDL/be/be_visitor_exception.cpp:
        * TAO_IDL/be/be_visitor_field.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_structure.cpp:
        * TAO_IDL/be/be_visitor_typedef.cpp:
        * TAO_IDL/be/be_visitor_union.cpp:
        * TAO_IDL/be/be_visitor_union_branch.cpp:
        * TAO_IDL/be/be_visitor_valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/exception.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_root/cdr_op.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/structure.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/union.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be_include/be_visitor_array.h:
        * TAO_IDL/be_include/be_visitor_component.h:
        * TAO_IDL/be_include/be_visitor_component_fwd.h:
        * TAO_IDL/be_include/be_visitor_enum.h:
        * TAO_IDL/be_include/be_visitor_eventtype.h:
        * TAO_IDL/be_include/be_visitor_eventtype_fwd.h:
        * TAO_IDL/be_include/be_visitor_exception.h:
        * TAO_IDL/be_include/be_visitor_field.h:
        * TAO_IDL/be_include/be_visitor_interface.h:
        * TAO_IDL/be_include/be_visitor_interface_fwd.h:
        * TAO_IDL/be_include/be_visitor_sequence.h:
        * TAO_IDL/be_include/be_visitor_structure.h:
        * TAO_IDL/be_include/be_visitor_typedef.h:
        * TAO_IDL/be_include/be_visitor_union.h:
        * TAO_IDL/be_include/be_visitor_union_branch.h:
        * TAO_IDL/be_include/be_visitor_valuetype.h:
        * TAO_IDL/be_include/be_visitor_valuetype_fwd.h:
        * TAO_IDL/be_include/be_visitor_array/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_exception/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_field/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_structure/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_union/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_union_branch/cdr_op_cs.h:

          Generation of all implementations of CDR stream operators
          has been uninlined. CDR stream operators for about half the
          IDL types were already uninlined, due to various forces such
          as the handling of undefined forward declared interfaces and
          increased templatizing of generated code to reduce footprint.
          However, bugs continued to be discovered relating to the
          CDR stream operators that remained inlined, so this change
          was made to deal with present and future cases. The bug that
          precipitated this entry was reported by John Fletcher
          <john.fletcher@rd.bbc.co.uk>. In many cases, where the operand
          type is fully known, modern C++ compilers will still implicitly
          inline the operator bodies.

        * TAO_IDL/be_include/be_codegen.h:

          Removed the context state TAO_ROOT_CDR_OP_CI, since it is
          no longer needed.

Thu Apr  8 20:12:30 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * */*.bor:

          Removed all the borland makefiles files from the
          repository. Files in include/makeinclude have not been removed.

Wed Apr  7 10:37:14 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/ORBEndpoint.html:

          Added documentation for SSLIOP endpoints.

Sat Apr  3 19:22:26 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Simulator/Event_Supplier/Makefile:

          Fixed the Makefile. Thanks to Tommy Persson <tpe@ida.liu.se> for
          reporting the problem. Through some magic I am going to make
          this Makefile appear in 1.4.1.

Fri Apr 02 13:37:23 2004  Balachandran  <bala@dre.vanderbilt.edu>

        * TAO version 1.4.1 released.

Fri Apr  2 13:05:56 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * NEWS:

          Updated with the latest developments just prior to BFO.

Thu Apr  1 10:19:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/libs/UCS4_UTF16/CodeSets_Libs_UCS4_UTF16.bor:
          Fixed wrong file name and wrong build_dll define in this Borland
          makefile. This fixes the build errors in the BCB5 TAO build.

Wed Mar 31 23:16:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Borland/ChatClient.cpp:
        * examples/Borland/ORBThread.h:
        * examples/Borland/pch.h:
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduling.pidl:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduling.idl:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qos.idl:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduling.idl:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduling.idl:
        * examples/RTScheduling/FP_Scheduling.pidl:
        * examples/RTScheduling/MIF_Scheduling.pidl:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager_Main.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc:
        * orbsvcs/examples/RtEC/Kokyu/RtECKokyu.mpc:
        * orbsvcs/orbsvcs/PortableGroup.idl:
        * orbsvcs/orbsvcs/PortableGroup_Simple_DS.idl:
        * orbsvcs/orbsvcs/SSLIOP.idl:
        * orbsvcs/orbsvcs/Security.idl:
        * orbsvcs/orbsvcs/SecurityReplaceable.idl:
        * orbsvcs/orbsvcs/miop.idl:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp:
        * orbsvcs/tests/FT_App/FTAPP_Analyzer_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_FaultConsumer_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FT_Replica.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * performance-tests/POA/Demux/demux_stats.cpp:
        * tao/orb.idl:
        * tao/PortableServer/Default_ORT.pidl:
        * tao/RTPortableServer/RTPortableServer.pidl:
        * tao/Utils/Server_Main.cpp:
        * tests/CodeSets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Factory.h:
        * tests/CodeSets/libs/IBM1047_ISO8859/Wchar_IBM1047_ISO8859_Factory.h:
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16_Factory.h:

          Fixed fuzz warnings.

Wed Mar 31 18:19:54 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/releasenotes/ftcorba_services.html:

          Fixed fuzz warnings.

Wed Mar 31 17:56:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Advanced/ch_12/icp.h:
        * examples/Advanced/ch_18/icp.h:
        * examples/Advanced/ch_21/icp.h:
        * examples/Advanced/ch_8_and_10/icp.h:
        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.mpc:
        * orbsvcs/examples/LoadBalancing/LoadBalancing.mpc:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LoadBalancing.mpc:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Colocated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Federated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/RTCORBA_Baseline.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/RTCORBA_Callback.mpc:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/TCP_Baseline.mpc:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Test.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Infrastructure_Controlled.mpc:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/LoadMonitorCPU.mpc:
        * performance-tests/Anyop/Anyop.mpc:
        * performance-tests/Latency/Collocation/Collocation.mpc:

          Fixes for fuzz warnings.

Wed Mar 31 15:29:23 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PICurrent_Copy_Callback.h:
          Fixed fuzz error about incorrect doxygen file tag.

Wed Mar 31 08:00:17 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * performance-tests/Cubit/TAO/IDL_Cubit/collocation_test.cpp (svr_worker):
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp (Worker_Thread):
          Changed the name "barrier" to "thread_barrier" to fix a problem
          with macro conflicts on certain OS platforms.  Thanks to Levente
          Torok <tealev@yahoo.com> for reporting this.

Wed Mar 31 09:12:00 2004  David Smith  <dts@prismtechnologies.com>

        * orbsvcs/orbsvcs/Makefile:

          Added dependency to avoid some HPUX compile errors. Thanks
          to Kris Dekeyser <Kris.Dekeyser@lms.be> for suggesting this.

Tue Mar 30 08:48:06 2004  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/TAO_Tests.dsw:
        * tests/CodeSets/libs/Makefile.bor:
        * tests/CodeSets/libs/UCS4_UTF16/Makefile.bor:
        * tests/CodeSets/libs/UCS4_UTF16/CodeSets_Libs_UCS4_UTF16.bor:
        * tests/CodeSets/libs/UCS4_UTF16/CodeSets_Libs_UCS4_UTF16.dsp:

          Add the wide character codeset translator test to the shipped
          Borland and MSVC 6 build environments.

Tue Mar 30 13:19:27 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile:

          Updated dependencies.

Mon Mar 29 21:34:30 2004  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:

          Fixed byte ordering problems that prevented DSI gateways on a
          different byte order to communicate with clients and servers
          running on different byte orders.  Thanks To Mouna Seri
          <seri@crhc.uiuc.edu> for reporting the problem.

Mon Mar 29 11:46:49 2004  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/tao_idl.mpc:

          Turn off optimization for both the FE library and tao_idl.  This
          code causes problems the vc6 and vc71 optimizer.

Sun Mar 28 18:13:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Borland C++ 6 Update Pack 4 and earlier give a warning about
          comparing signed and unsigned values in the
          minimum_polulate() and initial_populate() warnings.
          The comparison uses a unsigned long and unsigned short and it
          seems that the compiler promotes the unsigned short of an int
          and this then gives the warning. Just for Borland disabled the
          warning in this file.

Sun Mar 28 15:57:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/lib/Notify_lib.mpc:
          Fixed the name of the shared lib generated to match the orignal
          makefiles. This will fix the not running of the Notify tests in
          the MPC enabled builds.

Fri Mar 26 18:41:33 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Makefile.tao:
        * tao/Makefile.bor:
        * tao/TAO.dsp:

          Added new files from

          Fri Mar 26 13:23:12 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          to projects makefiles.

        * tao/BooleanSeqA.cpp:

          Overlooked new file from

          Fri Mar 26 13:23:12 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

Fri Mar 26 16:45:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_scope.cpp (redef_clash):

          This method bypasses the redefinition error for interfaces
          and valuetypes that are forward declared and then defined
          in the same opening of a module, or at global scope. Added
          missing cases for components and eventtypes.

        * TAO_IDL/be/be_visitor_component/component_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:

          Cosmetic changes to indentation of generated code.

        * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_ci.cpp:
        * TAO_IDL/be_include/be_visitor_field/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_cdr_ci.h:

          Added missing methods to marshal and unmarshal component and
          eventtype members of structs, unions, exceptions and valuetypes.

        * TAO_IDL/be/be_visitor_valuetype.cpp:

          Added include files for component, component_fwd, eventtype and
          eventtype_fwd node classes.

        Thanks to Jingbin An <anjb@sina.com> for reporting the code
        generation and compile errors that uncovered the above bugs, and
        for sending in an example IDL file.

Fri Mar 26 14:32:35 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IORInterceptor_Adapter.h (destroy_interceptor):
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:

          Made exception specification empty to match the
          TAO_ORB_Core::destroy_interceptor() exception specification.
          Concrete implementations of this method should not throw
          exceptions since they are being called when cleaning up
          resources.

        * tao/Interceptor_List.h:
        * tao/Interceptor_List.cpp:
        * tao/IORInterceptor/IORInterceptor_List.h:
        * tao/IORInterceptor/IORInterceptor_List.cpp:

          Changed interceptor lists to contain
          PortableInterceptor::{Client,Server,IOR}Interceptor_var types
          instead of their "_ptr" counterparts.  This cleans up memory
          management, and also fixes memory leaks of reference counted
          interceptors.  The leak was occurring due to the incremental
          reduction in size of the interceptor list array that occurs
          during the CORBA::ORB::destroy() call.  The
          ~TAO_{Client,Server,IOR}Interceptor_List() destructors iterate
          through the interceptor array and call CORBA::release() on each
          interceptor reference.  However, by the time
          CORBA::ORB::destroy() call completed, the array size was
          incrementally reduced to zero (memory not deallocated).  The
          Interceptor_List destructors ended up attempting to iterate
          through an array of size zero.  Switching the contained type to
          a "_var" automated the memory management for us, thus cleaning
          up the leaks.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp (open):

          By default, OpenSSL attempts to send the entire chunk of data.
          This is fine for relatively small chunks of data.  However, if
          SSL_write() returns with an SSL_ERROR_WANT_WRITE (basically an
          EWOULDBLOCK) when using non-blocking I/O, TAO may attempt to
          resend the same data with a potentially different buffer
          address.  Such a scenario is prone to happen when sending large
          chunks of data that cause flow control to occur.  For most
          protocol implementations this is fine. OpenSSL, on the other
          hand, requires that the same arguments be passed to SSL_write()
          if an SSL_ERROR_WANT_WRITE error occured on a previous
          SSL_write() attempt, which cannot be guaranteed by TAO's current
          message queuing/construction code, often resulting in a "bad
          write retry" OpenSSL error.  To work around this issue, we
          enable partial SSL_write()s in SSL/TLS connections created by
          TAO's SSLIOP pluggable protocol.  Doing so makes SSL_write()
          behave like write(2).  Note that this isn't an issue when using
          blocking I/O.   This fixes the SSLIOP "Big_Request" test
          failure.  [Bug 1429]

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:

          Corrected typo in comments.

Fri Mar 26 13:23:12 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/BooleanSeq.pidl:
        * tao/BooleanSeqC.cpp:
        * tao/BooleanSeqC.h:
        * tao/BooleanSeqC.i:
        * tao/BooleanSeqS.h:

          New files, generating and defining CORBA::BooleanSeq in the ORB.

        * tao/tao.mpc:

          Added new files to project generator.

Thu Mar 25 23:06:01 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_home.cpp:

          In constructor, added check for null value of managed component
          argument before doing a narrow on it. Some previous error could
          have propagated to a lookup failure.

Fri Mar 26 10:36:55 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:

          Fixed an error with dynamic hash look up. This fixes some more
          problems.  Problems largely stemmed from wrong count used in
          the generated code for the operation table. The way this was
          busted, makes one get a feeling that this was never tested.

          The counts still seem problematic for GPERF and LINEAR hash. I
          haven't touched it, since I am afraid that this could break
          things before BFO.

Fri Mar 26 10:28:04 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Sequence.cpp:

          Corrected a logic error.

Thu Mar 25 20:47:23 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Sequence.cpp:

          Fixed a compilation problem in builds that have exceptions
          turned off.

Thu Mar 25 13:14:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Sequence_T.cpp:
        * tao/Sequence.cpp:

          Removed ACE_ASSERT since they are not good for the
          middleware. ACE_ASSERT's were used in places where bounds
          checking were done.

          They have now been replaced with a new macro,
          TAO_SEQUENCE_ASSERT. This macro just calls the function
          check_bounds () which takes care of things. At this point this
          method is structured in such a way to print an error message and
          call a hook if we have it defined (this was discussed in the
          devo-group sometime back). If native exceptions are turned on,
          we throw a BAD_PARAM exception. May be std::out_of_range would be
          better. But the thought process is to throw a CORBA exception.
          If exceptions are turned off we abort.

          We should do something better for non-exception cases. If we
          have hooks for these we will be in a much better position.

          Thanks to Priya Narasimhan <priya@cs.cmu.edu> and Dr. Schmidt
          for motivating much of this.

Thu Mar 25 06:42:49 2004  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Policy_Validator.h:
        * tao/Policy_Validator.cpp:

          Rewrote the linked list implementation to avoid the use of static
          pointers and to correctly add additional validators to the list.

        * tests/RTCORBA/Activate_Object_Multiple_ORBs/Activate_Object_Multiple_ORBs.mpc:
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/run_test.pl:
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/test.idl:
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/test.cpp:

          Added a test that, previous to this bug fix, demonstrated the flaw
          in the TAO_Policy_Validator class.

Wed Mar 24 22:45:39 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp (gen_operation_table):

          Reset the skel_count to be zero for dynamic hash. This is
          essential so that we don't count the previous operations when
          generating new tables like say for example having two interfaces
          in the same IDL file.

Wed Mar 24 20:58:32 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Callback.cpp:

          Fixed a unused variable warning

Wed Mar 24 16:32:19 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/RTCosScheduling/Makefile.RTCosScheduling_Client:
        * orbsvcs/tests/RTCosScheduling/Makefile.RTCosScheduling_Server:

          The tests shouldn't compile if RTCosScheduling is not
          compiled. Thanks to Mouna Seri <seri@crhc.uiuc.edu> for locating
          this problem.

Wed Mar 24 14:27:00 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp (visit_attribute):

          Fixed bug where creation of attribute entries in the IFR was
          not working for local and abstract interfaces.

        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp (describe_i):

          Fixed mistake in code opening subsection for each attribute
          under the "attrs" subsection of a component entry in the IFR.
          Thanks to Vincent Seignole <vincent.seignole@wanadoo.fr> for
          reporting the problem in accessing the name and repository id of
          component attributes. This fix closes [BUGID:1771].

Wed Mar 24 11:02:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Typecode.h:
        * tao.Typecode.i:

          Changed the name of the parameter in the offset_map() set
          method from 'map' (which could clash with STL 'map') to
          'new_map'. Thanks to Garry Shamis <gshamis@yahoo.com> for
          reporting the problem. This closes [BUGID:1774].

Wed Mar 24 11:00:12 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:

          More fixes like these "Wed Mar 24 07:36:38 2004  Balachandran
          Natarajan  <bala@dre.vanderbilt.edu>"

Wed Mar 24 10:37:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/compiler.html:

          Added documentation for how -Ge option behaves by default. Thanks to
          Dr. Schmidt and Don Hinton for pointing this out.

Wed Mar 24 07:36:38 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:

          Fixed warnings with g++ 3.2.3 which is available in RH
          advanced server edition. This doesn't seem to show up
          elsewhere.

Wed Mar 24 07:18:53 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/server.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/server.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/server.cpp:

          Fixed compilation errors when exceptions is set to zero.

Tue Mar 23 21:59:13 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB_Core.cpp (shutdown, destroy):

          Reverted the portion of the change (Wed Mar 07 19:19:18 2001
          Irfan Pyarali  <irfan@cs.wustl.edu>) that moved the
          TAO_ORB_Core::destroy_interceptors() call from ORB::destroy() to
          ORB::shutdown().  Doing so broke compliance with the CORBA spec
          and also caused server side ending interception points to be
          called after the corresponding interceptor was destroyed.
          Addresses crashes appearing on some platforms.  Note that
          applications are required to call ORB::destroy() in order to
          prevent interceptors from being leaked.  Calling ORB::destroy()
          in order to cleanup interceptors is required by the CORBA spec.
          [Bug 1642]

        * tests/Portable_Interceptors/Makefile:
        * tests/Portable_Interceptors/Makefile.bor:
        * tests/Portable_Interceptors/ORB_Shutdown/Makefile:
        * tests/Portable_Interceptors/ORB_Shutdown/Makefile.bor:
        * tests/Portable_Interceptors/ORB_Shutdown/ORB_Shutdown.dsw:
        * tests/Portable_Interceptors/ORB_Shutdown/Portable_Interceptors_ORB_Shutdown.mpc:
        * tests/Portable_Interceptors/ORB_Shutdown/README:
        * tests/Portable_Interceptors/ORB_Shutdown/Server_ORBInitializer.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/Server_ORBInitializer.h:
        * tests/Portable_Interceptors/ORB_Shutdown/Server_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/Server_Request_Interceptor.h:
        * tests/Portable_Interceptors/ORB_Shutdown/client.bor:
        * tests/Portable_Interceptors/ORB_Shutdown/client.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/client.dsp:
        * tests/Portable_Interceptors/ORB_Shutdown/run_test.pl:
        * tests/Portable_Interceptors/ORB_Shutdown/server.bor:
        * tests/Portable_Interceptors/ORB_Shutdown/server.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/server.dsp:
        * tests/Portable_Interceptors/ORB_Shutdown/test.idl:
        * tests/Portable_Interceptors/ORB_Shutdown/test_i.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/test_i.h:

          New regression test that verifies
          ServerRequestInterceptor::destroy() is not prematurely called,
          e.g. before ending interception points have been called.

Tue Mar 23 22:48:18 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/AMI/Echo_Handler.cpp:
        * tests/Portable_Interceptors/AMI/Echo_Handler.h:
        * tests/Portable_Interceptors/AMI/client.cpp:

          Huang-Ming reported that interceptors are not invoked during
          reply collection process in AMI. To verify the bug report I just
          went ahead and improved the above test to check for the missing
          test case. Looks like the bug report is false, but the
          improvement is good enough to be run in the daily builds.

Tue Mar 23 13:53:59 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Colocated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Federated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/RTCORBA_Baseline.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/RTCORBA_Callback.mpc:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/TCP_Baseline.mpc:

          Added mpc files for these projects.

Tue Mar 23 09:36:47 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/CORBA_String.cpp (string_alloc):

          Intialize the allocated string to null.

        * tao/params.cpp (ctor):

          Wrong usage of the array bounds.

          Thanks to Andreas <andreas.koehler@sysde.eads.net> for spotting
          the problems and suggesting a patch.

Tue Mar 23 07:34:33 2004  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/TAO_IDL.mwc:

          Put an empty workspace back since some existing MPC builds rely on
          it being there.

Mon Mar 22 09:10:15 2004  Chad Elliott  <elliott_c@ociweb.com>

        * TAOACE.mwc:

          Replace the reference to TAO_IDL/TAO_IDL.mwc with the TAO_IDL
          directory.

        * TAO_IDL/tao_idl.mpc:

          Turn optimization off only for the backend when building with vc6
          and vc71.  This was previously done in the TAO_IDL.mwc file.

        * examples/mfc/server.mpc:
        * utils/NamingViewer/NamingViewer.mpc:

          Added specific settings that were particular to vc6 and vc71.

        * TAO_IDL/TAO_IDL.mwc:
        * examples/mfc/mfc.mwc:

          Removed these files.  They were no longer necessary.

Sun Mar 21 22:30:29 2004  Balachandran Natarajan  <bala@cs.wustl.edu>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile:
        * orbsvcs/tests/Security/SecurityLevel1/Makefile:

          Fixed one or other problems wit makefiles that made the builds
          on solaris fail.

Sun Mar 21 22:07:09 2004  Balachandran Natarajan  <bala@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile.RTKokyuEvent:

          A -- in front of alibrary name borke builds on Solaris. Fixed
          this problem.

Sat Mar 20 19:16:49 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/RTScheduling/Scheduling_Interceptor/Makefile:

          The SRC target was incompletely defined which lead to problems
          while dependencies were regenerated.

Sat Mar 20 18:39:20 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Security/MT_SSLIOP/Makefile:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile:
        * orbsvcs/tests/Security/SecurityLevel1/Makefile:
        * tests/RTScheduling/Scheduling_Interceptor/Makefile:
        * tests/RTScheduling/VoidData/Makefile:

          Added dependencies on the IDL_SRC for the for client and server
          objects. Thanks to Don for help with this.

Sat Mar 20 08:41:19 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:

          We have seen this before and we will see it more and more. I am
          talking about the abuse/misuse of the environment macros. Fixed
          few such problems here. The tests should now compile in the
          daily builds. Thanks to Johnny for reporting it.

Fri Mar 19 09:57:03 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:

          Set the conditions at the time of node creation for the implied
          home implicit, explicit, and equivalent interfaces, so that the
          repository ids, which are, from a recent change, all computed at
          construction time, will be correct.

Thu Mar 18 22:52:49 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/Thread_Per_Connection_Handler.h:

          Reverted the change "Fri Mar  5 23:31:34 2004  Balachandran
          Natarajan  <bala@dre.vanderbilt.edu>".

        * orbsvcs/LoadBalancer/Signal_Handler.cpp:
        * orbsvcs/LoadBalancer/Signal_Handler.h:
        * orbsvcs/orbsvcs/Event/RT_Task.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.h:

          Reverted the change "Wed Mar 10 19:41:01 2004  Balachandran
          Natarajan  <bala@dre.vanderbilt.edu>"

Thu Mar 18 12:57:35 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * toa/FloatSeqS.h:

          Removed inclusion of FloatSeqS.i.

        * tao/ShortSeq.pidl:
        * tao/ShortSeqA.cpp:
        * tao/ShortSeqC.cpp:
        * tao/ShortSeqC.h:
        * tao/ShortSeqC.i:
        * tao/ShortSeqS.h:

          New files, adding the predefined sequence of CORBA::Short
          to the ORB files.

        * tao/tao.mpc:

          Added new files to the MPC generator.

Thu Mar 18 12:13:36 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.{h,cpp}:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.{h,cpp}:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.{h,cpp}:

          Added implementations for pure virtual functions - copy and
          destroy for policy classes. This fixes compile errors on a lot
          of builds.

Thu Mar 18 12:21:02 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/FloatSeqS.h:

          Forgot to add this needed empty file to the repository.

        * tao/tao.mpc:

          And to the generator.

Thu Mar 18 10:45:45 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_Basic_Impl.cpp (create_empty):

          For the default case (excluding long long and long double),
          replaced the 8-char zeroed array (passed as a buffer to the
          Any_Basic_Impl constructor) with a CORBA::ULonglong set to 0.
          This is simpler and we know it always works since the spec
          requires CORBA::ULonglong to be 8 bytes.

        * tao/FloatSeq.pidl:
        * tao/FloatSeqA.cpp:
        * tao/FloatSeqC.cpp:
        * tao/FloatSeqC.i:
        * tao/FloatSeqC.h:

          New files, adding sequence of CORBA::Float to TAO's growing list
          of predefined sequences of basic types.

        * tao/tao.mpc:

          Added the above new files to the generator.

Thu Mar 18 15:55:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/Makefile.bor:
          Fixed the Makefile to exclude removed cpp files.

Wed Mar 17 18:06:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/PICurrent_Guard.cpp:

          Fixed a type which gave warnings with MSVC6.

Wed Mar 17 13:56:05 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/CORBA_String.cpp:

          Reverted the change "Tue Mar 16 09:36:42 2004  Balachandran
          Natarajan  <bala@dre.vanderbilt.edu>" since MSVC barfs.

        * tao/ULongSeqS.cpp:
        * tao/ULongSeqS.i:
        * tao/UShortSeqS.cpp:
        * tao/UShortSeqS.i:

          They serve no purpose. So removed them from the repo.

Wed Mar 17 10:12:05 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Scheduling_Service/Makefile:

          Fixed a typo that prevented this service being compiled in our
          daily builds.  Thanks to Jaffar Shaikh <Jaffar_Shaikh@Mitel.com>
          for reporting this.

Wed Mar 17 05:44:03 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/IDL_Test/Makefile:

          Fixed the Makefile to exclude removed cpp files.

Tue Mar 16 17:01:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          In generating the body of the _downcast() method, added a
          space between the opening bracket of the template parameter
          to the call to dynamic_cast<> and the leading double colon
          of the fully scoped type name, to avoid the error when
          some lexers read the character pair "<:" as the digraph
          for '['.

Tue Mar 16 15:35:04 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/array.cpp:

          Added check for array of typedef'd (w)string, in which case
          the slice type must be TAO_(W)String_Manager, instead of the
          typedef name. Thanks to Thomas Groth <groth.th@nord-com.net>
          for sending in an example IDL file.

        * tests/IDL_Test/array.idl:

          Added the example IDL above to the test IDL file.

Tue Mar 16 14:01:18 2004  Amogh Kavimandan  <amoghk@dre.vanderbilt.edu>

        * examples/Advanced/ch_21/client.cpp
        * examples/Advanced/ch_21/server.cpp
        * examples/Advanced/ch_21/server.h
        * examples/Advanced/ch_21/icp.cpp
        * examples/Advanced/ch_21/icp.h

          Added min() function for vc6.0 so that this example compiles.

Tue Mar 16 13:51:18 2004  Amogh Kavimandan  <amoghk@dre.vanderbilt.edu>

        * examples/Advanced/ch_18/client.cpp
        * examples/Advanced/ch_18/server.cpp
        * examples/Advanced/ch_18/server.h
        * examples/Advanced/ch_18/icp.cpp
        * examples/Advanced/ch_18/icp.h

          Added min() function for vc6.0 so that this example compiles.

Tue Mar 16 13:51:18 2004  Amogh Kavimandan  <amoghk@dre.vanderbilt.edu>

        * examples/Advanced/ch_12/client.cpp
        * examples/Advanced/ch_12/server.cpp
        * examples/Advanced/ch_12/server.h
        * examples/Advanced/ch_12/icp.cpp
        * examples/Advanced/ch_12/icp.h

          Added min() function for vc6.0 so that this example compiles.

Tue Mar 16 11:43:28 2004  Amogh Kavimandan  <amoghk@dre.vanderbilt.edu>

        * examples/Advanced/ch_8_and_10/client.cpp
        * examples/Advanced/ch_8_and_10/server.cpp
        * examples/Advanced/ch_8_and_10/server.h
        * examples/Advanced/ch_8_and_10/icp.cpp
        * examples/Advanced/ch_8_and_10/icp.h

          Added min() function for vc6.0 so that this example compiles.

Tue Mar 16 09:36:42 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Any_Unknown_IDL_Type.cpp (_tao_decode):

          Update the byte order from the incoming CDR stream.

        * tao/CORBA_String.cpp:

          Applied patches from Oliver Kellog and Paolo Carlini
          <pcarlini@suse.de> which helps TAO to get compiling with
          g++ 3.4 (prerelease). Paolo mentions that this should make things
          more portable. It compiles fine with g++ atleast. We need to see how
          things go on other platforms.

Tue Mar 16 09:40:54 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL be/be_interface.cpp:
        * TAO_IDL be/be_visitor_interface/amh_rh_sh.cpp:
        * TAO_IDL be/be_visitor_interface/amh_rh_ss.cpp:
        * TAO_IDL be/be_visitor_interface/direct_proxy_impl_sh.cpp:
        * TAO_IDL be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL be/be_visitor_interface/thru_poa_proxy_impl_sh.cpp:
        * TAO_IDL be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL be/be_visitor_valuetype/valuetype_init_cs.cpp:
        * TAO_IDL be_include/be_decl.h:
        * TAO_IDL be_include/be_interface.h:

          - Added code generation that redeclares operations that a local
            interface has inherited from a non-local one as pure virtual.
            Thanks to Gautam Thaker <gthaker@atl.lmco.com> for reporting
            the problem.

          - Added '::' prefix to the generation of some fully scoped
            names in code generation for AMH-related classes, helping
            some compilers that get confused when a namespace name is
            repeated at some more deeply nested level.

          - Fixed indentation in code generation of collocation classes
            in the skeleton header file.

        * tests/IDL_Test/IDL_Test.mpc:

          Added source files (and thus indirectly the IDL files that
          generate them) to the project file. Also removed the source file
          namespace_check.cpp, which was originally added as a workaround
          for platforms that did not support namespaces.

        * tests/IDL_Test/namespace_check.cpp:

          Removed this file from the repository, since it is a legacy from
          the time when ACE+TAO supported compilers that did not support
          namespaces.

Thu Jan 06 15:20:39 2000  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TAO.dsp:

          Removed UlongSeqS.cpp and UShortSeqS.cpp from the project file
          since including them would necessitate inclusion of the POA
          library.

Tue Mar 16 01:28:26 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor.cpp:
        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor2.cpp:

          Clarified some debugging/progress messages.

        * tests/Portable_Interceptors/PICurrent/test_i.cpp (invoke_me):

          Changed order of one method call (invoke_you).  Invoking it at
          its previous location caused the TSC to be clobbered, which
          ended up causing the test to fail.  It turns out the TSC
          clobbering is the correct behavior, meaning that the new test
          failure revealed a bug in the previous TAO PICurrent code.  In
          particular, the TSC was previously not clobbered when it should
          have.  Reordering the method call in question delays TSC
          clobbering until after the test has a chance to extract data
          from the TSC.  In that particular case, we're testing data
          extraction, not TSC clobbering.

        * tests/Portable_Interceptors/PICurrent/README:

          Updated expected output.

        * tests/Portable_Interceptors/PICurrent/Makefile:

          Updated dependencies.

Tue Mar 16 00:49:15 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        The following changes are an overhaul that address a number of
        problems with TAO's PICurrent support.  [Bug 1215, 1738]

        * tao/PICurrent_Copy_Callback.h:
        * tao/PICurrent_Copy_Callback.cpp:

          New PICurrent copy callback object implementation designed to
          provide cleaner logical/deep copying code.

        * tao/ClientRequestInfo_i.h (TAO_ClientRequestInfo_i):
        * tao/TAO_Server_Request.h (TAO_ServerRequest):

          Added new PICurrent_Copy_Callback member responsible for
          performing deep copies from the RSC to TSC or vice versa when
          necessary.

        * tao/ClientRequestInfo_i.cpp (setup_picurrent):
        * tao/PICurrent.h:
        * tao/PICurrent.inl:
        * tao/PICurrent.cpp:
        * tao/PortableServer/ServerInterceptorAdapter.cpp:
        * tao/PortableServer/ServerRequestInfo.cpp:

          Use new copy callback to improve RSC/TSC copying code.

        * tao/ORB.cpp (ORB_init):

          Updated PICurrent initialization method call to conform to new
          signature.

        * tao/ORB_Core.h:
        * tao/ORB_Core.i:

          TAO's PICurrent class is now in the "TAO" namespace.  Updated
          all "TAO_PICurrent" instances accordingly.

        * tao/PICurrent_ORBInitializer.cpp (pre_init):

          Pass the ORB Core pointer to the PICurrent constructor.  There
          is no need to pass it to the later explicit initialization call
          that occurs during CORBA::ORB_init().

        * tao/Profile_Transport_Resolver.h:

          Corrected typo in documentation.

        * tao/TAO_Server_Request.cpp (TAO_ServerRequest):

          Initialize PICurrent_Copy_Callback object in base member
          initializer list.

        * tao/TAO_Server_Request.i (pi_current_copy_callback):

          New accessor for the PICurrent_Copy_Callback object.

        * tao/orbconf.h (TAO_HAS_EXTENDED_FT_INTERCEPTORS):

          Added missing default definition for this preprocessor symbol.
          Addresses "undefined symbol" warnings exhibited by GNU g++ when
          using the "-Wundef" flag.

        * tao/Makefile.bor:
        * tao/Makefile.tao:
        * tao/TAO.dsp:
        * tao/tao.mpc:

          Added new PICurrent_Copy_Callback.{h,cpp} files to the source
          lists in these files.

        * tao/PortableServer/PICurrent_Guard.cpp:
        * tao/PortableServer/PICurrent_Guard.h:

          Moved PICurrent_Guard implementation from core TAO library
          (client side) to the PortableServer library since it is only
          used on the server side.

        * tao/Domain/DomainS.cpp:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/PolicyS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:

          Updated files to match modified PICurrent_Guard related code in
          generated skeletons.

        * tao/PortableServer/Makefile:
        * tao/PortableServer/Makefile.bor:
        * tao/PortableServer/PortableServer.mpc:
        * tao/PortableServer/TAO_PortableServer.dsp:

          Added new PICurrent_Guard files to these files.

        * tao/Domain/Makefile:
        * tao/IORInterceptor/Makefile:
        * tao/ObjRefTemplate/Makefile:
        * tao/Valuetype/Makefile:
        * orbsvcs/orbsvcs/Makefile.IFRService:
        * TAO_IDL/Makefile.BE:
        * TAO_IDL/Makefile.EXE:
        * TAO_IDL/Makefile.FE:

          Updated dependencies.

        * TAO_IDL/be/be_codegen.cpp (gen_skel_src_includes):

          No need to generated include directive for "tao/PICurrent.h".
          "tao/PortableServer/PICurrent_Guard.h" is enough.  This may also
          help with compile times, at least slightly.

        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp
          (visit_operation):

          Updated generated skeleton code to use new PICurrent_Guard name
          (i.e. TAO_PICurrent -> TAO::PICurrent).

Tue Mar 16 00:07:21 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IFR_Client_Adapter.h:

          Include "tao/orbconf.h" to pull in TAO_HAS_MINIMUM_CORBA macro
          definition.  Addresses a warning when using the GNU g++
          "-Wundef" flag regarding an undefined preprocessor symbol.

Tue Mar 16 08:04:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Notify_Service/NT_Notify_Service.cpp:
          Fixed compile problem in MinGW build.

Sun Mar 14 20:49:47 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TAO.dsp:

          Added the new files into the project file.

Sun Mar 14 10:19:53 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/ULongSeq.pidl:
        * tao/ULongSeqA.cpp:
        * tao/ULongSeqC.cpp:
        * tao/ULongSeqC.h:
        * tao/ULongSeqC.i:
        * tao/ULongSeqS.cpp:
        * tao/ULongSeqS.h:
        * tao/ULongSeqS.i:
        * tao/UShortSeq.pidl:
        * tao/UShortSeqA.cpp:
        * tao/UShortSeqC.cpp:
        * tao/UShortSeqC.h:
        * tao/UShortSeqC.i:
        * tao/UShortSeqS.cpp:
        * tao/UShortSeqS.h:
        * tao/UShortSeqS.i:

          I am not going to say what these are since these are
          self-explanatory. These are required for ARMS and probably in
          DnC spec implementation too. We should be having more of this
          (for other basic types) once x.4.1 goes off. Till then to
          satisfy the shorter term goal, checking the generated code into
          the repository.

        * tao/Makefile.bor:
        * tao/Makefile.tao:
        * tao/tao.mpc:

          Added the new files for compilation

Fri Mar 12 17:24:03 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Advanced/ch_8_and_10/Advanced_ch_8_and_10.mpc:

          Added dummy_label to the MPC  to get the stuff compiling for
          now.

Fri Mar 12 14:04:15 2004  Chad Elliott  <elliott_c@ociweb.com>

        * TAOACE.mwc:

          Take advantage of the new workspace aggregation feature and pull
          in the TAO_IDL.mwc file instead of duplicating it's contents.

Fri Mar 12 08:47:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/default.bld:
        * performance-tests/Cubit/TAO/IDL_Cubit/client.bld:
        * performance-tests/Cubit/TAO/IDL_Cubit/default.bld:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.bld:
        * performance-tests/Cubit/TAO/MT_Cubit/clnt.bld:
        * performance-tests/Cubit/TAO/MT_Cubit/default.bld:
        * performance-tests/Cubit/TAO/MT_Cubit/svr.bld:
        * tao/default.bld:
        * tao/tao.bld:
          Removed these files from the repo. They look to be for
          VxWorks using GHS Builder but are not maintained for years.

Fri Mar 12 06:50:00 2004  Olli Savia  <ops@iki.fi>

        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
          Fixed compilation error on LynxOS.

Thu Mar 11 12:24:43 2004  Chad Elliott  <elliott_c@ociweb.com>

        * utils/NamingViewer/NamingViewer.mpc:

          Corrected the settings for this project and added a comment
          describing the options required to properly process this mpc file.

Thu Mar 11 08:06:43 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * CIAO/docs/static_ciao_contents.html: Updated the locations of
          the images.

Wed Mar 10 19:41:01 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/LoadBalancer/Signal_Handler.cpp:
        * orbsvcs/LoadBalancer/Signal_Handler.h:
        * orbsvcs/orbsvcs/Event/RT_Task.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.h:

          Fixed warnings from SunCC and Borland builds.

Tue Mar  9 17:25:17 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.inl:
          Fixed incorrect doxygen file tag

Tue Mar  9 16:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
          Use ACE_AUTO_PTR_RESET to reset an auto_ptr

Tue Mar  9 15:50:42 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.cpp:
          Fixed usage of wrong variable.

Tue Mar  9 11:39:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/Collocation/Smart_Proxy_Impl.h:
          Changed export macro to use, this fixes a link error with VC71

Mon Mar  8 21:47:39 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tao/Acceptor_Impl.cpp: An application that linked against TAO
          crashed inside TAO (dangling pointer access) if the default ACE
          reactor is deleted before the orb is deactivated.  Fixed this by
          making sure the ORB uses the same reactor as the
          ACE_Accept_Strategy.  Thanks to Peter Hercek <peter@syncad.com>
          for this fix.

Mon Mar  8 13:53:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * NEWS:

          Added a NEWS file which tracks user visible changes between
          every beta. Thanks to Olli Savia and Gary Duzan for motivating
          this.

Sun Mar  7 17:47:16 2004  Olli Savia  <ops@iki.fi>

        * TAO-INSTALL.html
          Moved LynxOS to "partially supported" category.
          Fixed some HTML errors.

Sat Mar  6 09:09:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Thread_Per_Connection_Handler.cpp:

          Fixed a warning in g++ builds.

Fri Mar  5 23:31:34 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Acceptor_Impl.cpp:
        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/Thread_Per_Connection_Handler.h:

          Reverted the change from "Fri Mar  5 15:56:08 2004  Balachandran
          Natarajan  <bala@dre.vanderbilt.edu>", and used the argument
          inherit_priority to do the same thing.

Fri Mar  5 16:32:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile:

          Linked in the TAO_Messaging library, since the Naming service
          depends on the messaging library. This should fix link errors
          with static builds in our scoreboard.

Fri Mar  5 15:56:08 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/Thread_Per_Connection_Handler.h:

          Added a new method activate_threads (). This method gets the
          priority of the invoking thread and transfers it to the thread
          that it is about to create. This feature was broken before,
          ie. TAO never honored the priority of the invoking thread at
          all.

        * tao/Acceptor_Impl.cpp:

          Use activate_threads () instead of activate ().

          These changes were due to a bug report submitted by Abhi
          <abhi@qualcomm.com> and thanks to him for reporting the
          problem and also providing patches that were useful for this
          fix.

Fri Mar  5 18:36:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/LoadBalancing/client.cpp:
          Fixed unused variable warning

Fri Mar  5 12:09:11 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.mpc:
        * orbsvcs/examples/Log/Notify/Log_Notify.mpc:
        * orbsvcs/examples/Notify/Filter/Notify_Filter.mpc:
        * orbsvcs/examples/Notify/Lanes/Notify_Lanes.mpc:
        * orbsvcs/examples/Notify/Subscribe/Notify_Subscribe.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * orbsvcs/tests/Notify/RT_lib/RT_Notify_lib.mpc:
        * orbsvcs/tests/Notify/Test_Filter/Test_Filter.mpc:
        * orbsvcs/tests/Notify/lib/Notify_lib.mpc:

          Switch to using the notification base project instead of notify.
          The notify base project only inherited from notification and
          provided nothing else.

        * utils/NamingViewer/NamingViewer.mpc:

          Fixed this mpc file.  It previously produced a project file for a
          dynamic library that wouldn't compile anyway.

Thu Mar  4 17:24:49 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Any_Impl.cpp (_remove_ref ()):

          Scope the lock before calling delete.

        * tao/Any_Unknown_IDL_Type.cpp:

          Use delete to remove the message block. We used new to create
          it.

Thu Mar  4 16:48:20 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/run_test.pl:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/run_test.pl:
        * orbsvcs/tests/AVStreams/Pluggable/run_test.pl:

          Forced the user to specify the 'RTP/UDP' protocol string as
          'RTP_UDP' at the command line. This was required to fix the
          run-time error caused when executing the auto_run_tests.pl. This
          script was mis-interpreting the '/' in RTP/UDP as a dir
          delimiter. This should fix the run-time errors on all the
          builds.

Thu Mar 04 09:45:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAOACE.dsw:

          Added dependencies for ACEXML and ACEXML parser.

Wed Mar  3 17:49:14 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Notify/Basic/Makefile:
        * orbsvcs/tests/Notify/Discarding/Makefile:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile:
        * orbsvcs/tests/Notify/Ordering/Makefile:
        * orbsvcs/tests/Notify/RT_lib/Makefile:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile:
        * orbsvcs/tests/Notify/Test_Filter/Makefile:
        * orbsvcs/tests/Notify/lib/Makefile:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile:
        * orbsvcs/tests/Property/Makefile:
        * orbsvcs/tests/Redundant_Naming/Makefile:
        * orbsvcs/tests/Sched/Makefile:
        * orbsvcs/tests/Sched_Conf/Makefile:
        * orbsvcs/tests/Simple_Naming/Makefile:
        * orbsvcs/tests/Time/Makefile:
        * performance-tests/POA/Demux/Makefile:
        * utils/nslist/Makefile:

          The orbsvcs_component check were screwed up in all of the above
          files.

          I did manage to locate Thomas Lockhart's bug report listing out
          many of the above files. Thanks to him for identifying the
          problem.

Wed Mar  3 13:32:52 2004  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.inl:
          Fix build errors.

Wed Mar  3 12:30:33 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile:

          Modified the Makefile to link ACE_QoS lib only when rapi=1.

Wed Mar  3 10:55:13 2004  David Smith  <dts@prismtechnologies.com>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:

          Fixed compile problem with aCC 3.37.

Tue Mar  2 21:15:47 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/Security/Conformance.html:
        * docs/Security/Download.html:
        * docs/Security/FAQ.html:
        * docs/Security/SSLIOP-INSTALL.html:
        * docs/Security/SSLIOP-USAGE.html:
        * docs/Security/SSLIOP.html:
        * docs/Security/Security_Service.html:
        * docs/Security/index.html:
        * docs/Security/Templates:
        * docs/Security/fireworks:
        * docs/Security/images:

          Documentation for TAO's SSLIOP pluggable protocol and Security
          Service.

Tue Mar  2 19:57:30 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/receiver.cpp:

          Added the Receiver_Callback::handle_destroy method to shutdown
          the receiver when the stream was destroyed.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/sender.cpp:

          Set the QoS Params in Sender::fill_qos to Diffserv_Codepoint if
          rapi=0. Else the QoS Params are set to the intserv values. This
          ensures that when rapi=0 and the modify_qos method is called
          then the diffserv codepoint is set for all the frames sent..

          Added the graceful shutdown of the process when all frames were
          sent.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/README:

          Modified to include details of diffserv testing.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/runtest.pl:

          Modified to specify transport protocols and debug levels from
          the command line.

        * orbsvcs/tests/AVStreams/Makefile:

          Added the compilation of Simple_Two_Stage_With_QoS test.

Tue Mar  2 13:12:43 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Transport.cpp (drain_queue_helper):

          Check for EAGAIN in addition to EWOULDBLOCK. POSIX conformant
          implementations can use either EWOULDBLOCK or EAGAIN. Thanks to
          Kris Dekeyser <Kris.Dekeyser@lms.be> for pointing this out.

Tue Mar  2 07:43:07 2004  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.inl:

          Add file missing from previous checkin.

Tue Mar  2 19:09:33 2004  Olli Savia  <ops@iki.fi>

        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp

          Fixed explicit template instantiation issues.

Tue Mar  2 13:59:33 2004  David Smith  <dts@prismtechnologies.com>

        * tao/Any_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.cpp:

          Fixed compile problem with aCC 3.37. Thanks to Kris Dekeyser
          <Kris.Dekeyser@lms.be> for pointing  this out.

Tue Mar  2 09:05:48 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Added specialization of TAO::Any_Impl_T<>::to_object for
          CORBA::Object. Otherwise the default template implementation
          is used, which always returns (boolean) 0 and does nothing.
          Thanks to Irfan Pyarali <irfan@oomworks.com> for reporting
          the problem.

Mon Mar  1 16:52:15 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.cpp:

          Include the inline file.

Mon Mar  1 12:31:38 2004  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp:
          ACE_Pair cannot contain CORBA::Any due to missing operator
          != on Any (and fool compilers that expand unused template
          methods (LynxOs; gcc version 2.9-gnupro-98r2))
          Hand-code a simple pair to replace ACE_Pair in this case.

Sun Feb 29 22:10:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Environment.i (release ()):

          Removed an unneeded check for null pointer. Thanks to Gabriele
          Trombetti<gabtromb@isis.vanderbilt.edu> for pointing this out.

Sun Feb 29 20:00:02 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/ObjectKey_Table.cpp:

          The TAO::ObjectKey_Table uses ACE_RB_Tree as the container of
          the object  keys for TAO. RB_Tree uses ordering functor
          TAO::Less_Than_ObjectKey. However, the functor was not strictly
          ordered. Thanks to Milan Cvetkovic <milan.cvetkovic@mpathix.com>
          for finding this problem. The bad ordering lead to some of the
          object keys being left in the tree which caused huge growth in
          runtime memory.

Sun Feb 29 17:43:09 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/Latency/Thread_Per_Connection/Roundtrip.cpp:

          Do not use a boolean value of true while callin shutdown ().

Sun Feb 29 17:07:34 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Miop/McastHello/Makefile:
        * orbsvcs/tests/Security/Big_Request/Makefile:
        * orbsvcs/tests/ior_corbaname/Makefile:

          These makefiles needed some special attention.

Sun Feb 29 16:46:53 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Makefile*:
        * examples/Makefile*:
        * utils/Makefile*:
        * docs/tutorials/Makefile*:

          Regenerated dependencies.

Sun Feb 29 14:58:50 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/Event_Service/Makefile:
        * docs/tutorials/Quoter/Naming_Service/Makefile:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/Makefile:
        * orbsvcs/examples/Log/Basic/Makefile:
        * orbsvcs/examples/Notify/Filter/Makefile:
        * orbsvcs/examples/Notify/Subscribe/Makefile:
        * orbsvcs/examples/RtEC/Schedule/Makefile:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile:
        * orbsvcs/tests/AVStreams/Latency/Makefile:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile:
        * orbsvcs/tests/AVStreams/Multicast/Makefile:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile:
        * orbsvcs/tests/Concurrency/Makefile:
        * orbsvcs/tests/CosEvent/lib/Makefile:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile:
        * orbsvcs/tests/EC_Multiple/Makefile:
        * orbsvcs/tests/Event/lib/Makefile:
        * orbsvcs/tests/Interoperable_Naming/Makefile:
        * orbsvcs/tests/Log/Basic_Log_Test/Makefile:
        * orbsvcs/tests/ior_corbaname/Makefile:

          Another set of changes to ORBSVCS_COMPONENTS check. This should
          get these tests compiling almost on all the platforms. Don't be
          surprised if you see link errors in our daily builds. They were
          there in the tests, for god knows how long. These set of changes
          should get them compiling and throw up errors in our daily
          builds.

Sun Feb 29 17:52:11 UTC 2004  Johnny Willemsen  <jwillemsem@remedy.nl>

        * orbsvcs/performance-tests/LoadBalancing/client.cpp:
          Fixed unused variable warning

Sun Feb 29 10:15:02 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Makefile*:
        * performance-tests/Makefile*:

          Regenerated dependencies using old g++-dep script.

Sun Feb 29 10:34:26 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Advanced/ch_18/Makefile:
        * examples/Callback_Quoter/Makefile:
        * examples/Event_Comm/Makefile:
        * examples/Logging/Makefile:
        * examples/Persistent_Grid/Makefile:
        * examples/Simple/bank/Makefile:
        * examples/Simple/echo/Makefile:
        * examples/Simple/grid/Makefile:
        * examples/Simple/time/Makefile:
        * examples/Simple/time-date/Makefile:
        * examples/Simulator/Event_Supplier/Makefile:
        * examples/ior_corbaloc/Makefile:
        * orbsvcs/Dump_Schedule/Makefile:
        * orbsvcs/Time_Service/Makefile:

          All these Makefiles were busted. They don't build in our daily
          builds. The check for ORBSVCS_COMPONENTS was done in the wrong
          place. I remember Thomas Lockhart mentioning about some of these
          things. I think he had caught all of this already.


Sun Feb 29 08:40:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Makefile*:

          Regenerated it again since there were a few errors the last
          time.

Sun Feb 29 08:28:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Makefile*:

          Regenerated dependencies using old g++-dep script.

Sun Feb 29 08:26:23 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Makefile*:

          Regenerated dependencies using old g++-dep script.

Sun Feb 29 09:49:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/ORT/ORT.mpc:
          Removed idl_files from client to reduce build dependencies

Fri Feb 27 16:28:51 2004  Irfan Pyarali  <irfan@oomworks.com>

        * examples/POA/Explicit_Activation/Alt_Resources/Resource_Factory.cpp (allocate_reactor_impl):

          Set errno to zero before creating the Reactor.  Otherwise, the
          code in TAO_Default_Resource_Factory::get_reactor() improperly
          think there was a failure in creating the Reactor.

        * examples/POA/Explicit_Activation/alternate.conf:

          Removed old "-ORBresources global" option.

Fri Feb 27 11:33:39 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.cpp:
          Fixed compiler wanring in RH8 NOINLINE build.

Fri Feb 27 10:22:21 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.cpp:

          Fixed a compilation error inVC71. Thanks to Johnny for reporting
          this.

Fri Feb 27 09:05:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/LoadBalancing/client.cpp:
          Fixed unused variable warning in msvc6 build.

Fri Feb 27 08:51:03 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/AVStreams_i.h:
          Removed not needed qualifiers.

Thu Feb 26 17:39:51 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.cpp:
          Removed checking for duplicate service context id explicitly
          while adding  new service contexts which could degrade the
          performance in the common execution path.

Thu Feb 26 10:10:40 MST 2004  Trevor Fields  <fields_t@ociweb.com>

        * tao/ClientRequestInfo.cpp:
        * tao/ClientRequestInfo.h:
          Added accessor to the invocation object.

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
          Added set_default and not_default methods for specifying which
          orb should be the default and specifying which orb should not be
          the default.  (Passes calls to the ORB_Table)

        * tao/ORB_Table.cpp:
        * tao/ORB_Table.h:
          Added set_default and not_default methods for specifying which
          orb should be the default (first orb in the table) and specifying
          which orb should not be the default.
          Changed the bind method to set the new ORB as the default (first in
          the table) if the current default ORB does not want to be default.
          Added accessor methods for the TAO_ORBCore and the underlying table.

        * tao/Transport.cpp:
        * tao/Transport.h:
          Added variables for keeping track of the size of the current received
          buffer and number of bytes sent for the send call.
          Added accessors to these tracking variables.


          These are changes for working with the OVATION distributed
          debugger.

Thu Feb 26 02:48:56 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_union_branch/cdr_op_ci.cpp:

          When marshaling an interface member, changed generation to
          use CORBA::Object::marshal(), which checks for a nil
          object reference, instead of calling the virtual marshal()
          method directly. This fix is similar to what is already
          done for struct and exception members. Thanks to
          Hans Bos <hans.bos@xelion.nl> for reporting the bug.

Thu Feb 26 01:59:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:

          Set the return token value to 0 if, when parsing a union
          branch, we find that it is an illegal recursive type.
          This prevents a crash on subsequent processing. Thanks to
          Hans Bos <hans.bos@xelion.nl> for reporting the bug.

Wed Feb 25 10:48:17 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
          Fixed problems in emulated exception build.

Wed Feb 25 10:44:17 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/On_Demand_Activation/client.cpp:
          Fixed unused argument warning in msvc6 build.

Wed Feb 25 08:41:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
          Fixed compile problem in msvc6 build.

Tue Feb 24 15:15:15 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.cpp:

          Removed the debug level check for printing frames sent message.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.cpp:

          Removed the debug level check for printing frames received
          message. Fixed the multiple definition compile error.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.dsp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.bor:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/AVStreams_Simple_Two_Stage.mpc:

          Added the source file for Receiver_Stats.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile:

          Fixed the "overriding commands for target" warnings by removing
          the inclusion of rules.bin.GNU.

Tue Feb 24 19:46:41 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
          Fixed compile problem in msvc6 build.

Tue Feb 24 19:41:01 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
          Removed after and IDL_Files from client project, just let MPC do its
          job.

        * performance-tests/Sequence_Latency/AMH/Single_Threaded/Single_Threaded.mpc:
          Removed after and IDL_Files from client project, just let MPC do its
          job. Instead of requiring ami and adding idlflags, just add amh as base
          project.

Tue Feb 24 19:20:05 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
          Removed useless forward declaration which caused a warning in the
          VC71 build.

        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
          Made the assignment operator private and added a private copy
          constructor. A TAO_PropertySet cannot be copied and this fixes
          link errors in the VC71 build.

Tue Feb 24 19:15:19 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Sequence_Latency/Single_Threaded/Single_Threaded.mpc:
          Removed empty IDL_Files and after from the client project. Let MPC
          just do its job and then it works without problems. Because of this
          we had a build order dependency between client and server and this
          caused problems in our static builds. Thanks to Chad Elliott with
          helping solve this.

Tue Feb 24 19:07:17 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Trading/TT_Info.h:
          Added missing export macros to fix link errors in the VC71 build

Tue Feb 24 18:43:01 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/LoadBalancing/LoadBalancing.mpc:
          This example needs native C++ exceptions

Tue Feb 24 18:36:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/LoadBalancing/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/ServerRequestInterceptor.cpp:
          Fixed wrong exception macro usage

Tue Feb 24 18:32:06 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc:
          The client project requires native C++ exceptions

Tue Feb 24 17:46:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/TAO-tutorials.html:
          Fixed broken link

Mon Feb 23 19:08:37 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.inl:

          Added the missing inline file.

Mon Feb 23 16:05:12 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
          Fixed unused argument warning.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp:
          Fixed ACE_AUTO_PTR_RESET problem.

Mon Feb 23 15:43:01 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
          Changed the processing of service contexts from
          receive_request_service_contexts() to receive_request(), this
          allows to filter out the requests which do not need the burden
          of service contexts processing.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
          Changed to use FTRTEC specific message log facility instead of
          ACE_DEBUG.

        * orbsvcs/orbsvcs/FtRtEvent/Utils/Log.h:
          Removed used macros.

        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
          Changed to use another ORB for gateway objects in order to bypass the
          interceptor processing in the collocated case.

Mon Feb 23 10:59:03 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
          Fixed unused parameter warning in release build.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp:
          Fixed auto_ptr.reset() problem in VC6 build.

Sat Feb 21 09:36:45 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tao/Codeset_Manager.cpp (TAO_Codeset_Item): Replaced
          delete [] this->name_ with ACE_OS::free (this->name_) since
          this->name_ was allocated by ACE_OS::strdup().  Thanks to
          Olivier Brunet <o.brunet@free.fr> for reporting this.

Sat Feb 21 08:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.h:
          Fixed include paths

Fri Feb 20 17:14:46 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tao/GIOP_Message_Generator_Parser_10.cpp (write_request_header):

          Added code to add the username as principal in the request
          header.  This is required for some older ORBs, such as Orbix3.
          To turn on this code, TAO_PEER_REQUIRES_PRINCIPAL must be
          defined at compile time.  This fixes bug 1686.

Fri Feb 20 21:24:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simple/time/client_static.dsp:
        * examples/Simple/time/server_static.dsp:
        * orbsvcs/Event_Service/Event_Service_static.dsp:
        * orbsvcs/Event_Service/Event_Service_static.dsw:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/TAO_RTEC_COSEC_static.dsp:
        * orbsvcs/Naming_Service/Naming_Server_static.dsp:
        * orbsvcs/Naming_Service/Naming_Server_static.dsw:
        * orbsvcs/orbsvcs/orbsvcs_static.dsw:
        * TAO_IDL/tao_idl_static.dsp:
          Removed these static msvc6 project files. Use MPC to generate these
          if you need them. These are outdated and should have gone before 1.4
          was released.

Fri Feb 20 15:00:13 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/README:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.cpp:

          Added command line arguments to specify the number and size of
          frames to be sent from the sender to the reciever.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.cpp:

          Contains operations for collecting and recording inter-frame
          arrival times. It is used by the receiver for collecting stats.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile:

          Modified to include compilation of the Receiver_Stats file.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.cpp:

          Modified to use Receiver_Stats to collect and record the
          inter-frame arrival times to a stats file.

        * orbsvcs/tests/AVStreams/Pluggable/run_test.pl:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/run_test.pl:

          Modified the script in order to allow the user to specify the
          transport protocols and debug levels at the command line.

        * orbsvcs/tests/AVStreams/Full_Profile/run_test.pl:

          Modified the script in order to allow the user to specify the
          debug levels at the command line.

Fri Feb 20 20:10:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/Collocation/Collocated_Test.cpp:
        * performance-tests/Latency/Collocation/Server_Task.cpp:
        * performance-tests/Latency/Collocation/Server_Task.h:
          Fixed warning in Solaris 8 Forte 8 build

Fri Feb 20 13:46:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp (visit_attrbute):

          Fixed incorrect code generation in the AMH upcall for the
          '_set_' version of the attribute. Thanks to
          Johnny Willemsen <jwillemsen@remedy.nl> for reporting the
          problem.

Fri Feb 20 13:16:21 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.cpp:
          Fixed compilation problem in emulated exception build.

Fri Feb 20 12:54:26 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_argument.cpp:

          In the constructor, after getting the argument's scope, added
          a check for 0 result. Previous errors in the IDL file could
          cause this to be 0, so we need a check to avoid a subsequent
          crash. Thanks to Gabriele Trombetti <gabtromb@isis.vanderbilt.edu>
          for reporting the problem.

Fri Feb 20 18:20:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/Collocation/Collocated_Test.cpp:
          Fixed compile problem in emulated exception build.

Fri Feb 20 18:10:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Utils/Makefile:
          Added missing export defines to fix compile problem with Cygwin.
          Thanks to Pavan Mandalkar <pm2@cs.wustl.edu> for reporting this
          problem. This fixes [BUGID:1749].

Fri Feb 20 16:00:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/client.cpp:
          Use ACE_OS::sleep instead of sleep

        * orbsvcs/examples/FaultTolerance/RolyPoly/server.cpp:
          Added missing includes

Fri Feb 20 15:56:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/LoadBalancing/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/RPS_Monitor.cpp:
        * orbsvcs/performance-tests/LoadBalancing/server.cpp:
          Added missing includes, removed include of stdio.h from client.cpp,
          it is not needed.

Fri Feb 20 15:43:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/LoadBalancing/LB_ServerRequestInterceptor.h:
          Added missing export macro to fix link errors in BCB build

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.h:
          Made includes consistent with the other files of LoadBalancing

Thu Feb 19 20:25:10 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader.cpp:
          TAO_Trader_Factory::manufacture_trader was not applying
          import_attributes and support_attributes correctly.
          Thanks to Jean-Marc Prud'homme <JPrudhomme@interstarinc.com>
          for contributing this fix.

Thu Feb 19 18:55:13 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/orbsvcs/AV/AVStreams_i.h:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp (protocol_object_set):
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp (is_protocol_object_set):

          Added the above methods in order to set/get a flag that shows if
          the protocol_object is set and hence if the mmdevices are bound
          successfully.

          The problem of the ACE_Acceptor::handle_input () not being
          called manifested when running the AVStreams tests on a single
          host (for eg. daily builds). The problem on a single host (and
          which could manifest itself sometimes in a multiple host
          scenario too) was due to the sequence in which the various
          requests to the sender arrived and were processed. There are two
          kinds of send and receive that go on. One is the GIOP requests
          and the other the out of band AVStreams connection setup
          requests. When a two-way bind_devs call is made by the sender
          the AVStreams initiates the setup of the out-of-band data path
          by creating an acceptor and listening for a connect request on
          the sender. It also initiates a connect on the receiver. When
          the connect call is made by the receiver the sender OS accepts
          the connection though it does not process the accept at the
          application level. Before it can process the connect request it
          receives a reply to the bind_devs as the receiver assumes it is
          connected to the sender. The bind_devs reply is processed before
          the connect request is processed at the application
          level. Hence, the application continues to execute and there is
          no thread to accept the connect request. So the
          ACE_Acceptor::handle_input does not get called and subsequently
          the protocol_object on which data is sent is also not
          created. Immediately after the bind_devs the sender::pace_data
          is called which tries to send the frames on a null
          protocol_object and results in a seg fault. This was fixed by
          checking for the protocol object set flag in the
          TAO_Base_StreamEndPoint::handle_postconnect method. If the flag
          is not set then the application gives the reactor a chance to
          process the pending requests which could be the expected connect
          request.

        * orbsvcs/orbsvcs/AV/SCTP_SEQ.cpp:
        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/TCP.cpp:
        * orbsvcs/orbsvcs/AV/UDP.cpp:

          Set the protocol object set flag when the protocol object is created.

        * orbsvcs/orbsvcs/AV/Transport.cpp (close_all):

          Fixed an incorrect deletion of connector objects in the
          Connector Registry.

          The above fixes should fix the various scoreboard build errors
          in AVStreams tests and also fix problems with SCTP_SEQ pluggable
          transport.

Thu Feb 19 15:17:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:

          Fixed code generation in the base class constructor call for
          sequences of eventtypes and components. Thanks to Patrick
          Lardieri <plardier@atl.lmco.com> for reporting the problem.

Thu Feb 19 13:06:45 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.h:

          Fixed compilation problem in emulated exception mode.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
          Fixed variable hiding warning in Sun Forte8 build.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
          Fixed variable might be used uninitialized warning in cygwin build.

Thu Feb 19 11:42:05 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:

          Fixed mistakes in code generation for attributes.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          reporting the problem.

Thu Feb 19 09:36:57 2004  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp:
          fix misspelling in explicit template instantiation.

Thu Feb 19 13:34:22 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/Collocation/Collocated_Test.cpp:
          Fixed compile problem in Cygwin emulated exception build

Wed Feb 18 13:58:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:

          Fixed remaining compilation errors on Borland. Thanks to Johnny
          for pointing this out.

Wed Feb 18 18:12:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/Collocation/Collocated_Test.cpp:
          Added missing include to fix BCB6 compile problem.

Wed Feb 18 18:08:34 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/Collocation/Client_Task.cpp:
          Fixed redefinition of i in msvc6 builds.

Wed Feb 18 10:51:03 MST 2004  Scott Harris  <harris_s@ociweb.com>

        * utils/wxNamingViewer/README:
        * utils/utils.mwc:
          Change comments to reflect that the feature name, wxWindows,
          is mixed case.

Wed Feb 18 10:55:36 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.h:
          Removed unused init() member function which causes warning on borland build.
          Thanks to Johnny for pointing it out.

Wed Feb 18 10:47:54 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:

          Fixed compilation errors on Borland. Thanks to Johnny for pointing
          it out.

Wed Feb 18 09:32:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/LoadBalancing/RPS_Monitor.cpp:
        * orbsvcs/examples/LoadBalancing/StockFactory.cpp:
          Added missing includes to fix compile problems with BCB

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
          Fixed compile problem in BCB build.

Wed Feb 18 09:02:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Vault.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
        * orbsvcs/orbsvcs/SSLIOP/ssl_endpoints.h:
        * orbsvcs/orbsvcs/SSLIOP/ssl_endpoints.pidl:
          Fixed include paths

Wed Feb 18 08:51:05 2004  David Smith  <dts@prismtechnologies.com>

        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.inl:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup_T.inl:

          Fixed some compile errors on HPUX.

Tue Feb 17 17:03:31 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/MT_Client/test_i.cpp (shutdown):
        * performance-tests/Latency/Thread_Per_Connection/Roundtrip.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Roundtrip.cpp:

          Do not send the boolean value of true during shutdown.

Tue Feb 17 16:56:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/Thread_Per_Connection_Handler.h:

          Pass the thread manager used in the ORB_Core to the
          ACE_Task_Base instead of allowing task base to choose a thread
          manager on its own. This solves all sorts of crashes during
          shutdown and hack like the one in "Fri Feb  6 10:48:07 2004
          Balachandran Natarajan  <bala@dre.vanderbilt.edu>". We need to
          fix the patches applied.

        * tao/Acceptor_Impl.cpp:

          Pass TAO_ORB_Core to the Thread_Per_Connection_Handler during
          creation.

Tue Feb 17 16:06:45 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_module.cpp:

          Removed the check for 'already referenced' when adding
          a forward declared interface to the module. A forward
          declared interface may be redeclared any number of times
          in the same scope, referenced or not.

        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/fe/fe_declarator.cpp:

          Added code to make sure that the propagation of a prefix to
          nested scopes doesn't get skipped. Thanks to John Fletcher
          <john.fletcher@rd.bbc.co.uk> for sending in a complex
          example of 5 IDL files that stress-tested this feature
          enough to reveal the bug.

Tue Feb 17 13:04:04 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.CosLoadBalancing:

          Updated dependencies.

Tue Feb 17 03:31:13 2004  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/orbsvcs/AV/SCTP_SEQ.cpp (open):

          The address explicitly specified by the application was
          incorrectly passed as 0.0.0.0 to the acceptor. This was due to
          an erroneous setting of the address within the
          TAO_AV_SCTP_SEQ_Acceptor::open method which was fixed.

Mon Feb 16 14:31:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/libs/UCS4_UTF16/Makefile:
          Added missing compiler flags for shared build to fix
          compile problems in Cygwin build. Thanks to FCG Zuo Yi
          <Yi.Zuo@alcatel-sbell.com.cn> for reporting this.

Mon Feb 16 09:36:08 2004  David Smith  <dts@prismtechnologies.com>

        * tao/Exception.cpp:
        * tao/ORB.cpp:

          Prevents compile errors on HPUX, but is not the real fix.

Sun Feb 15 14:06:33 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent.mpc
        * orbsvcs/orbsvcs/EventChannel/ObjectGroupManagerHandler.cpp:
        * orbsvcs/orbsvcs/EventChannel/ObjectGroupManagerHandler.h:
        * orbsvcs/orbsvcs/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/EventChannel/AMI_Primary_Replication_Strategy.h:
        * orbsvcs/orbsvcs/EventChannel/AMI_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/EventChannel/AMI_Replication_Strategy.h:
        * orbsvcs/orbsvcs/EventChannel/Basic_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/EventChannel/Basic_Replication_Strategy.h:
        * orbsvcs/orbsvcs/EventChannel/FTEC_Group_Manager.cpp:
        * orbsvcs/orbsvcs/EventChannel/FTEC_Group_Manager.h:
        * orbsvcs/orbsvcs/EventChannel/GroupInfoPublisher.cpp:
        * orbsvcs/orbsvcs/EventChannel/GroupInfoPublisher.h:
        * orbsvcs/orbsvcs/EventChannel/Replication_Service.cpp:
        * orbsvcs/orbsvcs/EventChannel/Replication_Service.h:
        * orbsvcs/orbsvcs/EventChannel/Replication_Strategy.h:
        Changed for using AMI calls when adding new replicas to a
        object group under AMI replication strategy.


Sun Feb 15 08:09:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory.idl:
        * orbsvcs/examples/CosEC/Factory/FactoryClient.dsp:
        * orbsvcs/examples/CosEC/Factory/FactoryServer.dsp:

          Fixes for the Win32 builds.

Sun Feb 15 00:20:28 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * docs/releasenotes/ftcorba_services.html:
          Added reference to FTRTEC.

Sat Feb 14 15:10:36 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory.idl:
        * orbsvcs/examples/CosEC/Factory/FactoryClient.dsp:
        * performance-tests/Anyop/Anyop.dsp:
        * performance-tests/Anyop/Anyop.dsw:
        * tests/DynAny_Test/basic_test.dsp:
        * tests/Param_Test/anyop.dsp:
        * tests/Param_Test/client.dsp:
        * tests/Param_Test/server.dsp:

          Fixed a bunch of path problems that prevented them from getting
          compiled fine.

Sat Feb 14 13:24:03 2004  Steve Totten  <totten_s@ociweb.com>

        * docs/releasenotes/index.html:
        * docs/releasenotes/ftcorba_services.html (added):
          Added documentation of the basic FT CORBA services.  See
          Sun Dec 21 19:35:44 2003  Dale Wilson  <wilson_d@ociweb.com>

Fri Feb 13 17:47:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Any_Impl.cpp:
        * tao/Any_Impl.h:

          Added a mutex around refcounting to address problems as outlined
          in

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1728

          Thanks to Torsten Kuepper for reporting the problem.

Fri Feb 13 15:34:22 EST 2004 Kevin Bryan <bryank@cs.uri.edu>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.i
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h

          Fixed 64-bit unsafe pointer arithmetic.
          Fixed a few error messages to make them more clear.
          Stopped some crashes from bad config files; more fixes to come.

Fri Feb 13 12:19:58 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Synch_Invocation.cpp:

          Cosmetic changes.

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * tao/Exception.cpp:

          Added deprecations to the TAO_specific _type() method
          for exceptions. They are no longer used anywhere in ORB
          code.

        * docs/compiler.html:

          Updated the table entry for the -St command line option,
          pointing out that its use is incompatible with the
          presence of user exceptions. Thanks to Oliver Kellogg
          <okellogg@freenet.de> for pointing out this incompatibility
          situation whose user friendliness index has been neglected
          for so long.

Fri Feb 13 11:18:21 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/FTRT_Event_Service/Event_Service/svc.conf:
          Use RW client connection strategy to avoid deadlock.
        * orbsvcs/tests/FtRtEvent/svc.conf:
          Added FT_ClinetService_Activate to activate the FT
          Client ORB service.

Fri Feb 13 10:21:15 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:

          Added a check to replace a call to the virtual marshal()
          method with the underlying CDR stream operator, for
          abstract interface members of an aggregate type. The
          virtual method is to catch attempts to marshal local
          interfaces. However, abstract interfaces cannot be local,
          and they have the wrong base class for the virtual method's
          signature anyway. Thanks to Jiang Wei <sdjiangwei@sina.com>
          for reporting the problem. This fix closes [BUGID:1742].

Fri Feb 13 07:24:47 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/RtEC/Schedule/RtEC_Schedule.mpc:

          Inherit from rtoldevent to fix link errors.

Thu Feb 12 23:39:44 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SECIOP.idl:

          Removed this unused file to avoid potential confusion.  It is a
          vestige of early TAO CORBA security service CVS commits.  The
          plan was to implement SECIOP very soon after the introduction of
          this file.  Due to time and resource constraints, and lack of
          funding, the SECIOP protocol was never implemented.  Thanks to
          Brian R. Mendel for pointing out this problem.

Thu Feb 12 15:41:42 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence.cpp:

          Added BE node file includes for component, component_fwd,
          eventtype, and eventtype_fwd.

        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp:
        * TAO_IDL/be_include/be_visitor_sequence/buffer_type.h:

          To class be_visitor_sequence_buffer_type, added the following
          missing method overrides:

          visit_component()
          visit_component_fwd()
          visit_eventtype()
          visit_eventtype_fwd()

          which enables generation of the sequence buffer type name for
          sequences of components and eventtypes. Thanks to Patrick
          Lardieri <plardier@atl.lmco.com> for pointing out the missing
          code generation.

Thu Feb 12 14:28:40 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Changed the implementation of insertion and extraction operators
          for unbounded (w)strings to be identical to those for the
          bounded versions, only with the bound set to 0. This eliminates
          bogus failures when (w)strings are inserted as bounded and
          extracted as unbounded, or vice versa. Thanks to
          David Kinder <david.kinder@sophos.com> for pointing out
          the problem.

Thu Feb 12 13:10:56 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:

          Added code to make sure that all arguments and return types
          added as a result of implied IDL have their full scoped
          names initialized, so that their flat names can be computed
          correctly later, if need be.

        * tests/IDL_Test/IDL_Test.mpc:

          Added -GC (AMI), -GH (AMH) and -Gd (direct collocation) to
          the IDL compiler command line options, so that code
          generated as a result of these options can be tested on
          all platforms.

Thu Feb 12 09:48:43 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc:
        * orbsvcs/examples/RtEC/Kokyu/RtECKokyu.mpc:
        * orbsvcs/performance-tests/LoadBalancing/LoadBalancing.mpc:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Test.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Infrastructure_Controlled.mpc:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/LoadMonitorCPU.mpc:

          Added mpc files for these projects.

Wed Feb 11 12:57:23 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:
        * TAO_IDL/be_include/be_visitor_arg_traits.h:
        * TAO_IDL/be_include/be_visitor_operation/operation.h:

          - Fixed IDL compiler crash when anonymous bounded (w)strings
            are used as operation parameters or return types, which,
            unlike with anonymous sequences and arrays, is legal IDL.
            Thanks to James Kanyok <james.kanyok@lmco.com> for
            reporting the problem. Any number of such parameters and/or
            return types, with identical bounds, may occur in the same
            or multiple scopes, leading to the Arg_Traits<> specialization
            problem addressed below. This closes [BUGID:1739].

          - Added a mechanism to generate unique type names for template
            parameters in the specializations of Arg_Traits<>
            corresponding to operation parameter and return types
            described above. For operation parameters, the parameter
            identifier's flat name is used, for return types, the
            operation's flat name is used, to declare an empty C++
            struct, whose type then becomes the Arg_Traits<> specialization
            template parameter.

        * tests/IDL_Test/anonymous.idl:

          Added IDL to test the code generation for the above use cases,
          furthere stressing the IDL compiler by making the common
          string bound a typedef'd constant.

Wed Feb 11 14:07:00 2004  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/EventTypeSeq.cpp (init):
        * orbsvcs/orbsvcs/Notify/Admin.cpp (subscribed_types):

          Corrected the implementation to add the caller's
          <subscribed_types> to the Admin Object's types. This solves the
          problem that if a proxy's connect_structured_push_consumer() is
          called *AFTER* the proxy's subscription_change(), then the
          subscriptions do not work. Thanks to Richard G. Hash
          <richard.hash@openspirit.com> for reporting this problem.

        * orbsvcs/orbsvcs/Notify/Properties.cpp:
        * orbsvcs/orbsvcs/Notify/Properties.h:
        * orbsvcs/orbsvcs/Notify/Properties.inl:
        * orbsvcs/orbsvcs/Notify/Proxy.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * docs/releasenotes/notify.html:

          Added the -NoUpdates option to the Notification svc.conf
          options. e.g. static TAO_CosNotify_Service " -ListenerThreads 1
          -NoUpdates".  If this option is specified, the
          subscription_change/offer_change messages are NOT sent to proxy
          objects.

          This option is useful to turn off entire updates for applications
          that do not reply on subscription_change/offer_change messages.
          Thanks to Richard G. Hash <richard.hash@openspirit.com> for
          motivating this option.

          Note that updates can be turned off on an individual proxy by calling:
          on a ProxyConsumer -
          CosNotification::EventTypeSeq obtain_subscription_types(
                                      in ObtainInfoMode mode );
          and on a ProxySupplier -
          CosNotification::EventTypeSeq obtain_offered_types(
                                      in ObtainInfoMode mode );

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
          The "-ListenerThreads " option was being applied to the
          ProxyConsumer instead of the ProxySupplier.Thanks to Karl
          Tredwell<KTredwell@tullib.com> for reporting this problem and
          providing the fix.

        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.{h,cpp}:

          Removed the <destroy> method. This method was overloaded to
          print a debug message. however, the base class <destroy> method
          was not invoked which resulted in a memory leaks. Thanks to
          Irfan for helping to debug this memory leak.

Wed Feb 11 11:38:18 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/Log/RTEvent/Log_RTEvent.mpc:

          Removed the minimum_corba requirement.  It didn't seem necessary.

        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Removed many extraneous base projects.

        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.mpc:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
        * orbsvcs/examples/LoadBalancing/LoadBalancing.mpc:
        * performance-tests/Anyop/Anyop.mpc:
        * performance-tests/Latency/Collocation/Collocation.mpc:

          Added new mpc files for these projects.

Wed Feb 11 13:17:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.mpc:
          Added missing idlflags

Wed Feb 11 11:28:56 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simple/chat/chat.mpc:
          Added idl files explictly so that the order in which the idl files
          are compiled is fixed and correct.

Wed Feb 11 10:22:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ec_typed_events.mpb:
          Added idlflags so that export macros are also generated in for the
          typed event idl files.

Wed Feb 11 09:23:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Concurrency_Service/Concurrency_Service.vcp:
        * orbsvcs/CosEvent_Service/CosEvent_Service.vcp:
        * orbsvcs/Dump_Schedule/Dump_Schedule.vcp:
        * orbsvcs/Event_Service/Event_Service.vcp:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.vcp:
        * orbsvcs/Naming_Service/Naming_Service.vcp:
        * orbsvcs/Notify_Service/Notify_Service.vcp:
        * orbsvcs/orbsvcs/CosConcurrency.vcp:
        * orbsvcs/orbsvcs/CosEvent.vcp:
        * orbsvcs/orbsvcs/CosLifeCycle.vcp:
        * orbsvcs/orbsvcs/CosNaming.vcp:
        * orbsvcs/orbsvcs/CosNotification.vcp:
        * orbsvcs/orbsvcs/CosProperty.vcp:
        * orbsvcs/orbsvcs/CosTime.vcp:
        * orbsvcs/orbsvcs/CosTrading.vcp:
        * orbsvcs/orbsvcs/DsLogAdmin.vcp:
        * orbsvcs/orbsvcs/ETCL.VCP:
        * orbsvcs/orbsvcs/Fault_Tolerance.vcp:
        * orbsvcs/orbsvcs/RTCosScheduling.vcp:
        * orbsvcs/orbsvcs/RTEvent.vcp:
        * orbsvcs/orbsvcs/RTOLDEvent.vcp:
        * orbsvcs/orbsvcs/RTSched.vcp:
        * orbsvcs/orbsvcs/RTSchedEvent.vcp:
        * orbsvcs/orbsvcs/Security.vcp:
        * orbsvcs/orbsvcs/Svc_Utils.vcp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.vcp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client.vcp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server.vcp:
        * orbsvcs/Time_Service/Time_Service_Clerk.vcp:
        * orbsvcs/Time_Service/Time_Service_Server.vcp:
        * orbsvcs/Trading_Service/Trading_Service.vcp:
        * tao/BiDir_GIOP/TAO_BiDir_GIOP.vcp:
        * tao/Domain/TAO_Domain.vcp:
        * tao/DynamicAny/TAO_DynamicAny.vcp:
        * tao/DynamicInterface/TAO_DynamicInterface.vcp:
        * tao/IFR_Client/TAO_IFR_Client.vcp:
        * tao/IORManipulation/TAO_IORManip.vcp:
        * tao/IORTable/TAO_IORTable.vcp:
        * tao/Messaging/TAO_Messaging.vcp:
        * tao/RTCORBA/TAO_RTCORBA.vcp:
        * tao/RTPortableServer/TAO_RTPortableServer.vcp:
        * tao/SmartProxies/SmartProxies.vcp:
        * tao/Strategies/TAO_Strategies.vcp:
        * tao/TAO.vcp:
        * tao/TypeCodeFactory/TypeCodeFactory.vcp:
        * TAOACE_WinCE.vcw:
        * tests/CodeSets/libs/IBM1047_ISO8859/IBM1047_ISO8859.vcp:
        * tests/CodeSets/libs/IBM1047_ISO8859/IBM1047_ISO8859_Static.vcp:
          Removed these procect files from the repo. If you want embedded
          Visual C++ project files generate them with MPC. These files where
          just not maintained after the first checkin.

Tue Feb 10 11:18:35 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/ami_exception_holder_ch.cpp:

          Added unindent macro insertion to the output stream after
          visiting each raise_* operation in the generated internal
          class _tao_*_ExceptionHolder, to keep the indentation from
          growing with each operation. Also added a comment to the
          instantiation of the operation visitor, justifying the use of
          the one for the generated implementation classes.

Tue Feb 10 17:20:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Anyop/Makefile.bor:
          Fixed this BCB makefile

Tue Feb 10 11:11:19 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/IFRService.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTKokyuEvent.mpc:
        * orbsvcs/orbsvcs/RTOLDEvent.mpc:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/RTSchedEvent.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * tao/DynamicInterface/DynamicInterface.mpc:
        * tao/IORInterceptor/IORInterceptor.mpc:
        * tao/ObjRefTemplate/ObjRefTemplate.mpc:
        * tao/PortableServer/PortableServer.mpc:

          Removed redundant base projects from the inheritance lists.

Tue Feb 10 17:06:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Forward/OBV_Forward.mpc:
          Add IDL_Files so that the order in which the IDL files are used
          is set. This fixes the errors in the SuSE 9 build.

Tue Feb 10 08:37:09 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/On_Demand/Makefile:

          Updated dependencies.

Mon Feb  9 16:35:04 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ih.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_is.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ih.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_is.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/driver/drv_args.cpp:

          Added command line option (-GId) to generate debug (IDL compiler
          source file/line#) info to implementation files, and added checks
          to the appropriate visitors so that this debug info generation
          is off by default.

        * docs/compiler.html:

          Added documentation for the new command line option above.

Mon Feb  9 20:25:09 UTC 2004  Craig Rodrigues  <crodrigu@bbn.com>

        * tao/Strategies/SCIOP_Endpoint.cpp:
          Add include of <ace/OS_NS_string.h> to
          fix build errors when TAO is configured with:
          inline=0 and sctp=lksctp

Mon Feb  9 17:49:33 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/ICMG_Any_Bug/Hello.mpc:
          Base the client project on taoclient so that it knows to handle idl
          files. Thanks to Chad Elliot with helping fixing this file.

Mon Feb  9 17:20:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/MT_BiDir/MT_BiDir.mpc:
          Moved the Receiver files up so that the idl file is compiled first.

Mon Feb  9 16:03:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FTORB.mpc:
          Reordered files cpp files to fix compile errors in our SuSE 9 MPC
          build. By this reorder the idl files are compiled in the right order

Mon Feb  9 08:36:12 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/ORB_Core.cpp (connection_timeout):

          Fixed a weird bug that caused the has_timeout to be irrespective
          of what the messaging library says. Thanks to Torsten Kupper for
          pointing this out.

Sun Feb  8 15:34:52 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO_IDL/util/utl_global.cpp (IDL_GlobalData): Added enough
          memory for the "/bin/" string.  Thanks to Raphael Bossek
          <raphael.bossek@gmx.de> for reporting this fix.

Sun Feb  8 10:37:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/RTScheduling/Current.cpp:

          Applied Olli Savia's patch to fix compilation errors on LynxOS.

Sun Feb  8 10:28:30 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Makefile*:

          Updated dependencies.

Sun Feb  8 09:10:30 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.h:
        * tao/Invocation_Adapter.inl:

          Added a virtual destructor.

        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation.h:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.h:

          Overhauled the memory management of the reply dispatcher. Used a
          Auto_Functor to manage memory through the life-time of the
          objects. This should prevent the leaks that Andrew
          Reid<andrew.reid@eservglobal.com> reported.

        * tao/Makefile*: Updated dependencies using the new dependency
          generator.

Sun Feb  8 08:14:14 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/On_Demand_Activation/Quoter_On_Demand_Activation.mpc:
          Do not build if minimum_corba is enabled.

Sat Feb  7 22:09:50 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Makefile*:

          Updated dependencies. A new script $ACE_ROOT/bin/depgen.pl was
          used to generate dependencies. The following command was used to
          use the above script "make DEPGEN=$ACE_ROOT/bin/depgen.pl
          depend".  If the script works well we can make this the
          default.

          BTW, this should fix some strange errors in the daily builds.

Sat Feb  7 20:32:06 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ih.cpp:

          Inherit from PortableServer::RefCountServantBase in addition to
          the POA_* class or interface while generating the implementation
          of the servant classes. Thanks to Don Hinton for pointing this
          out.

        * tao/TAO_Internal.cpp:

          Fix for BUGID 1734. Please see

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1734

          for details.

Sat Feb  7 09:52:06 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/ORT/ORT.mpc:

          Fixed a few problems with the MPC files that prevented this test
          from compiling in the daily builds.

Sat Feb  7 09:02:54 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/AMI_Buffering/client.cpp:
        * tests/Blocking_Sync_None/client.cpp:
        * tests/Oneway_Buffering/client.cpp:

          Fixed warnings that were caused by comparison between signed
          and unsigned integers.

Sat Feb  7 14:18:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/Event_Service/client.cpp:
        * docs/tutorials/Quoter/Event_Service/Consumer_i.h:
        * docs/tutorials/Quoter/Event_Service/Stock_Factory_i.h:
        * docs/tutorials/Quoter/Event_Service/Stock_i.h:
        * docs/tutorials/Quoter/Naming_Service/client.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/client.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_Consumer.h:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_Factory_i.h:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_i.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_i.h:
          Fixed include path

Sat Feb  7 14:11:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.{h,cpp}:
          Fixed include path

Sat Feb  7 14:09:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
          Fixed include path

Fri Feb  6 18:56:21 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Connection_Handler.cpp (svc_i):

          A mistake while we kept looping trying to read messages. The
          loop used the availability of the transport () as a
          condition to exit the loop. But in the world after BUG 1020 was
          fixed, this condition is not right. The lifetime of the
          transport and the lifetime of the connection handler was tied
          together. The transport will never get deleted till the
          connection handler is deleted. The connection handler will never
          get deleted since the thread is using it. This is a vicious
          loop. Therefore we have removed that condition. We have added
          another condition to check for exiting out of the loop. The new
          condition basically checks the status of read () call. If the
          read call fails (we have taken care of timeouts here), we exit
          out of the loop.

        * tao/Thread_Per_Connection_Handler.cpp:

          Before we call remove_ref () on the transport, just make sure
          to call close_connection () on the connection handler. Reactive
          servers do that automatically through a call from the
          reactor.

          These fixes should take care of the leak problems that Chris
          Reed <cr@apama.com> reported. Thanks to Chris for reporting
          this.

Fri Feb  6 22:55:30 UTC 2004  Craig Rodrigues  <crodrigu@bbn.com>

        * tao/CORBALOC_Parser.cpp: Remove TAO_HAS_SCIOP.
          It is reasonable for the corbaloc parser to fail
          if a user specifies an sciop URL but did not compile
          SCTP support into ACE.

Fri Feb  6 16:40:06 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile.RTKokyuEvent: Added a LIBCHECK for
          Kokyu library. If Kokyu library is not built, it shows warning
          message to build the Kokyu library rather than stopping the
          build process.

Fri Feb  6 16:16:41 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Makefile:
        * tests/Server_Port_Zero/Hello.cpp:
        * tests/Server_Port_Zero/Hello.h:
        * tests/Server_Port_Zero/Makefile:
        * tests/Server_Port_Zero/README:
        * tests/Server_Port_Zero/Server_Port_Zero.mpc:
        * tests/Server_Port_Zero/Test.idl:
        * tests/Server_Port_Zero/run_test.pl:
        * tests/Server_Port_Zero/server.cpp:

          New test for a bug that Craig Rpdrigues reported. This test just
          tries starting up a CORBA server on TCP port 0.

        * tests/Makefile:

          Added the new test to the Makefile.

Fri Feb  6 14:59:45 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ExtAbstactInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAbstactInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.h:

          Added destroy() method to disambiguate multiple inheritance.

Fri Feb  6 10:48:07 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/Sequence_Latency/Thread_Per_Connection/Roundtrip.cpp:
          The shutdown () on the ORB is invoked with a value of 1.
          This should fix the vague crash in one of the builds.

Fri Feb  6 09:32:16 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Changed to inherit from rtoldevent instead of rtevent and rtsched.

Fri Feb  6 14:43:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory.idl:
          Fixed include path

Fri Feb  6 13:34:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/Event_Service/Stock_Consumer.h:
          Fixed include path

Fri Feb  6 13:30:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_18/server.cpp:
        * docs/tutorials/Quoter/Naming_Service/server.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/server.cpp:
        * docs/tutorials/Quoter/Event_Service/server.cpp:
          Fixed include path

Fri Feb  6 12:58:33 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/orbsvcs/Scheduler_Factory.h:
        * orbsvcs/orbsvcs/Scheduler_Utilities.h:
          Fixed include path

Fri Feb  6 12:42:01 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event_Utilities.h:
          Fixed include path

Fri Feb  6 11:40:56 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
          Fixed include path

Fri Feb  6 11:37:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/POA/Demux/demux_test_server.h:
          Fixed include path

Thu Feb  5 12:24:24 2004  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/Sequence_Latency/AMI/ami.mpc:

          Added taoexe to the inheritance list for both projects in this mpc
          file.  They were relying on valuetype to bring in taoidldefaults,
          which has changed.

Thu Feb  5 10:29:37 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Time_Utilities.h:

          Modified the #include for Time_Utilities.i to reflect the change
          in include paths.

Thu Feb  5 13:30:48 UTC 2004  Don Hinton  <dhinton@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.h:
          Added explicit #include's of SString.h and Null_Mutex.h needed
          on some platforms (Solaris and Linux).  Thanks to Thomas
          Lockhart <Thomas.Lockhart@jpl.nasa.gov> for the patch.

Wed Feb  4 04 23:54:55 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
          Fixed include path for FtRtecEventCommS.h.

        * orbsvcs/orbsvcs/FtRtEvent/Utils/Safe_InputCDR.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/Safe_InputCDR.inl:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/Safe_InputCDR.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
          Fixed alignment problems when using TAO_InputCDR.


Thu Feb  5 05:35:35 UTC 2004  Don Hinton  <dhinton@dre.vanderbilt.edu>

        * rules.tao.GNU:
          Added a new variable, VTAO_IDLFLAGS, and assign $(TAO_IDLFLAGS)
          to it.  Then use VTAO_IDLFLAGS when invoking the TAO_IDL
          compiler.  This is needed to avoid a problem where users
          "override" TAO_IDLFLAGS in their own makefiles.  Once you
          override a variable, all subsequent assignments must use
          "override" too, or they are ignored.  Many Makefile throughout
          TAO make assignments to TAO_IDLFLAGS, as well as many users, so
          adding "override" has the potential of breaking lots of code.
          This change is needed so that -I$(TAO_ROOT) to TAO_IDLFLAGS
          without breaking user makefiles that override it.

Wed Feb  4 18:29:32 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * rules.tao.GNU:

          Removed duplicate declarations.

Wed Feb  4 14:18:04 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * rules.tao.GNU:

          Added -I$(TAO_ROOT) to TAO_IDLFLAGS.

        * examples/Callback_Quoter/Consumer_Handler.h:
        * examples/Callback_Quoter/Notifier_Input_Handler.h:
        * examples/Callback_Quoter/Supplier_i.h:
        * examples/Content_Server/AMI_Iterator/client.cpp:
        * examples/Content_Server/AMI_Iterator/server.cpp:
        * examples/Content_Server/AMI_Observer/client.cpp:
        * examples/Content_Server/AMI_Observer/server.cpp:
        * examples/Content_Server/SMI_Iterator/client.cpp:
        * examples/Content_Server/SMI_Iterator/server.cpp:
        * examples/Event_Comm/Consumer_Handler.h:
        * examples/Event_Comm/Notifier_Handler.h:
        * examples/Event_Comm/Notifier_Server.h:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qos.idl:
        * examples/Logging/Logging_Service_i.h:
        * examples/Logging/Logging_Test_i.cpp:
        * examples/Logging/Logging_Test_i.h:
        * examples/Quoter/Generic_Factory.cpp:
        * examples/Quoter/client.cpp:
        * examples/Quoter/client.h:
        * examples/Quoter/server.h:
        * examples/RTCORBA/Activity/Activity.h:
        * examples/RTCORBA/Activity/Builder.h:
        * examples/RTScheduling/Starter.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc:
        * examples/Simple/Simple_util.h:
        * examples/Simple/time-date/Simple_time_date.mpc:
        * orbsvcs/Concurrency_Service/Concurrency_Service.h:
        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp:
        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:
        * orbsvcs/Event_Service/Event_Service.cpp:
        * orbsvcs/Event_Service/Event_Service.h:
        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.cpp:
        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.h:
        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.mpc:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.mpc:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.cpp:
        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/IFR_Service/IFR_Service.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * orbsvcs/LifeCycle_Service/Criteria_Evaluator.h:
        * orbsvcs/LifeCycle_Service/Factory_Trader.cpp:
        * orbsvcs/LifeCycle_Service/Factory_Trader.h:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service_i.cpp:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service_i.h:
        * orbsvcs/LoadBalancer/LoadManager.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/LoadBalancer/Monitor_Signal_Handler.h:
        * orbsvcs/LoadBalancer/Push_Handler.h:
        * orbsvcs/Naming_Service/Naming_Service.h:
        * orbsvcs/Notify_Service/Notify_Service.h:
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.h:
        * orbsvcs/Time_Service/Clerk_i.h:
        * orbsvcs/Time_Service/Server_i.h:
        * orbsvcs/Trading_Service/Trading_Service.h:
        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory_i.cpp:
        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory_i.h:
        * orbsvcs/examples/CosEC/Factory/FactoryClient.cpp:
        * orbsvcs/examples/CosEC/Factory/FactoryDriver.h:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/RtEC_Based_CosEC.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/RtEC_Based_CosEC.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ConsumerAdmin_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEvent_Utilities.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEvent_Utilities.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/EventChannel_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushConsumer_i.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushConsumer_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushSupplier_i.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushSupplier_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/SupplierAdmin_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Consumer.h:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Supplier.h:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Consumer.h:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Multiple.h:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Supplier.h:
        * orbsvcs/examples/CosEC/Simple/Consumer.cpp:
        * orbsvcs/examples/CosEC/Simple/Consumer.h:
        * orbsvcs/examples/CosEC/Simple/Service.cpp:
        * orbsvcs/examples/CosEC/Simple/Supplier.cpp:
        * orbsvcs/examples/CosEC/Simple/Supplier.h:
        * orbsvcs/examples/CosEC/TypedSimple/Consumer.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/CosEC_TypedSimple.mpc:
        * orbsvcs/examples/CosEC/TypedSimple/Country.idl:
        * orbsvcs/examples/CosEC/TypedSimple/Supplier.cpp:
        * orbsvcs/examples/Log/Basic/TLS_Client.h:
        * orbsvcs/examples/Log/Event/Event_Consumer.cpp:
        * orbsvcs/examples/Log/Event/Event_Consumer.h:
        * orbsvcs/examples/Log/Event/Event_Supplier.cpp:
        * orbsvcs/examples/Log/Event/Event_Supplier.h:
        * orbsvcs/examples/Log/Notify/Notify_Consumer.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Consumer.h:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Consumer.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Consumer.h:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.h:
        * orbsvcs/examples/Notify/Filter/Filter.h:
        * orbsvcs/examples/Notify/Subscribe/Subscribe.h:
        * orbsvcs/examples/RtEC/IIOPGateway/Consumer.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Consumer.h:
        * orbsvcs/examples/RtEC/IIOPGateway/EC.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/EC.h:
        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.h:
        * orbsvcs/examples/RtEC/IIOPGateway/Supplier.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Supplier.h:
        * orbsvcs/examples/RtEC/MCast/AddrServer.h:
        * orbsvcs/examples/RtEC/MCast/Consumer.cpp:
        * orbsvcs/examples/RtEC/MCast/Consumer.h:
        * orbsvcs/examples/RtEC/MCast/MCast.cpp:
        * orbsvcs/examples/RtEC/MCast/Supplier.cpp:
        * orbsvcs/examples/RtEC/MCast/Supplier.h:
        * orbsvcs/examples/RtEC/Schedule/Consumer.h:
        * orbsvcs/examples/RtEC/Schedule/Schedule.h:
        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
        * orbsvcs/examples/RtEC/Schedule/Supplier.cpp:
        * orbsvcs/examples/RtEC/Schedule/Supplier.h:
        * orbsvcs/examples/RtEC/Simple/Consumer.cpp:
        * orbsvcs/examples/RtEC/Simple/Consumer.h:
        * orbsvcs/examples/RtEC/Simple/Service.cpp:
        * orbsvcs/examples/RtEC/Simple/Supplier.cpp:
        * orbsvcs/examples/RtEC/Simple/Supplier.h:
        * orbsvcs/orbsvcs/Channel_Clients.h:
        * orbsvcs/orbsvcs/Channel_Clients_T.cpp:
        * orbsvcs/orbsvcs/Channel_Clients_T.h:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosTime.mpc:
        * orbsvcs/orbsvcs/Event_Service_Constants.h:
        * orbsvcs/orbsvcs/Event_Utilities.cpp:
        * orbsvcs/orbsvcs/Event_Utilities.h:
        * orbsvcs/orbsvcs/FTRT_GroupManager.idl:
        * orbsvcs/orbsvcs/FT_CORBA.idl:
        * orbsvcs/orbsvcs/FT_FaultDetectorFactory.idl:
        * orbsvcs/orbsvcs/FT_Notifier.idl:
        * orbsvcs/orbsvcs/FT_ReplicationManager.idl:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:
        * orbsvcs/orbsvcs/FtRtecEventChannelAdmin.idl:
        * orbsvcs/orbsvcs/FtRtecEventComm.idl:
        * orbsvcs/orbsvcs/IOR_Multicast.h:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTKokyuEvent.mpc:
        * orbsvcs/orbsvcs/RTOLDEvent.mpc:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/RTSchedEvent.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Scheduler_Factory.h:
        * orbsvcs/orbsvcs/Scheduler_Utilities.cpp:
        * orbsvcs/orbsvcs/Scheduler_Utilities.h:
        * orbsvcs/orbsvcs/Security.idl:
        * orbsvcs/orbsvcs/SecurityLevel1.idl:
        * orbsvcs/orbsvcs/SecurityLevel2.idl:
        * orbsvcs/orbsvcs/SecurityReplaceable.idl:
        * orbsvcs/orbsvcs/Time_Utilities.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/AV/AVStreams_i.h:
        * orbsvcs/orbsvcs/AV/AV_Core.cpp:
        * orbsvcs/orbsvcs/AV/AV_Core.h:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.h:
        * orbsvcs/orbsvcs/AV/Policy.h:
        * orbsvcs/orbsvcs/AV/QoS_UDP.cpp:
        * orbsvcs/orbsvcs/AV/QoS_UDP.h:
        * orbsvcs/orbsvcs/AV/RTCP.h:
        * orbsvcs/orbsvcs/AV/RTP.h:
        * orbsvcs/orbsvcs/AV/Resource_Factory.h:
        * orbsvcs/orbsvcs/AV/Transport.h:
        * orbsvcs/orbsvcs/AV/default_resource.cpp:
        * orbsvcs/orbsvcs/AV/default_resource.h:
        * orbsvcs/orbsvcs/AV/sfp.h:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.cpp:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Pulling_Strategy.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.h:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.h:
        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h:
        * orbsvcs/orbsvcs/Event/EC_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_Sched.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_Sched.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Null_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Priority_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Priority_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.cpp:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.cpp:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Manip.cpp:
        * orbsvcs/orbsvcs/Event/Event_Manip.h:
        * orbsvcs/orbsvcs/Event/Local_ESTypes.h:
        * orbsvcs/orbsvcs/Event/Module_Factory.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.h:
        * orbsvcs/orbsvcs/Event/ReactorTask.cpp:
        * orbsvcs/orbsvcs/Event/Timer_Module.cpp:
        * orbsvcs/orbsvcs/Event/Timer_Module.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Factory.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Factory.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxyConsumerStateWorker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxyConsumerStateWorker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxySupplierStateWorker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxySupplierStateWorker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientComponent.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientRequestInterceptor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Component.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlertInfo.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlertInfo.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlertMap.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert_Handler.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadListMap.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMap.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Location_Index_Map.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_MonitorMap.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_RoundRobin.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_RoundRobin.h:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/BasicLog_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLog_i.h:
        * orbsvcs/orbsvcs/Log/EventLogConsumer.cpp:
        * orbsvcs/orbsvcs/Log/EventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/EventLogNotification.cpp:
        * orbsvcs/orbsvcs/Log/EventLogNotification.h:
        * orbsvcs/orbsvcs/Log/EventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLog_i.h:
        * orbsvcs/orbsvcs/Log/Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Iterator_i.h:
        * orbsvcs/orbsvcs/Log/LogMgr_i.h:
        * orbsvcs/orbsvcs/Log/LogNotification.cpp:
        * orbsvcs/orbsvcs/Log/LogNotification.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.h:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogNotification.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogNotification.h:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h:
        * orbsvcs/orbsvcs/Log/PersistStore.cpp:
        * orbsvcs/orbsvcs/Log/PersistStore.h:
        * orbsvcs/orbsvcs/Log/RTEventLogConsumer.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogNotification.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogNotification.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:
        * orbsvcs/orbsvcs/Naming/Entries.h:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.h:
        * orbsvcs/orbsvcs/Naming/Naming_Loader.h:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.h:
        * orbsvcs/orbsvcs/Naming/Persistent_Entries.h:
        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/AdminProperties.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Builder.h:
        * orbsvcs/orbsvcs/Notify/Consumer.h:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/Container_T.cpp:
        * orbsvcs/orbsvcs/Notify/Container_T.h:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h:
        * orbsvcs/orbsvcs/Notify/Event.cpp:
        * orbsvcs/orbsvcs/Notify/Event.h:
        * orbsvcs/orbsvcs/Notify/EventChannel.h:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.h:
        * orbsvcs/orbsvcs/Notify/EventType.h:
        * orbsvcs/orbsvcs/Notify/Event_Manager.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.cpp:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.h:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup_T.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.h:
        * orbsvcs/orbsvcs/Notify/Object.h:
        * orbsvcs/orbsvcs/Notify/Peer.h:
        * orbsvcs/orbsvcs/Notify/Properties.cpp:
        * orbsvcs/orbsvcs/Notify/Properties.h:
        * orbsvcs/orbsvcs/Notify/Property.h:
        * orbsvcs/orbsvcs/Notify/PropertySeq.h:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.h:
        * orbsvcs/orbsvcs/Notify/Property_T.h:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.h:
        * orbsvcs/orbsvcs/Notify/RT_Builder.cpp:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.cpp:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.h:
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.h:
        * orbsvcs/orbsvcs/Notify/Service.h:
        * orbsvcs/orbsvcs/Notify/Subscription_Change_Worker.h:
        * orbsvcs/orbsvcs/Notify/Supplier.h:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Equal_To.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Hash.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Null_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Operators.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_conf.h:
        * orbsvcs/orbsvcs/PortableGroup/POA_Hooks.h:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.h:
        * orbsvcs/orbsvcs/Sched/Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp:
        * orbsvcs/orbsvcs/Security/EstablishTrustPolicy.h:
        * orbsvcs/orbsvcs/Security/InvocationCredentialsPolicy.h:
        * orbsvcs/orbsvcs/Security/MechanismPolicy.h:
        * orbsvcs/orbsvcs/Security/PrincipalAuthenticator.h:
        * orbsvcs/orbsvcs/Security/QOPPolicy.h:
        * orbsvcs/orbsvcs/Security/SecurityManager.h:
        * orbsvcs/orbsvcs/Security/Security_Current.h:
        * orbsvcs/orbsvcs/Security/Security_Current_Impl.h:
        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Time/TAO_TIO.h:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.h:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.h:
        * orbsvcs/orbsvcs/Time/TAO_UTO.h:
        * orbsvcs/orbsvcs/Time/Timer_Helper.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Trader/Interpreter.h:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h:
        * orbsvcs/orbsvcs/Trader/Trader.h:
        * orbsvcs/orbsvcs/Trader/Trader_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Trader/Trading_Loader.h:
        * orbsvcs/performance-tests/LoadBalancing/ORBInitializer.cpp:
        * orbsvcs/performance-tests/LoadBalancing/ORBInitializer.h:
        * orbsvcs/performance-tests/LoadBalancing/RPS_Monitor.cpp:
        * orbsvcs/performance-tests/LoadBalancing/RPS_Monitor.h:
        * orbsvcs/performance-tests/LoadBalancing/ServerRequestInterceptor.cpp:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/server.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Roundtrip.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/server.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Callback.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Session.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Session_Factory.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/client.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/server.cpp:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/server.cpp:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/client.cpp:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/server.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Client_Group.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Client_Pair.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Consumer.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Consumer.h:
        * orbsvcs/performance-tests/RTEvent/lib/Control.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/EC_Destroyer.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback_Consumer.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback_Consumer.h:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback_Pair.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback_Supplier.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback_Supplier.h:
        * orbsvcs/performance-tests/RTEvent/lib/ORB_Holder.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/ORB_Shutdown.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/ORB_Task.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/ORB_Task_Activator.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Peer_Base.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Peer_Base.h:
        * orbsvcs/performance-tests/RTEvent/lib/PriorityBand_Setup.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/RTCORBA_Setup.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/RTClient_Setup.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/RTEC_Initializer.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/RTPOA_Setup.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/RTServer_Setup.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Send_Task.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Send_Task_Stopper.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Supplier.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Supplier.h:
        * orbsvcs/performance-tests/RTEvent/lib/SyncScope_Setup.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.h:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/distributer.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/distributer.h:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/receiver.h:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/receiver.h:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/sender.h:
        * orbsvcs/tests/AVStreams/Component_Switching/Connection_Manager.h:
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.h:
        * orbsvcs/tests/AVStreams/Component_Switching/receiver.h:
        * orbsvcs/tests/AVStreams/Component_Switching/sender.h:
        * orbsvcs/tests/AVStreams/Full_Profile/ftp.h:
        * orbsvcs/tests/AVStreams/Full_Profile/server.h:
        * orbsvcs/tests/AVStreams/Latency/control.cpp:
        * orbsvcs/tests/AVStreams/Latency/ping.cpp:
        * orbsvcs/tests/AVStreams/Latency/ping.h:
        * orbsvcs/tests/AVStreams/Latency/pong.cpp:
        * orbsvcs/tests/AVStreams/Latency/pong.h:
        * orbsvcs/tests/AVStreams/Modify_QoS/receiver.h:
        * orbsvcs/tests/AVStreams/Modify_QoS/sender.h:
        * orbsvcs/tests/AVStreams/Multicast/ftp.h:
        * orbsvcs/tests/AVStreams/Multicast/server.h:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/ftp.h:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/server.h:
        * orbsvcs/tests/AVStreams/Multiple_Flows/receiver.h:
        * orbsvcs/tests/AVStreams/Multiple_Flows/sender.h:
        * orbsvcs/tests/AVStreams/Pluggable/ftp.h:
        * orbsvcs/tests/AVStreams/Pluggable/server.h:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/TimeStamp.cpp:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/TimeStamp.h:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/receiver.h:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/distributer.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/distributer.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/sender.h:
        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp:
        * orbsvcs/tests/Concurrency/CC_client.h:
        * orbsvcs/tests/Concurrency/CC_command.cpp:
        * orbsvcs/tests/Concurrency/CC_command.h:
        * orbsvcs/tests/Concurrency/CC_command.tab.cpp:
        * orbsvcs/tests/Concurrency/CC_naming_service.h:
        * orbsvcs/tests/Concurrency/CC_test_utils.h:
        * orbsvcs/tests/Concurrency/CC_tests.h:
        * orbsvcs/tests/CosEvent/Basic/Disconnect.cpp:
        * orbsvcs/tests/CosEvent/Basic/MT_Disconnect.cpp:
        * orbsvcs/tests/CosEvent/Basic/MT_Disconnect.h:
        * orbsvcs/tests/CosEvent/Basic/Pull_Push_Event.cpp:
        * orbsvcs/tests/CosEvent/Basic/Push_Event.cpp:
        * orbsvcs/tests/CosEvent/Basic/Random.cpp:
        * orbsvcs/tests/CosEvent/Basic/Random.h:
        * orbsvcs/tests/CosEvent/Basic/Shutdown.cpp:
        * orbsvcs/tests/CosEvent/lib/Counting_Consumer.h:
        * orbsvcs/tests/CosEvent/lib/Counting_Supplier.h:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.h:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.h:
        * orbsvcs/tests/EC_MT_Mcast/AddrServer.h:
        * orbsvcs/tests/EC_MT_Mcast/Consumer.cpp:
        * orbsvcs/tests/EC_MT_Mcast/Consumer.h:
        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/EC_MT_Mcast/Supplier.cpp:
        * orbsvcs/tests/EC_MT_Mcast/Supplier.h:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.h:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime1.h:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime2.h:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime_Dynamic.h:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.h:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.h:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.h:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.h:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp:
        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.cpp:
        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.h:
        * orbsvcs/tests/Event/Basic/BCast.cpp:
        * orbsvcs/tests/Event/Basic/BCast.h:
        * orbsvcs/tests/Event/Basic/Bitmask.cpp:
        * orbsvcs/tests/Event/Basic/Complex.cpp:
        * orbsvcs/tests/Event/Basic/Control.cpp:
        * orbsvcs/tests/Event/Basic/Control.h:
        * orbsvcs/tests/Event/Basic/Disconnect.cpp:
        * orbsvcs/tests/Event/Basic/Gateway.cpp:
        * orbsvcs/tests/Event/Basic/MT_Disconnect.cpp:
        * orbsvcs/tests/Event/Basic/MT_Disconnect.h:
        * orbsvcs/tests/Event/Basic/Negation.cpp:
        * orbsvcs/tests/Event/Basic/Observer.cpp:
        * orbsvcs/tests/Event/Basic/Observer.h:
        * orbsvcs/tests/Event/Basic/Random.cpp:
        * orbsvcs/tests/Event/Basic/Random.h:
        * orbsvcs/tests/Event/Basic/Reconnect.cpp:
        * orbsvcs/tests/Event/Basic/Timeout.cpp:
        * orbsvcs/tests/Event/Basic/Wildcard.cpp:
        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.cpp:
        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.h:
        * orbsvcs/tests/Event/Mcast/Common/Gateway_EC.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/consumer.cpp:
        * orbsvcs/tests/Event/Performance/Connect.cpp:
        * orbsvcs/tests/Event/Performance/Inversion.cpp:
        * orbsvcs/tests/Event/Performance/Latency.cpp:
        * orbsvcs/tests/Event/Performance/Latency.h:
        * orbsvcs/tests/Event/Performance/Latency_Server.cpp:
        * orbsvcs/tests/Event/Performance/Throughput.cpp:
        * orbsvcs/tests/Event/lib/Consumer.cpp:
        * orbsvcs/tests/Event/lib/Consumer.h:
        * orbsvcs/tests/Event/lib/Counting_Consumer.h:
        * orbsvcs/tests/Event/lib/Counting_Supplier.cpp:
        * orbsvcs/tests/Event/lib/Counting_Supplier.h:
        * orbsvcs/tests/Event/lib/Driver.cpp:
        * orbsvcs/tests/Event/lib/Driver.h:
        * orbsvcs/tests/Event/lib/Supplier.cpp:
        * orbsvcs/tests/Event/lib/Supplier.h:
        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica.idl:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
        * orbsvcs/tests/FT_App/StubBatchConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
        * orbsvcs/tests/FtRtEvent/PushConsumer.cpp:
        * orbsvcs/tests/FtRtEvent/PushConsumer.h:
        * orbsvcs/tests/FtRtEvent/PushSupplier.cpp:
        * orbsvcs/tests/FtRtEvent/PushSupplier.h:
        * orbsvcs/tests/FtRtEvent/consumer.cpp:
        * orbsvcs/tests/FtRtEvent/supplier.cpp:
        * orbsvcs/tests/ImplRepo/NameService/test.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/InterfaceRepo_IDL3_Test.mpc:
        * orbsvcs/tests/Log/Basic_Log_Test/Basic_Log_Test.cpp:
        * orbsvcs/tests/Log/Basic_Log_Test/Basic_Log_Test.h:
        * orbsvcs/tests/Notify/Basic/IdAssignment.cpp:
        * orbsvcs/tests/Notify/Basic/IdAssignment.h:
        * orbsvcs/tests/Notify/Basic/LifeCycle.cpp:
        * orbsvcs/tests/Notify/Basic/Sequence.h:
        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Blocking/common.h:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Discarding/common.h:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Ordering/common.h:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.h:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.h:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.h:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.h:
        * orbsvcs/tests/Notify/lib/ConsumerAdmin_Command.h:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.h:
        * orbsvcs/tests/Notify/lib/Filter_Command.h:
        * orbsvcs/tests/Notify/lib/LookupManager.h:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.h:
        * orbsvcs/tests/Notify/lib/Options_Parser.cpp:
        * orbsvcs/tests/Notify/lib/Options_Parser.h:
        * orbsvcs/tests/Notify/lib/Peer.cpp:
        * orbsvcs/tests/Notify/lib/Peer_T.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer_Command.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer_Command.h:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.h:
        * orbsvcs/tests/Notify/lib/StructuredEvent.h:
        * orbsvcs/tests/Notify/lib/SupplierAdmin_Command.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.h:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.cpp:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.h:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp:
        * orbsvcs/tests/Property/client.h:
        * orbsvcs/tests/Property/server.h:
        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * orbsvcs/tests/RTCosScheduling/server.cpp:
        * orbsvcs/tests/Redundant_Naming/client.cpp:
        * orbsvcs/tests/Sched/DynSched_Test.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp:
        * orbsvcs/tests/Security/Big_Request/server.cpp:
        * orbsvcs/tests/Security/Callback/client.cpp:
        * orbsvcs/tests/Security/Callback/server.cpp:
        * orbsvcs/tests/Security/Callback/server_i.cpp:
        * orbsvcs/tests/Security/Crash_Test/client.cpp:
        * orbsvcs/tests/Security/Crash_Test/server.cpp:
        * orbsvcs/tests/Security/Crash_Test/test_i.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/test_i.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/test_i.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/Foo_i.h:
        * orbsvcs/tests/Security/Secure_Invocation/client.cpp:
        * orbsvcs/tests/Security/SecurityLevel1/SLevel1_Test_i.h:
        * orbsvcs/tests/Security/SecurityLevel1/client.cpp:
        * orbsvcs/tests/Simple_Naming/client.h:
        * orbsvcs/tests/Time/Client_i.h:
        * orbsvcs/tests/Trading/Offer_Importer.h:
        * orbsvcs/tests/Trading/Simple_Dynamic.h:
        * orbsvcs/tests/Trading/TT_Info.cpp:
        * orbsvcs/tests/Trading/TT_Info.h:
        * orbsvcs/tests/Trading/colocated_test.cpp:
        * orbsvcs/tests/Trading/export_test.cpp:
        * tests/IDL_Test/array.idl:
        * utils/nslist/nsadd.cpp:
        * utils/nslist/nsdel.cpp:
        * utils/nslist/nslist.cpp:

                - Removed all include paths except TAO_ROOT
                  for C++ and IDL compilers, from MPC files.

                - Modified includes in source and header files as necessary,
                  per the above changes.

                - Added missing ACE_ROOT/ace includes.

                - Made other modifications as necessary to MPC files to
                  eliminate build errors.

Wed Feb  4 11:08:31 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_tmplinst.cpp:
        * tao/PortableServer/ImR_LocatorC.cpp:

          Added some missing explicit template instantiations. Thanks
          to Olli Savia <ops@iki.fi> for reporting them.

Tue Feb  3 14:12:01 2004  Gautam Thaker  <gthaker@atl.lmco.com>

        * docs/releasenotes/index.html:

          Minor edit, change "FT EC" to "FT/RT EC" which is the name
          given by the developers of this service.

Tue Feb  3 13:09:22 2004  Gautam Thaker  <gthaker@atl.lmco.com>

        * docs/releasenotes/index.html:

          Reorganized the "releasenotes" table of content at the top
          of the page. Removed some outdated entries per feedback from
          Bala.

Mon Feb  2 20:02:57 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/RTCORBA/RTCORBA_includeS.h:

          Needed for files that include RTCORBA_include.pidl. This is
          empty.

Sun Feb  1 15:18:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/FL_Cube/FL_Cube.mpc:
          Added missing file to the server project

Sun Feb  1 15:05:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/FL_Cube/test_i.{h,cpp}:
          Fixed method specifications.

Sun Feb  1 09:13:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * rules.tao.GNU:

          Used += instead of = while adding the -I to TAO_IDLFLAGS.

Sat Jan 31 18:24:02 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * rules.tao.GNU:

          Added -I$(TAO_ROOT) to TAO_IDLFLAGS by default.

Fri Jan 30 16:43:43 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.inl:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.inl:
        * orbsvcs/orbsvcs/Makefile.CosLoadBalancing:

          Integrated two new adaptive load balancing strategies
          with the TAO Load Balancing Service - Cygnus.


Thu Jan 29 18:14:20 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp:

          When executing validate_included_idl_files() on a non-windows
          platform, the system function realpath() is called. Denny
          Kolb <kolb@g2ss.com> has submitted a version for use on LynxOS,
          which does not have a native version of this function.

Thu Jan 29 15:33:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Added missing parenthesis is a block of code compiled only
          when ACE_SWAP_ON_WRITE is defined. This closes [BUGID:1732].
          Thanks to Mouna Seri <seri@crhc.uiuc.edu> for making the
          entry.

Thu Jan 29 14:10:27 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Acceptor_Impl.cpp:
        * tao/Asynch_Queued_Message.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/Codeset_Manager.cpp:
        * tao/Connection_Handler.cpp:
        * tao/DLL_ORB.cpp:
        * tao/Environment.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/Incoming_Message_Queue.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/MCAST_Parser.cpp:
        * tao/NVList.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/Object_Ref_Table.cpp:
        * tao/Profile.cpp:
        * tao/Sequence.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Synch_Queued_Message.cpp:
        * tao/Synch_Reply_Dispatcher.cpp:
        * tao/TAO_Internal.cpp:
        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/Transport.cpp:
        * tao/Transport_Cache_Manager.cpp:
        * tao/Transport_Connector.cpp:
        * tao/Typecode.cpp:
        * tao/default_resource.cpp:
        * tao/skip.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/PortableServer/Operation_Table.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Acceptor.cpp:
        * tao/Strategies/SCIOP_Profile.cpp:
        * tao/Strategies/SCIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/UIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/advanced_resource.cpp:
        * tao/Utils/Server_Main.cpp:

          Thanks to Duane Binder<duane.binder@veritas.com> for providing
          patches to fix some of the messages printed out using
          ACE_Log_Msg.

Thu Jan 29 14:03:42 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/ec_typed_events.mpb:
        * tao/tao.mpc:

          Updated these mpc files to work with IDL_Files as a custom build
          type instead of a built-in build type.

Thu Jan 29 11:57:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          For abstract interfaces, in the body of the generated
          *_setup_collocation() method, added a check for non-zero
          collocation factory function pointer to the existing
          check for a non-zero 'collocated' argument. As the generated
          code stands right now, this argument will always be 0 for
          abstract interfaces, but the extra check was added as a
          "belt-and-suspenders" level of safety in case the
          generated code logic changes in the future.

Thu Jan 29 11:23:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp (gen_stub_src_includes):

          Moved the conditional code generation for abstract interface
          related filed outside the scope of the check for non-local
          operations. While it is very likely that an abstract interface
          declaration will contain at least one operation, it is not
          required by IDL. Thanks to Yavannadil <yavannadil@yahoo.com>
          for reporting the problem.

Thu Jan 29 09:36:11 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/orb.idl:

          Added 'tao/' prefix to each included .pidl file, since some builds
          (even some versions of a build on certain platforms) have only
          TAO_ROOT in the path and not also TAO_ROOT/tao.

Thu Jan 29 09:14:59 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Trading_Service/Trading_Service.mpc:

          Change the order of inheritance between naming and trading to get
          the right library link order for static builds on UNIX.

Thu Jan 29 00:09:00 2004  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          use ace/streams.h rather than native iostreams

Wed Jan 28 17:53:27 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDLinclude/drv_extern.h:
        * TAO_IDLinclude/idl_global.h:
        * TAO_IDLutil/utl_global.cpp:

          The IDL compiler generates the includes *C.h and *S.h for
          every corresponding IDL file included in the main IDL file,
          except for one - orb.idl, since it has no associated
          generated code. However, it does include several .pidl
          files, and if orb.idl is included to allow references
          to the contents of one or more of these .pidl files,
          their corresponding C++ header files should be
          included in generated code. These changes create a
          mechanism to read orb.idl, if it is seen, and add its
          included .pidl files to the IDL compiler's included IDL
          file list, which causes the corresponding C++ header
          file includes to be generated automatically. Thanks to
          Scott Gammill <zumo@flashmail.com> for reporting the
          problem and for sending in an exmaple IDL file.

        * tao/StringSeqS.h:

          New file, containing no declarations, added to eliminate
          compile errors stemming from the above changes, since
          orb.idl includes StringSeq.pidl.

        * tao/tao.mpc:

          Added the above new file, and all the other *S.h files
          (added for a similar purpose) in TAO to the MPC file,
          so they will appear in VC projects for convenient
          inspection and editing.

Wed Jan 28 16:46:17 2004  Steve Totten  <totten_s@ociweb.com>

        * examples/DeveloperGuideExamples.txt:
          Updated the information in this file.

Wed Jan 28 13:22:00 2004  Gautam H. Thaker  <gthaker@atl.lmco.com>

        * docs/releasenotes/index.html (CORBA):

        added SCIOP entry in docs/releasenotes/index.html

Wed Jan 28 13:21:00 2004  Chad Elliott  <elliott_c@ociweb.com>

        * tests/QtTests/QtTests.mpc:

          Inherit from the ace_qt base project as part of the reorganization
          of qt and qt_moc.

Tue Jan 27 18:05:19 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_global.h:

          Eliminated generation of the *A.h file, containing
          declarations for Any operators and triggered by the
          option -GA. Moved generation of Any operator declarations
          back to the *C.h file. Left generation of the *A.cpp file
          unchanged, except for removal of *A.h #include. This
          change allows us to avoid linking *A.cpp in
          DLLs if the Any operators are not used, while still
          allowing their declarations to be found if they are referenced
          in another generated file.

Tue Jan 27 17:41:38 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/OctetSeqA.h:
        * tao/OctetSeqC.h:

          Moved the declaration of Any operators and type code from
          OctetSeqA.h to OctetSeqC.h, so the operators can be seen
          in generated code if CORBA::OctetSeq is used there. Thanks
          to Jeff Mirwaisi <jeff_mirwaisi@yahoo.com> for reporting
          the bug and for sending in an example IDL file.

Mon Jan 26 17:46:18 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:

          In generated operation stub code, changed the name of the
          array of argument helper classes passed to Invocation_Adapter,
          so that the array name does not begin with the characters
          '_tao_'. These characters are coincidentally applied as a prefix
          to each argument helper class identifier, and so there was a
          possibility of a name clash. Of course there is still a
          chance of a name clash with the argument identifier itself,
          but there is no way to eliminate that, only to minimize it.
          This fix closes [BUGID:1725]. Thanks to Mouna Seri
          <seri@crhc.uiuc.edu> for reporting the bug and for sending
          the example IDL file that illustrated it.

Mon Jan 26 09:32:58 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/FTRT_Event_Service/Event_Service/FTRT_Event_Service.mpc:

          Used the utils and ftrteventchannel base projects instead of
          duplicating the information in this mpc file.

        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:

          Cleaned up these mpc files in hopes to fix some build problems.

        * tao/Utils/Utils.mpc:

          Updated this file to take template files into account.

        * tao/Utils/tao_Utils.mpc:

          Removed this file.  It was redundant.

Sun Jan 25 10:25:07 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/ORT/Object_Factory_i.cpp:

          Fixed compilation errors in VC6 builds.

Sun Jan 25 11:16:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simple/time-date/Simple_time_date.mpc:
        * tests/Smart_Proxies/Smart_Proxies.mpc:
          Use taoserver and taoclient so that executable names are in the
          way the run_test.pl scripts expects them.

Fri Jan 23 11:10:00 2004  Gary Maxey <gary.maxey@hp.com>

        * tao/ORB_Constants.h

          Fix for BUGID 1723. Added two new profile Ids

Fri Jan 23 11:43:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Fixed_Array_Argument_T.cpp:
        * tao/Fixed_Array_Argument_T.h:
        * tao/Fixed_Array_Argument_T.inl:
        * tao/Var_Array_Argument_T.cpp:
        * tao/Var_Array_Argument_T.h:
        * tao/Var_Array_Argument_T.inl:

          Added the tag template parameter introduced in

          Thu Jan 22 16:14:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

                  to the necessary class signatures.

                * TAO_IDL/be/be_visitor_arg_traits (visit_array):

                  Added code generation for the tag template parameter corresponding
                  to the changes listed above.

Thu Jan 22 19:37:21 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Changed the output directory of the build for tao_ifr.exe
          to ACE_wrappers/bin.

        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/orbsvcs/IFRService/concrete_classes.h:

          - Changed the servant creation code to create the most
            derived servant classes for abstract, local, and
            unconstrained interfaces. These more derived classes
            inherit from the mixin class TAO_InterfaceAttrExtension_i,
            making the method create_ext_attribute() (which creates
            IFR entries for the CORBA 3 attribute that can have
            exceptions) visible. This change eliminates a BAD_OPERATION
            exception that was thrown when trying to create an
            attribute entry in the IFR. Thanks to Cristian Ferretti
            <cristian_ferretti@yahoo.com> for reporting the bug and
            supplying an example IDL file.

          - Changed the POA and servant selector functions to return
            the more derived servants (or associated POAs) described above.

          - Changed the includes file concrete_classes.h accordingly.

Thu Jan 22 17:14:03 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_decl.cpp:

          Changed the mutator of the member that stores the version
          to update the repository id along with a legal set of
          the version. Since the repository id is now computed
          eagerly, it must be updated if a #pragma version directive
          is encountered in the IDL file. Thanks to Nils Sandoy
          <nils.sandoy@fast.no> for sending in the example IDL file
          that uncovered the problem.

Thu Jan 22 16:14:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp:
        * tao/Array_VarOut_T.cpp:
        * tao/Array_VarOut_T.h:
        * tao/Array_VarOut_T.inl:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/Sequence_T.i:

          Added generation of an empty struct for each array,
          anonymous or not, in an IDL file. This struct is then
          used as a tag in the parameter list for the various
          template classes associated with arrays - _var, _out,
          _forany, Array_Traits<> and bounded/unbounded array
          sequences. This added tag disambiguates the types of
          the above classes for any two arrays in a build, even
          if they have the same element type and bound. Thanks
          to John Morey <jmorey@mmintl.com> for reporting the
          problem and for sending in the example IDL that
          reproduced it.

Thu Jan 22 13:28:04 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.cpp:

          Do not attempt to call getloadavg() if ACE_LACKS_GETLOADAVG is
          defined.

Wed Jan 22 11:33:47 2004  Scott Harris <harris_s@ociweb.com>

        * utils/wxNamingViewer/Makefile:
          Made the Makefile log which component was missing when
          it does not build.

        * utils/wxNamingViewer/wxNamingViewerFrame.cpp:
        * utils/wxNamingViewer/wxViewIORDialog.cpp:
          Fixed invalid use of undefined type `struct ACE_CString'
          that occured with the Makefile from the repository and
          the one generated by MPC.

        * utils/wxNamingViewer/README:
          Added information on using MPC.

        * utils/utils.mwc:
          Added wxNamingViewer. must have wxwindows=1 in default.features
          to generate the Makefile.

          Also see $ACE_ROOT/OCIChangeLog for files changed to
          support wxwindows base project for MPC.

Thu Jan 22 11:37:05 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/AVStream_Pluggable_Flow_Protocol.mpc:
        * orbsvcs/tests/CosEvent/Basic/basiceventtestexe.mpb:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling.mpc:

          Removed redundant usage of 'comps' keyword.

Thu Jan 22 10:29:03 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup.mpc:

          Added the missing PortableGroup_Simple_DS.idl file.

Wed Jan 22  9:23:47 2004  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/Options.h:
        * orbsvcs/tests/InterfaceRepo/Application_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/run_test.pl:

          Remove tabs and trailing spaces to conform to
          coding standards.

Wed Jan 21 16:35:47 2004  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/Options.h:
        * orbsvcs/orbsvcs/IFRService/Options.cpp:
          Added "-m" option to IFR_Service to enable multicast discovery
          of the service.  Earlier "-m" was used to enable locking but
          that option has been changed to "-l".

          Note: IFR_Service was changed to not support multicast discovery
          as part of a large change:

          Wed Mar 12 09:49:00 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

          after the 1.3.1 release by changing the default value of
          the use_multicast_server parameter of
          TAO_IFR_Server::init_with_orb in
          orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h.

        * orbsvcs/tests/InterfaceRepo/Application_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/run_test.pl:
          Fixed test scripts so they would find tao_ifr.exe in
          %ACE_ROOT%/bin or %TAO_ROOT%/orbsvcs/IFR_Service since the
          *.DSPs in the repository put it in one place and the *.DSPs
          generated by MPC put it in another. This technique also works on
          Unix builds.

        * orbsvcs/tests/InterfaceRepo/IFR_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/run_test.pl:
          Add " -o $iorfile" to command line of IFR_Service so if $iorfile
          is changed from if_repo.ior in the run_test.pl script it will
          still work.

        * orbsvcs/tests/InterfaceRepo/IFR_Test/README:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/README:
          Updated tests and test documentation to work with IFR_Service
          that does not default to multicast discovery support.

Wed Jan 21 11:26:10 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_recursive.cpp:

          Change to limit the check in the entry below to structs
          and unions, and exclude it for exceptions. Exceptions
          may not be recursive at all, so the check, triggered
          when parsing a member (where there is no knowledge of
          whether it is a struct, union, or exception member) is
          inappripriate in such a case.

Tue Jan 20 16:59:03 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/ast_extern.h:
        * TAO_IDL/ast/ast_recursive.cpp:

          Beefed up the checked for illegal recursion to include the
          following category:

          interface foo
          {
            struct bar
            {
                          foo foo_mem;
                        };
                  };

                  and similar cases with the recursion nested at deeper levels.
                  Thanks to Milan Cvetkovic <mcvetkovic@mpathix.com> for sending
                  in the example IDL.

                * tests/IDL_Test/interface.idl:

                  Added the above example to the test file.

Tue Jan 20 16:59:50 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

       * tao/Policy_Set.i:

          Fixed warnings in VC71 builds. Thanks to Grutzmacher
          Lukas<gruetzmacher@ais-dresden.de> for reporting the problem and
          providing patches.

Tue Jan 20 17:24:31 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Borland/ChatClient.bpr:
          Don't use -O2, this causes problems with BCB6 in a release build,
          use -Og -Ov -OS as seperate options. This not sets -Oi which is
          the problem.

Tue Jan 20 17:01:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_8_and_10/server.h:
          Reverted my change of Fri Jan 16 14:16:49 UTC 2004. The problem
          is the optimizer of BCB6 and replacing strcpy with ::strcpy is
          not a nice solution

Tue Jan 20 11:03:58 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/Advanced/ch_8_and_10/client.cpp:

          Use different variable names within for loops to avoid build
          problems with the very out-dated Visual C++ 6.0.

        * examples/Advanced/ch_8_and_10/icp.cpp:

          Use std::min instead of min to avoid build problems with Visual
          C++ 6.0.

Mon Jan 19 18:07:19 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Borland/ChatClientWnd.cpp:
        * examples/Borland/ChatClientWnd.h:
        * examples/Borland/ORBThread.h:
        * examples/Borland/pch.h:
        * examples/Borland/ReceiverImpl.cpp:
          Removed not needed includes.

Mon Jan 19 16:18:15 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DLL_ORB/Test_Client_Module_Export.h:
        * tests/DLL_ORB/Test_Server_Module_Export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Sun Jan 18 15:17:52 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/StringSeqA.h:
        * tao/StringSeqC.h:

          Move declaration of Any operators from *A.h file to *C.h file.
          This move will enable the compiler to find the Any operators
          if the (w)string sequence is used as an operation parameter
          (in which case interceptors require the Any insertion operator).
          In the future, subsetting of interceptors will eliminate this
          problem.

        * tao/tao.mpc:

          Added StringSeqA.cpp to the source file list.

Sun Jan 18 10:11:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/FtRtEvent/consumer.cpp:
        * orbsvcs/tests/FtRtEvent/supplier.cpp:
          Use ACE_AUTO_PTR_RESET to reset an auto_ptr

Sat Jan 17 21:23:24 2004  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          Add missing ACE_CHECK_RETURN

Sat Jan 17 13:58:11 2004  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Fix exceptions=0 build problems.

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Renable exceptions=0 build.

Sat Jan 17 19:28:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/TimeStamp.{h,cpp}:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/export.h:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/AVStream_Pluggable_Flow_Protocol.mpc:
          This test builds an own shared library but used the AV export
          macro's.  Gave this test its own macro so that it exports
          just it own symbols instead of all AV symbols.

Sat Jan 17 11:26:03 2004  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.cpp:
          Changed the class name "STCP_Fault_Detector" to
          "SCTP_Fault_Detector"

Fri Jan 16 22:23:01 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be_include/be_valuetype.h:
        * TAO_IDL/fe/fe_tmplinst.cpp:
        * TAO_IDL/include/ast_exception.h:
        * TAO_IDL/include/ast_sequence.h:
        * TAO_IDL/include/ast_structure.h:
        * TAO_IDL/include/ast_type.h:
        * TAO_IDL/include/ast_union.h:

          Expanded the IDL compiler's code that checks for recursive types,
          to handle recursion that is deeply nested, occurring multiple
          times, occurring at multiple levels, or some combination of
          these. The IDL appearing at the end of the Deployment and
          Configuration specification (ptc/03-07-02), taken as a whole,
          contains all of these use cases.

        * tests/IDL_Test/sequence.idl:

          Added a pared-down version of the D and C spec IDL mentioned
          above to this test, but a version that contains all the recursive
          type use cases of the original.

Fri Jan 16 11:27:28 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:

          Modified the -g <gperf path> command line option to
          automatically append "/gperf.exe" if we are on
          Windows. CreateProcess (called under the hood when the gperf
          process is spawned) apparently needs it this way. Thanks to Brad
          Orner <bradley_p_orner@raytheon.com> for reporting the problem
          and Brian Mendel <brian.r.mendel@boeing.com> for providing the
          fix.

Fri Jan 16 15:34:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orsbvcs/Notify_Service/Notify_Service.{h,cpp}:
          Parse the notify service arguments before initialising the ORB so
          that the -ORBRunThreads option is consumed before we let the ORB
          parse the arguments, because else the ORB will throw an exception
          about a unknown -ORB option. The argc argument of the parse_args
          function is now by reference, so that it is updated because this
          method consumes the arguments. Thanks to Olli Savia <ops@iki.fi>
          for reporting this and also testing the changes.

Fri Jan 16 14:16:49 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_8_and_10/icp.cpp:
          Also msvc doesn't have lrand48

        * examples/Advanced/ch_8_and_10/server.h:
          Use ::strcmp instead of strcmp. Because of the subsetting just using
          strcmp directly gives compile problems with Borland. This fixes
          the problems with Borland and it didn't break the environments I have
          access to. If other environments break, the solution would be to use
          ACE_OS::strcmp but these examples doesn't use anything of ACE_OS
          at this moment.

Fri Jan 16 14:10:09 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_8_and_10/server.cpp:
          Moved function call outside assert. This fixes a warning in the
          release builds and the function call is also then done in a release
          build.

Fri Jan 16 13:53:21 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/Simple/Persistent/Quoter_Simple_Persistent.mpc:
        * docs/tutorials/Quoter/Simple/Client/Quoter_Simple_Client.mpc:
          Client projects are now also based on portableserver. This fixes link
          errors in the BCB6 Static build.

Fri Jan 16 12:41:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp:
          Corrected argument of ACE_AUTO_PTR_RESET call. Thanks to
          Mickael P. Golovin <migel@garant.ru> for reporting this.

Fri Jan 16 12:33:46 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
          Removed superfluous reset call which caused problems using old
          stl. Thanks to Mickael P. Golovin <migel@garant.ru> for reporting
          this.

Fri Jan 16 09:41:53 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

       * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
         Fixed compile problem in Tru64 build.

Fri Jan 16 09:13:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

       * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp:
         Removed not needed include of ace/pre.h

Thu Jan 15 16:10:27 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Exception.cpp:
        * tao/Exception.h:

          - Added ostream insertion operator for CORBA::Exception*,
            which is required by the spec along with the existing
            ostream insertion operator for CORBA::Exception&.

          - Moved the above operators into the CORBA namespace.
            Defining them in the global namespace as they were makes
            them easily hidden, and we know that the compiler will
            eventually look in the scope of the rhs operand, and thus
            will always find the CORBA::Exception overload. Thanks
            to Hans Utz <hans.utz@informatik.uni-ulm.de> for the
            suggestion.

Thu Jan 15 15:50:41 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/include/ast_type.h:

          Since char, octet and boolean are usually ambiguous types in the
          ORB, specializing an Arg_Traits<> class for an argument that is
          a typedef of one of these types requires that we strip the
          typedef to find the correct parameter with which to specialize
          Arg_Traits<>. This fix introduces that behavior. Thanks to Simon
          Dutkowski <dutkowski@fokus.fraunhofer.de> and Angel Roman
          <A_Roman1@msn.com> for reporting the bug.

        * tests/IDL_Test/interface.idl:

          Added an example to the IDL that reproduces the condition described
          above.

Thu Jan 15 15:42:06 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:

          Fixed incorrect code generation for the CDR operator of a
          struct/union/exception with an undefined forward declared
          interface member. This closes [BUGID:1714]. Thanks to
          Andrew Metcalfe <Andrew.Metcalfe@ccur.com> for reporting
          the bug.

        * tests/IDL_Test/full.idl:
        * tests/IDL_Test/fwd.idl:

          Added example to test the construct that cause the bug
          described above.

Thu Jan 15 15:36:42 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_interface.cpp (fe_add_field):

          Added check for name clash between a valuetype member identifier
          and the first segment of a scoped name referenced in the same
          scope where the identifier is found, similar to what is already
          in place for structs, unions and exceptions.

Thu Jan 15 16:50:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/ORB_Per_Priority.mpc:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Single_Endpoint.mpc:
          Removed avoids += minimum_corba from these files because it is now set
          in rtcorbacommon.

Thu Jan 15 16:14:01 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/RTCosScheduling/testSched_export.h:
        * orbsvcs/performance-tests/RTEvent/lib/rtec_perf_export.h:
        * docs/tutorials/Quoter/idl/quoter_common_export.h:
        * tests/CodeSets/libs/IBM1047_ISO8859/IBM1047_ISO8859_export.h:
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16_export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Thu Jan 15 08:12:14 2004  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/tao_idl.mpc:
        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Replaced the use of the idlpreprocessor keyword with verbatim
          clauses that give the same results.

Wed Jan 14 18:46:49 2004  Balachandran  <bala@dre.vanderbilt.edu>

        * TAO version 1.4 released.

Wed Jan 14 15:25:55 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/releasenotes/index.html:

          Added a link to CIDLC from the releasenotes.

Wed Jan 14 14:55:18 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * Makefile:

          Removed orbsvcs/README from the release process.

Wed Jan 14 11:41:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/releasenotes/index.html:

          Added a link to CIAO.

Wed Jan 14 09:47:56 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * */*_Static.ds[p,w]:

          All the Win32 static projects and workspaces have been
          removed. Please use MPC to generate them.

Tue Jan 13 21:37:35 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/Options.html:

          Added documentation for -ORBDisableRTCollocation. Somehow this
          slipped through the cracks.

Mon Jan 12 13:05:54 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/OctetSeqA.cpp:
        * tao/OctetSeqA.h:
        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.h:
        * tao/OctetSeqC.i:

          Regenerated the files since the last checkin was not addressing
          things in a right manner.

        * tao/diffs/OctetSeq.diff:

          Updated the diffs.

Mon Jan 12 15:59:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/OctetSeqA.h:
          Added missing pre/post includes and TAO_Export macro to export the
          methods. Thanks to Heiko Bachmann <h.bachmann@unicontrol.de> for
          reporting this.

Mon Jan 12 01:20:33 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:

          Fixed a simple problem with the way we used extraction operators
          that caused link errors on VC71.

Sun Jan 11 08:43:09 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.mpc:
          The extra file added was not required for GNU Makefiles.

Sat Jan 10 23:17:55 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/MT_Client/client.global.conf.xml:
        * tests/MT_Client/client.tss.conf.xml:

          These need to go too.

Sat Jan 10 23:09:14 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/MT_Client/client.global.conf:
        * tests/MT_Client/client.tss.conf:

          These configuration files are old and the options aren't
          supported any more. Nor are they used any more.

Sat Jan 10 22:56:57 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/Latency/Thread_Per_Connection/Roundtrip.cpp:
        * tests/MT_Client/test_i.cpp:

          The best fix for the problem outlined is "Sat Jan 10 21:17:10
          2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>" to
          wait for all threads exit () before finishing shutting down the
          ORB_Core. I was trying to avoid this with earlier checkins.

          The cost of avoiding this can be catostrophical though it doesn't
          show up for us. We now explicitly call shutdown with a boolean
          flag to prevent the crash. We have now moved the configuration
          details to the application, but looks like it is hard to avoid.

Sat Jan 10 22:17:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Connection_Handler.cpp:

          Reverted this change "Sat Jan 10 21:17:10 2004  Balachandran
          Natarajan  <bala@dre.vanderbilt.edu>" since it doesn't look
          like a right fix. This can cause other problems like silent
          crashes when threads exits.

Sat Jan 10 21:42:47 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FtRtEvent.mpc:

          Added a missing file, which gave rise to link errors with VC71
          builds.

Sat Jan 10 21:17:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Connection_Handler.cpp:

          Increase the refcount of the ORB_Core in the constructor aand
          decrement the  refcount in the destructor. This may not be
          required at all. This is required only for the
          thread-per-connection model. A shutdown () call from a remote
          host could potentially cleanup the whole ORB and call ORB::fini
          () before the thread in svc_i () can try calling has_shutdown ()
          to exit out of the svc_i () loop. This could cause a crash. To
          prevent that from happening we will increment the refcount. With
          reactive model this is not be needed at all, since all the
          threads are  kicked out of the reactor before the ORB is
          shutdown by the closing thread.

          Thanks to valgrind for helping me catch this. This should have
          slipped through for a very long time, if my guess is right.

Sat Jan 10 17:47:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/RTEvent/lib/Send_Task.h:

          Fixed another warning with Forte 8 compilers, which complained
          about the ACE_Task_Base::init () being hidden.

Sat Jan 10 17:25:23 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.mpc:

          Added a missing file to the project. This was creating link
          error in VC71 builds.

Sat Jan 10 12:27:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FT_App/FT_App.mpc:

          Used the wrong library name as a dependency which broke the
          SunOS MPC builds from remedy.

Fri Jan  9 23:50:21 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Miop/McastHello/McastHello.cpp:

          Fixed a warning in BCB6 in builds.

Fri Jan  9 18:02:18 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/IDL_Test/enum_in_struct.idl:

          Fixed a duplicate enum declaration. This showed up only in the
          TRU64 builds. Thanks to Johnny for arranging an access to a TRU
          64 box to find this problem out.

Fri Jan  9 13:31:09 2004  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/Makefile.BE:
        * TAO_IDL/Makefile.FE:
        * TAO_IDL/TAO_IDL_BE_LIB.dsp:
        * TAO_IDL/TAO_IDL_FE_LIB.dsp:
        * TAO_IDL/be_include/TAO_IDL_BE_Export.h:
        * TAO_IDL/include/TAO_IDL_FE_Export.h:
        * TAO_IDL/tao_idl.mpc:
        * TAO_IDL/tao_idl_static.dsp:

          Converted these to key the exporting of symbols based on
          ACE_AS_STATIC_LIBS instead of TAO_AS_STATIC_LIBS, since it has
          nothing to do with whether TAO is built statically.

Fri Jan  9 11:51:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Miop/McastHello/McastHello.h:

          Fixed compile errors with g++ caused due to improper overriding
          of virtual functions.

Fri Jan  9 11:59:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Message_Block_Data_Iterator.h:
          Added missing includes

Fri Jan  9 11:33:27 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Added missing after so that the consumer is build after the
          TAO_ReplicationManagerLib.

Fri Jan  9 11:01:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Fixed compile problem in BCB build

Thu Jan  8 22:30:13 2004  Frank Hunleth  <frank@hunleth.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:

          Changed references to ACE_MAX_DGRAM_SIZE to MIOP_MAX_DGRAM_SIZE.
          Thanks to Proum Chauk-Mean <Chauk-Mean.Proum@fr.thalesgroup.com>
          for pointing this inconsistency out.

          Also, moved a MIOP packet segmentation helper class into its own
          file.

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Message_Block_Data_Iterator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Message_Block_Data_Iterator.h:

          Segmentation code from UIPMC_Transport.cpp.

        * orbsvcs/orbsvcs/Makefile.PortableGroup:
        * orbsvcs/orbsvcs/PortableGroup.bor:
        * orbsvcs/orbsvcs/PortableGroup.dsp:
        * orbsvcs/orbsvcs/PortableGroup_Static.dsp:

          Added UIPMC_Message_Block_Data_Iterator to the build lists.

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:

          Added more information to the log messages and removed use of
          deprecated multicast socket API.

        * orbsvcs/tests/Miop/McastHello/McastHello.cpp:
        * orbsvcs/tests/Miop/McastHello/McastHello.h:
        * orbsvcs/tests/Miop/McastHello/Test.idl:
        * orbsvcs/tests/Miop/McastHello/client.cpp:
        * orbsvcs/tests/Miop/McastHello/server.cpp:

          Added code to verify that the largest allowable MIOP packets can
          also be sent and received.

Thu Jan  8 20:45:01 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_8_and_10/icp.cpp:
          With BCB use rand else use lrand48 like it was.

Thu Jan  8 20:30:33 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_8_and_10/icp.cpp:
          Fixed compile error in BCB build.

Thu Jan  8 20:09:16 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:
          Made these files compiling with BCB, thanks to Bala for helping with
          this. Let us just see what other compilers find of the solution.

Thu Jan  8 19:06:33 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerLib_export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Thu Jan  8 19:03:16 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ORB_Utils_export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Thu Jan  8 19:00:49 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.{h,cpp,inl}:
          Moved the inline files from the header to a new .inl file and include
          that file in the header and implementation file. Also use ACE_INLINE
          instead of the c++ inline. Reordered the methods to solve Tru64
          warnings.

Thu Jan  8 18:37:56 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simple/time-date/Alt_Resource_Factory.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static and dynamic libraries.

        * examples/Simple/time-date/Simple_time_date.mpc:
          Pass idl flags for generating the export stuff

Thu Jan  8 17:52:38 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/Utils/ftrtevent_export.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Thu Jan  8 11:11:48 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:

          Removed an unnecessary 'const' qualifier in the body of the
          Any inserting operator for arrays that was causing a warning
          with Tru64. Thanks to Johnny Willemsen <jwillemsen@remedy.nl>
          for reporting the problem.

Thu Jan  8 17:11:33 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/ftrt_clientorb_export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Thu Jan  8 11:03:13 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:

          Fixed a warning due to wrong macro usage.

Thu Jan  8 16:46:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/tao_idl.mpc:
          Added staticflags += TAO_AS_STATIC_LIBS to the TAO_IDL_EXE project
          to fix link errors in the MSVC6 Static build

Thu Jan  8 07:44:14 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * tao/BiDir_GIOP/BiDir_GIOP.mpc:
        * tao/Domain/Domain.mpc:
        * tao/DynamicAny/DynamicAny.mpc:
        * tao/DynamicInterface/DynamicInterface.mpc:
        * tao/IFR_Client/IFR_Client.mpc:
        * tao/IORInterceptor/IORInterceptor.mpc:
        * tao/IORManipulation/IORManipulation.mpc:
        * tao/IORTable/IORTable.mpc:
        * tao/Messaging/Messaging.mpc:
        * tao/ObjRefTemplate/ObjRefTemplate.mpc:
        * tao/PortableServer/PortableServer.mpc:
        * tao/RTCORBA/RTCORBA.mpc:
        * tao/RTPortableServer/RTPortableServer.mpc:
        * tao/RTScheduling/RTScheduler.mpc:
        * tao/SmartProxies/SmartProxies.mpc:
        * tao/Strategies/Strategies.mpc:
        * tao/TypeCodeFactory/TypeCodeFactory.mpc:
        * tao/Utils/Utils.mpc:
        * tao/Valuetype/Valuetype.mpc:
        * tao/tao.mpc:

          Removed the include_dir setting.  This is determined automatically
          in the Borland template.

Wed Jan  7 17:17:21 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp:

          Fixed a const cast conversion warning.

Wed Jan  7 13:52:13 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosLifeCycle.idl:
        * orbsvcs/orbsvcs/RtecEventChannelAdmin.idl:

          Fixed name redefinition bugs and recoded usage of deprecated
          anonymous sequences.

Wed Jan  7 13:30:28 2004  Chad Elliott  <elliott_c@ociweb.com>

        * utils/wxNamingViewer/wxNamingViewer.mpc:

          Added an exename to ensure that an executable is built and changed
          the inheritance list to correctly use namingexe instead of taoexe
          and naming.

Wed Jan  7 19:02:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORB_export.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORB_export.h
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Wed Jan  7 18:57:54 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ftrtec_export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Wed Jan  7 18:55:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/ifr_service_export.h
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Wed Jan  7 18:53:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTScheduling/rtscheduler_export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Wed Jan  7 18:48:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Utils/utils_export.h:
          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Wed Jan  7 12:38:42 2004  Brian Mendel  <brian.r.mendel@boeing.com>

        * orbsvcs/orbsvcs/Event/rtkokyu_event_export.h:

          Added check for TAO_AS_STATIC_LIBS for setting the export flags for
          proper building of static libraries.

Wed Jan  7 12:16:15 2004  Chad Elliott  <elliott_c@ociweb.com>

        * tao/tao.mpc:

          Added taodefaults to the inheritance list to get the default
          values that used to be coming from the tao_output base project.

Wed Jan  7 11:43:14 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/tao.mpc:

          Added Arg_Traits_T.h so it will get included in MSVC project
          files, even though it has no corresponding .cpp file.

Wed Jan  7 10:50:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_interface.cpp:

          Fixed internal handling of an AST node's version string, to avoid
          string compare errors with a null string, and to correctly
          diagnose errors resulting from an attempt to reset the version
          after it has been set by '#pragma version' or by 'typeid'.

Wed Jan  7 15:35:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/Policy/Smart_Proxies_Policy.mpc:
          Client needs portableserver

Wed Jan  7 13:00:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit.mpc:
          When usign gnuace generate LDLIBS += $(MATHLIB) at the place of
          the local marker. This test uses sqrt and some Unix versions
          then need to link their mathlib.

        * tests/Smart_Proxies/Policy/Smart_Proxies_Policy.mpc:
          Use taoserver and taoclient as base project so that exenames are
          set to the names the run_test.pl expects

Tue Jan  6 20:43:53 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Added hash table to match #pragma prefix directives with
          file names. This table is used to manage the prefix associated
          with the root scope. Using preprocessor file directives, as
          was done previously, is not sufficient. This change enables
          the calculation of the repository id, which contains the prefix,
          to be done sooner, at AST node creation time, since the root
          prefix is updated with each file change and with each prefix
          directive. This fix closes [BUGID:1687]. Thanks to Terry Ware
          <terry.ware@dc.alphatech.com> for reporting it.

Tue Jan  6 16:36:27 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Two_Objects/run_test.pl:

          Reduced the timeout and the number of iterations.

Tue Jan  6 15:03:13 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * tao/CONV_FRAME.pidl:
        * tao/Policy.pidl:
        * tao/UShortSeq.pidl:
        * tao/orb.idl:
        * tao/Messaging/Messaging_No_Impl.pidl:
        * tao/RTPortableServer/RTPortableServer.pidl:

          Fixed name redefinition bugs and recoded usage of deprecated
          anonymous sequences.

Tue Jan  6 12:04:18 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Strategies/SCIOP_Factory.cpp:

          SCIOP requires explicit endpoint specification. It shouldn't get
          loaded automatically as it is getting done now.

        * tao/Object.pidl:

          Another legacy file that is getting removed.

Tue Jan  6 11:14:57 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IFR_Client/Interface.pidl:

          Removed this file form the repo since it is not used and
          woefully out of date.

Tue Jan  6 11:13:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Messaging/Messaging.pidl:

          Removed the #ifdef of NO_VALUE, since that condition is totally
          unnecessary now.

Mon Jan  5 19:09:41 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/default_resource.cpp:

          Used a different constructor which has an option for restarting
          the reactor event loop when EINTR occurs. In TAO, we pass a
          non-0 value to restart the reactor event loop if EINTR
          occurs. Thanks to Markus Stenberg
          <markus.stenberg@conformiq.com> for motivating this. This fixes
          [BUGID 1649].

Mon Jan  5 18:37:22 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FT_App/FT_App.mpc:

          Cosmetic fix.

Mon Jan  5 15:33:33 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/Policy/Makefile:

          Added another library for linking.

Mon Jan  5 14:14:25 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:

          Applied patches from Dale Wilson for warnings in  g++ builds.

Mon Jan  5 13:54:09 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/Notify/ThreadPool/Notify_ThreadPool.mpc:

          Set the executable name for each project and added naming and
          rtportableserver to the Supplier inheritance list.

        * tests/Servant_To_Reference_Test/Servant_to_Reference.mpc:

          Fixed a typo that caused link errors on Windows.

Mon Jan  5 10:21:07 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/On_Demand/Makefile:

          Fixed the dependencies in the above Makefile.

Mon Jan 05 00:52:23 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.dsp:

          Fixed the release configurations by adding messaging
          library. Looks like they have been busted recently.

Mon Jan 05 00:24:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/IOGR/Manager.dsp:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.dsp:

          Fixed the release configurations by adding messaging
          library. Looks like they have been busted recently.

Sun Jan  4 23:08:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1568_Regression/server.dsp:
        * tests/Bug_1568_Regression/client.dsp:
        * tests/Bug_1670_Regression/server.dsp:
        * tests/Bug_1670_Regression/client.dsp:

          Fixed the release configurations to compile and link cleanly.

Sun Jan  4 22:56:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAOACE.dsw:

          Added a dependency for AV.

        * orbsvcs/orbsvcs/FTClientORB.dsp:
        * orbsvcs/orbsvcs/FTServerORB.dsp:

          Added Messaging library to be linked in for release builds. This
          is crazy, but that is what the daily builds want. Grrr..

Sun Jan  4 20:17:07 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/Collocation/Makefile.main:

          Added the smart proxy library to the link line.

Sun Jan 4 16:04:03 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Utils/Server_Main.cpp:

          Another wrong macros usage problem.

Sun Jan 4 16:01:03 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FT_App/FT_App.mpc:

          Prevented a bunch of compilations by making exceptions=1 a
          requirement. There is no scope or hope for this to be fixed in
          the next day or two. Things are too borken in the CPP files,
          esepcially there are some macros that have been used that are
          broken for exceptions=0. x.4 will have this example only
          compilable with exceptions=1.

        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:

          Attempt to fix some of the macro usage problems. Please see
          above.

Sun Jan  4 09:55:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
          Added missing type of inheritence from base class. Fixes Tru64
          warning.

Sun Jan  4 09:23:56 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Notify/Lanes/Notify_Lanes.mpc:
          Supplier needs naming

Sun Jan  4 08:24:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.bor:
          Fixed this borland makefile for static build

Sat Jan  3 23:56:03 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:

          The last checkin actually broke g++ builds. Slightly corrected
          the fix by calling the cast operator so that it works in both
          the compilers.

Sat Jan  3 11:23:51 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/Collocation/Collocation.dsp:

          Fixed the dsp file for the debug configuration.

Sat Jan  3 11:00:27 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:

          Fixed compile errors with Borland. Thanks to Johnny for
          reporting them.

Sat Jan  3 11:55:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/Collocation/Coll_Test_Stubs.bor:
        * tests/Smart_Proxies/Collocation/Diamond.bor:
          Fixed these BCB makefiles.

Fri Jan  2 23:22:14 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        This fix should have gone in long time back. Since this is
        non-intrusive and needed by a sponsor it was decided to checkin.

        * tao/ORB_Core.cpp:

          Added a command line option -ORBDisableRTCollocation. This is
          useful for applications that would like to disable RT
          collocation with RTORB and use the default collocation features
          instead. Most notably this is being added for Boeing.

        * tao/params.cpp:
        * tao/params.h:
        * tao/params.i:

          Added a new boolean variable to the class, together with
          accessors and mutators. The new boolean caches the value of the
          above option passed to the ORB by the application.

        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:

          Do a check before setting the collocation resolver name and
          intializing the service configurator with the new directive.

Fri Jan  2 14:50:38 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/Collocation/Coll_Tester.cpp:
        * tests/Smart_Proxies/Collocation/Smart_Proxy_Impl.h:

          Cosmetic fixes!

        * tests/Smart_Proxies/Collocation/Makefile.Coll_Test_Stubs:
        * tests/Smart_Proxies/Collocation/Makefile.Diamond:
        * tests/Smart_Proxies/Collocation/Makefile.main:

          Fixed the makefiles so that they can build properly in our daily
          builds.

Fri Jan  2 14:14:03 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Equal_To.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Null_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:

          Added #include for portablegroup_export.h.  Since one of the
          CosLoadBalancing idl files includes PortableGroup.idl, the
          generated PortableGroupC.h and PortableGroupS.h may or may not
          have #include "portablegroup_export.h" in them or not.  So, we
          don't rely on that and explicitly include it in these header
          files.

Fri Jan  2 14:07:21 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV.dsp:
        * orbsvcs/orbsvcs/AV_Static.dsp:

          Changed the md5c.c to md5c.cpp.

Fri Jan 02 13:09:19 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/Collocation/Collocation.dsp:
        * tests/Smart_Proxies/Collocation/Smart_Proxies.dsp:

          Fixed the release and debug build configurations.

Fri Jan  2 12:39:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.av:

          Updated dependancies. Moved a 'C' source to the CPP source list
          since it was decided to rname a C file as a CPP file.

Fri Jan  2 11:56:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Makefile:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Makefile.bor:

          Added a new sub-directory Manage_Object_Group to be compiled.

Fri Jan  2 11:37:09 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/LB_server.cpp:

          Made changes to fix the CannotMeetCriteria exception being
          thrown in some builds.

Fri Jan  2 10:00:48 2004  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV.mpc:

          Changed md5c.c to md5c.cpp and removed a duplicate md5c.h entry in
          the Header_Files section.

        * orbsvcs/orbsvcs/AV/md5c.c:

          Renamed this file to md5c.cpp to avoid build problems for some
          64-bit UNIX platforms.

Fri Jan  2 00:59:33 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        The following changes work around a problem introduced by "magic"
        static constructors in the TAO PortableServer headers where
        dynamic loading/unloading of the ORB failed.  TAO's singleton
        manager must be explicitly initialized to avoid registering itself
        with the ACE_Object_Manager in the DLL ORB case.  The static
        constructors in the PortableServer library were causing the
        TAO_Singleton_Manager to be implicitly initialized.  In that case,
        the TAO_Singleton_Manager will register itself with the
        ACE_Object_Manager, thus preventing DLL ORB loading/unloading from
        from functioning properly.

        * examples/Simple/time-date/Time_Date.h:
        * examples/Simple/time-date/Time_Date.cpp:

          Removed all dependencies on the TAO_ORB_Manager.  It implicitly
          introduces the static "magic" constructors that prevent DLL ORB
          loading/unloading from functioning properly.

        * examples/Simple/time-date/Time_Date_Client_i.h:
        * examples/Simple/time-date/client.cpp:

          Nuked trailing whitespace.

        * examples/Simple/time-date/Time_Date_i.h (Time_Date_i):

          Reference count the servant to improve memory management.

        * examples/Simple/time-date/Time_Date_i.cpp:

          Removed no-op constructor and destructor.  The compiler
          generated versions satisfy our needs.

        * examples/Simple/time-date/Makefile (server):

          No need to link "../Simple_util.o" object file in the server
          binary.

          (LDLIBS, ACE_SHLIBS, client):

          Explicitly link CosNaming related libraries only to client
          binary.  The server and libTime_Date binaries do not depend on
          the CosNaming related libraries.

        * examples/Simple/time-date/Simple_time_date.mpc:
        * examples/Simple/time-date/client.bor:
        * examples/Simple/time-date/server.bor:
        * examples/Simple/time-date/time_date.bor:

          Likewise.

Fri Jan  2 08:38:19 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/Collocation/Coll_Test_Stubs.bor:
        * tests/Smart_Proxies/Collocation/Collocation.bor:
        * tests/Smart_Proxies/Collocation/Diamond.bor:
          Updated these BCB makefiles

Fri Jan  2 08:30:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Utils/Server_Main.cpp:
          Fixed emulated exception usage. This is one of the problems I see
          in the FT_App orbsvcs tests, but there are several more

Fri Jan  2 08:20:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/RtEC/IIOPGateway/Supplier.cpp:
          Added include of ace/OS_NS_unistd.h to get ACE_OS::sleep

Fri Jan  2 08:17:33 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simple/time-date/Time_Date.cpp:
          Only set defines when they are not set yet.

Fri Jan  2 08:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/Collocation/Coll_Tester.cpp:
          Fixed warnings in gnu builds.

Thu Jan  1 21:28:35 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO-INSTALL.html:

          Added notes and observations about VC++ 7.1 in the install
          file. Thanks to Valery Salamakha <ccapstan@bigpond.net.au>.

Thu Jan 01 20:10:47 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FTORB_Utils.dsp:
        * orbsvcs/orbsvcs/PortableGroup.dsp:

          Fixed the release version of the project files.

Thu Jan  1 17:07:09 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Security/Secure_Inovcation/Foo_i.h:
        * orbsvcs/tests/Security/Secure_Inovcation/server.cpp:

          Fixed a memory managemnt problem with servants.

Thu Jan  1 16:42:12 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/EC_MT_MCast/MCast.cpp:

          Tested and applied a patch from Johnny Willemsen for the crash
          of this test in the daily builds.

Thu Jan  1 22:32:14 UTC 2004  Don Hinton  <dhinton@dresystems.com>

        * rules.tao.GNU:
          Changed default for security to =1 so that libTAO_Security will
          be built by default.

Thu Jan  1 20:07:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/Collocation/Smart_Proxies_Collocation.mpc:
          The Test project needs strategies

        * tests/Smart_Proxies/Collocation/Collocation.bor:
          Added strategies library

Thu Jan  1 13:58:35 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:

          Fixed a problem with scoping the DefaultValueRefcountBase. This
          showed up as a problem with Borland. Thanks to Johnny for
          reporting the problem.

Thu Jan  1 13:39:42 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/Collocation/Makefile.Coll_Test_Stubs:
        * tests/Smart_Proxies/Collocation/Makefile.Diamond:
        * tests/Smart_Proxies/Collocation/Makefile.main:

          Fixed some of the nagging problems.

        * tests/Smart_Proxies/Collocation/Smart_Proxy_Impl.cpp:

          Fixed a compile error in Borland builds. Thanks to Johnny for
          reporting the problem.

Thu Jan  1 19:07:41 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Makefile.bor:
          Added Abstract_Interface

Thu Jan  1 18:50:45 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/Makefile.bor:
          Added collocation directory

Thu Jan  1 17:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Sequence_Latency/DII/DII.mpc:
          Added new MPC file for this performance test

Thu Jan  1 17:23:44 UTC 2004  Don Hinton  <dhinton@dresystems.com>

        * Makefile:
          Added CIAO directory to list of directories to be built.

        * rules.tao.GNU:
        * orbsvcs/orbsvcs/Makefile:
          Added new variable, security, that defaults =0, and can be set
          =1 to build libTAO_Security.  This allows you to build projects
          that depend on libTAO_Security, but don't depend on
          libTAO_SSLIOP or ssl.

        * tests/Smart_Proxies/Collocation/Makefile.main:
          Changed -lDiamond to -lCollocation_Diamond in LDLIBS.

Thu Jan  1 17:25:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FTORB_Utils.bor:
          No need to link with portablegroup

        * orbsvcs/orbsvcs/Makefile.bor:
          Moved portablegroup before the ft projects.

Thu Jan  1 16:35:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1670_Regression/Bug_1670_Regression.mpc:
          Set the exename for the client to client, so that it matches the
          perl script to run this test.

Thu Jan  1 16:33:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1568_Regression/Bug_1568_Regression.mpc:
          Set the exename for the client to client, so that it matches the
          perl script to run this test.

Thu Jan  1 15:56:09 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/FP_SchedulingC.{h,cpp}:
        * examples/RTScheduling/MIF_SchedulingC.{h,cpp}:
          Removed not needed ; after c++ namespace closure.

Thu Jan  1 15:51:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_1334_Regression/test.mpc:
        * tests/Portable_Interceptors/Bug_1559/Bug_1559.mpc:
        * tests/OBV/Collocated/Forward/OBV_Forward.mpc:
          Removed not needed libpaths

        * tests/Bug_1330_Regression/Bug_1330_Regression.mpc:
          Base the server on iortable instead of adding this lib by hand

        * tests/Bug_1627_Regression/test.mpc:
          Base the server on iortable instead of adding this lib by hand and
          removed not needed libpaths

        * tests/OBV/Supports/Supports_Test.mpc:
          Base the server on strategies instead of adding this lib by hand and
          removed not needed libpaths

Thu Jan  1 09:40:04 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Smart_Proxies/Makefile:

          Added new directories into theMakefile.

        * tests/Smart_Proxies/Collocation/Coll_Tester.h:
        * tests/Smart_Proxies/Collocation/Diamond_i.h:

          Fixed warnings with g++. This is an indication these files have
          never been compiled with g++.

        * tests/Smart_Proxies/Collocation/Makefile:
        * tests/Smart_Proxies/Collocation/Makefile.Coll_Test_Stubs:
        * tests/Smart_Proxies/Collocation/Makefile.Diamond:
        * tests/Smart_Proxies/Collocation/Makefile.main:

          New makefiles for building these directories.

        * tests/Smart_Proxies/Collocation/main.cpp:
        * tests/Smart_Proxies/Collocation/svc.conf:

          Cosmetic fixes.

Thu Jan  1 15:40:04 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DII_ClientRequestInfo.{h,cpp}:
          Removed these files, not needed anymore

        * tao/DynamicInterface/TAO_DynamicInterface_Static.dsp:
          Removed DII_ClientRequestInfo files

Thu Jan  1 15:30:43 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Domain/TAO_Domain_Static.dsp:
        * tao/DynamicInterface/TAO_DynamicInterface_Static.dsp:
        * tao/IFR_Client/TAO_IFR_Client_Static.dsp:
        * tao/IORInterceptor/TAO_IORInterceptor_Static.dsp:
        * tao/ObjRefTemplate/TAO_ObjRefTemplate_Static.dsp:
        * tao/RTPortableServer/TAO_RTPortableServer_Static.dsp:
        * tao/SmartProxies/SmartProxies_Static.dsp:
        * tao/Valuetype/TAO_Valuetype_Static.dsp:
        * orbsvcs/orbsvcs/AV_Static.dsp:
        * orbsvcs/orbsvcs/CosConcurrency_Static.dsp:
        * orbsvcs/orbsvcs/CosEvent_Static.dsp:
        * orbsvcs/orbsvcs/CosLifeCycle_Static.dsp:
        * orbsvcs/orbsvcs/CosLoadBalancing_Static.dsp:
        * orbsvcs/orbsvcs/CosNaming_Static.dsp:
        * orbsvcs/orbsvcs/CosProperty_Static.dsp:
        * orbsvcs/orbsvcs/CosTime_Static.dsp:
        * orbsvcs/orbsvcs/CosTrading_Static.dsp:
        * orbsvcs/orbsvcs/DsLogAdmin_Static.dsp:
        * orbsvcs/orbsvcs/PortableGroup_Static.dsp:
        * orbsvcs/orbsvcs/RTCORBAEvent_Static.dsp:
        * orbsvcs/orbsvcs/RTEvent_Static.dsp:
        * orbsvcs/orbsvcs/RTKokyuEvent_Static.dsp:
        * orbsvcs/orbsvcs/RTOLDEvent_Static.dsp:
        * orbsvcs/orbsvcs/RTSched_Static.dsp:
        * orbsvcs/orbsvcs/RTSchedEvent_Static.dsp:
        * orbsvcs/orbsvcs/Security_Static.dsp:
        * orbsvcs/orbsvcs/SSLIOP_Static.dsp:
        * orbsvcs/orbsvcs/Svc_Utils_Static.dsp:
          Enabled rtti

Thu Jan  1 15:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simple/time-date/Simple_time_date.mpc:
          Removed idl_flags, they are not set in the original project files and
          cause problems in the VC71 build

Thu Jan  1 08:49:18 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          Use flat_name () instead of local_name () while generating code
          for create_proxy. Thanks to Christoph for reminding me to do
          this.

Thu Jan  1 14:47:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.h:
        * orbsvcs/orbsvcs/AV/Flows_T.h:

Thu Jan  1 00:26:12 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Sched/DynSched.cpp:

          #included ace/Null_Mutex.h to fix a compile error on Solaris.

Thu Jan  1 00:10:35 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableInterceptorC.h:

          Some handcrafting to prevent VC++ from crying hoarse. Thanks to
          Johnny for pointing it out.

        * tao/diffs/PortableInterceptor.diff:

          Updated the diffs.

Local Variables:
add-log-time-format: current-time-string
End:
