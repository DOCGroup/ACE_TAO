##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_ROOT = $(top_srcdir)


## Makefile.FT_ReplicationManager_Lib.am

if BUILD_ACE_UUID
if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if BUILD_INTERCEPTORS
if !BUILD_ACE_FOR_TAO

noinst_LTLIBRARIES = libTAO_ReplicationManagerLib.la

libTAO_ReplicationManagerLib_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -DTAO_HAS_TYPED_EVENT_CHANNEL \
  -DTAO_REPLICATIONMANAGERLIB_BUILD_DLL

libTAO_ReplicationManagerLib_la_SOURCES = \
  FT_DefaultFaultAnalyzer.cpp \
  FT_FaultAnalyzer.cpp \
  FT_FaultConsumer.cpp \
  FT_FaultEventDescriptor.cpp

noinst_HEADERS = \
  FT_DefaultFaultAnalyzer.h \
  FT_FaultAnalyzer.h \
  FT_FaultConsumer.h \
  FT_FaultEventDescriptor.h

endif !BUILD_ACE_FOR_TAO
endif BUILD_INTERCEPTORS
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING
endif BUILD_ACE_UUID

## Makefile.FT_ReplicationManager.am

if BUILD_ACE_UUID
if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if BUILD_INTERCEPTORS
if !BUILD_ACE_FOR_TAO

bin_PROGRAMS = FT_ReplicationManager

FT_ReplicationManager_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -DTAO_HAS_TYPED_EVENT_CHANNEL

FT_ReplicationManager_SOURCES = \
  FT_Property_Validator.cpp \
  FT_ReplicationManager.cpp \
  FT_ReplicationManagerFaultAnalyzer.cpp \
  FT_ReplicationManager_Main.cpp \
  FT_Property_Validator.h \
  FT_ReplicationManager.h \
  FT_ReplicationManagerFaultAnalyzer.h

FT_ReplicationManager_LDADD = \
  libTAO_ReplicationManagerLib.la \
  $(TAO_BUILDDIR)/tao/libTAO_IORTable.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNotification_Skel.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosEvent_Skel.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_FaultTolerance.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_FT_ServerORB.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI_Server.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_FT_ClientORB.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_FTORB_Utils.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_PortableGroup.la \
  $(TAO_BUILDDIR)/tao/libTAO_IORManip.la \
  $(TAO_BUILDDIR)/tao/libTAO_Messaging.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_Valuetype.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNotification.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosEvent.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNaming.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_ACE_FOR_TAO
endif BUILD_INTERCEPTORS
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING
endif BUILD_ACE_UUID

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
