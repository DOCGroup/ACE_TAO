Sun Apr  2 18:56:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp
        * tao/BooleanSeqC.h
        * tao/CONV_FRAMEC.h
        * tao/CharSeqC.h
        * tao/DomainC.h
        * tao/DoubleSeqC.h
        * tao/FloatSeqC.h
        * tao/IIOPC.h
        * tao/IIOP_EndpointsC.h
        * tao/IOP_IORC.h
        * tao/LongDoubleSeqC.h
        * tao/LongLongSeqC.h
        * tao/LongSeqC.h
        * tao/Messaging_PolicyValueC.h
        * tao/ORB.h
        * tao/ObjectIdListC.h
        * tao/Object_KeyC.h
        * tao/OctetSeqC.h
        * tao/Policy_ForwardC.h
        * tao/Seq_Out_T.h
        * tao/Seq_Out_T.inl
        * tao/ServicesC.h
        * tao/ShortSeqC.h
        * tao/StringSeqC.h
        * tao/ULongLongSeqC.h
        * tao/ULongSeqC.h
        * tao/UShortSeqC.h
        * tao/WCharSeqC.h
        * tao/WStringSeqC.h
        * tao/AnyTypeCode/AnySeqC.h
        * tao/AnyTypeCode/DynamicC.h
        * tao/DynamicAny/DynamicAnyC.h
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_ComponentsC.h
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/IORManipulation/IORC.h
        * tao/ImR_Client/ImplRepoC.h
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h
        * tao/PortableServer/PortableServerC.h
        * tao/RTCORBA/RTCORBAC.h
        * tao/RTScheduling/RTSchedulerC.h
        * tao/Strategies/sciop_endpointsC.h
        * tao/Strategies/uiop_endpointsC.h
          Simplified TAO_Seq_Out_T to just use one template argument. Updated
          the IDL compiler for this. Also use false for the release argument
          of generated sequence constructors and add an argument to
          _tao_encode/_tao_decode when generated in a header file to help
          doxygen.

Sat Apr  1 18:56:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/VarOut_T.{h,inl}:
        * tao/Pseudo_VarOut_T.{h,inl}:
        * tao/Objref_VarOut_T.{h,cpp}:
        * tao/Seq_Out_T.{h,inl}:
        * tao/Seq_Var_T.{h,inl}:
        * tao/Array_VarOut_T.{h,inl}:
        * tao/Valuetype/Value_VarOut_T.{h,inl}:
          Removed the TAO specific ptr accessor, just use the spec defined
          methods. This is only for the _var classes, the _ptr method is in
          the spec for the _out classes. This is partly reverted for the types
          where we do need them in the core TAO code itself.

        * TAO_Objref_Out_T.{h,inl}:
          Assinging _var to _out is not allowed according to the spec

        * tao/Messaging/*:
          Removed old AMI mapping. Fixes partly bugzilla bug 2273, need to
          update the IDL compiler yet

        * tao/Exception.h:
          Moved constructors, assignment operator and copy constructor to
          protected now vc6 has been dropped. Also moved
          create_system_exception from TAO_Exceptions class to TAO namespace

        * tao/Messaging/Messaging.cpp:
        * tao/Sync_Invocation.cpp:
        * tao/SystemException.cpp:
          Updated because of the create_system_exception move

        * tao/String_Manager_T.h:
          Renamed String_Manager to String_Manager_T, this way we can have
          TAO::String_Manager and TAO::WString_Manager. These replace
          TAO_String_Manager and TAO_WString_Manager

        * CIAO/tools/Config_Handlers/DnC_Dump.cpp
        * CIAO/tools/Config_Handlers/DnC_Dump.h
        * TAO_IDL/be/be_visitor_array/array.cpp
        * TAO_IDL/be/be_visitor_field/field_ch.cpp
        * orbsvcs/PSS/PSDL_Exception_Visitor.cpp
        * orbsvcs/PSS/PSDL_Node.h
        * orbsvcs/PSS/PSDL_Struct_Visitor.cpp
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.h
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.h
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.i
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.h
        * tao/CORBA_String.h
        * tao/IIOPC.h
        * tao/IIOP_EndpointsC.h
        * tao/IOP_IORC.h
        * tao/String_Manager_T.h
        * tao/String_Traits_Base_T.h
        * tao/Tagged_Profile.h
        * tao/DynamicAny/DynamicAnyC.h
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_ComponentsC.h
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/ImR_Client/ImplRepoC.h
        * tao/PI/ORBInitInfoC.h
        * tao/Strategies/sciop_endpointsC.h
        * tao/Strategies/uiop_endpointsC.h
          Updated all these files because of TAO::String_Manager and
          TAO::WString_Manager introduction

        * tests/Sequence_Unit_Tests/mock_reference.cpp:
        * tests/Sequence_Unit_Tests/mock_reference.hpp:
          Added counter to count number of marshal calls

        * tests/Sequence_Unit_Tests/bounded_sequence_cdr_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_sequence_cdr_ut.cpp:
          Check the right counter, should be marshal.

        * tao/PI/ClientRequestDetails.cpp:
        * tao/PI_Server/ServerRequestDetails.cpp:
          Added missing duplicate call

        * TAO_IDL/be/be_interface.cpp
        * TAO_IDL/be/be_visitor_component/component_cs.cpp
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp
        * TAO_IDL/be/be_visitor_root/root.cpp
        * tao/CurrentC.cpp
        * tao/DomainC.cpp
        * tao/ORB_Core.cpp
        * tao/Object.cpp
        * tao/Object_Ref_Table.cpp
        * tao/PolicyC.cpp
        * tao/Pseudo_VarOut_T.cpp
        * tao/Pseudo_VarOut_T.inl
        * tao/TAOC.cpp
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp
        * tao/AnyTypeCode/Any_Basic_Impl.cpp
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp
        * tao/AnyTypeCode/Any_Impl.cpp
        * tao/AnyTypeCode/Any_Impl_T.cpp
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp
        * tao/AnyTypeCode/TypeCode.cpp
        * tao/AnyTypeCode/TypeCode.inl
        * tao/BiDir_GIOP/BiDirPolicyC.cpp
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.cpp
        * tao/CSD_Framework/CSD_FrameworkC.cpp
        * tao/CSD_Framework/CSD_POA.cpp
        * tao/CodecFactory/IOP_CodecC.cpp
        * tao/DynamicAny/DynamicAnyC.cpp
        * tao/DynamicInterface/Dynamic_Implementation.cpp
        * tao/DynamicInterface/ExceptionList.cpp
        * tao/DynamicInterface/Request.cpp
        * tao/DynamicInterface/Server_Request.cpp
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/IORInterceptor/IORInfoC.cpp
        * tao/IORInterceptor/IORInterceptorC.cpp
        * tao/IORManipulation/IORC.cpp
        * tao/IORManipulation/IORManipulation.cpp
        * tao/IORTable/IORTableC.cpp
        * tao/IORTable/Table_Adapter.cpp
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ServerObjectC.cpp
        * tao/Messaging/MessagingC.cpp
        * tao/Messaging/Messaging_No_ImplC.cpp
        * tao/Messaging/Messaging_RT_PolicyC.cpp
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp
        * tao/Messaging/PollableC.cpp
        * tao/Messaging/TAO_ExtC.cpp
        * tao/PI/ClientRequestInfoC.cpp
        * tao/PI/ClientRequestInterceptorC.cpp
        * tao/PI/InterceptorC.cpp
        * tao/PI/ORBInitInfo.cpp
        * tao/PI/ORBInitInfoC.cpp
        * tao/PI/ORBInitializerC.cpp
        * tao/PI/PICurrentC.cpp
        * tao/PI/PolicyFactoryC.cpp
        * tao/PI/PolicyFactory_Registry.cpp
        * tao/PI/ProcessingModePolicyC.cpp
        * tao/PI/RequestInfoC.cpp
        * tao/PI_Server/ServerRequestInfoC.cpp
        * tao/PI_Server/ServerRequestInterceptorC.cpp
        * tao/PortableServer/AdapterActivatorC.cpp
        * tao/PortableServer/IdAssignmentPolicyC.cpp
        * tao/PortableServer/IdUniquenessPolicyC.cpp
        * tao/PortableServer/ImplicitActivationPolicyC.cpp
        * tao/PortableServer/LifespanPolicyC.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/POAManager.cpp
        * tao/PortableServer/POAManagerC.cpp
        * tao/PortableServer/PS_CurrentC.cpp
        * tao/PortableServer/PortableServerC.cpp
        * tao/PortableServer/RequestProcessingPolicyC.cpp
        * tao/PortableServer/Root_POA.cpp
        * tao/PortableServer/ServantActivatorC.cpp
        * tao/PortableServer/ServantLocatorC.cpp
        * tao/PortableServer/ServantManagerC.cpp
        * tao/PortableServer/ServantRetentionPolicyC.cpp
        * tao/PortableServer/ThreadPolicyC.cpp
        * tao/RTCORBA/RTCORBAC.cpp
        * tao/RTPortableServer/RTPortableServerC.cpp
        * tao/RTScheduling/Current.cpp
        * tao/RTScheduling/RTSchedulerC.cpp
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp
        * tao/Utils/Server_Main.cpp
        * tao/Valuetype/AbstractBase.cpp:
          Use :: before ::CORBA

        * TAO_IDL/be/be_interface.cpp
        * tao/DomainC.cpp
        * tao/DomainC.inl
        * tao/GIOPC.h
        * tao/PolicyC.cpp
        * tao/PolicyC.h
        * tao/PolicyC.inl
        * tao/WrongTransactionC.cpp
        * tao/AnyTypeCode/Alias_TypeCode.inl
        * tao/AnyTypeCode/Alias_TypeCode_Static.inl
        * tao/AnyTypeCode/BoundsC.cpp
        * tao/AnyTypeCode/Empty_Param_TypeCode.inl
        * tao/AnyTypeCode/Enum_TypeCode.inl
        * tao/AnyTypeCode/Enum_TypeCode_Static.inl
        * tao/AnyTypeCode/Fixed_TypeCode.inl
        * tao/AnyTypeCode/Objref_TypeCode.inl
        * tao/AnyTypeCode/Objref_TypeCode_Static.inl
        * tao/AnyTypeCode/Recursive_Type_TypeCode.cpp
        * tao/AnyTypeCode/Sequence_TypeCode.inl
        * tao/AnyTypeCode/Sequence_TypeCode_Static.inl
        * tao/AnyTypeCode/String_TypeCode.inl
        * tao/AnyTypeCode/String_TypeCode_Static.inl
        * tao/AnyTypeCode/Struct_TypeCode.inl
        * tao/AnyTypeCode/Struct_TypeCode_Static.inl
        * tao/AnyTypeCode/Union_TypeCode.inl
        * tao/AnyTypeCode/Union_TypeCode_Static.inl
        * tao/AnyTypeCode/Value_TypeCode.inl
        * tao/AnyTypeCode/Value_TypeCode_Static.inl
        * tao/BiDir_GIOP/BiDir_Policy_i.cpp
        * tao/CodecFactory/IOP_CodecC.cpp
        * tao/Domain/DomainS.cpp
        * tao/DynamicAny/DynamicAnyC.cpp
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BaseC.inl
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_BasicC.inl
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ComponentsC.inl
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/IFR_Client/IFR_ExtendedC.inl
        * tao/IORManipulation/IORC.cpp
        * tao/IORTable/IORTableC.cpp
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ImplRepoC.inl
        * tao/ImR_Client/ServerObjectC.cpp
        * tao/ImR_Client/ServerObjectC.inl
        * tao/Messaging/Connection_Timeout_Policy_i.cpp
        * tao/Messaging/MessagingC.cpp
        * tao/Messaging/MessagingC.inl
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Messaging/PollableC.cpp
        * tao/PI/InvalidSlotC.cpp
        * tao/PI/ORBInitInfoC.cpp
        * tao/PI/PIForwardRequestC.cpp
        * tao/PortableServer/ForwardRequestC.cpp
        * tao/PortableServer/POAManagerC.cpp
        * tao/PortableServer/PS_CurrentC.cpp
        * tao/PortableServer/PortableServerC.cpp
        * tao/RTCORBA/RTCORBAC.cpp
        * tao/RTCORBA/RT_Policy_i.cpp
        * tao/RTScheduling/RTSchedulerC.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.inl
        * tao/Valuetype/StringValueC.inl
          Removed ACE_NESTED_CLASS

        * TAO_IDL/ast/ast_type.cpp
        * TAO_IDL/be/be_interface.cpp
        * TAO_IDL/be/be_visitor_component/component_ci.cpp
        * TAO_IDL/be/be_visitor_component/component_cs.cpp
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp
        * TAO_IDL/be/be_visitor_interface/interface_is.cpp
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp
        * TAO_IDL/be/be_visitor_operation/operation.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp
          Removed generation of ACE_NESTED_CLASS, just use A::B instead

        All changes below is the merge of the branch sequenceupdate to
        sequpdate2. This is the new sequence implementation for TAO.

        * tao/Array_VarOut_T.h:
          Only do an empty forward declaration of Array_Traits. This will
          make sure that we have to do each specialization explicitly, if
          we lack one, we get a compile error instead of this empty default
          one.

        * tao/Objref_VarOut_T.h:
          Only do an empty forward declaration of Objref_Traits. This will
          make sure that we have to do each specialization explicitly, if
          we lack one, we get a compile error instead of this empty default
          one.

        * tao/Basic_Types.h:
          Updated the string types, these are implemented by a template now.

        * tao/BooleanSeqC.{h,cpp}:
        * tao/CharSeqC.{h,cpp}:
        * tao/CONV_FRAMEC.{h,cpp}:
        * tao/CurrentC.{h,cpp}:
        * tao/DomainC.{h,cpp}:
        * tao/DoubleSeqC.{h,cpp}:
        * tao/FloatSeqC.{h,cpp}:
        * tao/WStringSeqC.{h,cpp}:
        * tao/LongSeqC.{h,cpp}:
        * tao/WCharSeqC.{h,cpp}:
        * tao/Object_KeyC.{h,cpp}:
        * tao/ObjectIdListC.{h,cpp}:
        * tao/IIOP_EndpointsC.{h,cpp}:
        * tao/LongLongSeqC.{h,cpp}:
        * tao/IIOPC.{h,cpp}:
        * tao/IOP_IORC.{h,cpp}:
        * tao/LongDoubleSeqC.{h,cpp}:
        * tao/Messaging_PolicyValueC.{h,cpp}:
        * tao/OctetSeqC.{h,cpp}:
        * tao/Policy_ForwardC.{h,cpp}:
        * tao/PolicyC.{h,cpp}:
        * tao/ServicesC.{h,cpp}:
        * tao/ShortSeqC.{h,cpp}:
        * tao/StringSeqC.{h,cpp}:
        * tao/TAOC.{h,cpp}:
        * tao/ULongLongSeqC.{h,cpp}:
        * tao/ULongSeqC.{h,cpp}:
        * tao/UShortSeqC.{h,cpp}:
        * tao/AnyTypeCode/AnySeqC.{h,cpp}:
        * tao/AnyTypeCode/DynamicC.{h,cpp}:
        * tao/DynamicAny/DynamicAnyC.{h,cpp}:
        * tao/IFR_Client/IFR_ExtendedC.{h,cpp}:
        * tao/IFR_Client/IFR_ComponentsC.{h,cpp}:
        * tao/IFR_Client/IFR_BasicC.{h,cpp}:
        * tao/IFR_Client/IFR_BaseC.{h,cpp}:
        * tao/ImR_Client/ImplRepoC.{h,cpp}:
        * tao/IORManipulation/IORC.{h,cpp}:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.{h,cpp}:
        * tao/PortableServer/PortableServerC.{h,cpp}:
        * tao/RTCORBA/RTCORBAC.{h,cpp}:
        * tao/RTScheduling/RTSchedulerC.{h,cpp}:
        * tao/Strategies/sciop_endpointsC.{h,cpp}:
        * tao/Strategies/uiop_endpointsC.{h,cpp}:
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.{h,cpp}:
          Updated all these files because of the changes to the sequence
          implementation. The base classes are changed including the way we
          marshal and demarshal sequences. The argument to the marshal method
          is also const.

        * tao/Bounded_Array_Allocation_Traits.h:
        * tao/Bounded_Reference_Allocation_Traits_T.h:
        * tao/Bounded_Value_Allocation_Traits_T.h:
          New allocation traits for bounded sequences

        * tao/Value_Traits_T.h:
          New value traits.

        * tao/Bounded_Array_Sequence_T.h:
          New template for Bounded Array Sequences

        * tao/Bounded_Basic_String_Sequence_T.h:
        * tao/Bounded_String_Sequence_T.h:
        * tao/Bounded_Wstring_Sequence_T.h:
          New template for bounded strings, derived are string and wstring
          bounded sequences

        * tao/Bounded_Object_Reference_Sequence_T.h:
          New template for bounded object reference sequences

          New allocation traits for bounded reference

        * tao/Bounded_Sequence_CDR_T.h:
          Template method for sequence marshal/demarshal

        * tao/corba.h:
          Updated includes, Managed_Types.h is replaced with
          String_Manager_T.h

        * tao/CORBA_String.{h,cpp,inl}:
          The CORBA::String_var/_out and CORBA::WString_var/_out are now
          implemented with the new TAO::String_var/_out template

        * tao/Generic_Sequence_T.h:
          New generic sequence template

        * tao/Managed_Types.{h,cpp,i}:
          Removed these files

        * tao/MProfile.cpp:
          Initialise pointers with 0 and fixed retrieval of a policy

        * tao/Object.{h,cpp}:
          Made the argument of the marshal method const

        * tao/operation_details.i:
          Changed the way we reset the service info

        * tao/ORB.h:
          Updated all typedefs in this file

        * tao/Policy_Set.{h,cpp.i}:
          Made the get_policy_by_index const and fixed the
          set_policy_overrides to work with the new sequences, as a result
          the workarounds could be removed

        * tao/Sequence_T.{cpp,i}:
          Removed these files

        * tao/Sequence_T.h:
          Include all new sequence template files, makes it easy for old apps
          to keep compiling

        * tao/String_Alloc.{h,cpp}:
          All string allocation methods

        * tao/VarOut_T.h:
          Removed THIS_OUT_TYPE typedef

        * tao/DynamicInterface/Request.h:
          Removed include of Sequence.h, not needed

        * tao/Profile.h:
          Updated typedef for TAO_opaque

        * tao/Object_Reference_Sequence_Element_T.h:
        * tao/Object_Reference_Traits_Base_T.h:
        * tao/Object_Reference_Traits_T.h:
        * tao/Range_Checking_T.h:
          New files

        * tao/Seq_Out_T.{h,inl}:
          Removed TAO_MngSeq_Out_T, not needed anymore

        * tao/Sequence.{h,cpp,i}:
          Removed

        * tao/Seq_Var_T.{h,cpp.inl}:
          Removed TAO_MngSeq_Var_T, not needed anymore

        * tao/String_Manager_T.h:
          TAO string manager as template, new file

        * tao/String_Sequence_Element_T.h:
          Element in a string sequence

        * tao/String_Traits_Base_T.h:
        * tao/String_Traits_T.h:
          String traits

        * tao/Unbounded_Array_Allocation_Traits_T.h
        * tao/Unbounded_Array_Sequence_T.h
        * tao/Unbounded_Basic_String_Sequence_T.h
        * tao/Unbounded_Object_Reference_Sequence_T.h
        * tao/Unbounded_Octet_Sequence_T.h
        * tao/Unbounded_Reference_Allocation_Traits_T.h
        * tao/Unbounded_Sequence_CDR_T.h
        * tao/Unbounded_String_Sequence_T.h
        * tao/Unbounded_Value_Allocation_Traits_T.h
        * tao/Unbounded_Value_Sequence_T.h
        * tao/Unbounded_Wstring_Sequence_T.h
          Unbounded sequence files

        * tao/diffs/Object_Key.diff:
          Updated

        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
          Removed temporary object usage

        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
          Updated for the fact that an object sequence now returns a _ptr
          on the subscript operators instead of the _var which wasn't
          confirming to the CORBA C++ mapping

        * tao/RTScheduling/Current.h:
          Updated IdType typedef

        * tao/Valuetype/Bounded_Valuetype_Allocation_Traits_T.h
        * tao/Valuetype/Bounded_Valuetype_Sequence_T.h
        * tao/Valuetype/Unbounded_Valuetype_Allocation_Traits_T.h
        * tao/Valuetype/Unbounded_Valuetype_Sequence_T.h
        * tao/Valuetype/Valuetype_Sequence_Element_T.h
        * tao/Valuetype/Valuetype_Traits_Base_T.h
        * tao/Valuetype/Valuetype_Traits_T.h
          New sequence implementated for valuetypes

        * tao/Valuetype/Sequence_T.{cpp,inl}:
          Removed

        * tao/Valuetype/Sequence_T.h:
          Just include the new files, easier for backward compatibility

        * tao/Valuetype/Value_VarOut_T.{h,cpp}:
          Just define an empty Value_Traits, make sure we get all
          specializations

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be_include/be_visitor_traits.h:
          Updated for new sequence implementation

        * examples/CSD_Strategy/ThreadPool4/ClientTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientTask.cpp:
        * examples/Load_Balancing/Identity_Client.cpp:
        * examples/Load_Balancing_persistent/Identity_Client.cpp:
        * examples/POA/NewPOA/NewPOA.cpp:
        * examples/POA/POA_BiDir/POA_BiDir.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_ClientEngine.cpp:
        * tests/DynAny_Test/test_dynsequence.cpp:
        * tests/Sequence_Unit_Tests/*:
        * tests/ORT/ServerRequestInterceptor.cpp:
        * tests/Param_Test/big_union.cpp:
        *
        tests/Portable_Interceptors/ForwardRequest/Client_ORBInitializer.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/orbsvcs/DsLogAdmin.idl:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.{cpp,i}:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.{h,cpp,i}
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.{h,cpp}
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/receiver.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/sender.cpp:
        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        *
        orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
          Updated for sequence implementation

        * tests/Sequence_Unit_Tests/*:
          Removed files that are now in the core TAO lib
