// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:154

#ifndef _TAO_IDL_ORIG_IFR_BASICC_H_
#define _TAO_IDL_ORIG_IFR_BASICC_H_

#include /**/ "ace/pre.h"


#include "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "ifr_client_export.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Environment.h"
#include "tao/Object.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"

#include "tao/IFR_Client/IFR_BaseC.h"
#include "tao/ParameterModeC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_IFR_Client_Export

#if defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// be\be_visitor_root/root_ch.cpp:62

namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}

// TAO_IDL - Generated from
// be\be_visitor_module/module_ch.cpp:48

namespace CORBA
{

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_PRIMITIVEDEF__VAR_OUT_CH_)
#define _CORBA_PRIMITIVEDEF__VAR_OUT_CH_

  class PrimitiveDef;
  typedef PrimitiveDef *PrimitiveDef_ptr;

  typedef
    TAO_Objref_Var_T<
        PrimitiveDef
      >
    PrimitiveDef_var;

  typedef
    TAO_Objref_Out_T<
        PrimitiveDef
      >
    PrimitiveDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_STRINGDEF__VAR_OUT_CH_)
#define _CORBA_STRINGDEF__VAR_OUT_CH_

  class StringDef;
  typedef StringDef *StringDef_ptr;

  typedef
    TAO_Objref_Var_T<
        StringDef
      >
    StringDef_var;

  typedef
    TAO_Objref_Out_T<
        StringDef
      >
    StringDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_SEQUENCEDEF__VAR_OUT_CH_)
#define _CORBA_SEQUENCEDEF__VAR_OUT_CH_

  class SequenceDef;
  typedef SequenceDef *SequenceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        SequenceDef
      >
    SequenceDef_var;

  typedef
    TAO_Objref_Out_T<
        SequenceDef
      >
    SequenceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_ARRAYDEF__VAR_OUT_CH_)
#define _CORBA_ARRAYDEF__VAR_OUT_CH_

  class ArrayDef;
  typedef ArrayDef *ArrayDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ArrayDef
      >
    ArrayDef_var;

  typedef
    TAO_Objref_Out_T<
        ArrayDef
      >
    ArrayDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_WSTRINGDEF__VAR_OUT_CH_)
#define _CORBA_WSTRINGDEF__VAR_OUT_CH_

  class WstringDef;
  typedef WstringDef *WstringDef_ptr;

  typedef
    TAO_Objref_Var_T<
        WstringDef
      >
    WstringDef_var;

  typedef
    TAO_Objref_Out_T<
        WstringDef
      >
    WstringDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_FIXEDDEF__VAR_OUT_CH_)
#define _CORBA_FIXEDDEF__VAR_OUT_CH_

  class FixedDef;
  typedef FixedDef *FixedDef_ptr;

  typedef
    TAO_Objref_Var_T<
        FixedDef
      >
    FixedDef_var;

  typedef
    TAO_Objref_Out_T<
        FixedDef
      >
    FixedDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_enum/enum_ch.cpp:57

  enum PrimitiveKind
  {
    pk_null,
    pk_void,
    pk_short,
    pk_long,
    pk_ushort,
    pk_ulong,
    pk_float,
    pk_double,
    pk_boolean,
    pk_char,
    pk_octet,
    pk_any,
    pk_TypeCode,
    pk_Principal,
    pk_string,
    pk_objref,
    pk_longlong,
    pk_ulonglong,
    pk_longdouble,
    pk_wchar,
    pk_wstring,
    pk_value_base
  };

  typedef PrimitiveKind &PrimitiveKind_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_PrimitiveKind;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_REPOSITORY__VAR_OUT_CH_)
#define _CORBA_REPOSITORY__VAR_OUT_CH_

  class Repository;
  typedef Repository *Repository_ptr;

  typedef
    TAO_Objref_Var_T<
        Repository
      >
    Repository_var;

  typedef
    TAO_Objref_Out_T<
        Repository
      >
    Repository_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_REPOSITORY_CH_)
#define _CORBA_REPOSITORY_CH_

  class TAO_IFR_Client_Export Repository
    : public virtual ::CORBA::Container
  {
  public:
    friend class TAO::Narrow_Utils<Repository>;
    typedef Repository_ptr _ptr_type;
    typedef Repository_var _var_type;

    // The static operations.
    static Repository_ptr _duplicate (Repository_ptr obj);

    static void _tao_release (Repository_ptr obj);

    static Repository_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static Repository_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static Repository_ptr _nil (void)
    {
      return static_cast<Repository_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::Contained_ptr lookup_id (
        const char * search_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::TypeCode_ptr get_canonical_typecode (
        ::CORBA::TypeCode_ptr tc
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::PrimitiveDef_ptr get_primitive (
        ::CORBA::PrimitiveKind kind
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::StringDef_ptr create_string (
        ::CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::WstringDef_ptr create_wstring (
        ::CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::SequenceDef_ptr create_sequence (
        ::CORBA::ULong bound,
        ::CORBA::IDLType_ptr element_type
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::ArrayDef_ptr create_array (
        ::CORBA::ULong length,
        ::CORBA::IDLType_ptr element_type
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::FixedDef_ptr create_fixed (
        ::CORBA::UShort digits,
        ::CORBA::Short scale
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Repository_Proxy_Broker_;

  protected:
    // Concrete interface only.
    Repository (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_Repository_setup_collocation (void);

    // Concrete non-local interface only.
    Repository (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    Repository (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~Repository (void);

  private:
    // Private and unimplemented for concrete interfaces.
    Repository (const Repository &);

    void operator= (const Repository &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_Repository;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_MODULEDEF__VAR_OUT_CH_)
#define _CORBA_MODULEDEF__VAR_OUT_CH_

  class ModuleDef;
  typedef ModuleDef *ModuleDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ModuleDef
      >
    ModuleDef_var;

  typedef
    TAO_Objref_Out_T<
        ModuleDef
      >
    ModuleDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_MODULEDEF_CH_)
#define _CORBA_MODULEDEF_CH_

  class TAO_IFR_Client_Export ModuleDef
    : public virtual ::CORBA::Container,
      public virtual ::CORBA::Contained
  {
  public:
    friend class TAO::Narrow_Utils<ModuleDef>;
    typedef ModuleDef_ptr _ptr_type;
    typedef ModuleDef_var _var_type;

    // The static operations.
    static ModuleDef_ptr _duplicate (ModuleDef_ptr obj);

    static void _tao_release (ModuleDef_ptr obj);

    static ModuleDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ModuleDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ModuleDef_ptr _nil (void)
    {
      return static_cast<ModuleDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ModuleDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    ModuleDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ModuleDef_setup_collocation (void);

    // Concrete non-local interface only.
    ModuleDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    ModuleDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~ModuleDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ModuleDef (const ModuleDef &);

    void operator= (const ModuleDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ModuleDef;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct ModuleDescription;

  typedef
    TAO_Var_Var_T<
        ModuleDescription
      >
    ModuleDescription_var;

  typedef
    TAO_Out_T<
        ModuleDescription,
        ModuleDescription_var
      >
    ModuleDescription_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:57

  struct TAO_IFR_Client_Export ModuleDescription
  {
    typedef ModuleDescription_var _var_type;

    static void _tao_any_destructor (void *);
    TAO::String_Manager name;
    TAO::String_Manager id;
    TAO::String_Manager defined_in;
    TAO::String_Manager version;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ModuleDescription;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_CONSTANTDEF__VAR_OUT_CH_)
#define _CORBA_CONSTANTDEF__VAR_OUT_CH_

  class ConstantDef;
  typedef ConstantDef *ConstantDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ConstantDef
      >
    ConstantDef_var;

  typedef
    TAO_Objref_Out_T<
        ConstantDef
      >
    ConstantDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_CONSTANTDEF_CH_)
#define _CORBA_CONSTANTDEF_CH_

  class TAO_IFR_Client_Export ConstantDef
    : public virtual ::CORBA::Contained
  {
  public:
    friend class TAO::Narrow_Utils<ConstantDef>;
    typedef ConstantDef_ptr _ptr_type;
    typedef ConstantDef_var _var_type;

    // The static operations.
    static ConstantDef_ptr _duplicate (ConstantDef_ptr obj);

    static void _tao_release (ConstantDef_ptr obj);

    static ConstantDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ConstantDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ConstantDef_ptr _nil (void)
    {
      return static_cast<ConstantDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::TypeCode_ptr type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IDLType_ptr type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void type_def (
        ::CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Any * value (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void value (
        const ::CORBA::Any & value
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ConstantDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    ConstantDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ConstantDef_setup_collocation (void);

    // Concrete non-local interface only.
    ConstantDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    ConstantDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~ConstantDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ConstantDef (const ConstantDef &);

    void operator= (const ConstantDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ConstantDef;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct ConstantDescription;

  typedef
    TAO_Var_Var_T<
        ConstantDescription
      >
    ConstantDescription_var;

  typedef
    TAO_Out_T<
        ConstantDescription,
        ConstantDescription_var
      >
    ConstantDescription_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:57

  struct TAO_IFR_Client_Export ConstantDescription
  {
    typedef ConstantDescription_var _var_type;

    static void _tao_any_destructor (void *);
    TAO::String_Manager name;
    TAO::String_Manager id;
    TAO::String_Manager defined_in;
    TAO::String_Manager version;
    CORBA::TypeCode_var type;
    CORBA::Any value;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ConstantDescription;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_STRUCTDEF__VAR_OUT_CH_)
#define _CORBA_STRUCTDEF__VAR_OUT_CH_

  class StructDef;
  typedef StructDef *StructDef_ptr;

  typedef
    TAO_Objref_Var_T<
        StructDef
      >
    StructDef_var;

  typedef
    TAO_Objref_Out_T<
        StructDef
      >
    StructDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_STRUCTDEF_CH_)
#define _CORBA_STRUCTDEF_CH_

  class TAO_IFR_Client_Export StructDef
    : public virtual ::CORBA::TypedefDef,
      public virtual ::CORBA::Container
  {
  public:
    friend class TAO::Narrow_Utils<StructDef>;
    typedef StructDef_ptr _ptr_type;
    typedef StructDef_var _var_type;

    // The static operations.
    static StructDef_ptr _duplicate (StructDef_ptr obj);

    static void _tao_release (StructDef_ptr obj);

    static StructDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static StructDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static StructDef_ptr _nil (void)
    {
      return static_cast<StructDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::StructMemberSeq * members (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void members (
        const ::CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_StructDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    StructDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_StructDef_setup_collocation (void);

    // Concrete non-local interface only.
    StructDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    StructDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~StructDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    StructDef (const StructDef &);

    void operator= (const StructDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_StructDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_UNIONDEF__VAR_OUT_CH_)
#define _CORBA_UNIONDEF__VAR_OUT_CH_

  class UnionDef;
  typedef UnionDef *UnionDef_ptr;

  typedef
    TAO_Objref_Var_T<
        UnionDef
      >
    UnionDef_var;

  typedef
    TAO_Objref_Out_T<
        UnionDef
      >
    UnionDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_UNIONDEF_CH_)
#define _CORBA_UNIONDEF_CH_

  class TAO_IFR_Client_Export UnionDef
    : public virtual ::CORBA::TypedefDef,
      public virtual ::CORBA::Container
  {
  public:
    friend class TAO::Narrow_Utils<UnionDef>;
    typedef UnionDef_ptr _ptr_type;
    typedef UnionDef_var _var_type;

    // The static operations.
    static UnionDef_ptr _duplicate (UnionDef_ptr obj);

    static void _tao_release (UnionDef_ptr obj);

    static UnionDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static UnionDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static UnionDef_ptr _nil (void)
    {
      return static_cast<UnionDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::TypeCode_ptr discriminator_type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IDLType_ptr discriminator_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void discriminator_type_def (
        ::CORBA::IDLType_ptr discriminator_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::UnionMemberSeq * members (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void members (
        const ::CORBA::UnionMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_UnionDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    UnionDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_UnionDef_setup_collocation (void);

    // Concrete non-local interface only.
    UnionDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    UnionDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~UnionDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    UnionDef (const UnionDef &);

    void operator= (const UnionDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_UnionDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_ENUMDEF__VAR_OUT_CH_)
#define _CORBA_ENUMDEF__VAR_OUT_CH_

  class EnumDef;
  typedef EnumDef *EnumDef_ptr;

  typedef
    TAO_Objref_Var_T<
        EnumDef
      >
    EnumDef_var;

  typedef
    TAO_Objref_Out_T<
        EnumDef
      >
    EnumDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ENUMDEF_CH_)
#define _CORBA_ENUMDEF_CH_

  class TAO_IFR_Client_Export EnumDef
    : public virtual ::CORBA::TypedefDef
  {
  public:
    friend class TAO::Narrow_Utils<EnumDef>;
    typedef EnumDef_ptr _ptr_type;
    typedef EnumDef_var _var_type;

    // The static operations.
    static EnumDef_ptr _duplicate (EnumDef_ptr obj);

    static void _tao_release (EnumDef_ptr obj);

    static EnumDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static EnumDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static EnumDef_ptr _nil (void)
    {
      return static_cast<EnumDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::EnumMemberSeq * members (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void members (
        const ::CORBA::EnumMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_EnumDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    EnumDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_EnumDef_setup_collocation (void);

    // Concrete non-local interface only.
    EnumDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    EnumDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~EnumDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    EnumDef (const EnumDef &);

    void operator= (const EnumDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_EnumDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_ALIASDEF__VAR_OUT_CH_)
#define _CORBA_ALIASDEF__VAR_OUT_CH_

  class AliasDef;
  typedef AliasDef *AliasDef_ptr;

  typedef
    TAO_Objref_Var_T<
        AliasDef
      >
    AliasDef_var;

  typedef
    TAO_Objref_Out_T<
        AliasDef
      >
    AliasDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ALIASDEF_CH_)
#define _CORBA_ALIASDEF_CH_

  class TAO_IFR_Client_Export AliasDef
    : public virtual ::CORBA::TypedefDef
  {
  public:
    friend class TAO::Narrow_Utils<AliasDef>;
    typedef AliasDef_ptr _ptr_type;
    typedef AliasDef_var _var_type;

    // The static operations.
    static AliasDef_ptr _duplicate (AliasDef_ptr obj);

    static void _tao_release (AliasDef_ptr obj);

    static AliasDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static AliasDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static AliasDef_ptr _nil (void)
    {
      return static_cast<AliasDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IDLType_ptr original_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void original_type_def (
        ::CORBA::IDLType_ptr original_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_AliasDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    AliasDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_AliasDef_setup_collocation (void);

    // Concrete non-local interface only.
    AliasDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    AliasDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~AliasDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    AliasDef (const AliasDef &);

    void operator= (const AliasDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_AliasDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_NATIVEDEF__VAR_OUT_CH_)
#define _CORBA_NATIVEDEF__VAR_OUT_CH_

  class NativeDef;
  typedef NativeDef *NativeDef_ptr;

  typedef
    TAO_Objref_Var_T<
        NativeDef
      >
    NativeDef_var;

  typedef
    TAO_Objref_Out_T<
        NativeDef
      >
    NativeDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_NATIVEDEF_CH_)
#define _CORBA_NATIVEDEF_CH_

  class TAO_IFR_Client_Export NativeDef
    : public virtual ::CORBA::TypedefDef
  {
  public:
    friend class TAO::Narrow_Utils<NativeDef>;
    typedef NativeDef_ptr _ptr_type;
    typedef NativeDef_var _var_type;

    // The static operations.
    static NativeDef_ptr _duplicate (NativeDef_ptr obj);

    static void _tao_release (NativeDef_ptr obj);

    static NativeDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static NativeDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static NativeDef_ptr _nil (void)
    {
      return static_cast<NativeDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_NativeDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    NativeDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_NativeDef_setup_collocation (void);

    // Concrete non-local interface only.
    NativeDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    NativeDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~NativeDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    NativeDef (const NativeDef &);

    void operator= (const NativeDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_NativeDef;

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_PRIMITIVEDEF_CH_)
#define _CORBA_PRIMITIVEDEF_CH_

  class TAO_IFR_Client_Export PrimitiveDef
    : public virtual ::CORBA::IDLType
  {
  public:
    friend class TAO::Narrow_Utils<PrimitiveDef>;
    typedef PrimitiveDef_ptr _ptr_type;
    typedef PrimitiveDef_var _var_type;

    // The static operations.
    static PrimitiveDef_ptr _duplicate (PrimitiveDef_ptr obj);

    static void _tao_release (PrimitiveDef_ptr obj);

    static PrimitiveDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static PrimitiveDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static PrimitiveDef_ptr _nil (void)
    {
      return static_cast<PrimitiveDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::PrimitiveKind kind (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_PrimitiveDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    PrimitiveDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_PrimitiveDef_setup_collocation (void);

    // Concrete non-local interface only.
    PrimitiveDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    PrimitiveDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~PrimitiveDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    PrimitiveDef (const PrimitiveDef &);

    void operator= (const PrimitiveDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_PrimitiveDef;

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_STRINGDEF_CH_)
#define _CORBA_STRINGDEF_CH_

  class TAO_IFR_Client_Export StringDef
    : public virtual ::CORBA::IDLType
  {
  public:
    friend class TAO::Narrow_Utils<StringDef>;
    typedef StringDef_ptr _ptr_type;
    typedef StringDef_var _var_type;

    // The static operations.
    static StringDef_ptr _duplicate (StringDef_ptr obj);

    static void _tao_release (StringDef_ptr obj);

    static StringDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static StringDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static StringDef_ptr _nil (void)
    {
      return static_cast<StringDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::ULong bound (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void bound (
        ::CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_StringDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    StringDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_StringDef_setup_collocation (void);

    // Concrete non-local interface only.
    StringDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    StringDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~StringDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    StringDef (const StringDef &);

    void operator= (const StringDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_StringDef;

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_WSTRINGDEF_CH_)
#define _CORBA_WSTRINGDEF_CH_

  class TAO_IFR_Client_Export WstringDef
    : public virtual ::CORBA::IDLType
  {
  public:
    friend class TAO::Narrow_Utils<WstringDef>;
    typedef WstringDef_ptr _ptr_type;
    typedef WstringDef_var _var_type;

    // The static operations.
    static WstringDef_ptr _duplicate (WstringDef_ptr obj);

    static void _tao_release (WstringDef_ptr obj);

    static WstringDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static WstringDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static WstringDef_ptr _nil (void)
    {
      return static_cast<WstringDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::ULong bound (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void bound (
        ::CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_WstringDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    WstringDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_WstringDef_setup_collocation (void);

    // Concrete non-local interface only.
    WstringDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    WstringDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~WstringDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    WstringDef (const WstringDef &);

    void operator= (const WstringDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_WstringDef;

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_SEQUENCEDEF_CH_)
#define _CORBA_SEQUENCEDEF_CH_

  class TAO_IFR_Client_Export SequenceDef
    : public virtual ::CORBA::IDLType
  {
  public:
    friend class TAO::Narrow_Utils<SequenceDef>;
    typedef SequenceDef_ptr _ptr_type;
    typedef SequenceDef_var _var_type;

    // The static operations.
    static SequenceDef_ptr _duplicate (SequenceDef_ptr obj);

    static void _tao_release (SequenceDef_ptr obj);

    static SequenceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static SequenceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static SequenceDef_ptr _nil (void)
    {
      return static_cast<SequenceDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::ULong bound (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void bound (
        ::CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::TypeCode_ptr element_type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IDLType_ptr element_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void element_type_def (
        ::CORBA::IDLType_ptr element_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SequenceDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    SequenceDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_SequenceDef_setup_collocation (void);

    // Concrete non-local interface only.
    SequenceDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    SequenceDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~SequenceDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    SequenceDef (const SequenceDef &);

    void operator= (const SequenceDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_SequenceDef;

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ARRAYDEF_CH_)
#define _CORBA_ARRAYDEF_CH_

  class TAO_IFR_Client_Export ArrayDef
    : public virtual ::CORBA::IDLType
  {
  public:
    friend class TAO::Narrow_Utils<ArrayDef>;
    typedef ArrayDef_ptr _ptr_type;
    typedef ArrayDef_var _var_type;

    // The static operations.
    static ArrayDef_ptr _duplicate (ArrayDef_ptr obj);

    static void _tao_release (ArrayDef_ptr obj);

    static ArrayDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ArrayDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ArrayDef_ptr _nil (void)
    {
      return static_cast<ArrayDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::ULong length (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void length (
        ::CORBA::ULong length
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::TypeCode_ptr element_type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IDLType_ptr element_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void element_type_def (
        ::CORBA::IDLType_ptr element_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ArrayDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    ArrayDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ArrayDef_setup_collocation (void);

    // Concrete non-local interface only.
    ArrayDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    ArrayDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~ArrayDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ArrayDef (const ArrayDef &);

    void operator= (const ArrayDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ArrayDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_EXCEPTIONDEF__VAR_OUT_CH_)
#define _CORBA_EXCEPTIONDEF__VAR_OUT_CH_

  class ExceptionDef;
  typedef ExceptionDef *ExceptionDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExceptionDef
      >
    ExceptionDef_var;

  typedef
    TAO_Objref_Out_T<
        ExceptionDef
      >
    ExceptionDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXCEPTIONDEF_CH_)
#define _CORBA_EXCEPTIONDEF_CH_

  class TAO_IFR_Client_Export ExceptionDef
    : public virtual ::CORBA::Contained,
      public virtual ::CORBA::Container
  {
  public:
    friend class TAO::Narrow_Utils<ExceptionDef>;
    typedef ExceptionDef_ptr _ptr_type;
    typedef ExceptionDef_var _var_type;

    // The static operations.
    static ExceptionDef_ptr _duplicate (ExceptionDef_ptr obj);

    static void _tao_release (ExceptionDef_ptr obj);

    static ExceptionDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExceptionDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExceptionDef_ptr _nil (void)
    {
      return static_cast<ExceptionDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::TypeCode_ptr type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::StructMemberSeq * members (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void members (
        const ::CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ExceptionDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    ExceptionDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExceptionDef_setup_collocation (void);

    // Concrete non-local interface only.
    ExceptionDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    ExceptionDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~ExceptionDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ExceptionDef (const ExceptionDef &);

    void operator= (const ExceptionDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExceptionDef;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_EXCEPTIONDEFSEQ_CH_)
#define _CORBA_EXCEPTIONDEFSEQ_CH_

  class ExceptionDefSeq;

  typedef
    TAO_VarSeq_Var_T<
        ExceptionDefSeq
      >
    ExceptionDefSeq_var;

  typedef
    TAO_Seq_Out_T<
        ExceptionDefSeq,
        ExceptionDefSeq_var
      >
    ExceptionDefSeq_out;

  class TAO_IFR_Client_Export ExceptionDefSeq
    : public
        TAO::unbounded_object_reference_sequence<
            ExceptionDef,
            ExceptionDef_var
          >
  {
  public:
    ExceptionDefSeq (void);
    ExceptionDefSeq (CORBA::ULong max);
    ExceptionDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExceptionDef_ptr* buffer,
        CORBA::Boolean release = 0
      );
    ExceptionDefSeq (const ExceptionDefSeq &);
    ~ExceptionDefSeq (void);

    static void _tao_any_destructor (void *);

    typedef ExceptionDefSeq_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExceptionDefSeq;

  // TAO_IDL - Generated from
  // be\be_visitor_enum/enum_ch.cpp:57

  enum AttributeMode
  {
    ATTR_NORMAL,
    ATTR_READONLY
  };

  typedef AttributeMode &AttributeMode_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_AttributeMode;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_ATTRIBUTEDEF__VAR_OUT_CH_)
#define _CORBA_ATTRIBUTEDEF__VAR_OUT_CH_

  class AttributeDef;
  typedef AttributeDef *AttributeDef_ptr;

  typedef
    TAO_Objref_Var_T<
        AttributeDef
      >
    AttributeDef_var;

  typedef
    TAO_Objref_Out_T<
        AttributeDef
      >
    AttributeDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ATTRIBUTEDEF_CH_)
#define _CORBA_ATTRIBUTEDEF_CH_

  class TAO_IFR_Client_Export AttributeDef
    : public virtual ::CORBA::Contained
  {
  public:
    friend class TAO::Narrow_Utils<AttributeDef>;
    typedef AttributeDef_ptr _ptr_type;
    typedef AttributeDef_var _var_type;

    // The static operations.
    static AttributeDef_ptr _duplicate (AttributeDef_ptr obj);

    static void _tao_release (AttributeDef_ptr obj);

    static AttributeDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static AttributeDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static AttributeDef_ptr _nil (void)
    {
      return static_cast<AttributeDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::TypeCode_ptr type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IDLType_ptr type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void type_def (
        ::CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::AttributeMode mode (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void mode (
        ::CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_AttributeDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    AttributeDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_AttributeDef_setup_collocation (void);

    // Concrete non-local interface only.
    AttributeDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    AttributeDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~AttributeDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    AttributeDef (const AttributeDef &);

    void operator= (const AttributeDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_AttributeDef;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct AttributeDescription;

  typedef
    TAO_Var_Var_T<
        AttributeDescription
      >
    AttributeDescription_var;

  typedef
    TAO_Out_T<
        AttributeDescription,
        AttributeDescription_var
      >
    AttributeDescription_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:57

  struct TAO_IFR_Client_Export AttributeDescription
  {
    typedef AttributeDescription_var _var_type;

    static void _tao_any_destructor (void *);
    TAO::String_Manager name;
    TAO::String_Manager id;
    TAO::String_Manager defined_in;
    TAO::String_Manager version;
    CORBA::TypeCode_var type;
    CORBA::AttributeMode mode;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_AttributeDescription;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct ExtAttributeDescription;

  typedef
    TAO_Var_Var_T<
        ExtAttributeDescription
      >
    ExtAttributeDescription_var;

  typedef
    TAO_Out_T<
        ExtAttributeDescription,
        ExtAttributeDescription_var
      >
    ExtAttributeDescription_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:57

  struct TAO_IFR_Client_Export ExtAttributeDescription
  {
    typedef ExtAttributeDescription_var _var_type;

    static void _tao_any_destructor (void *);
    TAO::String_Manager name;
    TAO::String_Manager id;
    TAO::String_Manager defined_in;
    TAO::String_Manager version;
    CORBA::TypeCode_var type;
    CORBA::AttributeMode mode;
    CORBA::ExcDescriptionSeq get_exceptions;
    CORBA::ExcDescriptionSeq put_exceptions;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtAttributeDescription;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_EXTATTRIBUTEDEF__VAR_OUT_CH_)
#define _CORBA_EXTATTRIBUTEDEF__VAR_OUT_CH_

  class ExtAttributeDef;
  typedef ExtAttributeDef *ExtAttributeDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtAttributeDef
      >
    ExtAttributeDef_var;

  typedef
    TAO_Objref_Out_T<
        ExtAttributeDef
      >
    ExtAttributeDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXTATTRIBUTEDEF_CH_)
#define _CORBA_EXTATTRIBUTEDEF_CH_

  class TAO_IFR_Client_Export ExtAttributeDef
    : public virtual ::CORBA::AttributeDef
  {
  public:
    friend class TAO::Narrow_Utils<ExtAttributeDef>;
    typedef ExtAttributeDef_ptr _ptr_type;
    typedef ExtAttributeDef_var _var_type;

    // The static operations.
    static ExtAttributeDef_ptr _duplicate (ExtAttributeDef_ptr obj);

    static void _tao_release (ExtAttributeDef_ptr obj);

    static ExtAttributeDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExtAttributeDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExtAttributeDef_ptr _nil (void)
    {
      return static_cast<ExtAttributeDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::ExcDescriptionSeq * get_exceptions (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void get_exceptions (
        const ::CORBA::ExcDescriptionSeq & get_exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::ExcDescriptionSeq * set_exceptions (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void set_exceptions (
        const ::CORBA::ExcDescriptionSeq & set_exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::ExtAttributeDescription * describe_attribute (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ExtAttributeDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    ExtAttributeDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExtAttributeDef_setup_collocation (void);

    // Concrete non-local interface only.
    ExtAttributeDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    ExtAttributeDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~ExtAttributeDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ExtAttributeDef (const ExtAttributeDef &);

    void operator= (const ExtAttributeDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtAttributeDef;

  // TAO_IDL - Generated from
  // be\be_visitor_enum/enum_ch.cpp:57

  enum OperationMode
  {
    OP_NORMAL,
    OP_ONEWAY
  };

  typedef OperationMode &OperationMode_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_OperationMode;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct ParameterDescription;

  typedef
    TAO_Var_Var_T<
        ParameterDescription
      >
    ParameterDescription_var;

  typedef
    TAO_Out_T<
        ParameterDescription,
        ParameterDescription_var
      >
    ParameterDescription_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:57

  struct TAO_IFR_Client_Export ParameterDescription
  {
    typedef ParameterDescription_var _var_type;

    static void _tao_any_destructor (void *);
    TAO::String_Manager name;
    CORBA::TypeCode_var type;
    CORBA::IDLType_var type_def;
    CORBA::ParameterMode mode;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ParameterDescription;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_PARDESCRIPTIONSEQ_CH_)
#define _CORBA_PARDESCRIPTIONSEQ_CH_

  class ParDescriptionSeq;

  typedef
    TAO_VarSeq_Var_T<
        ParDescriptionSeq
      >
    ParDescriptionSeq_var;

  typedef
    TAO_Seq_Out_T<
        ParDescriptionSeq,
        ParDescriptionSeq_var
      >
    ParDescriptionSeq_out;

  class TAO_IFR_Client_Export ParDescriptionSeq
    : public
        TAO::unbounded_value_sequence<
            ParameterDescription
          >
  {
  public:
    ParDescriptionSeq (void);
    ParDescriptionSeq (CORBA::ULong max);
    ParDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ParameterDescription* buffer,
        CORBA::Boolean release = 0
      );
    ParDescriptionSeq (const ParDescriptionSeq &);
    ~ParDescriptionSeq (void);

    static void _tao_any_destructor (void *);

    typedef ParDescriptionSeq_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ParDescriptionSeq;

  // TAO_IDL - Generated from
  // be\be_visitor_typedef/typedef_ch.cpp:413

  typedef char * ContextIdentifier;
  typedef CORBA::String_var ContextIdentifier_var;
  typedef CORBA::String_out ContextIdentifier_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ContextIdentifier;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_CONTEXTIDSEQ_CH_)
#define _CORBA_CONTEXTIDSEQ_CH_

  class ContextIdSeq;

  typedef
    TAO_VarSeq_Var_T<
        ContextIdSeq
      >
    ContextIdSeq_var;

  typedef
    TAO_Seq_Out_T<
        ContextIdSeq,
        ContextIdSeq_var
      >
    ContextIdSeq_out;

  class TAO_IFR_Client_Export ContextIdSeq
    : public
        TAO::unbounded_string_sequence
  {
  public:
    ContextIdSeq (void);
    ContextIdSeq (CORBA::ULong max);
    ContextIdSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        char ** buffer,
        CORBA::Boolean release = 0
      );
    ContextIdSeq (const ContextIdSeq &);
    ~ContextIdSeq (void);

    static void _tao_any_destructor (void *);

    typedef ContextIdSeq_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ContextIdSeq;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_OPERATIONDEF__VAR_OUT_CH_)
#define _CORBA_OPERATIONDEF__VAR_OUT_CH_

  class OperationDef;
  typedef OperationDef *OperationDef_ptr;

  typedef
    TAO_Objref_Var_T<
        OperationDef
      >
    OperationDef_var;

  typedef
    TAO_Objref_Out_T<
        OperationDef
      >
    OperationDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_OPERATIONDEF_CH_)
#define _CORBA_OPERATIONDEF_CH_

  class TAO_IFR_Client_Export OperationDef
    : public virtual ::CORBA::Contained
  {
  public:
    friend class TAO::Narrow_Utils<OperationDef>;
    typedef OperationDef_ptr _ptr_type;
    typedef OperationDef_var _var_type;

    // The static operations.
    static OperationDef_ptr _duplicate (OperationDef_ptr obj);

    static void _tao_release (OperationDef_ptr obj);

    static OperationDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static OperationDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static OperationDef_ptr _nil (void)
    {
      return static_cast<OperationDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::TypeCode_ptr result (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IDLType_ptr result_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void result_def (
        ::CORBA::IDLType_ptr result_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::ParDescriptionSeq * params (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void params (
        const ::CORBA::ParDescriptionSeq & params
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::OperationMode mode (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void mode (
        ::CORBA::OperationMode mode
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::ContextIdSeq * contexts (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void contexts (
        const ::CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::ExceptionDefSeq * exceptions (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void exceptions (
        const ::CORBA::ExceptionDefSeq & exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_OperationDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    OperationDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_OperationDef_setup_collocation (void);

    // Concrete non-local interface only.
    OperationDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    OperationDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~OperationDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    OperationDef (const OperationDef &);

    void operator= (const OperationDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_OperationDef;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct OperationDescription;

  typedef
    TAO_Var_Var_T<
        OperationDescription
      >
    OperationDescription_var;

  typedef
    TAO_Out_T<
        OperationDescription,
        OperationDescription_var
      >
    OperationDescription_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:57

  struct TAO_IFR_Client_Export OperationDescription
  {
    typedef OperationDescription_var _var_type;

    static void _tao_any_destructor (void *);
    TAO::String_Manager name;
    TAO::String_Manager id;
    TAO::String_Manager defined_in;
    TAO::String_Manager version;
    CORBA::TypeCode_var result;
    CORBA::OperationMode mode;
    CORBA::ContextIdSeq contexts;
    CORBA::ParDescriptionSeq parameters;
    CORBA::ExcDescriptionSeq exceptions;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_OperationDescription;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_REPOSITORYIDSEQ_CH_)
#define _CORBA_REPOSITORYIDSEQ_CH_

  class RepositoryIdSeq;

  typedef
    TAO_VarSeq_Var_T<
        RepositoryIdSeq
      >
    RepositoryIdSeq_var;

  typedef
    TAO_Seq_Out_T<
        RepositoryIdSeq,
        RepositoryIdSeq_var
      >
    RepositoryIdSeq_out;

  class TAO_IFR_Client_Export RepositoryIdSeq
    : public
        TAO::unbounded_string_sequence
  {
  public:
    RepositoryIdSeq (void);
    RepositoryIdSeq (CORBA::ULong max);
    RepositoryIdSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        char ** buffer,
        CORBA::Boolean release = 0
      );
    RepositoryIdSeq (const RepositoryIdSeq &);
    ~RepositoryIdSeq (void);

    static void _tao_any_destructor (void *);

    typedef RepositoryIdSeq_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_RepositoryIdSeq;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_OPDESCRIPTIONSEQ_CH_)
#define _CORBA_OPDESCRIPTIONSEQ_CH_

  class OpDescriptionSeq;

  typedef
    TAO_VarSeq_Var_T<
        OpDescriptionSeq
      >
    OpDescriptionSeq_var;

  typedef
    TAO_Seq_Out_T<
        OpDescriptionSeq,
        OpDescriptionSeq_var
      >
    OpDescriptionSeq_out;

  class TAO_IFR_Client_Export OpDescriptionSeq
    : public
        TAO::unbounded_value_sequence<
            OperationDescription
          >
  {
  public:
    OpDescriptionSeq (void);
    OpDescriptionSeq (CORBA::ULong max);
    OpDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        OperationDescription* buffer,
        CORBA::Boolean release = 0
      );
    OpDescriptionSeq (const OpDescriptionSeq &);
    ~OpDescriptionSeq (void);

    static void _tao_any_destructor (void *);

    typedef OpDescriptionSeq_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_OpDescriptionSeq;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_ATTRDESCRIPTIONSEQ_CH_)
#define _CORBA_ATTRDESCRIPTIONSEQ_CH_

  class AttrDescriptionSeq;

  typedef
    TAO_VarSeq_Var_T<
        AttrDescriptionSeq
      >
    AttrDescriptionSeq_var;

  typedef
    TAO_Seq_Out_T<
        AttrDescriptionSeq,
        AttrDescriptionSeq_var
      >
    AttrDescriptionSeq_out;

  class TAO_IFR_Client_Export AttrDescriptionSeq
    : public
        TAO::unbounded_value_sequence<
            AttributeDescription
          >
  {
  public:
    AttrDescriptionSeq (void);
    AttrDescriptionSeq (CORBA::ULong max);
    AttrDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        AttributeDescription* buffer,
        CORBA::Boolean release = 0
      );
    AttrDescriptionSeq (const AttrDescriptionSeq &);
    ~AttrDescriptionSeq (void);

    static void _tao_any_destructor (void *);

    typedef AttrDescriptionSeq_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_AttrDescriptionSeq;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_EXTATTRDESCRIPTIONSEQ_CH_)
#define _CORBA_EXTATTRDESCRIPTIONSEQ_CH_

  class ExtAttrDescriptionSeq;

  typedef
    TAO_VarSeq_Var_T<
        ExtAttrDescriptionSeq
      >
    ExtAttrDescriptionSeq_var;

  typedef
    TAO_Seq_Out_T<
        ExtAttrDescriptionSeq,
        ExtAttrDescriptionSeq_var
      >
    ExtAttrDescriptionSeq_out;

  class TAO_IFR_Client_Export ExtAttrDescriptionSeq
    : public
        TAO::unbounded_value_sequence<
            ExtAttributeDescription
          >
  {
  public:
    ExtAttrDescriptionSeq (void);
    ExtAttrDescriptionSeq (CORBA::ULong max);
    ExtAttrDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExtAttributeDescription* buffer,
        CORBA::Boolean release = 0
      );
    ExtAttrDescriptionSeq (const ExtAttrDescriptionSeq &);
    ~ExtAttrDescriptionSeq (void);

    static void _tao_any_destructor (void *);

    typedef ExtAttrDescriptionSeq_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtAttrDescriptionSeq;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_INTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_INTERFACEDEF__VAR_OUT_CH_

  class InterfaceDef;
  typedef InterfaceDef *InterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        InterfaceDef
      >
    InterfaceDef_var;

  typedef
    TAO_Objref_Out_T<
        InterfaceDef
      >
    InterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_INTERFACEDEF_CH_)
#define _CORBA_INTERFACEDEF_CH_

  class TAO_IFR_Client_Export InterfaceDef
    : public virtual ::CORBA::Container,
      public virtual ::CORBA::Contained,
      public virtual ::CORBA::IDLType
  {
  public:
    friend class TAO::Narrow_Utils<InterfaceDef>;
    typedef InterfaceDef_ptr _ptr_type;
    typedef InterfaceDef_var _var_type;

    // The static operations.
    static InterfaceDef_ptr _duplicate (InterfaceDef_ptr obj);

    static void _tao_release (InterfaceDef_ptr obj);

    static InterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static InterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static InterfaceDef_ptr _nil (void)
    {
      return static_cast<InterfaceDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::InterfaceDefSeq * base_interfaces (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void base_interfaces (
        const ::CORBA::InterfaceDefSeq & base_interfaces
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean is_a (
        const char * interface_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_type.cpp:258

    struct FullInterfaceDescription;

    typedef
      TAO_Var_Var_T<
          FullInterfaceDescription
        >
      FullInterfaceDescription_var;

    typedef
      TAO_Out_T<
          FullInterfaceDescription,
          FullInterfaceDescription_var
        >
      FullInterfaceDescription_out;

    // TAO_IDL - Generated from
    // be\be_visitor_structure/structure_ch.cpp:57

    struct TAO_IFR_Client_Export FullInterfaceDescription
    {
      typedef FullInterfaceDescription_var _var_type;

      static void _tao_any_destructor (void *);
      TAO::String_Manager name;
      TAO::String_Manager id;
      TAO::String_Manager defined_in;
      TAO::String_Manager version;
      ::CORBA::OpDescriptionSeq operations;
      ::CORBA::AttrDescriptionSeq attributes;
      ::CORBA::RepositoryIdSeq base_interfaces;
      ::CORBA::TypeCode_var type;
    };

    // TAO_IDL - Generated from
    // be\be_visitor_typecode/typecode_decl.cpp:49

    static ::CORBA::TypeCode_ptr const _tc_FullInterfaceDescription;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::InterfaceDef::FullInterfaceDescription * describe_interface (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::AttributeDef_ptr create_attribute (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::IDLType_ptr type,
        ::CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::OperationDef_ptr create_operation (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::IDLType_ptr result,
        ::CORBA::OperationMode mode,
        const ::CORBA::ParDescriptionSeq & params,
        const ::CORBA::ExceptionDefSeq & exceptions,
        const ::CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_InterfaceDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    InterfaceDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_InterfaceDef_setup_collocation (void);

    // Concrete non-local interface only.
    InterfaceDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    InterfaceDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~InterfaceDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    InterfaceDef (const InterfaceDef &);

    void operator= (const InterfaceDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_InterfaceDef;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct InterfaceDescription;

  typedef
    TAO_Var_Var_T<
        InterfaceDescription
      >
    InterfaceDescription_var;

  typedef
    TAO_Out_T<
        InterfaceDescription,
        InterfaceDescription_var
      >
    InterfaceDescription_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:57

  struct TAO_IFR_Client_Export InterfaceDescription
  {
    typedef InterfaceDescription_var _var_type;

    static void _tao_any_destructor (void *);
    TAO::String_Manager name;
    TAO::String_Manager id;
    TAO::String_Manager defined_in;
    TAO::String_Manager version;
    CORBA::RepositoryIdSeq base_interfaces;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_InterfaceDescription;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_INTERFACEATTREXTENSION__VAR_OUT_CH_)
#define _CORBA_INTERFACEATTREXTENSION__VAR_OUT_CH_

  class InterfaceAttrExtension;
  typedef InterfaceAttrExtension *InterfaceAttrExtension_ptr;

  typedef
    TAO_Objref_Var_T<
        InterfaceAttrExtension
      >
    InterfaceAttrExtension_var;

  typedef
    TAO_Objref_Out_T<
        InterfaceAttrExtension
      >
    InterfaceAttrExtension_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_INTERFACEATTREXTENSION_CH_)
#define _CORBA_INTERFACEATTREXTENSION_CH_

  class TAO_IFR_Client_Export InterfaceAttrExtension
    : public virtual CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<InterfaceAttrExtension>;
    typedef InterfaceAttrExtension_ptr _ptr_type;
    typedef InterfaceAttrExtension_var _var_type;

    // The static operations.
    static InterfaceAttrExtension_ptr _duplicate (InterfaceAttrExtension_ptr obj);

    static void _tao_release (InterfaceAttrExtension_ptr obj);

    static InterfaceAttrExtension_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static InterfaceAttrExtension_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static InterfaceAttrExtension_ptr _nil (void)
    {
      return static_cast<InterfaceAttrExtension_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_type.cpp:258

    struct ExtFullInterfaceDescription;

    typedef
      TAO_Var_Var_T<
          ExtFullInterfaceDescription
        >
      ExtFullInterfaceDescription_var;

    typedef
      TAO_Out_T<
          ExtFullInterfaceDescription,
          ExtFullInterfaceDescription_var
        >
      ExtFullInterfaceDescription_out;

    // TAO_IDL - Generated from
    // be\be_visitor_structure/structure_ch.cpp:57

    struct TAO_IFR_Client_Export ExtFullInterfaceDescription
    {
      typedef ExtFullInterfaceDescription_var _var_type;

      static void _tao_any_destructor (void *);
      TAO::String_Manager name;
      TAO::String_Manager id;
      TAO::String_Manager defined_in;
      TAO::String_Manager version;
      ::CORBA::OpDescriptionSeq operations;
      ::CORBA::ExtAttrDescriptionSeq attributes;
      ::CORBA::RepositoryIdSeq base_interfaces;
      ::CORBA::TypeCode_var type;
    };

    // TAO_IDL - Generated from
    // be\be_visitor_typecode/typecode_decl.cpp:49

    static ::CORBA::TypeCode_ptr const _tc_ExtFullInterfaceDescription;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription * describe_ext_interface (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::ExtAttributeDef_ptr create_ext_attribute (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::IDLType_ptr type,
        ::CORBA::AttributeMode mode,
        const ::CORBA::ExceptionDefSeq & get_exceptions,
        const ::CORBA::ExceptionDefSeq & set_exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_InterfaceAttrExtension_Proxy_Broker_;

  protected:
    // Concrete interface only.
    InterfaceAttrExtension (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_InterfaceAttrExtension_setup_collocation (void);

    // Concrete non-local interface only.
    InterfaceAttrExtension (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    InterfaceAttrExtension (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~InterfaceAttrExtension (void);

  private:
    // Private and unimplemented for concrete interfaces.
    InterfaceAttrExtension (const InterfaceAttrExtension &);

    void operator= (const InterfaceAttrExtension &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_InterfaceAttrExtension;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_EXTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTINTERFACEDEF__VAR_OUT_CH_

  class ExtInterfaceDef;
  typedef ExtInterfaceDef *ExtInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtInterfaceDef
      >
    ExtInterfaceDef_var;

  typedef
    TAO_Objref_Out_T<
        ExtInterfaceDef
      >
    ExtInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXTINTERFACEDEF_CH_)
#define _CORBA_EXTINTERFACEDEF_CH_

  class TAO_IFR_Client_Export ExtInterfaceDef
    : public virtual ::CORBA::InterfaceDef,
      public virtual ::CORBA::InterfaceAttrExtension
  {
  public:
    friend class TAO::Narrow_Utils<ExtInterfaceDef>;
    typedef ExtInterfaceDef_ptr _ptr_type;
    typedef ExtInterfaceDef_var _var_type;

    // The static operations.
    static ExtInterfaceDef_ptr _duplicate (ExtInterfaceDef_ptr obj);

    static void _tao_release (ExtInterfaceDef_ptr obj);

    static ExtInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExtInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExtInterfaceDef_ptr _nil (void)
    {
      return static_cast<ExtInterfaceDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ExtInterfaceDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    ExtInterfaceDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExtInterfaceDef_setup_collocation (void);

    // Concrete non-local interface only.
    ExtInterfaceDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    ExtInterfaceDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~ExtInterfaceDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ExtInterfaceDef (const ExtInterfaceDef &);

    void operator= (const ExtInterfaceDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_ABSTRACTINTERFACEDEF__VAR_OUT_CH_

  class AbstractInterfaceDef;
  typedef AbstractInterfaceDef *AbstractInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        AbstractInterfaceDef
      >
    AbstractInterfaceDef_var;

  typedef
    TAO_Objref_Out_T<
        AbstractInterfaceDef
      >
    AbstractInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ABSTRACTINTERFACEDEF_CH_)
#define _CORBA_ABSTRACTINTERFACEDEF_CH_

  class TAO_IFR_Client_Export AbstractInterfaceDef
    : public virtual ::CORBA::InterfaceDef
  {
  public:
    friend class TAO::Narrow_Utils<AbstractInterfaceDef>;
    typedef AbstractInterfaceDef_ptr _ptr_type;
    typedef AbstractInterfaceDef_var _var_type;

    // The static operations.
    static AbstractInterfaceDef_ptr _duplicate (AbstractInterfaceDef_ptr obj);

    static void _tao_release (AbstractInterfaceDef_ptr obj);

    static AbstractInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static AbstractInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static AbstractInterfaceDef_ptr _nil (void)
    {
      return static_cast<AbstractInterfaceDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_AbstractInterfaceDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    AbstractInterfaceDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_AbstractInterfaceDef_setup_collocation (void);

    // Concrete non-local interface only.
    AbstractInterfaceDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    AbstractInterfaceDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~AbstractInterfaceDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    AbstractInterfaceDef (const AbstractInterfaceDef &);

    void operator= (const AbstractInterfaceDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__VAR_OUT_CH_

  class ExtAbstractInterfaceDef;
  typedef ExtAbstractInterfaceDef *ExtAbstractInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtAbstractInterfaceDef
      >
    ExtAbstractInterfaceDef_var;

  typedef
    TAO_Objref_Out_T<
        ExtAbstractInterfaceDef
      >
    ExtAbstractInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEF_CH_

  class TAO_IFR_Client_Export ExtAbstractInterfaceDef
    : public virtual ::CORBA::AbstractInterfaceDef,
      public virtual ::CORBA::InterfaceAttrExtension
  {
  public:
    friend class TAO::Narrow_Utils<ExtAbstractInterfaceDef>;
    typedef ExtAbstractInterfaceDef_ptr _ptr_type;
    typedef ExtAbstractInterfaceDef_var _var_type;

    // The static operations.
    static ExtAbstractInterfaceDef_ptr _duplicate (ExtAbstractInterfaceDef_ptr obj);

    static void _tao_release (ExtAbstractInterfaceDef_ptr obj);

    static ExtAbstractInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExtAbstractInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExtAbstractInterfaceDef_ptr _nil (void)
    {
      return static_cast<ExtAbstractInterfaceDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ExtAbstractInterfaceDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    ExtAbstractInterfaceDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExtAbstractInterfaceDef_setup_collocation (void);

    // Concrete non-local interface only.
    ExtAbstractInterfaceDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    ExtAbstractInterfaceDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~ExtAbstractInterfaceDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ExtAbstractInterfaceDef (const ExtAbstractInterfaceDef &);

    void operator= (const ExtAbstractInterfaceDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_LOCALINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_LOCALINTERFACEDEF__VAR_OUT_CH_

  class LocalInterfaceDef;
  typedef LocalInterfaceDef *LocalInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        LocalInterfaceDef
      >
    LocalInterfaceDef_var;

  typedef
    TAO_Objref_Out_T<
        LocalInterfaceDef
      >
    LocalInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_LOCALINTERFACEDEF_CH_)
#define _CORBA_LOCALINTERFACEDEF_CH_

  class TAO_IFR_Client_Export LocalInterfaceDef
    : public virtual ::CORBA::InterfaceDef
  {
  public:
    friend class TAO::Narrow_Utils<LocalInterfaceDef>;
    typedef LocalInterfaceDef_ptr _ptr_type;
    typedef LocalInterfaceDef_var _var_type;

    // The static operations.
    static LocalInterfaceDef_ptr _duplicate (LocalInterfaceDef_ptr obj);

    static void _tao_release (LocalInterfaceDef_ptr obj);

    static LocalInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static LocalInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static LocalInterfaceDef_ptr _nil (void)
    {
      return static_cast<LocalInterfaceDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_LocalInterfaceDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    LocalInterfaceDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_LocalInterfaceDef_setup_collocation (void);

    // Concrete non-local interface only.
    LocalInterfaceDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    LocalInterfaceDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~LocalInterfaceDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    LocalInterfaceDef (const LocalInterfaceDef &);

    void operator= (const LocalInterfaceDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDef;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTLOCALINTERFACEDEF__VAR_OUT_CH_

  class ExtLocalInterfaceDef;
  typedef ExtLocalInterfaceDef *ExtLocalInterfaceDef_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtLocalInterfaceDef
      >
    ExtLocalInterfaceDef_var;

  typedef
    TAO_Objref_Out_T<
        ExtLocalInterfaceDef
      >
    ExtLocalInterfaceDef_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXTLOCALINTERFACEDEF_CH_)
#define _CORBA_EXTLOCALINTERFACEDEF_CH_

  class TAO_IFR_Client_Export ExtLocalInterfaceDef
    : public virtual ::CORBA::LocalInterfaceDef,
      public virtual ::CORBA::InterfaceAttrExtension
  {
  public:
    friend class TAO::Narrow_Utils<ExtLocalInterfaceDef>;
    typedef ExtLocalInterfaceDef_ptr _ptr_type;
    typedef ExtLocalInterfaceDef_var _var_type;

    // The static operations.
    static ExtLocalInterfaceDef_ptr _duplicate (ExtLocalInterfaceDef_ptr obj);

    static void _tao_release (ExtLocalInterfaceDef_ptr obj);

    static ExtLocalInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExtLocalInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ExtLocalInterfaceDef_ptr _nil (void)
    {
      return static_cast<ExtLocalInterfaceDef_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ExtLocalInterfaceDef_Proxy_Broker_;

  protected:
    // Concrete interface only.
    ExtLocalInterfaceDef (void);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExtLocalInterfaceDef_setup_collocation (void);

    // Concrete non-local interface only.
    ExtLocalInterfaceDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );

    // Non-local interface only.
    ExtLocalInterfaceDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );

    virtual ~ExtLocalInterfaceDef (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ExtLocalInterfaceDef (const ExtLocalInterfaceDef &);

    void operator= (const ExtLocalInterfaceDef &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:49

  extern TAO_IFR_Client_Export ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDef;

// TAO_IDL - Generated from
// be\be_visitor_module/module_ch.cpp:66

} // module CORBA

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// be\be_visitor_root/root.cpp:139

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:61

// Traits specializations.
namespace TAO
{

#if !defined (_CORBA_FIXEDDEF__TRAITS_)
#define _CORBA_FIXEDDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::FixedDef>
  {
    static ::CORBA::FixedDef_ptr duplicate (
        ::CORBA::FixedDef_ptr
      );
    static void release (
        ::CORBA::FixedDef_ptr
      );
    static ::CORBA::FixedDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::FixedDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_REPOSITORY__TRAITS_)
#define _CORBA_REPOSITORY__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::Repository>
  {
    static ::CORBA::Repository_ptr duplicate (
        ::CORBA::Repository_ptr
      );
    static void release (
        ::CORBA::Repository_ptr
      );
    static ::CORBA::Repository_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::Repository_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_MODULEDEF__TRAITS_)
#define _CORBA_MODULEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ModuleDef>
  {
    static ::CORBA::ModuleDef_ptr duplicate (
        ::CORBA::ModuleDef_ptr
      );
    static void release (
        ::CORBA::ModuleDef_ptr
      );
    static ::CORBA::ModuleDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::ModuleDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_CONSTANTDEF__TRAITS_)
#define _CORBA_CONSTANTDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ConstantDef>
  {
    static ::CORBA::ConstantDef_ptr duplicate (
        ::CORBA::ConstantDef_ptr
      );
    static void release (
        ::CORBA::ConstantDef_ptr
      );
    static ::CORBA::ConstantDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::ConstantDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_STRUCTDEF__TRAITS_)
#define _CORBA_STRUCTDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::StructDef>
  {
    static ::CORBA::StructDef_ptr duplicate (
        ::CORBA::StructDef_ptr
      );
    static void release (
        ::CORBA::StructDef_ptr
      );
    static ::CORBA::StructDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::StructDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_UNIONDEF__TRAITS_)
#define _CORBA_UNIONDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::UnionDef>
  {
    static ::CORBA::UnionDef_ptr duplicate (
        ::CORBA::UnionDef_ptr
      );
    static void release (
        ::CORBA::UnionDef_ptr
      );
    static ::CORBA::UnionDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::UnionDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ENUMDEF__TRAITS_)
#define _CORBA_ENUMDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::EnumDef>
  {
    static ::CORBA::EnumDef_ptr duplicate (
        ::CORBA::EnumDef_ptr
      );
    static void release (
        ::CORBA::EnumDef_ptr
      );
    static ::CORBA::EnumDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::EnumDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ALIASDEF__TRAITS_)
#define _CORBA_ALIASDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::AliasDef>
  {
    static ::CORBA::AliasDef_ptr duplicate (
        ::CORBA::AliasDef_ptr
      );
    static void release (
        ::CORBA::AliasDef_ptr
      );
    static ::CORBA::AliasDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::AliasDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_NATIVEDEF__TRAITS_)
#define _CORBA_NATIVEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::NativeDef>
  {
    static ::CORBA::NativeDef_ptr duplicate (
        ::CORBA::NativeDef_ptr
      );
    static void release (
        ::CORBA::NativeDef_ptr
      );
    static ::CORBA::NativeDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::NativeDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_PRIMITIVEDEF__TRAITS_)
#define _CORBA_PRIMITIVEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::PrimitiveDef>
  {
    static ::CORBA::PrimitiveDef_ptr duplicate (
        ::CORBA::PrimitiveDef_ptr
      );
    static void release (
        ::CORBA::PrimitiveDef_ptr
      );
    static ::CORBA::PrimitiveDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::PrimitiveDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_STRINGDEF__TRAITS_)
#define _CORBA_STRINGDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::StringDef>
  {
    static ::CORBA::StringDef_ptr duplicate (
        ::CORBA::StringDef_ptr
      );
    static void release (
        ::CORBA::StringDef_ptr
      );
    static ::CORBA::StringDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::StringDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_WSTRINGDEF__TRAITS_)
#define _CORBA_WSTRINGDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::WstringDef>
  {
    static ::CORBA::WstringDef_ptr duplicate (
        ::CORBA::WstringDef_ptr
      );
    static void release (
        ::CORBA::WstringDef_ptr
      );
    static ::CORBA::WstringDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::WstringDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCEDEF__TRAITS_)
#define _CORBA_SEQUENCEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::SequenceDef>
  {
    static ::CORBA::SequenceDef_ptr duplicate (
        ::CORBA::SequenceDef_ptr
      );
    static void release (
        ::CORBA::SequenceDef_ptr
      );
    static ::CORBA::SequenceDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::SequenceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ARRAYDEF__TRAITS_)
#define _CORBA_ARRAYDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ArrayDef>
  {
    static ::CORBA::ArrayDef_ptr duplicate (
        ::CORBA::ArrayDef_ptr
      );
    static void release (
        ::CORBA::ArrayDef_ptr
      );
    static ::CORBA::ArrayDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::ArrayDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXCEPTIONDEF__TRAITS_)
#define _CORBA_EXCEPTIONDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExceptionDef>
  {
    static ::CORBA::ExceptionDef_ptr duplicate (
        ::CORBA::ExceptionDef_ptr
      );
    static void release (
        ::CORBA::ExceptionDef_ptr
      );
    static ::CORBA::ExceptionDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::ExceptionDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ATTRIBUTEDEF__TRAITS_)
#define _CORBA_ATTRIBUTEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::AttributeDef>
  {
    static ::CORBA::AttributeDef_ptr duplicate (
        ::CORBA::AttributeDef_ptr
      );
    static void release (
        ::CORBA::AttributeDef_ptr
      );
    static ::CORBA::AttributeDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::AttributeDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTATTRIBUTEDEF__TRAITS_)
#define _CORBA_EXTATTRIBUTEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExtAttributeDef>
  {
    static ::CORBA::ExtAttributeDef_ptr duplicate (
        ::CORBA::ExtAttributeDef_ptr
      );
    static void release (
        ::CORBA::ExtAttributeDef_ptr
      );
    static ::CORBA::ExtAttributeDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::ExtAttributeDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_OPERATIONDEF__TRAITS_)
#define _CORBA_OPERATIONDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::OperationDef>
  {
    static ::CORBA::OperationDef_ptr duplicate (
        ::CORBA::OperationDef_ptr
      );
    static void release (
        ::CORBA::OperationDef_ptr
      );
    static ::CORBA::OperationDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::OperationDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_INTERFACEDEF__TRAITS_)
#define _CORBA_INTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::InterfaceDef>
  {
    static ::CORBA::InterfaceDef_ptr duplicate (
        ::CORBA::InterfaceDef_ptr
      );
    static void release (
        ::CORBA::InterfaceDef_ptr
      );
    static ::CORBA::InterfaceDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::InterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_INTERFACEATTREXTENSION__TRAITS_)
#define _CORBA_INTERFACEATTREXTENSION__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::InterfaceAttrExtension>
  {
    static ::CORBA::InterfaceAttrExtension_ptr duplicate (
        ::CORBA::InterfaceAttrExtension_ptr
      );
    static void release (
        ::CORBA::InterfaceAttrExtension_ptr
      );
    static ::CORBA::InterfaceAttrExtension_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::InterfaceAttrExtension_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTINTERFACEDEF__TRAITS_)
#define _CORBA_EXTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExtInterfaceDef>
  {
    static ::CORBA::ExtInterfaceDef_ptr duplicate (
        ::CORBA::ExtInterfaceDef_ptr
      );
    static void release (
        ::CORBA::ExtInterfaceDef_ptr
      );
    static ::CORBA::ExtInterfaceDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::ExtInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__TRAITS_)
#define _CORBA_ABSTRACTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::AbstractInterfaceDef>
  {
    static ::CORBA::AbstractInterfaceDef_ptr duplicate (
        ::CORBA::AbstractInterfaceDef_ptr
      );
    static void release (
        ::CORBA::AbstractInterfaceDef_ptr
      );
    static ::CORBA::AbstractInterfaceDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::AbstractInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__TRAITS_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExtAbstractInterfaceDef>
  {
    static ::CORBA::ExtAbstractInterfaceDef_ptr duplicate (
        ::CORBA::ExtAbstractInterfaceDef_ptr
      );
    static void release (
        ::CORBA::ExtAbstractInterfaceDef_ptr
      );
    static ::CORBA::ExtAbstractInterfaceDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::ExtAbstractInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_LOCALINTERFACEDEF__TRAITS_)
#define _CORBA_LOCALINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::LocalInterfaceDef>
  {
    static ::CORBA::LocalInterfaceDef_ptr duplicate (
        ::CORBA::LocalInterfaceDef_ptr
      );
    static void release (
        ::CORBA::LocalInterfaceDef_ptr
      );
    static ::CORBA::LocalInterfaceDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::LocalInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__TRAITS_)
#define _CORBA_EXTLOCALINTERFACEDEF__TRAITS_

  template<>
  struct TAO_IFR_Client_Export Objref_Traits< ::CORBA::ExtLocalInterfaceDef>
  {
    static ::CORBA::ExtLocalInterfaceDef_ptr duplicate (
        ::CORBA::ExtLocalInterfaceDef_ptr
      );
    static void release (
        ::CORBA::ExtLocalInterfaceDef_ptr
      );
    static ::CORBA::ExtLocalInterfaceDef_ptr nil (void);
    static CORBA::Boolean marshal (
        ::CORBA::ExtLocalInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:63

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::FixedDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::FixedDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::FixedDef *&);

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveKind);
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::PrimitiveKind &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Repository_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Repository_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Repository_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ModuleDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ModuleDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ModuleDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ModuleDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ModuleDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ModuleDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ModuleDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ConstantDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ConstantDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ConstantDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ConstantDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ConstantDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ConstantDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ConstantDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StructDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StructDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::StructDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::UnionDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::UnionDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::UnionDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::EnumDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::EnumDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::EnumDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AliasDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AliasDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AliasDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::NativeDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::NativeDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::NativeDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::PrimitiveDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StringDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StringDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::StringDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::WstringDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::WstringDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::WstringDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::SequenceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::SequenceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::SequenceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ArrayDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ArrayDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ArrayDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExceptionDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExceptionDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExceptionDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExceptionDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeMode);
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttributeMode &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttributeDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::AttributeDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttributeDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::AttributeDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtAttributeDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAttributeDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAttributeDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtAttributeDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAttributeDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAttributeDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAttributeDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationMode);
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OperationMode &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ParameterDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ParameterDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ParameterDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ParameterDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ParDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ParDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ParDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ParDescriptionSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ContextIdSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ContextIdSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ContextIdSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ContextIdSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OperationDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::OperationDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OperationDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::OperationDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::RepositoryIdSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::RepositoryIdSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::RepositoryIdSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::RepositoryIdSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::OpDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OpDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OpDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::OpDescriptionSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::AttrDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttrDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttrDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::AttrDescriptionSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtAttrDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAttrDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAttrDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtAttrDescriptionSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::InterfaceDef::FullInterfaceDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef::FullInterfaceDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDef::FullInterfaceDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::InterfaceDef::FullInterfaceDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::InterfaceDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::InterfaceDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceAttrExtension_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceAttrExtension_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceAttrExtension_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AbstractInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AbstractInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::LocalInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::LocalInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::LocalInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:53

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::FixedDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::FixedDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, CORBA::PrimitiveKind);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PrimitiveKind &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Repository_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Repository_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ModuleDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ModuleDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ModuleDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ModuleDescription &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ConstantDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ConstantDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ConstantDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ConstantDescription &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StructDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StructDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::UnionDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::UnionDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::EnumDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::EnumDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AliasDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AliasDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::NativeDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::NativeDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::PrimitiveDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PrimitiveDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StringDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StringDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::WstringDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::WstringDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::SequenceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::SequenceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ArrayDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ArrayDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExceptionDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExceptionDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExceptionDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExceptionDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, CORBA::AttributeMode);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeMode &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeDescription &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAttributeDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAttributeDescription &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAttributeDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAttributeDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, CORBA::OperationMode);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationMode &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ParameterDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ParameterDescription &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ParDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ParDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ContextIdSeq_H_
#define _TAO_CDR_OP_CORBA_ContextIdSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ContextIdSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ContextIdSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ContextIdSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationDescription &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_
#define _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::RepositoryIdSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::RepositoryIdSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::OpDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::OpDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::AttrDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::AttrDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExtAttrDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExtAttrDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef::FullInterfaceDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef::FullInterfaceDescription &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDescription &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceAttrExtension_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceAttrExtension_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AbstractInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AbstractInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAbstractInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAbstractInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::LocalInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::LocalInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtLocalInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtLocalInterfaceDef_ptr &);

// TAO_IDL - Generated from
// be\be_codegen.cpp:1136

TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "IFR_BasicC.inl"
#endif /* defined INLINE */

#if defined(_MSC_VER)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include /**/ "ace/post.h"

#endif /* ifndef */


