// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:153

#ifndef _TAO_IDL_ORIG_RTCORBAC_H_
#define _TAO_IDL_ORIG_RTCORBAC_H_

#include /**/ "ace/pre.h"


#include "ace/config-all.h"

#ifndef TAO_RTCORBA_SAFE_INCLUDE
#error "You should not include RTCORBAC.h directly, use RTCORBA.h"
#endif /* !TAO_RTCORBA_SAFE_INCLUDE */

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "rtcorba_export.h"
#include "rtcorba_typedefs.h"
#include "tao/ORB.h"
#include "tao/TimeBaseC.h"
#include "tao/SystemException.h"
#include "tao/Environment.h"
#include "tao/Object.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"

#include "tao/IOPC.h"
#include "tao/TimeBaseC.h"
#include "tao/PolicyC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_RTCORBA_Export

#if defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// be\be_visitor_module/module_ch.cpp:48

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace RTCORBA
{

  // TAO_IDL - Generated from
  // be\be_visitor_typedef/typedef_ch.cpp:379

  typedef CORBA::Short NativePriority;
  typedef CORBA::Short_out NativePriority_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_NativePriority;

  // TAO_IDL - Generated from
  // be\be_visitor_typedef/typedef_ch.cpp:379

  typedef CORBA::Short Priority;
  typedef CORBA::Short_out Priority_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_Priority;

  // TAO_IDL - Generated from
  // be\be_visitor_constant/constant_ch.cpp:52

  const RTCORBA::Priority minPriority = 0;

  // TAO_IDL - Generated from
  // be\be_visitor_constant/constant_ch.cpp:52

  const RTCORBA::Priority maxPriority = 32767;

  // TAO_IDL - Generated from
  // be\be_visitor_typedef/typedef_ch.cpp:379

  typedef CORBA::Long NetworkPriority;
  typedef CORBA::Long_out NetworkPriority_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_NetworkPriority;

  // TAO_IDL - Generated from
  // be\be_visitor_typedef/typedef_ch.cpp:379

  typedef CORBA::ULong ThreadpoolId;
  typedef CORBA::ULong_out ThreadpoolId_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ThreadpoolId;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct ThreadpoolLane;

  typedef
    TAO_Fixed_Var_T<
        ThreadpoolLane
      >
    ThreadpoolLane_var;

  typedef
    ThreadpoolLane &
    ThreadpoolLane_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52

  struct TAO_RTCORBA_Export ThreadpoolLane
  {
    typedef ThreadpoolLane_var _var_type;

    static void _tao_any_destructor (void *);
    RTCORBA::Priority lane_priority;
    CORBA::ULong static_threads;
    CORBA::ULong dynamic_threads;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ThreadpoolLane;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_RTCORBA_THREADPOOLLANES_CH_)
#define _RTCORBA_THREADPOOLLANES_CH_

  class ThreadpoolLanes;

  typedef
    TAO_FixedSeq_Var_T<
        ThreadpoolLanes
      >
    ThreadpoolLanes_var;

  typedef
    TAO_Seq_Out_T<
        ThreadpoolLanes
      >
    ThreadpoolLanes_out;

  class TAO_RTCORBA_Export ThreadpoolLanes
    : public
        TAO::unbounded_value_sequence<
            ThreadpoolLane
          >
  {
  public:
    ThreadpoolLanes (void);
    ThreadpoolLanes (CORBA::ULong max);
    ThreadpoolLanes (
        CORBA::ULong max,
        CORBA::ULong length,
        ThreadpoolLane* buffer,
        CORBA::Boolean release = false
      );
    ThreadpoolLanes (const ThreadpoolLanes &);
    ~ThreadpoolLanes (void);

    static void _tao_any_destructor (void *);

    typedef ThreadpoolLanes_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ThreadpoolLanes;

  // TAO_IDL - Generated from
  // be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType PRIORITY_MODEL_POLICY_TYPE = 40U;

  // TAO_IDL - Generated from
  // be\be_visitor_enum/enum_ch.cpp:57

  enum PriorityModel
  {
    CLIENT_PROPAGATED,
    SERVER_DECLARED
  };

  typedef PriorityModel &PriorityModel_out;

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityModel;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_PRIORITYMODELPOLICY__VAR_OUT_CH_)
#define _RTCORBA_PRIORITYMODELPOLICY__VAR_OUT_CH_

  class PriorityModelPolicy;
  typedef PriorityModelPolicy *PriorityModelPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        PriorityModelPolicy
      >
    PriorityModelPolicy_var;

  typedef
    TAO_Objref_Out_T<
        PriorityModelPolicy
      >
    PriorityModelPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_PRIORITYMODELPOLICY_CH_)
#define _RTCORBA_PRIORITYMODELPOLICY_CH_

  class TAO_RTCORBA_Export PriorityModelPolicy
    : public virtual ::CORBA::Policy
  {
  public:
    typedef PriorityModelPolicy_ptr _ptr_type;
    typedef PriorityModelPolicy_var _var_type;

    // The static operations.
    static PriorityModelPolicy_ptr _duplicate (PriorityModelPolicy_ptr obj);

    static void _tao_release (PriorityModelPolicy_ptr obj);

    static PriorityModelPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static PriorityModelPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static PriorityModelPolicy_ptr _nil (void)
    {
      return static_cast<PriorityModelPolicy_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::PriorityModel priority_model (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual RTCORBA::Priority server_priority (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::Policy_ptr copy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void destroy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    PriorityModelPolicy (void);

    virtual ~PriorityModelPolicy (void);

  private:
    // Private and unimplemented for concrete interfaces.
    PriorityModelPolicy (const PriorityModelPolicy &);

    void operator= (const PriorityModelPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityModelPolicy;

  // TAO_IDL - Generated from
  // be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType THREADPOOL_POLICY_TYPE = 41U;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_THREADPOOLPOLICY__VAR_OUT_CH_)
#define _RTCORBA_THREADPOOLPOLICY__VAR_OUT_CH_

  class ThreadpoolPolicy;
  typedef ThreadpoolPolicy *ThreadpoolPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        ThreadpoolPolicy
      >
    ThreadpoolPolicy_var;

  typedef
    TAO_Objref_Out_T<
        ThreadpoolPolicy
      >
    ThreadpoolPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_THREADPOOLPOLICY_CH_)
#define _RTCORBA_THREADPOOLPOLICY_CH_

  class TAO_RTCORBA_Export ThreadpoolPolicy
    : public virtual ::CORBA::Policy
  {
  public:
    typedef ThreadpoolPolicy_ptr _ptr_type;
    typedef ThreadpoolPolicy_var _var_type;

    // The static operations.
    static ThreadpoolPolicy_ptr _duplicate (ThreadpoolPolicy_ptr obj);

    static void _tao_release (ThreadpoolPolicy_ptr obj);

    static ThreadpoolPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ThreadpoolPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ThreadpoolPolicy_ptr _nil (void)
    {
      return static_cast<ThreadpoolPolicy_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual RTCORBA::ThreadpoolId threadpool (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::Policy_ptr copy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void destroy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    ThreadpoolPolicy (void);

    virtual ~ThreadpoolPolicy (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ThreadpoolPolicy (const ThreadpoolPolicy &);

    void operator= (const ThreadpoolPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ThreadpoolPolicy;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_PROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_PROTOCOLPROPERTIES__VAR_OUT_CH_

  class ProtocolProperties;
  typedef ProtocolProperties *ProtocolProperties_ptr;

  typedef
    TAO_Objref_Var_T<
        ProtocolProperties
      >
    ProtocolProperties_var;

  typedef
    TAO_Objref_Out_T<
        ProtocolProperties
      >
    ProtocolProperties_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_PROTOCOLPROPERTIES_CH_)
#define _RTCORBA_PROTOCOLPROPERTIES_CH_

  class TAO_RTCORBA_Export ProtocolProperties
    : public virtual CORBA::Object
  {
  public:
    typedef ProtocolProperties_ptr _ptr_type;
    typedef ProtocolProperties_var _var_type;

    // The static operations.
    static ProtocolProperties_ptr _duplicate (ProtocolProperties_ptr obj);

    static void _tao_release (ProtocolProperties_ptr obj);

    static ProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ProtocolProperties_ptr _nil (void)
    {
      return static_cast<ProtocolProperties_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

    // CDR Encoder/Decoder methods. (handcrafted)
    virtual CORBA::Boolean _tao_encode (TAO_OutputCDR &out_cdr);
    virtual CORBA::Boolean _tao_decode (TAO_InputCDR &in_cdr);
  protected:
    // Abstract or local interface only.
    ProtocolProperties (void);

    virtual ~ProtocolProperties (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ProtocolProperties (const ProtocolProperties &);

    void operator= (const ProtocolProperties &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ProtocolProperties;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct Protocol;

  typedef
    TAO_Var_Var_T<
        Protocol
      >
    Protocol_var;

  typedef
    TAO_Out_T<
        Protocol,
        Protocol_var
      >
    Protocol_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52

  struct TAO_RTCORBA_Export Protocol
  {
    typedef Protocol_var _var_type;

    static void _tao_any_destructor (void *);
    IOP::ProfileId protocol_type;
    RTCORBA::ProtocolProperties_var orb_protocol_properties;
    RTCORBA::ProtocolProperties_var transport_protocol_properties;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_Protocol;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_RTCORBA_PROTOCOLLIST_CH_)
#define _RTCORBA_PROTOCOLLIST_CH_

  class ProtocolList;

  typedef
    TAO_VarSeq_Var_T<
        ProtocolList
      >
    ProtocolList_var;

  typedef
    TAO_Seq_Out_T<
        ProtocolList
      >
    ProtocolList_out;

  class TAO_RTCORBA_Export ProtocolList
    : public
        TAO::unbounded_value_sequence<
            Protocol
          >
  {
  public:
    ProtocolList (void);
    ProtocolList (CORBA::ULong max);
    ProtocolList (
        CORBA::ULong max,
        CORBA::ULong length,
        Protocol* buffer,
        CORBA::Boolean release = false
      );
    ProtocolList (const ProtocolList &);
    ~ProtocolList (void);

    static void _tao_any_destructor (void *);

    typedef ProtocolList_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ProtocolList;

  // TAO_IDL - Generated from
  // be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType SERVER_PROTOCOL_POLICY_TYPE = 42U;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_SERVERPROTOCOLPOLICY__VAR_OUT_CH_)
#define _RTCORBA_SERVERPROTOCOLPOLICY__VAR_OUT_CH_

  class ServerProtocolPolicy;
  typedef ServerProtocolPolicy *ServerProtocolPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        ServerProtocolPolicy
      >
    ServerProtocolPolicy_var;

  typedef
    TAO_Objref_Out_T<
        ServerProtocolPolicy
      >
    ServerProtocolPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_SERVERPROTOCOLPOLICY_CH_)
#define _RTCORBA_SERVERPROTOCOLPOLICY_CH_

  class TAO_RTCORBA_Export ServerProtocolPolicy
    : public virtual ::CORBA::Policy
  {
  public:
    typedef ServerProtocolPolicy_ptr _ptr_type;
    typedef ServerProtocolPolicy_var _var_type;

    // The static operations.
    static ServerProtocolPolicy_ptr _duplicate (ServerProtocolPolicy_ptr obj);

    static void _tao_release (ServerProtocolPolicy_ptr obj);

    static ServerProtocolPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ServerProtocolPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ServerProtocolPolicy_ptr _nil (void)
    {
      return static_cast<ServerProtocolPolicy_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::ProtocolList * protocols (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::Policy_ptr copy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void destroy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    ServerProtocolPolicy (void);

    virtual ~ServerProtocolPolicy (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ServerProtocolPolicy (const ServerProtocolPolicy &);

    void operator= (const ServerProtocolPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ServerProtocolPolicy;

  // TAO_IDL - Generated from
  // be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType CLIENT_PROTOCOL_POLICY_TYPE = 43U;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_CLIENTPROTOCOLPOLICY__VAR_OUT_CH_)
#define _RTCORBA_CLIENTPROTOCOLPOLICY__VAR_OUT_CH_

  class ClientProtocolPolicy;
  typedef ClientProtocolPolicy *ClientProtocolPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        ClientProtocolPolicy
      >
    ClientProtocolPolicy_var;

  typedef
    TAO_Objref_Out_T<
        ClientProtocolPolicy
      >
    ClientProtocolPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_CLIENTPROTOCOLPOLICY_CH_)
#define _RTCORBA_CLIENTPROTOCOLPOLICY_CH_

  class TAO_RTCORBA_Export ClientProtocolPolicy
    : public virtual ::CORBA::Policy
  {
  public:
    typedef ClientProtocolPolicy_ptr _ptr_type;
    typedef ClientProtocolPolicy_var _var_type;

    // The static operations.
    static ClientProtocolPolicy_ptr _duplicate (ClientProtocolPolicy_ptr obj);

    static void _tao_release (ClientProtocolPolicy_ptr obj);

    static ClientProtocolPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ClientProtocolPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ClientProtocolPolicy_ptr _nil (void)
    {
      return static_cast<ClientProtocolPolicy_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::ProtocolList * protocols (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::Policy_ptr copy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void destroy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    ClientProtocolPolicy (void);

    virtual ~ClientProtocolPolicy (void);

  private:
    // Private and unimplemented for concrete interfaces.
    ClientProtocolPolicy (const ClientProtocolPolicy &);

    void operator= (const ClientProtocolPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_ClientProtocolPolicy;

  // TAO_IDL - Generated from
  // be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType PRIVATE_CONNECTION_POLICY_TYPE = 44U;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_PRIVATECONNECTIONPOLICY__VAR_OUT_CH_)
#define _RTCORBA_PRIVATECONNECTIONPOLICY__VAR_OUT_CH_

  class PrivateConnectionPolicy;
  typedef PrivateConnectionPolicy *PrivateConnectionPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        PrivateConnectionPolicy
      >
    PrivateConnectionPolicy_var;

  typedef
    TAO_Objref_Out_T<
        PrivateConnectionPolicy
      >
    PrivateConnectionPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_PRIVATECONNECTIONPOLICY_CH_)
#define _RTCORBA_PRIVATECONNECTIONPOLICY_CH_

  class TAO_RTCORBA_Export PrivateConnectionPolicy
    : public virtual ::CORBA::Policy
  {
  public:
    typedef PrivateConnectionPolicy_ptr _ptr_type;
    typedef PrivateConnectionPolicy_var _var_type;

    // The static operations.
    static PrivateConnectionPolicy_ptr _duplicate (PrivateConnectionPolicy_ptr obj);

    static void _tao_release (PrivateConnectionPolicy_ptr obj);

    static PrivateConnectionPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static PrivateConnectionPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static PrivateConnectionPolicy_ptr _nil (void)
    {
      return static_cast<PrivateConnectionPolicy_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::Policy_ptr copy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void destroy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    PrivateConnectionPolicy (void);

    virtual ~PrivateConnectionPolicy (void);

  private:
    // Private and unimplemented for concrete interfaces.
    PrivateConnectionPolicy (const PrivateConnectionPolicy &);

    void operator= (const PrivateConnectionPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PrivateConnectionPolicy;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_TCPPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_TCPPROTOCOLPROPERTIES__VAR_OUT_CH_

  class TCPProtocolProperties;
  typedef TCPProtocolProperties *TCPProtocolProperties_ptr;

  typedef
    TAO_Objref_Var_T<
        TCPProtocolProperties
      >
    TCPProtocolProperties_var;

  typedef
    TAO_Objref_Out_T<
        TCPProtocolProperties
      >
    TCPProtocolProperties_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_TCPPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_TCPPROTOCOLPROPERTIES_CH_

  class TAO_RTCORBA_Export TCPProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  {
  public:
    typedef TCPProtocolProperties_ptr _ptr_type;
    typedef TCPProtocolProperties_var _var_type;

    // The static operations.
    static TCPProtocolProperties_ptr _duplicate (TCPProtocolProperties_ptr obj);

    static void _tao_release (TCPProtocolProperties_ptr obj);

    static TCPProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static TCPProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static TCPProtocolProperties_ptr _nil (void)
    {
      return static_cast<TCPProtocolProperties_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long send_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void send_buffer_size (
        ::CORBA::Long send_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long recv_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void recv_buffer_size (
        ::CORBA::Long recv_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean keep_alive (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void keep_alive (
        ::CORBA::Boolean keep_alive
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean dont_route (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void dont_route (
        ::CORBA::Boolean dont_route
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean no_delay (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void no_delay (
        ::CORBA::Boolean no_delay
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean enable_network_priority (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void enable_network_priority (
        ::CORBA::Boolean enable_network_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    TCPProtocolProperties (void);

    virtual ~TCPProtocolProperties (void);

  private:
    // Private and unimplemented for concrete interfaces.
    TCPProtocolProperties (const TCPProtocolProperties &);

    void operator= (const TCPProtocolProperties &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_TCPProtocolProperties;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_GIOPPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_GIOPPROTOCOLPROPERTIES__VAR_OUT_CH_

  class GIOPProtocolProperties;
  typedef GIOPProtocolProperties *GIOPProtocolProperties_ptr;

  typedef
    TAO_Objref_Var_T<
        GIOPProtocolProperties
      >
    GIOPProtocolProperties_var;

  typedef
    TAO_Objref_Out_T<
        GIOPProtocolProperties
      >
    GIOPProtocolProperties_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_GIOPPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_GIOPPROTOCOLPROPERTIES_CH_

  class TAO_RTCORBA_Export GIOPProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  {
  public:
    typedef GIOPProtocolProperties_ptr _ptr_type;
    typedef GIOPProtocolProperties_var _var_type;

    // The static operations.
    static GIOPProtocolProperties_ptr _duplicate (GIOPProtocolProperties_ptr obj);

    static void _tao_release (GIOPProtocolProperties_ptr obj);

    static GIOPProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static GIOPProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static GIOPProtocolProperties_ptr _nil (void)
    {
      return static_cast<GIOPProtocolProperties_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    GIOPProtocolProperties (void);

    virtual ~GIOPProtocolProperties (void);

  private:
    // Private and unimplemented for concrete interfaces.
    GIOPProtocolProperties (const GIOPProtocolProperties &);

    void operator= (const GIOPProtocolProperties &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_GIOPProtocolProperties;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__VAR_OUT_CH_

  class UnixDomainProtocolProperties;
  typedef UnixDomainProtocolProperties *UnixDomainProtocolProperties_ptr;

  typedef
    TAO_Objref_Var_T<
        UnixDomainProtocolProperties
      >
    UnixDomainProtocolProperties_var;

  typedef
    TAO_Objref_Out_T<
        UnixDomainProtocolProperties
      >
    UnixDomainProtocolProperties_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES_CH_

  class TAO_RTCORBA_Export UnixDomainProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  {
  public:
    typedef UnixDomainProtocolProperties_ptr _ptr_type;
    typedef UnixDomainProtocolProperties_var _var_type;

    // The static operations.
    static UnixDomainProtocolProperties_ptr _duplicate (UnixDomainProtocolProperties_ptr obj);

    static void _tao_release (UnixDomainProtocolProperties_ptr obj);

    static UnixDomainProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static UnixDomainProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static UnixDomainProtocolProperties_ptr _nil (void)
    {
      return static_cast<UnixDomainProtocolProperties_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long send_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void send_buffer_size (
        ::CORBA::Long send_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long recv_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void recv_buffer_size (
        ::CORBA::Long recv_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    UnixDomainProtocolProperties (void);

    virtual ~UnixDomainProtocolProperties (void);

  private:
    // Private and unimplemented for concrete interfaces.
    UnixDomainProtocolProperties (const UnixDomainProtocolProperties &);

    void operator= (const UnixDomainProtocolProperties &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_UnixDomainProtocolProperties;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__VAR_OUT_CH_

  class SharedMemoryProtocolProperties;
  typedef SharedMemoryProtocolProperties *SharedMemoryProtocolProperties_ptr;

  typedef
    TAO_Objref_Var_T<
        SharedMemoryProtocolProperties
      >
    SharedMemoryProtocolProperties_var;

  typedef
    TAO_Objref_Out_T<
        SharedMemoryProtocolProperties
      >
    SharedMemoryProtocolProperties_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES_CH_

  class TAO_RTCORBA_Export SharedMemoryProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  {
  public:
    typedef SharedMemoryProtocolProperties_ptr _ptr_type;
    typedef SharedMemoryProtocolProperties_var _var_type;

    // The static operations.
    static SharedMemoryProtocolProperties_ptr _duplicate (SharedMemoryProtocolProperties_ptr obj);

    static void _tao_release (SharedMemoryProtocolProperties_ptr obj);

    static SharedMemoryProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static SharedMemoryProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static SharedMemoryProtocolProperties_ptr _nil (void)
    {
      return static_cast<SharedMemoryProtocolProperties_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long send_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void send_buffer_size (
        ::CORBA::Long send_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long recv_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void recv_buffer_size (
        ::CORBA::Long recv_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean keep_alive (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void keep_alive (
        ::CORBA::Boolean keep_alive
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean dont_route (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void dont_route (
        ::CORBA::Boolean dont_route
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean no_delay (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void no_delay (
        ::CORBA::Boolean no_delay
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long preallocate_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void preallocate_buffer_size (
        ::CORBA::Long preallocate_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual char * mmap_filename (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void mmap_filename (
        const char * mmap_filename
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual char * mmap_lockname (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void mmap_lockname (
        const char * mmap_lockname
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    SharedMemoryProtocolProperties (void);

    virtual ~SharedMemoryProtocolProperties (void);

  private:
    // Private and unimplemented for concrete interfaces.
    SharedMemoryProtocolProperties (const SharedMemoryProtocolProperties &);

    void operator= (const SharedMemoryProtocolProperties &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_SharedMemoryProtocolProperties;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES__VAR_OUT_CH_

  class UserDatagramProtocolProperties;
  typedef UserDatagramProtocolProperties *UserDatagramProtocolProperties_ptr;

  typedef
    TAO_Objref_Var_T<
        UserDatagramProtocolProperties
      >
    UserDatagramProtocolProperties_var;

  typedef
    TAO_Objref_Out_T<
        UserDatagramProtocolProperties
      >
    UserDatagramProtocolProperties_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES_CH_

  class TAO_RTCORBA_Export UserDatagramProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  {
  public:
    typedef UserDatagramProtocolProperties_ptr _ptr_type;
    typedef UserDatagramProtocolProperties_var _var_type;

    // The static operations.
    static UserDatagramProtocolProperties_ptr _duplicate (UserDatagramProtocolProperties_ptr obj);

    static void _tao_release (UserDatagramProtocolProperties_ptr obj);

    static UserDatagramProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static UserDatagramProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static UserDatagramProtocolProperties_ptr _nil (void)
    {
      return static_cast<UserDatagramProtocolProperties_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean enable_network_priority (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void enable_network_priority (
        ::CORBA::Boolean enable_network_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    UserDatagramProtocolProperties (void);

    virtual ~UserDatagramProtocolProperties (void);

  private:
    // Private and unimplemented for concrete interfaces.
    UserDatagramProtocolProperties (const UserDatagramProtocolProperties &);

    void operator= (const UserDatagramProtocolProperties &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_UserDatagramProtocolProperties;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES__VAR_OUT_CH_)
#define _RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES__VAR_OUT_CH_

  class StreamControlProtocolProperties;
  typedef StreamControlProtocolProperties *StreamControlProtocolProperties_ptr;

  typedef
    TAO_Objref_Var_T<
        StreamControlProtocolProperties
      >
    StreamControlProtocolProperties_var;

  typedef
    TAO_Objref_Out_T<
        StreamControlProtocolProperties
      >
    StreamControlProtocolProperties_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES_CH_

  class TAO_RTCORBA_Export StreamControlProtocolProperties
    : public virtual ::RTCORBA::ProtocolProperties
  {
  public:
    typedef StreamControlProtocolProperties_ptr _ptr_type;
    typedef StreamControlProtocolProperties_var _var_type;

    // The static operations.
    static StreamControlProtocolProperties_ptr _duplicate (StreamControlProtocolProperties_ptr obj);

    static void _tao_release (StreamControlProtocolProperties_ptr obj);

    static StreamControlProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static StreamControlProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static StreamControlProtocolProperties_ptr _nil (void)
    {
      return static_cast<StreamControlProtocolProperties_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long send_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void send_buffer_size (
        ::CORBA::Long send_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Long recv_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void recv_buffer_size (
        ::CORBA::Long recv_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean keep_alive (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void keep_alive (
        ::CORBA::Boolean keep_alive
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean dont_route (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void dont_route (
        ::CORBA::Boolean dont_route
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean no_delay (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void no_delay (
        ::CORBA::Boolean no_delay
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean enable_network_priority (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void enable_network_priority (
        ::CORBA::Boolean enable_network_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    StreamControlProtocolProperties (void);

    virtual ~StreamControlProtocolProperties (void);

  private:
    // Private and unimplemented for concrete interfaces.
    StreamControlProtocolProperties (const StreamControlProtocolProperties &);

    void operator= (const StreamControlProtocolProperties &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_StreamControlProtocolProperties;

  // TAO_IDL - Generated from
  // be\be_type.cpp:258

  struct PriorityBand;

  typedef
    TAO_Fixed_Var_T<
        PriorityBand
      >
    PriorityBand_var;

  typedef
    PriorityBand &
    PriorityBand_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52

  struct TAO_RTCORBA_Export PriorityBand
  {
    typedef PriorityBand_var _var_type;

    static void _tao_any_destructor (void *);
    RTCORBA::Priority low;
    RTCORBA::Priority high;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityBand;

  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_RTCORBA_PRIORITYBANDS_CH_)
#define _RTCORBA_PRIORITYBANDS_CH_

  class PriorityBands;

  typedef
    TAO_FixedSeq_Var_T<
        PriorityBands
      >
    PriorityBands_var;

  typedef
    TAO_Seq_Out_T<
        PriorityBands
      >
    PriorityBands_out;

  class TAO_RTCORBA_Export PriorityBands
    : public
        TAO::unbounded_value_sequence<
            PriorityBand
          >
  {
  public:
    PriorityBands (void);
    PriorityBands (CORBA::ULong max);
    PriorityBands (
        CORBA::ULong max,
        CORBA::ULong length,
        PriorityBand* buffer,
        CORBA::Boolean release = false
      );
    PriorityBands (const PriorityBands &);
    ~PriorityBands (void);

    static void _tao_any_destructor (void *);

    typedef PriorityBands_var _var_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityBands;

  // TAO_IDL - Generated from
  // be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType PRIORITY_BANDED_CONNECTION_POLICY_TYPE = 45U;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__VAR_OUT_CH_)
#define _RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__VAR_OUT_CH_

  class PriorityBandedConnectionPolicy;
  typedef PriorityBandedConnectionPolicy *PriorityBandedConnectionPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        PriorityBandedConnectionPolicy
      >
    PriorityBandedConnectionPolicy_var;

  typedef
    TAO_Objref_Out_T<
        PriorityBandedConnectionPolicy
      >
    PriorityBandedConnectionPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY_CH_)
#define _RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY_CH_

  class TAO_RTCORBA_Export PriorityBandedConnectionPolicy
    : public virtual ::CORBA::Policy
  {
  public:
    typedef PriorityBandedConnectionPolicy_ptr _ptr_type;
    typedef PriorityBandedConnectionPolicy_var _var_type;

    // The static operations.
    static PriorityBandedConnectionPolicy_ptr _duplicate (PriorityBandedConnectionPolicy_ptr obj);

    static void _tao_release (PriorityBandedConnectionPolicy_ptr obj);

    static PriorityBandedConnectionPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static PriorityBandedConnectionPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static PriorityBandedConnectionPolicy_ptr _nil (void)
    {
      return static_cast<PriorityBandedConnectionPolicy_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::PriorityBands * priority_bands (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::Policy_ptr copy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void destroy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    PriorityBandedConnectionPolicy (void);

    virtual ~PriorityBandedConnectionPolicy (void);

  private:
    // Private and unimplemented for concrete interfaces.
    PriorityBandedConnectionPolicy (const PriorityBandedConnectionPolicy &);

    void operator= (const PriorityBandedConnectionPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_PriorityBandedConnectionPolicy;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_CURRENT__VAR_OUT_CH_)
#define _RTCORBA_CURRENT__VAR_OUT_CH_

  class Current;
  typedef Current *Current_ptr;

  typedef
    TAO_Objref_Var_T<
        Current
      >
    Current_var;

  typedef
    TAO_Objref_Out_T<
        Current
      >
    Current_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_CURRENT_CH_)
#define _RTCORBA_CURRENT_CH_

  class TAO_RTCORBA_Export Current
    : public virtual ::CORBA::Current
  {
  public:
    typedef Current_ptr _ptr_type;
    typedef Current_var _var_type;

    // The static operations.
    static Current_ptr _duplicate (Current_ptr obj);

    static void _tao_release (Current_ptr obj);

    static Current_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static Current_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static Current_ptr _nil (void)
    {
      return static_cast<Current_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual RTCORBA::Priority the_priority (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void the_priority (
        ::RTCORBA::Priority the_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    Current (void);

    virtual ~Current (void);

  private:
    // Private and unimplemented for concrete interfaces.
    Current (const Current &);

    void operator= (const Current &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_Current;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_MUTEX__VAR_OUT_CH_)
#define _RTCORBA_MUTEX__VAR_OUT_CH_

  class Mutex;
  typedef Mutex *Mutex_ptr;

  typedef
    TAO_Objref_Var_T<
        Mutex
      >
    Mutex_var;

  typedef
    TAO_Objref_Out_T<
        Mutex
      >
    Mutex_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_MUTEX_CH_)
#define _RTCORBA_MUTEX_CH_

  class TAO_RTCORBA_Export Mutex
    : public virtual CORBA::Object
  {
  public:
    typedef Mutex_ptr _ptr_type;
    typedef Mutex_var _var_type;

    // The static operations.
    static Mutex_ptr _duplicate (Mutex_ptr obj);

    static void _tao_release (Mutex_ptr obj);

    static Mutex_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static Mutex_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static Mutex_ptr _nil (void)
    {
      return static_cast<Mutex_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void lock (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void unlock (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::Boolean try_lock (
        ::TimeBase::TimeT max_wait
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    Mutex (void);

    virtual ~Mutex (void);

  private:
    // Private and unimplemented for concrete interfaces.
    Mutex (const Mutex &);

    void operator= (const Mutex &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_Mutex;

  // TAO_IDL - Generated from
  // be\be_interface.cpp:598

#if !defined (_RTCORBA_RTORB__VAR_OUT_CH_)
#define _RTCORBA_RTORB__VAR_OUT_CH_

  class RTORB;
  typedef RTORB *RTORB_ptr;

  typedef
    TAO_Objref_Var_T<
        RTORB
      >
    RTORB_var;

  typedef
    TAO_Objref_Out_T<
        RTORB
      >
    RTORB_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTCORBA_RTORB_CH_)
#define _RTCORBA_RTORB_CH_

  class TAO_RTCORBA_Export RTORB
    : public virtual CORBA::Object
  {
  public:
    typedef RTORB_ptr _ptr_type;
    typedef RTORB_var _var_type;

    // The static operations.
    static RTORB_ptr _duplicate (RTORB_ptr obj);

    static void _tao_release (RTORB_ptr obj);

    static RTORB_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RTORB_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RTORB_ptr _nil (void)
    {
      return static_cast<RTORB_ptr> (0);
    }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::Mutex_ptr create_mutex (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void destroy_mutex (
        ::RTCORBA::Mutex_ptr the_mutex
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_RTCORBA_RTORB_MUTEXNOTFOUND_CH_)
#define _RTCORBA_RTORB_MUTEXNOTFOUND_CH_

    class TAO_RTCORBA_Export MutexNotFound : public CORBA::UserException
    {
    public:

      MutexNotFound (void);
      MutexNotFound (const MutexNotFound &);
      ~MutexNotFound (void);

      MutexNotFound &operator= (const MutexNotFound &);

      static void _tao_any_destructor (void *);

      static MutexNotFound *_downcast (CORBA::Exception *);
      static const MutexNotFound *_downcast (CORBA::Exception const *);

      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL
        ) const;

      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL
        );

      // TAO_IDL - Generated from
      // be\be_visitor_exception/exception_ch.cpp:129

      virtual CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // be\be_visitor_typecode/typecode_decl.cpp:44

    static ::CORBA::TypeCode_ptr const _tc_MutexNotFound;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::Mutex_ptr create_named_mutex (
        const char * name,
        ::CORBA::Boolean_out created_flag
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::Mutex_ptr open_named_mutex (
        const char * name
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException,
        ::RTCORBA::RTORB::MutexNotFound
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::TCPProtocolProperties_ptr create_tcp_protocol_properties (
        ::CORBA::Long send_buffer_size,
        ::CORBA::Long recv_buffer_size,
        ::CORBA::Boolean keep_alive,
        ::CORBA::Boolean dont_route,
        ::CORBA::Boolean no_delay,
        ::CORBA::Boolean enable_network_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::UnixDomainProtocolProperties_ptr create_unix_domain_protocol_properties (
        ::CORBA::Long send_buffer_size,
        ::CORBA::Long recv_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::SharedMemoryProtocolProperties_ptr create_shared_memory_protocol_properties (
        ::CORBA::Long send_buffer_size,
        ::CORBA::Long recv_buffer_size,
        ::CORBA::Boolean keep_alive,
        ::CORBA::Boolean dont_route,
        ::CORBA::Boolean no_delay,
        ::CORBA::Long preallocate_buffer_size,
        const char * mmap_filename,
        const char * mmap_lockname
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::UserDatagramProtocolProperties_ptr create_user_datagram_protocol_properties (
        ::CORBA::Boolean enable_network_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::StreamControlProtocolProperties_ptr create_stream_control_protocol_properties (
        ::CORBA::Long send_buffer_size,
        ::CORBA::Long recv_buffer_size,
        ::CORBA::Boolean keep_alive,
        ::CORBA::Boolean dont_route,
        ::CORBA::Boolean no_delay,
        ::CORBA::Boolean enable_network_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_RTCORBA_RTORB_INVALIDTHREADPOOL_CH_)
#define _RTCORBA_RTORB_INVALIDTHREADPOOL_CH_

    class TAO_RTCORBA_Export InvalidThreadpool : public CORBA::UserException
    {
    public:

      InvalidThreadpool (void);
      InvalidThreadpool (const InvalidThreadpool &);
      ~InvalidThreadpool (void);

      InvalidThreadpool &operator= (const InvalidThreadpool &);

      static void _tao_any_destructor (void *);

      static InvalidThreadpool *_downcast (CORBA::Exception *);
      static const InvalidThreadpool *_downcast (CORBA::Exception const *);

      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL
        ) const;

      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL
        );

      // TAO_IDL - Generated from
      // be\be_visitor_exception/exception_ch.cpp:129

      virtual CORBA::TypeCode_ptr _tao_type (void) const;
    };

    // TAO_IDL - Generated from
    // be\be_visitor_typecode/typecode_decl.cpp:44

    static ::CORBA::TypeCode_ptr const _tc_InvalidThreadpool;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual RTCORBA::ThreadpoolId create_threadpool (
        ::CORBA::ULong stacksize,
        ::CORBA::ULong static_threads,
        ::CORBA::ULong dynamic_threads,
        ::RTCORBA::Priority default_priority,
        ::CORBA::Boolean allow_request_buffering,
        ::CORBA::ULong max_buffered_requests,
        ::CORBA::ULong max_request_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual RTCORBA::ThreadpoolId create_threadpool_with_lanes (
        ::CORBA::ULong stacksize,
        const ::RTCORBA::ThreadpoolLanes & lanes,
        ::CORBA::Boolean allow_borrowing,
        ::CORBA::Boolean allow_request_buffering,
        ::CORBA::ULong max_buffered_requests,
        ::CORBA::ULong max_request_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual void destroy_threadpool (
        ::RTCORBA::ThreadpoolId threadpool
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException,
        ::RTCORBA::RTORB::InvalidThreadpool
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::PriorityModelPolicy_ptr create_priority_model_policy (
        ::RTCORBA::PriorityModel priority_model,
        ::RTCORBA::Priority server_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::ThreadpoolPolicy_ptr create_threadpool_policy (
        ::RTCORBA::ThreadpoolId threadpool
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::PriorityBandedConnectionPolicy_ptr create_priority_banded_connection_policy (
        const ::RTCORBA::PriorityBands & priority_bands
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::ServerProtocolPolicy_ptr create_server_protocol_policy (
        const ::RTCORBA::ProtocolList & protocols
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::ClientProtocolPolicy_ptr create_client_protocol_policy (
        const ::RTCORBA::ProtocolList & protocols
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46

    virtual ::RTCORBA::PrivateConnectionPolicy_ptr create_private_connection_policy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:210

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Abstract or local interface only.
    RTORB (void);

    virtual ~RTORB (void);

  private:
    // Private and unimplemented for concrete interfaces.
    RTORB (const RTORB &);

    void operator= (const RTORB &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44

  extern TAO_RTCORBA_Export ::CORBA::TypeCode_ptr const _tc_RTORB;

// TAO_IDL - Generated from
// be\be_visitor_module/module_ch.cpp:66

} // module RTCORBA

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:61

// Traits specializations.
namespace TAO
{

#if !defined (_RTCORBA_PRIORITYMODELPOLICY__TRAITS_CH_)
#define _RTCORBA_PRIORITYMODELPOLICY__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::PriorityModelPolicy>
  {
    static ::RTCORBA::PriorityModelPolicy_ptr duplicate (
        ::RTCORBA::PriorityModelPolicy_ptr
      );
    static void release (
        ::RTCORBA::PriorityModelPolicy_ptr
      );
    static ::RTCORBA::PriorityModelPolicy_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::PriorityModelPolicy_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_THREADPOOLPOLICY__TRAITS_CH_)
#define _RTCORBA_THREADPOOLPOLICY__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::ThreadpoolPolicy>
  {
    static ::RTCORBA::ThreadpoolPolicy_ptr duplicate (
        ::RTCORBA::ThreadpoolPolicy_ptr
      );
    static void release (
        ::RTCORBA::ThreadpoolPolicy_ptr
      );
    static ::RTCORBA::ThreadpoolPolicy_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::ThreadpoolPolicy_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_PROTOCOLPROPERTIES__TRAITS_CH_)
#define _RTCORBA_PROTOCOLPROPERTIES__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::ProtocolProperties>
  {
    static ::RTCORBA::ProtocolProperties_ptr duplicate (
        ::RTCORBA::ProtocolProperties_ptr
      );
    static void release (
        ::RTCORBA::ProtocolProperties_ptr
      );
    static ::RTCORBA::ProtocolProperties_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::ProtocolProperties_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_SERVERPROTOCOLPOLICY__TRAITS_CH_)
#define _RTCORBA_SERVERPROTOCOLPOLICY__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::ServerProtocolPolicy>
  {
    static ::RTCORBA::ServerProtocolPolicy_ptr duplicate (
        ::RTCORBA::ServerProtocolPolicy_ptr
      );
    static void release (
        ::RTCORBA::ServerProtocolPolicy_ptr
      );
    static ::RTCORBA::ServerProtocolPolicy_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::ServerProtocolPolicy_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_CLIENTPROTOCOLPOLICY__TRAITS_CH_)
#define _RTCORBA_CLIENTPROTOCOLPOLICY__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::ClientProtocolPolicy>
  {
    static ::RTCORBA::ClientProtocolPolicy_ptr duplicate (
        ::RTCORBA::ClientProtocolPolicy_ptr
      );
    static void release (
        ::RTCORBA::ClientProtocolPolicy_ptr
      );
    static ::RTCORBA::ClientProtocolPolicy_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::ClientProtocolPolicy_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_PRIVATECONNECTIONPOLICY__TRAITS_CH_)
#define _RTCORBA_PRIVATECONNECTIONPOLICY__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::PrivateConnectionPolicy>
  {
    static ::RTCORBA::PrivateConnectionPolicy_ptr duplicate (
        ::RTCORBA::PrivateConnectionPolicy_ptr
      );
    static void release (
        ::RTCORBA::PrivateConnectionPolicy_ptr
      );
    static ::RTCORBA::PrivateConnectionPolicy_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::PrivateConnectionPolicy_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_TCPPROTOCOLPROPERTIES__TRAITS_CH_)
#define _RTCORBA_TCPPROTOCOLPROPERTIES__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::TCPProtocolProperties>
  {
    static ::RTCORBA::TCPProtocolProperties_ptr duplicate (
        ::RTCORBA::TCPProtocolProperties_ptr
      );
    static void release (
        ::RTCORBA::TCPProtocolProperties_ptr
      );
    static ::RTCORBA::TCPProtocolProperties_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::TCPProtocolProperties_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_GIOPPROTOCOLPROPERTIES__TRAITS_CH_)
#define _RTCORBA_GIOPPROTOCOLPROPERTIES__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::GIOPProtocolProperties>
  {
    static ::RTCORBA::GIOPProtocolProperties_ptr duplicate (
        ::RTCORBA::GIOPProtocolProperties_ptr
      );
    static void release (
        ::RTCORBA::GIOPProtocolProperties_ptr
      );
    static ::RTCORBA::GIOPProtocolProperties_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::GIOPProtocolProperties_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__TRAITS_CH_)
#define _RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::UnixDomainProtocolProperties>
  {
    static ::RTCORBA::UnixDomainProtocolProperties_ptr duplicate (
        ::RTCORBA::UnixDomainProtocolProperties_ptr
      );
    static void release (
        ::RTCORBA::UnixDomainProtocolProperties_ptr
      );
    static ::RTCORBA::UnixDomainProtocolProperties_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::UnixDomainProtocolProperties_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__TRAITS_CH_)
#define _RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::SharedMemoryProtocolProperties>
  {
    static ::RTCORBA::SharedMemoryProtocolProperties_ptr duplicate (
        ::RTCORBA::SharedMemoryProtocolProperties_ptr
      );
    static void release (
        ::RTCORBA::SharedMemoryProtocolProperties_ptr
      );
    static ::RTCORBA::SharedMemoryProtocolProperties_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::SharedMemoryProtocolProperties_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES__TRAITS_CH_)
#define _RTCORBA_USERDATAGRAMPROTOCOLPROPERTIES__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::UserDatagramProtocolProperties>
  {
    static ::RTCORBA::UserDatagramProtocolProperties_ptr duplicate (
        ::RTCORBA::UserDatagramProtocolProperties_ptr
      );
    static void release (
        ::RTCORBA::UserDatagramProtocolProperties_ptr
      );
    static ::RTCORBA::UserDatagramProtocolProperties_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::UserDatagramProtocolProperties_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES__TRAITS_CH_)
#define _RTCORBA_STREAMCONTROLPROTOCOLPROPERTIES__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::StreamControlProtocolProperties>
  {
    static ::RTCORBA::StreamControlProtocolProperties_ptr duplicate (
        ::RTCORBA::StreamControlProtocolProperties_ptr
      );
    static void release (
        ::RTCORBA::StreamControlProtocolProperties_ptr
      );
    static ::RTCORBA::StreamControlProtocolProperties_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::StreamControlProtocolProperties_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__TRAITS_CH_)
#define _RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::PriorityBandedConnectionPolicy>
  {
    static ::RTCORBA::PriorityBandedConnectionPolicy_ptr duplicate (
        ::RTCORBA::PriorityBandedConnectionPolicy_ptr
      );
    static void release (
        ::RTCORBA::PriorityBandedConnectionPolicy_ptr
      );
    static ::RTCORBA::PriorityBandedConnectionPolicy_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::PriorityBandedConnectionPolicy_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_CURRENT__TRAITS_CH_)
#define _RTCORBA_CURRENT__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::Current>
  {
    static ::RTCORBA::Current_ptr duplicate (
        ::RTCORBA::Current_ptr
      );
    static void release (
        ::RTCORBA::Current_ptr
      );
    static ::RTCORBA::Current_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::Current_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_MUTEX__TRAITS_CH_)
#define _RTCORBA_MUTEX__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::Mutex>
  {
    static ::RTCORBA::Mutex_ptr duplicate (
        ::RTCORBA::Mutex_ptr
      );
    static void release (
        ::RTCORBA::Mutex_ptr
      );
    static ::RTCORBA::Mutex_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::Mutex_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_RTCORBA_RTORB__TRAITS_CH_)
#define _RTCORBA_RTORB__TRAITS_CH_

  template<>
  struct TAO_RTCORBA_Export Objref_Traits< ::RTCORBA::RTORB>
  {
    static ::RTCORBA::RTORB_ptr duplicate (
        ::RTCORBA::RTORB_ptr
      );
    static void release (
        ::RTCORBA::RTORB_ptr
      );
    static ::RTCORBA::RTORB_ptr nil (void);
    static CORBA::Boolean marshal (
        ::RTCORBA::RTORB_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::ThreadpoolLane &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ThreadpoolLane*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ThreadpoolLane *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::ThreadpoolLane *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::ThreadpoolLanes &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ThreadpoolLanes*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ThreadpoolLanes *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::ThreadpoolLanes *&);

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_ch.cpp:51

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityModel);
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityModel &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ProtocolProperties_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::Protocol &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Protocol*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::Protocol *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::Protocol *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::ProtocolList &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ProtocolList*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ProtocolList *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::ProtocolList *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::UserDatagramProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::UserDatagramProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::UserDatagramProtocolProperties_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::StreamControlProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::StreamControlProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::StreamControlProtocolProperties_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::PriorityBand &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityBand*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityBand *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::PriorityBand *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::PriorityBands &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityBands*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityBands *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::PriorityBands *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Current_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Current_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::Current_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Mutex_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Mutex_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::Mutex_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::RTORB_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::RTORB_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::RTORB_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_exception/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::RTORB::MutexNotFound &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::RTORB::MutexNotFound*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::RTORB::MutexNotFound *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::RTORB::MutexNotFound *&);

// TAO_IDL - Generated from
// be\be_visitor_exception/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::RTORB::InvalidThreadpool &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::RTORB::InvalidThreadpool*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::RTORB::InvalidThreadpool *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::RTORB::InvalidThreadpool *&);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_RTCORBA_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const RTCORBA::ThreadpoolLane &);
TAO_RTCORBA_Export CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::ThreadpoolLane &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_
#define _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_

TAO_RTCORBA_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const RTCORBA::ThreadpoolLanes &
  );
TAO_RTCORBA_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    RTCORBA::ThreadpoolLanes &
  );

#endif /* _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_ */

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_RTCORBA_Export CORBA::Boolean operator<< (TAO_OutputCDR &, RTCORBA::PriorityModel);
TAO_RTCORBA_Export CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::PriorityModel &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_RTCORBA_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const RTCORBA::PriorityBand &);
TAO_RTCORBA_Export CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::PriorityBand &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_RTCORBA_PriorityBands_H_
#define _TAO_CDR_OP_RTCORBA_PriorityBands_H_

TAO_RTCORBA_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const RTCORBA::PriorityBands &
  );
TAO_RTCORBA_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    RTCORBA::PriorityBands &
  );

#endif /* _TAO_CDR_OP_RTCORBA_PriorityBands_H_ */

// TAO_IDL - Generated from
// be\be_codegen.cpp:955

TAO_END_VERSIONED_NAMESPACE_DECL

#if defined(_MSC_VER)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include /**/ "ace/post.h"

#endif /* ifndef */


