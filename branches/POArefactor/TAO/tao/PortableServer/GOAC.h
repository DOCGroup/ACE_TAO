// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:153

#ifndef _TAO_IDL_ORIG_GOAC_H_
#define _TAO_IDL_ORIG_GOAC_H_

#include /**/ "ace/pre.h"


#include "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "portableserver_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Environment.h"
#include "tao/Object.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"

#include "tao/OctetSeqC.h"
#include "tao/PortableServer/PortableServerC.h"
#include "tao/PortableServer/PS_ForwardC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_PortableServer_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO TAO_PortableServer_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from 
// be\be_visitor_root/root_ch.cpp:63

namespace TAO
{
  class Collocation_Proxy_Broker;
  
  template<typename T> class Narrow_Utils;
  template<typename T> class AbstractBase_Narrow_Utils;
}

// TAO_IDL - Generated from
// be\be_visitor_module/module_ch.cpp:48

namespace PortableServer
{
  
  // TAO_IDL - Generated from
  // be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_PORTABLESERVER_NOTAGROUPOBJECT_CH_)
#define _PORTABLESERVER_NOTAGROUPOBJECT_CH_
  
  class TAO_PortableServer_Export NotAGroupObject : public CORBA::UserException
  {
  public:
    
    NotAGroupObject (void);
    NotAGroupObject (const NotAGroupObject &);
    ~NotAGroupObject (void);

    NotAGroupObject &operator= (const NotAGroupObject &);
    
    static void _tao_any_destructor (void *);
    
    static NotAGroupObject *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NotAGroupObject;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_PORTABLESERVER_IDS_CH_)
#define _PORTABLESERVER_IDS_CH_
  
  class IDs;
  
  typedef
    TAO_VarSeq_Var_T<
        IDs,
        ObjectId
      >
    IDs_var;
  
  typedef
    TAO_Seq_Out_T<
        IDs,
        IDs_var,
        ObjectId
      >
    IDs_out;
  
  class TAO_PortableServer_Export IDs
    : public
        TAO_Unbounded_Sequence<
            ObjectId
          >
  {
  public:
    IDs (void);
    IDs (CORBA::ULong max);
    IDs (
        CORBA::ULong max,
        CORBA::ULong length,
        ObjectId* buffer, 
        CORBA::Boolean release = 0
      );
    IDs (const IDs &);
    ~IDs (void);
    
    static void _tao_any_destructor (void *);
    
    typedef IDs_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_IDs;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:601

#if !defined (_PORTABLESERVER_GOA__VAR_OUT_CH_)
#define _PORTABLESERVER_GOA__VAR_OUT_CH_
  
  class GOA;
  typedef GOA *GOA_ptr;
  
  typedef
    TAO_Objref_Var_T<
        GOA
      >
    GOA_var;
  
  typedef
    TAO_Objref_Out_T<
        GOA
      >
    GOA_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_PORTABLESERVER_GOA_CH_)
#define _PORTABLESERVER_GOA_CH_
  
  class TAO_PortableServer_Export GOA
    : public virtual ::PortableServer::POA
  {
  public:
    typedef GOA_ptr _ptr_type;
    typedef GOA_var _var_type;
    
    // The static operations.
    static GOA_ptr _duplicate (GOA_ptr obj);
    
    static GOA_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static GOA_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static GOA_ptr _nil (void)
    {
      return (GOA_ptr)0;
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::ObjectId * create_id_for_reference (
        ::CORBA::Object_ptr the_ref
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException,
        ::PortableServer::NotAGroupObject
      )) = 0;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::IDs * reference_to_ids (
        ::CORBA::Object_ptr the_ref
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException,
        ::PortableServer::NotAGroupObject
      )) = 0;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void associate_reference_with_id (
        ::CORBA::Object_ptr ref,
        const ::PortableServer::ObjectId & oid
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException,
        ::PortableServer::NotAGroupObject
      )) = 0;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void disassociate_reference_with_id (
        ::CORBA::Object_ptr ref,
        const ::PortableServer::ObjectId & oid
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException,
        ::PortableServer::NotAGroupObject
      )) = 0;
    
    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:208
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    GOA (void);
    
    virtual ~GOA (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    GOA (const GOA &);
    
    void operator= (const GOA &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_GOA;

// TAO_IDL - Generated from
// be\be_visitor_module/module_ch.cpp:66

} // module PortableServer

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:59

// Traits specializations.
namespace TAO
{

#if !defined (_PORTABLESERVER_GOA__TRAITS_CH_)
#define _PORTABLESERVER_GOA__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::GOA>
  {
    static ::PortableServer::GOA_ptr duplicate (
        ::PortableServer::GOA_ptr
      );
    static void release (
        ::PortableServer::GOA_ptr
      );
    static ::PortableServer::GOA_ptr nil (void);
    static CORBA::Boolean marshal (
        ::PortableServer::GOA_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}

// TAO_IDL - Generated from
// be\be_visitor_exception/any_op_ch.cpp:52

TAO_PortableServer_Export void operator<<= (CORBA::Any &, const PortableServer::NotAGroupObject &); // copying version
TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::NotAGroupObject*); // noncopying version
TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::NotAGroupObject *&); // deprecated
TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::NotAGroupObject *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_PortableServer_Export void operator<<= (CORBA::Any &, const PortableServer::IDs &); // copying version
TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::IDs*); // noncopying version
TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IDs *&); // deprecated
TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::IDs *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::GOA_ptr); // copying
TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::GOA_ptr *); // non-copying
TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::GOA_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_exception/cdr_op_ch.cpp:52

TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::NotAGroupObject &);
TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::NotAGroupObject &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_PortableServer_IDs_H_
#define _TAO_CDR_OP_PortableServer_IDs_H_

TAO_PortableServer_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const PortableServer::IDs &
  );
TAO_PortableServer_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    PortableServer::IDs &
  );

#endif /* _TAO_CDR_OP_PortableServer_IDs_H_ */

// TAO_IDL - Generated from
// be\be_codegen.cpp:964

#if defined (__ACE_INLINE__)
#include "GOAC.inl"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include /**/ "ace/post.h"

#endif /* ifndef */


