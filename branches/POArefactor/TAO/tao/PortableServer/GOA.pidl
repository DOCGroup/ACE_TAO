/**
 * @file GOA.pidl
 *
 * $Id$
 *
 * @brief Pre-compiled IDL source for the PortableServer module.
 *
 * This file was used to generate the code in
 * GOAC.{h,i,cpp}, using the following command:
 *
 * tao_idl.exe \
 *     -o orig -Gp -Gd -Ge 1 -GT -Sc -GA -I$(TAO_ROOT)
 *          -Wb,export_macro=TAO_PortableServer_Export \
 *          -Wb,export_include="portableserver_export.h" \
 *          -Wb,pre_include="ace/pre.h" \
 *          -Wb,post_include="ace/post.h" \
 *          GOA.pidl
 *
 */

#ifndef _GOA_IDL_
#define _GOA_IDL_

#include <Policy_Forward.pidl>
#include <OctetSeq.pidl>
#include <tao/PortableServer/PS_Forward.pidl>
#include <orb.idl> // Only neede for repository id, could we made something like orb_forward.pidl

#pragma prefix "omg.org"

module PortableServer
{
# pragma version PortableServer 2.3

  exception NotAGroupObject {};
  typedef sequence <ObjectId> IDs;

  interface GOA : PortableServer::POA {
    PortableServer::ObjectId create_id_for_reference(in Object the_ref)
      raises (NotAGroupObject);

    IDs reference_to_ids(in Object the_ref)
      raises (NotAGroupObject);

    void associate_reference_with_id (in Object ref,
                                      in PortableServer::ObjectId oid)
      raises (NotAGroupObject);

    void disassociate_reference_with_id (in Object ref,
                                         in PortableServer::ObjectId oid)
      raises (NotAGroupObject);
  };
};

#endif // _PORTABLESERVER_IDL_
