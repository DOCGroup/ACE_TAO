--- orig/DomainC.h	Tue Apr  3 17:47:30 2001
+++ patched/DomainC.h	Tue Apr  3 20:25:02 2001
@@ -55,266 +55,6 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
-TAO_NAMESPACE  CORBA
-{
-
-#if !defined (_CORBA_INTERFACEDEF___PTR_CH_)
-#define _CORBA_INTERFACEDEF___PTR_CH_
-
-  class InterfaceDef;
-  typedef InterfaceDef *InterfaceDef_ptr;
-  
-#endif /* end #if !defined */
-
-
-#if !defined (_CORBA_INTERFACEDEF___VAR_CH_)
-#define _CORBA_INTERFACEDEF___VAR_CH_
-
-  class TAO_Export InterfaceDef_var : public TAO_Base_var
-  {
-  public:
-    InterfaceDef_var (void); // default constructor
-    InterfaceDef_var (InterfaceDef_ptr p) : ptr_ (p) {} 
-    InterfaceDef_var (const InterfaceDef_var &); // copy constructor
-    ~InterfaceDef_var (void); // destructor
-    
-    InterfaceDef_var &operator= (InterfaceDef_ptr);
-    InterfaceDef_var &operator= (const InterfaceDef_var &);
-    InterfaceDef_ptr operator-> (void) const;
-    
-    operator const InterfaceDef_ptr &() const;
-    operator InterfaceDef_ptr &();
-    // in, inout, out, _retn 
-    InterfaceDef_ptr in (void) const;
-    InterfaceDef_ptr &inout (void);
-    InterfaceDef_ptr &out (void);
-    InterfaceDef_ptr _retn (void);
-    InterfaceDef_ptr ptr (void) const;
-
-  private:
-    InterfaceDef_ptr ptr_;
-    // Unimplemented - prevents widening assignment.
-    InterfaceDef_var (const TAO_Base_var &rhs);
-    InterfaceDef_var &operator= (const TAO_Base_var &rhs);
-  };
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_CORBA_INTERFACEDEF___OUT_CH_)
-#define _CORBA_INTERFACEDEF___OUT_CH_
-
-  class TAO_Export InterfaceDef_out
-  {
-  public:
-    InterfaceDef_out (InterfaceDef_ptr &);
-    InterfaceDef_out (InterfaceDef_var &);
-    InterfaceDef_out (const InterfaceDef_out &);
-    InterfaceDef_out &operator= (const InterfaceDef_out &);
-    InterfaceDef_out &operator= (const InterfaceDef_var &);
-    InterfaceDef_out &operator= (InterfaceDef_ptr);
-    operator InterfaceDef_ptr &();
-    InterfaceDef_ptr &ptr (void);
-    InterfaceDef_ptr operator-> (void);
-    
-  private:
-    InterfaceDef_ptr &ptr_;
-  };
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_CORBA_INTERFACEDEF_CH_)
-#define _CORBA_INTERFACEDEF_CH_
-
-// Forward Classes Declaration
-  class _TAO_InterfaceDef_Proxy_Impl;
-  class _TAO_InterfaceDef_Remote_Proxy_Impl;
-  class _TAO_InterfaceDef_Proxy_Broker;
-  class _TAO_InterfaceDef_Remote_Proxy_Broker;
-  
-  class TAO_Export InterfaceDef : public virtual CORBA_Object
-  {
-  public:
-  #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-    typedef InterfaceDef_ptr _ptr_type;
-    typedef InterfaceDef_var _var_type;
-  #endif /* ! __GNUC__ || g++ >= 2.8 */
-
-    // the static operations
-    static InterfaceDef_ptr _duplicate (InterfaceDef_ptr obj);
-    static InterfaceDef_ptr _narrow (
-        CORBA::Object_ptr obj,
-        CORBA::Environment &ACE_TRY_ENV = 
-          TAO_default_environment ()
-      );
-    static InterfaceDef_ptr _unchecked_narrow (
-        CORBA::Object_ptr obj,
-        CORBA::Environment &ACE_TRY_ENV = 
-          TAO_default_environment ()
-      );
-    static InterfaceDef_ptr _nil (void)
-      {
-        return (InterfaceDef_ptr)0;
-      }
-
-    static void _tao_any_destructor (void*);
-
-    virtual CORBA::Boolean _is_a (
-        const CORBA::Char *type_id, 
-        CORBA::Environment &ACE_TRY_ENV = 
-          TAO_default_environment ()
-      );
-    virtual void *_tao_QueryInterface (ptr_arith_t type);
-    
-    virtual const char* _interface_repository_id (void) const;
-
-  private:
-    _TAO_InterfaceDef_Proxy_Broker *the_TAO_InterfaceDef_Proxy_Broker_;
-    
-  protected:
-    InterfaceDef (int collocated = 0);
-    
-    protected:
-      // This methods travese the inheritance tree and set the
-      // parents piece of the given class in the right mode
-      virtual void CORBA_InterfaceDef_setup_collocation (int collocated);
-      
-      InterfaceDef (
-        TAO_Stub *objref, 
-        CORBA::Boolean _tao_collocated = 0,
-        TAO_Abstract_ServantBase *servant = 0
-        );
-      
-      friend class _TAO_InterfaceDef_Remote_Proxy_Impl;
-      friend class _TAO_InterfaceDef_ThruPOA_Proxy_Impl;
-      friend class _TAO_InterfaceDef_Direct_Proxy_Impl;
-    
-    virtual ~InterfaceDef (void);
-  private:
-    InterfaceDef (const InterfaceDef &);
-    void operator= (const InterfaceDef &);
-  };
-
-  
-// The Proxy Implementations are used by each interface to
-// perform a call. Each different implementation encapsulate
-// an invocation logics.
-
-
-  ///////////////////////////////////////////////////////////////////////
-  //                    Base  Impl. Declaration
-  //
-  
-  class TAO_Export _TAO_InterfaceDef_Proxy_Impl : public virtual TAO_Object_Proxy_Impl
-  {
-  public:
-    virtual ~_TAO_InterfaceDef_Proxy_Impl (void) { }
-    
-    protected:
-    _TAO_InterfaceDef_Proxy_Impl (void);
-  
-  };
-  //
-  //                Base  Proxy Impl. Declaration
-  ///////////////////////////////////////////////////////////////////////
-  
-  
-///////////////////////////////////////////////////////////////////////
-//                    Remote  Impl. Declaration
-//
-
-class TAO_Export _TAO_InterfaceDef_Remote_Proxy_Impl : 
-  public virtual _TAO_InterfaceDef_Proxy_Impl,
-  public virtual TAO_Remote_Object_Proxy_Impl
-{
-public:
-  _TAO_InterfaceDef_Remote_Proxy_Impl (void);
-  
-  virtual ~_TAO_InterfaceDef_Remote_Proxy_Impl (void) { }
-  
-  };
-
-//
-//                Base  Proxy Impl. Declaration
-///////////////////////////////////////////////////////////////////////
-
-
-// The Proxy Brokers are used by each interface to get
-// the right proxy for performing a call. In the new 
-// collocation scheme, the proxy to be used can vary on
-// a call by call basis. 
-
-
-
-///////////////////////////////////////////////////////////////////////
-//                 Base Proxy Broker Declaration 
-//
-
-class TAO_Export _TAO_InterfaceDef_Proxy_Broker
-{
-public:
-  virtual ~_TAO_InterfaceDef_Proxy_Broker (void);
-  virtual _TAO_InterfaceDef_Proxy_Impl &select_proxy (
-    InterfaceDef *object,
-    CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
-  ) = 0;
-
-protected:
-  _TAO_InterfaceDef_Proxy_Broker (void);
-  
-};
-
-//
-//              End Base Proxy Broker Declaration 
-///////////////////////////////////////////////////////////////////////
-
-
-///////////////////////////////////////////////////////////////////////
-//                 Remote Proxy Broker Declaration 
-//
-
-class TAO_Export _TAO_InterfaceDef_Remote_Proxy_Broker : public virtual _TAO_InterfaceDef_Proxy_Broker
-{
-public: 
-  _TAO_InterfaceDef_Remote_Proxy_Broker (void);
-  
-  virtual ~_TAO_InterfaceDef_Remote_Proxy_Broker (void);
-  
-  virtual _TAO_InterfaceDef_Proxy_Impl &select_proxy (
-    InterfaceDef *object,
-    CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
-  );
-
-private:
-  _TAO_InterfaceDef_Remote_Proxy_Impl remote_proxy_impl_;
-// This member function is used to get an handle to the unique instance
-// of the Remote Proxy Broker that is available for a given
-// interface.
-
-public:
-  static _TAO_InterfaceDef_Remote_Proxy_Broker *the_TAO_InterfaceDef_Remote_Proxy_Broker (void);
-};
-
-
-//
-//              End Remote Proxy Broker Declaration 
-///////////////////////////////////////////////////////////////////////
-
-
-#endif /* end #if !defined */
-
-TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_InterfaceDef;
-
-TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong SecConstruction;
-
-
-}
-TAO_NAMESPACE_CLOSE // module CORBA
-
-
 #if !defined (_CORBA_DOMAINMANAGER___PTR_CH_)
 #define _CORBA_DOMAINMANAGER___PTR_CH_
 
@@ -754,7 +494,7 @@
 //
 
 class TAO_Export _TAO_CORBA_ConstructionPolicy_Proxy_Impl : 
-  public virtual CORBA::_TAO_Policy_Proxy_Impl
+  public virtual _TAO_CORBA_Policy_Proxy_Impl
 {
 public:
   virtual ~_TAO_CORBA_ConstructionPolicy_Proxy_Impl (void) { }
@@ -785,7 +525,7 @@
 class TAO_Export _TAO_CORBA_ConstructionPolicy_Remote_Proxy_Impl : 
   public virtual _TAO_CORBA_ConstructionPolicy_Proxy_Impl,
   public virtual TAO_Remote_Object_Proxy_Impl,
-  public virtual CORBA::_TAO_Policy_Remote_Proxy_Impl
+  public virtual _TAO_CORBA_Policy_Remote_Proxy_Impl
   
 {
 public:
@@ -1030,10 +770,6 @@
 
 // Proxy Broker Factory function pointer declarations.
 
-extern TAO_Export CORBA::_TAO_InterfaceDef_Proxy_Broker * (*CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer) (
-    CORBA::Object_ptr obj
-  );
-
 extern TAO_Export _TAO_CORBA_DomainManager_Proxy_Broker * (*_TAO_CORBA_DomainManager_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   );
@@ -1042,9 +778,6 @@
     CORBA::Object_ptr obj
   );
 
-// Any operators for interface CORBA::InterfaceDef
-TAO_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef_ptr);
-TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDef *&);
 // Any operators for interface CORBA_DomainManager
 TAO_Export void operator<<= (CORBA::Any &, CORBA_DomainManager_ptr);
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_DomainManager *&);
@@ -1058,8 +791,6 @@
 
 #ifndef __ACE_INLINE__
 
-TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef_ptr );
-TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef_ptr &);
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_DomainManager_ptr );
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_DomainManager_ptr &);
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_ConstructionPolicy_ptr );
