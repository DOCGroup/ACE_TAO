project (primary_ftrmff) {

  exename = pftrmff
  exeout = ../bin
  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    CTT_Basic.cpp
    FTRMFF_Primary.cpp
    primary_ftrmff.cpp
  }
}

project (active_ftrmff) {

  exename = aftrmff
  exeout = ../bin
  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    Task_Scheduler.cpp
    CTT_Basic.cpp
    FTRMFF_Basic.cpp
    basic_ftrmff.cpp
    Simple_Ranking.cpp
  }
}

project (statesync_only_ftrmff) {

  after += basic_ftrmff

  exename = sftrmff
  exeout = ../bin
  macros += DO_DEBUG USE_ENHANCED_CTT

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    Task_Scheduler.cpp
    CTT_Enhanced.cpp
    FTRMFF_Basic.cpp
    ss_ftrmff.cpp
    Simple_Ranking.cpp
  }
}

project (unranked_ftrmff) {

  after += statesync_only_ftrmff

  exename = uftrmff
  exeout = ../bin
  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    Multi_Failure_Scheduler.cpp
    OptimizedWCRT.cpp
    CTT_Enhanced.cpp
    FTRMFF_Enhanced.cpp
    enhanced_ftrmff.cpp
    Simple_Ranking.cpp
  }
}

project (ranked_ftrmff) {

  after += unranked_ftrmff

  exename = rftrmff
  exeout = ../bin
  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    OptimizedWCRT.cpp
    RankedWCRT.cpp
    Ranked_Scheduler.cpp
    CTT_Enhanced.cpp
    Simple_Ranking.cpp
    Utilization_Ranking.cpp
    FTRMFF_Ranked.cpp
    ranked_ftrmff.cpp
  }
}

project (worstfit_ranked_ftrmff) {

  exename = rftrmwf
  exeout = ../bin

  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    CTT_Enhanced.cpp
    Utilization_Ranking.cpp
    OptimizedWCRT.cpp
    RankedWCRT.cpp
    Simple_Ranking.cpp
    FTRMFF_Worstfit.cpp
    worstfit_ftrmff.cpp
  }
}

project (binary_worstfit_ftrmff) : acelib {

  exename = bsftrmwf
  exeout = ../bin

  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    Scheduler.cpp
    CTT_Basic.cpp
    CTT_Enhanced.cpp
    Task_Scheduler.cpp
    Forward_Ranking_Scheduler.cpp
    Utilization_Ranking.cpp
    OptimizedWCRT.cpp
    RankedWCRT.cpp
    FailureAwareWCRT.cpp
    Simple_Ranking.cpp
    FTRMFF_Worstfit.cpp
    FTRMFF_Bestfit.cpp
    FTRMFF_Binary_Search.cpp
    FTRMFF_Basic.cpp
    binary_worstfit_ftrmff.cpp
  }
}

project (binary_bestfit_ftrmff) : acelib {

  exename = bsftrmbf
  exeout = ../bin

  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    Scheduler.cpp
    CTT_Basic.cpp
    CTT_Enhanced.cpp
    Task_Scheduler.cpp
    Forward_Ranking_Scheduler.cpp
    Utilization_Ranking.cpp
    OptimizedWCRT.cpp
    RankedWCRT.cpp
    FailureAwareWCRT.cpp
    Simple_Ranking.cpp
    FTRMFF_Worstfit.cpp
    FTRMFF_Bestfit.cpp
    FTRMFF_Binary_Search.cpp
    FTRMFF_Basic.cpp
    binary_bestfit_ftrmff.cpp
  }
}

project (backward_packing_ftrmff) {

  exename = bpftrmff
  exeout = ../bin

  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    CTT_Basic.cpp
    CTT_Enhanced.cpp
    FTRMFF_Packing.cpp
    FTRMFF_Primary.cpp
    packing_ftrmff.cpp
  }
}

project (forward_packing_ftrmff) : acelib {

  exename = fpftrmff
  exeout = ../bin

  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    CTT_Basic.cpp
    CTT_Enhanced.cpp
    Scheduler.cpp
    Packing_Scheduler.cpp
    FailureAwareWCRT.cpp
    FTRMFF_Forward_Packing.cpp
    Forward_Ranking_Scheduler.cpp
    forward_packing_ftrmff.cpp
  }
}

project (forward_ranking_ftrmff) : acelib {

  exename = frftrmff
  exeout = ../bin

  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    CTT_Basic.cpp
    CTT_Enhanced.cpp
    Scheduler.cpp
    FailureAwareWCRT.cpp
    Packing_Scheduler.cpp
    Forward_Ranking_Scheduler.cpp
    FTRMFF_Forward_Packing.cpp
    forward_ranking_ftrmff.cpp
  }
}

project (bestfit_ranked_ftrmff) : acelib {

  exename = ftrmbf
  exeout = ../bin

  macros += DO_DEBUG // DO_TRACE

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    Scheduler.cpp
    CTT_Enhanced.cpp
    Forward_Ranking_Scheduler.cpp
    FailureAwareWCRT.cpp
    FTRMFF_Bestfit.cpp
    bestfit_ftrmff.cpp
  }
}

project (schedulability_check) : acelib {

  exename = scheck
  exeout = ../bin

  macros += DO_DEBUG

  Source_Files {
    Algorithms.cpp
    Schedule.cpp
    CTT_Enhanced.cpp
    CTT_Basic.cpp 
    Scheduler.cpp
    FailureAwareWCRT.cpp
    schedulability_check.cpp
  }
}

project (task_generator) : acelib {

  exename = tgen        
  exeout = ../bin

  Source_Files {
    Algorithms.cpp
    task_generator.cpp
  }
}