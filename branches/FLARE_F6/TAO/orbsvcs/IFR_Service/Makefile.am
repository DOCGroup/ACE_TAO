##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -exclude DDS -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_ROOT = $(top_srcdir)

bin_PROGRAMS =

## Makefile.IFR_Service.am

if BUILD_EXCEPTIONS
if !BUILD_ACE_FOR_TAO
if !BUILD_USES_WCHAR

bin_PROGRAMS += IFR_Service

IFR_Service_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs

IFR_Service_SOURCES = \
  IFR_Server.cpp \
  IFR_Service.cpp \
  IFR_Service.h

IFR_Service_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_ImR_Client.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_IFRService.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI_Server.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_TypeCodeFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_IFR_Client.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_Svc_Utils.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_IORTable.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR
endif !BUILD_ACE_FOR_TAO
endif BUILD_EXCEPTIONS

## Makefile.TAO_IFR_BE.am

if BUILD_EXCEPTIONS

noinst_LTLIBRARIES = libTAO_IFR_BE.la

libTAO_IFR_BE_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/TAO_IDL/include \
  -I$(TAO_ROOT)/TAO_IDL/fe \
  -DTAO_IFR_BE_BUILD_DLL

libTAO_IFR_BE_la_SOURCES = \
  be_global.cpp \
  be_init.cpp \
  be_produce.cpp \
  ifr_adding_visitor.cpp \
  ifr_adding_visitor_exception.cpp \
  ifr_adding_visitor_operation.cpp \
  ifr_adding_visitor_structure.cpp \
  ifr_adding_visitor_union.cpp \
  ifr_removing_visitor.cpp \
  ifr_visitor.cpp

noinst_HEADERS = \
  be_extern.h \
  be_global.h \
  ifr_adding_visitor.h \
  ifr_adding_visitor_exception.h \
  ifr_adding_visitor_operation.h \
  ifr_adding_visitor_structure.h \
  ifr_adding_visitor_union.h \
  ifr_removing_visitor.h \
  ifr_visitor.h

endif BUILD_EXCEPTIONS

## Makefile.TAO_IFR_EXE.am

if BUILD_EXCEPTIONS

bin_PROGRAMS += tao_ifr

tao_ifr_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs/IFR_Service \
  -I$(TAO_ROOT)/TAO_IDL/include \
  -I$(TAO_ROOT)/TAO_IDL/fe \
  -DTAO_IDL_INCLUDE_DIR="\"$(includedir)/tao\""

tao_ifr_SOURCES = \
  drv_args.cpp \
  drv_preproc.cpp \
  tao_idl.cpp \
  $(TAO_ROOT)/TAO_IDL/include/drv_extern.h

tao_ifr_LDADD = \
  libTAO_IFR_BE.la \
  $(TAO_BUILDDIR)/TAO_IDL/libTAO_IDL_FE.la \
  $(TAO_BUILDDIR)/tao/libTAO_IFR_Client.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
