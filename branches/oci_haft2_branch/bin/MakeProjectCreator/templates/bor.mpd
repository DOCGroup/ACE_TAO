# Makefile for building the <%if(exename)%><%exename%> exe<%endif%><%if(sharedname)%><%sharedname%> library<%endif%> with Borland C++ Builder

<%if(exename)%>
NAME = <%exename%>
<%else%>
<%if(sharedname)%>
NAME = <%sharedname%>
<%endif%>
<%endif%>

<%if(idl_files)%>
TAO_IDL = $(CORE_BINDIR)\tao_idl -g $(CORE_BINDIR)\gperf.exe
<%endif%>

<%if(exename || sharedname || staticname)%>
<%if(source_files)%>
OBJFILES = \
<%foreach(source_files)%>
	$(OBJDIR)\<%basenoextension(source_file)%>.obj<%fornotlast(" \\")%>
<%endfor%>
<%endif%>
<%endif%>

LFLAGS = \
<%foreach(libpaths)%>
	-j<%libpath%>\$(CONFIG_SUBDIR) -j<%libpath%> \
	-L<%libpath%>\$(CONFIG_SUBDIR) -L<%libpath%> \
<%endfor%>
  -j$(CORE_BINDIR) \
  -L$(CORE_BINDIR)

LIBFILES = \
<%foreach(libs defaultlibs)%>
	<%lib%>$(LIB_DECORATOR).lib \
<%endfor%>
<%foreach(lit_libs)%>
	<%lit_lib%>.lib \
<%endfor%>

<%if(idl_files)%>

IDLFILES = \
<%foreach(idl_files)%>
	$(IDLDIR)\<%basenoextension(idl_file)%>.idl<%fornotlast(" \\")%>
<%endfor%>
<%endif%>
<%if(resource_files)%>

RESOURCE =<%foreach(resource_files)%> $(OBJDIR)\<%noextension(resource_file)%>.res<%endfor%>
<%endif%>

!ifdef STATIC
LIB_FLAGS =<%foreach(staticflags)%> -D<%staticflag%><%endfor%>
DLL_FLAGS =
!else
LIB_FLAGS =
DLL_FLAGS =<%foreach(dynamicflags)%> -D<%dynamicflag%><%endfor%>
!endif

CFLAGS = \
<%foreach(macros)%>
	-D<%macro%> \
<%endfor%>
<%foreach(includes)%>
	-I<%include%> \
<%endfor%>
	$(LIB_FLAGS) \
	$(DLL_FLAGS)
<%if(pch_header)%>

PCH_HEADER=<%pch_header%>
<%endif%>

CPPDIR = <%cppdir%>
<%if(idl_files)%>

IDLDIR = .
<%endif%>
<%if(header_files)%>

INCLUDES = \
<%foreach(header_files template_files inline_files idl_files)%>
	<%header_file%><%fornotlast(" \\")%>
<%endfor%>
<%if(include_dir)%>

INCDIR_NAME = <%include_dir%>
<%endif%>
<%endif%>
<%if(idl_files)%>

all: idl_src_files
<%endif%>
<%if(exename)%>
<%if(install)%>

BASE_BINDIR = <%install%>
<%endif%>
<%if(core)%>

!include <$(ACE_ROOT)\include\makeinclude\build_core_exe.bor>
<%else%>

!include <$(ACE_ROOT)\include\makeinclude\build_exe.bor>
<%endif%>
<%else%>
<%if(dllout)%>

BASE_BINDIR = <%dllout%>
<%else%>
<%if(libout)%>

BASE_BINDIR = <%libout%>
<%endif%>
<%endif%>
<%if(core)%>

!include <$(ACE_ROOT)\include\makeinclude\build_core_library.bor>
<%else%>

!include <$(ACE_ROOT)\include\makeinclude\build_library.bor>
<%endif%>
<%endif%>
<%if(idl_files)%>

#
# IDL Build rules
#

idl_src_files: $(IDLFILES:.idl=C.cpp) $(IDLFILES:.idl=S.cpp)

<%foreach(idl_files)%>
<%if(flag_overrides(idl_file, idlgendir))%>
<%flag_overrides(idl_file, idlgendir)%>\<%basenoextension(idl_file)%>S.cpp <%flag_overrides(idl_file, idlgendir)%>\<%basenoextension(idl_file)%>C.cpp: <%idl_file%>
	$(TAO_IDL) -o <%flag_overrides(idl_file, idlgendir)%> <%if(flag_overrides(idl_file, idlflags))%><%flag_overrides(idl_file, idlflags)%><%else%><%idlflags%><%endif%> $**
<%else%>
<%if(idlgendir)%>
<%idlgendir%>\<%basenoextension(idl_file)%>S.cpp <%idlgendir%>\<%basenoextension(idl_file)%>C.cpp: <%idl_file%>
	$(TAO_IDL) -o <%idlgendir%> <%if(flag_overrides(idl_file, idlflags))%><%flag_overrides(idl_file, idlflags)%><%else%><%idlflags%><%endif%> $**
<%else%>
# IDL File Directory: <%dirname(idl_file)%>
<%if(dirname_found)%>
<%dirname(idl_file)%>\<%basenoextension(idl_file)%>S.cpp <%dirname(idl_file)%>\<%basenoextension(idl_file)%>C.cpp: <%idl_file%>
	$(TAO_IDL) -o <%dirname(idl_file)%> <%if(flag_overrides(idl_file, idlflags))%><%flag_overrides(idl_file, idlflags)%><%else%><%idlflags%><%endif%> $**
<%else%>
$(IDLDIR)\<%basenoextension(idl_file)%>S.cpp $(IDLDIR)\<%basenoextension(idl_file)%>C.cpp: $(IDLDIR)\<%idl_file%>
	$(TAO_IDL) <%if(flag_overrides(idl_file, idlflags))%><%flag_overrides(idl_file, idlflags)%><%else%><%idlflags%><%endif%> $**
<%endif%>
<%endif%>
<%endif%>
<%endfor%>
<%endif%>
<%foreach(custom_types)%>

#
# <%custom_type%> rules
#

<%if(cutom_type->libpath)%>
PATH := $(PATH);<%custom_type->libpath%>

<%endif%>
<%foreach(custom_type->input_files)%>
<%foreach(custom_type->input_file->output_files)%>
<%if(flag_overrides(custom_type->input_file, gendir))%><%flag_overrides(custom_type->input_file, gendir)%>\<%basename(custom_type->input_file->output_file)%><%else%><%custom_type->input_file->output_file%><%endif%>: <%custom_type->input_file%>
	<%custom_type->command%> <%if(pch_header)%><%if(custom_type->pch_option)%><%custom_type->pch_option%><%pch_header%> <%endif%><%endif%><%if(flag_overrides(custom_type->input_file, commandflags))%><%flag_overrides(custom_type->input_file, commandflags)%><%else%><%custom_type->commandflags%><%endif%> $** <%if(custom_type->output_option)%><%custom_type->output_option%> <%if(flag_overrides(custom_type->input_file, gendir))%><%flag_overrides(custom_type->input_file, gendir)%>\<%basename(custom_type->input_file->output_file)%><%else%><%custom_type->input_file->output_file%><%endif%><%endif%>

<%endfor%>
<%endfor%>
<%endfor%>
