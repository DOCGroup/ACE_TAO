// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:293


#include "IFR_BaseC.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/orb_typesA.h"
#include "tao/AnyTypeCode/Typecode_typesA.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Enum_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "tao/AnyTypeCode/Any_Basic_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/AnyTypeCode/Any_Arg_Traits.h"
#include "ace/OS_NS_string.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "IFR_BaseC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:70

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:786

#if !defined (_CORBA_DEFINITIONKIND__ARG_TRAITS_)
#define _CORBA_DEFINITIONKIND__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::DefinitionKind>
    : public
        Basic_Arg_Traits_T<
            CORBA::DefinitionKind,
            TAO::Any_Insert_Policy_Stream <CORBA::DefinitionKind>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_CONTAINED__ARG_TRAITS_)
#define _CORBA_CONTAINED__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::Contained>
    : public
        Object_Arg_Traits_T<
            CORBA::Contained_ptr,
            CORBA::Contained_var,
            CORBA::Contained_out,
            TAO::Objref_Traits<CORBA::Contained>,
            TAO::Any_Insert_Policy_Stream <CORBA::Contained_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:828

#if !defined (_CORBA_CONTAINED_DESCRIPTION__ARG_TRAITS_)
#define _CORBA_CONTAINED_DESCRIPTION__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::Contained::Description>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::Contained::Description,
            CORBA::Contained::Description_var,
            CORBA::Contained::Description_out,
            TAO::Any_Insert_Policy_Stream <CORBA::Contained::Description>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_REPOSITORY__ARG_TRAITS_)
#define _CORBA_REPOSITORY__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::Repository>
    : public
        Object_Arg_Traits_T<
            CORBA::Repository_ptr,
            CORBA::Repository_var,
            CORBA::Repository_out,
            TAO::Objref_Traits<CORBA::Repository>,
            TAO::Any_Insert_Policy_Stream <CORBA::Repository_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_CONTAINER__ARG_TRAITS_)
#define _CORBA_CONTAINER__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::Container>
    : public
        Object_Arg_Traits_T<
            CORBA::Container_ptr,
            CORBA::Container_var,
            CORBA::Container_out,
            TAO::Objref_Traits<CORBA::Container>,
            TAO::Any_Insert_Policy_Stream <CORBA::Container_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_CONTAINER_DESCRIPTIONSEQ__ARG_TRAITS_)
#define _CORBA_CONTAINER_DESCRIPTIONSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::Container::DescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::Container::DescriptionSeq,
            CORBA::Container::DescriptionSeq_var,
            CORBA::Container::DescriptionSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::Container::DescriptionSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_MODULEDEF__ARG_TRAITS_)
#define _CORBA_MODULEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ModuleDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ModuleDef_ptr,
            CORBA::ModuleDef_var,
            CORBA::ModuleDef_out,
            TAO::Objref_Traits<CORBA::ModuleDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ModuleDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_CONSTANTDEF__ARG_TRAITS_)
#define _CORBA_CONSTANTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ConstantDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ConstantDef_ptr,
            CORBA::ConstantDef_var,
            CORBA::ConstantDef_out,
            TAO::Objref_Traits<CORBA::ConstantDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ConstantDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_IDLTYPE__ARG_TRAITS_)
#define _CORBA_IDLTYPE__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::IDLType>
    : public
        Object_Arg_Traits_T<
            CORBA::IDLType_ptr,
            CORBA::IDLType_var,
            CORBA::IDLType_out,
            TAO::Objref_Traits<CORBA::IDLType>,
            TAO::Any_Insert_Policy_Stream <CORBA::IDLType_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_STRUCTDEF__ARG_TRAITS_)
#define _CORBA_STRUCTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::StructDef>
    : public
        Object_Arg_Traits_T<
            CORBA::StructDef_ptr,
            CORBA::StructDef_var,
            CORBA::StructDef_out,
            TAO::Objref_Traits<CORBA::StructDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::StructDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_UNIONDEF__ARG_TRAITS_)
#define _CORBA_UNIONDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::UnionDef>
    : public
        Object_Arg_Traits_T<
            CORBA::UnionDef_ptr,
            CORBA::UnionDef_var,
            CORBA::UnionDef_out,
            TAO::Objref_Traits<CORBA::UnionDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::UnionDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_ENUMDEF__ARG_TRAITS_)
#define _CORBA_ENUMDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::EnumDef>
    : public
        Object_Arg_Traits_T<
            CORBA::EnumDef_ptr,
            CORBA::EnumDef_var,
            CORBA::EnumDef_out,
            TAO::Objref_Traits<CORBA::EnumDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::EnumDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_ALIASDEF__ARG_TRAITS_)
#define _CORBA_ALIASDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::AliasDef>
    : public
        Object_Arg_Traits_T<
            CORBA::AliasDef_ptr,
            CORBA::AliasDef_var,
            CORBA::AliasDef_out,
            TAO::Objref_Traits<CORBA::AliasDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::AliasDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_INTERFACEDEF__ARG_TRAITS_)
#define _CORBA_INTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::InterfaceDef>
    : public
        Object_Arg_Traits_T<
            CORBA::InterfaceDef_ptr,
            CORBA::InterfaceDef_var,
            CORBA::InterfaceDef_out,
            TAO::Objref_Traits<CORBA::InterfaceDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::InterfaceDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_INTERFACEDEFSEQ__ARG_TRAITS_)
#define _CORBA_INTERFACEDEFSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::InterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InterfaceDefSeq,
            CORBA::InterfaceDefSeq_var,
            CORBA::InterfaceDefSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::InterfaceDefSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_EXCEPTIONDEF__ARG_TRAITS_)
#define _CORBA_EXCEPTIONDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ExceptionDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ExceptionDef_ptr,
            CORBA::ExceptionDef_var,
            CORBA::ExceptionDef_out,
            TAO::Objref_Traits<CORBA::ExceptionDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ExceptionDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_NATIVEDEF__ARG_TRAITS_)
#define _CORBA_NATIVEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::NativeDef>
    : public
        Object_Arg_Traits_T<
            CORBA::NativeDef_ptr,
            CORBA::NativeDef_var,
            CORBA::NativeDef_out,
            TAO::Objref_Traits<CORBA::NativeDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::NativeDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_VALUEDEF__ARG_TRAITS_)
#define _CORBA_VALUEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ValueDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ValueDef_ptr,
            CORBA::ValueDef_var,
            CORBA::ValueDef_out,
            TAO::Objref_Traits<CORBA::ValueDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ValueDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_VALUEDEFSEQ__ARG_TRAITS_)
#define _CORBA_VALUEDEFSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ValueDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ValueDefSeq,
            CORBA::ValueDefSeq_var,
            CORBA::ValueDefSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ValueDefSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_VALUEBOXDEF__ARG_TRAITS_)
#define _CORBA_VALUEBOXDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ValueBoxDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ValueBoxDef_ptr,
            CORBA::ValueBoxDef_var,
            CORBA::ValueBoxDef_out,
            TAO::Objref_Traits<CORBA::ValueBoxDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ValueBoxDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_ABSTRACTINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::AbstractInterfaceDef>
    : public
        Object_Arg_Traits_T<
            CORBA::AbstractInterfaceDef_ptr,
            CORBA::AbstractInterfaceDef_var,
            CORBA::AbstractInterfaceDef_out,
            TAO::Objref_Traits<CORBA::AbstractInterfaceDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::AbstractInterfaceDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_ABSTRACTINTERFACEDEFSEQ__ARG_TRAITS_)
#define _CORBA_ABSTRACTINTERFACEDEFSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::AbstractInterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::AbstractInterfaceDefSeq,
            CORBA::AbstractInterfaceDefSeq_var,
            CORBA::AbstractInterfaceDefSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::AbstractInterfaceDefSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_LOCALINTERFACEDEF__ARG_TRAITS_)
#define _CORBA_LOCALINTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::LocalInterfaceDef>
    : public
        Object_Arg_Traits_T<
            CORBA::LocalInterfaceDef_ptr,
            CORBA::LocalInterfaceDef_var,
            CORBA::LocalInterfaceDef_out,
            TAO::Objref_Traits<CORBA::LocalInterfaceDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::LocalInterfaceDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_EXTVALUEDEF__ARG_TRAITS_)
#define _CORBA_EXTVALUEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ExtValueDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ExtValueDef_ptr,
            CORBA::ExtValueDef_var,
            CORBA::ExtValueDef_out,
            TAO::Objref_Traits<CORBA::ExtValueDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ExtValueDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_CONTAINEDSEQ__ARG_TRAITS_)
#define _CORBA_CONTAINEDSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ContainedSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ContainedSeq,
            CORBA::ContainedSeq_var,
            CORBA::ContainedSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ContainedSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_STRUCTMEMBERSEQ__ARG_TRAITS_)
#define _CORBA_STRUCTMEMBERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::StructMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::StructMemberSeq,
            CORBA::StructMemberSeq_var,
            CORBA::StructMemberSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::StructMemberSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_INITIALIZERSEQ__ARG_TRAITS_)
#define _CORBA_INITIALIZERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::InitializerSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InitializerSeq,
            CORBA::InitializerSeq_var,
            CORBA::InitializerSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::InitializerSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_EXTINITIALIZERSEQ__ARG_TRAITS_)
#define _CORBA_EXTINITIALIZERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ExtInitializerSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExtInitializerSeq,
            CORBA::ExtInitializerSeq_var,
            CORBA::ExtInitializerSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ExtInitializerSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_UNIONMEMBERSEQ__ARG_TRAITS_)
#define _CORBA_UNIONMEMBERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::UnionMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::UnionMemberSeq,
            CORBA::UnionMemberSeq_var,
            CORBA::UnionMemberSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::UnionMemberSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_ENUMMEMBERSEQ__ARG_TRAITS_)
#define _CORBA_ENUMMEMBERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::EnumMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::EnumMemberSeq,
            CORBA::EnumMemberSeq_var,
            CORBA::EnumMemberSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::EnumMemberSeq>
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ScopedName (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ScopedName:1.0",
    "ScopedName",
    &CORBA::_tc_string);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ScopedName =
    &_tao_tc_CORBA_ScopedName;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_CORBA_DefinitionKind[] =
  {
    "dk_none",
    "dk_all",
    "dk_Attribute",
    "dk_Constant",
    "dk_Exception",
    "dk_Interface",
    "dk_Module",
    "dk_Operation",
    "dk_Typedef",
    "dk_Alias",
    "dk_Struct",
    "dk_Union",
    "dk_Enum",
    "dk_Primitive",
    "dk_String",
    "dk_Sequence",
    "dk_Array",
    "dk_Repository",
    "dk_Wstring",
    "dk_Fixed",
    "dk_Value",
    "dk_ValueBox",
    "dk_ValueMember",
    "dk_Native",
    "dk_AbstractInterface",
    "dk_LocalInterface",
    "dk_Component",
    "dk_Home",
    "dk_Factory",
    "dk_Finder",
    "dk_Emits",
    "dk_Publishes",
    "dk_Consumes",
    "dk_Provides",
    "dk_Uses",
    "dk_Event"

  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_DefinitionKind (
    "IDL:omg.org/CORBA/DefinitionKind:1.0",
    "DefinitionKind",
    _tao_enumerators_CORBA_DefinitionKind,
    36);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_DefinitionKind =
    &_tao_tc_CORBA_DefinitionKind;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::IRObject.

CORBA::IRObject_ptr
TAO::Objref_Traits<CORBA::IRObject>::duplicate (
    CORBA::IRObject_ptr p
  )
{
  return CORBA::IRObject::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::IRObject>::release (
    CORBA::IRObject_ptr p
  )
{
  CORBA::release (p);
}

CORBA::IRObject_ptr
TAO::Objref_Traits<CORBA::IRObject>::nil (void)
{
  return CORBA::IRObject::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::IRObject>::marshal (
    CORBA::IRObject_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::DefinitionKind CORBA::IRObject::def_kind (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_IRObject_Proxy_Broker_ == 0)
    {
      CORBA_IRObject_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::DefinitionKind>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_def_kind",
      13,
      this->the_TAO_IRObject_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::IRObject::destroy (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_IRObject_Proxy_Broker_ == 0)
    {
      CORBA_IRObject_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "destroy",
      7,
      this->the_TAO_IRObject_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::IRObject::IRObject (void)
 : the_TAO_IRObject_Proxy_Broker_ (0)
{
  this->CORBA_IRObject_setup_collocation ();
}

void
CORBA::IRObject::CORBA_IRObject_setup_collocation ()
{
  if (::CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_IRObject_Proxy_Broker_ =
        ::CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer (this);
    }
}

CORBA::IRObject::~IRObject (void)
{}

void
CORBA::IRObject::_tao_any_destructor (void *_tao_void_pointer)
{
  IRObject *_tao_tmp_pointer =
    static_cast<IRObject *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::IRObject_ptr
CORBA::IRObject::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<IRObject>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/IRObject:1.0",
        CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::IRObject_ptr
CORBA::IRObject::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<IRObject>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/IRObject:1.0",
        CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::IRObject_ptr
CORBA::IRObject::_duplicate (IRObject_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::IRObject::_tao_release (IRObject_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::IRObject::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::IRObject::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/IRObject:1.0";
}

CORBA::Boolean
CORBA::IRObject::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_IRObject (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/IRObject:1.0",
    "IRObject");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_IRObject =
    &_tao_tc_CORBA_IRObject;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_VersionSpec (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/VersionSpec:1.0",
    "VersionSpec",
    &CORBA::_tc_string);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_VersionSpec =
    &_tao_tc_CORBA_VersionSpec;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::Contained.

CORBA::Contained_ptr
TAO::Objref_Traits<CORBA::Contained>::duplicate (
    CORBA::Contained_ptr p
  )
{
  return CORBA::Contained::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::Contained>::release (
    CORBA::Contained_ptr p
  )
{
  CORBA::release (p);
}

CORBA::Contained_ptr
TAO::Objref_Traits<CORBA::Contained>::nil (void)
{
  return CORBA::Contained::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::Contained>::marshal (
    CORBA::Contained_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_Contained_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

char * CORBA::Contained::id (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::RepositoryId>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_id",
      7,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::Contained::id (
    const char * id
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_id",
      7,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

char * CORBA::Contained::name (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::Identifier>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_name",
      9,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::Contained::name (
    const char * name
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_name
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_name",
      9,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

char * CORBA::Contained::version (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::VersionSpec>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_version",
      12,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::Contained::version (
    const char * version
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_version
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_version",
      12,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::Container_ptr CORBA::Contained::defined_in (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::Container>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_defined_in",
      15,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

char * CORBA::Contained::absolute_name (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ScopedName>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_absolute_name",
      18,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::Repository_ptr CORBA::Contained::containing_repository (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::Repository>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_containing_repository",
      26,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_Contained_Description[] =
  {
    { "kind", &CORBA::_tc_DefinitionKind },
    { "value", &CORBA::_tc_any }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Contained_Description (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/Contained/Description:1.0",
    "Description",
    _tao_fields_CORBA_Contained_Description,
    2);

::CORBA::TypeCode_ptr const CORBA::Contained::_tc_Description =
  &_tao_tc_CORBA_Contained_Description;

// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::Contained::Description::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  Description *_tao_tmp_pointer =
    static_cast<Description *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::Contained::Description * CORBA::Contained::describe (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::Contained::Description>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "describe",
      8,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::Contained::move (
    ::CORBA::Container_ptr new_container,
    const char * new_name,
    const char * new_version
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Contained_Proxy_Broker_ == 0)
    {
      CORBA_Contained_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Container>::in_arg_val _tao_new_container (new_container);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_new_name (new_name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_new_version (new_version);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_new_container,
      &_tao_new_name,
      &_tao_new_version
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "move",
      4,
      this->the_TAO_Contained_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::Contained::Contained (void)
 : the_TAO_Contained_Proxy_Broker_ (0)
{
  this->CORBA_Contained_setup_collocation ();
}

void
CORBA::Contained::CORBA_Contained_setup_collocation ()
{
  if (::CORBA__TAO_Contained_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_Contained_Proxy_Broker_ =
        ::CORBA__TAO_Contained_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_IRObject_setup_collocation ();
}

CORBA::Contained::~Contained (void)
{}

void
CORBA::Contained::_tao_any_destructor (void *_tao_void_pointer)
{
  Contained *_tao_tmp_pointer =
    static_cast<Contained *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::Contained_ptr
CORBA::Contained::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Contained>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/Contained:1.0",
        CORBA__TAO_Contained_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::Contained_ptr
CORBA::Contained::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Contained>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/Contained:1.0",
        CORBA__TAO_Contained_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::Contained_ptr
CORBA::Contained::_duplicate (Contained_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::Contained::_tao_release (Contained_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::Contained::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::Contained::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/Contained:1.0";
}

CORBA::Boolean
CORBA::Contained::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Contained (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/Contained:1.0",
    "Contained");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_Contained =
    &_tao_tc_CORBA_Contained;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_INTERFACEDEFSEQ_CS_)
#define _CORBA_INTERFACEDEFSEQ_CS_

CORBA::InterfaceDefSeq::InterfaceDefSeq (void)
{}

CORBA::InterfaceDefSeq::InterfaceDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        InterfaceDef,
        InterfaceDef_var
      >
    (max)
{}

CORBA::InterfaceDefSeq::InterfaceDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::InterfaceDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        InterfaceDef,
        InterfaceDef_var
      >
    (max, length, buffer, release)
{}

CORBA::InterfaceDefSeq::InterfaceDefSeq (
    const InterfaceDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        InterfaceDef,
        InterfaceDef_var
      >
    (seq)
{}

CORBA::InterfaceDefSeq::~InterfaceDefSeq (void)
{}

void CORBA::InterfaceDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  InterfaceDefSeq * _tao_tmp_pointer =
    static_cast<InterfaceDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_InterfaceDef;
}


#ifndef _TAO_TYPECODE_CORBA_InterfaceDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_InterfaceDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_InterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_InterfaceDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_InterfaceDefSeq_0 =
      &CORBA_InterfaceDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_InterfaceDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/InterfaceDefSeq:1.0",
    "InterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_InterfaceDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InterfaceDefSeq =
    &_tao_tc_CORBA_InterfaceDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_VALUEDEFSEQ_CS_)
#define _CORBA_VALUEDEFSEQ_CS_

CORBA::ValueDefSeq::ValueDefSeq (void)
{}

CORBA::ValueDefSeq::ValueDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        ValueDef,
        ValueDef_var
      >
    (max)
{}

CORBA::ValueDefSeq::ValueDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ValueDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        ValueDef,
        ValueDef_var
      >
    (max, length, buffer, release)
{}

CORBA::ValueDefSeq::ValueDefSeq (
    const ValueDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        ValueDef,
        ValueDef_var
      >
    (seq)
{}

CORBA::ValueDefSeq::~ValueDefSeq (void)
{}

void CORBA::ValueDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ValueDefSeq * _tao_tmp_pointer =
    static_cast<ValueDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ValueDef;
}


#ifndef _TAO_TYPECODE_CORBA_ValueDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_ValueDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ValueDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ValueDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ValueDefSeq_0 =
      &CORBA_ValueDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ValueDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ValueDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ValueDefSeq:1.0",
    "ValueDefSeq",
    &TAO::TypeCode::tc_CORBA_ValueDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ValueDefSeq =
    &_tao_tc_CORBA_ValueDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_ABSTRACTINTERFACEDEFSEQ_CS_)
#define _CORBA_ABSTRACTINTERFACEDEFSEQ_CS_

CORBA::AbstractInterfaceDefSeq::AbstractInterfaceDefSeq (void)
{}

CORBA::AbstractInterfaceDefSeq::AbstractInterfaceDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        AbstractInterfaceDef,
        AbstractInterfaceDef_var
      >
    (max)
{}

CORBA::AbstractInterfaceDefSeq::AbstractInterfaceDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::AbstractInterfaceDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        AbstractInterfaceDef,
        AbstractInterfaceDef_var
      >
    (max, length, buffer, release)
{}

CORBA::AbstractInterfaceDefSeq::AbstractInterfaceDefSeq (
    const AbstractInterfaceDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        AbstractInterfaceDef,
        AbstractInterfaceDef_var
      >
    (seq)
{}

CORBA::AbstractInterfaceDefSeq::~AbstractInterfaceDefSeq (void)
{}

void CORBA::AbstractInterfaceDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  AbstractInterfaceDefSeq * _tao_tmp_pointer =
    static_cast<AbstractInterfaceDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDef;
}


#ifndef _TAO_TYPECODE_CORBA_AbstractInterfaceDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_AbstractInterfaceDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_AbstractInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_AbstractInterfaceDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_AbstractInterfaceDefSeq_0 =
      &CORBA_AbstractInterfaceDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_AbstractInterfaceDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AbstractInterfaceDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/AbstractInterfaceDefSeq:1.0",
    "AbstractInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_AbstractInterfaceDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDefSeq =
    &_tao_tc_CORBA_AbstractInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_LOCALINTERFACEDEFSEQ_CS_)
#define _CORBA_LOCALINTERFACEDEFSEQ_CS_

CORBA::LocalInterfaceDefSeq::LocalInterfaceDefSeq (void)
{}

CORBA::LocalInterfaceDefSeq::LocalInterfaceDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        LocalInterfaceDef,
        LocalInterfaceDef_var
      >
    (max)
{}

CORBA::LocalInterfaceDefSeq::LocalInterfaceDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::LocalInterfaceDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        LocalInterfaceDef,
        LocalInterfaceDef_var
      >
    (max, length, buffer, release)
{}

CORBA::LocalInterfaceDefSeq::LocalInterfaceDefSeq (
    const LocalInterfaceDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        LocalInterfaceDef,
        LocalInterfaceDef_var
      >
    (seq)
{}

CORBA::LocalInterfaceDefSeq::~LocalInterfaceDefSeq (void)
{}

void CORBA::LocalInterfaceDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  LocalInterfaceDefSeq * _tao_tmp_pointer =
    static_cast<LocalInterfaceDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDef;
}


#ifndef _TAO_TYPECODE_CORBA_LocalInterfaceDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_LocalInterfaceDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_LocalInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_LocalInterfaceDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_LocalInterfaceDefSeq_0 =
      &CORBA_LocalInterfaceDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_LocalInterfaceDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_LocalInterfaceDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/LocalInterfaceDefSeq:1.0",
    "LocalInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_LocalInterfaceDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDefSeq =
    &_tao_tc_CORBA_LocalInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXTINTERFACEDEFSEQ_CS_)
#define _CORBA_EXTINTERFACEDEFSEQ_CS_

CORBA::ExtInterfaceDefSeq::ExtInterfaceDefSeq (void)
{}

CORBA::ExtInterfaceDefSeq::ExtInterfaceDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        ExtInterfaceDef,
        ExtInterfaceDef_var
      >
    (max)
{}

CORBA::ExtInterfaceDefSeq::ExtInterfaceDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExtInterfaceDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        ExtInterfaceDef,
        ExtInterfaceDef_var
      >
    (max, length, buffer, release)
{}

CORBA::ExtInterfaceDefSeq::ExtInterfaceDefSeq (
    const ExtInterfaceDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        ExtInterfaceDef,
        ExtInterfaceDef_var
      >
    (seq)
{}

CORBA::ExtInterfaceDefSeq::~ExtInterfaceDefSeq (void)
{}

void CORBA::ExtInterfaceDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExtInterfaceDefSeq * _tao_tmp_pointer =
    static_cast<ExtInterfaceDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDef;
}


#ifndef _TAO_TYPECODE_CORBA_ExtInterfaceDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExtInterfaceDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtInterfaceDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExtInterfaceDefSeq_0 =
      &CORBA_ExtInterfaceDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExtInterfaceDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtInterfaceDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExtInterfaceDefSeq:1.0",
    "ExtInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_ExtInterfaceDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDefSeq =
    &_tao_tc_CORBA_ExtInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXTVALUEDEFSEQ_CS_)
#define _CORBA_EXTVALUEDEFSEQ_CS_

CORBA::ExtValueDefSeq::ExtValueDefSeq (void)
{}

CORBA::ExtValueDefSeq::ExtValueDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        ExtValueDef,
        ExtValueDef_var
      >
    (max)
{}

CORBA::ExtValueDefSeq::ExtValueDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExtValueDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        ExtValueDef,
        ExtValueDef_var
      >
    (max, length, buffer, release)
{}

CORBA::ExtValueDefSeq::ExtValueDefSeq (
    const ExtValueDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        ExtValueDef,
        ExtValueDef_var
      >
    (seq)
{}

CORBA::ExtValueDefSeq::~ExtValueDefSeq (void)
{}

void CORBA::ExtValueDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExtValueDefSeq * _tao_tmp_pointer =
    static_cast<ExtValueDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ExtValueDef;
}


#ifndef _TAO_TYPECODE_CORBA_ExtValueDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExtValueDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtValueDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtValueDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExtValueDefSeq_0 =
      &CORBA_ExtValueDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExtValueDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtValueDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExtValueDefSeq:1.0",
    "ExtValueDefSeq",
    &TAO::TypeCode::tc_CORBA_ExtValueDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtValueDefSeq =
    &_tao_tc_CORBA_ExtValueDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEFSEQ_CS_)
#define _CORBA_EXTABSTRACTINTERFACEDEFSEQ_CS_

CORBA::ExtAbstractInterfaceDefSeq::ExtAbstractInterfaceDefSeq (void)
{}

CORBA::ExtAbstractInterfaceDefSeq::ExtAbstractInterfaceDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        ExtAbstractInterfaceDef,
        ExtAbstractInterfaceDef_var
      >
    (max)
{}

CORBA::ExtAbstractInterfaceDefSeq::ExtAbstractInterfaceDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExtAbstractInterfaceDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        ExtAbstractInterfaceDef,
        ExtAbstractInterfaceDef_var
      >
    (max, length, buffer, release)
{}

CORBA::ExtAbstractInterfaceDefSeq::ExtAbstractInterfaceDefSeq (
    const ExtAbstractInterfaceDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        ExtAbstractInterfaceDef,
        ExtAbstractInterfaceDef_var
      >
    (seq)
{}

CORBA::ExtAbstractInterfaceDefSeq::~ExtAbstractInterfaceDefSeq (void)
{}

void CORBA::ExtAbstractInterfaceDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExtAbstractInterfaceDefSeq * _tao_tmp_pointer =
    static_cast<ExtAbstractInterfaceDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDef;
}


#ifndef _TAO_TYPECODE_CORBA_ExtAbstractInterfaceDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExtAbstractInterfaceDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtAbstractInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtAbstractInterfaceDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExtAbstractInterfaceDefSeq_0 =
      &CORBA_ExtAbstractInterfaceDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExtAbstractInterfaceDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAbstractInterfaceDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExtAbstractInterfaceDefSeq:1.0",
    "ExtAbstractInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_ExtAbstractInterfaceDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDefSeq =
    &_tao_tc_CORBA_ExtAbstractInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXTLOCALINTERFACEDEFSEQ_CS_)
#define _CORBA_EXTLOCALINTERFACEDEFSEQ_CS_

CORBA::ExtLocalInterfaceDefSeq::ExtLocalInterfaceDefSeq (void)
{}

CORBA::ExtLocalInterfaceDefSeq::ExtLocalInterfaceDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        ExtLocalInterfaceDef,
        ExtLocalInterfaceDef_var
      >
    (max)
{}

CORBA::ExtLocalInterfaceDefSeq::ExtLocalInterfaceDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExtLocalInterfaceDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        ExtLocalInterfaceDef,
        ExtLocalInterfaceDef_var
      >
    (max, length, buffer, release)
{}

CORBA::ExtLocalInterfaceDefSeq::ExtLocalInterfaceDefSeq (
    const ExtLocalInterfaceDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        ExtLocalInterfaceDef,
        ExtLocalInterfaceDef_var
      >
    (seq)
{}

CORBA::ExtLocalInterfaceDefSeq::~ExtLocalInterfaceDefSeq (void)
{}

void CORBA::ExtLocalInterfaceDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExtLocalInterfaceDefSeq * _tao_tmp_pointer =
    static_cast<ExtLocalInterfaceDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDef;
}


#ifndef _TAO_TYPECODE_CORBA_ExtLocalInterfaceDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExtLocalInterfaceDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtLocalInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtLocalInterfaceDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExtLocalInterfaceDefSeq_0 =
      &CORBA_ExtLocalInterfaceDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExtLocalInterfaceDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtLocalInterfaceDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExtLocalInterfaceDefSeq:1.0",
    "ExtLocalInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_ExtLocalInterfaceDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDefSeq =
    &_tao_tc_CORBA_ExtLocalInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_CONTAINEDSEQ_CS_)
#define _CORBA_CONTAINEDSEQ_CS_

CORBA::ContainedSeq::ContainedSeq (void)
{}

CORBA::ContainedSeq::ContainedSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        Contained,
        Contained_var
      >
    (max)
{}

CORBA::ContainedSeq::ContainedSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::Contained_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        Contained,
        Contained_var
      >
    (max, length, buffer, release)
{}

CORBA::ContainedSeq::ContainedSeq (
    const ContainedSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        Contained,
        Contained_var
      >
    (seq)
{}

CORBA::ContainedSeq::~ContainedSeq (void)
{}

void CORBA::ContainedSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ContainedSeq * _tao_tmp_pointer =
    static_cast<ContainedSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ContainedSeq_GUARD
#define _TAO_TYPECODE_CORBA_ContainedSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ContainedSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_Contained,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ContainedSeq_0 =
      &CORBA_ContainedSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ContainedSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ContainedSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ContainedSeq:1.0",
    "ContainedSeq",
    &TAO::TypeCode::tc_CORBA_ContainedSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ContainedSeq =
    &_tao_tc_CORBA_ContainedSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_StructMember[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "type", &CORBA::_tc_TypeCode },
    { "type_def", &CORBA::_tc_IDLType }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_StructMember (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/StructMember:1.0",
    "StructMember",
    _tao_fields_CORBA_StructMember,
    3);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_StructMember =
    &_tao_tc_CORBA_StructMember;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::StructMember::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  StructMember *_tao_tmp_pointer =
    static_cast<StructMember *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_STRUCTMEMBERSEQ_CS_)
#define _CORBA_STRUCTMEMBERSEQ_CS_

CORBA::StructMemberSeq::StructMemberSeq (void)
{}

CORBA::StructMemberSeq::StructMemberSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        StructMember
      >
    (max)
{}

CORBA::StructMemberSeq::StructMemberSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::StructMember * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        StructMember
      >
    (max, length, buffer, release)
{}

CORBA::StructMemberSeq::StructMemberSeq (
    const StructMemberSeq &seq
  )
  : TAO::unbounded_value_sequence<
        StructMember
      >
    (seq)
{}

CORBA::StructMemberSeq::~StructMemberSeq (void)
{}

void CORBA::StructMemberSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  StructMemberSeq * _tao_tmp_pointer =
    static_cast<StructMemberSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_StructMemberSeq_GUARD
#define _TAO_TYPECODE_CORBA_StructMemberSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_StructMemberSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_StructMember,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_StructMemberSeq_0 =
      &CORBA_StructMemberSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_StructMemberSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_StructMemberSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/StructMemberSeq:1.0",
    "StructMemberSeq",
    &TAO::TypeCode::tc_CORBA_StructMemberSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_StructMemberSeq =
    &_tao_tc_CORBA_StructMemberSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_Initializer[] =
  {
    { "members", &CORBA::_tc_StructMemberSeq },
    { "name", &CORBA::_tc_Identifier }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Initializer (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/Initializer:1.0",
    "Initializer",
    _tao_fields_CORBA_Initializer,
    2);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_Initializer =
    &_tao_tc_CORBA_Initializer;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::Initializer::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  Initializer *_tao_tmp_pointer =
    static_cast<Initializer *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_INITIALIZERSEQ_CS_)
#define _CORBA_INITIALIZERSEQ_CS_

CORBA::InitializerSeq::InitializerSeq (void)
{}

CORBA::InitializerSeq::InitializerSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        Initializer
      >
    (max)
{}

CORBA::InitializerSeq::InitializerSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::Initializer * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        Initializer
      >
    (max, length, buffer, release)
{}

CORBA::InitializerSeq::InitializerSeq (
    const InitializerSeq &seq
  )
  : TAO::unbounded_value_sequence<
        Initializer
      >
    (seq)
{}

CORBA::InitializerSeq::~InitializerSeq (void)
{}

void CORBA::InitializerSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  InitializerSeq * _tao_tmp_pointer =
    static_cast<InitializerSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_InitializerSeq_GUARD
#define _TAO_TYPECODE_CORBA_InitializerSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_InitializerSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_Initializer,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_InitializerSeq_0 =
      &CORBA_InitializerSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_InitializerSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InitializerSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/InitializerSeq:1.0",
    "InitializerSeq",
    &TAO::TypeCode::tc_CORBA_InitializerSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InitializerSeq =
    &_tao_tc_CORBA_InitializerSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ExceptionDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExceptionDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ExceptionDescription:1.0",
    "ExceptionDescription",
    _tao_fields_CORBA_ExceptionDescription,
    5);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExceptionDescription =
    &_tao_tc_CORBA_ExceptionDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ExceptionDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ExceptionDescription *_tao_tmp_pointer =
    static_cast<ExceptionDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXCDESCRIPTIONSEQ_CS_)
#define _CORBA_EXCDESCRIPTIONSEQ_CS_

CORBA::ExcDescriptionSeq::ExcDescriptionSeq (void)
{}

CORBA::ExcDescriptionSeq::ExcDescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        ExceptionDescription
      >
    (max)
{}

CORBA::ExcDescriptionSeq::ExcDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExceptionDescription * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        ExceptionDescription
      >
    (max, length, buffer, release)
{}

CORBA::ExcDescriptionSeq::ExcDescriptionSeq (
    const ExcDescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        ExceptionDescription
      >
    (seq)
{}

CORBA::ExcDescriptionSeq::~ExcDescriptionSeq (void)
{}

void CORBA::ExcDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExcDescriptionSeq * _tao_tmp_pointer =
    static_cast<ExcDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ExcDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExcDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExcDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExceptionDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExcDescriptionSeq_0 =
      &CORBA_ExcDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExcDescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExcDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExcDescriptionSeq:1.0",
    "ExcDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ExcDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExcDescriptionSeq =
    &_tao_tc_CORBA_ExcDescriptionSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ExtInitializer[] =
  {
    { "members", &CORBA::_tc_StructMemberSeq },
    { "exceptions", &CORBA::_tc_ExcDescriptionSeq },
    { "name", &CORBA::_tc_Identifier }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtInitializer (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ExtInitializer:1.0",
    "ExtInitializer",
    _tao_fields_CORBA_ExtInitializer,
    3);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtInitializer =
    &_tao_tc_CORBA_ExtInitializer;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ExtInitializer::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ExtInitializer *_tao_tmp_pointer =
    static_cast<ExtInitializer *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXTINITIALIZERSEQ_CS_)
#define _CORBA_EXTINITIALIZERSEQ_CS_

CORBA::ExtInitializerSeq::ExtInitializerSeq (void)
{}

CORBA::ExtInitializerSeq::ExtInitializerSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        ExtInitializer
      >
    (max)
{}

CORBA::ExtInitializerSeq::ExtInitializerSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExtInitializer * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        ExtInitializer
      >
    (max, length, buffer, release)
{}

CORBA::ExtInitializerSeq::ExtInitializerSeq (
    const ExtInitializerSeq &seq
  )
  : TAO::unbounded_value_sequence<
        ExtInitializer
      >
    (seq)
{}

CORBA::ExtInitializerSeq::~ExtInitializerSeq (void)
{}

void CORBA::ExtInitializerSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExtInitializerSeq * _tao_tmp_pointer =
    static_cast<ExtInitializerSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ExtInitializerSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExtInitializerSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtInitializerSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtInitializer,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExtInitializerSeq_0 =
      &CORBA_ExtInitializerSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExtInitializerSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtInitializerSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExtInitializerSeq:1.0",
    "ExtInitializerSeq",
    &TAO::TypeCode::tc_CORBA_ExtInitializerSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtInitializerSeq =
    &_tao_tc_CORBA_ExtInitializerSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_UnionMember[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "label", &CORBA::_tc_any },
    { "type", &CORBA::_tc_TypeCode },
    { "type_def", &CORBA::_tc_IDLType }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_UnionMember (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/UnionMember:1.0",
    "UnionMember",
    _tao_fields_CORBA_UnionMember,
    4);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_UnionMember =
    &_tao_tc_CORBA_UnionMember;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::UnionMember::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  UnionMember *_tao_tmp_pointer =
    static_cast<UnionMember *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_UNIONMEMBERSEQ_CS_)
#define _CORBA_UNIONMEMBERSEQ_CS_

CORBA::UnionMemberSeq::UnionMemberSeq (void)
{}

CORBA::UnionMemberSeq::UnionMemberSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        UnionMember
      >
    (max)
{}

CORBA::UnionMemberSeq::UnionMemberSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::UnionMember * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        UnionMember
      >
    (max, length, buffer, release)
{}

CORBA::UnionMemberSeq::UnionMemberSeq (
    const UnionMemberSeq &seq
  )
  : TAO::unbounded_value_sequence<
        UnionMember
      >
    (seq)
{}

CORBA::UnionMemberSeq::~UnionMemberSeq (void)
{}

void CORBA::UnionMemberSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  UnionMemberSeq * _tao_tmp_pointer =
    static_cast<UnionMemberSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_UnionMemberSeq_GUARD
#define _TAO_TYPECODE_CORBA_UnionMemberSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_UnionMemberSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_UnionMember,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_UnionMemberSeq_0 =
      &CORBA_UnionMemberSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_UnionMemberSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_UnionMemberSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/UnionMemberSeq:1.0",
    "UnionMemberSeq",
    &TAO::TypeCode::tc_CORBA_UnionMemberSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_UnionMemberSeq =
    &_tao_tc_CORBA_UnionMemberSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_ENUMMEMBERSEQ_CS_)
#define _CORBA_ENUMMEMBERSEQ_CS_

CORBA::EnumMemberSeq::EnumMemberSeq (void)
{}

CORBA::EnumMemberSeq::EnumMemberSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_string_sequence
    (max)
{}

CORBA::EnumMemberSeq::EnumMemberSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    char * * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_string_sequence
    (max, length, buffer, release)
{}

CORBA::EnumMemberSeq::EnumMemberSeq (
    const EnumMemberSeq &seq
  )
  : TAO::unbounded_string_sequence
    (seq)
{}

CORBA::EnumMemberSeq::~EnumMemberSeq (void)
{}

void CORBA::EnumMemberSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  EnumMemberSeq * _tao_tmp_pointer =
    static_cast<EnumMemberSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_EnumMemberSeq_GUARD
#define _TAO_TYPECODE_CORBA_EnumMemberSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_EnumMemberSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_Identifier,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_EnumMemberSeq_0 =
      &CORBA_EnumMemberSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_EnumMemberSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_EnumMemberSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/EnumMemberSeq:1.0",
    "EnumMemberSeq",
    &TAO::TypeCode::tc_CORBA_EnumMemberSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_EnumMemberSeq =
    &_tao_tc_CORBA_EnumMemberSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::Container.

CORBA::Container_ptr
TAO::Objref_Traits<CORBA::Container>::duplicate (
    CORBA::Container_ptr p
  )
{
  return CORBA::Container::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::Container>::release (
    CORBA::Container_ptr p
  )
{
  CORBA::release (p);
}

CORBA::Container_ptr
TAO::Objref_Traits<CORBA::Container>::nil (void)
{
  return CORBA::Container::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::Container>::marshal (
    CORBA::Container_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_Container_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::Contained_ptr CORBA::Container::lookup (
    const char * search_name
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::Contained>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ScopedName>::in_arg_val _tao_search_name (search_name);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_search_name
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "lookup",
      6,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ContainedSeq * CORBA::Container::contents (
    ::CORBA::DefinitionKind limit_type,
    ::CORBA::Boolean exclude_inherited
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ContainedSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::DefinitionKind>::in_arg_val _tao_limit_type (limit_type);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_exclude_inherited (exclude_inherited);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_limit_type,
      &_tao_exclude_inherited
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "contents",
      8,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ContainedSeq * CORBA::Container::lookup_name (
    const char * search_name,
    ::CORBA::Long levels_to_search,
    ::CORBA::DefinitionKind limit_type,
    ::CORBA::Boolean exclude_inherited
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ContainedSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_search_name (search_name);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_levels_to_search (levels_to_search);
  TAO::Arg_Traits< ::CORBA::DefinitionKind>::in_arg_val _tao_limit_type (limit_type);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_exclude_inherited (exclude_inherited);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_search_name,
      &_tao_levels_to_search,
      &_tao_limit_type,
      &_tao_exclude_inherited
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "lookup_name",
      11,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_Container_Description[] =
  {
    { "contained_object", &CORBA::_tc_Contained },
    { "kind", &CORBA::_tc_DefinitionKind },
    { "value", &CORBA::_tc_any }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Container_Description (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/Container/Description:1.0",
    "Description",
    _tao_fields_CORBA_Container_Description,
    3);

::CORBA::TypeCode_ptr const CORBA::Container::_tc_Description =
  &_tao_tc_CORBA_Container_Description;

// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::Container::Description::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  Description *_tao_tmp_pointer =
    static_cast<Description *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_CONTAINER_DESCRIPTIONSEQ_CS_)
#define _CORBA_CONTAINER_DESCRIPTIONSEQ_CS_

CORBA::Container::DescriptionSeq::DescriptionSeq (void)
{}

CORBA::Container::DescriptionSeq::DescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        Description
      >
    (max)
{}

CORBA::Container::DescriptionSeq::DescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::Container::Description * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        Description
      >
    (max, length, buffer, release)
{}

CORBA::Container::DescriptionSeq::DescriptionSeq (
    const DescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        Description
      >
    (seq)
{}

CORBA::Container::DescriptionSeq::~DescriptionSeq (void)
{}

void CORBA::Container::DescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  DescriptionSeq * _tao_tmp_pointer =
    static_cast<DescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_Container_DescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_Container_DescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_Container_DescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::Container::_tc_Description,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_Container_DescriptionSeq_0 =
      &CORBA_Container_DescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_Container_DescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Container_DescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/Container/DescriptionSeq:1.0",
    "DescriptionSeq",
    &TAO::TypeCode::tc_CORBA_Container_DescriptionSeq_0);

::CORBA::TypeCode_ptr const CORBA::Container::_tc_DescriptionSeq =
  &_tao_tc_CORBA_Container_DescriptionSeq;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::Container::DescriptionSeq * CORBA::Container::describe_contents (
    ::CORBA::DefinitionKind limit_type,
    ::CORBA::Boolean exclude_inherited,
    ::CORBA::Long max_returned_objs
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::Container::DescriptionSeq>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::DefinitionKind>::in_arg_val _tao_limit_type (limit_type);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_exclude_inherited (exclude_inherited);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_max_returned_objs (max_returned_objs);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_limit_type,
      &_tao_exclude_inherited,
      &_tao_max_returned_objs
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "describe_contents",
      17,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ModuleDef_ptr CORBA::Container::create_module (
    const char * id,
    const char * name,
    const char * version
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ModuleDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "create_module",
      13,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ConstantDef_ptr CORBA::Container::create_constant (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr type,
    const ::CORBA::Any & value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ConstantDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_type (type);
  TAO::Arg_Traits< ::CORBA::Any>::in_arg_val _tao_value (value);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_type,
      &_tao_value
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      6,
      "create_constant",
      15,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::StructDef_ptr CORBA::Container::create_struct (
    const char * id,
    const char * name,
    const char * version,
    const ::CORBA::StructMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::StructDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::StructMemberSeq>::in_arg_val _tao_members (members);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_members
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_struct",
      13,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::UnionDef_ptr CORBA::Container::create_union (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr discriminator_type,
    const ::CORBA::UnionMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::UnionDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_discriminator_type (discriminator_type);
  TAO::Arg_Traits< ::CORBA::UnionMemberSeq>::in_arg_val _tao_members (members);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_discriminator_type,
      &_tao_members
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      6,
      "create_union",
      12,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::EnumDef_ptr CORBA::Container::create_enum (
    const char * id,
    const char * name,
    const char * version,
    const ::CORBA::EnumMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::EnumDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::EnumMemberSeq>::in_arg_val _tao_members (members);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_members
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_enum",
      11,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::AliasDef_ptr CORBA::Container::create_alias (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr original_type
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::AliasDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_original_type (original_type);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_original_type
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_alias",
      12,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDef_ptr CORBA::Container::create_interface (
    const char * id,
    const char * name,
    const char * version,
    const ::CORBA::InterfaceDefSeq & base_interfaces
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::InterfaceDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_base_interfaces (base_interfaces);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_base_interfaces
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_interface",
      16,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ValueDef_ptr CORBA::Container::create_value (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::Boolean is_custom,
    ::CORBA::Boolean is_abstract,
    ::CORBA::ValueDef_ptr base_value,
    ::CORBA::Boolean is_truncatable,
    const ::CORBA::ValueDefSeq & abstract_base_values,
    const ::CORBA::InterfaceDefSeq & supported_interfaces,
    const ::CORBA::InitializerSeq & initializers
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ValueDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_custom (is_custom);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_abstract (is_abstract);
  TAO::Arg_Traits< ::CORBA::ValueDef>::in_arg_val _tao_base_value (base_value);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_truncatable (is_truncatable);
  TAO::Arg_Traits< ::CORBA::ValueDefSeq>::in_arg_val _tao_abstract_base_values (abstract_base_values);
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supported_interfaces (supported_interfaces);
  TAO::Arg_Traits< ::CORBA::InitializerSeq>::in_arg_val _tao_initializers (initializers);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_is_custom,
      &_tao_is_abstract,
      &_tao_base_value,
      &_tao_is_truncatable,
      &_tao_abstract_base_values,
      &_tao_supported_interfaces,
      &_tao_initializers
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      11,
      "create_value",
      12,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ValueBoxDef_ptr CORBA::Container::create_value_box (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr original_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ValueBoxDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_original_type_def (original_type_def);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_original_type_def
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_value_box",
      16,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExceptionDef_ptr CORBA::Container::create_exception (
    const char * id,
    const char * name,
    const char * version,
    const ::CORBA::StructMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ExceptionDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::StructMemberSeq>::in_arg_val _tao_members (members);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_members
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_exception",
      16,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::NativeDef_ptr CORBA::Container::create_native (
    const char * id,
    const char * name,
    const char * version
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::NativeDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "create_native",
      13,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::AbstractInterfaceDef_ptr CORBA::Container::create_abstract_interface (
    const char * id,
    const char * name,
    const char * version,
    const ::CORBA::AbstractInterfaceDefSeq & base_interfaces
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::AbstractInterfaceDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::AbstractInterfaceDefSeq>::in_arg_val _tao_base_interfaces (base_interfaces);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_base_interfaces
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_abstract_interface",
      25,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::LocalInterfaceDef_ptr CORBA::Container::create_local_interface (
    const char * id,
    const char * name,
    const char * version,
    const ::CORBA::InterfaceDefSeq & base_interfaces
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::LocalInterfaceDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_base_interfaces (base_interfaces);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_base_interfaces
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_local_interface",
      22,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExtValueDef_ptr CORBA::Container::create_ext_value (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::Boolean is_custom,
    ::CORBA::Boolean is_abstract,
    ::CORBA::ValueDef_ptr base_value,
    ::CORBA::Boolean is_truncatable,
    const ::CORBA::ValueDefSeq & abstract_base_values,
    const ::CORBA::InterfaceDefSeq & supported_interfaces,
    const ::CORBA::ExtInitializerSeq & initializers
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ExtValueDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_custom (is_custom);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_abstract (is_abstract);
  TAO::Arg_Traits< ::CORBA::ValueDef>::in_arg_val _tao_base_value (base_value);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_truncatable (is_truncatable);
  TAO::Arg_Traits< ::CORBA::ValueDefSeq>::in_arg_val _tao_abstract_base_values (abstract_base_values);
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supported_interfaces (supported_interfaces);
  TAO::Arg_Traits< ::CORBA::ExtInitializerSeq>::in_arg_val _tao_initializers (initializers);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_is_custom,
      &_tao_is_abstract,
      &_tao_base_value,
      &_tao_is_truncatable,
      &_tao_abstract_base_values,
      &_tao_supported_interfaces,
      &_tao_initializers
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      11,
      "create_ext_value",
      16,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::Container::Container (void)
 : the_TAO_Container_Proxy_Broker_ (0)
{
  this->CORBA_Container_setup_collocation ();
}

void
CORBA::Container::CORBA_Container_setup_collocation ()
{
  if (::CORBA__TAO_Container_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_Container_Proxy_Broker_ =
        ::CORBA__TAO_Container_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_IRObject_setup_collocation ();
}

CORBA::Container::~Container (void)
{}

void
CORBA::Container::_tao_any_destructor (void *_tao_void_pointer)
{
  Container *_tao_tmp_pointer =
    static_cast<Container *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::Container_ptr
CORBA::Container::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Container>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/Container:1.0",
        CORBA__TAO_Container_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::Container_ptr
CORBA::Container::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Container>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/Container:1.0",
        CORBA__TAO_Container_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::Container_ptr
CORBA::Container::_duplicate (Container_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::Container::_tao_release (Container_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::Container::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::Container::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/Container:1.0";
}

CORBA::Boolean
CORBA::Container::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Container (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/Container:1.0",
    "Container");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_Container =
    &_tao_tc_CORBA_Container;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::IDLType.

CORBA::IDLType_ptr
TAO::Objref_Traits<CORBA::IDLType>::duplicate (
    CORBA::IDLType_ptr p
  )
{
  return CORBA::IDLType::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::IDLType>::release (
    CORBA::IDLType_ptr p
  )
{
  CORBA::release (p);
}

CORBA::IDLType_ptr
TAO::Objref_Traits<CORBA::IDLType>::nil (void)
{
  return CORBA::IDLType::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::IDLType>::marshal (
    CORBA::IDLType_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_IDLType_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::IDLType::type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_IDLType_Proxy_Broker_ == 0)
    {
      CORBA_IDLType_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type",
      9,
      this->the_TAO_IDLType_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::IDLType::IDLType (void)
 : the_TAO_IDLType_Proxy_Broker_ (0)
{
  this->CORBA_IDLType_setup_collocation ();
}

void
CORBA::IDLType::CORBA_IDLType_setup_collocation ()
{
  if (::CORBA__TAO_IDLType_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_IDLType_Proxy_Broker_ =
        ::CORBA__TAO_IDLType_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_IRObject_setup_collocation ();
}

CORBA::IDLType::~IDLType (void)
{}

void
CORBA::IDLType::_tao_any_destructor (void *_tao_void_pointer)
{
  IDLType *_tao_tmp_pointer =
    static_cast<IDLType *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::IDLType_ptr
CORBA::IDLType::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<IDLType>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/IDLType:1.0",
        CORBA__TAO_IDLType_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::IDLType_ptr
CORBA::IDLType::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<IDLType>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/IDLType:1.0",
        CORBA__TAO_IDLType_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::IDLType_ptr
CORBA::IDLType::_duplicate (IDLType_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::IDLType::_tao_release (IDLType_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::IDLType::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::IDLType::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/IDLType:1.0";
}

CORBA::Boolean
CORBA::IDLType::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_IDLType (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/IDLType:1.0",
    "IDLType");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_IDLType =
    &_tao_tc_CORBA_IDLType;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::TypedefDef.

CORBA::TypedefDef_ptr
TAO::Objref_Traits<CORBA::TypedefDef>::duplicate (
    CORBA::TypedefDef_ptr p
  )
{
  return CORBA::TypedefDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::TypedefDef>::release (
    CORBA::TypedefDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::TypedefDef_ptr
TAO::Objref_Traits<CORBA::TypedefDef>::nil (void)
{
  return CORBA::TypedefDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::TypedefDef>::marshal (
    CORBA::TypedefDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::TypedefDef::TypedefDef (void)
 : the_TAO_TypedefDef_Proxy_Broker_ (0)
{
  this->CORBA_TypedefDef_setup_collocation ();
}

void
CORBA::TypedefDef::CORBA_TypedefDef_setup_collocation ()
{
  if (::CORBA__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_TypedefDef_Proxy_Broker_ =
        ::CORBA__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Contained_setup_collocation ();
  this->CORBA_IDLType_setup_collocation ();
}

CORBA::TypedefDef::~TypedefDef (void)
{}

void
CORBA::TypedefDef::_tao_any_destructor (void *_tao_void_pointer)
{
  TypedefDef *_tao_tmp_pointer =
    static_cast<TypedefDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::TypedefDef_ptr
CORBA::TypedefDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<TypedefDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/TypedefDef:1.0",
        CORBA__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::TypedefDef_ptr
CORBA::TypedefDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<TypedefDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/TypedefDef:1.0",
        CORBA__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::TypedefDef_ptr
CORBA::TypedefDef::_duplicate (TypedefDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::TypedefDef::_tao_release (TypedefDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::TypedefDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::TypedefDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/TypedefDef:1.0";
}

CORBA::Boolean
CORBA::TypedefDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_TypedefDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/TypedefDef:1.0",
    "TypedefDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_TypedefDef =
    &_tao_tc_CORBA_TypedefDef;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_TypeDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_TypeDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/TypeDescription:1.0",
    "TypeDescription",
    _tao_fields_CORBA_TypeDescription,
    5);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_TypeDescription =
    &_tao_tc_CORBA_TypeDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::TypeDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  TypeDescription *_tao_tmp_pointer =
    static_cast<TypeDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::DefinitionKind _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::DefinitionKind>::insert (
      _tao_any,
      CORBA::_tc_DefinitionKind,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::DefinitionKind &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::DefinitionKind>::extract (
        _tao_any,
        CORBA::_tc_DefinitionKind,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::IRObject>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::IRObject_ptr _tao_elem
  )
{
  CORBA::IRObject_ptr _tao_objptr =
    CORBA::IRObject::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::IRObject_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::IRObject>::insert (
      _tao_any,
      CORBA::IRObject::_tao_any_destructor,
      CORBA::_tc_IRObject,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::IRObject_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::IRObject>::extract (
        _tao_any,
        CORBA::IRObject::_tao_any_destructor,
        CORBA::_tc_IRObject,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::Contained>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Contained_ptr _tao_elem
  )
{
  CORBA::Contained_ptr _tao_objptr =
    CORBA::Contained::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Contained_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::Contained>::insert (
      _tao_any,
      CORBA::Contained::_tao_any_destructor,
      CORBA::_tc_Contained,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Contained_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::Contained>::extract (
        _tao_any,
        CORBA::Contained::_tao_any_destructor,
        CORBA::_tc_Contained,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::Contained::Description &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Contained::Description>::insert_copy (
      _tao_any,
      CORBA::Contained::Description::_tao_any_destructor,
      CORBA::Contained::_tc_Description,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Contained::Description *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Contained::Description>::insert (
      _tao_any,
      CORBA::Contained::Description::_tao_any_destructor,
      CORBA::Contained::_tc_Description,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Contained::Description *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::Contained::Description *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::Contained::Description *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::Contained::Description>::extract (
        _tao_any,
        CORBA::Contained::Description::_tao_any_destructor,
        CORBA::Contained::_tc_Description,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::InterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_InterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDefSeq>::insert (
      _tao_any,
      CORBA::InterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_InterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceDefSeq>::extract (
        _tao_any,
        CORBA::InterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_InterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ValueDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ValueDefSeq>::insert_copy (
      _tao_any,
      CORBA::ValueDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ValueDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ValueDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ValueDefSeq>::insert (
      _tao_any,
      CORBA::ValueDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ValueDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ValueDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ValueDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ValueDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ValueDefSeq>::extract (
        _tao_any,
        CORBA::ValueDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ValueDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::AbstractInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AbstractInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::AbstractInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_AbstractInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AbstractInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::AbstractInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_AbstractInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::AbstractInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::AbstractInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::AbstractInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::AbstractInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_AbstractInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::LocalInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::LocalInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::LocalInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_LocalInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::LocalInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::LocalInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_LocalInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::LocalInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::LocalInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::LocalInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::LocalInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_LocalInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExtInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::ExtInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::ExtInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtValueDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtValueDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExtValueDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtValueDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtValueDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtValueDefSeq>::insert (
      _tao_any,
      CORBA::ExtValueDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtValueDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtValueDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtValueDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtValueDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtValueDefSeq>::extract (
        _tao_any,
        CORBA::ExtValueDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtValueDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtAbstractInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAbstractInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExtAbstractInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtAbstractInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAbstractInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::ExtAbstractInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtAbstractInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtAbstractInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtAbstractInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtAbstractInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::ExtAbstractInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtAbstractInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtLocalInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtLocalInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExtLocalInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtLocalInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtLocalInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::ExtLocalInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtLocalInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtLocalInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtLocalInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtLocalInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::ExtLocalInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtLocalInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ContainedSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContainedSeq>::insert_copy (
      _tao_any,
      CORBA::ContainedSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ContainedSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ContainedSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContainedSeq>::insert (
      _tao_any,
      CORBA::ContainedSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ContainedSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ContainedSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ContainedSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ContainedSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ContainedSeq>::extract (
        _tao_any,
        CORBA::ContainedSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ContainedSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::StructMember &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::StructMember>::insert_copy (
      _tao_any,
      CORBA::StructMember::_tao_any_destructor,
      CORBA::_tc_StructMember,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructMember *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::StructMember>::insert (
      _tao_any,
      CORBA::StructMember::_tao_any_destructor,
      CORBA::_tc_StructMember,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StructMember *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::StructMember *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::StructMember *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::StructMember>::extract (
        _tao_any,
        CORBA::StructMember::_tao_any_destructor,
        CORBA::_tc_StructMember,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::StructMemberSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::StructMemberSeq>::insert_copy (
      _tao_any,
      CORBA::StructMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_StructMemberSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructMemberSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::StructMemberSeq>::insert (
      _tao_any,
      CORBA::StructMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_StructMemberSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StructMemberSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::StructMemberSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::StructMemberSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::StructMemberSeq>::extract (
        _tao_any,
        CORBA::StructMemberSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_StructMemberSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::Initializer &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Initializer>::insert_copy (
      _tao_any,
      CORBA::Initializer::_tao_any_destructor,
      CORBA::_tc_Initializer,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Initializer *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Initializer>::insert (
      _tao_any,
      CORBA::Initializer::_tao_any_destructor,
      CORBA::_tc_Initializer,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Initializer *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::Initializer *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::Initializer *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::Initializer>::extract (
        _tao_any,
        CORBA::Initializer::_tao_any_destructor,
        CORBA::_tc_Initializer,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InitializerSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InitializerSeq>::insert_copy (
      _tao_any,
      CORBA::InitializerSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_InitializerSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InitializerSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InitializerSeq>::insert (
      _tao_any,
      CORBA::InitializerSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_InitializerSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InitializerSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InitializerSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InitializerSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InitializerSeq>::extract (
        _tao_any,
        CORBA::InitializerSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_InitializerSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExceptionDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDescription>::insert_copy (
      _tao_any,
      CORBA::ExceptionDescription::_tao_any_destructor,
      CORBA::_tc_ExceptionDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDescription>::insert (
      _tao_any,
      CORBA::ExceptionDescription::_tao_any_destructor,
      CORBA::_tc_ExceptionDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExceptionDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExceptionDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExceptionDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExceptionDescription>::extract (
        _tao_any,
        CORBA::ExceptionDescription::_tao_any_destructor,
        CORBA::_tc_ExceptionDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExcDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExcDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ExcDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExcDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExcDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExcDescriptionSeq>::insert (
      _tao_any,
      CORBA::ExcDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExcDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExcDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExcDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExcDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExcDescriptionSeq>::extract (
        _tao_any,
        CORBA::ExcDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExcDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtInitializer &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInitializer>::insert_copy (
      _tao_any,
      CORBA::ExtInitializer::_tao_any_destructor,
      CORBA::_tc_ExtInitializer,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInitializer *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInitializer>::insert (
      _tao_any,
      CORBA::ExtInitializer::_tao_any_destructor,
      CORBA::_tc_ExtInitializer,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInitializer *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtInitializer *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtInitializer *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtInitializer>::extract (
        _tao_any,
        CORBA::ExtInitializer::_tao_any_destructor,
        CORBA::_tc_ExtInitializer,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtInitializerSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInitializerSeq>::insert_copy (
      _tao_any,
      CORBA::ExtInitializerSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtInitializerSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInitializerSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInitializerSeq>::insert (
      _tao_any,
      CORBA::ExtInitializerSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtInitializerSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInitializerSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtInitializerSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtInitializerSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtInitializerSeq>::extract (
        _tao_any,
        CORBA::ExtInitializerSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtInitializerSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::UnionMember &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::UnionMember>::insert_copy (
      _tao_any,
      CORBA::UnionMember::_tao_any_destructor,
      CORBA::_tc_UnionMember,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionMember *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::UnionMember>::insert (
      _tao_any,
      CORBA::UnionMember::_tao_any_destructor,
      CORBA::_tc_UnionMember,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::UnionMember *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::UnionMember *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::UnionMember *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::UnionMember>::extract (
        _tao_any,
        CORBA::UnionMember::_tao_any_destructor,
        CORBA::_tc_UnionMember,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::UnionMemberSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::UnionMemberSeq>::insert_copy (
      _tao_any,
      CORBA::UnionMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_UnionMemberSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionMemberSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::UnionMemberSeq>::insert (
      _tao_any,
      CORBA::UnionMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_UnionMemberSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::UnionMemberSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::UnionMemberSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::UnionMemberSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::UnionMemberSeq>::extract (
        _tao_any,
        CORBA::UnionMemberSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_UnionMemberSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::EnumMemberSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::EnumMemberSeq>::insert_copy (
      _tao_any,
      CORBA::EnumMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_EnumMemberSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::EnumMemberSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::EnumMemberSeq>::insert (
      _tao_any,
      CORBA::EnumMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_EnumMemberSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::EnumMemberSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::EnumMemberSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::EnumMemberSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::EnumMemberSeq>::extract (
        _tao_any,
        CORBA::EnumMemberSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_EnumMemberSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::Container>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Container_ptr _tao_elem
  )
{
  CORBA::Container_ptr _tao_objptr =
    CORBA::Container::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Container_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::Container>::insert (
      _tao_any,
      CORBA::Container::_tao_any_destructor,
      CORBA::_tc_Container,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Container_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::Container>::extract (
        _tao_any,
        CORBA::Container::_tao_any_destructor,
        CORBA::_tc_Container,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::Container::Description &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Container::Description>::insert_copy (
      _tao_any,
      CORBA::Container::Description::_tao_any_destructor,
      CORBA::Container::_tc_Description,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Container::Description *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Container::Description>::insert (
      _tao_any,
      CORBA::Container::Description::_tao_any_destructor,
      CORBA::Container::_tc_Description,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Container::Description *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::Container::Description *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::Container::Description *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::Container::Description>::extract (
        _tao_any,
        CORBA::Container::Description::_tao_any_destructor,
        CORBA::Container::_tc_Description,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::Container::DescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Container::DescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::Container::DescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_Container_DescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Container::DescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Container::DescriptionSeq>::insert (
      _tao_any,
      CORBA::Container::DescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_Container_DescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Container::DescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::Container::DescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::Container::DescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::Container::DescriptionSeq>::extract (
        _tao_any,
        CORBA::Container::DescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_Container_DescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::IDLType>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::IDLType_ptr _tao_elem
  )
{
  CORBA::IDLType_ptr _tao_objptr =
    CORBA::IDLType::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::IDLType_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::IDLType>::insert (
      _tao_any,
      CORBA::IDLType::_tao_any_destructor,
      CORBA::_tc_IDLType,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::IDLType_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::IDLType>::extract (
        _tao_any,
        CORBA::IDLType::_tao_any_destructor,
        CORBA::_tc_IDLType,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::TypedefDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::TypedefDef_ptr _tao_elem
  )
{
  CORBA::TypedefDef_ptr _tao_objptr =
    CORBA::TypedefDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::TypedefDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::TypedefDef>::insert (
      _tao_any,
      CORBA::TypedefDef::_tao_any_destructor,
      CORBA::_tc_TypedefDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::TypedefDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::TypedefDef>::extract (
        _tao_any,
        CORBA::TypedefDef::_tao_any_destructor,
        CORBA::_tc_TypedefDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::TypeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::TypeDescription>::insert_copy (
      _tao_any,
      CORBA::TypeDescription::_tao_any_destructor,
      CORBA::_tc_TypeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::TypeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::TypeDescription>::insert (
      _tao_any,
      CORBA::TypeDescription::_tao_any_destructor,
      CORBA::_tc_TypeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::TypeDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::TypeDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::TypeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::TypeDescription>::extract (
        _tao_any,
        CORBA::TypeDescription::_tao_any_destructor,
        CORBA::_tc_TypeDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_cs.cpp:51

CORBA::Boolean operator<< (TAO_OutputCDR & strm, CORBA::DefinitionKind _tao_enumerator)
{
  return strm << static_cast<CORBA::ULong> (_tao_enumerator);
}

CORBA::Boolean operator>> (TAO_InputCDR & strm, CORBA::DefinitionKind & _tao_enumerator)
{
  CORBA::ULong _tao_temp = 0;
  CORBA::Boolean const _tao_success = strm >> _tao_temp;

  if (_tao_success)
    {
      _tao_enumerator = static_cast<CORBA::DefinitionKind> (_tao_temp);
    }

  return _tao_success;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::IRObject_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::IRObject_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::IRObject RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Contained::Description &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.kind) &&
    (strm << _tao_aggregate.value);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Contained::Description &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.kind) &&
    (strm >> _tao_aggregate.value);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Contained_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Contained_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::Contained RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_Contained_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_InterfaceDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_InterfaceDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_InterfaceDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ValueDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_ValueDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ValueDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ValueDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ValueDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AbstractInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AbstractInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::LocalInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::LocalInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExtValueDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExtValueDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtValueDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtValueDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ExtValueDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAbstractInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAbstractInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtLocalInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtLocalInterfaceDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ContainedSeq_CPP_
#define _TAO_CDR_OP_CORBA_ContainedSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ContainedSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ContainedSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ContainedSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::StructMember &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    CORBA::Object::marshal (
        _tao_aggregate.type_def.in (),
        strm
      );
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::StructMember &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.type_def.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_StructMemberSeq_CPP_
#define _TAO_CDR_OP_CORBA_StructMemberSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::StructMemberSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::StructMemberSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_StructMemberSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Initializer &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.members) &&
    (strm << _tao_aggregate.name.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Initializer &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.members) &&
    (strm >> _tao_aggregate.name.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_InitializerSeq_CPP_
#define _TAO_CDR_OP_CORBA_InitializerSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InitializerSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InitializerSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_InitializerSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExceptionDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExceptionDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.type.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExcDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExcDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExcDescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExcDescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ExcDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtInitializer &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.members) &&
    (strm << _tao_aggregate.exceptions) &&
    (strm << _tao_aggregate.name.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtInitializer &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.members) &&
    (strm >> _tao_aggregate.exceptions) &&
    (strm >> _tao_aggregate.name.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExtInitializerSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExtInitializerSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtInitializerSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtInitializerSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ExtInitializerSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::UnionMember &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.label) &&
    (strm << _tao_aggregate.type.in ()) &&
    CORBA::Object::marshal (
        _tao_aggregate.type_def.in (),
        strm
      );
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::UnionMember &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.label) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.type_def.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_UnionMemberSeq_CPP_
#define _TAO_CDR_OP_CORBA_UnionMemberSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::UnionMemberSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::UnionMemberSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_UnionMemberSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_EnumMemberSeq_CPP_
#define _TAO_CDR_OP_CORBA_EnumMemberSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::EnumMemberSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::EnumMemberSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_EnumMemberSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Container::Description &_tao_aggregate
  )
{
  return
    CORBA::Object::marshal (
        _tao_aggregate.contained_object.in (),
        strm
      ) &&
    (strm << _tao_aggregate.kind) &&
    (strm << _tao_aggregate.value);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Container::Description &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.contained_object.out ()) &&
    (strm >> _tao_aggregate.kind) &&
    (strm >> _tao_aggregate.value);
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_Container_DescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_Container_DescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Container::DescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Container::DescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_Container_DescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Container_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Container_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::Container RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_Container_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::IDLType_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::IDLType_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::IDLType RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_IDLType_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::TypedefDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::TypedefDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::TypedefDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::TypeDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::TypeDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.type.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL
