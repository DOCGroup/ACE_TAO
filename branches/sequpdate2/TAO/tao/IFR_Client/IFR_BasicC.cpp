// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:293


#include "IFR_BasicC.h"
#include "tao/CDR.h"
#include "tao/IFR_Client/IFR_BaseC.h"
#include "tao/AnyTypeCode/orb_typesA.h"
#include "tao/AnyTypeCode/ParameterModeA.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Enum_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/AnyTypeCode/Recursive_Type_TypeCode.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "tao/AnyTypeCode/Any_Basic_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/AnyTypeCode/Any_Arg_Traits.h"
#include "ace/OS_NS_string.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "IFR_BasicC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:70

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_CONTAINED__ARG_TRAITS_)
#define _CORBA_CONTAINED__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::Contained>
    : public
        Object_Arg_Traits_T<
            CORBA::Contained_ptr,
            CORBA::Contained_var,
            CORBA::Contained_out,
            TAO::Objref_Traits<CORBA::Contained>,
            TAO::Any_Insert_Policy_Stream <CORBA::Contained_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_IDLTYPE__ARG_TRAITS_)
#define _CORBA_IDLTYPE__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::IDLType>
    : public
        Object_Arg_Traits_T<
            CORBA::IDLType_ptr,
            CORBA::IDLType_var,
            CORBA::IDLType_out,
            TAO::Objref_Traits<CORBA::IDLType>,
            TAO::Any_Insert_Policy_Stream <CORBA::IDLType_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:828

#if !defined (_CORBA_INTERFACEDEF_FULLINTERFACEDESCRIPTION__ARG_TRAITS_)
#define _CORBA_INTERFACEDEF_FULLINTERFACEDESCRIPTION__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::InterfaceDef::FullInterfaceDescription>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InterfaceDef::FullInterfaceDescription,
            CORBA::InterfaceDef::FullInterfaceDescription_var,
            CORBA::InterfaceDef::FullInterfaceDescription_out,
            TAO::Any_Insert_Policy_Stream <CORBA::InterfaceDef::FullInterfaceDescription>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_INTERFACEDEFSEQ__ARG_TRAITS_)
#define _CORBA_INTERFACEDEFSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::InterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InterfaceDefSeq,
            CORBA::InterfaceDefSeq_var,
            CORBA::InterfaceDefSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::InterfaceDefSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_STRUCTMEMBERSEQ__ARG_TRAITS_)
#define _CORBA_STRUCTMEMBERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::StructMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::StructMemberSeq,
            CORBA::StructMemberSeq_var,
            CORBA::StructMemberSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::StructMemberSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_EXCDESCRIPTIONSEQ__ARG_TRAITS_)
#define _CORBA_EXCDESCRIPTIONSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ExcDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExcDescriptionSeq,
            CORBA::ExcDescriptionSeq_var,
            CORBA::ExcDescriptionSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ExcDescriptionSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_UNIONMEMBERSEQ__ARG_TRAITS_)
#define _CORBA_UNIONMEMBERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::UnionMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::UnionMemberSeq,
            CORBA::UnionMemberSeq_var,
            CORBA::UnionMemberSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::UnionMemberSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_ENUMMEMBERSEQ__ARG_TRAITS_)
#define _CORBA_ENUMMEMBERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::EnumMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::EnumMemberSeq,
            CORBA::EnumMemberSeq_var,
            CORBA::EnumMemberSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::EnumMemberSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_PRIMITIVEDEF__ARG_TRAITS_)
#define _CORBA_PRIMITIVEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::PrimitiveDef>
    : public
        Object_Arg_Traits_T<
            CORBA::PrimitiveDef_ptr,
            CORBA::PrimitiveDef_var,
            CORBA::PrimitiveDef_out,
            TAO::Objref_Traits<CORBA::PrimitiveDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::PrimitiveDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_STRINGDEF__ARG_TRAITS_)
#define _CORBA_STRINGDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::StringDef>
    : public
        Object_Arg_Traits_T<
            CORBA::StringDef_ptr,
            CORBA::StringDef_var,
            CORBA::StringDef_out,
            TAO::Objref_Traits<CORBA::StringDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::StringDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_SEQUENCEDEF__ARG_TRAITS_)
#define _CORBA_SEQUENCEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::SequenceDef>
    : public
        Object_Arg_Traits_T<
            CORBA::SequenceDef_ptr,
            CORBA::SequenceDef_var,
            CORBA::SequenceDef_out,
            TAO::Objref_Traits<CORBA::SequenceDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::SequenceDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_ARRAYDEF__ARG_TRAITS_)
#define _CORBA_ARRAYDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ArrayDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ArrayDef_ptr,
            CORBA::ArrayDef_var,
            CORBA::ArrayDef_out,
            TAO::Objref_Traits<CORBA::ArrayDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ArrayDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_WSTRINGDEF__ARG_TRAITS_)
#define _CORBA_WSTRINGDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::WstringDef>
    : public
        Object_Arg_Traits_T<
            CORBA::WstringDef_ptr,
            CORBA::WstringDef_var,
            CORBA::WstringDef_out,
            TAO::Objref_Traits<CORBA::WstringDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::WstringDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_FIXEDDEF__ARG_TRAITS_)
#define _CORBA_FIXEDDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::FixedDef>
    : public
        Object_Arg_Traits_T<
            CORBA::FixedDef_ptr,
            CORBA::FixedDef_var,
            CORBA::FixedDef_out,
            TAO::Objref_Traits<CORBA::FixedDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::FixedDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:786

#if !defined (_CORBA_PRIMITIVEKIND__ARG_TRAITS_)
#define _CORBA_PRIMITIVEKIND__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::PrimitiveKind>
    : public
        Basic_Arg_Traits_T<
            CORBA::PrimitiveKind,
            TAO::Any_Insert_Policy_Stream <CORBA::PrimitiveKind>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_)
#define _CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ExceptionDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExceptionDefSeq,
            CORBA::ExceptionDefSeq_var,
            CORBA::ExceptionDefSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ExceptionDefSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:786

#if !defined (_CORBA_ATTRIBUTEMODE__ARG_TRAITS_)
#define _CORBA_ATTRIBUTEMODE__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::AttributeMode>
    : public
        Basic_Arg_Traits_T<
            CORBA::AttributeMode,
            TAO::Any_Insert_Policy_Stream <CORBA::AttributeMode>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_ATTRIBUTEDEF__ARG_TRAITS_)
#define _CORBA_ATTRIBUTEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::AttributeDef>
    : public
        Object_Arg_Traits_T<
            CORBA::AttributeDef_ptr,
            CORBA::AttributeDef_var,
            CORBA::AttributeDef_out,
            TAO::Objref_Traits<CORBA::AttributeDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::AttributeDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:828

#if !defined (_CORBA_EXTATTRIBUTEDESCRIPTION__ARG_TRAITS_)
#define _CORBA_EXTATTRIBUTEDESCRIPTION__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ExtAttributeDescription>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExtAttributeDescription,
            CORBA::ExtAttributeDescription_var,
            CORBA::ExtAttributeDescription_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ExtAttributeDescription>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_)
#define _CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ExtAttributeDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ExtAttributeDef_ptr,
            CORBA::ExtAttributeDef_var,
            CORBA::ExtAttributeDef_out,
            TAO::Objref_Traits<CORBA::ExtAttributeDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ExtAttributeDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:786

#if !defined (_CORBA_OPERATIONMODE__ARG_TRAITS_)
#define _CORBA_OPERATIONMODE__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::OperationMode>
    : public
        Basic_Arg_Traits_T<
            CORBA::OperationMode,
            TAO::Any_Insert_Policy_Stream <CORBA::OperationMode>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_)
#define _CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ParDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ParDescriptionSeq,
            CORBA::ParDescriptionSeq_var,
            CORBA::ParDescriptionSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ParDescriptionSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_CONTEXTIDSEQ__ARG_TRAITS_)
#define _CORBA_CONTEXTIDSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ContextIdSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ContextIdSeq,
            CORBA::ContextIdSeq_var,
            CORBA::ContextIdSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ContextIdSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_OPERATIONDEF__ARG_TRAITS_)
#define _CORBA_OPERATIONDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::OperationDef>
    : public
        Object_Arg_Traits_T<
            CORBA::OperationDef_ptr,
            CORBA::OperationDef_var,
            CORBA::OperationDef_out,
            TAO::Objref_Traits<CORBA::OperationDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::OperationDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:828

#if !defined (_CORBA_INTERFACEATTREXTENSION_EXTFULLINTERFACEDESCRIPTION__ARG_TRAITS_)
#define _CORBA_INTERFACEATTREXTENSION_EXTFULLINTERFACEDESCRIPTION__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription,
            CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_var,
            CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_out,
            TAO::Any_Insert_Policy_Stream <CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be\be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_CORBA_PrimitiveKind[] =
  {
    "pk_null",
    "pk_void",
    "pk_short",
    "pk_long",
    "pk_ushort",
    "pk_ulong",
    "pk_float",
    "pk_double",
    "pk_boolean",
    "pk_char",
    "pk_octet",
    "pk_any",
    "pk_TypeCode",
    "pk_Principal",
    "pk_string",
    "pk_objref",
    "pk_longlong",
    "pk_ulonglong",
    "pk_longdouble",
    "pk_wchar",
    "pk_wstring",
    "pk_value_base"

  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_PrimitiveKind (
    "IDL:omg.org/CORBA/PrimitiveKind:1.0",
    "PrimitiveKind",
    _tao_enumerators_CORBA_PrimitiveKind,
    22);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_PrimitiveKind =
    &_tao_tc_CORBA_PrimitiveKind;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::Repository.

CORBA::Repository_ptr
TAO::Objref_Traits<CORBA::Repository>::duplicate (
    CORBA::Repository_ptr p
  )
{
  return CORBA::Repository::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::Repository>::release (
    CORBA::Repository_ptr p
  )
{
  CORBA::release (p);
}

CORBA::Repository_ptr
TAO::Objref_Traits<CORBA::Repository>::nil (void)
{
  return CORBA::Repository::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::Repository>::marshal (
    CORBA::Repository_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::Contained_ptr CORBA::Repository::lookup_id (
    const char * search_id
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::Contained>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_search_id (search_id);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_search_id
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "lookup_id",
      9,
      this->the_TAO_Repository_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::Repository::get_canonical_typecode (
    ::CORBA::TypeCode_ptr tc
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::TypeCode>::in_arg_val _tao_tc (tc);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_tc
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_canonical_typecode",
      22,
      this->the_TAO_Repository_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::PrimitiveDef_ptr CORBA::Repository::get_primitive (
    ::CORBA::PrimitiveKind kind
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::PrimitiveDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::PrimitiveKind>::in_arg_val _tao_kind (kind);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_kind
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_primitive",
      13,
      this->the_TAO_Repository_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::StringDef_ptr CORBA::Repository::create_string (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::StringDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "create_string",
      13,
      this->the_TAO_Repository_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::WstringDef_ptr CORBA::Repository::create_wstring (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::WstringDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "create_wstring",
      14,
      this->the_TAO_Repository_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::SequenceDef_ptr CORBA::Repository::create_sequence (
    ::CORBA::ULong bound,
    ::CORBA::IDLType_ptr element_type
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::SequenceDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_element_type (element_type);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound,
      &_tao_element_type
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "create_sequence",
      15,
      this->the_TAO_Repository_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ArrayDef_ptr CORBA::Repository::create_array (
    ::CORBA::ULong length,
    ::CORBA::IDLType_ptr element_type
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ArrayDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_length (length);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_element_type (element_type);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_length,
      &_tao_element_type
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "create_array",
      12,
      this->the_TAO_Repository_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::FixedDef_ptr CORBA::Repository::create_fixed (
    ::CORBA::UShort digits,
    ::CORBA::Short scale
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::FixedDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::UShort>::in_arg_val _tao_digits (digits);
  TAO::Arg_Traits< ::CORBA::Short>::in_arg_val _tao_scale (scale);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_digits,
      &_tao_scale
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "create_fixed",
      12,
      this->the_TAO_Repository_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::Repository::Repository (void)
 : the_TAO_Repository_Proxy_Broker_ (0)
{
  this->CORBA_Repository_setup_collocation ();
}

void
CORBA::Repository::CORBA_Repository_setup_collocation ()
{
  if (::CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_Repository_Proxy_Broker_ =
        ::CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Container_setup_collocation ();
}

CORBA::Repository::~Repository (void)
{}

void
CORBA::Repository::_tao_any_destructor (void *_tao_void_pointer)
{
  Repository *_tao_tmp_pointer =
    static_cast<Repository *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::Repository_ptr
CORBA::Repository::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Repository>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/Repository:1.0",
        CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::Repository_ptr
CORBA::Repository::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Repository>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/Repository:1.0",
        CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::Repository_ptr
CORBA::Repository::_duplicate (Repository_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::Repository::_tao_release (Repository_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::Repository::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Repository:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::Repository::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/Repository:1.0";
}

CORBA::Boolean
CORBA::Repository::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Repository (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/Repository:1.0",
    "Repository");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_Repository =
    &_tao_tc_CORBA_Repository;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ModuleDef.

CORBA::ModuleDef_ptr
TAO::Objref_Traits<CORBA::ModuleDef>::duplicate (
    CORBA::ModuleDef_ptr p
  )
{
  return CORBA::ModuleDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ModuleDef>::release (
    CORBA::ModuleDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ModuleDef_ptr
TAO::Objref_Traits<CORBA::ModuleDef>::nil (void)
{
  return CORBA::ModuleDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ModuleDef>::marshal (
    CORBA::ModuleDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ModuleDef::ModuleDef (void)
 : the_TAO_ModuleDef_Proxy_Broker_ (0)
{
  this->CORBA_ModuleDef_setup_collocation ();
}

void
CORBA::ModuleDef::CORBA_ModuleDef_setup_collocation ()
{
  if (::CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ModuleDef_Proxy_Broker_ =
        ::CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Container_setup_collocation ();
  this->CORBA_Contained_setup_collocation ();
}

CORBA::ModuleDef::~ModuleDef (void)
{}

void
CORBA::ModuleDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ModuleDef *_tao_tmp_pointer =
    static_cast<ModuleDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ModuleDef_ptr
CORBA::ModuleDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ModuleDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ModuleDef:1.0",
        CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ModuleDef_ptr
CORBA::ModuleDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ModuleDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ModuleDef:1.0",
        CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ModuleDef_ptr
CORBA::ModuleDef::_duplicate (ModuleDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ModuleDef::_tao_release (ModuleDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ModuleDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ModuleDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ModuleDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ModuleDef:1.0";
}

CORBA::Boolean
CORBA::ModuleDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ModuleDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ModuleDef:1.0",
    "ModuleDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ModuleDef =
    &_tao_tc_CORBA_ModuleDef;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ModuleDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ModuleDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ModuleDescription:1.0",
    "ModuleDescription",
    _tao_fields_CORBA_ModuleDescription,
    4);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ModuleDescription =
    &_tao_tc_CORBA_ModuleDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ModuleDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ModuleDescription *_tao_tmp_pointer =
    static_cast<ModuleDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ConstantDef.

CORBA::ConstantDef_ptr
TAO::Objref_Traits<CORBA::ConstantDef>::duplicate (
    CORBA::ConstantDef_ptr p
  )
{
  return CORBA::ConstantDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ConstantDef>::release (
    CORBA::ConstantDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ConstantDef_ptr
TAO::Objref_Traits<CORBA::ConstantDef>::nil (void)
{
  return CORBA::ConstantDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ConstantDef>::marshal (
    CORBA::ConstantDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::ConstantDef::type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type",
      9,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::ConstantDef::type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::IDLType>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type_def",
      13,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ConstantDef::type_def (
    ::CORBA::IDLType_ptr type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_type_def (type_def);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_type_def
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_type_def",
      13,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::Any * CORBA::ConstantDef::value (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::Any>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_value",
      10,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ConstantDef::value (
    const ::CORBA::Any & value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Any>::in_arg_val _tao_value (value);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_value",
      10,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::ConstantDef::ConstantDef (void)
 : the_TAO_ConstantDef_Proxy_Broker_ (0)
{
  this->CORBA_ConstantDef_setup_collocation ();
}

void
CORBA::ConstantDef::CORBA_ConstantDef_setup_collocation ()
{
  if (::CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ConstantDef_Proxy_Broker_ =
        ::CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Contained_setup_collocation ();
}

CORBA::ConstantDef::~ConstantDef (void)
{}

void
CORBA::ConstantDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ConstantDef *_tao_tmp_pointer =
    static_cast<ConstantDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ConstantDef_ptr
CORBA::ConstantDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ConstantDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ConstantDef:1.0",
        CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ConstantDef_ptr
CORBA::ConstantDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ConstantDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ConstantDef:1.0",
        CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ConstantDef_ptr
CORBA::ConstantDef::_duplicate (ConstantDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ConstantDef::_tao_release (ConstantDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ConstantDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ConstantDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ConstantDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ConstantDef:1.0";
}

CORBA::Boolean
CORBA::ConstantDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ConstantDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ConstantDef:1.0",
    "ConstantDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ConstantDef =
    &_tao_tc_CORBA_ConstantDef;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ConstantDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode },
    { "value", &CORBA::_tc_any }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ConstantDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ConstantDescription:1.0",
    "ConstantDescription",
    _tao_fields_CORBA_ConstantDescription,
    6);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ConstantDescription =
    &_tao_tc_CORBA_ConstantDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ConstantDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ConstantDescription *_tao_tmp_pointer =
    static_cast<ConstantDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::StructDef.

CORBA::StructDef_ptr
TAO::Objref_Traits<CORBA::StructDef>::duplicate (
    CORBA::StructDef_ptr p
  )
{
  return CORBA::StructDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::StructDef>::release (
    CORBA::StructDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::StructDef_ptr
TAO::Objref_Traits<CORBA::StructDef>::nil (void)
{
  return CORBA::StructDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::StructDef>::marshal (
    CORBA::StructDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::StructMemberSeq * CORBA::StructDef::members (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_StructDef_Proxy_Broker_ == 0)
    {
      CORBA_StructDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::StructMemberSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_members",
      12,
      this->the_TAO_StructDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::StructDef::members (
    const ::CORBA::StructMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_StructDef_Proxy_Broker_ == 0)
    {
      CORBA_StructDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::StructMemberSeq>::in_arg_val _tao_members (members);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_members
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_members",
      12,
      this->the_TAO_StructDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::StructDef::StructDef (void)
 : the_TAO_StructDef_Proxy_Broker_ (0)
{
  this->CORBA_StructDef_setup_collocation ();
}

void
CORBA::StructDef::CORBA_StructDef_setup_collocation ()
{
  if (::CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_StructDef_Proxy_Broker_ =
        ::CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_TypedefDef_setup_collocation ();
  this->CORBA_Container_setup_collocation ();
}

CORBA::StructDef::~StructDef (void)
{}

void
CORBA::StructDef::_tao_any_destructor (void *_tao_void_pointer)
{
  StructDef *_tao_tmp_pointer =
    static_cast<StructDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::StructDef_ptr
CORBA::StructDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<StructDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/StructDef:1.0",
        CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::StructDef_ptr
CORBA::StructDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<StructDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/StructDef:1.0",
        CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::StructDef_ptr
CORBA::StructDef::_duplicate (StructDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::StructDef::_tao_release (StructDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::StructDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/StructDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::StructDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/StructDef:1.0";
}

CORBA::Boolean
CORBA::StructDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_StructDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/StructDef:1.0",
    "StructDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_StructDef =
    &_tao_tc_CORBA_StructDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::UnionDef.

CORBA::UnionDef_ptr
TAO::Objref_Traits<CORBA::UnionDef>::duplicate (
    CORBA::UnionDef_ptr p
  )
{
  return CORBA::UnionDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::UnionDef>::release (
    CORBA::UnionDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::UnionDef_ptr
TAO::Objref_Traits<CORBA::UnionDef>::nil (void)
{
  return CORBA::UnionDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::UnionDef>::marshal (
    CORBA::UnionDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::UnionDef::discriminator_type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_discriminator_type",
      23,
      this->the_TAO_UnionDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::UnionDef::discriminator_type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::IDLType>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_discriminator_type_def",
      27,
      this->the_TAO_UnionDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::UnionDef::discriminator_type_def (
    ::CORBA::IDLType_ptr discriminator_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_discriminator_type_def (discriminator_type_def);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_discriminator_type_def
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_discriminator_type_def",
      27,
      this->the_TAO_UnionDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::UnionMemberSeq * CORBA::UnionDef::members (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::UnionMemberSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_members",
      12,
      this->the_TAO_UnionDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::UnionDef::members (
    const ::CORBA::UnionMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::UnionMemberSeq>::in_arg_val _tao_members (members);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_members
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_members",
      12,
      this->the_TAO_UnionDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::UnionDef::UnionDef (void)
 : the_TAO_UnionDef_Proxy_Broker_ (0)
{
  this->CORBA_UnionDef_setup_collocation ();
}

void
CORBA::UnionDef::CORBA_UnionDef_setup_collocation ()
{
  if (::CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_UnionDef_Proxy_Broker_ =
        ::CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_TypedefDef_setup_collocation ();
  this->CORBA_Container_setup_collocation ();
}

CORBA::UnionDef::~UnionDef (void)
{}

void
CORBA::UnionDef::_tao_any_destructor (void *_tao_void_pointer)
{
  UnionDef *_tao_tmp_pointer =
    static_cast<UnionDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::UnionDef_ptr
CORBA::UnionDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<UnionDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/UnionDef:1.0",
        CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::UnionDef_ptr
CORBA::UnionDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<UnionDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/UnionDef:1.0",
        CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::UnionDef_ptr
CORBA::UnionDef::_duplicate (UnionDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::UnionDef::_tao_release (UnionDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::UnionDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/UnionDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::UnionDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/UnionDef:1.0";
}

CORBA::Boolean
CORBA::UnionDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_UnionDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/UnionDef:1.0",
    "UnionDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_UnionDef =
    &_tao_tc_CORBA_UnionDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::EnumDef.

CORBA::EnumDef_ptr
TAO::Objref_Traits<CORBA::EnumDef>::duplicate (
    CORBA::EnumDef_ptr p
  )
{
  return CORBA::EnumDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::EnumDef>::release (
    CORBA::EnumDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::EnumDef_ptr
TAO::Objref_Traits<CORBA::EnumDef>::nil (void)
{
  return CORBA::EnumDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::EnumDef>::marshal (
    CORBA::EnumDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::EnumMemberSeq * CORBA::EnumDef::members (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_EnumDef_Proxy_Broker_ == 0)
    {
      CORBA_EnumDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::EnumMemberSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_members",
      12,
      this->the_TAO_EnumDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::EnumDef::members (
    const ::CORBA::EnumMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_EnumDef_Proxy_Broker_ == 0)
    {
      CORBA_EnumDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::EnumMemberSeq>::in_arg_val _tao_members (members);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_members
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_members",
      12,
      this->the_TAO_EnumDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::EnumDef::EnumDef (void)
 : the_TAO_EnumDef_Proxy_Broker_ (0)
{
  this->CORBA_EnumDef_setup_collocation ();
}

void
CORBA::EnumDef::CORBA_EnumDef_setup_collocation ()
{
  if (::CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_EnumDef_Proxy_Broker_ =
        ::CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_TypedefDef_setup_collocation ();
}

CORBA::EnumDef::~EnumDef (void)
{}

void
CORBA::EnumDef::_tao_any_destructor (void *_tao_void_pointer)
{
  EnumDef *_tao_tmp_pointer =
    static_cast<EnumDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::EnumDef_ptr
CORBA::EnumDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EnumDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/EnumDef:1.0",
        CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::EnumDef_ptr
CORBA::EnumDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EnumDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/EnumDef:1.0",
        CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::EnumDef_ptr
CORBA::EnumDef::_duplicate (EnumDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::EnumDef::_tao_release (EnumDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::EnumDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/EnumDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::EnumDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/EnumDef:1.0";
}

CORBA::Boolean
CORBA::EnumDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_EnumDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/EnumDef:1.0",
    "EnumDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_EnumDef =
    &_tao_tc_CORBA_EnumDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::AliasDef.

CORBA::AliasDef_ptr
TAO::Objref_Traits<CORBA::AliasDef>::duplicate (
    CORBA::AliasDef_ptr p
  )
{
  return CORBA::AliasDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::AliasDef>::release (
    CORBA::AliasDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::AliasDef_ptr
TAO::Objref_Traits<CORBA::AliasDef>::nil (void)
{
  return CORBA::AliasDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::AliasDef>::marshal (
    CORBA::AliasDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::AliasDef::original_type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_AliasDef_Proxy_Broker_ == 0)
    {
      CORBA_AliasDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::IDLType>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_original_type_def",
      22,
      this->the_TAO_AliasDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::AliasDef::original_type_def (
    ::CORBA::IDLType_ptr original_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_AliasDef_Proxy_Broker_ == 0)
    {
      CORBA_AliasDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_original_type_def (original_type_def);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_original_type_def
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_original_type_def",
      22,
      this->the_TAO_AliasDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::AliasDef::AliasDef (void)
 : the_TAO_AliasDef_Proxy_Broker_ (0)
{
  this->CORBA_AliasDef_setup_collocation ();
}

void
CORBA::AliasDef::CORBA_AliasDef_setup_collocation ()
{
  if (::CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_AliasDef_Proxy_Broker_ =
        ::CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_TypedefDef_setup_collocation ();
}

CORBA::AliasDef::~AliasDef (void)
{}

void
CORBA::AliasDef::_tao_any_destructor (void *_tao_void_pointer)
{
  AliasDef *_tao_tmp_pointer =
    static_cast<AliasDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::AliasDef_ptr
CORBA::AliasDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AliasDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AliasDef:1.0",
        CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AliasDef_ptr
CORBA::AliasDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AliasDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AliasDef:1.0",
        CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AliasDef_ptr
CORBA::AliasDef::_duplicate (AliasDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::AliasDef::_tao_release (AliasDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::AliasDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AliasDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::AliasDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/AliasDef:1.0";
}

CORBA::Boolean
CORBA::AliasDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AliasDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/AliasDef:1.0",
    "AliasDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AliasDef =
    &_tao_tc_CORBA_AliasDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::NativeDef.

CORBA::NativeDef_ptr
TAO::Objref_Traits<CORBA::NativeDef>::duplicate (
    CORBA::NativeDef_ptr p
  )
{
  return CORBA::NativeDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::NativeDef>::release (
    CORBA::NativeDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::NativeDef_ptr
TAO::Objref_Traits<CORBA::NativeDef>::nil (void)
{
  return CORBA::NativeDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::NativeDef>::marshal (
    CORBA::NativeDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::NativeDef::NativeDef (void)
 : the_TAO_NativeDef_Proxy_Broker_ (0)
{
  this->CORBA_NativeDef_setup_collocation ();
}

void
CORBA::NativeDef::CORBA_NativeDef_setup_collocation ()
{
  if (::CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_NativeDef_Proxy_Broker_ =
        ::CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_TypedefDef_setup_collocation ();
}

CORBA::NativeDef::~NativeDef (void)
{}

void
CORBA::NativeDef::_tao_any_destructor (void *_tao_void_pointer)
{
  NativeDef *_tao_tmp_pointer =
    static_cast<NativeDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::NativeDef_ptr
CORBA::NativeDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<NativeDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/NativeDef:1.0",
        CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::NativeDef_ptr
CORBA::NativeDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<NativeDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/NativeDef:1.0",
        CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::NativeDef_ptr
CORBA::NativeDef::_duplicate (NativeDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::NativeDef::_tao_release (NativeDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::NativeDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/NativeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::NativeDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/NativeDef:1.0";
}

CORBA::Boolean
CORBA::NativeDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_NativeDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/NativeDef:1.0",
    "NativeDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_NativeDef =
    &_tao_tc_CORBA_NativeDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::PrimitiveDef.

CORBA::PrimitiveDef_ptr
TAO::Objref_Traits<CORBA::PrimitiveDef>::duplicate (
    CORBA::PrimitiveDef_ptr p
  )
{
  return CORBA::PrimitiveDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::PrimitiveDef>::release (
    CORBA::PrimitiveDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::PrimitiveDef_ptr
TAO::Objref_Traits<CORBA::PrimitiveDef>::nil (void)
{
  return CORBA::PrimitiveDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::PrimitiveDef>::marshal (
    CORBA::PrimitiveDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::PrimitiveKind CORBA::PrimitiveDef::kind (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_PrimitiveDef_Proxy_Broker_ == 0)
    {
      CORBA_PrimitiveDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::PrimitiveKind>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_kind",
      9,
      this->the_TAO_PrimitiveDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::PrimitiveDef::PrimitiveDef (void)
 : the_TAO_PrimitiveDef_Proxy_Broker_ (0)
{
  this->CORBA_PrimitiveDef_setup_collocation ();
}

void
CORBA::PrimitiveDef::CORBA_PrimitiveDef_setup_collocation ()
{
  if (::CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_PrimitiveDef_Proxy_Broker_ =
        ::CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_IDLType_setup_collocation ();
}

CORBA::PrimitiveDef::~PrimitiveDef (void)
{}

void
CORBA::PrimitiveDef::_tao_any_destructor (void *_tao_void_pointer)
{
  PrimitiveDef *_tao_tmp_pointer =
    static_cast<PrimitiveDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::PrimitiveDef_ptr
CORBA::PrimitiveDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<PrimitiveDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/PrimitiveDef:1.0",
        CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::PrimitiveDef_ptr
CORBA::PrimitiveDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<PrimitiveDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/PrimitiveDef:1.0",
        CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::PrimitiveDef_ptr
CORBA::PrimitiveDef::_duplicate (PrimitiveDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::PrimitiveDef::_tao_release (PrimitiveDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::PrimitiveDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/PrimitiveDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::PrimitiveDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/PrimitiveDef:1.0";
}

CORBA::Boolean
CORBA::PrimitiveDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_PrimitiveDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/PrimitiveDef:1.0",
    "PrimitiveDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_PrimitiveDef =
    &_tao_tc_CORBA_PrimitiveDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::StringDef.

CORBA::StringDef_ptr
TAO::Objref_Traits<CORBA::StringDef>::duplicate (
    CORBA::StringDef_ptr p
  )
{
  return CORBA::StringDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::StringDef>::release (
    CORBA::StringDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::StringDef_ptr
TAO::Objref_Traits<CORBA::StringDef>::nil (void)
{
  return CORBA::StringDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::StringDef>::marshal (
    CORBA::StringDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::ULong CORBA::StringDef::bound (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_StringDef_Proxy_Broker_ == 0)
    {
      CORBA_StringDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ULong>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_bound",
      10,
      this->the_TAO_StringDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::StringDef::bound (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_StringDef_Proxy_Broker_ == 0)
    {
      CORBA_StringDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_bound",
      10,
      this->the_TAO_StringDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::StringDef::StringDef (void)
 : the_TAO_StringDef_Proxy_Broker_ (0)
{
  this->CORBA_StringDef_setup_collocation ();
}

void
CORBA::StringDef::CORBA_StringDef_setup_collocation ()
{
  if (::CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_StringDef_Proxy_Broker_ =
        ::CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_IDLType_setup_collocation ();
}

CORBA::StringDef::~StringDef (void)
{}

void
CORBA::StringDef::_tao_any_destructor (void *_tao_void_pointer)
{
  StringDef *_tao_tmp_pointer =
    static_cast<StringDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::StringDef_ptr
CORBA::StringDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<StringDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/StringDef:1.0",
        CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::StringDef_ptr
CORBA::StringDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<StringDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/StringDef:1.0",
        CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::StringDef_ptr
CORBA::StringDef::_duplicate (StringDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::StringDef::_tao_release (StringDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::StringDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/StringDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::StringDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/StringDef:1.0";
}

CORBA::Boolean
CORBA::StringDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_StringDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/StringDef:1.0",
    "StringDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_StringDef =
    &_tao_tc_CORBA_StringDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::WstringDef.

CORBA::WstringDef_ptr
TAO::Objref_Traits<CORBA::WstringDef>::duplicate (
    CORBA::WstringDef_ptr p
  )
{
  return CORBA::WstringDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::WstringDef>::release (
    CORBA::WstringDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::WstringDef_ptr
TAO::Objref_Traits<CORBA::WstringDef>::nil (void)
{
  return CORBA::WstringDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::WstringDef>::marshal (
    CORBA::WstringDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::ULong CORBA::WstringDef::bound (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_WstringDef_Proxy_Broker_ == 0)
    {
      CORBA_WstringDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ULong>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_bound",
      10,
      this->the_TAO_WstringDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::WstringDef::bound (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_WstringDef_Proxy_Broker_ == 0)
    {
      CORBA_WstringDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_bound",
      10,
      this->the_TAO_WstringDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::WstringDef::WstringDef (void)
 : the_TAO_WstringDef_Proxy_Broker_ (0)
{
  this->CORBA_WstringDef_setup_collocation ();
}

void
CORBA::WstringDef::CORBA_WstringDef_setup_collocation ()
{
  if (::CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_WstringDef_Proxy_Broker_ =
        ::CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_IDLType_setup_collocation ();
}

CORBA::WstringDef::~WstringDef (void)
{}

void
CORBA::WstringDef::_tao_any_destructor (void *_tao_void_pointer)
{
  WstringDef *_tao_tmp_pointer =
    static_cast<WstringDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::WstringDef_ptr
CORBA::WstringDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<WstringDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/WstringDef:1.0",
        CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::WstringDef_ptr
CORBA::WstringDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<WstringDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/WstringDef:1.0",
        CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::WstringDef_ptr
CORBA::WstringDef::_duplicate (WstringDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::WstringDef::_tao_release (WstringDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::WstringDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/WstringDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::WstringDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/WstringDef:1.0";
}

CORBA::Boolean
CORBA::WstringDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_WstringDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/WstringDef:1.0",
    "WstringDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_WstringDef =
    &_tao_tc_CORBA_WstringDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::SequenceDef.

CORBA::SequenceDef_ptr
TAO::Objref_Traits<CORBA::SequenceDef>::duplicate (
    CORBA::SequenceDef_ptr p
  )
{
  return CORBA::SequenceDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::SequenceDef>::release (
    CORBA::SequenceDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::SequenceDef_ptr
TAO::Objref_Traits<CORBA::SequenceDef>::nil (void)
{
  return CORBA::SequenceDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::SequenceDef>::marshal (
    CORBA::SequenceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::ULong CORBA::SequenceDef::bound (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ULong>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_bound",
      10,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::SequenceDef::bound (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_bound",
      10,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::SequenceDef::element_type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_element_type",
      17,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::SequenceDef::element_type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::IDLType>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_element_type_def",
      21,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::SequenceDef::element_type_def (
    ::CORBA::IDLType_ptr element_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_element_type_def (element_type_def);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_element_type_def
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_element_type_def",
      21,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::SequenceDef::SequenceDef (void)
 : the_TAO_SequenceDef_Proxy_Broker_ (0)
{
  this->CORBA_SequenceDef_setup_collocation ();
}

void
CORBA::SequenceDef::CORBA_SequenceDef_setup_collocation ()
{
  if (::CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_SequenceDef_Proxy_Broker_ =
        ::CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_IDLType_setup_collocation ();
}

CORBA::SequenceDef::~SequenceDef (void)
{}

void
CORBA::SequenceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  SequenceDef *_tao_tmp_pointer =
    static_cast<SequenceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::SequenceDef_ptr
CORBA::SequenceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<SequenceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/SequenceDef:1.0",
        CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::SequenceDef_ptr
CORBA::SequenceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<SequenceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/SequenceDef:1.0",
        CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::SequenceDef_ptr
CORBA::SequenceDef::_duplicate (SequenceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::SequenceDef::_tao_release (SequenceDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::SequenceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/SequenceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::SequenceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/SequenceDef:1.0";
}

CORBA::Boolean
CORBA::SequenceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_SequenceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/SequenceDef:1.0",
    "SequenceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_SequenceDef =
    &_tao_tc_CORBA_SequenceDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ArrayDef.

CORBA::ArrayDef_ptr
TAO::Objref_Traits<CORBA::ArrayDef>::duplicate (
    CORBA::ArrayDef_ptr p
  )
{
  return CORBA::ArrayDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ArrayDef>::release (
    CORBA::ArrayDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ArrayDef_ptr
TAO::Objref_Traits<CORBA::ArrayDef>::nil (void)
{
  return CORBA::ArrayDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ArrayDef>::marshal (
    CORBA::ArrayDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::ULong CORBA::ArrayDef::length (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ULong>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_length",
      11,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ArrayDef::length (
    ::CORBA::ULong length
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_length (length);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_length
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_length",
      11,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::ArrayDef::element_type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_element_type",
      17,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::ArrayDef::element_type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::IDLType>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_element_type_def",
      21,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ArrayDef::element_type_def (
    ::CORBA::IDLType_ptr element_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_element_type_def (element_type_def);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_element_type_def
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_element_type_def",
      21,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::ArrayDef::ArrayDef (void)
 : the_TAO_ArrayDef_Proxy_Broker_ (0)
{
  this->CORBA_ArrayDef_setup_collocation ();
}

void
CORBA::ArrayDef::CORBA_ArrayDef_setup_collocation ()
{
  if (::CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ArrayDef_Proxy_Broker_ =
        ::CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_IDLType_setup_collocation ();
}

CORBA::ArrayDef::~ArrayDef (void)
{}

void
CORBA::ArrayDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ArrayDef *_tao_tmp_pointer =
    static_cast<ArrayDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ArrayDef_ptr
CORBA::ArrayDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ArrayDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ArrayDef:1.0",
        CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ArrayDef_ptr
CORBA::ArrayDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ArrayDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ArrayDef:1.0",
        CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ArrayDef_ptr
CORBA::ArrayDef::_duplicate (ArrayDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ArrayDef::_tao_release (ArrayDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ArrayDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ArrayDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ArrayDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ArrayDef:1.0";
}

CORBA::Boolean
CORBA::ArrayDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ArrayDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ArrayDef:1.0",
    "ArrayDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ArrayDef =
    &_tao_tc_CORBA_ArrayDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExceptionDef.

CORBA::ExceptionDef_ptr
TAO::Objref_Traits<CORBA::ExceptionDef>::duplicate (
    CORBA::ExceptionDef_ptr p
  )
{
  return CORBA::ExceptionDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ExceptionDef>::release (
    CORBA::ExceptionDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ExceptionDef_ptr
TAO::Objref_Traits<CORBA::ExceptionDef>::nil (void)
{
  return CORBA::ExceptionDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ExceptionDef>::marshal (
    CORBA::ExceptionDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::ExceptionDef::type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ExceptionDef_Proxy_Broker_ == 0)
    {
      CORBA_ExceptionDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type",
      9,
      this->the_TAO_ExceptionDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::StructMemberSeq * CORBA::ExceptionDef::members (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ExceptionDef_Proxy_Broker_ == 0)
    {
      CORBA_ExceptionDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::StructMemberSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_members",
      12,
      this->the_TAO_ExceptionDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ExceptionDef::members (
    const ::CORBA::StructMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ExceptionDef_Proxy_Broker_ == 0)
    {
      CORBA_ExceptionDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::StructMemberSeq>::in_arg_val _tao_members (members);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_members
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_members",
      12,
      this->the_TAO_ExceptionDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::ExceptionDef::ExceptionDef (void)
 : the_TAO_ExceptionDef_Proxy_Broker_ (0)
{
  this->CORBA_ExceptionDef_setup_collocation ();
}

void
CORBA::ExceptionDef::CORBA_ExceptionDef_setup_collocation ()
{
  if (::CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExceptionDef_Proxy_Broker_ =
        ::CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Contained_setup_collocation ();
  this->CORBA_Container_setup_collocation ();
}

CORBA::ExceptionDef::~ExceptionDef (void)
{}

void
CORBA::ExceptionDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExceptionDef *_tao_tmp_pointer =
    static_cast<ExceptionDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExceptionDef_ptr
CORBA::ExceptionDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExceptionDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExceptionDef:1.0",
        CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExceptionDef_ptr
CORBA::ExceptionDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExceptionDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExceptionDef:1.0",
        CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExceptionDef_ptr
CORBA::ExceptionDef::_duplicate (ExceptionDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ExceptionDef::_tao_release (ExceptionDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ExceptionDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExceptionDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExceptionDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExceptionDef:1.0";
}

CORBA::Boolean
CORBA::ExceptionDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExceptionDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExceptionDef:1.0",
    "ExceptionDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExceptionDef =
    &_tao_tc_CORBA_ExceptionDef;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXCEPTIONDEFSEQ_CS_)
#define _CORBA_EXCEPTIONDEFSEQ_CS_

CORBA::ExceptionDefSeq::ExceptionDefSeq (void)
{}

CORBA::ExceptionDefSeq::ExceptionDefSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_object_reference_sequence<
        ExceptionDef,
        ExceptionDef_var
      >
    (max)
{}

CORBA::ExceptionDefSeq::ExceptionDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExceptionDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_object_reference_sequence<
        ExceptionDef,
        ExceptionDef_var
      >
    (max, length, buffer, release)
{}

CORBA::ExceptionDefSeq::ExceptionDefSeq (
    const ExceptionDefSeq &seq
  )
  : TAO::unbounded_object_reference_sequence<
        ExceptionDef,
        ExceptionDef_var
      >
    (seq)
{}

CORBA::ExceptionDefSeq::~ExceptionDefSeq (void)
{}

void CORBA::ExceptionDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExceptionDefSeq * _tao_tmp_pointer =
    static_cast<ExceptionDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ExceptionDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExceptionDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExceptionDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExceptionDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExceptionDefSeq_0 =
      &CORBA_ExceptionDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExceptionDefSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExceptionDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExceptionDefSeq:1.0",
    "ExceptionDefSeq",
    &TAO::TypeCode::tc_CORBA_ExceptionDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExceptionDefSeq =
    &_tao_tc_CORBA_ExceptionDefSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_CORBA_AttributeMode[] =
  {
    "ATTR_NORMAL",
    "ATTR_READONLY"

  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AttributeMode (
    "IDL:omg.org/CORBA/AttributeMode:1.0",
    "AttributeMode",
    _tao_enumerators_CORBA_AttributeMode,
    2);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AttributeMode =
    &_tao_tc_CORBA_AttributeMode;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::AttributeDef.

CORBA::AttributeDef_ptr
TAO::Objref_Traits<CORBA::AttributeDef>::duplicate (
    CORBA::AttributeDef_ptr p
  )
{
  return CORBA::AttributeDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::AttributeDef>::release (
    CORBA::AttributeDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::AttributeDef_ptr
TAO::Objref_Traits<CORBA::AttributeDef>::nil (void)
{
  return CORBA::AttributeDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::AttributeDef>::marshal (
    CORBA::AttributeDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::AttributeDef::type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type",
      9,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::AttributeDef::type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::IDLType>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type_def",
      13,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::AttributeDef::type_def (
    ::CORBA::IDLType_ptr type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_type_def (type_def);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_type_def
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_type_def",
      13,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::AttributeMode CORBA::AttributeDef::mode (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::AttributeMode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_mode",
      9,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::AttributeDef::mode (
    ::CORBA::AttributeMode mode
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::AttributeMode>::in_arg_val _tao_mode (mode);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_mode
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_mode",
      9,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::AttributeDef::AttributeDef (void)
 : the_TAO_AttributeDef_Proxy_Broker_ (0)
{
  this->CORBA_AttributeDef_setup_collocation ();
}

void
CORBA::AttributeDef::CORBA_AttributeDef_setup_collocation ()
{
  if (::CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_AttributeDef_Proxy_Broker_ =
        ::CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Contained_setup_collocation ();
}

CORBA::AttributeDef::~AttributeDef (void)
{}

void
CORBA::AttributeDef::_tao_any_destructor (void *_tao_void_pointer)
{
  AttributeDef *_tao_tmp_pointer =
    static_cast<AttributeDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::AttributeDef_ptr
CORBA::AttributeDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AttributeDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AttributeDef:1.0",
        CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AttributeDef_ptr
CORBA::AttributeDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AttributeDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AttributeDef:1.0",
        CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AttributeDef_ptr
CORBA::AttributeDef::_duplicate (AttributeDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::AttributeDef::_tao_release (AttributeDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::AttributeDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AttributeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::AttributeDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/AttributeDef:1.0";
}

CORBA::Boolean
CORBA::AttributeDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AttributeDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/AttributeDef:1.0",
    "AttributeDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AttributeDef =
    &_tao_tc_CORBA_AttributeDef;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_AttributeDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode },
    { "mode", &CORBA::_tc_AttributeMode }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AttributeDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/AttributeDescription:1.0",
    "AttributeDescription",
    _tao_fields_CORBA_AttributeDescription,
    6);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AttributeDescription =
    &_tao_tc_CORBA_AttributeDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::AttributeDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  AttributeDescription *_tao_tmp_pointer =
    static_cast<AttributeDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ExtAttributeDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode },
    { "mode", &CORBA::_tc_AttributeMode },
    { "get_exceptions", &CORBA::_tc_ExcDescriptionSeq },
    { "put_exceptions", &CORBA::_tc_ExcDescriptionSeq }

  };
static TAO::TypeCode::Recursive_Type<
  TAO::TypeCode::Struct<char const *,
                        CORBA::TypeCode_ptr const *,
                        TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                        TAO::Null_RefCount_Policy>,
  CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const * >

  _tao_tc_CORBA_ExtAttributeDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ExtAttributeDescription:1.0",
    "ExtAttributeDescription",
    _tao_fields_CORBA_ExtAttributeDescription,
    8);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAttributeDescription =
    &_tao_tc_CORBA_ExtAttributeDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ExtAttributeDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ExtAttributeDescription *_tao_tmp_pointer =
    static_cast<ExtAttributeDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExtAttributeDef.

CORBA::ExtAttributeDef_ptr
TAO::Objref_Traits<CORBA::ExtAttributeDef>::duplicate (
    CORBA::ExtAttributeDef_ptr p
  )
{
  return CORBA::ExtAttributeDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ExtAttributeDef>::release (
    CORBA::ExtAttributeDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ExtAttributeDef_ptr
TAO::Objref_Traits<CORBA::ExtAttributeDef>::nil (void)
{
  return CORBA::ExtAttributeDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ExtAttributeDef>::marshal (
    CORBA::ExtAttributeDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExcDescriptionSeq * CORBA::ExtAttributeDef::get_exceptions (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ExcDescriptionSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_get_exceptions",
      19,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ExtAttributeDef::get_exceptions (
    const ::CORBA::ExcDescriptionSeq & get_exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ExcDescriptionSeq>::in_arg_val _tao_get_exceptions (get_exceptions);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_get_exceptions
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_get_exceptions",
      19,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExcDescriptionSeq * CORBA::ExtAttributeDef::set_exceptions (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ExcDescriptionSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_set_exceptions",
      19,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ExtAttributeDef::set_exceptions (
    const ::CORBA::ExcDescriptionSeq & set_exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ExcDescriptionSeq>::in_arg_val _tao_set_exceptions (set_exceptions);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_set_exceptions
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_set_exceptions",
      19,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExtAttributeDescription * CORBA::ExtAttributeDef::describe_attribute (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ExtAttributeDescription>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "describe_attribute",
      18,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::ExtAttributeDef::ExtAttributeDef (void)
 : the_TAO_ExtAttributeDef_Proxy_Broker_ (0)
{
  this->CORBA_ExtAttributeDef_setup_collocation ();
}

void
CORBA::ExtAttributeDef::CORBA_ExtAttributeDef_setup_collocation ()
{
  if (::CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExtAttributeDef_Proxy_Broker_ =
        ::CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_AttributeDef_setup_collocation ();
}

CORBA::ExtAttributeDef::~ExtAttributeDef (void)
{}

void
CORBA::ExtAttributeDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExtAttributeDef *_tao_tmp_pointer =
    static_cast<ExtAttributeDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExtAttributeDef_ptr
CORBA::ExtAttributeDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtAttributeDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtAttributeDef:1.0",
        CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtAttributeDef_ptr
CORBA::ExtAttributeDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtAttributeDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtAttributeDef:1.0",
        CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtAttributeDef_ptr
CORBA::ExtAttributeDef::_duplicate (ExtAttributeDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ExtAttributeDef::_tao_release (ExtAttributeDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ExtAttributeDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AttributeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtAttributeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExtAttributeDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExtAttributeDef:1.0";
}

CORBA::Boolean
CORBA::ExtAttributeDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAttributeDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExtAttributeDef:1.0",
    "ExtAttributeDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAttributeDef =
    &_tao_tc_CORBA_ExtAttributeDef;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_CORBA_OperationMode[] =
  {
    "OP_NORMAL",
    "OP_ONEWAY"

  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_OperationMode (
    "IDL:omg.org/CORBA/OperationMode:1.0",
    "OperationMode",
    _tao_enumerators_CORBA_OperationMode,
    2);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_OperationMode =
    &_tao_tc_CORBA_OperationMode;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ParameterDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "type", &CORBA::_tc_TypeCode },
    { "type_def", &CORBA::_tc_IDLType },
    { "mode", &CORBA::_tc_ParameterMode }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ParameterDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ParameterDescription:1.0",
    "ParameterDescription",
    _tao_fields_CORBA_ParameterDescription,
    4);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ParameterDescription =
    &_tao_tc_CORBA_ParameterDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ParameterDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ParameterDescription *_tao_tmp_pointer =
    static_cast<ParameterDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_PARDESCRIPTIONSEQ_CS_)
#define _CORBA_PARDESCRIPTIONSEQ_CS_

CORBA::ParDescriptionSeq::ParDescriptionSeq (void)
{}

CORBA::ParDescriptionSeq::ParDescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        ParameterDescription
      >
    (max)
{}

CORBA::ParDescriptionSeq::ParDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ParameterDescription * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        ParameterDescription
      >
    (max, length, buffer, release)
{}

CORBA::ParDescriptionSeq::ParDescriptionSeq (
    const ParDescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        ParameterDescription
      >
    (seq)
{}

CORBA::ParDescriptionSeq::~ParDescriptionSeq (void)
{}

void CORBA::ParDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ParDescriptionSeq * _tao_tmp_pointer =
    static_cast<ParDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ParDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_ParDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ParDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ParameterDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ParDescriptionSeq_0 =
      &CORBA_ParDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ParDescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ParDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ParDescriptionSeq:1.0",
    "ParDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ParDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ParDescriptionSeq =
    &_tao_tc_CORBA_ParDescriptionSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ContextIdentifier (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ContextIdentifier:1.0",
    "ContextIdentifier",
    &CORBA::_tc_Identifier);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ContextIdentifier =
    &_tao_tc_CORBA_ContextIdentifier;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_CONTEXTIDSEQ_CS_)
#define _CORBA_CONTEXTIDSEQ_CS_

CORBA::ContextIdSeq::ContextIdSeq (void)
{}

CORBA::ContextIdSeq::ContextIdSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_string_sequence
    (max)
{}

CORBA::ContextIdSeq::ContextIdSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    char * * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_string_sequence
    (max, length, buffer, release)
{}

CORBA::ContextIdSeq::ContextIdSeq (
    const ContextIdSeq &seq
  )
  : TAO::unbounded_string_sequence
    (seq)
{}

CORBA::ContextIdSeq::~ContextIdSeq (void)
{}

void CORBA::ContextIdSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ContextIdSeq * _tao_tmp_pointer =
    static_cast<ContextIdSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ContextIdSeq_GUARD
#define _TAO_TYPECODE_CORBA_ContextIdSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ContextIdSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ContextIdentifier,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ContextIdSeq_0 =
      &CORBA_ContextIdSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ContextIdSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ContextIdSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ContextIdSeq:1.0",
    "ContextIdSeq",
    &TAO::TypeCode::tc_CORBA_ContextIdSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ContextIdSeq =
    &_tao_tc_CORBA_ContextIdSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::OperationDef.

CORBA::OperationDef_ptr
TAO::Objref_Traits<CORBA::OperationDef>::duplicate (
    CORBA::OperationDef_ptr p
  )
{
  return CORBA::OperationDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::OperationDef>::release (
    CORBA::OperationDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::OperationDef_ptr
TAO::Objref_Traits<CORBA::OperationDef>::nil (void)
{
  return CORBA::OperationDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::OperationDef>::marshal (
    CORBA::OperationDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::OperationDef::result (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_result",
      11,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::OperationDef::result_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::IDLType>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_result_def",
      15,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::result_def (
    ::CORBA::IDLType_ptr result_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_result_def (result_def);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_result_def
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_result_def",
      15,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ParDescriptionSeq * CORBA::OperationDef::params (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ParDescriptionSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_params",
      11,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::params (
    const ::CORBA::ParDescriptionSeq & params
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ParDescriptionSeq>::in_arg_val _tao_params (params);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_params
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_params",
      11,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::OperationMode CORBA::OperationDef::mode (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::OperationMode>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_mode",
      9,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::mode (
    ::CORBA::OperationMode mode
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::OperationMode>::in_arg_val _tao_mode (mode);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_mode
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_mode",
      9,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ContextIdSeq * CORBA::OperationDef::contexts (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ContextIdSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_contexts",
      13,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::contexts (
    const ::CORBA::ContextIdSeq & contexts
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ContextIdSeq>::in_arg_val _tao_contexts (contexts);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_contexts
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_contexts",
      13,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExceptionDefSeq * CORBA::OperationDef::exceptions (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ExceptionDefSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_exceptions",
      15,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::exceptions (
    const ::CORBA::ExceptionDefSeq & exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_val _tao_exceptions (exceptions);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_exceptions
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_exceptions",
      15,
      this->the_TAO_OperationDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::OperationDef::OperationDef (void)
 : the_TAO_OperationDef_Proxy_Broker_ (0)
{
  this->CORBA_OperationDef_setup_collocation ();
}

void
CORBA::OperationDef::CORBA_OperationDef_setup_collocation ()
{
  if (::CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_OperationDef_Proxy_Broker_ =
        ::CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Contained_setup_collocation ();
}

CORBA::OperationDef::~OperationDef (void)
{}

void
CORBA::OperationDef::_tao_any_destructor (void *_tao_void_pointer)
{
  OperationDef *_tao_tmp_pointer =
    static_cast<OperationDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::OperationDef_ptr
CORBA::OperationDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<OperationDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/OperationDef:1.0",
        CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::OperationDef_ptr
CORBA::OperationDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<OperationDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/OperationDef:1.0",
        CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::OperationDef_ptr
CORBA::OperationDef::_duplicate (OperationDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::OperationDef::_tao_release (OperationDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::OperationDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/OperationDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::OperationDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/OperationDef:1.0";
}

CORBA::Boolean
CORBA::OperationDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_OperationDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/OperationDef:1.0",
    "OperationDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_OperationDef =
    &_tao_tc_CORBA_OperationDef;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_OperationDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "result", &CORBA::_tc_TypeCode },
    { "mode", &CORBA::_tc_OperationMode },
    { "contexts", &CORBA::_tc_ContextIdSeq },
    { "parameters", &CORBA::_tc_ParDescriptionSeq },
    { "exceptions", &CORBA::_tc_ExcDescriptionSeq }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_OperationDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/OperationDescription:1.0",
    "OperationDescription",
    _tao_fields_CORBA_OperationDescription,
    9);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_OperationDescription =
    &_tao_tc_CORBA_OperationDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::OperationDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  OperationDescription *_tao_tmp_pointer =
    static_cast<OperationDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_REPOSITORYIDSEQ_CS_)
#define _CORBA_REPOSITORYIDSEQ_CS_

CORBA::RepositoryIdSeq::RepositoryIdSeq (void)
{}

CORBA::RepositoryIdSeq::RepositoryIdSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_string_sequence
    (max)
{}

CORBA::RepositoryIdSeq::RepositoryIdSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    char * * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_string_sequence
    (max, length, buffer, release)
{}

CORBA::RepositoryIdSeq::RepositoryIdSeq (
    const RepositoryIdSeq &seq
  )
  : TAO::unbounded_string_sequence
    (seq)
{}

CORBA::RepositoryIdSeq::~RepositoryIdSeq (void)
{}

void CORBA::RepositoryIdSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  RepositoryIdSeq * _tao_tmp_pointer =
    static_cast<RepositoryIdSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_RepositoryIdSeq_GUARD
#define _TAO_TYPECODE_CORBA_RepositoryIdSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_RepositoryIdSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_RepositoryId,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_RepositoryIdSeq_0 =
      &CORBA_RepositoryIdSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_RepositoryIdSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_RepositoryIdSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/RepositoryIdSeq:1.0",
    "RepositoryIdSeq",
    &TAO::TypeCode::tc_CORBA_RepositoryIdSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_RepositoryIdSeq =
    &_tao_tc_CORBA_RepositoryIdSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_OPDESCRIPTIONSEQ_CS_)
#define _CORBA_OPDESCRIPTIONSEQ_CS_

CORBA::OpDescriptionSeq::OpDescriptionSeq (void)
{}

CORBA::OpDescriptionSeq::OpDescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        OperationDescription
      >
    (max)
{}

CORBA::OpDescriptionSeq::OpDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::OperationDescription * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        OperationDescription
      >
    (max, length, buffer, release)
{}

CORBA::OpDescriptionSeq::OpDescriptionSeq (
    const OpDescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        OperationDescription
      >
    (seq)
{}

CORBA::OpDescriptionSeq::~OpDescriptionSeq (void)
{}

void CORBA::OpDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  OpDescriptionSeq * _tao_tmp_pointer =
    static_cast<OpDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_OpDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_OpDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_OpDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_OperationDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_OpDescriptionSeq_0 =
      &CORBA_OpDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_OpDescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_OpDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/OpDescriptionSeq:1.0",
    "OpDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_OpDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_OpDescriptionSeq =
    &_tao_tc_CORBA_OpDescriptionSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_ATTRDESCRIPTIONSEQ_CS_)
#define _CORBA_ATTRDESCRIPTIONSEQ_CS_

CORBA::AttrDescriptionSeq::AttrDescriptionSeq (void)
{}

CORBA::AttrDescriptionSeq::AttrDescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        AttributeDescription
      >
    (max)
{}

CORBA::AttrDescriptionSeq::AttrDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::AttributeDescription * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        AttributeDescription
      >
    (max, length, buffer, release)
{}

CORBA::AttrDescriptionSeq::AttrDescriptionSeq (
    const AttrDescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        AttributeDescription
      >
    (seq)
{}

CORBA::AttrDescriptionSeq::~AttrDescriptionSeq (void)
{}

void CORBA::AttrDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  AttrDescriptionSeq * _tao_tmp_pointer =
    static_cast<AttrDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_AttrDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_AttrDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_AttrDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_AttributeDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_AttrDescriptionSeq_0 =
      &CORBA_AttrDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_AttrDescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AttrDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/AttrDescriptionSeq:1.0",
    "AttrDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_AttrDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AttrDescriptionSeq =
    &_tao_tc_CORBA_AttrDescriptionSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXTATTRDESCRIPTIONSEQ_CS_)
#define _CORBA_EXTATTRDESCRIPTIONSEQ_CS_

CORBA::ExtAttrDescriptionSeq::ExtAttrDescriptionSeq (void)
{}

CORBA::ExtAttrDescriptionSeq::ExtAttrDescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        ExtAttributeDescription
      >
    (max)
{}

CORBA::ExtAttrDescriptionSeq::ExtAttrDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExtAttributeDescription * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        ExtAttributeDescription
      >
    (max, length, buffer, release)
{}

CORBA::ExtAttrDescriptionSeq::ExtAttrDescriptionSeq (
    const ExtAttrDescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        ExtAttributeDescription
      >
    (seq)
{}

CORBA::ExtAttrDescriptionSeq::~ExtAttrDescriptionSeq (void)
{}

void CORBA::ExtAttrDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExtAttrDescriptionSeq * _tao_tmp_pointer =
    static_cast<ExtAttrDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ExtAttrDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExtAttrDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtAttrDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtAttributeDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExtAttrDescriptionSeq_0 =
      &CORBA_ExtAttrDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExtAttrDescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAttrDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExtAttrDescriptionSeq:1.0",
    "ExtAttrDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ExtAttrDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAttrDescriptionSeq =
    &_tao_tc_CORBA_ExtAttrDescriptionSeq;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::InterfaceDef.

CORBA::InterfaceDef_ptr
TAO::Objref_Traits<CORBA::InterfaceDef>::duplicate (
    CORBA::InterfaceDef_ptr p
  )
{
  return CORBA::InterfaceDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::InterfaceDef>::release (
    CORBA::InterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::InterfaceDef_ptr
TAO::Objref_Traits<CORBA::InterfaceDef>::nil (void)
{
  return CORBA::InterfaceDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::InterfaceDef>::marshal (
    CORBA::InterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDefSeq * CORBA::InterfaceDef::base_interfaces (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_base_interfaces",
      20,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::InterfaceDef::base_interfaces (
    const ::CORBA::InterfaceDefSeq & base_interfaces
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_base_interfaces (base_interfaces);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_base_interfaces
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_base_interfaces",
      20,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::Boolean CORBA::InterfaceDef::is_a (
    const char * interface_id
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_interface_id (interface_id);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_interface_id
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "is_a",
      4,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_InterfaceDef_FullInterfaceDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "operations", &CORBA::_tc_OpDescriptionSeq },
    { "attributes", &CORBA::_tc_AttrDescriptionSeq },
    { "base_interfaces", &CORBA::_tc_RepositoryIdSeq },
    { "type", &CORBA::_tc_TypeCode }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceDef_FullInterfaceDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/InterfaceDef/FullInterfaceDescription:1.0",
    "FullInterfaceDescription",
    _tao_fields_CORBA_InterfaceDef_FullInterfaceDescription,
    8);

::CORBA::TypeCode_ptr const CORBA::InterfaceDef::_tc_FullInterfaceDescription =
  &_tao_tc_CORBA_InterfaceDef_FullInterfaceDescription;

// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  FullInterfaceDescription *_tao_tmp_pointer =
    static_cast<FullInterfaceDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDef::FullInterfaceDescription * CORBA::InterfaceDef::describe_interface (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::InterfaceDef::FullInterfaceDescription>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "describe_interface",
      18,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::AttributeDef_ptr CORBA::InterfaceDef::create_attribute (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr type,
    ::CORBA::AttributeMode mode
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::AttributeDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_type (type);
  TAO::Arg_Traits< ::CORBA::AttributeMode>::in_arg_val _tao_mode (mode);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_type,
      &_tao_mode
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      6,
      "create_attribute",
      16,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::OperationDef_ptr CORBA::InterfaceDef::create_operation (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr result,
    ::CORBA::OperationMode mode,
    const ::CORBA::ParDescriptionSeq & params,
    const ::CORBA::ExceptionDefSeq & exceptions,
    const ::CORBA::ContextIdSeq & contexts
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::OperationDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_result (result);
  TAO::Arg_Traits< ::CORBA::OperationMode>::in_arg_val _tao_mode (mode);
  TAO::Arg_Traits< ::CORBA::ParDescriptionSeq>::in_arg_val _tao_params (params);
  TAO::Arg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_val _tao_exceptions (exceptions);
  TAO::Arg_Traits< ::CORBA::ContextIdSeq>::in_arg_val _tao_contexts (contexts);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_result,
      &_tao_mode,
      &_tao_params,
      &_tao_exceptions,
      &_tao_contexts
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      9,
      "create_operation",
      16,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::InterfaceDef::InterfaceDef (void)
 : the_TAO_InterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_InterfaceDef_setup_collocation ();
}

void
CORBA::InterfaceDef::CORBA_InterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_InterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Container_setup_collocation ();
  this->CORBA_Contained_setup_collocation ();
  this->CORBA_IDLType_setup_collocation ();
}

CORBA::InterfaceDef::~InterfaceDef (void)
{}

void
CORBA::InterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  InterfaceDef *_tao_tmp_pointer =
    static_cast<InterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::InterfaceDef_ptr
CORBA::InterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<InterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/InterfaceDef:1.0",
        CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::InterfaceDef_ptr
CORBA::InterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<InterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/InterfaceDef:1.0",
        CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::InterfaceDef_ptr
CORBA::InterfaceDef::_duplicate (InterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::InterfaceDef::_tao_release (InterfaceDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::InterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::InterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/InterfaceDef:1.0";
}

CORBA::Boolean
CORBA::InterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/InterfaceDef:1.0",
    "InterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InterfaceDef =
    &_tao_tc_CORBA_InterfaceDef;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_InterfaceDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "base_interfaces", &CORBA::_tc_RepositoryIdSeq }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/InterfaceDescription:1.0",
    "InterfaceDescription",
    _tao_fields_CORBA_InterfaceDescription,
    5);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InterfaceDescription =
    &_tao_tc_CORBA_InterfaceDescription;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::InterfaceDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  InterfaceDescription *_tao_tmp_pointer =
    static_cast<InterfaceDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::InterfaceAttrExtension.

CORBA::InterfaceAttrExtension_ptr
TAO::Objref_Traits<CORBA::InterfaceAttrExtension>::duplicate (
    CORBA::InterfaceAttrExtension_ptr p
  )
{
  return CORBA::InterfaceAttrExtension::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::InterfaceAttrExtension>::release (
    CORBA::InterfaceAttrExtension_ptr p
  )
{
  CORBA::release (p);
}

CORBA::InterfaceAttrExtension_ptr
TAO::Objref_Traits<CORBA::InterfaceAttrExtension>::nil (void)
{
  return CORBA::InterfaceAttrExtension::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::InterfaceAttrExtension>::marshal (
    CORBA::InterfaceAttrExtension_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "operations", &CORBA::_tc_OpDescriptionSeq },
    { "attributes", &CORBA::_tc_ExtAttrDescriptionSeq },
    { "base_interfaces", &CORBA::_tc_RepositoryIdSeq },
    { "type", &CORBA::_tc_TypeCode }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/InterfaceAttrExtension/ExtFullInterfaceDescription:1.0",
    "ExtFullInterfaceDescription",
    _tao_fields_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription,
    8);

::CORBA::TypeCode_ptr const CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription =
  &_tao_tc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription;

// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ExtFullInterfaceDescription *_tao_tmp_pointer =
    static_cast<ExtFullInterfaceDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription * CORBA::InterfaceAttrExtension::describe_ext_interface (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_InterfaceAttrExtension_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceAttrExtension_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "describe_ext_interface",
      22,
      this->the_TAO_InterfaceAttrExtension_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExtAttributeDef_ptr CORBA::InterfaceAttrExtension::create_ext_attribute (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr type,
    ::CORBA::AttributeMode mode,
    const ::CORBA::ExceptionDefSeq & get_exceptions,
    const ::CORBA::ExceptionDefSeq & set_exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_InterfaceAttrExtension_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceAttrExtension_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ExtAttributeDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::IDLType>::in_arg_val _tao_type (type);
  TAO::Arg_Traits< ::CORBA::AttributeMode>::in_arg_val _tao_mode (mode);
  TAO::Arg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_val _tao_get_exceptions (get_exceptions);
  TAO::Arg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_val _tao_set_exceptions (set_exceptions);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_type,
      &_tao_mode,
      &_tao_get_exceptions,
      &_tao_set_exceptions
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      8,
      "create_ext_attribute",
      20,
      this->the_TAO_InterfaceAttrExtension_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::InterfaceAttrExtension::InterfaceAttrExtension (void)
 : the_TAO_InterfaceAttrExtension_Proxy_Broker_ (0)
{
  this->CORBA_InterfaceAttrExtension_setup_collocation ();
}

void
CORBA::InterfaceAttrExtension::CORBA_InterfaceAttrExtension_setup_collocation ()
{
  if (::CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_InterfaceAttrExtension_Proxy_Broker_ =
        ::CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer (this);
    }
}

CORBA::InterfaceAttrExtension::~InterfaceAttrExtension (void)
{}

void
CORBA::InterfaceAttrExtension::_tao_any_destructor (void *_tao_void_pointer)
{
  InterfaceAttrExtension *_tao_tmp_pointer =
    static_cast<InterfaceAttrExtension *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::InterfaceAttrExtension_ptr
CORBA::InterfaceAttrExtension::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<InterfaceAttrExtension>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0",
        CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::InterfaceAttrExtension_ptr
CORBA::InterfaceAttrExtension::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<InterfaceAttrExtension>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0",
        CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::InterfaceAttrExtension_ptr
CORBA::InterfaceAttrExtension::_duplicate (InterfaceAttrExtension_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::InterfaceAttrExtension::_tao_release (InterfaceAttrExtension_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::InterfaceAttrExtension::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::InterfaceAttrExtension::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0";
}

CORBA::Boolean
CORBA::InterfaceAttrExtension::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceAttrExtension (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0",
    "InterfaceAttrExtension");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InterfaceAttrExtension =
    &_tao_tc_CORBA_InterfaceAttrExtension;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExtInterfaceDef.

CORBA::ExtInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtInterfaceDef>::duplicate (
    CORBA::ExtInterfaceDef_ptr p
  )
{
  return CORBA::ExtInterfaceDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ExtInterfaceDef>::release (
    CORBA::ExtInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ExtInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtInterfaceDef>::nil (void)
{
  return CORBA::ExtInterfaceDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ExtInterfaceDef>::marshal (
    CORBA::ExtInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ExtInterfaceDef::ExtInterfaceDef (void)
 : the_TAO_ExtInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_ExtInterfaceDef_setup_collocation ();
}

void
CORBA::ExtInterfaceDef::CORBA_ExtInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExtInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_InterfaceDef_setup_collocation ();
  this->CORBA_InterfaceAttrExtension_setup_collocation ();
}

CORBA::ExtInterfaceDef::~ExtInterfaceDef (void)
{}

void
CORBA::ExtInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExtInterfaceDef *_tao_tmp_pointer =
    static_cast<ExtInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExtInterfaceDef_ptr
CORBA::ExtInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtInterfaceDef:1.0",
        CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtInterfaceDef_ptr
CORBA::ExtInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtInterfaceDef:1.0",
        CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtInterfaceDef_ptr
CORBA::ExtInterfaceDef::_duplicate (ExtInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ExtInterfaceDef::_tao_release (ExtInterfaceDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ExtInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExtInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExtInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::ExtInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExtInterfaceDef:1.0",
    "ExtInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDef =
    &_tao_tc_CORBA_ExtInterfaceDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::AbstractInterfaceDef.

CORBA::AbstractInterfaceDef_ptr
TAO::Objref_Traits<CORBA::AbstractInterfaceDef>::duplicate (
    CORBA::AbstractInterfaceDef_ptr p
  )
{
  return CORBA::AbstractInterfaceDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::AbstractInterfaceDef>::release (
    CORBA::AbstractInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::AbstractInterfaceDef_ptr
TAO::Objref_Traits<CORBA::AbstractInterfaceDef>::nil (void)
{
  return CORBA::AbstractInterfaceDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::AbstractInterfaceDef>::marshal (
    CORBA::AbstractInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::AbstractInterfaceDef::AbstractInterfaceDef (void)
 : the_TAO_AbstractInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_AbstractInterfaceDef_setup_collocation ();
}

void
CORBA::AbstractInterfaceDef::CORBA_AbstractInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_AbstractInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_InterfaceDef_setup_collocation ();
}

CORBA::AbstractInterfaceDef::~AbstractInterfaceDef (void)
{}

void
CORBA::AbstractInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  AbstractInterfaceDef *_tao_tmp_pointer =
    static_cast<AbstractInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::AbstractInterfaceDef_ptr
CORBA::AbstractInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AbstractInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0",
        CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AbstractInterfaceDef_ptr
CORBA::AbstractInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AbstractInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0",
        CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AbstractInterfaceDef_ptr
CORBA::AbstractInterfaceDef::_duplicate (AbstractInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::AbstractInterfaceDef::_tao_release (AbstractInterfaceDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::AbstractInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::AbstractInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::AbstractInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AbstractInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0",
    "AbstractInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDef =
    &_tao_tc_CORBA_AbstractInterfaceDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExtAbstractInterfaceDef.

CORBA::ExtAbstractInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>::duplicate (
    CORBA::ExtAbstractInterfaceDef_ptr p
  )
{
  return CORBA::ExtAbstractInterfaceDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>::release (
    CORBA::ExtAbstractInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ExtAbstractInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>::nil (void)
{
  return CORBA::ExtAbstractInterfaceDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>::marshal (
    CORBA::ExtAbstractInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ExtAbstractInterfaceDef::ExtAbstractInterfaceDef (void)
 : the_TAO_ExtAbstractInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_ExtAbstractInterfaceDef_setup_collocation ();
}

void
CORBA::ExtAbstractInterfaceDef::CORBA_ExtAbstractInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExtAbstractInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_AbstractInterfaceDef_setup_collocation ();
  this->CORBA_InterfaceAttrExtension_setup_collocation ();
}

CORBA::ExtAbstractInterfaceDef::~ExtAbstractInterfaceDef (void)
{}

void
CORBA::ExtAbstractInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExtAbstractInterfaceDef *_tao_tmp_pointer =
    static_cast<ExtAbstractInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExtAbstractInterfaceDef_ptr
CORBA::ExtAbstractInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtAbstractInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0",
        CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtAbstractInterfaceDef_ptr
CORBA::ExtAbstractInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtAbstractInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0",
        CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtAbstractInterfaceDef_ptr
CORBA::ExtAbstractInterfaceDef::_duplicate (ExtAbstractInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ExtAbstractInterfaceDef::_tao_release (ExtAbstractInterfaceDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ExtAbstractInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExtAbstractInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::ExtAbstractInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAbstractInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0",
    "ExtAbstractInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDef =
    &_tao_tc_CORBA_ExtAbstractInterfaceDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::LocalInterfaceDef.

CORBA::LocalInterfaceDef_ptr
TAO::Objref_Traits<CORBA::LocalInterfaceDef>::duplicate (
    CORBA::LocalInterfaceDef_ptr p
  )
{
  return CORBA::LocalInterfaceDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::LocalInterfaceDef>::release (
    CORBA::LocalInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::LocalInterfaceDef_ptr
TAO::Objref_Traits<CORBA::LocalInterfaceDef>::nil (void)
{
  return CORBA::LocalInterfaceDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::LocalInterfaceDef>::marshal (
    CORBA::LocalInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::LocalInterfaceDef::LocalInterfaceDef (void)
 : the_TAO_LocalInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_LocalInterfaceDef_setup_collocation ();
}

void
CORBA::LocalInterfaceDef::CORBA_LocalInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_LocalInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_InterfaceDef_setup_collocation ();
}

CORBA::LocalInterfaceDef::~LocalInterfaceDef (void)
{}

void
CORBA::LocalInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  LocalInterfaceDef *_tao_tmp_pointer =
    static_cast<LocalInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::LocalInterfaceDef_ptr
CORBA::LocalInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<LocalInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/LocalInterfaceDef:1.0",
        CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::LocalInterfaceDef_ptr
CORBA::LocalInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<LocalInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/LocalInterfaceDef:1.0",
        CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::LocalInterfaceDef_ptr
CORBA::LocalInterfaceDef::_duplicate (LocalInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::LocalInterfaceDef::_tao_release (LocalInterfaceDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::LocalInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::LocalInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/LocalInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::LocalInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_LocalInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/LocalInterfaceDef:1.0",
    "LocalInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDef =
    &_tao_tc_CORBA_LocalInterfaceDef;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExtLocalInterfaceDef.

CORBA::ExtLocalInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>::duplicate (
    CORBA::ExtLocalInterfaceDef_ptr p
  )
{
  return CORBA::ExtLocalInterfaceDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>::release (
    CORBA::ExtLocalInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ExtLocalInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>::nil (void)
{
  return CORBA::ExtLocalInterfaceDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>::marshal (
    CORBA::ExtLocalInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ExtLocalInterfaceDef::ExtLocalInterfaceDef (void)
 : the_TAO_ExtLocalInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_ExtLocalInterfaceDef_setup_collocation ();
}

void
CORBA::ExtLocalInterfaceDef::CORBA_ExtLocalInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExtLocalInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_LocalInterfaceDef_setup_collocation ();
  this->CORBA_InterfaceAttrExtension_setup_collocation ();
}

CORBA::ExtLocalInterfaceDef::~ExtLocalInterfaceDef (void)
{}

void
CORBA::ExtLocalInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExtLocalInterfaceDef *_tao_tmp_pointer =
    static_cast<ExtLocalInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExtLocalInterfaceDef_ptr
CORBA::ExtLocalInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtLocalInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0",
        CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtLocalInterfaceDef_ptr
CORBA::ExtLocalInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtLocalInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0",
        CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtLocalInterfaceDef_ptr
CORBA::ExtLocalInterfaceDef::_duplicate (ExtLocalInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ExtLocalInterfaceDef::_tao_release (ExtLocalInterfaceDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ExtLocalInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExtLocalInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::ExtLocalInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtLocalInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0",
    "ExtLocalInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDef =
    &_tao_tc_CORBA_ExtLocalInterfaceDef;
}



// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveKind _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::PrimitiveKind>::insert (
      _tao_any,
      CORBA::_tc_PrimitiveKind,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::PrimitiveKind &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::PrimitiveKind>::extract (
        _tao_any,
        CORBA::_tc_PrimitiveKind,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::Repository>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Repository_ptr _tao_elem
  )
{
  CORBA::Repository_ptr _tao_objptr =
    CORBA::Repository::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Repository_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::Repository>::insert (
      _tao_any,
      CORBA::Repository::_tao_any_destructor,
      CORBA::_tc_Repository,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Repository_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::Repository>::extract (
        _tao_any,
        CORBA::Repository::_tao_any_destructor,
        CORBA::_tc_Repository,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ModuleDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr _tao_elem
  )
{
  CORBA::ModuleDef_ptr _tao_objptr =
    CORBA::ModuleDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ModuleDef>::insert (
      _tao_any,
      CORBA::ModuleDef::_tao_any_destructor,
      CORBA::_tc_ModuleDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ModuleDef>::extract (
        _tao_any,
        CORBA::ModuleDef::_tao_any_destructor,
        CORBA::_tc_ModuleDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ModuleDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::insert_copy (
      _tao_any,
      CORBA::ModuleDescription::_tao_any_destructor,
      CORBA::_tc_ModuleDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::insert (
      _tao_any,
      CORBA::ModuleDescription::_tao_any_destructor,
      CORBA::_tc_ModuleDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ModuleDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ModuleDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ModuleDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::extract (
        _tao_any,
        CORBA::ModuleDescription::_tao_any_destructor,
        CORBA::_tc_ModuleDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ConstantDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr _tao_elem
  )
{
  CORBA::ConstantDef_ptr _tao_objptr =
    CORBA::ConstantDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ConstantDef>::insert (
      _tao_any,
      CORBA::ConstantDef::_tao_any_destructor,
      CORBA::_tc_ConstantDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ConstantDef>::extract (
        _tao_any,
        CORBA::ConstantDef::_tao_any_destructor,
        CORBA::_tc_ConstantDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ConstantDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::insert_copy (
      _tao_any,
      CORBA::ConstantDescription::_tao_any_destructor,
      CORBA::_tc_ConstantDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::insert (
      _tao_any,
      CORBA::ConstantDescription::_tao_any_destructor,
      CORBA::_tc_ConstantDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ConstantDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ConstantDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ConstantDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::extract (
        _tao_any,
        CORBA::ConstantDescription::_tao_any_destructor,
        CORBA::_tc_ConstantDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::StructDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructDef_ptr _tao_elem
  )
{
  CORBA::StructDef_ptr _tao_objptr =
    CORBA::StructDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::StructDef>::insert (
      _tao_any,
      CORBA::StructDef::_tao_any_destructor,
      CORBA::_tc_StructDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StructDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::StructDef>::extract (
        _tao_any,
        CORBA::StructDef::_tao_any_destructor,
        CORBA::_tc_StructDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::UnionDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr _tao_elem
  )
{
  CORBA::UnionDef_ptr _tao_objptr =
    CORBA::UnionDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::UnionDef>::insert (
      _tao_any,
      CORBA::UnionDef::_tao_any_destructor,
      CORBA::_tc_UnionDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::UnionDef>::extract (
        _tao_any,
        CORBA::UnionDef::_tao_any_destructor,
        CORBA::_tc_UnionDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::EnumDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr _tao_elem
  )
{
  CORBA::EnumDef_ptr _tao_objptr =
    CORBA::EnumDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::EnumDef>::insert (
      _tao_any,
      CORBA::EnumDef::_tao_any_destructor,
      CORBA::_tc_EnumDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::EnumDef>::extract (
        _tao_any,
        CORBA::EnumDef::_tao_any_destructor,
        CORBA::_tc_EnumDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::AliasDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr _tao_elem
  )
{
  CORBA::AliasDef_ptr _tao_objptr =
    CORBA::AliasDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AliasDef>::insert (
      _tao_any,
      CORBA::AliasDef::_tao_any_destructor,
      CORBA::_tc_AliasDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AliasDef>::extract (
        _tao_any,
        CORBA::AliasDef::_tao_any_destructor,
        CORBA::_tc_AliasDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::NativeDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr _tao_elem
  )
{
  CORBA::NativeDef_ptr _tao_objptr =
    CORBA::NativeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::NativeDef>::insert (
      _tao_any,
      CORBA::NativeDef::_tao_any_destructor,
      CORBA::_tc_NativeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::NativeDef>::extract (
        _tao_any,
        CORBA::NativeDef::_tao_any_destructor,
        CORBA::_tc_NativeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::PrimitiveDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr _tao_elem
  )
{
  CORBA::PrimitiveDef_ptr _tao_objptr =
    CORBA::PrimitiveDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::PrimitiveDef>::insert (
      _tao_any,
      CORBA::PrimitiveDef::_tao_any_destructor,
      CORBA::_tc_PrimitiveDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::PrimitiveDef>::extract (
        _tao_any,
        CORBA::PrimitiveDef::_tao_any_destructor,
        CORBA::_tc_PrimitiveDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::StringDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StringDef_ptr _tao_elem
  )
{
  CORBA::StringDef_ptr _tao_objptr =
    CORBA::StringDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StringDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::StringDef>::insert (
      _tao_any,
      CORBA::StringDef::_tao_any_destructor,
      CORBA::_tc_StringDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StringDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::StringDef>::extract (
        _tao_any,
        CORBA::StringDef::_tao_any_destructor,
        CORBA::_tc_StringDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::WstringDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr _tao_elem
  )
{
  CORBA::WstringDef_ptr _tao_objptr =
    CORBA::WstringDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::WstringDef>::insert (
      _tao_any,
      CORBA::WstringDef::_tao_any_destructor,
      CORBA::_tc_WstringDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::WstringDef>::extract (
        _tao_any,
        CORBA::WstringDef::_tao_any_destructor,
        CORBA::_tc_WstringDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::SequenceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr _tao_elem
  )
{
  CORBA::SequenceDef_ptr _tao_objptr =
    CORBA::SequenceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::SequenceDef>::insert (
      _tao_any,
      CORBA::SequenceDef::_tao_any_destructor,
      CORBA::_tc_SequenceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::SequenceDef>::extract (
        _tao_any,
        CORBA::SequenceDef::_tao_any_destructor,
        CORBA::_tc_SequenceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ArrayDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr _tao_elem
  )
{
  CORBA::ArrayDef_ptr _tao_objptr =
    CORBA::ArrayDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ArrayDef>::insert (
      _tao_any,
      CORBA::ArrayDef::_tao_any_destructor,
      CORBA::_tc_ArrayDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ArrayDef>::extract (
        _tao_any,
        CORBA::ArrayDef::_tao_any_destructor,
        CORBA::_tc_ArrayDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExceptionDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr _tao_elem
  )
{
  CORBA::ExceptionDef_ptr _tao_objptr =
    CORBA::ExceptionDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExceptionDef>::insert (
      _tao_any,
      CORBA::ExceptionDef::_tao_any_destructor,
      CORBA::_tc_ExceptionDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExceptionDef>::extract (
        _tao_any,
        CORBA::ExceptionDef::_tao_any_destructor,
        CORBA::_tc_ExceptionDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExceptionDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExceptionDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExceptionDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::insert (
      _tao_any,
      CORBA::ExceptionDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExceptionDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExceptionDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExceptionDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExceptionDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::extract (
        _tao_any,
        CORBA::ExceptionDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExceptionDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::AttributeMode>::insert (
      _tao_any,
      CORBA::_tc_AttributeMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::AttributeMode>::extract (
        _tao_any,
        CORBA::_tc_AttributeMode,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::AttributeDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr _tao_elem
  )
{
  CORBA::AttributeDef_ptr _tao_objptr =
    CORBA::AttributeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AttributeDef>::insert (
      _tao_any,
      CORBA::AttributeDef::_tao_any_destructor,
      CORBA::_tc_AttributeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AttributeDef>::extract (
        _tao_any,
        CORBA::AttributeDef::_tao_any_destructor,
        CORBA::_tc_AttributeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::AttributeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::insert_copy (
      _tao_any,
      CORBA::AttributeDescription::_tao_any_destructor,
      CORBA::_tc_AttributeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::insert (
      _tao_any,
      CORBA::AttributeDescription::_tao_any_destructor,
      CORBA::_tc_AttributeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::AttributeDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::AttributeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::extract (
        _tao_any,
        CORBA::AttributeDescription::_tao_any_destructor,
        CORBA::_tc_AttributeDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtAttributeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::insert_copy (
      _tao_any,
      CORBA::ExtAttributeDescription::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::insert (
      _tao_any,
      CORBA::ExtAttributeDescription::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttributeDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtAttributeDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtAttributeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::extract (
        _tao_any,
        CORBA::ExtAttributeDescription::_tao_any_destructor,
        CORBA::_tc_ExtAttributeDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExtAttributeDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr _tao_elem
  )
{
  CORBA::ExtAttributeDef_ptr _tao_objptr =
    CORBA::ExtAttributeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtAttributeDef>::insert (
      _tao_any,
      CORBA::ExtAttributeDef::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtAttributeDef>::extract (
        _tao_any,
        CORBA::ExtAttributeDef::_tao_any_destructor,
        CORBA::_tc_ExtAttributeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::OperationMode>::insert (
      _tao_any,
      CORBA::_tc_OperationMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::OperationMode>::extract (
        _tao_any,
        CORBA::_tc_OperationMode,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ParameterDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::insert_copy (
      _tao_any,
      CORBA::ParameterDescription::_tao_any_destructor,
      CORBA::_tc_ParameterDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ParameterDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::insert (
      _tao_any,
      CORBA::ParameterDescription::_tao_any_destructor,
      CORBA::_tc_ParameterDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ParameterDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ParameterDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ParameterDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::extract (
        _tao_any,
        CORBA::ParameterDescription::_tao_any_destructor,
        CORBA::_tc_ParameterDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ParDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ParDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ParDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ParDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::insert (
      _tao_any,
      CORBA::ParDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ParDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ParDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ParDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ParDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::extract (
        _tao_any,
        CORBA::ParDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ParDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ContextIdSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::insert_copy (
      _tao_any,
      CORBA::ContextIdSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ContextIdSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ContextIdSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::insert (
      _tao_any,
      CORBA::ContextIdSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ContextIdSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ContextIdSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ContextIdSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ContextIdSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::extract (
        _tao_any,
        CORBA::ContextIdSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ContextIdSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::OperationDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr _tao_elem
  )
{
  CORBA::OperationDef_ptr _tao_objptr =
    CORBA::OperationDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::OperationDef>::insert (
      _tao_any,
      CORBA::OperationDef::_tao_any_destructor,
      CORBA::_tc_OperationDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::OperationDef>::extract (
        _tao_any,
        CORBA::OperationDef::_tao_any_destructor,
        CORBA::_tc_OperationDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::OperationDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::insert_copy (
      _tao_any,
      CORBA::OperationDescription::_tao_any_destructor,
      CORBA::_tc_OperationDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::insert (
      _tao_any,
      CORBA::OperationDescription::_tao_any_destructor,
      CORBA::_tc_OperationDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::OperationDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::OperationDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::extract (
        _tao_any,
        CORBA::OperationDescription::_tao_any_destructor,
        CORBA::_tc_OperationDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::RepositoryIdSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::insert_copy (
      _tao_any,
      CORBA::RepositoryIdSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_RepositoryIdSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::RepositoryIdSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::insert (
      _tao_any,
      CORBA::RepositoryIdSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_RepositoryIdSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::RepositoryIdSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::RepositoryIdSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::RepositoryIdSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::extract (
        _tao_any,
        CORBA::RepositoryIdSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_RepositoryIdSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::OpDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::OpDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_OpDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OpDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::insert (
      _tao_any,
      CORBA::OpDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_OpDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OpDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::OpDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::OpDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::extract (
        _tao_any,
        CORBA::OpDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_OpDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::AttrDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::AttrDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_AttrDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttrDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::insert (
      _tao_any,
      CORBA::AttrDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_AttrDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttrDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::AttrDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::AttrDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::extract (
        _tao_any,
        CORBA::AttrDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_AttrDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtAttrDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtAttrDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttrDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::insert (
      _tao_any,
      CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtAttrDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttrDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtAttrDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtAttrDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::extract (
        _tao_any,
        CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtAttrDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::InterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr _tao_elem
  )
{
  CORBA::InterfaceDef_ptr _tao_objptr =
    CORBA::InterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::InterfaceDef>::insert (
      _tao_any,
      CORBA::InterfaceDef::_tao_any_destructor,
      CORBA::_tc_InterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::InterfaceDef>::extract (
        _tao_any,
        CORBA::InterfaceDef::_tao_any_destructor,
        CORBA::_tc_InterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceDef::FullInterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceDef::_tc_FullInterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef::FullInterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceDef::_tc_FullInterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDef::FullInterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InterfaceDef::FullInterfaceDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceDef::FullInterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
        CORBA::InterfaceDef::_tc_FullInterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceDescription::_tao_any_destructor,
      CORBA::_tc_InterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceDescription::_tao_any_destructor,
      CORBA::_tc_InterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InterfaceDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceDescription::_tao_any_destructor,
        CORBA::_tc_InterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::InterfaceAttrExtension>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr _tao_elem
  )
{
  CORBA::InterfaceAttrExtension_ptr _tao_objptr =
    CORBA::InterfaceAttrExtension::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::InterfaceAttrExtension>::insert (
      _tao_any,
      CORBA::InterfaceAttrExtension::_tao_any_destructor,
      CORBA::_tc_InterfaceAttrExtension,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::InterfaceAttrExtension>::extract (
        _tao_any,
        CORBA::InterfaceAttrExtension::_tao_any_destructor,
        CORBA::_tc_InterfaceAttrExtension,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
        CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExtInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtInterfaceDef_ptr _tao_objptr =
    CORBA::ExtInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::AbstractInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr _tao_elem
  )
{
  CORBA::AbstractInterfaceDef_ptr _tao_objptr =
    CORBA::AbstractInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AbstractInterfaceDef>::insert (
      _tao_any,
      CORBA::AbstractInterfaceDef::_tao_any_destructor,
      CORBA::_tc_AbstractInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AbstractInterfaceDef>::extract (
        _tao_any,
        CORBA::AbstractInterfaceDef::_tao_any_destructor,
        CORBA::_tc_AbstractInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtAbstractInterfaceDef_ptr _tao_objptr =
    CORBA::ExtAbstractInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtAbstractInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtAbstractInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtAbstractInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtAbstractInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::LocalInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr _tao_elem
  )
{
  CORBA::LocalInterfaceDef_ptr _tao_objptr =
    CORBA::LocalInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::LocalInterfaceDef>::insert (
      _tao_any,
      CORBA::LocalInterfaceDef::_tao_any_destructor,
      CORBA::_tc_LocalInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::LocalInterfaceDef>::extract (
        _tao_any,
        CORBA::LocalInterfaceDef::_tao_any_destructor,
        CORBA::_tc_LocalInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExtLocalInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtLocalInterfaceDef_ptr _tao_objptr =
    CORBA::ExtLocalInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtLocalInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtLocalInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtLocalInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtLocalInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtLocalInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtLocalInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_cs.cpp:51

CORBA::Boolean operator<< (TAO_OutputCDR & strm, CORBA::PrimitiveKind _tao_enumerator)
{
  return strm << static_cast<CORBA::ULong> (_tao_enumerator);
}

CORBA::Boolean operator>> (TAO_InputCDR & strm, CORBA::PrimitiveKind & _tao_enumerator)
{
  CORBA::ULong _tao_temp = 0;
  CORBA::Boolean const _tao_success = strm >> _tao_temp;

  if (_tao_success)
    {
      _tao_enumerator = static_cast<CORBA::PrimitiveKind> (_tao_temp);
    }

  return _tao_success;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Repository_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Repository_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::Repository RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ModuleDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ModuleDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ModuleDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ModuleDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ModuleDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ConstantDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ConstantDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ConstantDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ConstantDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    (strm << _tao_aggregate.value);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ConstantDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.value);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::StructDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::StructDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::StructDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::UnionDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::UnionDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::UnionDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::EnumDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::EnumDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::EnumDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AliasDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AliasDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::AliasDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::NativeDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::NativeDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::NativeDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::PrimitiveDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::PrimitiveDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::PrimitiveDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::StringDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::StringDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::StringDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::WstringDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::WstringDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::WstringDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::SequenceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::SequenceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::SequenceDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ArrayDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ArrayDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ArrayDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExceptionDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExceptionDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ExceptionDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExceptionDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExceptionDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExceptionDefSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExceptionDefSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ExceptionDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_cs.cpp:51

CORBA::Boolean operator<< (TAO_OutputCDR & strm, CORBA::AttributeMode _tao_enumerator)
{
  return strm << static_cast<CORBA::ULong> (_tao_enumerator);
}

CORBA::Boolean operator>> (TAO_InputCDR & strm, CORBA::AttributeMode & _tao_enumerator)
{
  CORBA::ULong _tao_temp = 0;
  CORBA::Boolean const _tao_success = strm >> _tao_temp;

  if (_tao_success)
    {
      _tao_enumerator = static_cast<CORBA::AttributeMode> (_tao_temp);
    }

  return _tao_success;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AttributeDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AttributeDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::AttributeDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AttributeDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    (strm << _tao_aggregate.mode);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AttributeDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.mode);
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAttributeDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    (strm << _tao_aggregate.mode) &&
    (strm << _tao_aggregate.get_exceptions) &&
    (strm << _tao_aggregate.put_exceptions);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAttributeDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.mode) &&
    (strm >> _tao_aggregate.get_exceptions) &&
    (strm >> _tao_aggregate.put_exceptions);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAttributeDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAttributeDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ExtAttributeDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_cs.cpp:51

CORBA::Boolean operator<< (TAO_OutputCDR & strm, CORBA::OperationMode _tao_enumerator)
{
  return strm << static_cast<CORBA::ULong> (_tao_enumerator);
}

CORBA::Boolean operator>> (TAO_InputCDR & strm, CORBA::OperationMode & _tao_enumerator)
{
  CORBA::ULong _tao_temp = 0;
  CORBA::Boolean const _tao_success = strm >> _tao_temp;

  if (_tao_success)
    {
      _tao_enumerator = static_cast<CORBA::OperationMode> (_tao_temp);
    }

  return _tao_success;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ParameterDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    CORBA::Object::marshal (
        _tao_aggregate.type_def.in (),
        strm
      ) &&
    (strm << _tao_aggregate.mode);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ParameterDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.type_def.out ()) &&
    (strm >> _tao_aggregate.mode);
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ParDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_ParDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ParDescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ParDescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ParDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ContextIdSeq_CPP_
#define _TAO_CDR_OP_CORBA_ContextIdSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ContextIdSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ContextIdSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ContextIdSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::OperationDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::OperationDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::OperationDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::OperationDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.result.in ()) &&
    (strm << _tao_aggregate.mode) &&
    (strm << _tao_aggregate.contexts) &&
    (strm << _tao_aggregate.parameters) &&
    (strm << _tao_aggregate.exceptions);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::OperationDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.result.out ()) &&
    (strm >> _tao_aggregate.mode) &&
    (strm >> _tao_aggregate.contexts) &&
    (strm >> _tao_aggregate.parameters) &&
    (strm >> _tao_aggregate.exceptions);
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_RepositoryIdSeq_CPP_
#define _TAO_CDR_OP_CORBA_RepositoryIdSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::RepositoryIdSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::RepositoryIdSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_RepositoryIdSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_OpDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_OpDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::OpDescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::OpDescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_OpDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_AttrDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_AttrDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AttrDescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AttrDescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_AttrDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAttrDescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAttrDescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceDef::FullInterfaceDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.operations) &&
    (strm << _tao_aggregate.attributes) &&
    (strm << _tao_aggregate.base_interfaces) &&
    (strm << _tao_aggregate.type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceDef::FullInterfaceDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.operations) &&
    (strm >> _tao_aggregate.attributes) &&
    (strm >> _tao_aggregate.base_interfaces) &&
    (strm >> _tao_aggregate.type.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::InterfaceDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.base_interfaces);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.base_interfaces);
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.operations) &&
    (strm << _tao_aggregate.attributes) &&
    (strm << _tao_aggregate.base_interfaces) &&
    (strm << _tao_aggregate.type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.operations) &&
    (strm >> _tao_aggregate.attributes) &&
    (strm >> _tao_aggregate.base_interfaces) &&
    (strm >> _tao_aggregate.type.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceAttrExtension_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceAttrExtension_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::InterfaceAttrExtension RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ExtInterfaceDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AbstractInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AbstractInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::AbstractInterfaceDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAbstractInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAbstractInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ExtAbstractInterfaceDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::LocalInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::LocalInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::LocalInterfaceDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtLocalInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtLocalInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ExtLocalInterfaceDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

TAO_END_VERSIONED_NAMESPACE_DECL
