// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:293


#include "tao/AnyTypeCode/orb_typesA.h"
#include "IFR_ComponentsC.h"
#include "tao/CDR.h"
#include "tao/IFR_Client/IFR_ExtendedC.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/AnyTypeCode/Recursive_Type_TypeCode.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "ace/OS_NS_string.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "IFR_ComponentsC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:70


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_INTERFACEDEF__ARG_TRAITS_)
#define _CORBA_INTERFACEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::InterfaceDef>
    : public
        Object_Arg_Traits_T<
            CORBA::InterfaceDef_ptr,
            CORBA::InterfaceDef_var,
            CORBA::InterfaceDef_out,
            TAO::Objref_Traits<CORBA::InterfaceDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::InterfaceDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_INTERFACEDEFSEQ__ARG_TRAITS_)
#define _CORBA_INTERFACEDEFSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::InterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InterfaceDefSeq,
            CORBA::InterfaceDefSeq_var,
            CORBA::InterfaceDefSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::InterfaceDefSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_VALUEDEF__ARG_TRAITS_)
#define _CORBA_VALUEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ValueDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ValueDef_ptr,
            CORBA::ValueDef_var,
            CORBA::ValueDef_out,
            TAO::Objref_Traits<CORBA::ValueDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ValueDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_VALUEDEFSEQ__ARG_TRAITS_)
#define _CORBA_VALUEDEFSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ValueDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ValueDefSeq,
            CORBA::ValueDefSeq_var,
            CORBA::ValueDefSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ValueDefSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_EXTINITIALIZERSEQ__ARG_TRAITS_)
#define _CORBA_EXTINITIALIZERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ExtInitializerSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExtInitializerSeq,
            CORBA::ExtInitializerSeq_var,
            CORBA::ExtInitializerSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ExtInitializerSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_)
#define _CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ExceptionDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExceptionDefSeq,
            CORBA::ExceptionDefSeq_var,
            CORBA::ExceptionDefSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ExceptionDefSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:543

#if !defined (_CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_)
#define _CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<CORBA::ParDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ParDescriptionSeq,
            CORBA::ParDescriptionSeq_var,
            CORBA::ParDescriptionSeq_out,
            TAO::Any_Insert_Policy_Stream <CORBA::ParDescriptionSeq>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_COMPONENTDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_COMPONENTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::ComponentDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::ComponentDef_ptr,
            CORBA::ComponentIR::ComponentDef_var,
            CORBA::ComponentIR::ComponentDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::ComponentDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::ComponentDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_HOMEDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_HOMEDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::HomeDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::HomeDef_ptr,
            CORBA::ComponentIR::HomeDef_var,
            CORBA::ComponentIR::HomeDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::HomeDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::HomeDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_EVENTDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_EVENTDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::EventDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::EventDef_ptr,
            CORBA::ComponentIR::EventDef_var,
            CORBA::ComponentIR::EventDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::EventDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::EventDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_PROVIDESDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_PROVIDESDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::ProvidesDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::ProvidesDef_ptr,
            CORBA::ComponentIR::ProvidesDef_var,
            CORBA::ComponentIR::ProvidesDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::ProvidesDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::ProvidesDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_USESDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_USESDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::UsesDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::UsesDef_ptr,
            CORBA::ComponentIR::UsesDef_var,
            CORBA::ComponentIR::UsesDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::UsesDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::UsesDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_EMITSDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_EMITSDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::EmitsDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::EmitsDef_ptr,
            CORBA::ComponentIR::EmitsDef_var,
            CORBA::ComponentIR::EmitsDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::EmitsDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::EmitsDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_PUBLISHESDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_PUBLISHESDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::PublishesDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::PublishesDef_ptr,
            CORBA::ComponentIR::PublishesDef_var,
            CORBA::ComponentIR::PublishesDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::PublishesDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::PublishesDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_CONSUMESDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_CONSUMESDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::ConsumesDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::ConsumesDef_ptr,
            CORBA::ComponentIR::ConsumesDef_var,
            CORBA::ComponentIR::ConsumesDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::ConsumesDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::ConsumesDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_FACTORYDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_FACTORYDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::FactoryDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::FactoryDef_ptr,
            CORBA::ComponentIR::FactoryDef_var,
            CORBA::ComponentIR::FactoryDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::FactoryDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::FactoryDef_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_CORBA_COMPONENTIR_FINDERDEF__ARG_TRAITS_)
#define _CORBA_COMPONENTIR_FINDERDEF__ARG_TRAITS_

  template<>
  class  Arg_Traits<CORBA::ComponentIR::FinderDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ComponentIR::FinderDef_ptr,
            CORBA::ComponentIR::FinderDef_var,
            CORBA::ComponentIR::FinderDef_out,
            TAO::Objref_Traits<CORBA::ComponentIR::FinderDef>,
            TAO::Any_Insert_Policy_Stream <CORBA::ComponentIR::FinderDef_ptr>
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::EventDef.

CORBA::ComponentIR::EventDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::EventDef>::duplicate (
    CORBA::ComponentIR::EventDef_ptr p
  )
{
  return CORBA::ComponentIR::EventDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::EventDef>::release (
    CORBA::ComponentIR::EventDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::EventDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::EventDef>::nil (void)
{
  return CORBA::ComponentIR::EventDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::EventDef>::marshal (
    CORBA::ComponentIR::EventDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_EventDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ComponentIR::EventDef::EventDef (void)
 : the_TAO_EventDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_EventDef_setup_collocation ();
}

void
CORBA::ComponentIR::EventDef::CORBA_ComponentIR_EventDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_EventDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_EventDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_EventDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_ExtValueDef_setup_collocation ();
}

CORBA::ComponentIR::EventDef::~EventDef (void)
{}

void
CORBA::ComponentIR::EventDef::_tao_any_destructor (void *_tao_void_pointer)
{
  EventDef *_tao_tmp_pointer =
    static_cast<EventDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::EventDef_ptr
CORBA::ComponentIR::EventDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EventDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/EventDef:1.0",
        CORBA_ComponentIR__TAO_EventDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::EventDef_ptr
CORBA::ComponentIR::EventDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EventDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/EventDef:1.0",
        CORBA_ComponentIR__TAO_EventDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::EventDef_ptr
CORBA::ComponentIR::EventDef::_duplicate (EventDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::EventDef::_tao_release (EventDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::EventDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ValueDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtValueDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/EventDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::EventDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/EventDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::EventDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_EventDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/EventDef:1.0",
    "EventDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_EventDef =
      &_tao_tc_CORBA_ComponentIR_EventDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::Container.

CORBA::ComponentIR::Container_ptr
TAO::Objref_Traits<CORBA::ComponentIR::Container>::duplicate (
    CORBA::ComponentIR::Container_ptr p
  )
{
  return CORBA::ComponentIR::Container::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::Container>::release (
    CORBA::ComponentIR::Container_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::Container_ptr
TAO::Objref_Traits<CORBA::ComponentIR::Container>::nil (void)
{
  return CORBA::ComponentIR::Container::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::Container>::marshal (
    CORBA::ComponentIR::Container_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_Container_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::ComponentDef_ptr CORBA::ComponentIR::Container::create_component (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::ComponentIR::ComponentDef_ptr base_component,
    const ::CORBA::InterfaceDefSeq & supports_interfaces
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_val _tao_base_component (base_component);
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supports_interfaces (supports_interfaces);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_base_component,
      &_tao_supports_interfaces
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      6,
      "create_component",
      16,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::HomeDef_ptr CORBA::ComponentIR::Container::create_home (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::ComponentIR::HomeDef_ptr base_home,
    ::CORBA::ComponentIR::ComponentDef_ptr managed_component,
    const ::CORBA::InterfaceDefSeq & supports_interfaces,
    ::CORBA::ValueDef_ptr primary_key
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::HomeDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::ComponentIR::HomeDef>::in_arg_val _tao_base_home (base_home);
  TAO::Arg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_val _tao_managed_component (managed_component);
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supports_interfaces (supports_interfaces);
  TAO::Arg_Traits< ::CORBA::ValueDef>::in_arg_val _tao_primary_key (primary_key);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_base_home,
      &_tao_managed_component,
      &_tao_supports_interfaces,
      &_tao_primary_key
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      8,
      "create_home",
      11,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::EventDef_ptr CORBA::ComponentIR::Container::create_event (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::Boolean is_custom,
    ::CORBA::Boolean is_abstract,
    ::CORBA::ValueDef_ptr base_value,
    ::CORBA::Boolean is_truncatable,
    const ::CORBA::ValueDefSeq & abstract_base_values,
    const ::CORBA::InterfaceDefSeq & supported_interfaces,
    const ::CORBA::ExtInitializerSeq & initializers
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_Container_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_Container_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::EventDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_custom (is_custom);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_abstract (is_abstract);
  TAO::Arg_Traits< ::CORBA::ValueDef>::in_arg_val _tao_base_value (base_value);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_truncatable (is_truncatable);
  TAO::Arg_Traits< ::CORBA::ValueDefSeq>::in_arg_val _tao_abstract_base_values (abstract_base_values);
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supported_interfaces (supported_interfaces);
  TAO::Arg_Traits< ::CORBA::ExtInitializerSeq>::in_arg_val _tao_initializers (initializers);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_is_custom,
      &_tao_is_abstract,
      &_tao_base_value,
      &_tao_is_truncatable,
      &_tao_abstract_base_values,
      &_tao_supported_interfaces,
      &_tao_initializers
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      11,
      "create_event",
      12,
      this->the_TAO_Container_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::ComponentIR::Container::Container (void)
 : the_TAO_Container_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_Container_setup_collocation ();
}

void
CORBA::ComponentIR::Container::CORBA_ComponentIR_Container_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_Container_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_Container_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_Container_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Container_setup_collocation ();
}

CORBA::ComponentIR::Container::~Container (void)
{}

void
CORBA::ComponentIR::Container::_tao_any_destructor (void *_tao_void_pointer)
{
  Container *_tao_tmp_pointer =
    static_cast<Container *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::Container_ptr
CORBA::ComponentIR::Container::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Container>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/Container:1.0",
        CORBA_ComponentIR__TAO_Container_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::Container_ptr
CORBA::ComponentIR::Container::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Container>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/Container:1.0",
        CORBA_ComponentIR__TAO_Container_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::Container_ptr
CORBA::ComponentIR::Container::_duplicate (Container_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::Container::_tao_release (Container_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::Container::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::Container::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/Container:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::Container::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_Container (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/Container:1.0",
    "Container");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_Container =
      &_tao_tc_CORBA_ComponentIR_Container;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::ModuleDef.

CORBA::ComponentIR::ModuleDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::ModuleDef>::duplicate (
    CORBA::ComponentIR::ModuleDef_ptr p
  )
{
  return CORBA::ComponentIR::ModuleDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::ModuleDef>::release (
    CORBA::ComponentIR::ModuleDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::ModuleDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::ModuleDef>::nil (void)
{
  return CORBA::ComponentIR::ModuleDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::ModuleDef>::marshal (
    CORBA::ComponentIR::ModuleDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ComponentIR::ModuleDef::ModuleDef (void)
 : the_TAO_ModuleDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_ModuleDef_setup_collocation ();
}

void
CORBA::ComponentIR::ModuleDef::CORBA_ComponentIR_ModuleDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ModuleDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_ModuleDef_setup_collocation ();
  this->CORBA_ComponentIR_Container_setup_collocation ();
}

CORBA::ComponentIR::ModuleDef::~ModuleDef (void)
{}

void
CORBA::ComponentIR::ModuleDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ModuleDef *_tao_tmp_pointer =
    static_cast<ModuleDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::ModuleDef_ptr
CORBA::ComponentIR::ModuleDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ModuleDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/ModuleDef:1.0",
        CORBA_ComponentIR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::ModuleDef_ptr
CORBA::ComponentIR::ModuleDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ModuleDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/ModuleDef:1.0",
        CORBA_ComponentIR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::ModuleDef_ptr
CORBA::ComponentIR::ModuleDef::_duplicate (ModuleDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::ModuleDef::_tao_release (ModuleDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::ModuleDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ModuleDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/ModuleDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::ModuleDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/ModuleDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::ModuleDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_ModuleDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/ModuleDef:1.0",
    "ModuleDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_ModuleDef =
      &_tao_tc_CORBA_ComponentIR_ModuleDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::Repository.

CORBA::ComponentIR::Repository_ptr
TAO::Objref_Traits<CORBA::ComponentIR::Repository>::duplicate (
    CORBA::ComponentIR::Repository_ptr p
  )
{
  return CORBA::ComponentIR::Repository::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::Repository>::release (
    CORBA::ComponentIR::Repository_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::Repository_ptr
TAO::Objref_Traits<CORBA::ComponentIR::Repository>::nil (void)
{
  return CORBA::ComponentIR::Repository::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::Repository>::marshal (
    CORBA::ComponentIR::Repository_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_Repository_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ComponentIR::Repository::Repository (void)
 : the_TAO_Repository_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_Repository_setup_collocation ();
}

void
CORBA::ComponentIR::Repository::CORBA_ComponentIR_Repository_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_Repository_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_Repository_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_Repository_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Repository_setup_collocation ();
  this->CORBA_ComponentIR_Container_setup_collocation ();
}

CORBA::ComponentIR::Repository::~Repository (void)
{}

void
CORBA::ComponentIR::Repository::_tao_any_destructor (void *_tao_void_pointer)
{
  Repository *_tao_tmp_pointer =
    static_cast<Repository *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::Repository_ptr
CORBA::ComponentIR::Repository::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Repository>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/Repository:1.0",
        CORBA_ComponentIR__TAO_Repository_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::Repository_ptr
CORBA::ComponentIR::Repository::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Repository>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/Repository:1.0",
        CORBA_ComponentIR__TAO_Repository_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::Repository_ptr
CORBA::ComponentIR::Repository::_duplicate (Repository_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::Repository::_tao_release (Repository_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::Repository::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Repository:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/Repository:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::Repository::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/Repository:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::Repository::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_Repository (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/Repository:1.0",
    "Repository");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_Repository =
      &_tao_tc_CORBA_ComponentIR_Repository;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::ProvidesDef.

CORBA::ComponentIR::ProvidesDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::ProvidesDef>::duplicate (
    CORBA::ComponentIR::ProvidesDef_ptr p
  )
{
  return CORBA::ComponentIR::ProvidesDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::ProvidesDef>::release (
    CORBA::ComponentIR::ProvidesDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::ProvidesDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::ProvidesDef>::nil (void)
{
  return CORBA::ComponentIR::ProvidesDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::ProvidesDef>::marshal (
    CORBA::ComponentIR::ProvidesDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDef_ptr CORBA::ComponentIR::ProvidesDef::interface_type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ProvidesDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ProvidesDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::InterfaceDef>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_interface_type",
      19,
      this->the_TAO_ProvidesDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::ProvidesDef::interface_type (
    ::CORBA::InterfaceDef_ptr interface_type
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ProvidesDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ProvidesDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::InterfaceDef>::in_arg_val _tao_interface_type (interface_type);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_interface_type
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_interface_type",
      19,
      this->the_TAO_ProvidesDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::ComponentIR::ProvidesDef::ProvidesDef (void)
 : the_TAO_ProvidesDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_ProvidesDef_setup_collocation ();
}

void
CORBA::ComponentIR::ProvidesDef::CORBA_ComponentIR_ProvidesDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ProvidesDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Contained_setup_collocation ();
}

CORBA::ComponentIR::ProvidesDef::~ProvidesDef (void)
{}

void
CORBA::ComponentIR::ProvidesDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ProvidesDef *_tao_tmp_pointer =
    static_cast<ProvidesDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::ProvidesDef_ptr
CORBA::ComponentIR::ProvidesDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ProvidesDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/ProvidesDef:1.0",
        CORBA_ComponentIR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::ProvidesDef_ptr
CORBA::ComponentIR::ProvidesDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ProvidesDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/ProvidesDef:1.0",
        CORBA_ComponentIR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::ProvidesDef_ptr
CORBA::ComponentIR::ProvidesDef::_duplicate (ProvidesDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::ProvidesDef::_tao_release (ProvidesDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::ProvidesDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/ProvidesDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::ProvidesDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/ProvidesDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::ProvidesDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_ProvidesDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/ProvidesDef:1.0",
    "ProvidesDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_ProvidesDef =
      &_tao_tc_CORBA_ComponentIR_ProvidesDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ComponentIR_ProvidesDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "interface_type", &CORBA::_tc_RepositoryId }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_ProvidesDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ComponentIR/ProvidesDescription:1.0",
    "ProvidesDescription",
    _tao_fields_CORBA_ComponentIR_ProvidesDescription,
    5);

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_ProvidesDescription =
      &_tao_tc_CORBA_ComponentIR_ProvidesDescription;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ComponentIR::ProvidesDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ProvidesDescription *_tao_tmp_pointer =
    static_cast<ProvidesDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::UsesDef.

CORBA::ComponentIR::UsesDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::UsesDef>::duplicate (
    CORBA::ComponentIR::UsesDef_ptr p
  )
{
  return CORBA::ComponentIR::UsesDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::UsesDef>::release (
    CORBA::ComponentIR::UsesDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::UsesDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::UsesDef>::nil (void)
{
  return CORBA::ComponentIR::UsesDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::UsesDef>::marshal (
    CORBA::ComponentIR::UsesDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDef_ptr CORBA::ComponentIR::UsesDef::interface_type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_UsesDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_UsesDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::InterfaceDef>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_interface_type",
      19,
      this->the_TAO_UsesDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::UsesDef::interface_type (
    ::CORBA::InterfaceDef_ptr interface_type
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_UsesDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_UsesDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::InterfaceDef>::in_arg_val _tao_interface_type (interface_type);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_interface_type
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_interface_type",
      19,
      this->the_TAO_UsesDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::Boolean CORBA::ComponentIR::UsesDef::is_multiple (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_UsesDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_UsesDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_is_multiple",
      16,
      this->the_TAO_UsesDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::UsesDef::is_multiple (
    ::CORBA::Boolean is_multiple
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_UsesDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_UsesDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_multiple (is_multiple);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_is_multiple
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_is_multiple",
      16,
      this->the_TAO_UsesDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::ComponentIR::UsesDef::UsesDef (void)
 : the_TAO_UsesDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_UsesDef_setup_collocation ();
}

void
CORBA::ComponentIR::UsesDef::CORBA_ComponentIR_UsesDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_UsesDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Contained_setup_collocation ();
}

CORBA::ComponentIR::UsesDef::~UsesDef (void)
{}

void
CORBA::ComponentIR::UsesDef::_tao_any_destructor (void *_tao_void_pointer)
{
  UsesDef *_tao_tmp_pointer =
    static_cast<UsesDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::UsesDef_ptr
CORBA::ComponentIR::UsesDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<UsesDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/UsesDef:1.0",
        CORBA_ComponentIR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::UsesDef_ptr
CORBA::ComponentIR::UsesDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<UsesDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/UsesDef:1.0",
        CORBA_ComponentIR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::UsesDef_ptr
CORBA::ComponentIR::UsesDef::_duplicate (UsesDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::UsesDef::_tao_release (UsesDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::UsesDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/UsesDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::UsesDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/UsesDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::UsesDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_UsesDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/UsesDef:1.0",
    "UsesDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_UsesDef =
      &_tao_tc_CORBA_ComponentIR_UsesDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ComponentIR_UsesDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "interface_type", &CORBA::_tc_RepositoryId },
    { "is_multiple", &CORBA::_tc_boolean }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_UsesDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ComponentIR/UsesDescription:1.0",
    "UsesDescription",
    _tao_fields_CORBA_ComponentIR_UsesDescription,
    6);

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_UsesDescription =
      &_tao_tc_CORBA_ComponentIR_UsesDescription;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ComponentIR::UsesDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  UsesDescription *_tao_tmp_pointer =
    static_cast<UsesDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::EventPortDef.

CORBA::ComponentIR::EventPortDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::EventPortDef>::duplicate (
    CORBA::ComponentIR::EventPortDef_ptr p
  )
{
  return CORBA::ComponentIR::EventPortDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::EventPortDef>::release (
    CORBA::ComponentIR::EventPortDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::EventPortDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::EventPortDef>::nil (void)
{
  return CORBA::ComponentIR::EventPortDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::EventPortDef>::marshal (
    CORBA::ComponentIR::EventPortDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_EventPortDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::EventDef_ptr CORBA::ComponentIR::EventPortDef::event (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_EventPortDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_EventPortDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::EventDef>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_event",
      10,
      this->the_TAO_EventPortDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::EventPortDef::event (
    ::CORBA::ComponentIR::EventDef_ptr event
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_EventPortDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_EventPortDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_val _tao_event (event);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_event
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_event",
      10,
      this->the_TAO_EventPortDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::Boolean CORBA::ComponentIR::EventPortDef::is_a (
    const char * event_id
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_EventPortDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_EventPortDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_event_id (event_id);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_event_id
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "is_a",
      4,
      this->the_TAO_EventPortDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::ComponentIR::EventPortDef::EventPortDef (void)
 : the_TAO_EventPortDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_EventPortDef_setup_collocation ();
}

void
CORBA::ComponentIR::EventPortDef::CORBA_ComponentIR_EventPortDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_EventPortDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_EventPortDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_EventPortDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_Contained_setup_collocation ();
}

CORBA::ComponentIR::EventPortDef::~EventPortDef (void)
{}

void
CORBA::ComponentIR::EventPortDef::_tao_any_destructor (void *_tao_void_pointer)
{
  EventPortDef *_tao_tmp_pointer =
    static_cast<EventPortDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::EventPortDef_ptr
CORBA::ComponentIR::EventPortDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EventPortDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0",
        CORBA_ComponentIR__TAO_EventPortDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::EventPortDef_ptr
CORBA::ComponentIR::EventPortDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EventPortDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0",
        CORBA_ComponentIR__TAO_EventPortDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::EventPortDef_ptr
CORBA::ComponentIR::EventPortDef::_duplicate (EventPortDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::EventPortDef::_tao_release (EventPortDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::EventPortDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::EventPortDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::EventPortDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_EventPortDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0",
    "EventPortDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_EventPortDef =
      &_tao_tc_CORBA_ComponentIR_EventPortDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ComponentIR_EventPortDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "event", &CORBA::_tc_RepositoryId }

  };
static TAO::TypeCode::Struct<char const *,
                      CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_EventPortDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ComponentIR/EventPortDescription:1.0",
    "EventPortDescription",
    _tao_fields_CORBA_ComponentIR_EventPortDescription,
    5);

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_EventPortDescription =
      &_tao_tc_CORBA_ComponentIR_EventPortDescription;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ComponentIR::EventPortDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  EventPortDescription *_tao_tmp_pointer =
    static_cast<EventPortDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::EmitsDef.

CORBA::ComponentIR::EmitsDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::EmitsDef>::duplicate (
    CORBA::ComponentIR::EmitsDef_ptr p
  )
{
  return CORBA::ComponentIR::EmitsDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::EmitsDef>::release (
    CORBA::ComponentIR::EmitsDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::EmitsDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::EmitsDef>::nil (void)
{
  return CORBA::ComponentIR::EmitsDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::EmitsDef>::marshal (
    CORBA::ComponentIR::EmitsDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ComponentIR::EmitsDef::EmitsDef (void)
 : the_TAO_EmitsDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_EmitsDef_setup_collocation ();
}

void
CORBA::ComponentIR::EmitsDef::CORBA_ComponentIR_EmitsDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_EmitsDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_ComponentIR_EventPortDef_setup_collocation ();
}

CORBA::ComponentIR::EmitsDef::~EmitsDef (void)
{}

void
CORBA::ComponentIR::EmitsDef::_tao_any_destructor (void *_tao_void_pointer)
{
  EmitsDef *_tao_tmp_pointer =
    static_cast<EmitsDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::EmitsDef_ptr
CORBA::ComponentIR::EmitsDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EmitsDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/EmitsDef:1.0",
        CORBA_ComponentIR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::EmitsDef_ptr
CORBA::ComponentIR::EmitsDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EmitsDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/EmitsDef:1.0",
        CORBA_ComponentIR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::EmitsDef_ptr
CORBA::ComponentIR::EmitsDef::_duplicate (EmitsDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::EmitsDef::_tao_release (EmitsDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::EmitsDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/EmitsDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::EmitsDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/EmitsDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::EmitsDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_EmitsDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/EmitsDef:1.0",
    "EmitsDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_EmitsDef =
      &_tao_tc_CORBA_ComponentIR_EmitsDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::PublishesDef.

CORBA::ComponentIR::PublishesDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::PublishesDef>::duplicate (
    CORBA::ComponentIR::PublishesDef_ptr p
  )
{
  return CORBA::ComponentIR::PublishesDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::PublishesDef>::release (
    CORBA::ComponentIR::PublishesDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::PublishesDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::PublishesDef>::nil (void)
{
  return CORBA::ComponentIR::PublishesDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::PublishesDef>::marshal (
    CORBA::ComponentIR::PublishesDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ComponentIR::PublishesDef::PublishesDef (void)
 : the_TAO_PublishesDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_PublishesDef_setup_collocation ();
}

void
CORBA::ComponentIR::PublishesDef::CORBA_ComponentIR_PublishesDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_PublishesDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_ComponentIR_EventPortDef_setup_collocation ();
}

CORBA::ComponentIR::PublishesDef::~PublishesDef (void)
{}

void
CORBA::ComponentIR::PublishesDef::_tao_any_destructor (void *_tao_void_pointer)
{
  PublishesDef *_tao_tmp_pointer =
    static_cast<PublishesDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::PublishesDef_ptr
CORBA::ComponentIR::PublishesDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<PublishesDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/PublishesDef:1.0",
        CORBA_ComponentIR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::PublishesDef_ptr
CORBA::ComponentIR::PublishesDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<PublishesDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/PublishesDef:1.0",
        CORBA_ComponentIR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::PublishesDef_ptr
CORBA::ComponentIR::PublishesDef::_duplicate (PublishesDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::PublishesDef::_tao_release (PublishesDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::PublishesDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/PublishesDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::PublishesDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/PublishesDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::PublishesDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_PublishesDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/PublishesDef:1.0",
    "PublishesDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_PublishesDef =
      &_tao_tc_CORBA_ComponentIR_PublishesDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::ConsumesDef.

CORBA::ComponentIR::ConsumesDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::ConsumesDef>::duplicate (
    CORBA::ComponentIR::ConsumesDef_ptr p
  )
{
  return CORBA::ComponentIR::ConsumesDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::ConsumesDef>::release (
    CORBA::ComponentIR::ConsumesDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::ConsumesDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::ConsumesDef>::nil (void)
{
  return CORBA::ComponentIR::ConsumesDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::ConsumesDef>::marshal (
    CORBA::ComponentIR::ConsumesDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ComponentIR::ConsumesDef::ConsumesDef (void)
 : the_TAO_ConsumesDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_ConsumesDef_setup_collocation ();
}

void
CORBA::ComponentIR::ConsumesDef::CORBA_ComponentIR_ConsumesDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ConsumesDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_ComponentIR_EventPortDef_setup_collocation ();
}

CORBA::ComponentIR::ConsumesDef::~ConsumesDef (void)
{}

void
CORBA::ComponentIR::ConsumesDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ConsumesDef *_tao_tmp_pointer =
    static_cast<ConsumesDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::ConsumesDef_ptr
CORBA::ComponentIR::ConsumesDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ConsumesDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/ConsumesDef:1.0",
        CORBA_ComponentIR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::ConsumesDef_ptr
CORBA::ComponentIR::ConsumesDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ConsumesDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/ConsumesDef:1.0",
        CORBA_ComponentIR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::ConsumesDef_ptr
CORBA::ComponentIR::ConsumesDef::_duplicate (ConsumesDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::ConsumesDef::_tao_release (ConsumesDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::ConsumesDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/EventPortDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/ConsumesDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::ConsumesDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/ConsumesDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::ConsumesDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_ConsumesDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/ConsumesDef:1.0",
    "ConsumesDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_ConsumesDef =
      &_tao_tc_CORBA_ComponentIR_ConsumesDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::ComponentDef.

CORBA::ComponentIR::ComponentDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::ComponentDef>::duplicate (
    CORBA::ComponentIR::ComponentDef_ptr p
  )
{
  return CORBA::ComponentIR::ComponentDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::ComponentDef>::release (
    CORBA::ComponentIR::ComponentDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::ComponentDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::ComponentDef>::nil (void)
{
  return CORBA::ComponentIR::ComponentDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::ComponentDef>::marshal (
    CORBA::ComponentIR::ComponentDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::ComponentDef_ptr CORBA::ComponentIR::ComponentDef::base_component (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_base_component",
      19,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::ComponentDef::base_component (
    ::CORBA::ComponentIR::ComponentDef_ptr base_component
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_val _tao_base_component (base_component);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_base_component
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_base_component",
      19,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDefSeq * CORBA::ComponentIR::ComponentDef::supported_interfaces (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_supported_interfaces",
      25,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::ComponentDef::supported_interfaces (
    const ::CORBA::InterfaceDefSeq & supported_interfaces
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supported_interfaces (supported_interfaces);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_supported_interfaces
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_supported_interfaces",
      25,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::ProvidesDef_ptr CORBA::ComponentIR::ComponentDef::create_provides (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::InterfaceDef_ptr interface_type
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::ProvidesDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::InterfaceDef>::in_arg_val _tao_interface_type (interface_type);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_interface_type
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_provides",
      15,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::UsesDef_ptr CORBA::ComponentIR::ComponentDef::create_uses (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::InterfaceDef_ptr interface_type,
    ::CORBA::Boolean is_multiple
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::UsesDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::InterfaceDef>::in_arg_val _tao_interface_type (interface_type);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_is_multiple (is_multiple);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_interface_type,
      &_tao_is_multiple
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      6,
      "create_uses",
      11,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::EmitsDef_ptr CORBA::ComponentIR::ComponentDef::create_emits (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::ComponentIR::EventDef_ptr event
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::EmitsDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_val _tao_event (event);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_event
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_emits",
      12,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::PublishesDef_ptr CORBA::ComponentIR::ComponentDef::create_publishes (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::ComponentIR::EventDef_ptr event
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::PublishesDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_val _tao_event (event);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_event
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_publishes",
      16,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::ConsumesDef_ptr CORBA::ComponentIR::ComponentDef::create_consumes (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::ComponentIR::EventDef_ptr event
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_ComponentDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_ComponentDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::ConsumesDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::ComponentIR::EventDef>::in_arg_val _tao_event (event);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_event
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "create_consumes",
      15,
      this->the_TAO_ComponentDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::ComponentIR::ComponentDef::ComponentDef (void)
 : the_TAO_ComponentDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_ComponentDef_setup_collocation ();
}

void
CORBA::ComponentIR::ComponentDef::CORBA_ComponentIR_ComponentDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ComponentDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_ExtInterfaceDef_setup_collocation ();
}

CORBA::ComponentIR::ComponentDef::~ComponentDef (void)
{}

void
CORBA::ComponentIR::ComponentDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ComponentDef *_tao_tmp_pointer =
    static_cast<ComponentDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::ComponentDef_ptr
CORBA::ComponentIR::ComponentDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ComponentDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/ComponentDef:1.0",
        CORBA_ComponentIR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::ComponentDef_ptr
CORBA::ComponentIR::ComponentDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ComponentDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/ComponentDef:1.0",
        CORBA_ComponentIR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::ComponentDef_ptr
CORBA::ComponentIR::ComponentDef::_duplicate (ComponentDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::ComponentDef::_tao_release (ComponentDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::ComponentDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/ComponentDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::ComponentDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/ComponentDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::ComponentDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_ComponentDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/ComponentDef:1.0",
    "ComponentDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_ComponentDef =
      &_tao_tc_CORBA_ComponentIR_ComponentDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_COMPONENTIR_PROVIDESDESCRIPTIONSEQ_CS_)
#define _CORBA_COMPONENTIR_PROVIDESDESCRIPTIONSEQ_CS_

CORBA::ComponentIR::ProvidesDescriptionSeq::ProvidesDescriptionSeq (void)
{}

CORBA::ComponentIR::ProvidesDescriptionSeq::ProvidesDescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        ProvidesDescription
      >
    (max)
{}

CORBA::ComponentIR::ProvidesDescriptionSeq::ProvidesDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ComponentIR::ProvidesDescription * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        ProvidesDescription
      >
    (max, length, buffer, release)
{}

CORBA::ComponentIR::ProvidesDescriptionSeq::ProvidesDescriptionSeq (
    const ProvidesDescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        ProvidesDescription
      >
    (seq)
{}

CORBA::ComponentIR::ProvidesDescriptionSeq::~ProvidesDescriptionSeq (void)
{}

void CORBA::ComponentIR::ProvidesDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ProvidesDescriptionSeq * _tao_tmp_pointer =
    static_cast<ProvidesDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ComponentIR_ProvidesDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_ComponentIR_ProvidesDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ComponentIR_ProvidesDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::ComponentIR::_tc_ProvidesDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ComponentIR_ProvidesDescriptionSeq_0 =
      &CORBA_ComponentIR_ProvidesDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ComponentIR_ProvidesDescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_ProvidesDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ComponentIR/ProvidesDescriptionSeq:1.0",
    "ProvidesDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ComponentIR_ProvidesDescriptionSeq_0);

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_ProvidesDescriptionSeq =
      &_tao_tc_CORBA_ComponentIR_ProvidesDescriptionSeq;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_COMPONENTIR_USESDESCRIPTIONSEQ_CS_)
#define _CORBA_COMPONENTIR_USESDESCRIPTIONSEQ_CS_

CORBA::ComponentIR::UsesDescriptionSeq::UsesDescriptionSeq (void)
{}

CORBA::ComponentIR::UsesDescriptionSeq::UsesDescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        UsesDescription
      >
    (max)
{}

CORBA::ComponentIR::UsesDescriptionSeq::UsesDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ComponentIR::UsesDescription * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        UsesDescription
      >
    (max, length, buffer, release)
{}

CORBA::ComponentIR::UsesDescriptionSeq::UsesDescriptionSeq (
    const UsesDescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        UsesDescription
      >
    (seq)
{}

CORBA::ComponentIR::UsesDescriptionSeq::~UsesDescriptionSeq (void)
{}

void CORBA::ComponentIR::UsesDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  UsesDescriptionSeq * _tao_tmp_pointer =
    static_cast<UsesDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ComponentIR_UsesDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_ComponentIR_UsesDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ComponentIR_UsesDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::ComponentIR::_tc_UsesDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ComponentIR_UsesDescriptionSeq_0 =
      &CORBA_ComponentIR_UsesDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ComponentIR_UsesDescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_UsesDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ComponentIR/UsesDescriptionSeq:1.0",
    "UsesDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ComponentIR_UsesDescriptionSeq_0);

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_UsesDescriptionSeq =
      &_tao_tc_CORBA_ComponentIR_UsesDescriptionSeq;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_COMPONENTIR_EVENTPORTDESCRIPTIONSEQ_CS_)
#define _CORBA_COMPONENTIR_EVENTPORTDESCRIPTIONSEQ_CS_

CORBA::ComponentIR::EventPortDescriptionSeq::EventPortDescriptionSeq (void)
{}

CORBA::ComponentIR::EventPortDescriptionSeq::EventPortDescriptionSeq (
    CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        EventPortDescription
      >
    (max)
{}

CORBA::ComponentIR::EventPortDescriptionSeq::EventPortDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ComponentIR::EventPortDescription * buffer,
    CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        EventPortDescription
      >
    (max, length, buffer, release)
{}

CORBA::ComponentIR::EventPortDescriptionSeq::EventPortDescriptionSeq (
    const EventPortDescriptionSeq &seq
  )
  : TAO::unbounded_value_sequence<
        EventPortDescription
      >
    (seq)
{}

CORBA::ComponentIR::EventPortDescriptionSeq::~EventPortDescriptionSeq (void)
{}

void CORBA::ComponentIR::EventPortDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  EventPortDescriptionSeq * _tao_tmp_pointer =
    static_cast<EventPortDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_CORBA_ComponentIR_EventPortDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_ComponentIR_EventPortDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ComponentIR_EventPortDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::ComponentIR::_tc_EventPortDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ComponentIR_EventPortDescriptionSeq_0 =
      &CORBA_ComponentIR_EventPortDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ComponentIR_EventPortDescriptionSeq_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_EventPortDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ComponentIR/EventPortDescriptionSeq:1.0",
    "EventPortDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ComponentIR_EventPortDescriptionSeq_0);

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_EventPortDescriptionSeq =
      &_tao_tc_CORBA_ComponentIR_EventPortDescriptionSeq;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ComponentIR_ComponentDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "base_component", &CORBA::_tc_RepositoryId },
    { "supported_interfaces", &CORBA::_tc_RepositoryIdSeq },
    { "provided_interfaces", &CORBA::ComponentIR::_tc_ProvidesDescriptionSeq },
    { "used_interfaces", &CORBA::ComponentIR::_tc_UsesDescriptionSeq },
    { "emits_events", &CORBA::ComponentIR::_tc_EventPortDescriptionSeq },
    { "publishes_events", &CORBA::ComponentIR::_tc_EventPortDescriptionSeq },
    { "consumes_events", &CORBA::ComponentIR::_tc_EventPortDescriptionSeq },
    { "attributes", &CORBA::_tc_ExtAttrDescriptionSeq },
    { "type", &CORBA::_tc_TypeCode }

  };
static TAO::TypeCode::Recursive_Type<
  TAO::TypeCode::Struct<char const *,
                        CORBA::TypeCode_ptr const *,
                        TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                        TAO::Null_RefCount_Policy>,
  CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const * >

  _tao_tc_CORBA_ComponentIR_ComponentDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ComponentIR/ComponentDescription:1.0",
    "ComponentDescription",
    _tao_fields_CORBA_ComponentIR_ComponentDescription,
    13);

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_ComponentDescription =
      &_tao_tc_CORBA_ComponentIR_ComponentDescription;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ComponentIR::ComponentDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ComponentDescription *_tao_tmp_pointer =
    static_cast<ComponentDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::FactoryDef.

CORBA::ComponentIR::FactoryDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::FactoryDef>::duplicate (
    CORBA::ComponentIR::FactoryDef_ptr p
  )
{
  return CORBA::ComponentIR::FactoryDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::FactoryDef>::release (
    CORBA::ComponentIR::FactoryDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::FactoryDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::FactoryDef>::nil (void)
{
  return CORBA::ComponentIR::FactoryDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::FactoryDef>::marshal (
    CORBA::ComponentIR::FactoryDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ComponentIR::FactoryDef::FactoryDef (void)
 : the_TAO_FactoryDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_FactoryDef_setup_collocation ();
}

void
CORBA::ComponentIR::FactoryDef::CORBA_ComponentIR_FactoryDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_FactoryDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_OperationDef_setup_collocation ();
}

CORBA::ComponentIR::FactoryDef::~FactoryDef (void)
{}

void
CORBA::ComponentIR::FactoryDef::_tao_any_destructor (void *_tao_void_pointer)
{
  FactoryDef *_tao_tmp_pointer =
    static_cast<FactoryDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::FactoryDef_ptr
CORBA::ComponentIR::FactoryDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<FactoryDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/FactoryDef:1.0",
        CORBA_ComponentIR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::FactoryDef_ptr
CORBA::ComponentIR::FactoryDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<FactoryDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/FactoryDef:1.0",
        CORBA_ComponentIR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::FactoryDef_ptr
CORBA::ComponentIR::FactoryDef::_duplicate (FactoryDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::FactoryDef::_tao_release (FactoryDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::FactoryDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/OperationDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/FactoryDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::FactoryDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/FactoryDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::FactoryDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_FactoryDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/FactoryDef:1.0",
    "FactoryDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_FactoryDef =
      &_tao_tc_CORBA_ComponentIR_FactoryDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::FinderDef.

CORBA::ComponentIR::FinderDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::FinderDef>::duplicate (
    CORBA::ComponentIR::FinderDef_ptr p
  )
{
  return CORBA::ComponentIR::FinderDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::FinderDef>::release (
    CORBA::ComponentIR::FinderDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::FinderDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::FinderDef>::nil (void)
{
  return CORBA::ComponentIR::FinderDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::FinderDef>::marshal (
    CORBA::ComponentIR::FinderDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ComponentIR::FinderDef::FinderDef (void)
 : the_TAO_FinderDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_FinderDef_setup_collocation ();
}

void
CORBA::ComponentIR::FinderDef::CORBA_ComponentIR_FinderDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_FinderDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_OperationDef_setup_collocation ();
}

CORBA::ComponentIR::FinderDef::~FinderDef (void)
{}

void
CORBA::ComponentIR::FinderDef::_tao_any_destructor (void *_tao_void_pointer)
{
  FinderDef *_tao_tmp_pointer =
    static_cast<FinderDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::FinderDef_ptr
CORBA::ComponentIR::FinderDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<FinderDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/FinderDef:1.0",
        CORBA_ComponentIR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::FinderDef_ptr
CORBA::ComponentIR::FinderDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<FinderDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/FinderDef:1.0",
        CORBA_ComponentIR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::FinderDef_ptr
CORBA::ComponentIR::FinderDef::_duplicate (FinderDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::FinderDef::_tao_release (FinderDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::FinderDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/OperationDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/FinderDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::FinderDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/FinderDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::FinderDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_FinderDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/FinderDef:1.0",
    "FinderDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_FinderDef =
      &_tao_tc_CORBA_ComponentIR_FinderDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ComponentIR::HomeDef.

CORBA::ComponentIR::HomeDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::HomeDef>::duplicate (
    CORBA::ComponentIR::HomeDef_ptr p
  )
{
  return CORBA::ComponentIR::HomeDef::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::ComponentIR::HomeDef>::release (
    CORBA::ComponentIR::HomeDef_ptr p
  )
{
  CORBA::release (p);
}

CORBA::ComponentIR::HomeDef_ptr
TAO::Objref_Traits<CORBA::ComponentIR::HomeDef>::nil (void)
{
  return CORBA::ComponentIR::HomeDef::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::ComponentIR::HomeDef>::marshal (
    CORBA::ComponentIR::HomeDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA_ComponentIR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::HomeDef_ptr CORBA::ComponentIR::HomeDef::base_home (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::HomeDef>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_base_home",
      14,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::HomeDef::base_home (
    ::CORBA::ComponentIR::HomeDef_ptr base_home
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ComponentIR::HomeDef>::in_arg_val _tao_base_home (base_home);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_base_home
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_base_home",
      14,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDefSeq * CORBA::ComponentIR::HomeDef::supported_interfaces (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_supported_interfaces",
      25,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::HomeDef::supported_interfaces (
    const ::CORBA::InterfaceDefSeq & supported_interfaces
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::InterfaceDefSeq>::in_arg_val _tao_supported_interfaces (supported_interfaces);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_supported_interfaces
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_supported_interfaces",
      25,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::ComponentDef_ptr CORBA::ComponentIR::HomeDef::managed_component (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::ComponentDef>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_managed_component",
      22,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::HomeDef::managed_component (
    ::CORBA::ComponentIR::ComponentDef_ptr managed_component
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ComponentIR::ComponentDef>::in_arg_val _tao_managed_component (managed_component);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_managed_component
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_managed_component",
      22,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ValueDef_ptr CORBA::ComponentIR::HomeDef::primary_key (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ValueDef>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_primary_key",
      16,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ComponentIR::HomeDef::primary_key (
    ::CORBA::ValueDef_ptr primary_key
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ValueDef>::in_arg_val _tao_primary_key (primary_key);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_primary_key
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_primary_key",
      16,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::FactoryDef_ptr CORBA::ComponentIR::HomeDef::create_factory (
    const char * id,
    const char * name,
    const char * version,
    const ::CORBA::ParDescriptionSeq & params,
    const ::CORBA::ExceptionDefSeq & exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::FactoryDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::ParDescriptionSeq>::in_arg_val _tao_params (params);
  TAO::Arg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_val _tao_exceptions (exceptions);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_params,
      &_tao_exceptions
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      6,
      "create_factory",
      14,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ComponentIR::FinderDef_ptr CORBA::ComponentIR::HomeDef::create_finder (
    const char * id,
    const char * name,
    const char * version,
    const ::CORBA::ParDescriptionSeq & params,
    const ::CORBA::ExceptionDefSeq & exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }

  if (this->the_TAO_HomeDef_Proxy_Broker_ == 0)
    {
      CORBA_ComponentIR_HomeDef_setup_collocation ();
    }

  TAO::Arg_Traits< ::CORBA::ComponentIR::FinderDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< ::CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< ::CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< ::CORBA::ParDescriptionSeq>::in_arg_val _tao_params (params);
  TAO::Arg_Traits< ::CORBA::ExceptionDefSeq>::in_arg_val _tao_exceptions (exceptions);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_params,
      &_tao_exceptions
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      6,
      "create_finder",
      13,
      this->the_TAO_HomeDef_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

CORBA::ComponentIR::HomeDef::HomeDef (void)
 : the_TAO_HomeDef_Proxy_Broker_ (0)
{
  this->CORBA_ComponentIR_HomeDef_setup_collocation ();
}

void
CORBA::ComponentIR::HomeDef::CORBA_ComponentIR_HomeDef_setup_collocation ()
{
  if (::CORBA_ComponentIR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_HomeDef_Proxy_Broker_ =
        ::CORBA_ComponentIR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer (this);
    }

  this->CORBA_ExtInterfaceDef_setup_collocation ();
}

CORBA::ComponentIR::HomeDef::~HomeDef (void)
{}

void
CORBA::ComponentIR::HomeDef::_tao_any_destructor (void *_tao_void_pointer)
{
  HomeDef *_tao_tmp_pointer =
    static_cast<HomeDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ComponentIR::HomeDef_ptr
CORBA::ComponentIR::HomeDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<HomeDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/HomeDef:1.0",
        CORBA_ComponentIR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::HomeDef_ptr
CORBA::ComponentIR::HomeDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<HomeDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ComponentIR/HomeDef:1.0",
        CORBA_ComponentIR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ComponentIR::HomeDef_ptr
CORBA::ComponentIR::HomeDef::_duplicate (HomeDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
CORBA::ComponentIR::HomeDef::_tao_release (HomeDef_ptr obj)
{
  CORBA::release (obj);
}

CORBA::Boolean
CORBA::ComponentIR::HomeDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ComponentIR/HomeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ComponentIR::HomeDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ComponentIR/HomeDef:1.0";
}

CORBA::Boolean
CORBA::ComponentIR::HomeDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ComponentIR_HomeDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ComponentIR/HomeDef:1.0",
    "HomeDef");

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_HomeDef =
      &_tao_tc_CORBA_ComponentIR_HomeDef;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:87



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ComponentIR_HomeDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "base_home", &CORBA::_tc_RepositoryId },
    { "managed_component", &CORBA::_tc_RepositoryId },
    { "primary_key", &CORBA::_tc_ValueDescription },
    { "factories", &CORBA::_tc_OpDescriptionSeq },
    { "finders", &CORBA::_tc_OpDescriptionSeq },
    { "operations", &CORBA::_tc_OpDescriptionSeq },
    { "attributes", &CORBA::_tc_ExtAttrDescriptionSeq },
    { "type", &CORBA::_tc_TypeCode }

  };
static TAO::TypeCode::Recursive_Type<
  TAO::TypeCode::Struct<char const *,
                        CORBA::TypeCode_ptr const *,
                        TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const *,
                        TAO::Null_RefCount_Policy>,
  CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const * >

  _tao_tc_CORBA_ComponentIR_HomeDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ComponentIR/HomeDescription:1.0",
    "HomeDescription",
    _tao_fields_CORBA_ComponentIR_HomeDescription,
    12);

namespace CORBA
{
  namespace ComponentIR
  {
    ::CORBA::TypeCode_ptr const _tc_HomeDescription =
      &_tao_tc_CORBA_ComponentIR_HomeDescription;
  }
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
CORBA::ComponentIR::HomeDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  HomeDescription *_tao_tmp_pointer =
    static_cast<HomeDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::EventDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::EventDef_ptr _tao_objptr =
    CORBA::ComponentIR::EventDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::EventDef>::insert (
      _tao_any,
      CORBA::ComponentIR::EventDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_EventDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::EventDef>::extract (
        _tao_any,
        CORBA::ComponentIR::EventDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_EventDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::Container>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::Container_ptr _tao_elem
  )
{
  CORBA::ComponentIR::Container_ptr _tao_objptr =
    CORBA::ComponentIR::Container::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::Container_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::Container>::insert (
      _tao_any,
      CORBA::ComponentIR::Container::_tao_any_destructor,
      CORBA::ComponentIR::_tc_Container,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::Container_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::Container>::extract (
        _tao_any,
        CORBA::ComponentIR::Container::_tao_any_destructor,
        CORBA::ComponentIR::_tc_Container,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::ModuleDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ModuleDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::ModuleDef_ptr _tao_objptr =
    CORBA::ComponentIR::ModuleDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ModuleDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::ModuleDef>::insert (
      _tao_any,
      CORBA::ComponentIR::ModuleDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_ModuleDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::ModuleDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::ModuleDef>::extract (
        _tao_any,
        CORBA::ComponentIR::ModuleDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_ModuleDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::Repository>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::Repository_ptr _tao_elem
  )
{
  CORBA::ComponentIR::Repository_ptr _tao_objptr =
    CORBA::ComponentIR::Repository::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::Repository_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::Repository>::insert (
      _tao_any,
      CORBA::ComponentIR::Repository::_tao_any_destructor,
      CORBA::ComponentIR::_tc_Repository,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::Repository_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::Repository>::extract (
        _tao_any,
        CORBA::ComponentIR::Repository::_tao_any_destructor,
        CORBA::ComponentIR::_tc_Repository,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::ProvidesDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ProvidesDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::ProvidesDef_ptr _tao_objptr =
    CORBA::ComponentIR::ProvidesDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ProvidesDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::ProvidesDef>::insert (
      _tao_any,
      CORBA::ComponentIR::ProvidesDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_ProvidesDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::ProvidesDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::ProvidesDef>::extract (
        _tao_any,
        CORBA::ComponentIR::ProvidesDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_ProvidesDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ComponentIR::ProvidesDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ProvidesDescription>::insert_copy (
      _tao_any,
      CORBA::ComponentIR::ProvidesDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_ProvidesDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ProvidesDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ProvidesDescription>::insert (
      _tao_any,
      CORBA::ComponentIR::ProvidesDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_ProvidesDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::ProvidesDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ComponentIR::ProvidesDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ComponentIR::ProvidesDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ProvidesDescription>::extract (
        _tao_any,
        CORBA::ComponentIR::ProvidesDescription::_tao_any_destructor,
        CORBA::ComponentIR::_tc_ProvidesDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::UsesDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::UsesDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::UsesDef_ptr _tao_objptr =
    CORBA::ComponentIR::UsesDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::UsesDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::UsesDef>::insert (
      _tao_any,
      CORBA::ComponentIR::UsesDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_UsesDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::UsesDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::UsesDef>::extract (
        _tao_any,
        CORBA::ComponentIR::UsesDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_UsesDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ComponentIR::UsesDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::UsesDescription>::insert_copy (
      _tao_any,
      CORBA::ComponentIR::UsesDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_UsesDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::UsesDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::UsesDescription>::insert (
      _tao_any,
      CORBA::ComponentIR::UsesDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_UsesDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::UsesDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ComponentIR::UsesDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ComponentIR::UsesDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ComponentIR::UsesDescription>::extract (
        _tao_any,
        CORBA::ComponentIR::UsesDescription::_tao_any_destructor,
        CORBA::ComponentIR::_tc_UsesDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::EventPortDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventPortDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::EventPortDef_ptr _tao_objptr =
    CORBA::ComponentIR::EventPortDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventPortDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::EventPortDef>::insert (
      _tao_any,
      CORBA::ComponentIR::EventPortDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_EventPortDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventPortDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::EventPortDef>::extract (
        _tao_any,
        CORBA::ComponentIR::EventPortDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_EventPortDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ComponentIR::EventPortDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::EventPortDescription>::insert_copy (
      _tao_any,
      CORBA::ComponentIR::EventPortDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_EventPortDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventPortDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::EventPortDescription>::insert (
      _tao_any,
      CORBA::ComponentIR::EventPortDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_EventPortDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventPortDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ComponentIR::EventPortDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ComponentIR::EventPortDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ComponentIR::EventPortDescription>::extract (
        _tao_any,
        CORBA::ComponentIR::EventPortDescription::_tao_any_destructor,
        CORBA::ComponentIR::_tc_EventPortDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::EmitsDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::EmitsDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::EmitsDef_ptr _tao_objptr =
    CORBA::ComponentIR::EmitsDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::EmitsDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::EmitsDef>::insert (
      _tao_any,
      CORBA::ComponentIR::EmitsDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_EmitsDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::EmitsDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::EmitsDef>::extract (
        _tao_any,
        CORBA::ComponentIR::EmitsDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_EmitsDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::PublishesDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::PublishesDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::PublishesDef_ptr _tao_objptr =
    CORBA::ComponentIR::PublishesDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::PublishesDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::PublishesDef>::insert (
      _tao_any,
      CORBA::ComponentIR::PublishesDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_PublishesDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::PublishesDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::PublishesDef>::extract (
        _tao_any,
        CORBA::ComponentIR::PublishesDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_PublishesDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::ConsumesDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ConsumesDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::ConsumesDef_ptr _tao_objptr =
    CORBA::ComponentIR::ConsumesDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ConsumesDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::ConsumesDef>::insert (
      _tao_any,
      CORBA::ComponentIR::ConsumesDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_ConsumesDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::ConsumesDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::ConsumesDef>::extract (
        _tao_any,
        CORBA::ComponentIR::ConsumesDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_ConsumesDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::ComponentDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ComponentDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::ComponentDef_ptr _tao_objptr =
    CORBA::ComponentIR::ComponentDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ComponentDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::ComponentDef>::insert (
      _tao_any,
      CORBA::ComponentIR::ComponentDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_ComponentDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::ComponentDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::ComponentDef>::extract (
        _tao_any,
        CORBA::ComponentIR::ComponentDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_ComponentDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ComponentIR::ProvidesDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ProvidesDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ComponentIR::ProvidesDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ComponentIR_ProvidesDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ProvidesDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ProvidesDescriptionSeq>::insert (
      _tao_any,
      CORBA::ComponentIR::ProvidesDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ComponentIR_ProvidesDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::ProvidesDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ComponentIR::ProvidesDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ComponentIR::ProvidesDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ProvidesDescriptionSeq>::extract (
        _tao_any,
        CORBA::ComponentIR::ProvidesDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ComponentIR_ProvidesDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ComponentIR::UsesDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::UsesDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ComponentIR::UsesDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ComponentIR_UsesDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::UsesDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::UsesDescriptionSeq>::insert (
      _tao_any,
      CORBA::ComponentIR::UsesDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ComponentIR_UsesDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::UsesDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ComponentIR::UsesDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ComponentIR::UsesDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ComponentIR::UsesDescriptionSeq>::extract (
        _tao_any,
        CORBA::ComponentIR::UsesDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ComponentIR_UsesDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ComponentIR::EventPortDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::EventPortDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ComponentIR::EventPortDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ComponentIR_EventPortDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventPortDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::EventPortDescriptionSeq>::insert (
      _tao_any,
      CORBA::ComponentIR::EventPortDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ComponentIR_EventPortDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::EventPortDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ComponentIR::EventPortDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ComponentIR::EventPortDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ComponentIR::EventPortDescriptionSeq>::extract (
        _tao_any,
        CORBA::ComponentIR::EventPortDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ComponentIR_EventPortDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ComponentIR::ComponentDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ComponentDescription>::insert_copy (
      _tao_any,
      CORBA::ComponentIR::ComponentDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_ComponentDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::ComponentDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ComponentDescription>::insert (
      _tao_any,
      CORBA::ComponentIR::ComponentDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_ComponentDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::ComponentDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ComponentIR::ComponentDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ComponentIR::ComponentDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ComponentIR::ComponentDescription>::extract (
        _tao_any,
        CORBA::ComponentIR::ComponentDescription::_tao_any_destructor,
        CORBA::ComponentIR::_tc_ComponentDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::FactoryDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::FactoryDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::FactoryDef_ptr _tao_objptr =
    CORBA::ComponentIR::FactoryDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::FactoryDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::FactoryDef>::insert (
      _tao_any,
      CORBA::ComponentIR::FactoryDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_FactoryDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::FactoryDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::FactoryDef>::extract (
        _tao_any,
        CORBA::ComponentIR::FactoryDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_FactoryDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::FinderDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::FinderDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::FinderDef_ptr _tao_objptr =
    CORBA::ComponentIR::FinderDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::FinderDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::FinderDef>::insert (
      _tao_any,
      CORBA::ComponentIR::FinderDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_FinderDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::FinderDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::FinderDef>::extract (
        _tao_any,
        CORBA::ComponentIR::FinderDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_FinderDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ComponentIR::HomeDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::HomeDef_ptr _tao_elem
  )
{
  CORBA::ComponentIR::HomeDef_ptr _tao_objptr =
    CORBA::ComponentIR::HomeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::HomeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ComponentIR::HomeDef>::insert (
      _tao_any,
      CORBA::ComponentIR::HomeDef::_tao_any_destructor,
      CORBA::ComponentIR::_tc_HomeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::HomeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ComponentIR::HomeDef>::extract (
        _tao_any,
        CORBA::ComponentIR::HomeDef::_tao_any_destructor,
        CORBA::ComponentIR::_tc_HomeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ComponentIR::HomeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::HomeDescription>::insert_copy (
      _tao_any,
      CORBA::ComponentIR::HomeDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_HomeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ComponentIR::HomeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ComponentIR::HomeDescription>::insert (
      _tao_any,
      CORBA::ComponentIR::HomeDescription::_tao_any_destructor,
      CORBA::ComponentIR::_tc_HomeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ComponentIR::HomeDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ComponentIR::HomeDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ComponentIR::HomeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ComponentIR::HomeDescription>::extract (
        _tao_any,
        CORBA::ComponentIR::HomeDescription::_tao_any_destructor,
        CORBA::ComponentIR::_tc_HomeDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::EventDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::EventDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::EventDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_EventDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::Container_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::Container_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::Container RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_Container_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::ModuleDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::ModuleDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::ModuleDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::Repository_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::Repository_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::Repository RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_Repository_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::ProvidesDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::ProvidesDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::ProvidesDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::ProvidesDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.interface_type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::ProvidesDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.interface_type.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::UsesDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::UsesDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::UsesDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::UsesDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.interface_type.in ()) &&
    (strm << ACE_OutputCDR::from_boolean (_tao_aggregate.is_multiple));
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::UsesDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.interface_type.out ()) &&
    (strm >> ACE_InputCDR::to_boolean (_tao_aggregate.is_multiple));
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::EventPortDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::EventPortDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::EventPortDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_EventPortDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::EventPortDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.event.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::EventPortDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.event.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::EmitsDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::EmitsDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::EmitsDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::PublishesDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::PublishesDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::PublishesDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::ConsumesDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::ConsumesDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::ConsumesDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::ComponentDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::ComponentDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::ComponentDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ComponentIR_ProvidesDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_ComponentIR_ProvidesDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::ProvidesDescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::ProvidesDescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ComponentIR_ProvidesDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ComponentIR_UsesDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_ComponentIR_UsesDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::UsesDescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::UsesDescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ComponentIR_UsesDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ComponentIR_EventPortDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_ComponentIR_EventPortDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::EventPortDescriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::EventPortDescriptionSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_CORBA_ComponentIR_EventPortDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::ComponentDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.base_component.in ()) &&
    (strm << _tao_aggregate.supported_interfaces) &&
    (strm << _tao_aggregate.provided_interfaces) &&
    (strm << _tao_aggregate.used_interfaces) &&
    (strm << _tao_aggregate.emits_events) &&
    (strm << _tao_aggregate.publishes_events) &&
    (strm << _tao_aggregate.consumes_events) &&
    (strm << _tao_aggregate.attributes) &&
    (strm << _tao_aggregate.type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::ComponentDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.base_component.out ()) &&
    (strm >> _tao_aggregate.supported_interfaces) &&
    (strm >> _tao_aggregate.provided_interfaces) &&
    (strm >> _tao_aggregate.used_interfaces) &&
    (strm >> _tao_aggregate.emits_events) &&
    (strm >> _tao_aggregate.publishes_events) &&
    (strm >> _tao_aggregate.consumes_events) &&
    (strm >> _tao_aggregate.attributes) &&
    (strm >> _tao_aggregate.type.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::FactoryDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::FactoryDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::FactoryDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::FinderDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::FinderDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::FinderDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::HomeDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::HomeDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::CORBA::ComponentIR::HomeDef RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA_ComponentIR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ComponentIR::HomeDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.base_home.in ()) &&
    (strm << _tao_aggregate.managed_component.in ()) &&
    (strm << _tao_aggregate.primary_key) &&
    (strm << _tao_aggregate.factories) &&
    (strm << _tao_aggregate.finders) &&
    (strm << _tao_aggregate.operations) &&
    (strm << _tao_aggregate.attributes) &&
    (strm << _tao_aggregate.type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ComponentIR::HomeDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.base_home.out ()) &&
    (strm >> _tao_aggregate.managed_component.out ()) &&
    (strm >> _tao_aggregate.primary_key) &&
    (strm >> _tao_aggregate.factories) &&
    (strm >> _tao_aggregate.finders) &&
    (strm >> _tao_aggregate.operations) &&
    (strm >> _tao_aggregate.attributes) &&
    (strm >> _tao_aggregate.type.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL
