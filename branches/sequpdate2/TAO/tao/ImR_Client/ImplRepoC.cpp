// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:277


#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Enum_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "ImplRepoC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "tao/AnyTypeCode/Any_Basic_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "ImplRepoC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:70

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_

  template<>
  class  Arg_Traits<ImplementationRepository::ServerObject>
    : public
        Object_Arg_Traits_T<
            ImplementationRepository::ServerObject_ptr,
            ImplementationRepository::ServerObject_var,
            ImplementationRepository::ServerObject_out,
            TAO::Objref_Traits<ImplementationRepository::ServerObject>,
            TAO::Any_Insert_Policy_Stream <ImplementationRepository::ServerObject_ptr>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:888

#if !defined (_IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_

  template<>
  class Arg_Traits<ImplementationRepository::StartupOptions>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::StartupOptions,
            ImplementationRepository::StartupOptions_var,
            ImplementationRepository::StartupOptions_out,
            TAO::Any_Insert_Policy_Stream <ImplementationRepository::StartupOptions>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:888

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_

  template<>
  class Arg_Traits<ImplementationRepository::ServerInformation>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::ServerInformation,
            ImplementationRepository::ServerInformation_var,
            ImplementationRepository::ServerInformation_out,
            TAO::Any_Insert_Policy_Stream <ImplementationRepository::ServerInformation>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:590

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_

  template<>
  class Arg_Traits<ImplementationRepository::ServerInformationList>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::ServerInformationList,
            ImplementationRepository::ServerInformationList_var,
            ImplementationRepository::ServerInformationList_out,
            TAO::Any_Insert_Policy_Stream <ImplementationRepository::ServerInformationList>
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:118

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_

  template<>
  class  Arg_Traits<ImplementationRepository::ServerInformationIterator>
    : public
        Object_Arg_Traits_T<
            ImplementationRepository::ServerInformationIterator_ptr,
            ImplementationRepository::ServerInformationIterator_var,
            ImplementationRepository::ServerInformationIterator_out,
            TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>,
            TAO::Any_Insert_Policy_Stream <ImplementationRepository::ServerInformationIterator_ptr>
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be\be_visitor_exception/exception_cs.cpp:63

ImplementationRepository::AlreadyRegistered::AlreadyRegistered (void)
  : ::CORBA::UserException (
        "IDL:ImplementationRepository/AlreadyRegistered:1.0",
        "AlreadyRegistered"
      )
{
}

ImplementationRepository::AlreadyRegistered::~AlreadyRegistered (void)
{
}

ImplementationRepository::AlreadyRegistered::AlreadyRegistered (const ::ImplementationRepository::AlreadyRegistered &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
}

ImplementationRepository::AlreadyRegistered&
ImplementationRepository::AlreadyRegistered::operator= (const ::ImplementationRepository::AlreadyRegistered &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  return *this;
}

void ImplementationRepository::AlreadyRegistered::_tao_any_destructor (void *_tao_void_pointer)
{
  AlreadyRegistered *_tao_tmp_pointer =
    static_cast<AlreadyRegistered *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

ImplementationRepository::AlreadyRegistered *
ImplementationRepository::AlreadyRegistered::_downcast ( ::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<AlreadyRegistered *> (_tao_excp);
}

const ImplementationRepository::AlreadyRegistered *
ImplementationRepository::AlreadyRegistered::_downcast ( ::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const AlreadyRegistered *> (_tao_excp);
}

::CORBA::Exception *ImplementationRepository::AlreadyRegistered::_alloc (void)
{
  ::CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::ImplementationRepository::AlreadyRegistered, 0);
  return retval;
}

::CORBA::Exception *
ImplementationRepository::AlreadyRegistered::_tao_duplicate (void) const
{
  ::CORBA::Exception *result = 0;
  ACE_NEW_RETURN (
      result,
      ::ImplementationRepository::AlreadyRegistered (*this),
      0
    );
  return result;
}

void ImplementationRepository::AlreadyRegistered::_raise (void) const
{
  TAO_RAISE (*this);
}

void ImplementationRepository::AlreadyRegistered::_tao_encode (
    TAO_OutputCDR &cdr
    ACE_ENV_ARG_DECL
  ) const
{
  if (cdr << *this)
    {
      return;
    }

  ACE_THROW ( ::CORBA::MARSHAL ());
}

void ImplementationRepository::AlreadyRegistered::_tao_decode (
    TAO_InputCDR &cdr
    ACE_ENV_ARG_DECL
  )
{
  if (cdr >> *this)
    {
      return;
    }

  ACE_THROW ( ::CORBA::MARSHAL ());
}

// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr ImplementationRepository::AlreadyRegistered::_tao_type (void) const
{
  return ::ImplementationRepository::_tc_AlreadyRegistered;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:89

static TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_ImplementationRepository_AlreadyRegistered = 0;
static TAO::TypeCode::Struct<char const *,
                      ::CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_AlreadyRegistered (
    ::CORBA::tk_except,
    "IDL:ImplementationRepository/AlreadyRegistered:1.0",
    "AlreadyRegistered",
    _tao_fields_ImplementationRepository_AlreadyRegistered,
    0);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_AlreadyRegistered =
    &_tao_tc_ImplementationRepository_AlreadyRegistered;
}



// TAO_IDL - Generated from
// be\be_visitor_exception/exception_cs.cpp:63

ImplementationRepository::CannotActivate::CannotActivate (void)
  : ::CORBA::UserException (
        "IDL:ImplementationRepository/CannotActivate:1.0",
        "CannotActivate"
      )
{
}

ImplementationRepository::CannotActivate::~CannotActivate (void)
{
}

ImplementationRepository::CannotActivate::CannotActivate (const ::ImplementationRepository::CannotActivate &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
  this->reason = ::CORBA::string_dup (_tao_excp.reason.in ());
}

ImplementationRepository::CannotActivate&
ImplementationRepository::CannotActivate::operator= (const ::ImplementationRepository::CannotActivate &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  this->reason = ::CORBA::string_dup (_tao_excp.reason.in ());
  return *this;
}

void ImplementationRepository::CannotActivate::_tao_any_destructor (void *_tao_void_pointer)
{
  CannotActivate *_tao_tmp_pointer =
    static_cast<CannotActivate *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

ImplementationRepository::CannotActivate *
ImplementationRepository::CannotActivate::_downcast ( ::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<CannotActivate *> (_tao_excp);
}

const ImplementationRepository::CannotActivate *
ImplementationRepository::CannotActivate::_downcast ( ::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const CannotActivate *> (_tao_excp);
}

::CORBA::Exception *ImplementationRepository::CannotActivate::_alloc (void)
{
  ::CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::ImplementationRepository::CannotActivate, 0);
  return retval;
}

::CORBA::Exception *
ImplementationRepository::CannotActivate::_tao_duplicate (void) const
{
  ::CORBA::Exception *result = 0;
  ACE_NEW_RETURN (
      result,
      ::ImplementationRepository::CannotActivate (*this),
      0
    );
  return result;
}

void ImplementationRepository::CannotActivate::_raise (void) const
{
  TAO_RAISE (*this);
}

void ImplementationRepository::CannotActivate::_tao_encode (
    TAO_OutputCDR &cdr
    ACE_ENV_ARG_DECL
  ) const
{
  if (cdr << *this)
    {
      return;
    }

  ACE_THROW ( ::CORBA::MARSHAL ());
}

void ImplementationRepository::CannotActivate::_tao_decode (
    TAO_InputCDR &cdr
    ACE_ENV_ARG_DECL
  )
{
  if (cdr >> *this)
    {
      return;
    }

  ACE_THROW ( ::CORBA::MARSHAL ());
}



// TAO_IDL - Generated from
// be\be_visitor_exception/exception_ctor.cpp:66

ImplementationRepository::CannotActivate::CannotActivate (
    const char * _tao_reason
  )
  : ::CORBA::UserException (
        "IDL:ImplementationRepository/CannotActivate:1.0",
        "CannotActivate"
      )
{
  this->reason = ::CORBA::string_dup (_tao_reason);
}

// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr ImplementationRepository::CannotActivate::_tao_type (void) const
{
  return ::ImplementationRepository::_tc_CannotActivate;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:89

static TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const _tao_fields_ImplementationRepository_CannotActivate[] =
  {
    { "reason", &CORBA::_tc_string }

  };
static TAO::TypeCode::Struct<char const *,
                      ::CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_CannotActivate (
    ::CORBA::tk_except,
    "IDL:ImplementationRepository/CannotActivate:1.0",
    "CannotActivate",
    _tao_fields_ImplementationRepository_CannotActivate,
    1);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_CannotActivate =
    &_tao_tc_ImplementationRepository_CannotActivate;
}



// TAO_IDL - Generated from
// be\be_visitor_exception/exception_cs.cpp:63

ImplementationRepository::NotFound::NotFound (void)
  : ::CORBA::UserException (
        "IDL:ImplementationRepository/NotFound:1.0",
        "NotFound"
      )
{
}

ImplementationRepository::NotFound::~NotFound (void)
{
}

ImplementationRepository::NotFound::NotFound (const ::ImplementationRepository::NotFound &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
}

ImplementationRepository::NotFound&
ImplementationRepository::NotFound::operator= (const ::ImplementationRepository::NotFound &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  return *this;
}

void ImplementationRepository::NotFound::_tao_any_destructor (void *_tao_void_pointer)
{
  NotFound *_tao_tmp_pointer =
    static_cast<NotFound *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

ImplementationRepository::NotFound *
ImplementationRepository::NotFound::_downcast ( ::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<NotFound *> (_tao_excp);
}

const ImplementationRepository::NotFound *
ImplementationRepository::NotFound::_downcast ( ::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const NotFound *> (_tao_excp);
}

::CORBA::Exception *ImplementationRepository::NotFound::_alloc (void)
{
  ::CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::ImplementationRepository::NotFound, 0);
  return retval;
}

::CORBA::Exception *
ImplementationRepository::NotFound::_tao_duplicate (void) const
{
  ::CORBA::Exception *result = 0;
  ACE_NEW_RETURN (
      result,
      ::ImplementationRepository::NotFound (*this),
      0
    );
  return result;
}

void ImplementationRepository::NotFound::_raise (void) const
{
  TAO_RAISE (*this);
}

void ImplementationRepository::NotFound::_tao_encode (
    TAO_OutputCDR &cdr
    ACE_ENV_ARG_DECL
  ) const
{
  if (cdr << *this)
    {
      return;
    }

  ACE_THROW ( ::CORBA::MARSHAL ());
}

void ImplementationRepository::NotFound::_tao_decode (
    TAO_InputCDR &cdr
    ACE_ENV_ARG_DECL
  )
{
  if (cdr >> *this)
    {
      return;
    }

  ACE_THROW ( ::CORBA::MARSHAL ());
}

// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr ImplementationRepository::NotFound::_tao_type (void) const
{
  return ::ImplementationRepository::_tc_NotFound;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:89

static TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_ImplementationRepository_NotFound = 0;
static TAO::TypeCode::Struct<char const *,
                      ::CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_NotFound (
    ::CORBA::tk_except,
    "IDL:ImplementationRepository/NotFound:1.0",
    "NotFound",
    _tao_fields_ImplementationRepository_NotFound,
    0);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_NotFound =
    &_tao_tc_ImplementationRepository_NotFound;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:89

static TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const _tao_fields_ImplementationRepository_EnvironmentVariable[] =
  {
    { "name", &CORBA::_tc_string },
    { "value", &CORBA::_tc_string }

  };
static TAO::TypeCode::Struct<char const *,
                      ::CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_EnvironmentVariable (
    ::CORBA::tk_struct,
    "IDL:ImplementationRepository/EnvironmentVariable:1.0",
    "EnvironmentVariable",
    _tao_fields_ImplementationRepository_EnvironmentVariable,
    2);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_EnvironmentVariable =
    &_tao_tc_ImplementationRepository_EnvironmentVariable;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
ImplementationRepository::EnvironmentVariable::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  EnvironmentVariable *_tao_tmp_pointer =
    static_cast<EnvironmentVariable *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CS_)
#define _IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CS_

ImplementationRepository::EnvironmentList::EnvironmentList (void)
{}

ImplementationRepository::EnvironmentList::EnvironmentList (
    ::CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        EnvironmentVariable
      >
    (max)
{}

ImplementationRepository::EnvironmentList::EnvironmentList (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ImplementationRepository::EnvironmentVariable * buffer,
    ::CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        EnvironmentVariable
      >
    (max, length, buffer, release)
{}

ImplementationRepository::EnvironmentList::EnvironmentList (
    const EnvironmentList &seq
  )
  : TAO::unbounded_value_sequence<
        EnvironmentVariable
      >
    (seq)
{}

ImplementationRepository::EnvironmentList::~EnvironmentList (void)
{}

void ImplementationRepository::EnvironmentList::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  EnvironmentList * _tao_tmp_pointer =
    static_cast<EnvironmentList *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_ImplementationRepository_EnvironmentList_GUARD
#define _TAO_TYPECODE_ImplementationRepository_EnvironmentList_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      ImplementationRepository_EnvironmentList_0 (
        ::CORBA::tk_sequence,
        &ImplementationRepository::_tc_EnvironmentVariable,
        0U);

    ::CORBA::TypeCode_ptr const tc_ImplementationRepository_EnvironmentList_0 =
      &ImplementationRepository_EnvironmentList_0;

  }
}


#endif /* _TAO_TYPECODE_ImplementationRepository_EnvironmentList_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_EnvironmentList (
    ::CORBA::tk_alias,
    "IDL:ImplementationRepository/EnvironmentList:1.0",
    "EnvironmentList",
    &TAO::TypeCode::tc_ImplementationRepository_EnvironmentList_0);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_EnvironmentList =
    &_tao_tc_ImplementationRepository_EnvironmentList;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_ImplementationRepository_ActivationMode[] =
  {
    "NORMAL",
    "MANUAL",
    "PER_CLIENT",
    "AUTO_START"

  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_ActivationMode (
    "IDL:ImplementationRepository/ActivationMode:1.0",
    "ActivationMode",
    _tao_enumerators_ImplementationRepository_ActivationMode,
    4);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ActivationMode =
    &_tao_tc_ImplementationRepository_ActivationMode;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:89



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

static TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const _tao_fields_ImplementationRepository_StartupOptions[] =
  {
    { "command_line", &CORBA::_tc_string },
    { "environment", &ImplementationRepository::_tc_EnvironmentList },
    { "working_directory", &CORBA::_tc_string },
    { "activation", &ImplementationRepository::_tc_ActivationMode },
    { "activator", &CORBA::_tc_string },
    { "start_limit", &CORBA::_tc_long }

  };
static TAO::TypeCode::Struct<char const *,
                      ::CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_StartupOptions (
    ::CORBA::tk_struct,
    "IDL:ImplementationRepository/StartupOptions:1.0",
    "StartupOptions",
    _tao_fields_ImplementationRepository_StartupOptions,
    6);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_StartupOptions =
    &_tao_tc_ImplementationRepository_StartupOptions;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
ImplementationRepository::StartupOptions::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  StartupOptions *_tao_tmp_pointer =
    static_cast<StartupOptions *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/struct_typecode.cpp:89

static TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const _tao_fields_ImplementationRepository_ServerInformation[] =
  {
    { "server", &CORBA::_tc_string },
    { "startup", &ImplementationRepository::_tc_StartupOptions },
    { "partial_ior", &CORBA::_tc_string }

  };
static TAO::TypeCode::Struct<char const *,
                      ::CORBA::TypeCode_ptr const *,
                      TAO::TypeCode::Struct_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                      TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_ServerInformation (
    ::CORBA::tk_struct,
    "IDL:ImplementationRepository/ServerInformation:1.0",
    "ServerInformation",
    _tao_fields_ImplementationRepository_ServerInformation,
    3);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ServerInformation =
    &_tao_tc_ImplementationRepository_ServerInformation;
}



// TAO_IDL - Generated from
// be\be_visitor_structure/structure_cs.cpp:66

void
ImplementationRepository::ServerInformation::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ServerInformation *_tao_tmp_pointer =
    static_cast<ServerInformation *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CS_

ImplementationRepository::ServerInformationList::ServerInformationList (void)
{}

ImplementationRepository::ServerInformationList::ServerInformationList (
    ::CORBA::ULong max
  )
  : TAO::unbounded_value_sequence<
        ServerInformation
      >
    (max)
{}

ImplementationRepository::ServerInformationList::ServerInformationList (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ImplementationRepository::ServerInformation * buffer,
    ::CORBA::Boolean release
  )
  : TAO::unbounded_value_sequence<
        ServerInformation
      >
    (max, length, buffer, release)
{}

ImplementationRepository::ServerInformationList::ServerInformationList (
    const ServerInformationList &seq
  )
  : TAO::unbounded_value_sequence<
        ServerInformation
      >
    (seq)
{}

ImplementationRepository::ServerInformationList::~ServerInformationList (void)
{}

void ImplementationRepository::ServerInformationList::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ServerInformationList * _tao_tmp_pointer =
    static_cast<ServerInformationList *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937


#ifndef _TAO_TYPECODE_ImplementationRepository_ServerInformationList_GUARD
#define _TAO_TYPECODE_ImplementationRepository_ServerInformationList_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      ImplementationRepository_ServerInformationList_0 (
        ::CORBA::tk_sequence,
        &ImplementationRepository::_tc_ServerInformation,
        0U);

    ::CORBA::TypeCode_ptr const tc_ImplementationRepository_ServerInformationList_0 =
      &ImplementationRepository_ServerInformationList_0;

  }
}


#endif /* _TAO_TYPECODE_ImplementationRepository_ServerInformationList_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_ServerInformationList (
    ::CORBA::tk_alias,
    "IDL:ImplementationRepository/ServerInformationList:1.0",
    "ServerInformationList",
    &TAO::TypeCode::tc_ImplementationRepository_ServerInformationList_0);

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ServerInformationList =
    &_tao_tc_ImplementationRepository_ServerInformationList;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for ImplementationRepository::ServerInformationIterator.

ImplementationRepository::ServerInformationIterator_ptr
TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>::duplicate (
    ImplementationRepository::ServerInformationIterator_ptr p
  )
{
  return ImplementationRepository::ServerInformationIterator::_duplicate (p);
}

void
TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>::release (
    ImplementationRepository::ServerInformationIterator_ptr p
  )
{
  CORBA::release (p);
}

ImplementationRepository::ServerInformationIterator_ptr
TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>::nil (void)
{
  return ImplementationRepository::ServerInformationIterator::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>::marshal (
    ImplementationRepository::ServerInformationIterator_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return ::CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::Boolean ImplementationRepository::ServerInformationIterator::next_n (
    ::CORBA::ULong how_many,
    ::ImplementationRepository::ServerInformationList_out servers
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ServerInformationIterator_Proxy_Broker_ == 0)
    {
      ImplementationRepository_ServerInformationIterator_setup_collocation ();
    }

  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_how_many (how_many);
  TAO::Arg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val _tao_servers (servers);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_how_many,
      &_tao_servers
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "next_n",
      6,
      this->the_TAO_ServerInformationIterator_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::ServerInformationIterator::destroy (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_ServerInformationIterator_Proxy_Broker_ == 0)
    {
      ImplementationRepository_ServerInformationIterator_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "destroy",
      7,
      this->the_TAO_ServerInformationIterator_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

ImplementationRepository::ServerInformationIterator::ServerInformationIterator (void)
 : the_TAO_ServerInformationIterator_Proxy_Broker_ (0)
{
  this->ImplementationRepository_ServerInformationIterator_setup_collocation ();
}

void
ImplementationRepository::ServerInformationIterator::ImplementationRepository_ServerInformationIterator_setup_collocation ()
{
  if (::ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ServerInformationIterator_Proxy_Broker_ =
        ::ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer (this);
    }
}

ImplementationRepository::ServerInformationIterator::~ServerInformationIterator (void)
{}

void
ImplementationRepository::ServerInformationIterator::_tao_any_destructor (void *_tao_void_pointer)
{
  ServerInformationIterator *_tao_tmp_pointer =
    static_cast<ServerInformationIterator *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

ImplementationRepository::ServerInformationIterator_ptr
ImplementationRepository::ServerInformationIterator::_narrow (
    ::CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ServerInformationIterator>::narrow (
        _tao_objref,
        "IDL:ImplementationRepository/ServerInformationIterator:1.0",
        ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::ServerInformationIterator_ptr
ImplementationRepository::ServerInformationIterator::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ServerInformationIterator>::unchecked_narrow (
        _tao_objref,
        "IDL:ImplementationRepository/ServerInformationIterator:1.0",
        ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::ServerInformationIterator_ptr
ImplementationRepository::ServerInformationIterator::_duplicate (ServerInformationIterator_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
ImplementationRepository::ServerInformationIterator::_tao_release (ServerInformationIterator_ptr obj)
{
  CORBA::release (obj);
}

::CORBA::Boolean
ImplementationRepository::ServerInformationIterator::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:ImplementationRepository/ServerInformationIterator:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* ImplementationRepository::ServerInformationIterator::_interface_repository_id (void) const
{
  return "IDL:ImplementationRepository/ServerInformationIterator:1.0";
}

::CORBA::Boolean
ImplementationRepository::ServerInformationIterator::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_ServerInformationIterator (
    ::CORBA::tk_objref,
    "IDL:ImplementationRepository/ServerInformationIterator:1.0",
    "ServerInformationIterator");

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ServerInformationIterator =
    &_tao_tc_ImplementationRepository_ServerInformationIterator;
}



// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for ImplementationRepository::Administration.

ImplementationRepository::Administration_ptr
TAO::Objref_Traits<ImplementationRepository::Administration>::duplicate (
    ImplementationRepository::Administration_ptr p
  )
{
  return ImplementationRepository::Administration::_duplicate (p);
}

void
TAO::Objref_Traits<ImplementationRepository::Administration>::release (
    ImplementationRepository::Administration_ptr p
  )
{
  CORBA::release (p);
}

ImplementationRepository::Administration_ptr
TAO::Objref_Traits<ImplementationRepository::Administration>::nil (void)
{
  return ImplementationRepository::Administration::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ImplementationRepository::Administration>::marshal (
    ImplementationRepository::Administration_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return ::CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::activate_server (
    const char * server
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException,
    ::ImplementationRepository::NotFound,
    ::ImplementationRepository::CannotActivate
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server
    };

  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_activate_server_exceptiondata [] =
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ImplementationRepository::_tc_NotFound
#endif /* TAO_HAS_INTERCEPTORS */
      },

      {
        "IDL:ImplementationRepository/CannotActivate:1.0",
        ImplementationRepository::CannotActivate::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ImplementationRepository::_tc_CannotActivate
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "activate_server",
      15,
      this->the_TAO_Administration_Proxy_Broker_
    );

  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_activate_server_exceptiondata,
      2
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::add_or_update_server (
    const char * server,
    const ::ImplementationRepository::StartupOptions & options
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  TAO::Arg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val _tao_options (options);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_options
    };

  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_add_or_update_server_exceptiondata [] =
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ImplementationRepository::_tc_NotFound
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "add_or_update_server",
      20,
      this->the_TAO_Administration_Proxy_Broker_
    );

  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_add_or_update_server_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::remove_server (
    const char * server
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server
    };

  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_remove_server_exceptiondata [] =
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ImplementationRepository::_tc_NotFound
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "remove_server",
      13,
      this->the_TAO_Administration_Proxy_Broker_
    );

  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_remove_server_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::shutdown_server (
    const char * server
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server
    };

  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_shutdown_server_exceptiondata [] =
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ImplementationRepository::_tc_NotFound
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "shutdown_server",
      15,
      this->the_TAO_Administration_Proxy_Broker_
    );

  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_shutdown_server_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::server_is_running (
    const char * server,
    const char * partial_ior,
    ::ImplementationRepository::ServerObject_ptr server_object
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_partial_ior (partial_ior);
  TAO::Arg_Traits< ::ImplementationRepository::ServerObject>::in_arg_val _tao_server_object (server_object);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_partial_ior,
      &_tao_server_object
    };

  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_server_is_running_exceptiondata [] =
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ImplementationRepository::_tc_NotFound
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "server_is_running",
      17,
      this->the_TAO_Administration_Proxy_Broker_
    );

  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_server_is_running_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::server_is_shutting_down (
    const char * server
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server
    };

  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_server_is_shutting_down_exceptiondata [] =
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , ImplementationRepository::_tc_NotFound
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "server_is_shutting_down",
      23,
      this->the_TAO_Administration_Proxy_Broker_
    );

  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_server_is_shutting_down_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::find (
    const char * server,
    ::ImplementationRepository::ServerInformation_out info
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  TAO::Arg_Traits< ::ImplementationRepository::ServerInformation>::out_arg_val _tao_info (info);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_info
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "find",
      4,
      this->the_TAO_Administration_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::list (
    ::CORBA::ULong how_many,
    ::ImplementationRepository::ServerInformationList_out server_list,
    ::ImplementationRepository::ServerInformationIterator_out server_iterator
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_how_many (how_many);
  TAO::Arg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val _tao_server_list (server_list);
  TAO::Arg_Traits< ::ImplementationRepository::ServerInformationIterator>::out_arg_val _tao_server_iterator (server_iterator);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_how_many,
      &_tao_server_list,
      &_tao_server_iterator
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "list",
      4,
      this->the_TAO_Administration_Proxy_Broker_
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::shutdown (
    ::CORBA::Boolean activators,
    ::CORBA::Boolean servers
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    ::CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_activators (activators);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_servers (servers);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_activators,
      &_tao_servers
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "shutdown",
      8,
      this->the_TAO_Administration_Proxy_Broker_,
      TAO::TAO_ONEWAY_INVOCATION
    );

  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

ImplementationRepository::Administration::Administration (void)
 : the_TAO_Administration_Proxy_Broker_ (0)
{
  this->ImplementationRepository_Administration_setup_collocation ();
}

void
ImplementationRepository::Administration::ImplementationRepository_Administration_setup_collocation ()
{
  if (::ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_Administration_Proxy_Broker_ =
        ::ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer (this);
    }
}

ImplementationRepository::Administration::~Administration (void)
{}

void
ImplementationRepository::Administration::_tao_any_destructor (void *_tao_void_pointer)
{
  Administration *_tao_tmp_pointer =
    static_cast<Administration *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

ImplementationRepository::Administration_ptr
ImplementationRepository::Administration::_narrow (
    ::CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Administration>::narrow (
        _tao_objref,
        "IDL:ImplementationRepository/Administration:1.0",
        ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::Administration_ptr
ImplementationRepository::Administration::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Administration>::unchecked_narrow (
        _tao_objref,
        "IDL:ImplementationRepository/Administration:1.0",
        ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::Administration_ptr
ImplementationRepository::Administration::_duplicate (Administration_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void
ImplementationRepository::Administration::_tao_release (Administration_ptr obj)
{
  CORBA::release (obj);
}

::CORBA::Boolean
ImplementationRepository::Administration::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:ImplementationRepository/Administration:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* ImplementationRepository::Administration::_interface_repository_id (void) const
{
  return "IDL:ImplementationRepository/Administration:1.0";
}

::CORBA::Boolean
ImplementationRepository::Administration::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_ImplementationRepository_Administration (
    ::CORBA::tk_objref,
    "IDL:ImplementationRepository/Administration:1.0",
    "Administration");

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_Administration =
    &_tao_tc_ImplementationRepository_Administration;
}



// TAO_IDL - Generated from
// be\be_visitor_exception/any_op_cs.cpp:50

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::demarshal_value (
      TAO_InputCDR & cdr
    )
  {
    ::CORBA::String_var id;

    if (!(cdr >> id.out ()))
      {
        return false;
      }

    ACE_TRY_NEW_ENV
      {
        this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
        ACE_TRY_CHECK;
      }
    ACE_CATCHANY
      {
        return false;
      }
    ACE_ENDTRY;

    return true;
  }
}

// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ImplementationRepository::AlreadyRegistered &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::insert_copy (
      _tao_any,
      ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
      ImplementationRepository::_tc_AlreadyRegistered,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::AlreadyRegistered *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::insert (
      _tao_any,
      ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
      ImplementationRepository::_tc_AlreadyRegistered,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::AlreadyRegistered *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::AlreadyRegistered *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ImplementationRepository::AlreadyRegistered *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::extract (
        _tao_any,
        ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
        ImplementationRepository::_tc_AlreadyRegistered,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_exception/any_op_cs.cpp:50

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::demarshal_value (
      TAO_InputCDR & cdr
    )
  {
    ::CORBA::String_var id;

    if (!(cdr >> id.out ()))
      {
        return false;
      }

    ACE_TRY_NEW_ENV
      {
        this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
        ACE_TRY_CHECK;
      }
    ACE_CATCHANY
      {
        return false;
      }
    ACE_ENDTRY;

    return true;
  }
}

// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ImplementationRepository::CannotActivate &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::insert_copy (
      _tao_any,
      ImplementationRepository::CannotActivate::_tao_any_destructor,
      ImplementationRepository::_tc_CannotActivate,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::CannotActivate *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::insert (
      _tao_any,
      ImplementationRepository::CannotActivate::_tao_any_destructor,
      ImplementationRepository::_tc_CannotActivate,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::CannotActivate *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::CannotActivate *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ImplementationRepository::CannotActivate *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::extract (
        _tao_any,
        ImplementationRepository::CannotActivate::_tao_any_destructor,
        ImplementationRepository::_tc_CannotActivate,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_exception/any_op_cs.cpp:50

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Dual_Impl_T<ImplementationRepository::NotFound>::demarshal_value (
      TAO_InputCDR & cdr
    )
  {
    ::CORBA::String_var id;

    if (!(cdr >> id.out ()))
      {
        return false;
      }

    ACE_TRY_NEW_ENV
      {
        this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
        ACE_TRY_CHECK;
      }
    ACE_CATCHANY
      {
        return false;
      }
    ACE_ENDTRY;

    return true;
  }
}

// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ImplementationRepository::NotFound &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::insert_copy (
      _tao_any,
      ImplementationRepository::NotFound::_tao_any_destructor,
      ImplementationRepository::_tc_NotFound,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::NotFound *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::insert (
      _tao_any,
      ImplementationRepository::NotFound::_tao_any_destructor,
      ImplementationRepository::_tc_NotFound,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::NotFound *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::NotFound *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ImplementationRepository::NotFound *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::extract (
        _tao_any,
        ImplementationRepository::NotFound::_tao_any_destructor,
        ImplementationRepository::_tc_NotFound,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentVariable &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::insert_copy (
      _tao_any,
      ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentVariable,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentVariable *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::insert (
      _tao_any,
      ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentVariable,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentVariable *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::EnvironmentVariable *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentVariable *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::extract (
        _tao_any,
        ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
        ImplementationRepository::_tc_EnvironmentVariable,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::insert_copy (
      _tao_any,
      ImplementationRepository::EnvironmentList::_tao_any_destructor,
      TAO::TypeCode::tc_ImplementationRepository_EnvironmentList_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::insert (
      _tao_any,
      ImplementationRepository::EnvironmentList::_tao_any_destructor,
      TAO::TypeCode::tc_ImplementationRepository_EnvironmentList_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentList *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::EnvironmentList *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::extract (
        _tao_any,
        ImplementationRepository::EnvironmentList::_tao_any_destructor,
        TAO::TypeCode::tc_ImplementationRepository_EnvironmentList_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::ActivationMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<ImplementationRepository::ActivationMode>::insert (
      _tao_any,
      ImplementationRepository::_tc_ActivationMode,
      _tao_elem
    );
}

::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::ActivationMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<ImplementationRepository::ActivationMode>::extract (
        _tao_any,
        ImplementationRepository::_tc_ActivationMode,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ImplementationRepository::StartupOptions &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::insert_copy (
      _tao_any,
      ImplementationRepository::StartupOptions::_tao_any_destructor,
      ImplementationRepository::_tc_StartupOptions,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::StartupOptions *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::insert (
      _tao_any,
      ImplementationRepository::StartupOptions::_tao_any_destructor,
      ImplementationRepository::_tc_StartupOptions,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::StartupOptions *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::StartupOptions *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ImplementationRepository::StartupOptions *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::extract (
        _tao_any,
        ImplementationRepository::StartupOptions::_tao_any_destructor,
        ImplementationRepository::_tc_StartupOptions,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformation &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::insert_copy (
      _tao_any,
      ImplementationRepository::ServerInformation::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformation,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformation *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::insert (
      _tao_any,
      ImplementationRepository::ServerInformation::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformation,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformation *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::ServerInformation *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformation *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::extract (
        _tao_any,
        ImplementationRepository::ServerInformation::_tao_any_destructor,
        ImplementationRepository::_tc_ServerInformation,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformationList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::insert_copy (
      _tao_any,
      ImplementationRepository::ServerInformationList::_tao_any_destructor,
      TAO::TypeCode::tc_ImplementationRepository_ServerInformationList_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::insert (
      _tao_any,
      ImplementationRepository::ServerInformationList::_tao_any_destructor,
      TAO::TypeCode::tc_ImplementationRepository_ServerInformationList_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationList *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::ServerInformationList *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformationList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::extract (
        _tao_any,
        ImplementationRepository::ServerInformationList::_tao_any_destructor,
        TAO::TypeCode::tc_ImplementationRepository_ServerInformationList_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:51

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ImplementationRepository::ServerInformationIterator>::to_object (
      ::CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{


  // Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ServerInformationIterator_ptr _tao_elem
    )
  {
    ServerInformationIterator_ptr _tao_objptr =
      ServerInformationIterator::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  // Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ServerInformationIterator_ptr *_tao_elem
    )
  {
    TAO::Any_Impl_T<ServerInformationIterator>::insert (
        _tao_any,
        ServerInformationIterator::_tao_any_destructor,
        _tc_ServerInformationIterator,
        *_tao_elem
      );
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      ServerInformationIterator_ptr &_tao_elem
    )
  {
    return
      TAO::Any_Impl_T<ServerInformationIterator>::extract (
          _tao_any,
          ServerInformationIterator::_tao_any_destructor,
          _tc_ServerInformationIterator,
          _tao_elem
        );
  }
}

#else


// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr _tao_elem
  )
{
  ImplementationRepository::ServerInformationIterator_ptr _tao_objptr =
    ImplementationRepository::ServerInformationIterator::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<ImplementationRepository::ServerInformationIterator>::insert (
      _tao_any,
      ImplementationRepository::ServerInformationIterator::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformationIterator,
      *_tao_elem
    );
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<ImplementationRepository::ServerInformationIterator>::extract (
        _tao_any,
        ImplementationRepository::ServerInformationIterator::_tao_any_destructor,
        ImplementationRepository::_tc_ServerInformationIterator,
        _tao_elem
      );
}

#endif

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:51

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ImplementationRepository::Administration>::to_object (
      ::CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{


  // Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      Administration_ptr _tao_elem
    )
  {
    Administration_ptr _tao_objptr =
      Administration::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  // Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      Administration_ptr *_tao_elem
    )
  {
    TAO::Any_Impl_T<Administration>::insert (
        _tao_any,
        Administration::_tao_any_destructor,
        _tc_Administration,
        *_tao_elem
      );
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      Administration_ptr &_tao_elem
    )
  {
    return
      TAO::Any_Impl_T<Administration>::extract (
          _tao_any,
          Administration::_tao_any_destructor,
          _tc_Administration,
          _tao_elem
        );
  }
}

#else


// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr _tao_elem
  )
{
  ImplementationRepository::Administration_ptr _tao_objptr =
    ImplementationRepository::Administration::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<ImplementationRepository::Administration>::insert (
      _tao_any,
      ImplementationRepository::Administration::_tao_any_destructor,
      ImplementationRepository::_tc_Administration,
      *_tao_elem
    );
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<ImplementationRepository::Administration>::extract (
        _tao_any,
        ImplementationRepository::Administration::_tao_any_destructor,
        ImplementationRepository::_tc_Administration,
        _tao_elem
      );
}

#endif

// TAO_IDL - Generated from
// be\be_visitor_exception/cdr_op_cs.cpp:60

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::AlreadyRegistered &_tao_aggregate
  )
{
  // Marshal the repository ID.
  return (strm << _tao_aggregate._rep_id ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &,
    ImplementationRepository::AlreadyRegistered&
  )
{
  return true;
}

// TAO_IDL - Generated from
// be\be_visitor_exception/cdr_op_cs.cpp:60

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::CannotActivate &_tao_aggregate
  )
{
  // First marshal the repository ID.
  if (strm << _tao_aggregate._rep_id ())
    {
      // Now marshal the members (if any).
      return (
        (strm << _tao_aggregate.reason.in ())
       );
    }
  else
    {
      return false;
    }
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::CannotActivate &_tao_aggregate
  )
{
  // Demarshal the members.
  return (
    (strm >> _tao_aggregate.reason.out ())
  );
}

// TAO_IDL - Generated from
// be\be_visitor_exception/cdr_op_cs.cpp:60

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::NotFound &_tao_aggregate
  )
{
  // Marshal the repository ID.
  return (strm << _tao_aggregate._rep_id ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &,
    ImplementationRepository::NotFound&
  )
{
  return true;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::EnvironmentVariable &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.value.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::EnvironmentVariable &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.value.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_ImplementationRepository_EnvironmentList_CPP_
#define _TAO_CDR_OP_ImplementationRepository_EnvironmentList_CPP_

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::EnvironmentList &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::EnvironmentList &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_ImplementationRepository_EnvironmentList_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_cs.cpp:51

::CORBA::Boolean operator<< (TAO_OutputCDR & strm, ImplementationRepository::ActivationMode _tao_enumerator)
{
  return strm << static_cast< ::CORBA::ULong> (_tao_enumerator);
}

::CORBA::Boolean operator>> (TAO_InputCDR & strm, ImplementationRepository::ActivationMode & _tao_enumerator)
{
  ::CORBA::ULong _tao_temp = 0;
  ::CORBA::Boolean const _tao_success = strm >> _tao_temp;

  if (_tao_success)
    {
      _tao_enumerator = static_cast<ImplementationRepository::ActivationMode> (_tao_temp);
    }

  return _tao_success;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::StartupOptions &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.command_line.in ()) &&
    (strm << _tao_aggregate.environment) &&
    (strm << _tao_aggregate.working_directory.in ()) &&
    (strm << _tao_aggregate.activation) &&
    (strm << _tao_aggregate.activator.in ()) &&
    (strm << _tao_aggregate.start_limit);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::StartupOptions &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.command_line.out ()) &&
    (strm >> _tao_aggregate.environment) &&
    (strm >> _tao_aggregate.working_directory.out ()) &&
    (strm >> _tao_aggregate.activation) &&
    (strm >> _tao_aggregate.activator.out ()) &&
    (strm >> _tao_aggregate.start_limit);
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerInformation &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.server.in ()) &&
    (strm << _tao_aggregate.startup) &&
    (strm << _tao_aggregate.partial_ior.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerInformation &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.server.out ()) &&
    (strm >> _tao_aggregate.startup) &&
    (strm >> _tao_aggregate.partial_ior.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_ImplementationRepository_ServerInformationList_CPP_
#define _TAO_CDR_OP_ImplementationRepository_ServerInformationList_CPP_

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerInformationList &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerInformationList &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}

#endif /* _TAO_CDR_OP_ImplementationRepository_ServerInformationList_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerInformationIterator_ptr _tao_objref
  )
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerInformationIterator_ptr &_tao_objref
  )
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::ImplementationRepository::ServerInformationIterator RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::Administration_ptr _tao_objref
  )
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::Administration_ptr &_tao_objref
  )
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::ImplementationRepository::Administration RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer
      );

  return 1;
}

TAO_END_VERSIONED_NAMESPACE_DECL
