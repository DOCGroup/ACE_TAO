// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

#include "IFR_BasicC.h"
#include "tao/Typecode.h"
#include "tao/Any_Impl_T.h"
#include "tao/Any_Dual_Impl_T.h"
#include "tao/Any_Basic_Impl_T.h"

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_PrimitiveKind[] =
{
  TAO_ENCAP_BYTE_ORDER, // byte order
  36,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5072),
  ACE_NTOHL (0x696d6974),
  ACE_NTOHL (0x6976654b),
  ACE_NTOHL (0x696e643a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/PrimitiveKind:1.0
  14,
  ACE_NTOHL (0x5072696d),
  ACE_NTOHL (0x69746976),
  ACE_NTOHL (0x654b696e),
  ACE_NTOHL (0x64000000),  // name = PrimitiveKind
  22, // member count
  8,
  ACE_NTOHL (0x706b5f6e),
  ACE_NTOHL (0x756c6c00),  // name = pk_null
  8,
  ACE_NTOHL (0x706b5f76),
  ACE_NTOHL (0x6f696400),  // name = pk_void
  9,
  ACE_NTOHL (0x706b5f73),
  ACE_NTOHL (0x686f7274),
  ACE_NTOHL (0x0),  // name = pk_short
  8,
  ACE_NTOHL (0x706b5f6c),
  ACE_NTOHL (0x6f6e6700),  // name = pk_long
  10,
  ACE_NTOHL (0x706b5f75),
  ACE_NTOHL (0x73686f72),
  ACE_NTOHL (0x74000000),  // name = pk_ushort
  9,
  ACE_NTOHL (0x706b5f75),
  ACE_NTOHL (0x6c6f6e67),
  ACE_NTOHL (0x0),  // name = pk_ulong
  9,
  ACE_NTOHL (0x706b5f66),
  ACE_NTOHL (0x6c6f6174),
  ACE_NTOHL (0x0),  // name = pk_float
  10,
  ACE_NTOHL (0x706b5f64),
  ACE_NTOHL (0x6f75626c),
  ACE_NTOHL (0x65000000),  // name = pk_double
  11,
  ACE_NTOHL (0x706b5f62),
  ACE_NTOHL (0x6f6f6c65),
  ACE_NTOHL (0x616e0000),  // name = pk_boolean
  8,
  ACE_NTOHL (0x706b5f63),
  ACE_NTOHL (0x68617200),  // name = pk_char
  9,
  ACE_NTOHL (0x706b5f6f),
  ACE_NTOHL (0x63746574),
  ACE_NTOHL (0x0),  // name = pk_octet
  7,
  ACE_NTOHL (0x706b5f61),
  ACE_NTOHL (0x6e790000),  // name = pk_any
  12,
  ACE_NTOHL (0x706b5f54),
  ACE_NTOHL (0x79706543),
  ACE_NTOHL (0x6f646500),  // name = pk_TypeCode
  13,
  ACE_NTOHL (0x706b5f50),
  ACE_NTOHL (0x72696e63),
  ACE_NTOHL (0x6970616c),
  ACE_NTOHL (0x0),  // name = pk_Principal
  10,
  ACE_NTOHL (0x706b5f73),
  ACE_NTOHL (0x7472696e),
  ACE_NTOHL (0x67000000),  // name = pk_string
  10,
  ACE_NTOHL (0x706b5f6f),
  ACE_NTOHL (0x626a7265),
  ACE_NTOHL (0x66000000),  // name = pk_objref
  12,
  ACE_NTOHL (0x706b5f6c),
  ACE_NTOHL (0x6f6e676c),
  ACE_NTOHL (0x6f6e6700),  // name = pk_longlong
  13,
  ACE_NTOHL (0x706b5f75),
  ACE_NTOHL (0x6c6f6e67),
  ACE_NTOHL (0x6c6f6e67),
  ACE_NTOHL (0x0),  // name = pk_ulonglong
  14,
  ACE_NTOHL (0x706b5f6c),
  ACE_NTOHL (0x6f6e6764),
  ACE_NTOHL (0x6f75626c),
  ACE_NTOHL (0x65000000),  // name = pk_longdouble
  9,
  ACE_NTOHL (0x706b5f77),
  ACE_NTOHL (0x63686172),
  ACE_NTOHL (0x0),  // name = pk_wchar
  11,
  ACE_NTOHL (0x706b5f77),
  ACE_NTOHL (0x73747269),
  ACE_NTOHL (0x6e670000),  // name = pk_wstring
  14,
  ACE_NTOHL (0x706b5f76),
  ACE_NTOHL (0x616c7565),
  ACE_NTOHL (0x5f626173),
  ACE_NTOHL (0x65000000),  // name = pk_value_base
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_PrimitiveKind (
    CORBA::tk_enum,
    sizeof (_oc_CORBA_PrimitiveKind),
    (char *) &_oc_CORBA_PrimitiveKind,
    0,
    sizeof (CORBA::PrimitiveKind)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_PrimitiveKind =
    &_tc_TAO_tc_CORBA_PrimitiveKind;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_Repository[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  33,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5265),
  ACE_NTOHL (0x706f7369),
  ACE_NTOHL (0x746f7279),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Repository:1.0
    11,
  ACE_NTOHL (0x5265706f),
  ACE_NTOHL (0x7369746f),
  ACE_NTOHL (0x72790000),  // name = Repository
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_Repository (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_Repository),
    (char *) &_oc_CORBA_Repository,
    0,
    sizeof (CORBA::Repository)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_Repository =
    &_tc_TAO_tc_CORBA_Repository;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ModuleDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  32,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4d6f),
  ACE_NTOHL (0x64756c65),
  ACE_NTOHL (0x4465663a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ModuleDef:1.0
    10,
  ACE_NTOHL (0x4d6f6475),
  ACE_NTOHL (0x6c654465),
  ACE_NTOHL (0x66000000),  // name = ModuleDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_ModuleDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_ModuleDef),
    (char *) &_oc_CORBA_ModuleDef,
    0,
    sizeof (CORBA::ModuleDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ModuleDef =
    &_tc_TAO_tc_CORBA_ModuleDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ModuleDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4d6f),
  ACE_NTOHL (0x64756c65),
  ACE_NTOHL (0x44657363),
  ACE_NTOHL (0x72697074),
  ACE_NTOHL (0x696f6e3a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ModuleDescription:1.0
    18,
  ACE_NTOHL (0x4d6f6475),
  ACE_NTOHL (0x6c654465),
  ACE_NTOHL (0x73637269),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e000000),  // name = ModuleDescription
  4, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  3,
  ACE_NTOHL (0x69640000),  // name = id
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x64656669),
  ACE_NTOHL (0x6e65645f),
  ACE_NTOHL (0x696e0000),  // name = defined_in
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  8,
  ACE_NTOHL (0x76657273),
  ACE_NTOHL (0x696f6e00),  // name = version
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    34,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5665),
    ACE_NTOHL (0x7273696f),
    ACE_NTOHL (0x6e537065),
    ACE_NTOHL (0x633a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
        12,
    ACE_NTOHL (0x56657273),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x70656300),  // name = VersionSpec
        CORBA::tk_string,
    0U, // string length

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ModuleDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_ModuleDescription),
    (char *) &_oc_CORBA_ModuleDescription,
    0,
    sizeof (CORBA::ModuleDescription)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ModuleDescription =
    &_tc_TAO_tc_CORBA_ModuleDescription;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ConstantDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  34,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f436f),
  ACE_NTOHL (0x6e737461),
  ACE_NTOHL (0x6e744465),
  ACE_NTOHL (0x663a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ConstantDef:1.0
    12,
  ACE_NTOHL (0x436f6e73),
  ACE_NTOHL (0x74616e74),
  ACE_NTOHL (0x44656600),  // name = ConstantDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_ConstantDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_ConstantDef),
    (char *) &_oc_CORBA_ConstantDef,
    0,
    sizeof (CORBA::ConstantDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ConstantDef =
    &_tc_TAO_tc_CORBA_ConstantDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ConstantDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  42,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f436f),
  ACE_NTOHL (0x6e737461),
  ACE_NTOHL (0x6e744465),
  ACE_NTOHL (0x73637269),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e3a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ConstantDescription:1.0
    20,
  ACE_NTOHL (0x436f6e73),
  ACE_NTOHL (0x74616e74),
  ACE_NTOHL (0x44657363),
  ACE_NTOHL (0x72697074),
  ACE_NTOHL (0x696f6e00),  // name = ConstantDescription
  6, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  3,
  ACE_NTOHL (0x69640000),  // name = id
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x64656669),
  ACE_NTOHL (0x6e65645f),
  ACE_NTOHL (0x696e0000),  // name = defined_in
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  8,
  ACE_NTOHL (0x76657273),
  ACE_NTOHL (0x696f6e00),  // name = version
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    34,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5665),
    ACE_NTOHL (0x7273696f),
    ACE_NTOHL (0x6e537065),
    ACE_NTOHL (0x633a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
        12,
    ACE_NTOHL (0x56657273),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x70656300),  // name = VersionSpec
        CORBA::tk_string,
    0U, // string length

  5,
  ACE_NTOHL (0x74797065),
  ACE_NTOHL (0x0),  // name = type
    CORBA::tk_TypeCode,

  6,
  ACE_NTOHL (0x76616c75),
  ACE_NTOHL (0x65000000),  // name = value
    CORBA::tk_any,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ConstantDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_ConstantDescription),
    (char *) &_oc_CORBA_ConstantDescription,
    0,
    sizeof (CORBA::ConstantDescription)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ConstantDescription =
    &_tc_TAO_tc_CORBA_ConstantDescription;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_StructDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  32,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5374),
  ACE_NTOHL (0x72756374),
  ACE_NTOHL (0x4465663a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/StructDef:1.0
    10,
  ACE_NTOHL (0x53747275),
  ACE_NTOHL (0x63744465),
  ACE_NTOHL (0x66000000),  // name = StructDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_StructDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_StructDef),
    (char *) &_oc_CORBA_StructDef,
    0,
    sizeof (CORBA::StructDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_StructDef =
    &_tc_TAO_tc_CORBA_StructDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_UnionDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  31,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f556e),
  ACE_NTOHL (0x696f6e44),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/UnionDef:1.0
    9,
  ACE_NTOHL (0x556e696f),
  ACE_NTOHL (0x6e446566),
  ACE_NTOHL (0x0),  // name = UnionDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_UnionDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_UnionDef),
    (char *) &_oc_CORBA_UnionDef,
    0,
    sizeof (CORBA::UnionDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_UnionDef =
    &_tc_TAO_tc_CORBA_UnionDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_EnumDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  30,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f456e),
  ACE_NTOHL (0x756d4465),
  ACE_NTOHL (0x663a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/EnumDef:1.0
    8,
  ACE_NTOHL (0x456e756d),
  ACE_NTOHL (0x44656600),  // name = EnumDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_EnumDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_EnumDef),
    (char *) &_oc_CORBA_EnumDef,
    0,
    sizeof (CORBA::EnumDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_EnumDef =
    &_tc_TAO_tc_CORBA_EnumDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_AliasDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  31,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f416c),
  ACE_NTOHL (0x69617344),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/AliasDef:1.0
    9,
  ACE_NTOHL (0x416c6961),
  ACE_NTOHL (0x73446566),
  ACE_NTOHL (0x0),  // name = AliasDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_AliasDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_AliasDef),
    (char *) &_oc_CORBA_AliasDef,
    0,
    sizeof (CORBA::AliasDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_AliasDef =
    &_tc_TAO_tc_CORBA_AliasDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_NativeDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  32,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4e61),
  ACE_NTOHL (0x74697665),
  ACE_NTOHL (0x4465663a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/NativeDef:1.0
    10,
  ACE_NTOHL (0x4e617469),
  ACE_NTOHL (0x76654465),
  ACE_NTOHL (0x66000000),  // name = NativeDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_NativeDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_NativeDef),
    (char *) &_oc_CORBA_NativeDef,
    0,
    sizeof (CORBA::NativeDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_NativeDef =
    &_tc_TAO_tc_CORBA_NativeDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_PrimitiveDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5072),
  ACE_NTOHL (0x696d6974),
  ACE_NTOHL (0x69766544),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/PrimitiveDef:1.0
    13,
  ACE_NTOHL (0x5072696d),
  ACE_NTOHL (0x69746976),
  ACE_NTOHL (0x65446566),
  ACE_NTOHL (0x0),  // name = PrimitiveDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_PrimitiveDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_PrimitiveDef),
    (char *) &_oc_CORBA_PrimitiveDef,
    0,
    sizeof (CORBA::PrimitiveDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_PrimitiveDef =
    &_tc_TAO_tc_CORBA_PrimitiveDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_StringDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  32,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5374),
  ACE_NTOHL (0x72696e67),
  ACE_NTOHL (0x4465663a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/StringDef:1.0
    10,
  ACE_NTOHL (0x53747269),
  ACE_NTOHL (0x6e674465),
  ACE_NTOHL (0x66000000),  // name = StringDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_StringDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_StringDef),
    (char *) &_oc_CORBA_StringDef,
    0,
    sizeof (CORBA::StringDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_StringDef =
    &_tc_TAO_tc_CORBA_StringDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_WstringDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  33,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5773),
  ACE_NTOHL (0x7472696e),
  ACE_NTOHL (0x67446566),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/WstringDef:1.0
    11,
  ACE_NTOHL (0x57737472),
  ACE_NTOHL (0x696e6744),
  ACE_NTOHL (0x65660000),  // name = WstringDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_WstringDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_WstringDef),
    (char *) &_oc_CORBA_WstringDef,
    0,
    sizeof (CORBA::WstringDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_WstringDef =
    &_tc_TAO_tc_CORBA_WstringDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_SequenceDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  34,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5365),
  ACE_NTOHL (0x7175656e),
  ACE_NTOHL (0x63654465),
  ACE_NTOHL (0x663a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/SequenceDef:1.0
    12,
  ACE_NTOHL (0x53657175),
  ACE_NTOHL (0x656e6365),
  ACE_NTOHL (0x44656600),  // name = SequenceDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_SequenceDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_SequenceDef),
    (char *) &_oc_CORBA_SequenceDef,
    0,
    sizeof (CORBA::SequenceDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_SequenceDef =
    &_tc_TAO_tc_CORBA_SequenceDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ArrayDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  31,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4172),
  ACE_NTOHL (0x72617944),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ArrayDef:1.0
    9,
  ACE_NTOHL (0x41727261),
  ACE_NTOHL (0x79446566),
  ACE_NTOHL (0x0),  // name = ArrayDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_ArrayDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_ArrayDef),
    (char *) &_oc_CORBA_ArrayDef,
    0,
    sizeof (CORBA::ArrayDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ArrayDef =
    &_tc_TAO_tc_CORBA_ArrayDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ExceptionDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4578),
  ACE_NTOHL (0x63657074),
  ACE_NTOHL (0x696f6e44),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDef:1.0
    13,
  ACE_NTOHL (0x45786365),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e446566),
  ACE_NTOHL (0x0),  // name = ExceptionDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_ExceptionDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_ExceptionDef),
    (char *) &_oc_CORBA_ExceptionDef,
    0,
    sizeof (CORBA::ExceptionDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ExceptionDef =
    &_tc_TAO_tc_CORBA_ExceptionDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ExceptionDefSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4578),
  ACE_NTOHL (0x63657074),
  ACE_NTOHL (0x696f6e44),
  ACE_NTOHL (0x65665365),
  ACE_NTOHL (0x713a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ExceptionDefSeq:1.0
    16,
  ACE_NTOHL (0x45786365),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e446566),
  ACE_NTOHL (0x53657100),  // name = ExceptionDefSeq
    CORBA::tk_sequence, // typecode kind
  80, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_objref, // typecode kind
    64, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      35,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x434f5242),
      ACE_NTOHL (0x412f4578),
      ACE_NTOHL (0x63657074),
      ACE_NTOHL (0x696f6e44),
      ACE_NTOHL (0x65663a31),
      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDef:1.0
            13,
      ACE_NTOHL (0x45786365),
      ACE_NTOHL (0x7074696f),
      ACE_NTOHL (0x6e446566),
      ACE_NTOHL (0x0),  // name = ExceptionDef

    0U,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ExceptionDefSeq (
    CORBA::tk_alias,
    sizeof (_oc_CORBA_ExceptionDefSeq),
    (char *) &_oc_CORBA_ExceptionDefSeq,
    0,
    sizeof (CORBA::ExceptionDefSeq)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ExceptionDefSeq =
    &_tc_TAO_tc_CORBA_ExceptionDefSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_AttributeMode[] =
{
  TAO_ENCAP_BYTE_ORDER, // byte order
  36,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4174),
  ACE_NTOHL (0x74726962),
  ACE_NTOHL (0x7574654d),
  ACE_NTOHL (0x6f64653a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
  14,
  ACE_NTOHL (0x41747472),
  ACE_NTOHL (0x69627574),
  ACE_NTOHL (0x654d6f64),
  ACE_NTOHL (0x65000000),  // name = AttributeMode
  2, // member count
  12,
  ACE_NTOHL (0x41545452),
  ACE_NTOHL (0x5f4e4f52),
  ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
  14,
  ACE_NTOHL (0x41545452),
  ACE_NTOHL (0x5f524541),
  ACE_NTOHL (0x444f4e4c),
  ACE_NTOHL (0x59000000),  // name = ATTR_READONLY
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_AttributeMode (
    CORBA::tk_enum,
    sizeof (_oc_CORBA_AttributeMode),
    (char *) &_oc_CORBA_AttributeMode,
    0,
    sizeof (CORBA::AttributeMode)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_AttributeMode =
    &_tc_TAO_tc_CORBA_AttributeMode;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_AttributeDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4174),
  ACE_NTOHL (0x74726962),
  ACE_NTOHL (0x75746544),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/AttributeDef:1.0
    13,
  ACE_NTOHL (0x41747472),
  ACE_NTOHL (0x69627574),
  ACE_NTOHL (0x65446566),
  ACE_NTOHL (0x0),  // name = AttributeDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_AttributeDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_AttributeDef),
    (char *) &_oc_CORBA_AttributeDef,
    0,
    sizeof (CORBA::AttributeDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_AttributeDef =
    &_tc_TAO_tc_CORBA_AttributeDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_AttributeDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4174),
  ACE_NTOHL (0x74726962),
  ACE_NTOHL (0x75746544),
  ACE_NTOHL (0x65736372),
  ACE_NTOHL (0x69707469),
  ACE_NTOHL (0x6f6e3a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/AttributeDescription:1.0
    21,
  ACE_NTOHL (0x41747472),
  ACE_NTOHL (0x69627574),
  ACE_NTOHL (0x65446573),
  ACE_NTOHL (0x63726970),
  ACE_NTOHL (0x74696f6e),
  ACE_NTOHL (0x0),  // name = AttributeDescription
  6, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  3,
  ACE_NTOHL (0x69640000),  // name = id
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x64656669),
  ACE_NTOHL (0x6e65645f),
  ACE_NTOHL (0x696e0000),  // name = defined_in
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  8,
  ACE_NTOHL (0x76657273),
  ACE_NTOHL (0x696f6e00),  // name = version
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    34,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5665),
    ACE_NTOHL (0x7273696f),
    ACE_NTOHL (0x6e537065),
    ACE_NTOHL (0x633a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
        12,
    ACE_NTOHL (0x56657273),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x70656300),  // name = VersionSpec
        CORBA::tk_string,
    0U, // string length

  5,
  ACE_NTOHL (0x74797065),
  ACE_NTOHL (0x0),  // name = type
    CORBA::tk_TypeCode,

  5,
  ACE_NTOHL (0x6d6f6465),
  ACE_NTOHL (0x0),  // name = mode
    CORBA::tk_enum, // typecode kind
  104, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
    36,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4174),
    ACE_NTOHL (0x74726962),
    ACE_NTOHL (0x7574654d),
    ACE_NTOHL (0x6f64653a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
    14,
    ACE_NTOHL (0x41747472),
    ACE_NTOHL (0x69627574),
    ACE_NTOHL (0x654d6f64),
    ACE_NTOHL (0x65000000),  // name = AttributeMode
    2, // member count
    12,
    ACE_NTOHL (0x41545452),
    ACE_NTOHL (0x5f4e4f52),
    ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
    14,
    ACE_NTOHL (0x41545452),
    ACE_NTOHL (0x5f524541),
    ACE_NTOHL (0x444f4e4c),
    ACE_NTOHL (0x59000000),  // name = ATTR_READONLY

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_AttributeDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_AttributeDescription),
    (char *) &_oc_CORBA_AttributeDescription,
    0,
    sizeof (CORBA::AttributeDescription)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_AttributeDescription =
    &_tc_TAO_tc_CORBA_AttributeDescription;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ExtAttributeDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  46,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4578),
  ACE_NTOHL (0x74417474),
  ACE_NTOHL (0x72696275),
  ACE_NTOHL (0x74654465),
  ACE_NTOHL (0x73637269),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e3a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ExtAttributeDescription:1.0
    24,
  ACE_NTOHL (0x45787441),
  ACE_NTOHL (0x74747269),
  ACE_NTOHL (0x62757465),
  ACE_NTOHL (0x44657363),
  ACE_NTOHL (0x72697074),
  ACE_NTOHL (0x696f6e00),  // name = ExtAttributeDescription
  8, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  3,
  ACE_NTOHL (0x69640000),  // name = id
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x64656669),
  ACE_NTOHL (0x6e65645f),
  ACE_NTOHL (0x696e0000),  // name = defined_in
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  8,
  ACE_NTOHL (0x76657273),
  ACE_NTOHL (0x696f6e00),  // name = version
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    34,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5665),
    ACE_NTOHL (0x7273696f),
    ACE_NTOHL (0x6e537065),
    ACE_NTOHL (0x633a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
        12,
    ACE_NTOHL (0x56657273),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x70656300),  // name = VersionSpec
        CORBA::tk_string,
    0U, // string length

  5,
  ACE_NTOHL (0x74797065),
  ACE_NTOHL (0x0),  // name = type
    CORBA::tk_TypeCode,

  5,
  ACE_NTOHL (0x6d6f6465),
  ACE_NTOHL (0x0),  // name = mode
    CORBA::tk_enum, // typecode kind
  104, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
    36,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4174),
    ACE_NTOHL (0x74726962),
    ACE_NTOHL (0x7574654d),
    ACE_NTOHL (0x6f64653a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
    14,
    ACE_NTOHL (0x41747472),
    ACE_NTOHL (0x69627574),
    ACE_NTOHL (0x654d6f64),
    ACE_NTOHL (0x65000000),  // name = AttributeMode
    2, // member count
    12,
    ACE_NTOHL (0x41545452),
    ACE_NTOHL (0x5f4e4f52),
    ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
    14,
    ACE_NTOHL (0x41545452),
    ACE_NTOHL (0x5f524541),
    ACE_NTOHL (0x444f4e4c),
    ACE_NTOHL (0x59000000),  // name = ATTR_READONLY

  15,
  ACE_NTOHL (0x6765745f),
  ACE_NTOHL (0x65786365),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e730000),  // name = get_exceptions
    CORBA::tk_alias, // typecode kind for typedefs
  556, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    40,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4578),
    ACE_NTOHL (0x63446573),
    ACE_NTOHL (0x63726970),
    ACE_NTOHL (0x74696f6e),
    ACE_NTOHL (0x5365713a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
        18,
    ACE_NTOHL (0x45786344),
    ACE_NTOHL (0x65736372),
    ACE_NTOHL (0x69707469),
    ACE_NTOHL (0x6f6e5365),
    ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
        CORBA::tk_sequence, // typecode kind
    476, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      460, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        43,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4578),
        ACE_NTOHL (0x63657074),
        ACE_NTOHL (0x696f6e44),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e3a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                21,
        ACE_NTOHL (0x45786365),
        ACE_NTOHL (0x7074696f),
        ACE_NTOHL (0x6e446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x0),  // name = ExceptionDescription
        5, // member count
                5,
        ACE_NTOHL (0x6e616d65),
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length

        3,
        ACE_NTOHL (0x69640000),  // name = id
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        11,
        ACE_NTOHL (0x64656669),
        ACE_NTOHL (0x6e65645f),
        ACE_NTOHL (0x696e0000),  // name = defined_in
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        8,
        ACE_NTOHL (0x76657273),
        ACE_NTOHL (0x696f6e00),  // name = version
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          34,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5665),
          ACE_NTOHL (0x7273696f),
          ACE_NTOHL (0x6e537065),
          ACE_NTOHL (0x633a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                    12,
          ACE_NTOHL (0x56657273),
          ACE_NTOHL (0x696f6e53),
          ACE_NTOHL (0x70656300),  // name = VersionSpec
                    CORBA::tk_string,
          0U, // string length

        5,
        ACE_NTOHL (0x74797065),
        ACE_NTOHL (0x0),  // name = type
                CORBA::tk_TypeCode,


      0U,


  15,
  ACE_NTOHL (0x7075745f),
  ACE_NTOHL (0x65786365),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e730000),  // name = put_exceptions
    CORBA::tk_alias, // typecode kind for typedefs
  556, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    40,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4578),
    ACE_NTOHL (0x63446573),
    ACE_NTOHL (0x63726970),
    ACE_NTOHL (0x74696f6e),
    ACE_NTOHL (0x5365713a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
        18,
    ACE_NTOHL (0x45786344),
    ACE_NTOHL (0x65736372),
    ACE_NTOHL (0x69707469),
    ACE_NTOHL (0x6f6e5365),
    ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
        CORBA::tk_sequence, // typecode kind
    476, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      460, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        43,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4578),
        ACE_NTOHL (0x63657074),
        ACE_NTOHL (0x696f6e44),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e3a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                21,
        ACE_NTOHL (0x45786365),
        ACE_NTOHL (0x7074696f),
        ACE_NTOHL (0x6e446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x0),  // name = ExceptionDescription
        5, // member count
                5,
        ACE_NTOHL (0x6e616d65),
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length

        3,
        ACE_NTOHL (0x69640000),  // name = id
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        11,
        ACE_NTOHL (0x64656669),
        ACE_NTOHL (0x6e65645f),
        ACE_NTOHL (0x696e0000),  // name = defined_in
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        8,
        ACE_NTOHL (0x76657273),
        ACE_NTOHL (0x696f6e00),  // name = version
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          34,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5665),
          ACE_NTOHL (0x7273696f),
          ACE_NTOHL (0x6e537065),
          ACE_NTOHL (0x633a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                    12,
          ACE_NTOHL (0x56657273),
          ACE_NTOHL (0x696f6e53),
          ACE_NTOHL (0x70656300),  // name = VersionSpec
                    CORBA::tk_string,
          0U, // string length

        5,
        ACE_NTOHL (0x74797065),
        ACE_NTOHL (0x0),  // name = type
                CORBA::tk_TypeCode,


      0U,


};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ExtAttributeDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_ExtAttributeDescription),
    (char *) &_oc_CORBA_ExtAttributeDescription,
    0,
    sizeof (CORBA::ExtAttributeDescription)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ExtAttributeDescription =
    &_tc_TAO_tc_CORBA_ExtAttributeDescription;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ExtAttributeDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4578),
  ACE_NTOHL (0x74417474),
  ACE_NTOHL (0x72696275),
  ACE_NTOHL (0x74654465),
  ACE_NTOHL (0x663a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ExtAttributeDef:1.0
    16,
  ACE_NTOHL (0x45787441),
  ACE_NTOHL (0x74747269),
  ACE_NTOHL (0x62757465),
  ACE_NTOHL (0x44656600),  // name = ExtAttributeDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_ExtAttributeDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_ExtAttributeDef),
    (char *) &_oc_CORBA_ExtAttributeDef,
    0,
    sizeof (CORBA::ExtAttributeDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ExtAttributeDef =
    &_tc_TAO_tc_CORBA_ExtAttributeDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_OperationMode[] =
{
  TAO_ENCAP_BYTE_ORDER, // byte order
  36,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4f70),
  ACE_NTOHL (0x65726174),
  ACE_NTOHL (0x696f6e4d),
  ACE_NTOHL (0x6f64653a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/OperationMode:1.0
  14,
  ACE_NTOHL (0x4f706572),
  ACE_NTOHL (0x6174696f),
  ACE_NTOHL (0x6e4d6f64),
  ACE_NTOHL (0x65000000),  // name = OperationMode
  2, // member count
  10,
  ACE_NTOHL (0x4f505f4e),
  ACE_NTOHL (0x4f524d41),
  ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
  10,
  ACE_NTOHL (0x4f505f4f),
  ACE_NTOHL (0x4e455741),
  ACE_NTOHL (0x59000000),  // name = OP_ONEWAY
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_OperationMode (
    CORBA::tk_enum,
    sizeof (_oc_CORBA_OperationMode),
    (char *) &_oc_CORBA_OperationMode,
    0,
    sizeof (CORBA::OperationMode)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_OperationMode =
    &_tc_TAO_tc_CORBA_OperationMode;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ParameterDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5061),
  ACE_NTOHL (0x72616d65),
  ACE_NTOHL (0x74657244),
  ACE_NTOHL (0x65736372),
  ACE_NTOHL (0x69707469),
  ACE_NTOHL (0x6f6e3a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ParameterDescription:1.0
    21,
  ACE_NTOHL (0x50617261),
  ACE_NTOHL (0x6d657465),
  ACE_NTOHL (0x72446573),
  ACE_NTOHL (0x63726970),
  ACE_NTOHL (0x74696f6e),
  ACE_NTOHL (0x0),  // name = ParameterDescription
  4, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  5,
  ACE_NTOHL (0x74797065),
  ACE_NTOHL (0x0),  // name = type
    CORBA::tk_TypeCode,

  9,
  ACE_NTOHL (0x74797065),
  ACE_NTOHL (0x5f646566),
  ACE_NTOHL (0x0),  // name = type_def
    CORBA::tk_objref, // typecode kind
  52, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    30,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4944),
    ACE_NTOHL (0x4c547970),
    ACE_NTOHL (0x653a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
        8,
    ACE_NTOHL (0x49444c54),
    ACE_NTOHL (0x79706500),  // name = IDLType

  5,
  ACE_NTOHL (0x6d6f6465),
  ACE_NTOHL (0x0),  // name = mode
    CORBA::tk_enum, // typecode kind
  116, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
    36,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5061),
    ACE_NTOHL (0x72616d65),
    ACE_NTOHL (0x7465724d),
    ACE_NTOHL (0x6f64653a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
    14,
    ACE_NTOHL (0x50617261),
    ACE_NTOHL (0x6d657465),
    ACE_NTOHL (0x724d6f64),
    ACE_NTOHL (0x65000000),  // name = ParameterMode
    3, // member count
    9,
    ACE_NTOHL (0x50415241),
    ACE_NTOHL (0x4d5f494e),
    ACE_NTOHL (0x0),  // name = PARAM_IN
    10,
    ACE_NTOHL (0x50415241),
    ACE_NTOHL (0x4d5f4f55),
    ACE_NTOHL (0x54000000),  // name = PARAM_OUT
    12,
    ACE_NTOHL (0x50415241),
    ACE_NTOHL (0x4d5f494e),
    ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ParameterDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_ParameterDescription),
    (char *) &_oc_CORBA_ParameterDescription,
    0,
    sizeof (CORBA::ParameterDescription)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ParameterDescription =
    &_tc_TAO_tc_CORBA_ParameterDescription;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ParDescriptionSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5061),
  ACE_NTOHL (0x72446573),
  ACE_NTOHL (0x63726970),
  ACE_NTOHL (0x74696f6e),
  ACE_NTOHL (0x5365713a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParDescriptionSeq:1.0
    18,
  ACE_NTOHL (0x50617244),
  ACE_NTOHL (0x65736372),
  ACE_NTOHL (0x69707469),
  ACE_NTOHL (0x6f6e5365),
  ACE_NTOHL (0x71000000),  // name = ParDescriptionSeq
    CORBA::tk_sequence, // typecode kind
  416, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    400, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      43,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x434f5242),
      ACE_NTOHL (0x412f5061),
      ACE_NTOHL (0x72616d65),
      ACE_NTOHL (0x74657244),
      ACE_NTOHL (0x65736372),
      ACE_NTOHL (0x69707469),
      ACE_NTOHL (0x6f6e3a31),
      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ParameterDescription:1.0
            21,
      ACE_NTOHL (0x50617261),
      ACE_NTOHL (0x6d657465),
      ACE_NTOHL (0x72446573),
      ACE_NTOHL (0x63726970),
      ACE_NTOHL (0x74696f6e),
      ACE_NTOHL (0x0),  // name = ParameterDescription
      4, // member count
            5,
      ACE_NTOHL (0x6e616d65),
      ACE_NTOHL (0x0),  // name = name
            CORBA::tk_alias, // typecode kind for typedefs
      68, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        33,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4964),
        ACE_NTOHL (0x656e7469),
        ACE_NTOHL (0x66696572),
        ACE_NTOHL (0x3a312e30),
        ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                11,
        ACE_NTOHL (0x4964656e),
        ACE_NTOHL (0x74696669),
        ACE_NTOHL (0x65720000),  // name = Identifier
                CORBA::tk_string,
        0U, // string length

      5,
      ACE_NTOHL (0x74797065),
      ACE_NTOHL (0x0),  // name = type
            CORBA::tk_TypeCode,

      9,
      ACE_NTOHL (0x74797065),
      ACE_NTOHL (0x5f646566),
      ACE_NTOHL (0x0),  // name = type_def
            CORBA::tk_objref, // typecode kind
      52, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        30,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4944),
        ACE_NTOHL (0x4c547970),
        ACE_NTOHL (0x653a312e),
        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
                8,
        ACE_NTOHL (0x49444c54),
        ACE_NTOHL (0x79706500),  // name = IDLType

      5,
      ACE_NTOHL (0x6d6f6465),
      ACE_NTOHL (0x0),  // name = mode
            CORBA::tk_enum, // typecode kind
      116, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
        36,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5061),
        ACE_NTOHL (0x72616d65),
        ACE_NTOHL (0x7465724d),
        ACE_NTOHL (0x6f64653a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
        14,
        ACE_NTOHL (0x50617261),
        ACE_NTOHL (0x6d657465),
        ACE_NTOHL (0x724d6f64),
        ACE_NTOHL (0x65000000),  // name = ParameterMode
        3, // member count
        9,
        ACE_NTOHL (0x50415241),
        ACE_NTOHL (0x4d5f494e),
        ACE_NTOHL (0x0),  // name = PARAM_IN
        10,
        ACE_NTOHL (0x50415241),
        ACE_NTOHL (0x4d5f4f55),
        ACE_NTOHL (0x54000000),  // name = PARAM_OUT
        12,
        ACE_NTOHL (0x50415241),
        ACE_NTOHL (0x4d5f494e),
        ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT


    0U,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ParDescriptionSeq (
    CORBA::tk_alias,
    sizeof (_oc_CORBA_ParDescriptionSeq),
    (char *) &_oc_CORBA_ParDescriptionSeq,
    0,
    sizeof (CORBA::ParDescriptionSeq)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ParDescriptionSeq =
    &_tc_TAO_tc_CORBA_ParDescriptionSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ContextIdentifier[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f436f),
  ACE_NTOHL (0x6e746578),
  ACE_NTOHL (0x74496465),
  ACE_NTOHL (0x6e746966),
  ACE_NTOHL (0x6965723a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ContextIdentifier:1.0
    18,
  ACE_NTOHL (0x436f6e74),
  ACE_NTOHL (0x65787449),
  ACE_NTOHL (0x64656e74),
  ACE_NTOHL (0x69666965),
  ACE_NTOHL (0x72000000),  // name = ContextIdentifier
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ContextIdentifier (
    CORBA::tk_alias,
    sizeof (_oc_CORBA_ContextIdentifier),
    (char *) &_oc_CORBA_ContextIdentifier,
    0,
    sizeof (CORBA::ContextIdentifier)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ContextIdentifier =
    &_tc_TAO_tc_CORBA_ContextIdentifier;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ContextIdSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f436f),
  ACE_NTOHL (0x6e746578),
  ACE_NTOHL (0x74496453),
  ACE_NTOHL (0x65713a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ContextIdSeq:1.0
    13,
  ACE_NTOHL (0x436f6e74),
  ACE_NTOHL (0x65787449),
  ACE_NTOHL (0x64536571),
  ACE_NTOHL (0x0),  // name = ContextIdSeq
    CORBA::tk_sequence, // typecode kind
  164, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_alias, // typecode kind for typedefs
    148, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      40,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x434f5242),
      ACE_NTOHL (0x412f436f),
      ACE_NTOHL (0x6e746578),
      ACE_NTOHL (0x74496465),
      ACE_NTOHL (0x6e746966),
      ACE_NTOHL (0x6965723a),
      ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ContextIdentifier:1.0
            18,
      ACE_NTOHL (0x436f6e74),
      ACE_NTOHL (0x65787449),
      ACE_NTOHL (0x64656e74),
      ACE_NTOHL (0x69666965),
      ACE_NTOHL (0x72000000),  // name = ContextIdentifier
            CORBA::tk_alias, // typecode kind for typedefs
      68, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        33,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4964),
        ACE_NTOHL (0x656e7469),
        ACE_NTOHL (0x66696572),
        ACE_NTOHL (0x3a312e30),
        ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                11,
        ACE_NTOHL (0x4964656e),
        ACE_NTOHL (0x74696669),
        ACE_NTOHL (0x65720000),  // name = Identifier
                CORBA::tk_string,
        0U, // string length


    0U,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ContextIdSeq (
    CORBA::tk_alias,
    sizeof (_oc_CORBA_ContextIdSeq),
    (char *) &_oc_CORBA_ContextIdSeq,
    0,
    sizeof (CORBA::ContextIdSeq)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ContextIdSeq =
    &_tc_TAO_tc_CORBA_ContextIdSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_OperationDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4f70),
  ACE_NTOHL (0x65726174),
  ACE_NTOHL (0x696f6e44),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OperationDef:1.0
    13,
  ACE_NTOHL (0x4f706572),
  ACE_NTOHL (0x6174696f),
  ACE_NTOHL (0x6e446566),
  ACE_NTOHL (0x0),  // name = OperationDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_OperationDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_OperationDef),
    (char *) &_oc_CORBA_OperationDef,
    0,
    sizeof (CORBA::OperationDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_OperationDef =
    &_tc_TAO_tc_CORBA_OperationDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_OperationDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4f70),
  ACE_NTOHL (0x65726174),
  ACE_NTOHL (0x696f6e44),
  ACE_NTOHL (0x65736372),
  ACE_NTOHL (0x69707469),
  ACE_NTOHL (0x6f6e3a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OperationDescription:1.0
    21,
  ACE_NTOHL (0x4f706572),
  ACE_NTOHL (0x6174696f),
  ACE_NTOHL (0x6e446573),
  ACE_NTOHL (0x63726970),
  ACE_NTOHL (0x74696f6e),
  ACE_NTOHL (0x0),  // name = OperationDescription
  9, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  3,
  ACE_NTOHL (0x69640000),  // name = id
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x64656669),
  ACE_NTOHL (0x6e65645f),
  ACE_NTOHL (0x696e0000),  // name = defined_in
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  8,
  ACE_NTOHL (0x76657273),
  ACE_NTOHL (0x696f6e00),  // name = version
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    34,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5665),
    ACE_NTOHL (0x7273696f),
    ACE_NTOHL (0x6e537065),
    ACE_NTOHL (0x633a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
        12,
    ACE_NTOHL (0x56657273),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x70656300),  // name = VersionSpec
        CORBA::tk_string,
    0U, // string length

  7,
  ACE_NTOHL (0x72657375),
  ACE_NTOHL (0x6c740000),  // name = result
    CORBA::tk_TypeCode,

  5,
  ACE_NTOHL (0x6d6f6465),
  ACE_NTOHL (0x0),  // name = mode
    CORBA::tk_enum, // typecode kind
  100, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
    36,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4f70),
    ACE_NTOHL (0x65726174),
    ACE_NTOHL (0x696f6e4d),
    ACE_NTOHL (0x6f64653a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/OperationMode:1.0
    14,
    ACE_NTOHL (0x4f706572),
    ACE_NTOHL (0x6174696f),
    ACE_NTOHL (0x6e4d6f64),
    ACE_NTOHL (0x65000000),  // name = OperationMode
    2, // member count
    10,
    ACE_NTOHL (0x4f505f4e),
    ACE_NTOHL (0x4f524d41),
    ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
    10,
    ACE_NTOHL (0x4f505f4f),
    ACE_NTOHL (0x4e455741),
    ACE_NTOHL (0x59000000),  // name = OP_ONEWAY

  9,
  ACE_NTOHL (0x636f6e74),
  ACE_NTOHL (0x65787473),
  ACE_NTOHL (0x0),  // name = contexts
    CORBA::tk_alias, // typecode kind for typedefs
  236, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f436f),
    ACE_NTOHL (0x6e746578),
    ACE_NTOHL (0x74496453),
    ACE_NTOHL (0x65713a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ContextIdSeq:1.0
        13,
    ACE_NTOHL (0x436f6e74),
    ACE_NTOHL (0x65787449),
    ACE_NTOHL (0x64536571),
    ACE_NTOHL (0x0),  // name = ContextIdSeq
        CORBA::tk_sequence, // typecode kind
    164, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_alias, // typecode kind for typedefs
      148, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        40,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f436f),
        ACE_NTOHL (0x6e746578),
        ACE_NTOHL (0x74496465),
        ACE_NTOHL (0x6e746966),
        ACE_NTOHL (0x6965723a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ContextIdentifier:1.0
                18,
        ACE_NTOHL (0x436f6e74),
        ACE_NTOHL (0x65787449),
        ACE_NTOHL (0x64656e74),
        ACE_NTOHL (0x69666965),
        ACE_NTOHL (0x72000000),  // name = ContextIdentifier
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length


      0U,


  11,
  ACE_NTOHL (0x70617261),
  ACE_NTOHL (0x6d657465),
  ACE_NTOHL (0x72730000),  // name = parameters
    CORBA::tk_alias, // typecode kind for typedefs
  496, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    40,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5061),
    ACE_NTOHL (0x72446573),
    ACE_NTOHL (0x63726970),
    ACE_NTOHL (0x74696f6e),
    ACE_NTOHL (0x5365713a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParDescriptionSeq:1.0
        18,
    ACE_NTOHL (0x50617244),
    ACE_NTOHL (0x65736372),
    ACE_NTOHL (0x69707469),
    ACE_NTOHL (0x6f6e5365),
    ACE_NTOHL (0x71000000),  // name = ParDescriptionSeq
        CORBA::tk_sequence, // typecode kind
    416, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      400, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        43,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5061),
        ACE_NTOHL (0x72616d65),
        ACE_NTOHL (0x74657244),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e3a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ParameterDescription:1.0
                21,
        ACE_NTOHL (0x50617261),
        ACE_NTOHL (0x6d657465),
        ACE_NTOHL (0x72446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x0),  // name = ParameterDescription
        4, // member count
                5,
        ACE_NTOHL (0x6e616d65),
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length

        5,
        ACE_NTOHL (0x74797065),
        ACE_NTOHL (0x0),  // name = type
                CORBA::tk_TypeCode,

        9,
        ACE_NTOHL (0x74797065),
        ACE_NTOHL (0x5f646566),
        ACE_NTOHL (0x0),  // name = type_def
                CORBA::tk_objref, // typecode kind
        52, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          30,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4944),
          ACE_NTOHL (0x4c547970),
          ACE_NTOHL (0x653a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
                    8,
          ACE_NTOHL (0x49444c54),
          ACE_NTOHL (0x79706500),  // name = IDLType

        5,
        ACE_NTOHL (0x6d6f6465),
        ACE_NTOHL (0x0),  // name = mode
                CORBA::tk_enum, // typecode kind
        116, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
          36,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5061),
          ACE_NTOHL (0x72616d65),
          ACE_NTOHL (0x7465724d),
          ACE_NTOHL (0x6f64653a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
          14,
          ACE_NTOHL (0x50617261),
          ACE_NTOHL (0x6d657465),
          ACE_NTOHL (0x724d6f64),
          ACE_NTOHL (0x65000000),  // name = ParameterMode
          3, // member count
          9,
          ACE_NTOHL (0x50415241),
          ACE_NTOHL (0x4d5f494e),
          ACE_NTOHL (0x0),  // name = PARAM_IN
          10,
          ACE_NTOHL (0x50415241),
          ACE_NTOHL (0x4d5f4f55),
          ACE_NTOHL (0x54000000),  // name = PARAM_OUT
          12,
          ACE_NTOHL (0x50415241),
          ACE_NTOHL (0x4d5f494e),
          ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT


      0U,


  11,
  ACE_NTOHL (0x65786365),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e730000),  // name = exceptions
    CORBA::tk_alias, // typecode kind for typedefs
  556, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    40,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4578),
    ACE_NTOHL (0x63446573),
    ACE_NTOHL (0x63726970),
    ACE_NTOHL (0x74696f6e),
    ACE_NTOHL (0x5365713a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
        18,
    ACE_NTOHL (0x45786344),
    ACE_NTOHL (0x65736372),
    ACE_NTOHL (0x69707469),
    ACE_NTOHL (0x6f6e5365),
    ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
        CORBA::tk_sequence, // typecode kind
    476, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      460, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        43,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4578),
        ACE_NTOHL (0x63657074),
        ACE_NTOHL (0x696f6e44),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e3a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                21,
        ACE_NTOHL (0x45786365),
        ACE_NTOHL (0x7074696f),
        ACE_NTOHL (0x6e446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x0),  // name = ExceptionDescription
        5, // member count
                5,
        ACE_NTOHL (0x6e616d65),
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length

        3,
        ACE_NTOHL (0x69640000),  // name = id
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        11,
        ACE_NTOHL (0x64656669),
        ACE_NTOHL (0x6e65645f),
        ACE_NTOHL (0x696e0000),  // name = defined_in
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        8,
        ACE_NTOHL (0x76657273),
        ACE_NTOHL (0x696f6e00),  // name = version
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          34,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5665),
          ACE_NTOHL (0x7273696f),
          ACE_NTOHL (0x6e537065),
          ACE_NTOHL (0x633a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                    12,
          ACE_NTOHL (0x56657273),
          ACE_NTOHL (0x696f6e53),
          ACE_NTOHL (0x70656300),  // name = VersionSpec
                    CORBA::tk_string,
          0U, // string length

        5,
        ACE_NTOHL (0x74797065),
        ACE_NTOHL (0x0),  // name = type
                CORBA::tk_TypeCode,


      0U,


};

static CORBA::TypeCode _tc_TAO_tc_CORBA_OperationDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_OperationDescription),
    (char *) &_oc_CORBA_OperationDescription,
    0,
    sizeof (CORBA::OperationDescription)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_OperationDescription =
    &_tc_TAO_tc_CORBA_OperationDescription;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_RepositoryIdSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5265),
  ACE_NTOHL (0x706f7369),
  ACE_NTOHL (0x746f7279),
  ACE_NTOHL (0x49645365),
  ACE_NTOHL (0x713a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/RepositoryIdSeq:1.0
    16,
  ACE_NTOHL (0x5265706f),
  ACE_NTOHL (0x7369746f),
  ACE_NTOHL (0x72794964),
  ACE_NTOHL (0x53657100),  // name = RepositoryIdSeq
    CORBA::tk_sequence, // typecode kind
  88, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_alias, // typecode kind for typedefs
    72, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      35,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x434f5242),
      ACE_NTOHL (0x412f5265),
      ACE_NTOHL (0x706f7369),
      ACE_NTOHL (0x746f7279),
      ACE_NTOHL (0x49643a31),
      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
            13,
      ACE_NTOHL (0x5265706f),
      ACE_NTOHL (0x7369746f),
      ACE_NTOHL (0x72794964),
      ACE_NTOHL (0x0),  // name = RepositoryId
            CORBA::tk_string,
      0U, // string length

    0U,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_RepositoryIdSeq (
    CORBA::tk_alias,
    sizeof (_oc_CORBA_RepositoryIdSeq),
    (char *) &_oc_CORBA_RepositoryIdSeq,
    0,
    sizeof (CORBA::RepositoryIdSeq)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_RepositoryIdSeq =
    &_tc_TAO_tc_CORBA_RepositoryIdSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_OpDescriptionSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  39,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4f70),
  ACE_NTOHL (0x44657363),
  ACE_NTOHL (0x72697074),
  ACE_NTOHL (0x696f6e53),
  ACE_NTOHL (0x65713a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OpDescriptionSeq:1.0
    17,
  ACE_NTOHL (0x4f704465),
  ACE_NTOHL (0x73637269),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e536571),
  ACE_NTOHL (0x0),  // name = OpDescriptionSeq
    CORBA::tk_sequence, // typecode kind
  1956, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    1940, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      43,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x434f5242),
      ACE_NTOHL (0x412f4f70),
      ACE_NTOHL (0x65726174),
      ACE_NTOHL (0x696f6e44),
      ACE_NTOHL (0x65736372),
      ACE_NTOHL (0x69707469),
      ACE_NTOHL (0x6f6e3a31),
      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OperationDescription:1.0
            21,
      ACE_NTOHL (0x4f706572),
      ACE_NTOHL (0x6174696f),
      ACE_NTOHL (0x6e446573),
      ACE_NTOHL (0x63726970),
      ACE_NTOHL (0x74696f6e),
      ACE_NTOHL (0x0),  // name = OperationDescription
      9, // member count
            5,
      ACE_NTOHL (0x6e616d65),
      ACE_NTOHL (0x0),  // name = name
            CORBA::tk_alias, // typecode kind for typedefs
      68, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        33,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4964),
        ACE_NTOHL (0x656e7469),
        ACE_NTOHL (0x66696572),
        ACE_NTOHL (0x3a312e30),
        ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                11,
        ACE_NTOHL (0x4964656e),
        ACE_NTOHL (0x74696669),
        ACE_NTOHL (0x65720000),  // name = Identifier
                CORBA::tk_string,
        0U, // string length

      3,
      ACE_NTOHL (0x69640000),  // name = id
            CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      11,
      ACE_NTOHL (0x64656669),
      ACE_NTOHL (0x6e65645f),
      ACE_NTOHL (0x696e0000),  // name = defined_in
            CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      8,
      ACE_NTOHL (0x76657273),
      ACE_NTOHL (0x696f6e00),  // name = version
            CORBA::tk_alias, // typecode kind for typedefs
      68, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        34,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5665),
        ACE_NTOHL (0x7273696f),
        ACE_NTOHL (0x6e537065),
        ACE_NTOHL (0x633a312e),
        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                12,
        ACE_NTOHL (0x56657273),
        ACE_NTOHL (0x696f6e53),
        ACE_NTOHL (0x70656300),  // name = VersionSpec
                CORBA::tk_string,
        0U, // string length

      7,
      ACE_NTOHL (0x72657375),
      ACE_NTOHL (0x6c740000),  // name = result
            CORBA::tk_TypeCode,

      5,
      ACE_NTOHL (0x6d6f6465),
      ACE_NTOHL (0x0),  // name = mode
            CORBA::tk_enum, // typecode kind
      100, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
        36,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4f70),
        ACE_NTOHL (0x65726174),
        ACE_NTOHL (0x696f6e4d),
        ACE_NTOHL (0x6f64653a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/OperationMode:1.0
        14,
        ACE_NTOHL (0x4f706572),
        ACE_NTOHL (0x6174696f),
        ACE_NTOHL (0x6e4d6f64),
        ACE_NTOHL (0x65000000),  // name = OperationMode
        2, // member count
        10,
        ACE_NTOHL (0x4f505f4e),
        ACE_NTOHL (0x4f524d41),
        ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
        10,
        ACE_NTOHL (0x4f505f4f),
        ACE_NTOHL (0x4e455741),
        ACE_NTOHL (0x59000000),  // name = OP_ONEWAY

      9,
      ACE_NTOHL (0x636f6e74),
      ACE_NTOHL (0x65787473),
      ACE_NTOHL (0x0),  // name = contexts
            CORBA::tk_alias, // typecode kind for typedefs
      236, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f436f),
        ACE_NTOHL (0x6e746578),
        ACE_NTOHL (0x74496453),
        ACE_NTOHL (0x65713a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ContextIdSeq:1.0
                13,
        ACE_NTOHL (0x436f6e74),
        ACE_NTOHL (0x65787449),
        ACE_NTOHL (0x64536571),
        ACE_NTOHL (0x0),  // name = ContextIdSeq
                CORBA::tk_sequence, // typecode kind
        164, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_alias, // typecode kind for typedefs
          148, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            40,
            ACE_NTOHL (0x49444c3a),
            ACE_NTOHL (0x6f6d672e),
            ACE_NTOHL (0x6f72672f),
            ACE_NTOHL (0x434f5242),
            ACE_NTOHL (0x412f436f),
            ACE_NTOHL (0x6e746578),
            ACE_NTOHL (0x74496465),
            ACE_NTOHL (0x6e746966),
            ACE_NTOHL (0x6965723a),
            ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ContextIdentifier:1.0
                        18,
            ACE_NTOHL (0x436f6e74),
            ACE_NTOHL (0x65787449),
            ACE_NTOHL (0x64656e74),
            ACE_NTOHL (0x69666965),
            ACE_NTOHL (0x72000000),  // name = ContextIdentifier
                        CORBA::tk_alias, // typecode kind for typedefs
            68, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              33,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4964),
              ACE_NTOHL (0x656e7469),
              ACE_NTOHL (0x66696572),
              ACE_NTOHL (0x3a312e30),
              ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                            11,
              ACE_NTOHL (0x4964656e),
              ACE_NTOHL (0x74696669),
              ACE_NTOHL (0x65720000),  // name = Identifier
                            CORBA::tk_string,
              0U, // string length


          0U,


      11,
      ACE_NTOHL (0x70617261),
      ACE_NTOHL (0x6d657465),
      ACE_NTOHL (0x72730000),  // name = parameters
            CORBA::tk_alias, // typecode kind for typedefs
      496, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        40,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5061),
        ACE_NTOHL (0x72446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x5365713a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParDescriptionSeq:1.0
                18,
        ACE_NTOHL (0x50617244),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e5365),
        ACE_NTOHL (0x71000000),  // name = ParDescriptionSeq
                CORBA::tk_sequence, // typecode kind
        416, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_struct, // typecode kind
          400, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            43,
            ACE_NTOHL (0x49444c3a),
            ACE_NTOHL (0x6f6d672e),
            ACE_NTOHL (0x6f72672f),
            ACE_NTOHL (0x434f5242),
            ACE_NTOHL (0x412f5061),
            ACE_NTOHL (0x72616d65),
            ACE_NTOHL (0x74657244),
            ACE_NTOHL (0x65736372),
            ACE_NTOHL (0x69707469),
            ACE_NTOHL (0x6f6e3a31),
            ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ParameterDescription:1.0
                        21,
            ACE_NTOHL (0x50617261),
            ACE_NTOHL (0x6d657465),
            ACE_NTOHL (0x72446573),
            ACE_NTOHL (0x63726970),
            ACE_NTOHL (0x74696f6e),
            ACE_NTOHL (0x0),  // name = ParameterDescription
            4, // member count
                        5,
            ACE_NTOHL (0x6e616d65),
            ACE_NTOHL (0x0),  // name = name
                        CORBA::tk_alias, // typecode kind for typedefs
            68, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              33,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4964),
              ACE_NTOHL (0x656e7469),
              ACE_NTOHL (0x66696572),
              ACE_NTOHL (0x3a312e30),
              ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                            11,
              ACE_NTOHL (0x4964656e),
              ACE_NTOHL (0x74696669),
              ACE_NTOHL (0x65720000),  // name = Identifier
                            CORBA::tk_string,
              0U, // string length

            5,
            ACE_NTOHL (0x74797065),
            ACE_NTOHL (0x0),  // name = type
                        CORBA::tk_TypeCode,

            9,
            ACE_NTOHL (0x74797065),
            ACE_NTOHL (0x5f646566),
            ACE_NTOHL (0x0),  // name = type_def
                        CORBA::tk_objref, // typecode kind
            52, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              30,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4944),
              ACE_NTOHL (0x4c547970),
              ACE_NTOHL (0x653a312e),
              ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
                            8,
              ACE_NTOHL (0x49444c54),
              ACE_NTOHL (0x79706500),  // name = IDLType

            5,
            ACE_NTOHL (0x6d6f6465),
            ACE_NTOHL (0x0),  // name = mode
                        CORBA::tk_enum, // typecode kind
            116, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
              36,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5061),
              ACE_NTOHL (0x72616d65),
              ACE_NTOHL (0x7465724d),
              ACE_NTOHL (0x6f64653a),
              ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
              14,
              ACE_NTOHL (0x50617261),
              ACE_NTOHL (0x6d657465),
              ACE_NTOHL (0x724d6f64),
              ACE_NTOHL (0x65000000),  // name = ParameterMode
              3, // member count
              9,
              ACE_NTOHL (0x50415241),
              ACE_NTOHL (0x4d5f494e),
              ACE_NTOHL (0x0),  // name = PARAM_IN
              10,
              ACE_NTOHL (0x50415241),
              ACE_NTOHL (0x4d5f4f55),
              ACE_NTOHL (0x54000000),  // name = PARAM_OUT
              12,
              ACE_NTOHL (0x50415241),
              ACE_NTOHL (0x4d5f494e),
              ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT


          0U,


      11,
      ACE_NTOHL (0x65786365),
      ACE_NTOHL (0x7074696f),
      ACE_NTOHL (0x6e730000),  // name = exceptions
            CORBA::tk_alias, // typecode kind for typedefs
      556, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        40,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4578),
        ACE_NTOHL (0x63446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x5365713a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
                18,
        ACE_NTOHL (0x45786344),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e5365),
        ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
                CORBA::tk_sequence, // typecode kind
        476, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_struct, // typecode kind
          460, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            43,
            ACE_NTOHL (0x49444c3a),
            ACE_NTOHL (0x6f6d672e),
            ACE_NTOHL (0x6f72672f),
            ACE_NTOHL (0x434f5242),
            ACE_NTOHL (0x412f4578),
            ACE_NTOHL (0x63657074),
            ACE_NTOHL (0x696f6e44),
            ACE_NTOHL (0x65736372),
            ACE_NTOHL (0x69707469),
            ACE_NTOHL (0x6f6e3a31),
            ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                        21,
            ACE_NTOHL (0x45786365),
            ACE_NTOHL (0x7074696f),
            ACE_NTOHL (0x6e446573),
            ACE_NTOHL (0x63726970),
            ACE_NTOHL (0x74696f6e),
            ACE_NTOHL (0x0),  // name = ExceptionDescription
            5, // member count
                        5,
            ACE_NTOHL (0x6e616d65),
            ACE_NTOHL (0x0),  // name = name
                        CORBA::tk_alias, // typecode kind for typedefs
            68, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              33,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4964),
              ACE_NTOHL (0x656e7469),
              ACE_NTOHL (0x66696572),
              ACE_NTOHL (0x3a312e30),
              ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                            11,
              ACE_NTOHL (0x4964656e),
              ACE_NTOHL (0x74696669),
              ACE_NTOHL (0x65720000),  // name = Identifier
                            CORBA::tk_string,
              0U, // string length

            3,
            ACE_NTOHL (0x69640000),  // name = id
                        CORBA::tk_alias, // typecode kind for typedefs
            72, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              35,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5265),
              ACE_NTOHL (0x706f7369),
              ACE_NTOHL (0x746f7279),
              ACE_NTOHL (0x49643a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                            13,
              ACE_NTOHL (0x5265706f),
              ACE_NTOHL (0x7369746f),
              ACE_NTOHL (0x72794964),
              ACE_NTOHL (0x0),  // name = RepositoryId
                            CORBA::tk_string,
              0U, // string length

            11,
            ACE_NTOHL (0x64656669),
            ACE_NTOHL (0x6e65645f),
            ACE_NTOHL (0x696e0000),  // name = defined_in
                        CORBA::tk_alias, // typecode kind for typedefs
            72, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              35,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5265),
              ACE_NTOHL (0x706f7369),
              ACE_NTOHL (0x746f7279),
              ACE_NTOHL (0x49643a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                            13,
              ACE_NTOHL (0x5265706f),
              ACE_NTOHL (0x7369746f),
              ACE_NTOHL (0x72794964),
              ACE_NTOHL (0x0),  // name = RepositoryId
                            CORBA::tk_string,
              0U, // string length

            8,
            ACE_NTOHL (0x76657273),
            ACE_NTOHL (0x696f6e00),  // name = version
                        CORBA::tk_alias, // typecode kind for typedefs
            68, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              34,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5665),
              ACE_NTOHL (0x7273696f),
              ACE_NTOHL (0x6e537065),
              ACE_NTOHL (0x633a312e),
              ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                            12,
              ACE_NTOHL (0x56657273),
              ACE_NTOHL (0x696f6e53),
              ACE_NTOHL (0x70656300),  // name = VersionSpec
                            CORBA::tk_string,
              0U, // string length

            5,
            ACE_NTOHL (0x74797065),
            ACE_NTOHL (0x0),  // name = type
                        CORBA::tk_TypeCode,


          0U,



    0U,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_OpDescriptionSeq (
    CORBA::tk_alias,
    sizeof (_oc_CORBA_OpDescriptionSeq),
    (char *) &_oc_CORBA_OpDescriptionSeq,
    0,
    sizeof (CORBA::OpDescriptionSeq)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_OpDescriptionSeq =
    &_tc_TAO_tc_CORBA_OpDescriptionSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_AttrDescriptionSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  41,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4174),
  ACE_NTOHL (0x74724465),
  ACE_NTOHL (0x73637269),
  ACE_NTOHL (0x7074696f),
  ACE_NTOHL (0x6e536571),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/AttrDescriptionSeq:1.0
    19,
  ACE_NTOHL (0x41747472),
  ACE_NTOHL (0x44657363),
  ACE_NTOHL (0x72697074),
  ACE_NTOHL (0x696f6e53),
  ACE_NTOHL (0x65710000),  // name = AttrDescriptionSeq
    CORBA::tk_sequence, // typecode kind
  600, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    584, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      43,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x434f5242),
      ACE_NTOHL (0x412f4174),
      ACE_NTOHL (0x74726962),
      ACE_NTOHL (0x75746544),
      ACE_NTOHL (0x65736372),
      ACE_NTOHL (0x69707469),
      ACE_NTOHL (0x6f6e3a31),
      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/AttributeDescription:1.0
            21,
      ACE_NTOHL (0x41747472),
      ACE_NTOHL (0x69627574),
      ACE_NTOHL (0x65446573),
      ACE_NTOHL (0x63726970),
      ACE_NTOHL (0x74696f6e),
      ACE_NTOHL (0x0),  // name = AttributeDescription
      6, // member count
            5,
      ACE_NTOHL (0x6e616d65),
      ACE_NTOHL (0x0),  // name = name
            CORBA::tk_alias, // typecode kind for typedefs
      68, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        33,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4964),
        ACE_NTOHL (0x656e7469),
        ACE_NTOHL (0x66696572),
        ACE_NTOHL (0x3a312e30),
        ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                11,
        ACE_NTOHL (0x4964656e),
        ACE_NTOHL (0x74696669),
        ACE_NTOHL (0x65720000),  // name = Identifier
                CORBA::tk_string,
        0U, // string length

      3,
      ACE_NTOHL (0x69640000),  // name = id
            CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      11,
      ACE_NTOHL (0x64656669),
      ACE_NTOHL (0x6e65645f),
      ACE_NTOHL (0x696e0000),  // name = defined_in
            CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      8,
      ACE_NTOHL (0x76657273),
      ACE_NTOHL (0x696f6e00),  // name = version
            CORBA::tk_alias, // typecode kind for typedefs
      68, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        34,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5665),
        ACE_NTOHL (0x7273696f),
        ACE_NTOHL (0x6e537065),
        ACE_NTOHL (0x633a312e),
        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                12,
        ACE_NTOHL (0x56657273),
        ACE_NTOHL (0x696f6e53),
        ACE_NTOHL (0x70656300),  // name = VersionSpec
                CORBA::tk_string,
        0U, // string length

      5,
      ACE_NTOHL (0x74797065),
      ACE_NTOHL (0x0),  // name = type
            CORBA::tk_TypeCode,

      5,
      ACE_NTOHL (0x6d6f6465),
      ACE_NTOHL (0x0),  // name = mode
            CORBA::tk_enum, // typecode kind
      104, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
        36,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4174),
        ACE_NTOHL (0x74726962),
        ACE_NTOHL (0x7574654d),
        ACE_NTOHL (0x6f64653a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
        14,
        ACE_NTOHL (0x41747472),
        ACE_NTOHL (0x69627574),
        ACE_NTOHL (0x654d6f64),
        ACE_NTOHL (0x65000000),  // name = AttributeMode
        2, // member count
        12,
        ACE_NTOHL (0x41545452),
        ACE_NTOHL (0x5f4e4f52),
        ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
        14,
        ACE_NTOHL (0x41545452),
        ACE_NTOHL (0x5f524541),
        ACE_NTOHL (0x444f4e4c),
        ACE_NTOHL (0x59000000),  // name = ATTR_READONLY


    0U,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_AttrDescriptionSeq (
    CORBA::tk_alias,
    sizeof (_oc_CORBA_AttrDescriptionSeq),
    (char *) &_oc_CORBA_AttrDescriptionSeq,
    0,
    sizeof (CORBA::AttrDescriptionSeq)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_AttrDescriptionSeq =
    &_tc_TAO_tc_CORBA_AttrDescriptionSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ExtAttrDescriptionSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  44,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4578),
  ACE_NTOHL (0x74417474),
  ACE_NTOHL (0x72446573),
  ACE_NTOHL (0x63726970),
  ACE_NTOHL (0x74696f6e),
  ACE_NTOHL (0x5365713a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExtAttrDescriptionSeq:1.0
    22,
  ACE_NTOHL (0x45787441),
  ACE_NTOHL (0x74747244),
  ACE_NTOHL (0x65736372),
  ACE_NTOHL (0x69707469),
  ACE_NTOHL (0x6f6e5365),
  ACE_NTOHL (0x71000000),  // name = ExtAttrDescriptionSeq
    CORBA::tk_sequence, // typecode kind
  1772, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    1756, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      46,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x434f5242),
      ACE_NTOHL (0x412f4578),
      ACE_NTOHL (0x74417474),
      ACE_NTOHL (0x72696275),
      ACE_NTOHL (0x74654465),
      ACE_NTOHL (0x73637269),
      ACE_NTOHL (0x7074696f),
      ACE_NTOHL (0x6e3a312e),
      ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ExtAttributeDescription:1.0
            24,
      ACE_NTOHL (0x45787441),
      ACE_NTOHL (0x74747269),
      ACE_NTOHL (0x62757465),
      ACE_NTOHL (0x44657363),
      ACE_NTOHL (0x72697074),
      ACE_NTOHL (0x696f6e00),  // name = ExtAttributeDescription
      8, // member count
            5,
      ACE_NTOHL (0x6e616d65),
      ACE_NTOHL (0x0),  // name = name
            CORBA::tk_alias, // typecode kind for typedefs
      68, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        33,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4964),
        ACE_NTOHL (0x656e7469),
        ACE_NTOHL (0x66696572),
        ACE_NTOHL (0x3a312e30),
        ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                11,
        ACE_NTOHL (0x4964656e),
        ACE_NTOHL (0x74696669),
        ACE_NTOHL (0x65720000),  // name = Identifier
                CORBA::tk_string,
        0U, // string length

      3,
      ACE_NTOHL (0x69640000),  // name = id
            CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      11,
      ACE_NTOHL (0x64656669),
      ACE_NTOHL (0x6e65645f),
      ACE_NTOHL (0x696e0000),  // name = defined_in
            CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      8,
      ACE_NTOHL (0x76657273),
      ACE_NTOHL (0x696f6e00),  // name = version
            CORBA::tk_alias, // typecode kind for typedefs
      68, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        34,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5665),
        ACE_NTOHL (0x7273696f),
        ACE_NTOHL (0x6e537065),
        ACE_NTOHL (0x633a312e),
        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                12,
        ACE_NTOHL (0x56657273),
        ACE_NTOHL (0x696f6e53),
        ACE_NTOHL (0x70656300),  // name = VersionSpec
                CORBA::tk_string,
        0U, // string length

      5,
      ACE_NTOHL (0x74797065),
      ACE_NTOHL (0x0),  // name = type
            CORBA::tk_TypeCode,

      5,
      ACE_NTOHL (0x6d6f6465),
      ACE_NTOHL (0x0),  // name = mode
            CORBA::tk_enum, // typecode kind
      104, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
        36,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4174),
        ACE_NTOHL (0x74726962),
        ACE_NTOHL (0x7574654d),
        ACE_NTOHL (0x6f64653a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
        14,
        ACE_NTOHL (0x41747472),
        ACE_NTOHL (0x69627574),
        ACE_NTOHL (0x654d6f64),
        ACE_NTOHL (0x65000000),  // name = AttributeMode
        2, // member count
        12,
        ACE_NTOHL (0x41545452),
        ACE_NTOHL (0x5f4e4f52),
        ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
        14,
        ACE_NTOHL (0x41545452),
        ACE_NTOHL (0x5f524541),
        ACE_NTOHL (0x444f4e4c),
        ACE_NTOHL (0x59000000),  // name = ATTR_READONLY

      15,
      ACE_NTOHL (0x6765745f),
      ACE_NTOHL (0x65786365),
      ACE_NTOHL (0x7074696f),
      ACE_NTOHL (0x6e730000),  // name = get_exceptions
            CORBA::tk_alias, // typecode kind for typedefs
      556, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        40,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4578),
        ACE_NTOHL (0x63446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x5365713a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
                18,
        ACE_NTOHL (0x45786344),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e5365),
        ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
                CORBA::tk_sequence, // typecode kind
        476, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_struct, // typecode kind
          460, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            43,
            ACE_NTOHL (0x49444c3a),
            ACE_NTOHL (0x6f6d672e),
            ACE_NTOHL (0x6f72672f),
            ACE_NTOHL (0x434f5242),
            ACE_NTOHL (0x412f4578),
            ACE_NTOHL (0x63657074),
            ACE_NTOHL (0x696f6e44),
            ACE_NTOHL (0x65736372),
            ACE_NTOHL (0x69707469),
            ACE_NTOHL (0x6f6e3a31),
            ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                        21,
            ACE_NTOHL (0x45786365),
            ACE_NTOHL (0x7074696f),
            ACE_NTOHL (0x6e446573),
            ACE_NTOHL (0x63726970),
            ACE_NTOHL (0x74696f6e),
            ACE_NTOHL (0x0),  // name = ExceptionDescription
            5, // member count
                        5,
            ACE_NTOHL (0x6e616d65),
            ACE_NTOHL (0x0),  // name = name
                        CORBA::tk_alias, // typecode kind for typedefs
            68, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              33,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4964),
              ACE_NTOHL (0x656e7469),
              ACE_NTOHL (0x66696572),
              ACE_NTOHL (0x3a312e30),
              ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                            11,
              ACE_NTOHL (0x4964656e),
              ACE_NTOHL (0x74696669),
              ACE_NTOHL (0x65720000),  // name = Identifier
                            CORBA::tk_string,
              0U, // string length

            3,
            ACE_NTOHL (0x69640000),  // name = id
                        CORBA::tk_alias, // typecode kind for typedefs
            72, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              35,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5265),
              ACE_NTOHL (0x706f7369),
              ACE_NTOHL (0x746f7279),
              ACE_NTOHL (0x49643a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                            13,
              ACE_NTOHL (0x5265706f),
              ACE_NTOHL (0x7369746f),
              ACE_NTOHL (0x72794964),
              ACE_NTOHL (0x0),  // name = RepositoryId
                            CORBA::tk_string,
              0U, // string length

            11,
            ACE_NTOHL (0x64656669),
            ACE_NTOHL (0x6e65645f),
            ACE_NTOHL (0x696e0000),  // name = defined_in
                        CORBA::tk_alias, // typecode kind for typedefs
            72, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              35,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5265),
              ACE_NTOHL (0x706f7369),
              ACE_NTOHL (0x746f7279),
              ACE_NTOHL (0x49643a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                            13,
              ACE_NTOHL (0x5265706f),
              ACE_NTOHL (0x7369746f),
              ACE_NTOHL (0x72794964),
              ACE_NTOHL (0x0),  // name = RepositoryId
                            CORBA::tk_string,
              0U, // string length

            8,
            ACE_NTOHL (0x76657273),
            ACE_NTOHL (0x696f6e00),  // name = version
                        CORBA::tk_alias, // typecode kind for typedefs
            68, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              34,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5665),
              ACE_NTOHL (0x7273696f),
              ACE_NTOHL (0x6e537065),
              ACE_NTOHL (0x633a312e),
              ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                            12,
              ACE_NTOHL (0x56657273),
              ACE_NTOHL (0x696f6e53),
              ACE_NTOHL (0x70656300),  // name = VersionSpec
                            CORBA::tk_string,
              0U, // string length

            5,
            ACE_NTOHL (0x74797065),
            ACE_NTOHL (0x0),  // name = type
                        CORBA::tk_TypeCode,


          0U,


      15,
      ACE_NTOHL (0x7075745f),
      ACE_NTOHL (0x65786365),
      ACE_NTOHL (0x7074696f),
      ACE_NTOHL (0x6e730000),  // name = put_exceptions
            CORBA::tk_alias, // typecode kind for typedefs
      556, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        40,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4578),
        ACE_NTOHL (0x63446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x5365713a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
                18,
        ACE_NTOHL (0x45786344),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e5365),
        ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
                CORBA::tk_sequence, // typecode kind
        476, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_struct, // typecode kind
          460, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            43,
            ACE_NTOHL (0x49444c3a),
            ACE_NTOHL (0x6f6d672e),
            ACE_NTOHL (0x6f72672f),
            ACE_NTOHL (0x434f5242),
            ACE_NTOHL (0x412f4578),
            ACE_NTOHL (0x63657074),
            ACE_NTOHL (0x696f6e44),
            ACE_NTOHL (0x65736372),
            ACE_NTOHL (0x69707469),
            ACE_NTOHL (0x6f6e3a31),
            ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                        21,
            ACE_NTOHL (0x45786365),
            ACE_NTOHL (0x7074696f),
            ACE_NTOHL (0x6e446573),
            ACE_NTOHL (0x63726970),
            ACE_NTOHL (0x74696f6e),
            ACE_NTOHL (0x0),  // name = ExceptionDescription
            5, // member count
                        5,
            ACE_NTOHL (0x6e616d65),
            ACE_NTOHL (0x0),  // name = name
                        CORBA::tk_alias, // typecode kind for typedefs
            68, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              33,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4964),
              ACE_NTOHL (0x656e7469),
              ACE_NTOHL (0x66696572),
              ACE_NTOHL (0x3a312e30),
              ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                            11,
              ACE_NTOHL (0x4964656e),
              ACE_NTOHL (0x74696669),
              ACE_NTOHL (0x65720000),  // name = Identifier
                            CORBA::tk_string,
              0U, // string length

            3,
            ACE_NTOHL (0x69640000),  // name = id
                        CORBA::tk_alias, // typecode kind for typedefs
            72, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              35,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5265),
              ACE_NTOHL (0x706f7369),
              ACE_NTOHL (0x746f7279),
              ACE_NTOHL (0x49643a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                            13,
              ACE_NTOHL (0x5265706f),
              ACE_NTOHL (0x7369746f),
              ACE_NTOHL (0x72794964),
              ACE_NTOHL (0x0),  // name = RepositoryId
                            CORBA::tk_string,
              0U, // string length

            11,
            ACE_NTOHL (0x64656669),
            ACE_NTOHL (0x6e65645f),
            ACE_NTOHL (0x696e0000),  // name = defined_in
                        CORBA::tk_alias, // typecode kind for typedefs
            72, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              35,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5265),
              ACE_NTOHL (0x706f7369),
              ACE_NTOHL (0x746f7279),
              ACE_NTOHL (0x49643a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                            13,
              ACE_NTOHL (0x5265706f),
              ACE_NTOHL (0x7369746f),
              ACE_NTOHL (0x72794964),
              ACE_NTOHL (0x0),  // name = RepositoryId
                            CORBA::tk_string,
              0U, // string length

            8,
            ACE_NTOHL (0x76657273),
            ACE_NTOHL (0x696f6e00),  // name = version
                        CORBA::tk_alias, // typecode kind for typedefs
            68, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              34,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5665),
              ACE_NTOHL (0x7273696f),
              ACE_NTOHL (0x6e537065),
              ACE_NTOHL (0x633a312e),
              ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                            12,
              ACE_NTOHL (0x56657273),
              ACE_NTOHL (0x696f6e53),
              ACE_NTOHL (0x70656300),  // name = VersionSpec
                            CORBA::tk_string,
              0U, // string length

            5,
            ACE_NTOHL (0x74797065),
            ACE_NTOHL (0x0),  // name = type
                        CORBA::tk_TypeCode,


          0U,



    0U,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_ExtAttrDescriptionSeq (
    CORBA::tk_alias,
    sizeof (_oc_CORBA_ExtAttrDescriptionSeq),
    (char *) &_oc_CORBA_ExtAttrDescriptionSeq,
    0,
    sizeof (CORBA::ExtAttrDescriptionSeq)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ExtAttrDescriptionSeq =
    &_tc_TAO_tc_CORBA_ExtAttrDescriptionSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_InterfaceDef_FullInterfaceDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  60,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f496e),
  ACE_NTOHL (0x74657266),
  ACE_NTOHL (0x61636544),
  ACE_NTOHL (0x65662f46),
  ACE_NTOHL (0x756c6c49),
  ACE_NTOHL (0x6e746572),
  ACE_NTOHL (0x66616365),
  ACE_NTOHL (0x44657363),
  ACE_NTOHL (0x72697074),
  ACE_NTOHL (0x696f6e3a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/InterfaceDef/FullInterfaceDescription:1.0
    25,
  ACE_NTOHL (0x46756c6c),
  ACE_NTOHL (0x496e7465),
  ACE_NTOHL (0x72666163),
  ACE_NTOHL (0x65446573),
  ACE_NTOHL (0x63726970),
  ACE_NTOHL (0x74696f6e),
  ACE_NTOHL (0x0),  // name = FullInterfaceDescription
  8, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  3,
  ACE_NTOHL (0x69640000),  // name = id
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x64656669),
  ACE_NTOHL (0x6e65645f),
  ACE_NTOHL (0x696e0000),  // name = defined_in
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  8,
  ACE_NTOHL (0x76657273),
  ACE_NTOHL (0x696f6e00),  // name = version
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    34,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5665),
    ACE_NTOHL (0x7273696f),
    ACE_NTOHL (0x6e537065),
    ACE_NTOHL (0x633a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
        12,
    ACE_NTOHL (0x56657273),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x70656300),  // name = VersionSpec
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x6f706572),
  ACE_NTOHL (0x6174696f),
  ACE_NTOHL (0x6e730000),  // name = operations
    CORBA::tk_alias, // typecode kind for typedefs
  2036, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    39,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4f70),
    ACE_NTOHL (0x44657363),
    ACE_NTOHL (0x72697074),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x65713a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OpDescriptionSeq:1.0
        17,
    ACE_NTOHL (0x4f704465),
    ACE_NTOHL (0x73637269),
    ACE_NTOHL (0x7074696f),
    ACE_NTOHL (0x6e536571),
    ACE_NTOHL (0x0),  // name = OpDescriptionSeq
        CORBA::tk_sequence, // typecode kind
    1956, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      1940, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        43,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4f70),
        ACE_NTOHL (0x65726174),
        ACE_NTOHL (0x696f6e44),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e3a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OperationDescription:1.0
                21,
        ACE_NTOHL (0x4f706572),
        ACE_NTOHL (0x6174696f),
        ACE_NTOHL (0x6e446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x0),  // name = OperationDescription
        9, // member count
                5,
        ACE_NTOHL (0x6e616d65),
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length

        3,
        ACE_NTOHL (0x69640000),  // name = id
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        11,
        ACE_NTOHL (0x64656669),
        ACE_NTOHL (0x6e65645f),
        ACE_NTOHL (0x696e0000),  // name = defined_in
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        8,
        ACE_NTOHL (0x76657273),
        ACE_NTOHL (0x696f6e00),  // name = version
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          34,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5665),
          ACE_NTOHL (0x7273696f),
          ACE_NTOHL (0x6e537065),
          ACE_NTOHL (0x633a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                    12,
          ACE_NTOHL (0x56657273),
          ACE_NTOHL (0x696f6e53),
          ACE_NTOHL (0x70656300),  // name = VersionSpec
                    CORBA::tk_string,
          0U, // string length

        7,
        ACE_NTOHL (0x72657375),
        ACE_NTOHL (0x6c740000),  // name = result
                CORBA::tk_TypeCode,

        5,
        ACE_NTOHL (0x6d6f6465),
        ACE_NTOHL (0x0),  // name = mode
                CORBA::tk_enum, // typecode kind
        100, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
          36,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4f70),
          ACE_NTOHL (0x65726174),
          ACE_NTOHL (0x696f6e4d),
          ACE_NTOHL (0x6f64653a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/OperationMode:1.0
          14,
          ACE_NTOHL (0x4f706572),
          ACE_NTOHL (0x6174696f),
          ACE_NTOHL (0x6e4d6f64),
          ACE_NTOHL (0x65000000),  // name = OperationMode
          2, // member count
          10,
          ACE_NTOHL (0x4f505f4e),
          ACE_NTOHL (0x4f524d41),
          ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
          10,
          ACE_NTOHL (0x4f505f4f),
          ACE_NTOHL (0x4e455741),
          ACE_NTOHL (0x59000000),  // name = OP_ONEWAY

        9,
        ACE_NTOHL (0x636f6e74),
        ACE_NTOHL (0x65787473),
        ACE_NTOHL (0x0),  // name = contexts
                CORBA::tk_alias, // typecode kind for typedefs
        236, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f436f),
          ACE_NTOHL (0x6e746578),
          ACE_NTOHL (0x74496453),
          ACE_NTOHL (0x65713a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ContextIdSeq:1.0
                    13,
          ACE_NTOHL (0x436f6e74),
          ACE_NTOHL (0x65787449),
          ACE_NTOHL (0x64536571),
          ACE_NTOHL (0x0),  // name = ContextIdSeq
                    CORBA::tk_sequence, // typecode kind
          164, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_alias, // typecode kind for typedefs
            148, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              40,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f436f),
              ACE_NTOHL (0x6e746578),
              ACE_NTOHL (0x74496465),
              ACE_NTOHL (0x6e746966),
              ACE_NTOHL (0x6965723a),
              ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ContextIdentifier:1.0
                            18,
              ACE_NTOHL (0x436f6e74),
              ACE_NTOHL (0x65787449),
              ACE_NTOHL (0x64656e74),
              ACE_NTOHL (0x69666965),
              ACE_NTOHL (0x72000000),  // name = ContextIdentifier
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                33,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4964),
                ACE_NTOHL (0x656e7469),
                ACE_NTOHL (0x66696572),
                ACE_NTOHL (0x3a312e30),
                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                                11,
                ACE_NTOHL (0x4964656e),
                ACE_NTOHL (0x74696669),
                ACE_NTOHL (0x65720000),  // name = Identifier
                                CORBA::tk_string,
                0U, // string length


            0U,


        11,
        ACE_NTOHL (0x70617261),
        ACE_NTOHL (0x6d657465),
        ACE_NTOHL (0x72730000),  // name = parameters
                CORBA::tk_alias, // typecode kind for typedefs
        496, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          40,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5061),
          ACE_NTOHL (0x72446573),
          ACE_NTOHL (0x63726970),
          ACE_NTOHL (0x74696f6e),
          ACE_NTOHL (0x5365713a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParDescriptionSeq:1.0
                    18,
          ACE_NTOHL (0x50617244),
          ACE_NTOHL (0x65736372),
          ACE_NTOHL (0x69707469),
          ACE_NTOHL (0x6f6e5365),
          ACE_NTOHL (0x71000000),  // name = ParDescriptionSeq
                    CORBA::tk_sequence, // typecode kind
          416, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_struct, // typecode kind
            400, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              43,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5061),
              ACE_NTOHL (0x72616d65),
              ACE_NTOHL (0x74657244),
              ACE_NTOHL (0x65736372),
              ACE_NTOHL (0x69707469),
              ACE_NTOHL (0x6f6e3a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ParameterDescription:1.0
                            21,
              ACE_NTOHL (0x50617261),
              ACE_NTOHL (0x6d657465),
              ACE_NTOHL (0x72446573),
              ACE_NTOHL (0x63726970),
              ACE_NTOHL (0x74696f6e),
              ACE_NTOHL (0x0),  // name = ParameterDescription
              4, // member count
                            5,
              ACE_NTOHL (0x6e616d65),
              ACE_NTOHL (0x0),  // name = name
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                33,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4964),
                ACE_NTOHL (0x656e7469),
                ACE_NTOHL (0x66696572),
                ACE_NTOHL (0x3a312e30),
                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                                11,
                ACE_NTOHL (0x4964656e),
                ACE_NTOHL (0x74696669),
                ACE_NTOHL (0x65720000),  // name = Identifier
                                CORBA::tk_string,
                0U, // string length

              5,
              ACE_NTOHL (0x74797065),
              ACE_NTOHL (0x0),  // name = type
                            CORBA::tk_TypeCode,

              9,
              ACE_NTOHL (0x74797065),
              ACE_NTOHL (0x5f646566),
              ACE_NTOHL (0x0),  // name = type_def
                            CORBA::tk_objref, // typecode kind
              52, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                30,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4944),
                ACE_NTOHL (0x4c547970),
                ACE_NTOHL (0x653a312e),
                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
                                8,
                ACE_NTOHL (0x49444c54),
                ACE_NTOHL (0x79706500),  // name = IDLType

              5,
              ACE_NTOHL (0x6d6f6465),
              ACE_NTOHL (0x0),  // name = mode
                            CORBA::tk_enum, // typecode kind
              116, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
                36,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5061),
                ACE_NTOHL (0x72616d65),
                ACE_NTOHL (0x7465724d),
                ACE_NTOHL (0x6f64653a),
                ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
                14,
                ACE_NTOHL (0x50617261),
                ACE_NTOHL (0x6d657465),
                ACE_NTOHL (0x724d6f64),
                ACE_NTOHL (0x65000000),  // name = ParameterMode
                3, // member count
                9,
                ACE_NTOHL (0x50415241),
                ACE_NTOHL (0x4d5f494e),
                ACE_NTOHL (0x0),  // name = PARAM_IN
                10,
                ACE_NTOHL (0x50415241),
                ACE_NTOHL (0x4d5f4f55),
                ACE_NTOHL (0x54000000),  // name = PARAM_OUT
                12,
                ACE_NTOHL (0x50415241),
                ACE_NTOHL (0x4d5f494e),
                ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT


            0U,


        11,
        ACE_NTOHL (0x65786365),
        ACE_NTOHL (0x7074696f),
        ACE_NTOHL (0x6e730000),  // name = exceptions
                CORBA::tk_alias, // typecode kind for typedefs
        556, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          40,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4578),
          ACE_NTOHL (0x63446573),
          ACE_NTOHL (0x63726970),
          ACE_NTOHL (0x74696f6e),
          ACE_NTOHL (0x5365713a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
                    18,
          ACE_NTOHL (0x45786344),
          ACE_NTOHL (0x65736372),
          ACE_NTOHL (0x69707469),
          ACE_NTOHL (0x6f6e5365),
          ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
                    CORBA::tk_sequence, // typecode kind
          476, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_struct, // typecode kind
            460, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              43,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4578),
              ACE_NTOHL (0x63657074),
              ACE_NTOHL (0x696f6e44),
              ACE_NTOHL (0x65736372),
              ACE_NTOHL (0x69707469),
              ACE_NTOHL (0x6f6e3a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                            21,
              ACE_NTOHL (0x45786365),
              ACE_NTOHL (0x7074696f),
              ACE_NTOHL (0x6e446573),
              ACE_NTOHL (0x63726970),
              ACE_NTOHL (0x74696f6e),
              ACE_NTOHL (0x0),  // name = ExceptionDescription
              5, // member count
                            5,
              ACE_NTOHL (0x6e616d65),
              ACE_NTOHL (0x0),  // name = name
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                33,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4964),
                ACE_NTOHL (0x656e7469),
                ACE_NTOHL (0x66696572),
                ACE_NTOHL (0x3a312e30),
                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                                11,
                ACE_NTOHL (0x4964656e),
                ACE_NTOHL (0x74696669),
                ACE_NTOHL (0x65720000),  // name = Identifier
                                CORBA::tk_string,
                0U, // string length

              3,
              ACE_NTOHL (0x69640000),  // name = id
                            CORBA::tk_alias, // typecode kind for typedefs
              72, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                35,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5265),
                ACE_NTOHL (0x706f7369),
                ACE_NTOHL (0x746f7279),
                ACE_NTOHL (0x49643a31),
                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                                13,
                ACE_NTOHL (0x5265706f),
                ACE_NTOHL (0x7369746f),
                ACE_NTOHL (0x72794964),
                ACE_NTOHL (0x0),  // name = RepositoryId
                                CORBA::tk_string,
                0U, // string length

              11,
              ACE_NTOHL (0x64656669),
              ACE_NTOHL (0x6e65645f),
              ACE_NTOHL (0x696e0000),  // name = defined_in
                            CORBA::tk_alias, // typecode kind for typedefs
              72, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                35,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5265),
                ACE_NTOHL (0x706f7369),
                ACE_NTOHL (0x746f7279),
                ACE_NTOHL (0x49643a31),
                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                                13,
                ACE_NTOHL (0x5265706f),
                ACE_NTOHL (0x7369746f),
                ACE_NTOHL (0x72794964),
                ACE_NTOHL (0x0),  // name = RepositoryId
                                CORBA::tk_string,
                0U, // string length

              8,
              ACE_NTOHL (0x76657273),
              ACE_NTOHL (0x696f6e00),  // name = version
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                34,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5665),
                ACE_NTOHL (0x7273696f),
                ACE_NTOHL (0x6e537065),
                ACE_NTOHL (0x633a312e),
                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                                12,
                ACE_NTOHL (0x56657273),
                ACE_NTOHL (0x696f6e53),
                ACE_NTOHL (0x70656300),  // name = VersionSpec
                                CORBA::tk_string,
                0U, // string length

              5,
              ACE_NTOHL (0x74797065),
              ACE_NTOHL (0x0),  // name = type
                            CORBA::tk_TypeCode,


            0U,



      0U,


  11,
  ACE_NTOHL (0x61747472),
  ACE_NTOHL (0x69627574),
  ACE_NTOHL (0x65730000),  // name = attributes
    CORBA::tk_alias, // typecode kind for typedefs
  684, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    41,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4174),
    ACE_NTOHL (0x74724465),
    ACE_NTOHL (0x73637269),
    ACE_NTOHL (0x7074696f),
    ACE_NTOHL (0x6e536571),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/AttrDescriptionSeq:1.0
        19,
    ACE_NTOHL (0x41747472),
    ACE_NTOHL (0x44657363),
    ACE_NTOHL (0x72697074),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x65710000),  // name = AttrDescriptionSeq
        CORBA::tk_sequence, // typecode kind
    600, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      584, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        43,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4174),
        ACE_NTOHL (0x74726962),
        ACE_NTOHL (0x75746544),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e3a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/AttributeDescription:1.0
                21,
        ACE_NTOHL (0x41747472),
        ACE_NTOHL (0x69627574),
        ACE_NTOHL (0x65446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x0),  // name = AttributeDescription
        6, // member count
                5,
        ACE_NTOHL (0x6e616d65),
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length

        3,
        ACE_NTOHL (0x69640000),  // name = id
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        11,
        ACE_NTOHL (0x64656669),
        ACE_NTOHL (0x6e65645f),
        ACE_NTOHL (0x696e0000),  // name = defined_in
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        8,
        ACE_NTOHL (0x76657273),
        ACE_NTOHL (0x696f6e00),  // name = version
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          34,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5665),
          ACE_NTOHL (0x7273696f),
          ACE_NTOHL (0x6e537065),
          ACE_NTOHL (0x633a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                    12,
          ACE_NTOHL (0x56657273),
          ACE_NTOHL (0x696f6e53),
          ACE_NTOHL (0x70656300),  // name = VersionSpec
                    CORBA::tk_string,
          0U, // string length

        5,
        ACE_NTOHL (0x74797065),
        ACE_NTOHL (0x0),  // name = type
                CORBA::tk_TypeCode,

        5,
        ACE_NTOHL (0x6d6f6465),
        ACE_NTOHL (0x0),  // name = mode
                CORBA::tk_enum, // typecode kind
        104, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
          36,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4174),
          ACE_NTOHL (0x74726962),
          ACE_NTOHL (0x7574654d),
          ACE_NTOHL (0x6f64653a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
          14,
          ACE_NTOHL (0x41747472),
          ACE_NTOHL (0x69627574),
          ACE_NTOHL (0x654d6f64),
          ACE_NTOHL (0x65000000),  // name = AttributeMode
          2, // member count
          12,
          ACE_NTOHL (0x41545452),
          ACE_NTOHL (0x5f4e4f52),
          ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
          14,
          ACE_NTOHL (0x41545452),
          ACE_NTOHL (0x5f524541),
          ACE_NTOHL (0x444f4e4c),
          ACE_NTOHL (0x59000000),  // name = ATTR_READONLY


      0U,


  16,
  ACE_NTOHL (0x62617365),
  ACE_NTOHL (0x5f696e74),
  ACE_NTOHL (0x65726661),
  ACE_NTOHL (0x63657300),  // name = base_interfaces
    CORBA::tk_alias, // typecode kind for typedefs
  164, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    38,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49645365),
    ACE_NTOHL (0x713a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/RepositoryIdSeq:1.0
        16,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x53657100),  // name = RepositoryIdSeq
        CORBA::tk_sequence, // typecode kind
    88, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      0U,


  5,
  ACE_NTOHL (0x74797065),
  ACE_NTOHL (0x0),  // name = type
    CORBA::tk_TypeCode,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_InterfaceDef_FullInterfaceDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_InterfaceDef_FullInterfaceDescription),
    (char *) &_oc_CORBA_InterfaceDef_FullInterfaceDescription,
    0,
    sizeof (CORBA::InterfaceDef::FullInterfaceDescription)
  );

::CORBA::TypeCode_ptr CORBA::InterfaceDef::_tc_FullInterfaceDescription =
  &_tc_TAO_tc_CORBA_InterfaceDef_FullInterfaceDescription;

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_InterfaceDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f496e),
  ACE_NTOHL (0x74657266),
  ACE_NTOHL (0x61636544),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/InterfaceDef:1.0
    13,
  ACE_NTOHL (0x496e7465),
  ACE_NTOHL (0x72666163),
  ACE_NTOHL (0x65446566),
  ACE_NTOHL (0x0),  // name = InterfaceDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_InterfaceDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_InterfaceDef),
    (char *) &_oc_CORBA_InterfaceDef,
    0,
    sizeof (CORBA::InterfaceDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_InterfaceDef =
    &_tc_TAO_tc_CORBA_InterfaceDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_InterfaceDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f496e),
  ACE_NTOHL (0x74657266),
  ACE_NTOHL (0x61636544),
  ACE_NTOHL (0x65736372),
  ACE_NTOHL (0x69707469),
  ACE_NTOHL (0x6f6e3a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/InterfaceDescription:1.0
    21,
  ACE_NTOHL (0x496e7465),
  ACE_NTOHL (0x72666163),
  ACE_NTOHL (0x65446573),
  ACE_NTOHL (0x63726970),
  ACE_NTOHL (0x74696f6e),
  ACE_NTOHL (0x0),  // name = InterfaceDescription
  5, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  3,
  ACE_NTOHL (0x69640000),  // name = id
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x64656669),
  ACE_NTOHL (0x6e65645f),
  ACE_NTOHL (0x696e0000),  // name = defined_in
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  8,
  ACE_NTOHL (0x76657273),
  ACE_NTOHL (0x696f6e00),  // name = version
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    34,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5665),
    ACE_NTOHL (0x7273696f),
    ACE_NTOHL (0x6e537065),
    ACE_NTOHL (0x633a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
        12,
    ACE_NTOHL (0x56657273),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x70656300),  // name = VersionSpec
        CORBA::tk_string,
    0U, // string length

  16,
  ACE_NTOHL (0x62617365),
  ACE_NTOHL (0x5f696e74),
  ACE_NTOHL (0x65726661),
  ACE_NTOHL (0x63657300),  // name = base_interfaces
    CORBA::tk_alias, // typecode kind for typedefs
  164, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    38,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49645365),
    ACE_NTOHL (0x713a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/RepositoryIdSeq:1.0
        16,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x53657100),  // name = RepositoryIdSeq
        CORBA::tk_sequence, // typecode kind
    88, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      0U,


};

static CORBA::TypeCode _tc_TAO_tc_CORBA_InterfaceDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_InterfaceDescription),
    (char *) &_oc_CORBA_InterfaceDescription,
    0,
    sizeof (CORBA::InterfaceDescription)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_InterfaceDescription =
    &_tc_TAO_tc_CORBA_InterfaceDescription;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  73,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f496e),
  ACE_NTOHL (0x74657266),
  ACE_NTOHL (0x61636541),
  ACE_NTOHL (0x74747245),
  ACE_NTOHL (0x7874656e),
  ACE_NTOHL (0x73696f6e),
  ACE_NTOHL (0x2f457874),
  ACE_NTOHL (0x46756c6c),
  ACE_NTOHL (0x496e7465),
  ACE_NTOHL (0x72666163),
  ACE_NTOHL (0x65446573),
  ACE_NTOHL (0x63726970),
  ACE_NTOHL (0x74696f6e),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/InterfaceAttrExtension/ExtFullInterfaceDescription:1.0
    28,
  ACE_NTOHL (0x45787446),
  ACE_NTOHL (0x756c6c49),
  ACE_NTOHL (0x6e746572),
  ACE_NTOHL (0x66616365),
  ACE_NTOHL (0x44657363),
  ACE_NTOHL (0x72697074),
  ACE_NTOHL (0x696f6e00),  // name = ExtFullInterfaceDescription
  8, // member count
    5,
  ACE_NTOHL (0x6e616d65),
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    33,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4964),
    ACE_NTOHL (0x656e7469),
    ACE_NTOHL (0x66696572),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
        11,
    ACE_NTOHL (0x4964656e),
    ACE_NTOHL (0x74696669),
    ACE_NTOHL (0x65720000),  // name = Identifier
        CORBA::tk_string,
    0U, // string length

  3,
  ACE_NTOHL (0x69640000),  // name = id
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x64656669),
  ACE_NTOHL (0x6e65645f),
  ACE_NTOHL (0x696e0000),  // name = defined_in
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49643a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
        13,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x0),  // name = RepositoryId
        CORBA::tk_string,
    0U, // string length

  8,
  ACE_NTOHL (0x76657273),
  ACE_NTOHL (0x696f6e00),  // name = version
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    34,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5665),
    ACE_NTOHL (0x7273696f),
    ACE_NTOHL (0x6e537065),
    ACE_NTOHL (0x633a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
        12,
    ACE_NTOHL (0x56657273),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x70656300),  // name = VersionSpec
        CORBA::tk_string,
    0U, // string length

  11,
  ACE_NTOHL (0x6f706572),
  ACE_NTOHL (0x6174696f),
  ACE_NTOHL (0x6e730000),  // name = operations
    CORBA::tk_alias, // typecode kind for typedefs
  2036, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    39,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4f70),
    ACE_NTOHL (0x44657363),
    ACE_NTOHL (0x72697074),
    ACE_NTOHL (0x696f6e53),
    ACE_NTOHL (0x65713a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OpDescriptionSeq:1.0
        17,
    ACE_NTOHL (0x4f704465),
    ACE_NTOHL (0x73637269),
    ACE_NTOHL (0x7074696f),
    ACE_NTOHL (0x6e536571),
    ACE_NTOHL (0x0),  // name = OpDescriptionSeq
        CORBA::tk_sequence, // typecode kind
    1956, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      1940, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        43,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4f70),
        ACE_NTOHL (0x65726174),
        ACE_NTOHL (0x696f6e44),
        ACE_NTOHL (0x65736372),
        ACE_NTOHL (0x69707469),
        ACE_NTOHL (0x6f6e3a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OperationDescription:1.0
                21,
        ACE_NTOHL (0x4f706572),
        ACE_NTOHL (0x6174696f),
        ACE_NTOHL (0x6e446573),
        ACE_NTOHL (0x63726970),
        ACE_NTOHL (0x74696f6e),
        ACE_NTOHL (0x0),  // name = OperationDescription
        9, // member count
                5,
        ACE_NTOHL (0x6e616d65),
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length

        3,
        ACE_NTOHL (0x69640000),  // name = id
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        11,
        ACE_NTOHL (0x64656669),
        ACE_NTOHL (0x6e65645f),
        ACE_NTOHL (0x696e0000),  // name = defined_in
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        8,
        ACE_NTOHL (0x76657273),
        ACE_NTOHL (0x696f6e00),  // name = version
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          34,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5665),
          ACE_NTOHL (0x7273696f),
          ACE_NTOHL (0x6e537065),
          ACE_NTOHL (0x633a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                    12,
          ACE_NTOHL (0x56657273),
          ACE_NTOHL (0x696f6e53),
          ACE_NTOHL (0x70656300),  // name = VersionSpec
                    CORBA::tk_string,
          0U, // string length

        7,
        ACE_NTOHL (0x72657375),
        ACE_NTOHL (0x6c740000),  // name = result
                CORBA::tk_TypeCode,

        5,
        ACE_NTOHL (0x6d6f6465),
        ACE_NTOHL (0x0),  // name = mode
                CORBA::tk_enum, // typecode kind
        100, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
          36,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4f70),
          ACE_NTOHL (0x65726174),
          ACE_NTOHL (0x696f6e4d),
          ACE_NTOHL (0x6f64653a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/OperationMode:1.0
          14,
          ACE_NTOHL (0x4f706572),
          ACE_NTOHL (0x6174696f),
          ACE_NTOHL (0x6e4d6f64),
          ACE_NTOHL (0x65000000),  // name = OperationMode
          2, // member count
          10,
          ACE_NTOHL (0x4f505f4e),
          ACE_NTOHL (0x4f524d41),
          ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
          10,
          ACE_NTOHL (0x4f505f4f),
          ACE_NTOHL (0x4e455741),
          ACE_NTOHL (0x59000000),  // name = OP_ONEWAY

        9,
        ACE_NTOHL (0x636f6e74),
        ACE_NTOHL (0x65787473),
        ACE_NTOHL (0x0),  // name = contexts
                CORBA::tk_alias, // typecode kind for typedefs
        236, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f436f),
          ACE_NTOHL (0x6e746578),
          ACE_NTOHL (0x74496453),
          ACE_NTOHL (0x65713a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ContextIdSeq:1.0
                    13,
          ACE_NTOHL (0x436f6e74),
          ACE_NTOHL (0x65787449),
          ACE_NTOHL (0x64536571),
          ACE_NTOHL (0x0),  // name = ContextIdSeq
                    CORBA::tk_sequence, // typecode kind
          164, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_alias, // typecode kind for typedefs
            148, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              40,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f436f),
              ACE_NTOHL (0x6e746578),
              ACE_NTOHL (0x74496465),
              ACE_NTOHL (0x6e746966),
              ACE_NTOHL (0x6965723a),
              ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ContextIdentifier:1.0
                            18,
              ACE_NTOHL (0x436f6e74),
              ACE_NTOHL (0x65787449),
              ACE_NTOHL (0x64656e74),
              ACE_NTOHL (0x69666965),
              ACE_NTOHL (0x72000000),  // name = ContextIdentifier
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                33,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4964),
                ACE_NTOHL (0x656e7469),
                ACE_NTOHL (0x66696572),
                ACE_NTOHL (0x3a312e30),
                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                                11,
                ACE_NTOHL (0x4964656e),
                ACE_NTOHL (0x74696669),
                ACE_NTOHL (0x65720000),  // name = Identifier
                                CORBA::tk_string,
                0U, // string length


            0U,


        11,
        ACE_NTOHL (0x70617261),
        ACE_NTOHL (0x6d657465),
        ACE_NTOHL (0x72730000),  // name = parameters
                CORBA::tk_alias, // typecode kind for typedefs
        496, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          40,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5061),
          ACE_NTOHL (0x72446573),
          ACE_NTOHL (0x63726970),
          ACE_NTOHL (0x74696f6e),
          ACE_NTOHL (0x5365713a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParDescriptionSeq:1.0
                    18,
          ACE_NTOHL (0x50617244),
          ACE_NTOHL (0x65736372),
          ACE_NTOHL (0x69707469),
          ACE_NTOHL (0x6f6e5365),
          ACE_NTOHL (0x71000000),  // name = ParDescriptionSeq
                    CORBA::tk_sequence, // typecode kind
          416, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_struct, // typecode kind
            400, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              43,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f5061),
              ACE_NTOHL (0x72616d65),
              ACE_NTOHL (0x74657244),
              ACE_NTOHL (0x65736372),
              ACE_NTOHL (0x69707469),
              ACE_NTOHL (0x6f6e3a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ParameterDescription:1.0
                            21,
              ACE_NTOHL (0x50617261),
              ACE_NTOHL (0x6d657465),
              ACE_NTOHL (0x72446573),
              ACE_NTOHL (0x63726970),
              ACE_NTOHL (0x74696f6e),
              ACE_NTOHL (0x0),  // name = ParameterDescription
              4, // member count
                            5,
              ACE_NTOHL (0x6e616d65),
              ACE_NTOHL (0x0),  // name = name
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                33,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4964),
                ACE_NTOHL (0x656e7469),
                ACE_NTOHL (0x66696572),
                ACE_NTOHL (0x3a312e30),
                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                                11,
                ACE_NTOHL (0x4964656e),
                ACE_NTOHL (0x74696669),
                ACE_NTOHL (0x65720000),  // name = Identifier
                                CORBA::tk_string,
                0U, // string length

              5,
              ACE_NTOHL (0x74797065),
              ACE_NTOHL (0x0),  // name = type
                            CORBA::tk_TypeCode,

              9,
              ACE_NTOHL (0x74797065),
              ACE_NTOHL (0x5f646566),
              ACE_NTOHL (0x0),  // name = type_def
                            CORBA::tk_objref, // typecode kind
              52, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                30,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4944),
                ACE_NTOHL (0x4c547970),
                ACE_NTOHL (0x653a312e),
                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
                                8,
                ACE_NTOHL (0x49444c54),
                ACE_NTOHL (0x79706500),  // name = IDLType

              5,
              ACE_NTOHL (0x6d6f6465),
              ACE_NTOHL (0x0),  // name = mode
                            CORBA::tk_enum, // typecode kind
              116, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
                36,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5061),
                ACE_NTOHL (0x72616d65),
                ACE_NTOHL (0x7465724d),
                ACE_NTOHL (0x6f64653a),
                ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
                14,
                ACE_NTOHL (0x50617261),
                ACE_NTOHL (0x6d657465),
                ACE_NTOHL (0x724d6f64),
                ACE_NTOHL (0x65000000),  // name = ParameterMode
                3, // member count
                9,
                ACE_NTOHL (0x50415241),
                ACE_NTOHL (0x4d5f494e),
                ACE_NTOHL (0x0),  // name = PARAM_IN
                10,
                ACE_NTOHL (0x50415241),
                ACE_NTOHL (0x4d5f4f55),
                ACE_NTOHL (0x54000000),  // name = PARAM_OUT
                12,
                ACE_NTOHL (0x50415241),
                ACE_NTOHL (0x4d5f494e),
                ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT


            0U,


        11,
        ACE_NTOHL (0x65786365),
        ACE_NTOHL (0x7074696f),
        ACE_NTOHL (0x6e730000),  // name = exceptions
                CORBA::tk_alias, // typecode kind for typedefs
        556, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          40,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4578),
          ACE_NTOHL (0x63446573),
          ACE_NTOHL (0x63726970),
          ACE_NTOHL (0x74696f6e),
          ACE_NTOHL (0x5365713a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
                    18,
          ACE_NTOHL (0x45786344),
          ACE_NTOHL (0x65736372),
          ACE_NTOHL (0x69707469),
          ACE_NTOHL (0x6f6e5365),
          ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
                    CORBA::tk_sequence, // typecode kind
          476, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_struct, // typecode kind
            460, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              43,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4578),
              ACE_NTOHL (0x63657074),
              ACE_NTOHL (0x696f6e44),
              ACE_NTOHL (0x65736372),
              ACE_NTOHL (0x69707469),
              ACE_NTOHL (0x6f6e3a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                            21,
              ACE_NTOHL (0x45786365),
              ACE_NTOHL (0x7074696f),
              ACE_NTOHL (0x6e446573),
              ACE_NTOHL (0x63726970),
              ACE_NTOHL (0x74696f6e),
              ACE_NTOHL (0x0),  // name = ExceptionDescription
              5, // member count
                            5,
              ACE_NTOHL (0x6e616d65),
              ACE_NTOHL (0x0),  // name = name
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                33,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4964),
                ACE_NTOHL (0x656e7469),
                ACE_NTOHL (0x66696572),
                ACE_NTOHL (0x3a312e30),
                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                                11,
                ACE_NTOHL (0x4964656e),
                ACE_NTOHL (0x74696669),
                ACE_NTOHL (0x65720000),  // name = Identifier
                                CORBA::tk_string,
                0U, // string length

              3,
              ACE_NTOHL (0x69640000),  // name = id
                            CORBA::tk_alias, // typecode kind for typedefs
              72, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                35,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5265),
                ACE_NTOHL (0x706f7369),
                ACE_NTOHL (0x746f7279),
                ACE_NTOHL (0x49643a31),
                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                                13,
                ACE_NTOHL (0x5265706f),
                ACE_NTOHL (0x7369746f),
                ACE_NTOHL (0x72794964),
                ACE_NTOHL (0x0),  // name = RepositoryId
                                CORBA::tk_string,
                0U, // string length

              11,
              ACE_NTOHL (0x64656669),
              ACE_NTOHL (0x6e65645f),
              ACE_NTOHL (0x696e0000),  // name = defined_in
                            CORBA::tk_alias, // typecode kind for typedefs
              72, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                35,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5265),
                ACE_NTOHL (0x706f7369),
                ACE_NTOHL (0x746f7279),
                ACE_NTOHL (0x49643a31),
                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                                13,
                ACE_NTOHL (0x5265706f),
                ACE_NTOHL (0x7369746f),
                ACE_NTOHL (0x72794964),
                ACE_NTOHL (0x0),  // name = RepositoryId
                                CORBA::tk_string,
                0U, // string length

              8,
              ACE_NTOHL (0x76657273),
              ACE_NTOHL (0x696f6e00),  // name = version
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                34,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5665),
                ACE_NTOHL (0x7273696f),
                ACE_NTOHL (0x6e537065),
                ACE_NTOHL (0x633a312e),
                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                                12,
                ACE_NTOHL (0x56657273),
                ACE_NTOHL (0x696f6e53),
                ACE_NTOHL (0x70656300),  // name = VersionSpec
                                CORBA::tk_string,
                0U, // string length

              5,
              ACE_NTOHL (0x74797065),
              ACE_NTOHL (0x0),  // name = type
                            CORBA::tk_TypeCode,


            0U,



      0U,


  11,
  ACE_NTOHL (0x61747472),
  ACE_NTOHL (0x69627574),
  ACE_NTOHL (0x65730000),  // name = attributes
    CORBA::tk_alias, // typecode kind for typedefs
  1860, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    44,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4578),
    ACE_NTOHL (0x74417474),
    ACE_NTOHL (0x72446573),
    ACE_NTOHL (0x63726970),
    ACE_NTOHL (0x74696f6e),
    ACE_NTOHL (0x5365713a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExtAttrDescriptionSeq:1.0
        22,
    ACE_NTOHL (0x45787441),
    ACE_NTOHL (0x74747244),
    ACE_NTOHL (0x65736372),
    ACE_NTOHL (0x69707469),
    ACE_NTOHL (0x6f6e5365),
    ACE_NTOHL (0x71000000),  // name = ExtAttrDescriptionSeq
        CORBA::tk_sequence, // typecode kind
    1772, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      1756, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        46,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4578),
        ACE_NTOHL (0x74417474),
        ACE_NTOHL (0x72696275),
        ACE_NTOHL (0x74654465),
        ACE_NTOHL (0x73637269),
        ACE_NTOHL (0x7074696f),
        ACE_NTOHL (0x6e3a312e),
        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ExtAttributeDescription:1.0
                24,
        ACE_NTOHL (0x45787441),
        ACE_NTOHL (0x74747269),
        ACE_NTOHL (0x62757465),
        ACE_NTOHL (0x44657363),
        ACE_NTOHL (0x72697074),
        ACE_NTOHL (0x696f6e00),  // name = ExtAttributeDescription
        8, // member count
                5,
        ACE_NTOHL (0x6e616d65),
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          33,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4964),
          ACE_NTOHL (0x656e7469),
          ACE_NTOHL (0x66696572),
          ACE_NTOHL (0x3a312e30),
          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                    11,
          ACE_NTOHL (0x4964656e),
          ACE_NTOHL (0x74696669),
          ACE_NTOHL (0x65720000),  // name = Identifier
                    CORBA::tk_string,
          0U, // string length

        3,
        ACE_NTOHL (0x69640000),  // name = id
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        11,
        ACE_NTOHL (0x64656669),
        ACE_NTOHL (0x6e65645f),
        ACE_NTOHL (0x696e0000),  // name = defined_in
                CORBA::tk_alias, // typecode kind for typedefs
        72, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          35,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5265),
          ACE_NTOHL (0x706f7369),
          ACE_NTOHL (0x746f7279),
          ACE_NTOHL (0x49643a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                    13,
          ACE_NTOHL (0x5265706f),
          ACE_NTOHL (0x7369746f),
          ACE_NTOHL (0x72794964),
          ACE_NTOHL (0x0),  // name = RepositoryId
                    CORBA::tk_string,
          0U, // string length

        8,
        ACE_NTOHL (0x76657273),
        ACE_NTOHL (0x696f6e00),  // name = version
                CORBA::tk_alias, // typecode kind for typedefs
        68, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          34,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f5665),
          ACE_NTOHL (0x7273696f),
          ACE_NTOHL (0x6e537065),
          ACE_NTOHL (0x633a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                    12,
          ACE_NTOHL (0x56657273),
          ACE_NTOHL (0x696f6e53),
          ACE_NTOHL (0x70656300),  // name = VersionSpec
                    CORBA::tk_string,
          0U, // string length

        5,
        ACE_NTOHL (0x74797065),
        ACE_NTOHL (0x0),  // name = type
                CORBA::tk_TypeCode,

        5,
        ACE_NTOHL (0x6d6f6465),
        ACE_NTOHL (0x0),  // name = mode
                CORBA::tk_enum, // typecode kind
        104, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
          36,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4174),
          ACE_NTOHL (0x74726962),
          ACE_NTOHL (0x7574654d),
          ACE_NTOHL (0x6f64653a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
          14,
          ACE_NTOHL (0x41747472),
          ACE_NTOHL (0x69627574),
          ACE_NTOHL (0x654d6f64),
          ACE_NTOHL (0x65000000),  // name = AttributeMode
          2, // member count
          12,
          ACE_NTOHL (0x41545452),
          ACE_NTOHL (0x5f4e4f52),
          ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
          14,
          ACE_NTOHL (0x41545452),
          ACE_NTOHL (0x5f524541),
          ACE_NTOHL (0x444f4e4c),
          ACE_NTOHL (0x59000000),  // name = ATTR_READONLY

        15,
        ACE_NTOHL (0x6765745f),
        ACE_NTOHL (0x65786365),
        ACE_NTOHL (0x7074696f),
        ACE_NTOHL (0x6e730000),  // name = get_exceptions
                CORBA::tk_alias, // typecode kind for typedefs
        556, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          40,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4578),
          ACE_NTOHL (0x63446573),
          ACE_NTOHL (0x63726970),
          ACE_NTOHL (0x74696f6e),
          ACE_NTOHL (0x5365713a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
                    18,
          ACE_NTOHL (0x45786344),
          ACE_NTOHL (0x65736372),
          ACE_NTOHL (0x69707469),
          ACE_NTOHL (0x6f6e5365),
          ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
                    CORBA::tk_sequence, // typecode kind
          476, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_struct, // typecode kind
            460, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              43,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4578),
              ACE_NTOHL (0x63657074),
              ACE_NTOHL (0x696f6e44),
              ACE_NTOHL (0x65736372),
              ACE_NTOHL (0x69707469),
              ACE_NTOHL (0x6f6e3a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                            21,
              ACE_NTOHL (0x45786365),
              ACE_NTOHL (0x7074696f),
              ACE_NTOHL (0x6e446573),
              ACE_NTOHL (0x63726970),
              ACE_NTOHL (0x74696f6e),
              ACE_NTOHL (0x0),  // name = ExceptionDescription
              5, // member count
                            5,
              ACE_NTOHL (0x6e616d65),
              ACE_NTOHL (0x0),  // name = name
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                33,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4964),
                ACE_NTOHL (0x656e7469),
                ACE_NTOHL (0x66696572),
                ACE_NTOHL (0x3a312e30),
                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                                11,
                ACE_NTOHL (0x4964656e),
                ACE_NTOHL (0x74696669),
                ACE_NTOHL (0x65720000),  // name = Identifier
                                CORBA::tk_string,
                0U, // string length

              3,
              ACE_NTOHL (0x69640000),  // name = id
                            CORBA::tk_alias, // typecode kind for typedefs
              72, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                35,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5265),
                ACE_NTOHL (0x706f7369),
                ACE_NTOHL (0x746f7279),
                ACE_NTOHL (0x49643a31),
                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                                13,
                ACE_NTOHL (0x5265706f),
                ACE_NTOHL (0x7369746f),
                ACE_NTOHL (0x72794964),
                ACE_NTOHL (0x0),  // name = RepositoryId
                                CORBA::tk_string,
                0U, // string length

              11,
              ACE_NTOHL (0x64656669),
              ACE_NTOHL (0x6e65645f),
              ACE_NTOHL (0x696e0000),  // name = defined_in
                            CORBA::tk_alias, // typecode kind for typedefs
              72, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                35,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5265),
                ACE_NTOHL (0x706f7369),
                ACE_NTOHL (0x746f7279),
                ACE_NTOHL (0x49643a31),
                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                                13,
                ACE_NTOHL (0x5265706f),
                ACE_NTOHL (0x7369746f),
                ACE_NTOHL (0x72794964),
                ACE_NTOHL (0x0),  // name = RepositoryId
                                CORBA::tk_string,
                0U, // string length

              8,
              ACE_NTOHL (0x76657273),
              ACE_NTOHL (0x696f6e00),  // name = version
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                34,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5665),
                ACE_NTOHL (0x7273696f),
                ACE_NTOHL (0x6e537065),
                ACE_NTOHL (0x633a312e),
                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                                12,
                ACE_NTOHL (0x56657273),
                ACE_NTOHL (0x696f6e53),
                ACE_NTOHL (0x70656300),  // name = VersionSpec
                                CORBA::tk_string,
                0U, // string length

              5,
              ACE_NTOHL (0x74797065),
              ACE_NTOHL (0x0),  // name = type
                            CORBA::tk_TypeCode,


            0U,


        15,
        ACE_NTOHL (0x7075745f),
        ACE_NTOHL (0x65786365),
        ACE_NTOHL (0x7074696f),
        ACE_NTOHL (0x6e730000),  // name = put_exceptions
                CORBA::tk_alias, // typecode kind for typedefs
        556, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          40,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4578),
          ACE_NTOHL (0x63446573),
          ACE_NTOHL (0x63726970),
          ACE_NTOHL (0x74696f6e),
          ACE_NTOHL (0x5365713a),
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
                    18,
          ACE_NTOHL (0x45786344),
          ACE_NTOHL (0x65736372),
          ACE_NTOHL (0x69707469),
          ACE_NTOHL (0x6f6e5365),
          ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
                    CORBA::tk_sequence, // typecode kind
          476, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_struct, // typecode kind
            460, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              43,
              ACE_NTOHL (0x49444c3a),
              ACE_NTOHL (0x6f6d672e),
              ACE_NTOHL (0x6f72672f),
              ACE_NTOHL (0x434f5242),
              ACE_NTOHL (0x412f4578),
              ACE_NTOHL (0x63657074),
              ACE_NTOHL (0x696f6e44),
              ACE_NTOHL (0x65736372),
              ACE_NTOHL (0x69707469),
              ACE_NTOHL (0x6f6e3a31),
              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
                            21,
              ACE_NTOHL (0x45786365),
              ACE_NTOHL (0x7074696f),
              ACE_NTOHL (0x6e446573),
              ACE_NTOHL (0x63726970),
              ACE_NTOHL (0x74696f6e),
              ACE_NTOHL (0x0),  // name = ExceptionDescription
              5, // member count
                            5,
              ACE_NTOHL (0x6e616d65),
              ACE_NTOHL (0x0),  // name = name
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                33,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f4964),
                ACE_NTOHL (0x656e7469),
                ACE_NTOHL (0x66696572),
                ACE_NTOHL (0x3a312e30),
                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
                                11,
                ACE_NTOHL (0x4964656e),
                ACE_NTOHL (0x74696669),
                ACE_NTOHL (0x65720000),  // name = Identifier
                                CORBA::tk_string,
                0U, // string length

              3,
              ACE_NTOHL (0x69640000),  // name = id
                            CORBA::tk_alias, // typecode kind for typedefs
              72, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                35,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5265),
                ACE_NTOHL (0x706f7369),
                ACE_NTOHL (0x746f7279),
                ACE_NTOHL (0x49643a31),
                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                                13,
                ACE_NTOHL (0x5265706f),
                ACE_NTOHL (0x7369746f),
                ACE_NTOHL (0x72794964),
                ACE_NTOHL (0x0),  // name = RepositoryId
                                CORBA::tk_string,
                0U, // string length

              11,
              ACE_NTOHL (0x64656669),
              ACE_NTOHL (0x6e65645f),
              ACE_NTOHL (0x696e0000),  // name = defined_in
                            CORBA::tk_alias, // typecode kind for typedefs
              72, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                35,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5265),
                ACE_NTOHL (0x706f7369),
                ACE_NTOHL (0x746f7279),
                ACE_NTOHL (0x49643a31),
                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                                13,
                ACE_NTOHL (0x5265706f),
                ACE_NTOHL (0x7369746f),
                ACE_NTOHL (0x72794964),
                ACE_NTOHL (0x0),  // name = RepositoryId
                                CORBA::tk_string,
                0U, // string length

              8,
              ACE_NTOHL (0x76657273),
              ACE_NTOHL (0x696f6e00),  // name = version
                            CORBA::tk_alias, // typecode kind for typedefs
              68, // encapsulation length
                TAO_ENCAP_BYTE_ORDER, // byte order
                34,
                ACE_NTOHL (0x49444c3a),
                ACE_NTOHL (0x6f6d672e),
                ACE_NTOHL (0x6f72672f),
                ACE_NTOHL (0x434f5242),
                ACE_NTOHL (0x412f5665),
                ACE_NTOHL (0x7273696f),
                ACE_NTOHL (0x6e537065),
                ACE_NTOHL (0x633a312e),
                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
                                12,
                ACE_NTOHL (0x56657273),
                ACE_NTOHL (0x696f6e53),
                ACE_NTOHL (0x70656300),  // name = VersionSpec
                                CORBA::tk_string,
                0U, // string length

              5,
              ACE_NTOHL (0x74797065),
              ACE_NTOHL (0x0),  // name = type
                            CORBA::tk_TypeCode,


            0U,



      0U,


  16,
  ACE_NTOHL (0x62617365),
  ACE_NTOHL (0x5f696e74),
  ACE_NTOHL (0x65726661),
  ACE_NTOHL (0x63657300),  // name = base_interfaces
    CORBA::tk_alias, // typecode kind for typedefs
  164, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    38,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f5265),
    ACE_NTOHL (0x706f7369),
    ACE_NTOHL (0x746f7279),
    ACE_NTOHL (0x49645365),
    ACE_NTOHL (0x713a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/RepositoryIdSeq:1.0
        16,
    ACE_NTOHL (0x5265706f),
    ACE_NTOHL (0x7369746f),
    ACE_NTOHL (0x72794964),
    ACE_NTOHL (0x53657100),  // name = RepositoryIdSeq
        CORBA::tk_sequence, // typecode kind
    88, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        35,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f5265),
        ACE_NTOHL (0x706f7369),
        ACE_NTOHL (0x746f7279),
        ACE_NTOHL (0x49643a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
                13,
        ACE_NTOHL (0x5265706f),
        ACE_NTOHL (0x7369746f),
        ACE_NTOHL (0x72794964),
        ACE_NTOHL (0x0),  // name = RepositoryId
                CORBA::tk_string,
        0U, // string length

      0U,


  5,
  ACE_NTOHL (0x74797065),
  ACE_NTOHL (0x0),  // name = type
    CORBA::tk_TypeCode,

};

static CORBA::TypeCode _tc_TAO_tc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription (
    CORBA::tk_struct,
    sizeof (_oc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription),
    (char *) &_oc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription,
    0,
    sizeof (CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription)
  );

::CORBA::TypeCode_ptr CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription =
  &_tc_TAO_tc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription;

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_InterfaceAttrExtension[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  45,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f496e),
  ACE_NTOHL (0x74657266),
  ACE_NTOHL (0x61636541),
  ACE_NTOHL (0x74747245),
  ACE_NTOHL (0x7874656e),
  ACE_NTOHL (0x73696f6e),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/InterfaceAttrExtension:1.0
    23,
  ACE_NTOHL (0x496e7465),
  ACE_NTOHL (0x72666163),
  ACE_NTOHL (0x65417474),
  ACE_NTOHL (0x72457874),
  ACE_NTOHL (0x656e7369),
  ACE_NTOHL (0x6f6e0000),  // name = InterfaceAttrExtension
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_InterfaceAttrExtension (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_InterfaceAttrExtension),
    (char *) &_oc_CORBA_InterfaceAttrExtension,
    0,
    sizeof (CORBA::InterfaceAttrExtension)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_InterfaceAttrExtension =
    &_tc_TAO_tc_CORBA_InterfaceAttrExtension;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ExtInterfaceDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4578),
  ACE_NTOHL (0x74496e74),
  ACE_NTOHL (0x65726661),
  ACE_NTOHL (0x63654465),
  ACE_NTOHL (0x663a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ExtInterfaceDef:1.0
    16,
  ACE_NTOHL (0x45787449),
  ACE_NTOHL (0x6e746572),
  ACE_NTOHL (0x66616365),
  ACE_NTOHL (0x44656600),  // name = ExtInterfaceDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_ExtInterfaceDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_ExtInterfaceDef),
    (char *) &_oc_CORBA_ExtInterfaceDef,
    0,
    sizeof (CORBA::ExtInterfaceDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ExtInterfaceDef =
    &_tc_TAO_tc_CORBA_ExtInterfaceDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_AbstractInterfaceDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4162),
  ACE_NTOHL (0x73747261),
  ACE_NTOHL (0x6374496e),
  ACE_NTOHL (0x74657266),
  ACE_NTOHL (0x61636544),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/AbstractInterfaceDef:1.0
    21,
  ACE_NTOHL (0x41627374),
  ACE_NTOHL (0x72616374),
  ACE_NTOHL (0x496e7465),
  ACE_NTOHL (0x72666163),
  ACE_NTOHL (0x65446566),
  ACE_NTOHL (0x0),  // name = AbstractInterfaceDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_AbstractInterfaceDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_AbstractInterfaceDef),
    (char *) &_oc_CORBA_AbstractInterfaceDef,
    0,
    sizeof (CORBA::AbstractInterfaceDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_AbstractInterfaceDef =
    &_tc_TAO_tc_CORBA_AbstractInterfaceDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ExtAbstractInterfaceDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  46,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4578),
  ACE_NTOHL (0x74416273),
  ACE_NTOHL (0x74726163),
  ACE_NTOHL (0x74496e74),
  ACE_NTOHL (0x65726661),
  ACE_NTOHL (0x63654465),
  ACE_NTOHL (0x663a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0
    24,
  ACE_NTOHL (0x45787441),
  ACE_NTOHL (0x62737472),
  ACE_NTOHL (0x61637449),
  ACE_NTOHL (0x6e746572),
  ACE_NTOHL (0x66616365),
  ACE_NTOHL (0x44656600),  // name = ExtAbstractInterfaceDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_ExtAbstractInterfaceDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_ExtAbstractInterfaceDef),
    (char *) &_oc_CORBA_ExtAbstractInterfaceDef,
    0,
    sizeof (CORBA::ExtAbstractInterfaceDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ExtAbstractInterfaceDef =
    &_tc_TAO_tc_CORBA_ExtAbstractInterfaceDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_LocalInterfaceDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4c6f),
  ACE_NTOHL (0x63616c49),
  ACE_NTOHL (0x6e746572),
  ACE_NTOHL (0x66616365),
  ACE_NTOHL (0x4465663a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/LocalInterfaceDef:1.0
    18,
  ACE_NTOHL (0x4c6f6361),
  ACE_NTOHL (0x6c496e74),
  ACE_NTOHL (0x65726661),
  ACE_NTOHL (0x63654465),
  ACE_NTOHL (0x66000000),  // name = LocalInterfaceDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_LocalInterfaceDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_LocalInterfaceDef),
    (char *) &_oc_CORBA_LocalInterfaceDef,
    0,
    sizeof (CORBA::LocalInterfaceDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_LocalInterfaceDef =
    &_tc_TAO_tc_CORBA_LocalInterfaceDef;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_CORBA_ExtLocalInterfaceDef[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f4578),
  ACE_NTOHL (0x744c6f63),
  ACE_NTOHL (0x616c496e),
  ACE_NTOHL (0x74657266),
  ACE_NTOHL (0x61636544),
  ACE_NTOHL (0x65663a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0
    21,
  ACE_NTOHL (0x4578744c),
  ACE_NTOHL (0x6f63616c),
  ACE_NTOHL (0x496e7465),
  ACE_NTOHL (0x72666163),
  ACE_NTOHL (0x65446566),
  ACE_NTOHL (0x0),  // name = ExtLocalInterfaceDef
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_ExtLocalInterfaceDef (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_ExtLocalInterfaceDef),
    (char *) &_oc_CORBA_ExtLocalInterfaceDef,
    0,
    sizeof (CORBA::ExtLocalInterfaceDef)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_ExtLocalInterfaceDef =
    &_tc_TAO_tc_CORBA_ExtLocalInterfaceDef;
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveKind _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::PrimitiveKind>::insert (
      _tao_any,
      CORBA::_tc_PrimitiveKind,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::PrimitiveKind &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::PrimitiveKind>::extract (
        _tao_any,
        CORBA::_tc_PrimitiveKind,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::Repository>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Repository_ptr _tao_elem
  )
{
  CORBA::Repository_ptr _tao_objptr =
    CORBA::Repository::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Repository_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::Repository>::insert (
      _tao_any,
      CORBA::Repository::_tao_any_destructor,
      CORBA::_tc_Repository,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Repository_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::Repository>::extract (
        _tao_any,
        CORBA::Repository::_tao_any_destructor,
        CORBA::_tc_Repository,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::ModuleDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr _tao_elem
  )
{
  CORBA::ModuleDef_ptr _tao_objptr =
    CORBA::ModuleDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ModuleDef>::insert (
      _tao_any,
      CORBA::ModuleDef::_tao_any_destructor,
      CORBA::_tc_ModuleDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ModuleDef>::extract (
        _tao_any,
        CORBA::ModuleDef::_tao_any_destructor,
        CORBA::_tc_ModuleDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ModuleDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::insert_copy (
      _tao_any,
      CORBA::ModuleDescription::_tao_any_destructor,
      CORBA::_tc_ModuleDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::insert (
      _tao_any,
      CORBA::ModuleDescription::_tao_any_destructor,
      CORBA::_tc_ModuleDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ModuleDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::ModuleDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ModuleDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::extract (
        _tao_any,
        CORBA::ModuleDescription::_tao_any_destructor,
        CORBA::_tc_ModuleDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::ConstantDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr _tao_elem
  )
{
  CORBA::ConstantDef_ptr _tao_objptr =
    CORBA::ConstantDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ConstantDef>::insert (
      _tao_any,
      CORBA::ConstantDef::_tao_any_destructor,
      CORBA::_tc_ConstantDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ConstantDef>::extract (
        _tao_any,
        CORBA::ConstantDef::_tao_any_destructor,
        CORBA::_tc_ConstantDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ConstantDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::insert_copy (
      _tao_any,
      CORBA::ConstantDescription::_tao_any_destructor,
      CORBA::_tc_ConstantDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::insert (
      _tao_any,
      CORBA::ConstantDescription::_tao_any_destructor,
      CORBA::_tc_ConstantDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ConstantDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::ConstantDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ConstantDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::extract (
        _tao_any,
        CORBA::ConstantDescription::_tao_any_destructor,
        CORBA::_tc_ConstantDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::StructDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructDef_ptr _tao_elem
  )
{
  CORBA::StructDef_ptr _tao_objptr =
    CORBA::StructDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::StructDef>::insert (
      _tao_any,
      CORBA::StructDef::_tao_any_destructor,
      CORBA::_tc_StructDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StructDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::StructDef>::extract (
        _tao_any,
        CORBA::StructDef::_tao_any_destructor,
        CORBA::_tc_StructDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::UnionDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr _tao_elem
  )
{
  CORBA::UnionDef_ptr _tao_objptr =
    CORBA::UnionDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::UnionDef>::insert (
      _tao_any,
      CORBA::UnionDef::_tao_any_destructor,
      CORBA::_tc_UnionDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::UnionDef>::extract (
        _tao_any,
        CORBA::UnionDef::_tao_any_destructor,
        CORBA::_tc_UnionDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::EnumDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr _tao_elem
  )
{
  CORBA::EnumDef_ptr _tao_objptr =
    CORBA::EnumDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::EnumDef>::insert (
      _tao_any,
      CORBA::EnumDef::_tao_any_destructor,
      CORBA::_tc_EnumDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::EnumDef>::extract (
        _tao_any,
        CORBA::EnumDef::_tao_any_destructor,
        CORBA::_tc_EnumDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::AliasDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr _tao_elem
  )
{
  CORBA::AliasDef_ptr _tao_objptr =
    CORBA::AliasDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AliasDef>::insert (
      _tao_any,
      CORBA::AliasDef::_tao_any_destructor,
      CORBA::_tc_AliasDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AliasDef>::extract (
        _tao_any,
        CORBA::AliasDef::_tao_any_destructor,
        CORBA::_tc_AliasDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::NativeDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr _tao_elem
  )
{
  CORBA::NativeDef_ptr _tao_objptr =
    CORBA::NativeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::NativeDef>::insert (
      _tao_any,
      CORBA::NativeDef::_tao_any_destructor,
      CORBA::_tc_NativeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::NativeDef>::extract (
        _tao_any,
        CORBA::NativeDef::_tao_any_destructor,
        CORBA::_tc_NativeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::PrimitiveDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr _tao_elem
  )
{
  CORBA::PrimitiveDef_ptr _tao_objptr =
    CORBA::PrimitiveDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::PrimitiveDef>::insert (
      _tao_any,
      CORBA::PrimitiveDef::_tao_any_destructor,
      CORBA::_tc_PrimitiveDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::PrimitiveDef>::extract (
        _tao_any,
        CORBA::PrimitiveDef::_tao_any_destructor,
        CORBA::_tc_PrimitiveDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::StringDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StringDef_ptr _tao_elem
  )
{
  CORBA::StringDef_ptr _tao_objptr =
    CORBA::StringDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StringDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::StringDef>::insert (
      _tao_any,
      CORBA::StringDef::_tao_any_destructor,
      CORBA::_tc_StringDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StringDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::StringDef>::extract (
        _tao_any,
        CORBA::StringDef::_tao_any_destructor,
        CORBA::_tc_StringDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::WstringDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr _tao_elem
  )
{
  CORBA::WstringDef_ptr _tao_objptr =
    CORBA::WstringDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::WstringDef>::insert (
      _tao_any,
      CORBA::WstringDef::_tao_any_destructor,
      CORBA::_tc_WstringDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::WstringDef>::extract (
        _tao_any,
        CORBA::WstringDef::_tao_any_destructor,
        CORBA::_tc_WstringDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::SequenceDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr _tao_elem
  )
{
  CORBA::SequenceDef_ptr _tao_objptr =
    CORBA::SequenceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::SequenceDef>::insert (
      _tao_any,
      CORBA::SequenceDef::_tao_any_destructor,
      CORBA::_tc_SequenceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::SequenceDef>::extract (
        _tao_any,
        CORBA::SequenceDef::_tao_any_destructor,
        CORBA::_tc_SequenceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::ArrayDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr _tao_elem
  )
{
  CORBA::ArrayDef_ptr _tao_objptr =
    CORBA::ArrayDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ArrayDef>::insert (
      _tao_any,
      CORBA::ArrayDef::_tao_any_destructor,
      CORBA::_tc_ArrayDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ArrayDef>::extract (
        _tao_any,
        CORBA::ArrayDef::_tao_any_destructor,
        CORBA::_tc_ArrayDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::ExceptionDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr _tao_elem
  )
{
  CORBA::ExceptionDef_ptr _tao_objptr =
    CORBA::ExceptionDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExceptionDef>::insert (
      _tao_any,
      CORBA::ExceptionDef::_tao_any_destructor,
      CORBA::_tc_ExceptionDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExceptionDef>::extract (
        _tao_any,
        CORBA::ExceptionDef::_tao_any_destructor,
        CORBA::_tc_ExceptionDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExceptionDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExceptionDefSeq::_tao_any_destructor,
      CORBA::_tc_ExceptionDefSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::insert (
      _tao_any,
      CORBA::ExceptionDefSeq::_tao_any_destructor,
      CORBA::_tc_ExceptionDefSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExceptionDefSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::ExceptionDefSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExceptionDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::extract (
        _tao_any,
        CORBA::ExceptionDefSeq::_tao_any_destructor,
        CORBA::_tc_ExceptionDefSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::AttributeMode>::insert (
      _tao_any,
      CORBA::_tc_AttributeMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::AttributeMode>::extract (
        _tao_any,
        CORBA::_tc_AttributeMode,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::AttributeDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr _tao_elem
  )
{
  CORBA::AttributeDef_ptr _tao_objptr =
    CORBA::AttributeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AttributeDef>::insert (
      _tao_any,
      CORBA::AttributeDef::_tao_any_destructor,
      CORBA::_tc_AttributeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AttributeDef>::extract (
        _tao_any,
        CORBA::AttributeDef::_tao_any_destructor,
        CORBA::_tc_AttributeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::AttributeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::insert_copy (
      _tao_any,
      CORBA::AttributeDescription::_tao_any_destructor,
      CORBA::_tc_AttributeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::insert (
      _tao_any,
      CORBA::AttributeDescription::_tao_any_destructor,
      CORBA::_tc_AttributeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::AttributeDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::AttributeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::extract (
        _tao_any,
        CORBA::AttributeDescription::_tao_any_destructor,
        CORBA::_tc_AttributeDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtAttributeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::insert_copy (
      _tao_any,
      CORBA::ExtAttributeDescription::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::insert (
      _tao_any,
      CORBA::ExtAttributeDescription::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttributeDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::ExtAttributeDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtAttributeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::extract (
        _tao_any,
        CORBA::ExtAttributeDescription::_tao_any_destructor,
        CORBA::_tc_ExtAttributeDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::ExtAttributeDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr _tao_elem
  )
{
  CORBA::ExtAttributeDef_ptr _tao_objptr =
    CORBA::ExtAttributeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtAttributeDef>::insert (
      _tao_any,
      CORBA::ExtAttributeDef::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtAttributeDef>::extract (
        _tao_any,
        CORBA::ExtAttributeDef::_tao_any_destructor,
        CORBA::_tc_ExtAttributeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::OperationMode>::insert (
      _tao_any,
      CORBA::_tc_OperationMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::OperationMode>::extract (
        _tao_any,
        CORBA::_tc_OperationMode,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ParameterDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::insert_copy (
      _tao_any,
      CORBA::ParameterDescription::_tao_any_destructor,
      CORBA::_tc_ParameterDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ParameterDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::insert (
      _tao_any,
      CORBA::ParameterDescription::_tao_any_destructor,
      CORBA::_tc_ParameterDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ParameterDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::ParameterDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ParameterDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::extract (
        _tao_any,
        CORBA::ParameterDescription::_tao_any_destructor,
        CORBA::_tc_ParameterDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ParDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ParDescriptionSeq::_tao_any_destructor,
      CORBA::_tc_ParDescriptionSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ParDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::insert (
      _tao_any,
      CORBA::ParDescriptionSeq::_tao_any_destructor,
      CORBA::_tc_ParDescriptionSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ParDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::ParDescriptionSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ParDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::extract (
        _tao_any,
        CORBA::ParDescriptionSeq::_tao_any_destructor,
        CORBA::_tc_ParDescriptionSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ContextIdSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::insert_copy (
      _tao_any,
      CORBA::ContextIdSeq::_tao_any_destructor,
      CORBA::_tc_ContextIdSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ContextIdSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::insert (
      _tao_any,
      CORBA::ContextIdSeq::_tao_any_destructor,
      CORBA::_tc_ContextIdSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ContextIdSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::ContextIdSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ContextIdSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::extract (
        _tao_any,
        CORBA::ContextIdSeq::_tao_any_destructor,
        CORBA::_tc_ContextIdSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::OperationDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr _tao_elem
  )
{
  CORBA::OperationDef_ptr _tao_objptr =
    CORBA::OperationDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::OperationDef>::insert (
      _tao_any,
      CORBA::OperationDef::_tao_any_destructor,
      CORBA::_tc_OperationDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::OperationDef>::extract (
        _tao_any,
        CORBA::OperationDef::_tao_any_destructor,
        CORBA::_tc_OperationDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::OperationDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::insert_copy (
      _tao_any,
      CORBA::OperationDescription::_tao_any_destructor,
      CORBA::_tc_OperationDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::insert (
      _tao_any,
      CORBA::OperationDescription::_tao_any_destructor,
      CORBA::_tc_OperationDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::OperationDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::OperationDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::extract (
        _tao_any,
        CORBA::OperationDescription::_tao_any_destructor,
        CORBA::_tc_OperationDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::RepositoryIdSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::insert_copy (
      _tao_any,
      CORBA::RepositoryIdSeq::_tao_any_destructor,
      CORBA::_tc_RepositoryIdSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::RepositoryIdSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::insert (
      _tao_any,
      CORBA::RepositoryIdSeq::_tao_any_destructor,
      CORBA::_tc_RepositoryIdSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::RepositoryIdSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::RepositoryIdSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::RepositoryIdSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::extract (
        _tao_any,
        CORBA::RepositoryIdSeq::_tao_any_destructor,
        CORBA::_tc_RepositoryIdSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::OpDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::OpDescriptionSeq::_tao_any_destructor,
      CORBA::_tc_OpDescriptionSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OpDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::insert (
      _tao_any,
      CORBA::OpDescriptionSeq::_tao_any_destructor,
      CORBA::_tc_OpDescriptionSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OpDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::OpDescriptionSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::OpDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::extract (
        _tao_any,
        CORBA::OpDescriptionSeq::_tao_any_destructor,
        CORBA::_tc_OpDescriptionSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::AttrDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::AttrDescriptionSeq::_tao_any_destructor,
      CORBA::_tc_AttrDescriptionSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttrDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::insert (
      _tao_any,
      CORBA::AttrDescriptionSeq::_tao_any_destructor,
      CORBA::_tc_AttrDescriptionSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttrDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::AttrDescriptionSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::AttrDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::extract (
        _tao_any,
        CORBA::AttrDescriptionSeq::_tao_any_destructor,
        CORBA::_tc_AttrDescriptionSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtAttrDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
      CORBA::_tc_ExtAttrDescriptionSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttrDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::insert (
      _tao_any,
      CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
      CORBA::_tc_ExtAttrDescriptionSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttrDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::ExtAttrDescriptionSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtAttrDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::extract (
        _tao_any,
        CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
        CORBA::_tc_ExtAttrDescriptionSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::InterfaceDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr _tao_elem
  )
{
  CORBA::InterfaceDef_ptr _tao_objptr =
    CORBA::InterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::InterfaceDef>::insert (
      _tao_any,
      CORBA::InterfaceDef::_tao_any_destructor,
      CORBA::_tc_InterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::InterfaceDef>::extract (
        _tao_any,
        CORBA::InterfaceDef::_tao_any_destructor,
        CORBA::_tc_InterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceDef::FullInterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceDef::_tc_FullInterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef::FullInterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceDef::_tc_FullInterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDef::FullInterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::InterfaceDef::FullInterfaceDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceDef::FullInterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
        CORBA::InterfaceDef::_tc_FullInterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceDescription::_tao_any_destructor,
      CORBA::_tc_InterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceDescription::_tao_any_destructor,
      CORBA::_tc_InterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::InterfaceDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceDescription::_tao_any_destructor,
        CORBA::_tc_InterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::InterfaceAttrExtension>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr _tao_elem
  )
{
  CORBA::InterfaceAttrExtension_ptr _tao_objptr =
    CORBA::InterfaceAttrExtension::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::InterfaceAttrExtension>::insert (
      _tao_any,
      CORBA::InterfaceAttrExtension::_tao_any_destructor,
      CORBA::_tc_InterfaceAttrExtension,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::InterfaceAttrExtension>::extract (
        _tao_any,
        CORBA::InterfaceAttrExtension::_tao_any_destructor,
        CORBA::_tc_InterfaceAttrExtension,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
        CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::ExtInterfaceDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtInterfaceDef_ptr _tao_objptr =
    CORBA::ExtInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::AbstractInterfaceDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr _tao_elem
  )
{
  CORBA::AbstractInterfaceDef_ptr _tao_objptr =
    CORBA::AbstractInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AbstractInterfaceDef>::insert (
      _tao_any,
      CORBA::AbstractInterfaceDef::_tao_any_destructor,
      CORBA::_tc_AbstractInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AbstractInterfaceDef>::extract (
        _tao_any,
        CORBA::AbstractInterfaceDef::_tao_any_destructor,
        CORBA::_tc_AbstractInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtAbstractInterfaceDef_ptr _tao_objptr =
    CORBA::ExtAbstractInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtAbstractInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtAbstractInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtAbstractInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtAbstractInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::LocalInterfaceDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr _tao_elem
  )
{
  CORBA::LocalInterfaceDef_ptr _tao_objptr =
    CORBA::LocalInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::LocalInterfaceDef>::insert (
      _tao_any,
      CORBA::LocalInterfaceDef::_tao_any_destructor,
      CORBA::_tc_LocalInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::LocalInterfaceDef>::extract (
        _tao_any,
        CORBA::LocalInterfaceDef::_tao_any_destructor,
        CORBA::_tc_LocalInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::ExtLocalInterfaceDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtLocalInterfaceDef_ptr _tao_objptr =
    CORBA::ExtLocalInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtLocalInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtLocalInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtLocalInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtLocalInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtLocalInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtLocalInterfaceDef,
        _tao_elem
      );
}



#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

  template class
    TAO::Any_Impl_T<
        CORBA::Repository
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::ModuleDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::ConstantDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::StructDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::UnionDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::EnumDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::AliasDef
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::OpDescriptionSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::AttrDescriptionSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::RepositoryIdSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::InterfaceDef::FullInterfaceDescription
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::InterfaceDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::ExceptionDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::NativeDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::AbstractInterfaceDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::LocalInterfaceDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::ExtInterfaceDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::ExtAbstractInterfaceDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::ExtLocalInterfaceDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::PrimitiveDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::StringDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::SequenceDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::ArrayDef
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::WstringDef
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::PrimitiveKind
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ModuleDescription
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ConstantDescription
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExceptionDefSeq
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::AttributeMode
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::AttributeDef
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::AttributeDescription
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExtAttributeDescription
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::ExtAttributeDef
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::OperationMode
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ParameterDescription
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ParDescriptionSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ContextIdSeq
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::OperationDef
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::OperationDescription
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExtAttrDescriptionSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::InterfaceDescription
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::InterfaceAttrExtension
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::Repository \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::ModuleDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::ConstantDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::StructDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::UnionDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::EnumDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::AliasDef \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::OpDescriptionSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::AttrDescriptionSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::RepositoryIdSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::InterfaceDef::FullInterfaceDescription \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::InterfaceDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::ExceptionDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::NativeDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::AbstractInterfaceDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::LocalInterfaceDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::ExtInterfaceDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::ExtAbstractInterfaceDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::ExtLocalInterfaceDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::PrimitiveDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::StringDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::SequenceDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::ArrayDef \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::WstringDef \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::PrimitiveKind \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ModuleDescription \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ConstantDescription \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExceptionDefSeq \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::AttributeMode \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::AttributeDef \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::AttributeDescription \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExtAttributeDescription \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::ExtAttributeDef \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::OperationMode \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ParameterDescription \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ParDescriptionSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ContextIdSeq \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::OperationDef \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::OperationDescription \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExtAttrDescriptionSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::InterfaceDescription \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::InterfaceAttrExtension \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

