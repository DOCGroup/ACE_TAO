#
# -p	port number
# -n	threads in the server
# -f    thread activation flags
#       = THR_BOUND
#       = THR_DAEMON
#       = THR_DETACHED
#       = THR_NEW_LWP
# -t	threading strategy
#	= POOL -> thread pool
#	= PER_REQUEST -> thread per request
#	= THROTTLE -> thread per request with throttling
# -i    I/O strategy
#	= SYNCH
#	= ASYNCH
# -b	backlog value for listen ()
#
#
# Thread Pool, 20 unbound threads
# This is the baseline
static HTTP_Server "HTTP_Server -p 5432 -n 20 -i SYNCH -t POOL -b 50 -f THR_NEW_LWP"
#
#
# Thread Pool, 40 threads
#static HTTP_Server "HTTP_Server -p 5432 -n 40 -i SYNCH -t POOL -b 50 -f THR_NEW_LWP -f THR_BOUND"
#
#
# Thread-per-request, unlimited number of threads
#static HTTP_Server "HTTP_Server -p 5432 -i SYNCH -t PER_REQUEST -b 50 -f THR_NEW_LWP"
#
#
# Throttling, 40 threads
#static HTTP_Server "HTTP_Server -p 5432 -n 40 -i SYNCH -t THROTTLE -b 50 -f THR_NEW_LWP"
#

#
# Example for using HTTP_Server as a dynamic service
#
# For NT.
#dynamic HTTP_Server Service_Object * ./jaws.exe:_make_HTTP_Server() "HTTP_Server -p 5432 -n 20 -i SYNCH -t POOL -b 50 -f THR_NEW_LWP"

#
# For UNIX platforms.
#dynamic HTTP_Server Service_Object * ./main:_make_HTTP_Server() "HTTP_Server -p 5432  -n 20 -i SYNCH -t POOL -b 50 -f THR_NEW_LWP"
