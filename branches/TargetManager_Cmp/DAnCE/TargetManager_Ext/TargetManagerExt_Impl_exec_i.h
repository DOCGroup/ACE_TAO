// $Id$
//
// ****              Code generated by the                 ****
// ****  Component Integrated ACE ORB (CIAO) CIDL Compiler ****
// CIAO has been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// CIDL Compiler has been developed by:
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about CIAO is available at:
//    http://www.dre.vanderbilt.edu/CIAO

#ifndef CIAO_TARGETMANAGEREXT_IMPL_EXEC_H
#define CIAO_TARGETMANAGEREXT_IMPL_EXEC_H

#include /**/ "ace/pre.h"

#include "TargetManagerExt_Impl_svnt.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "TargetManagerExt_Impl_exec_export.h"
#include "tao/LocalObject.h"

namespace CIDL_TargetManager_Ext_i
{

  class TargetManagerExt_Impl_Context;

  class TARGETMANAGEREXT_IMPL_EXEC_Export TargetManagerExt_Impl_exec_i
    : public virtual TargetManagerExt_Impl_Exec,
      public virtual TAO_Local_RefCounted_Object
  {
    public:
    TargetManagerExt_Impl_exec_i (void);
    virtual ~TargetManagerExt_Impl_exec_i (void);

    // Supported or inherited operations.

    // Attribute operations.

    // Port operations.

    virtual ::Deployment::CCM_TargetManager_ptr
    get_targetMgr (
    );

    virtual ::CIAO::CCM_TargetManagerExt_ptr
    get_targetMgr_ext (
    );

    // Operations from Components::SessionComponent

    virtual void
    set_session_context (
      ::Components::SessionContext_ptr ctx);

    virtual void ciao_preactivate ();

    virtual void ciao_postactivate ();

    virtual void ccm_activate ();

    virtual void ccm_passivate ();

    virtual void ccm_remove ();

    protected:
    /// The context pointer
    TargetManagerExt_Impl_Context *context_;

    /// The executor for the spec defined interface
    ::Deployment::CCM_TargetManager_var exec_object_;

    // The interface to the CIAO-specific extensions ...
    ::CIAO::CCM_TargetManagerExt_var ext_exec_object_;
  };

  class TARGETMANAGEREXT_IMPL_EXEC_Export TargetManager_exec_i
    : public virtual ::Deployment::CCM_TargetManager,
      public virtual TAO_Local_RefCounted_Object
  {
    public:
    TargetManager_exec_i (TargetManagerExt_Impl_exec_i* exec,
                          CORBA::ORB_ptr orb,
                          TargetManagerExt_Impl_Context *context);

    virtual ~TargetManager_exec_i (void);

    // Operations from ::Deployment::TargetManager

    virtual ::Deployment::Domain *
    getAllResources ();

    virtual ::Deployment::Domain *
    getAvailableResources ();

    virtual ::Deployment::ResourceCommitmentManager_ptr
    createResourceCommitment (
      const ::Deployment::ResourceAllocations & resources
    );

    virtual void
    destroyResourceCommitment (
      ::Deployment::ResourceCommitmentManager_ptr manager
    );

    virtual void
    updateDomain (
      const ::CORBA::StringSeq & elements,
      const ::Deployment::Domain & domainSubset,
      ::Deployment::DomainUpdateKind updateKind
    );

    private:
    TargetManagerExt_Impl_exec_i* _exec;
    CORBA::ORB_var orb_;
    /// The context object ...
    TargetManagerExt_Impl_Context *context_;
  };

  class TARGETMANAGEREXT_IMPL_EXEC_Export TargetManagerExt_exec_i
    : public virtual ::CIAO::CCM_TargetManagerExt,
      public virtual TAO_Local_RefCounted_Object
  {
    public:
    TargetManagerExt_exec_i (void);
    virtual ~TargetManagerExt_exec_i (void);

    // Operations from ::CIAO::TargetManagerExt

    virtual ::CORBA::Long
    get_pid (
      const char * component_uuid
    );

    virtual ::CIAO::Host_Infos *
    get_host_cpu ();

    virtual ::CIAO::Component_Infos *
    get_component_cpu ();

    virtual ::CIAO::Host_NodeManager_seq *
    get_all_node_managers ();
  };

  class TARGETMANAGEREXT_IMPL_EXEC_Export TargetManagerExt_Home_exec_i
    : public virtual TargetManagerExt_Home_Exec,
      public virtual TAO_Local_RefCounted_Object
  {
    public:
    TargetManagerExt_Home_exec_i (void);
    virtual ~TargetManagerExt_Home_exec_i (void);

    // Supported or inherited operations.

    // Home operations.

    // Factory and finder operations.

    // Attribute operations.

    // Implicit operations.

    virtual ::Components::EnterpriseComponent_ptr
    create ();
  };

  extern "C" TARGETMANAGEREXT_IMPL_EXEC_Export ::Components::HomeExecutorBase_ptr
  create_CIAO_TargetManagerExt_Home_Impl (void);
}

#include /**/ "ace/post.h"

#endif /* CIAO_TARGETMANAGEREXT_IMPL_EXEC_H */

