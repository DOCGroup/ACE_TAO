Notification Discard Policy Test
================================

Description
-----------

This test exercises the event discarding policies of the Notification
Service.  Each of the implemented polices are tested (fifo, lifo and
priority) for both structured push consumers and sequence push consumers.

A number of events are sent by the supplier and the consumer should receive
a lesser number of events due queue size overflow.  Note that with the
sequence push consumer, it will actually receive more "events" than are sent
by the supplier.  This is due to the fact that the supplier is sending a
sequence of events that is much larger than the maximum batch size (set by
the consumer) and therefore the notification service breaks the sequence
into smaller sets to honor the maximum batch size setting.


Usage
-----

The test consists of a Structured_Supplier and Structured_Consumer as well
as a Sequence_Supplier and Sequence_Consumer.  The usage for each as is
follows:

$ Structured_Supplier -\?
usage:  Structured_Supplier -o <iorfile> -e <# of events>

$ Structured_Consumer -\?
usage:  Structured_Consumer -k <ior> -e <expected events>
                            -d <fifo|priority|lifo>

$ Sequence_Supplier -\?
usage:  Sequence_Supplier -o <iorfile> -e <# of events>

$ Sequence_Consumer -\?
usage:  Sequence_Consumer -k <ior> -l <low expected events>
                          -h <high expected events> -d <fifo|priority|lifo>


To run this test, just run the run_test.pl perl script.  It will run both
structured and sequence tests with each of the implemented discard policies.


Expected Results
----------------
The consumers of each type expect to only receive a certain number of
events.  If you see:

ERROR: too many events received.

then the test has failed.  Otherwise, the test was ok.
