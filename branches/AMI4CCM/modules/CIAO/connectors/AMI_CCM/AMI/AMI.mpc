// $Id$
// This file is generated with "generate_component_mpc.pl -p Hello_Base AMI"

project(*idl): taoidldefaults, ami {
  IDL_Files {
    AMI_internal.idl
  }
  custom_only = 1
}

project(Hello_Base_AMI_idl_gen) : componentidldefaults   {
  custom_only = 1
  idlflags += -Wb,stub_export_macro=AMI_STUB_Export \
              -Wb,stub_export_include=AMI_stub_export.h \
              -Wb,skel_export_macro=AMI_SVNT_Export \
              -Wb,skel_export_include=AMI_svnt_export.h \
              -Wb,exec_export_macro=AMI_EXEC_Export \
              -Wb,exec_export_include=AMI_exec_export.h

  IDL_Files {
    AMI.idl
  }
}

project(Hello_Base_AMI_lem_gen) : ciaoidldefaults   {
  after += Hello_Base_AMI_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=AMI_LEM_STUB_Export \
              -Wb,stub_export_include=AMI_lem_stub_export.h \
              -SS -Gxhst

  IDL_Files {
    AMIE.idl
  }
}

project(Hello_Base_AMI_lem_stub) : ccm_svnt   {
  after += Hello_Base_AMI_lem_gen Hello_Base_AMI_stub Hello_Base_stub
  libs  += Hello_Base_stub AMI_stub
  libpaths += ../lib
  libout = ../lib
  sharedname = AMI_lem_stub
  dynamicflags   = AMI_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    AMIEC.cpp
  }

  Header_Files {
    AMIEC.h
    AMI_lem_stub_export.h
  }

  Inline_Files {
    AMIEC.inl
  }
}

project(Hello_Base_AMI_stub) : ccm_stub   {
  after += Hello_Base_AMI_idl_gen Hello_Base_stub
  libs  += Hello_Base_stub
  libpaths += ../lib
  libout = ../lib
  sharedname = AMI_stub
  dynamicflags   = AMI_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    AMIC.cpp
  }

  Header_Files {
    AMIC.h
    AMI_stub_export.h
  }

  Inline_Files {
    AMIC.inl
  }
}

project(Hello_Base_AMI_exec) : ciao_executor   {
  after   += Hello_Base_AMI_lem_stub Hello_Base_AMI_stub
  sharedname = AMI_exec
  libs += AMI_stub AMI_lem_stub Hello_Base_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags   = AMI_EXEC_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    AMI_exec.cpp
    AMI_server.cpp
    AMI_perform_work.cpp
    AMI_internal_i.cpp
    AMI_internalC.cpp
    AMI_internalS.cpp
  }

  Header_Files {
    AMI_exec.h
    AMI_server.h
    AMI_perform_work.h
    AMI_internal_i.h
    AMI_exec_export.h
    AMI_internalS.h
    AMI_internalC.h
  }

  Inline_Files {
    AMI_internalS.inl
    AMI_internalC.inl
  }
}


project(Hello_Base_AMI_svnt) : ciao_servant   {
  after      += Hello_Base_skel  Hello_Base_AMI_lem_stub
  sharedname  = AMI_svnt
  libs       += AMI_stub AMI_lem_stub  \
                Hello_Base_skel \
                Hello_Base_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags = AMI_SVNT_BUILD_DLL
  
  IDL_Files {
  }

  Source_Files {
    AMIS.cpp
    AMI_svnt.cpp
  }

  Header_Files {
    AMIS.h
    AMI_svnt.h
    AMI_svnt_export.h
  }

  Inline_Files {
    AMIS.inl
  }
}


