Fri Oct 24 11:28:51 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * TAO version 1.3.5 released.

Fri Oct 24 10:53:16 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* TAO-INSTALL.html: Changed documentation to reflect the fact that
	  $ACE_ROOT/lib also has to be added to LD_LIBRARY_PATH since some
	  of the libraries are generated in this directory.

Wed Oct 22 13:28:43 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/ClientRequestInfo_i.cpp (setup_picurrent):

	  Perform a deep copy of the thread-scope current's slot table
	  instead of shallow one to work around a problem where the
	  pointer to logically copied slot table ends up pointing to freed
	  memory in some cases.  A predictable means of reproducing the
	  problem hasn't been found yet so we go with this safer
	  approach.  Thanks to Onopin V. Mikhail <kool@garant.ru> for
	  reporting the problem and suggesting a fix.

Wed Oct 22 11:02:30 2003  Pradeep Gore  <pradeep@oomworks.com>

	* orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
	  Fixed bug 1619 (memory leak with discard policy) by
	  adding a call to <release> the message block in the discard method.
	  Thanks to <sro@zurich.ibm.com> for reporting this bug and
	  suggesting a fix.

Wed Oct 22 05:59:16 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/RTCosScheduling/Makefile.RTCosScheduling_Server:
	* orbsvcs/tests/RTCosScheduling/Makefile.RTCosScheduling_Client:
	* orbsvcs/tests/RTCosScheduling/RTCosScheduling.mpc:
	  Made the IDL_Files section empty for client and server
	  projects. If we did not do this, the stub and skeleton files
	  were getting compiled once with building the commonlib file and
	  again while buidling the server and client.

Tue Oct 21 12:13:34 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/ORB.h: Removed virtual qualifiers that went in as part of
	  the last checin.

Tue Oct 21 10:12:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * docs/interfacerepo/index.html:

          Updated release notes with recently added IFR features.

        * docs/releasenotes/orbcore.html:
        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/TypeCodeFactory_Adapter.h:
        * tao/TypeCodeFactory/README:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.h:

          Propagated support for typecodes of valuetypes,
          components, homes, eventtypes and recursive types (already
          added to TypeCodeFactory and used in the IFR) to the ORB.
          Also updated TypeCodeFactory's README file and ORB
          release notes. Thanks to Harvinder Sawhney
          <harvinder_sawhney@agilent.com> for pointing out the
          oversight.

Tue Oct 21 01:39:44 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.h:
          Modified the typedef to Dynamic_Bitset::reference::size_type to
          make Forte compiler happy.

Tue Oct 21 05:51:23 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Notify/ThreadPool/Notify_ThreadPool.mpc:
          Added missing files to fix Cygwin link errors

Mon Oct 20 21:55:41 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.h:
          Remove redundant semicolon in the ACE_FACTORY_DEFINE, ACE_STATIC_SVC_REQUIRE
          and ACE_STATIC_SVC_DEFINE.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
          Fixed the problem to access pointer to member using var object, Forte compiler
          do not accept it.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.h:
          Added typedef to Dynamic_Bitset::reference::size_type.

        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.cpp
          Added missed semicolon.

Mon Oct 20 14:58:00 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/UUID.cpp :
          Fixed Cygwin compatibility problem

Mon Oct 20 14:30:48 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/Makefile.av: Made changes so that
	  AV/SCTP_SEQ.cpp does not get built in non-SCTP builds.

Mon Oct 20 13:12:23 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

	* orbsvcs/orbsvcs/Makefile.av:

	Modified the Makefile to compile SCTP related files when sctp flag
	is set both to openss7 and lksctp. Initially it was including the
	SCTP related files only when sctp=openss7. This should fix build
	errors on the Red Hat LKSCTP build.

Mon Oct 20 11:03:37 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client_Static.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server_Static.dsp:
          Changed the configuration name from Debug and Release to
          Static Debug and Static Release.

Mon Oct 20 15:39:23 UTC 2003 Kevin Bryan <bryank@cs.uri.edu>

	* orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
	  Another cast of ACE_Thread::self() returns to int to satisfy FreeBSD.

Sun Oct 19 21:48:09 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp:
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp
          Fixed fuzz errors.

        * docs/releasenotes/ftrt_ec.html: minor updates.

Sun Oct 19 18:25:20 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
	* tests/OBV/Supports/Supports_Test_impl.cpp: Fixed unused
	  ACE_ENV_ARG warnings.

Sun Oct 19 17:11:21 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/FTRT_Event_Service/Readme:
        * orbsvcs/orbsvcs/RTCosScheduling/README: Deleted these files and
	  moved them as part of release notes. See below.

	* docs/releasenotes/index.html:
	* docs/releasenotes/rtc10_sched.html:
	* docs/releasenotes/ftrt_ec.html: Added these to release notes.

Sun Oct 19 15:46:42 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/RTCosScheduling_Static.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client_Static.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server_Static.dsp:
          Changed the configuration name from Debug and Release to
          Static Debug and Static Release.

        * TAOACE_Static.dsw : Added RTCosScheduling_Static.dsp.

Sun Oct 19 07:34:16 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/Notify/lib/Peer_T.cpp: Fixed unused arg warning.

Sat Oct 18 21:18:55 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/Notify/lib/Peer_T.cpp: Fixed unused arg warning.
	* orbsvcs/orbsvcs/RTCosScheduling.dsp: Fixed path to idl compiler
	  for MSVC release configuration.

Sun Oct 19 02:02:27 UTC 2003 Kevin Bryan <bryank@cs.uri.edu>

	* orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
	  Cast what ACE_Thread::self() returns to int to satisfy FreeBSD.

Sat Oct 18 17:02:49 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* TAOACE.dsw: Added RTCosScheduling.dsp.

Sat Oct 18 16:53:10 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/RTCosScheduling.dsp: Modified include and
	  library paths.

Sat Oct 18 15:14:38 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Supports_Test_impl.h:
        * tests/OBV/Supports/Supports_Test_impl.cpp:

          Removed CORBA environment variable from factory methods.

Sat Oct 18 12:36:22 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
	  Changed constructor definition to match prototype. This was
	  causing undefined symbol errors in SunCC.

Sat Oct 18 10:16:20 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

	Added Stream Control Transmission Protocol (SCTP) to the AVStreams
	pluggable protocol. This allows users to choose SCTP as their
	transport protocol to send and receive data. The SCTP protocol is
	available only when the sctp flag is set.

	* orbsvcs/orbsvcs/AV/SCTP_SEQ.h:
	* orbsvcs/orbsvcs/AV/SCTP_SEQ.cpp:

	Contains acceptors, connectors and flow handlers to setup SCTP
	associations and send and receive data.

	* orbsvcs/orbsvcs/AV/FlowSpec_Entry.h:
	* orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
	* orbsvcs/orbsvcs/AV/FlowSpec_Entry.i:

	Changed the flow specification string format to accomodate the
	specification of secondary addresses for SCTP.
	Initial format:
	"Flowname/Direction/Format/Flow_Prtocol/Sender_Address/Receiver_Address".
	Changed to:
	"Flowname/Direction/Format/Flow_Prtocol/Sender_Primary_Address;
	Sender_Secondary_Address1;Sender_Secondary_Address2.../Receiver_Primary_Address;
	Receiver_Secondary_Address1;Receiver_Secondary_Address2...".

	Added accessor methods to set/get remote and local secondary
	addresses.

	* orbsvcs/orbsvcs/AV/AV_Core.cpp:
	* orbsvcs/orbsvcs/AV/AV_Core.h:

	Added support to load SCTP transport protocol.

	* orbsvcs/orbsvcs/Makefile.av:

	Modified the Makefile to compile SCTP related files.

	* orbsvcs/tests/AVStreams/Simple_Two_Stage/run_test.pl:

	Added a test to test with SCTP protocol.

Sat Oct 18 09:30:40 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/RTCosScheduling/RTCosScheduling.mpc:
	* orbsvcs/tests/RTCosScheduling/Makefile: Fixed a build dependency
	  problem.


Sat Oct 18 08:52:15 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/Notify/lib/Peer_T.cpp: Fixed compile error for
	  minimumcorba build.

Fri Oct 17 21:09:30 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/FTRT_Event_Service/Readme
          Updated the Readme file to provide more detailed information.

Fri Oct 17 18:11:20 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

	* orbsvcs/tests/Makefile: Changed criteria for building
	  EC_Multiple test - build it only when RTOLDEvent library is
	  built.

Fri Oct 17 17:37:05 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

	* orbsvcs/orbsvcs/Makefile.RTCosScheduling:
	* orbsvcs/orbsvcs/RTCosScheduling.mpc: Fixed dependency problem
	  for RH71 Static build - Moved directory RTScheduling after
	  RTSchedulingC(S).cpp in Source_Files section.

Fri Oct 17 21:17:03 UTC 2003 Kevin Bryan <bryank@cs.uri.edu>

        * orbsvcs/tests/RTCosScheduling/README
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client.dsp
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client_Static.dsp
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server.dsp
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server_Static.dsp
        * orbsvcs/tests/RTCosScheduling/run_test.pl:
          Fixed the Windows files so all the include and library directories are
          there.  Update the README file.  Fixed a small bug in the run_test.pl.

Fri Oct 17 12:32:53 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * CEC_DynamicImplementation.cpp
        * CEC_TypedConsumerAdmin.cpp
        * CEC_TypedProxyPushConsumer.cpp
        * CEC_TypedSupplierAdmin.cpp
          Fixed problems in emulated exception case.

        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.cpp:
          Fixed problem in cygwin build.

Fri Oct 17 06:52:27 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/RTCosScheduling/RTCosScheduling.mpc:
	* orbsvcs/tests/RTCosScheduling/Makefile.RTCosScheduling_Server:
	* orbsvcs/tests/RTCosScheduling/Makefile.RTCosScheduling_Client:
	* orbsvcs/tests/RTCosScheduling/Makefile:
	* orbsvcs/tests/RTCosScheduling/Makefile.commonlib: Fixed the mpc
	  files - added a new project called common which will be built
	  before client and server. Regenerated the Makefiles. The
	  Makefile was not generated using mpc before.

Fri Oct 17 12:37:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
          Added missing export macro to fix BCB link errors

Fri Oct 17 07:40:13 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Strategy.cpp
          Fixed problems in emulated exception case

Fri Oct 17 01:28:53 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.cpp
        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.h
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.h
        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.cpp
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ConsumerAdmin.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_SupplierAdmin.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxyConsumerStateWorker.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxySupplierStateWorker.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/create_persistent_poa.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/create_persistent_poa.h
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.inl
        * orbsvcs/orbsvcs/FtRtEvent/Utils/activate_with_id.h
        * orbsvcs/tests/FtRtEvent/PushConsumer.cpp
        * orbsvcs/tests/FtRtEvent/PushConsumer.h
        * orbsvcs/tests/FtRtEvent/PushSupplier.cpp
        * orbsvcs/tests/FtRtEvent/PushSupplier.h
        * orbsvcs/tests/FtRtEvent/consumer.cpp
        * orbsvcs/tests/FtRtEvent/supplier.cpp
          Fixed problems in emulated exception case

Fri Oct 16 06:01:13 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling.bor:
          This BCB makefile was generated with MPC but this used a different
          place to store the libs, so updated this file manually so that the
          handmade other BCB makefiles don't get problems.

Thu Oct 16 21:20:11 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* examples/Kokyu_dsrt_schedulers/Makefile.Kokyu_DSRT_Schedulers:
	  Regenerated after making change to kokyu_dsrt_schedulers.mpb
	  file.

Thu Oct 16 19:52:25 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/RTCosScheduling/Object1_i.h:
	* orbsvcs/tests/RTCosScheduling/Object1_i.cpp: Fixed compile
	  errors with no exceptions build.

Thu Oct 16 16:09:21 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/RTCosScheduling/Makefile: Updated dependencies and
	  added dependency between library and executables. This was to
	  fix link errors in some of the builds.

Thu Oct 16 15:51:18 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/RTCosScheduling/server.cpp:
	* orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
	* orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
	  Fixed compile errors for no exceptions builds.

Thu Oct 16 11:09:43 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
	  Added explicit template instantiations.

Thu Oct 16 09:34:22 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/Makefile: Changed build criteria for
	  RTCosScheduling.

Thu Oct 16 08:24:12 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/RTCosScheduling/Makefile.bor:
          Added missing makefile

        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client.bor:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server.bor:
          Corrected these makefiles

Thu Oct 16 08:05:33 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
          Fixed problems in emulated exception case

Thu Oct 16 07:34:53 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.cpp:
          Fixed warning in emulated exception build

Thu Oct 16 07:23:17 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.h:
          Fixed fuzz push/pop warning

Thu Oct 16 06:18:12 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.inl:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Listener.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ORBInitializer.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/FtRtecEventComm.idl:
          Fixed fuzz errors

Thu Oct 16 00:39:52 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent.mpc:
          Fixed the problem for AMI_IDL_Files not built in the idl_stubs
          rule.

Wed Oct 15 22:09:35 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/Makefile:
	* orbsvcs/orbsvcs/Makefile: Enable the RTCosScheduling build only
	  when rtcorba and interceptors are enabled.

Wed Oct 15 20:54:42 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/tests/RTCosScheduling/Makefile: Updated dependencies.

Wed Oct 15 16:30:52 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent.mpc:
          Removed using custom types for idl files which caused problem
          in parallel build.

Wed Oct 15 16:20:52 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
          Fixed incorrect ACE_RCSID format.

Wed Oct 15 14:20:52 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h:
	* orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
	  Changed ACE_Thread_Mutex to ACE_SYNCH_MUTEX and
	  ACE_Thread_Condition to ACE_SYNCH_CONDITION to fix compile
	  errors in SingleThreaded builds.

Wed Oct 15 13:00:24  2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
          Fixed incorrect retrival of FTGroupRefVersion from a FTGroupComponent.

        * tao/Strategies/SCIOP_Endpoint.cpp:
          Added include "ace/Synch_T.h"

        * orbsvcs/FTRT_Event_Service/consumer:
        * orbsvcs/FTRT_Event_Service/Event_Service/FTRT_Event_Service.mpc:
        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.cpp:
        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.h:
        * orbsvcs/FTRT_Event_Service/Event_Service/svc.conf:
        * orbsvcs/FTRT_Event_Service/Event_Service/TP_Task.h:
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp:
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.h:
        * orbsvcs/FTRT_Event_Service/Factory_Service/factory.cfg:
        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.cpp:
        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.mpc:
        * orbsvcs/FTRT_Event_Service/ftec:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.mpc:
        * orbsvcs/FTRT_Event_Service/NameService:
        * orbsvcs/FTRT_Event_Service/Readme:
        * orbsvcs/FTRT_Event_Service/supplier:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:
        * orbsvcs/orbsvcs/FTRT.idl:
        * orbsvcs/orbsvcs/FTRT_GroupManager.idl:
        * orbsvcs/orbsvcs/FT_CORBA_ORB.idl:
        * orbsvcs/orbsvcs/FtRtecEventChannelAdmin.idl:
        * orbsvcs/orbsvcs/FtRtecEventComm.idl:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/ftrt_clientorb_export.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/create_persistent_poa.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/create_persistent_poa.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Listener.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Become_Primary_Listener.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Become_Primary_Listener.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Factory.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Factory.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Fault_Listener.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ORBInitializer.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ftrtec_export.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTRTEC_ServiceActivate.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxyConsumerStateWorker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxyConsumerStateWorker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxySupplierStateWorker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxySupplierStateWorker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Update_Manager.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Update_Manager.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/activate_with_id.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.inl:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/ftrtevent_export.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/resolve_init.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/ScopeGuard.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.inl:
        * orbsvcs/tests/FtRtEvent/consumer.cpp:
        * orbsvcs/tests/FtRtEvent/FtRtEvent.mpc:
        * orbsvcs/tests/FtRtEvent/PushConsumer.cpp:
        * orbsvcs/tests/FtRtEvent/PushConsumer.h:
        * orbsvcs/tests/FtRtEvent/PushSupplier.cpp:
        * orbsvcs/tests/FtRtEvent/PushSupplier.h:
        * orbsvcs/tests/FtRtEvent/supplier.cpp:
        * orbsvcs/tests/FtRtEvent/svc.conf:
          Added Fault Tolerant Event Channel.
          See orbsvcs/FTRT_Event_Service/Readme for detail.

Wed Oct 15 16:15:14 UTC 2003 Kevin Bryan  <bryank@cs.uri.edu>

        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:
        * orbsvcs/orbsvcs/orbsvcs.dsw:
        * orbsvcs/orbsvcs/RTCosScheduling.mpc:
        * orbsvcs/tests/Makefile:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/tests/Makefile.bor:
        * orbsvcs/tests/tests.dsw:
          Enable building the RTCosScheduling directory.
          Added RTCosScheduling.dsp to the orbsvcs.dsw file to get Windows to compile it.
          The RTCosScheduling{S,C} files weren't being put in the lib (.mpc change)
          The libTAO_RTCosScheduling.so was being put in lib instead of
          ace, even for non mpc builds.

Wed Oct 15 11:23:43 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/RTCosScheduling_Static.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client_Static.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server_Static.dsp:
	  Modified the directory to tao_idl to bin/Release/tao_idl in
	  release configuration.

Wed Oct 15 11:22:01 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/Transport.cpp (send_connection_closed_notifications_i): The
	  while loop could lead to possible crash. Please see

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1614

	  for details of the problem and the nature of fixes applied. As
	  usual, thanks to Carlos O'Ryan for digging this one up and
	  providing patches.

Wed Oct 15 11:15:56 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/RTCosScheduling.dsp: Modified the directory to
	  tao_idl to bin/Release/tao_idl in release configuration.

Wed Oct 15 15:04:12 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.h:
          Fixed compile problems in the Cygwin TAO build which is using MPC
          and emulated exceptions.

Wed Oct 15 08:58:43 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:
          Fixed compile problem when typed events is enabled and having
          emulated exceptions.

Wed Oct 15 08:27:12 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.bor:
          Added RTCosScheduling so that it is also build.

        * orbsvcs/orbsvcs/RTCosScheduling.bor:
          Fixed error in this BCB makefile

        * orbsvcs/orbsvcs/RTCosScheduling.idl:
        * orbsvcs/tests/RTCosScheduling/testSched.idl:
          Fixed fuzz error abount incorrect file tag.

Wed Oct 15 08:21:33 UTC  2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.i:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.i:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.i:
          Fixed fuzz error about incorrect file tag.

Tue Oct 14 20:01:10  2003  Kevin Bryan  <bryank@cs.uri.edu>

        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:
        * orbsvcs/orbsvcs/RTCosScheduling.bor:
        * orbsvcs/orbsvcs/RTCosScheduling.dsp:
        * orbsvcs/orbsvcs/RTCosScheduling.mak:
        * orbsvcs/orbsvcs/RTCosScheduling.mpc:
        * orbsvcs/orbsvcs/RTCosScheduling.pidl:
        * orbsvcs/orbsvcs/RTCosScheduling_Static.dsp:
        * orbsvcs/orbsvcs/RTCosScheduling.vcproj:
        * orbsvcs/orbsvcs/RTCosScheduling/README:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.i:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_export.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.i:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.i:
        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * orbsvcs/tests/RTCosScheduling/Makefile:
        * orbsvcs/tests/RTCosScheduling/Object1_i.cpp:
        * orbsvcs/tests/RTCosScheduling/Object1_i.h:
        * orbsvcs/tests/RTCosScheduling/README:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Client_Static.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling.mpc:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server.dsp:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling_Server_Static.dsp:
        * orbsvcs/tests/RTCosScheduling/run_test.pl:
        * orbsvcs/tests/RTCosScheduling/schedule.cfg:
        * orbsvcs/tests/RTCosScheduling/server.cpp:
        * orbsvcs/tests/RTCosScheduling/svc.conf:
        * orbsvcs/tests/Makefile:
        * tao/PortableServer/PortableServerS.h:

        Added the RT Corba 1.0 Scheduling Service.

Tue Oct 14 17:51:14 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/Exception.h:
	* tao/Exception.cpp:
	* tao/corbafwd.h: Applied patches to fix compilation errors with
	  LynxOS. Thanks to Olli Savia for the patches.

Tue Oct 14 09:32:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* orbsvcs/PSS/Makefile.parser: Removed lingTAO_Svc_Utils from the
	  link line. Shouldn't be needed.

Tue Oct 15 07:39:39 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp:
          Fixed incorrect trace statement to fix fuzz error

Tue Oct 15 05:58:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Kokyu_dsrt_schedulers/muf_example/server.cpp:
          Fixed warning in cygwin g++ build about uninitialized variable.

Mon Oct 13 22:10:35 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/Makefile:

	  Do not build the CPU load monitor test if the CosLoadBalancing
	  ORB services component hasn't been configured/built.  Addresses
	  minimum CORBA build problems.  Thanks to Venkita for pointing
	  out the problem.

	* orbsvcs/orbsvcs/Makefile.SSLIOP (ACE_SHLIBS):

	  Reverted "Fri Jan 19 13:16:10 2001  Priyanka Gontla
	  <pgontla@ece.uci.edu>" change that caused ACE_SHLIBS to be
	  undefined on HPUX.  It's not clear why it was necessary.  Allows
	  the TAO_SSLIOP library to be linked on HPUX again.  Thanks to
	  Torsten Kuepper <torsten.kuepper@nokia.com> for reporting the
	  problem.  [Bug 1590]

Mon Oct 13 16:35:00 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
	* orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.h:

	  Added RMS+MLF scheduling strategy, renamed RMS_Reconfig_Strategy
	  to RMS_FAIR_Reconfig_Strategy and MUF_Reconfig_Strategy to
	  MUF_FAIR_Reconfig_Strategy.

	* orbsvcs/Scheduling_Service/Scheduling_Service.cpp:
	* orbsvcs/Scheduling_Service/Scheduling_Service.h:
	* orbsvcs/examples/RtEC/Kokyu/Service.cpp:
	* orbsvcs/examples/RtEC/Schedule/Service.cpp:
	* orbsvcs/orbsvcs/Scheduler_Factory.cpp:

	  Renamed MUF_Reconfig_Strategy to MUF_FAIR_Reconfig_Strategy.

Mon Oct 13 15:29:09 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_client:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_server:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_example.mpc:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_client:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_server:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_example.mpc:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.muf_client:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.muf_server:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_example.mpc:
	* examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.mpc:
	* examples/Kokyu_dsrt_schedulers/Makefile.Kokyu_DSRT_Schedulers:
	  Removed explicit libraries and includes and used the base
	  projects instead. I had done this to generate the .dsp files.

        * examples/Kokyu_dsrt_schedulers/utils.h: Modified #include
	  "RTScheduler.h" to #include "tao/RTScheduling/RTScheduler.h".

Mon Oct 13 12:49:16 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
	* examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
	  Added ACE_ENV_ARG_PARAMETER to clear Fuzz errors.

Mon Oct 13 11:58:38 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* orbsvcs/PSS/Makefile.parser: Removed the new line which caused
	  compilation errors.

Mon Oct 13 10:59:47 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

	* examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.h:
	* examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.cpp:
	* examples/RTScheduling/Fixed_Priority_Scheduler/FP_DT_Creator.h:
	* examples/RTScheduling/Fixed_Priority_Scheduler/FP_DT_Creator.cpp:

	  Removed export qualification for the xxx_DT_Creator class. The
	  service declaration was changed to use ACE_Local_Service. This
	  is to fix problems with MSVC release builds.

	* examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.dsp:
	* examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.dsp:

	  Updated the library paths to get rid of link errors in MSVC
	  release build.

	* examples/RTScheduling/Starter.dsp:
	  Changed the Code Generation option in the release configuration
	  to Multithread DLL. This was causing problems in MSVC release
	  build.

Mon Oct 13 10:24:46 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
	* orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:

	  Changed the names of the interceptors. Since these classes are
	  memory managed by the TAO_Refcounted_LocalObject, no need to
	  delete them.

Mon Oct 13 08:58:16 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* orbsvcs/PSS/Makefile.parser:
	* tests/Objref_Sequence_Test/client.cpp:

	  Applied patches from Olli Savia to get the above compiling with
	  LynxOS.

Sun Oct 12 20:53:35 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FTORB.mpc
          Fixed incorrect component name for FTORB_Utils

Sun Oct 12 17:33:43 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * tao/Utils/Implicit_Deactivator.h
        * tao/Utils/ORB_Destroyer.h
        * tao/Utils/PolicyList_Destroyer.h
        * tao/Utils/utils_export.h
          Added  Win32 Export directives.

        * orbsvcs/orbsvcs/FaultTolerance.mpc
          Changed dependacy from ftorb to ftorbutils.

        * orbsvcs/orbsvcs/ESF/ESF_Worker.h
        * orbsvcs/orbsvcs/ESF/ESF_Worker.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Read.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.cpp
          Added set_size() to TAO_ESF_Worker which allows worker objects
          to know the size of the collection before iteration begins.

Sun Oct 12 14:13:16 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_client:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_server:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_example.mpc:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_client:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_server:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_example.mpc:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.muf_client:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.muf_server:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_example.mpc:

          Modified mpc files to use the newly created
          kokyu_dsrt_scheduler.mpb file and regenerated makefiles.

Sun Oct 12 06:31:56 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.dsp:
          Added TAO_Valuetype to the list of libraries to fix link errors
          in MSVC debug build.

Sun Oct 12 00:47:33 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/run_test.pl
          (init_ref):

          Do not hardcode LoadManager filename.  Use the value stored in
          the $lm_ior variable instead.

        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/CPU.dsw:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/client.dsp:

          New MSVC++ 6 project files for this test.

Sat Oct 11 23:47:39 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.cpp (loads):

          Reverted portion of change described in ChangeLog entry "Tue Apr
          22 13:51:45  2003  Chad Elliott  <elliott_c@ociweb.com>".  It
          prevented the getloadavg() call from being called on platforms
          that don't define ACE_HAS_SYS_LOADAVG_H, thus rendering the CPU
          load monitor useless.

          (TAO_LB_CPU_Monitor):

          Do not assign a default value to the "kind" field of the
          CosLoadBalancing::Location member of the TAO_LB_CPU_Monitor if a
          location ID is supplied by the user but a location "kind" is
          not.  Fixes a problem where it wasn't possible to retrieve a
          load monitor from the LoadManager.

        * orbsvcs/LoadBalancer/LoadMonitor.cpp:

          For the sake of consistency, make default push monitoring
          interval the same as the pull monitoring interval.

          Removed "-o" command line option description from the "usage"
          message.  The LoadMonitor binary does not accept such a command
          line option.

        * orbsvcs/tests/LoadBalancing/Makefile:
        * orbsvcs/tests/LoadBalancing/Makefile.bor:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/Makefile:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/Makefile.bor:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/Makefile:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/Makefile.bor:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/README:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/client.cpp:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/run_test.pl:

          New regression test that verifies Cygnus' CPU load monitor is
          functioning properly.

        * orbsvcs/performance-tests/LoadBalancing/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/default.conf:
        * orbsvcs/performance-tests/LoadBalancing/default_configuration.pl:
        * orbsvcs/performance-tests/LoadBalancing/default.conf.xml:
        * orbsvcs/performance-tests/LoadBalancing/Makefile:
        * orbsvcs/performance-tests/LoadBalancing/ORBInitializer.cpp:
        * orbsvcs/performance-tests/LoadBalancing/ORBInitializer.h:
        * orbsvcs/performance-tests/LoadBalancing/Roundtrip.cpp:
        * orbsvcs/performance-tests/LoadBalancing/Roundtrip.h:
        * orbsvcs/performance-tests/LoadBalancing/RPS_Monitor.cpp:
        * orbsvcs/performance-tests/LoadBalancing/RPS_Monitor.h:
        * orbsvcs/performance-tests/LoadBalancing/run_test.pl:
        * orbsvcs/performance-tests/LoadBalancing/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/ServerRequestInterceptor.cpp:
        * orbsvcs/performance-tests/LoadBalancing/ServerRequestInterceptor.h:
        * orbsvcs/performance-tests/LoadBalancing/svc.conf:
        * orbsvcs/performance-tests/LoadBalancing/svc.conf.xml:

          Load balancer performance test based on Single Threaded Latency
          test.  Neglected to provide a ChangeLog entry when this test was
          written a few months ago.

        * tests/RTScheduling/Current/Thread_Task.cpp (svc):

          Use the ".in()" accessor to gain access to the string held in a
          string sequence instead of CORBA::string_dup().  The latter was
          unnecessary in this case and only introduced memory leaks.

Sat Oct 11 21:42:36 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.{h,cpp}:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.{h,i,cpp}:
          Added scheduling policy and scope to configure the Kokyu
          dispatcher with.

        * orbsvcs/examples/RtEC/Kokyu/svc.conf.xml:
        * orbsvcs/examples/RtEC/Kokyu/svc.conf: Added scheduling policy
          for the example to configure the Kokyu dispatcher.

Sat Oct 11 11:28:04 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/RTScheduling/Starter.dsp: Added include/library paths
          and libraries to release configuration.

Sat Oct 11 11:17:52 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.dsp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.dsp:
        * orbsvcs/orbsvcs/Metrics.dsp:

          Added xxxx_BUILD_DLL macro definition to the release
          configurations to fix Win32 MSVC release builds.

Sat Oct 11 05:57:20 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.dsp:
          Added library paths to fix build errors in MSVC6 debug builds.

        * orbsvcs/examples/Notify/ThreadPool/ThreadPool.dsp:
          Removed this file since it was not getting used anywhere and
          incorrect also causing build errors. There were two other .dsp
          files (Consumer.dsp and Supplier.dsp) in the same directory
          which were getting built properly and these .dsp files include
          all the files in that directory between them.

Fri Oct 10 23:04:17 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:

          Guarded debugging statements with logging macros.

Fri Oct 10 11:58:25 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/RTScheduling/Common_IDL_Gen.dsp:

          Added custom build command for idl compilation in release
          configuration to clear build MSVC release build errors.

Fri Oct 10 11:51:42 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.dsp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.dsp:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Client.dsp:

          Added custom build command for idl compilation and updated
          include paths in release configuration to clear build MSVC
          release build errors.

        * performance-tests/Latency/Single_Threaded/server.dsp:
        * performance-tests/Latency/Single_Threaded/client.dsp:

          Added TAO_Messaging library to the release configuration to
          clear build MSVC release build errors.

Fri Oct 10 09:06:15 2003  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * orbsvcs/tests/Concurrency/CC_client.cpp (run_extended_tests): Replaced
          a NULL with a 0 so that the code compiles on LynxOS.  Thanks to
          Olli Savia <ops@iki.fi> for reporting this.

Fri Oct 10 10:46:51 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/Event_Service/Event_Service.h:
        * orbsvcs/Event_Service/Event_Service.cpp: Changed some
          enumeration definitions (SCHED_xx to ES_SCHED_xx to get rid of
          compiler errors in AIX. Thanks to Werner Buchert
          <w.buchert@medat.de> for pointing this out.

Fri Oct 10 10:36:01 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Metrics.dsp: Fixed build errors in MSVC release
          builds. The release configuration did not have the right include
          paths.

Fri Oct 10 09:48:05 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Kokyu_dsrt_schedulers/fp_example/fp_client.dsp:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_server.dsp:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_server.dsp:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_client.dsp:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_server.dsp:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_client.dsp:
          Fixed path to the idl compiler to clear MSVC Release build
          errors.

Fri Oct 10 09:17:42 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.dsp:
          Recreated this file to fix build errors (Error: no project
          loaded) in MSVC6.

Fri Oct 10 12:31:53 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance.bor
          No .i files are anymore available in the FaultTolerance
          directory, only .inl files, so updated the INCLUDES part
          of this makefile.

Fri Oct 10 06:18:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FT_ORB.bor:
          No .i files are anymore available in the FaultTolerance
          directory, only .inl files, so updated the INCLUDES part
          of this makefile.

Thu Oct 09 23:15:52 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FTORB.mpc
          Fixed the sharename in FT_ServerORB project

Thu Oct 09 20:33:24 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/Makefile
          updated dependancies for above Makefiles

Thu Oct 09 19:36:08 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FT_ServerPolicy_i.cpp
          Changed to include FT_ServerPolicy_i.inl instead of
          FT_ServerPolicy_i.i

Thu Oct 09 10:37:58 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.dsp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.dsp:
        * tests/ICMG_Any_Bug/Hello.dsw:
        * tests/ICMG_Any_Bug/client.dsp:
        * tests/ICMG_Any_Bug/server.dsp: Fix for build errors on
          Win2K_MSVC6_DLL_Debug build - changed the include path, library
          path and path for the IDL compiler.

Thu Oct  9 08:13:55 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Kokyu_dsrt_schedulers/Makefile.Kokyu_DSRT_Schedulers:
          Removed mpc generated INSTALL_CHECK stuff to fix symbolic link
          errors on parallel builds.

Thu Oct 09 01:45:51 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.inl
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.i
        * orbsvcs/orbsvcs/Makefile.FTORB
          Replaced FT_IOGR_Property.i with FT_IOGR_Property.inl

Wed Oct  8 23:24:12 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Kokyu_dsrt_schedulers/Makefile: Added subdirectories
          fp_example, mif_example and muf_example to the Makefile.

Wed Oct  8 23:18:46 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * ChangeLog: Fixed formatting errors in some of the ChangeLog
          entries. Thanks to Bala for pointing this out.

Wed Oct  8 22:30:20 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Makefile: Made modifications to build
          Kokyu_dsrt_schedulers subdirectory only if rt_corba is enabled.

Wed Oct 08 21:31:19 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/Makefile.FTORB:
        * orbsvcs/orbsvcs/FT_ORB.bor:
        * orbsvcs/orbsvcs/FT_ORB.dsp:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Endpoint_Selector_Factory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Endpoint_Selector_Factory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.inl
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.inl:

          Changed for the seperation of FT framework. The server side
          and client ORB functinalities are seperated into different
          files. In MPC build, 3 different projects are created.
          FT_ClientORB and FT_ServerORB are used for fault tolerant
          client and server respectively. FTORB_Utils is used by
          both FT_ClientORB and FT_ServerORB.


Wed Oct  8 20:05:20 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent.mpc
        * orbsvcs/orbsvcs/ec_typed_events.mpb

          Fixed the need for specifying ec_typed_event=1 during make.

        * orbsvcs/orbsvcs/CosEvent.mpb

          Removed due to the above change.

        * tao/CORBALOC_Parser.cpp:

          Fixed the unused variable warning.

Wed Oct  8 14:45:22 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp (to_url):
          Corrected a bug in corbaname ObjectURL generation.
          This function was inserting the wrong separator character
          between the address and name portions of the resulting
          corbaname URL.  According to OMG Document formal/02-09-02,
          it should insert a '#', but instead it was inserting a '/'.
          This fixes [Bug 1606].

Wed Oct  8 14:26:42 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * tao/CORBALOC_Parser.cpp:
          Added support for corbaloc:sciop.

Wed Oct  8 09:14:10 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Makefile:
          Added Kokyu_dsrt_schedulers subdirectory to DIRS.

Wed Oct  8 08:09:11 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.dsp:
        * examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.dsw:
        * examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.mpc:
        * examples/Kokyu_dsrt_schedulers/Kokyu_dsrt_schedulers_export.h:
        * examples/Kokyu_dsrt_schedulers/Makefile.Kokyu_DSRT_Schedulers:
        * examples/Kokyu_dsrt_schedulers/Makefile:
        * examples/Kokyu_dsrt_schedulers/README:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qosC.cpp:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qosC.h:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qosC.i:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qos.pidl:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qosC.h.diff:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.h:
        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.h:
        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.i:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduling.pidl:
        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.h.diff:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.h:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.h:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.i:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduling.pidl:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.h.diff:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.h:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.h:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.i:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduling.pidl:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.h.diff:
        * examples/Kokyu_dsrt_schedulers/Task_Stats.cpp:
        * examples/Kokyu_dsrt_schedulers/Task_Stats.h:
        * examples/Kokyu_dsrt_schedulers/Task_Stats.inl:
        * examples/Kokyu_dsrt_schedulers/utils.cpp:
        * examples/Kokyu_dsrt_schedulers/utils.h:

          Added initial implementations of DSRTCORBA schedulers based on
          Kokyu ($ACE_ROOT/Kokyu) dispatching mechanisms.

        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_client:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_server:
        * examples/Kokyu_dsrt_schedulers/fp_example/README:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_client.dsp:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_example.dsw:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_example.mpc:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_server.dsp:
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/test.idl:
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.h:
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.i:

          Added example using fixed priority DSRTCORBA scheduler based on
          Kokyu.

        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_client:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_server:
        * examples/Kokyu_dsrt_schedulers/mif_example/README:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_client.dsp:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_example.dsw:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_example.mpc:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_server.dsp:
        * examples/Kokyu_dsrt_schedulers/mif_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/test.idl:
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.h:
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.i:

          Added example using Maximum Importance First (MIF) DSRTCORBA
          scheduler based on Kokyu.

        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.muf_client:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.muf_server:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_client.dsp:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_example.dsw:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_example.mpc:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_server.dsp:
        * examples/Kokyu_dsrt_schedulers/muf_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/test.idl:
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.h:
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.i:

          Added example using Maximium Urgency First (MUF) DSRTCORBA
          scheduler based on Kokyu.

Wed Oct  8 07:29:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler_Starter.bor:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler_Test.bor:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler_Starter.bor:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler_Test.bor:
        * tests/RTScheduling/Current/Current.bor:
        * tests/RTScheduling/DT_Spawn/DT_Spawn.bor:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Client.bor:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Server.bor:
        * tests/RTScheduling/Thread_Cancel/Thread_Cancel.bor:
          Corrected these makefiles. Looks that the MPC generation for
      Borland isn't correct yet.

        * examples/Makefile.bor:
        * tests/Makefile.bor:
          Added RTScheduling directory

        * examples/RTScheduling/Makefile.bor:
        * tests/RTScheduling/Makefile.bor:
          Added new BCB makefiles to build subdirectories.

Tue Oct  7 18:29:25 2003  Irfan Pyarali  <irfan@oomworks.com>

        * Added the following borland makefiles:

          - TAO/examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler_Starter.bor
          - TAO/examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler_Test.bor
          - TAO/examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.bor
          - TAO/examples/RTScheduling/MIF_Scheduler/MIF_Scheduler_Starter.bor
          - TAO/examples/RTScheduling/MIF_Scheduler/MIF_Scheduler_Test.bor
          - TAO/examples/RTScheduling/MIF_Scheduler/Makefile.bor
          - TAO/tests/RTScheduling/Current/Current.bor
          - TAO/tests/RTScheduling/Current/Makefile.bor
          - TAO/tests/RTScheduling/DT_Spawn/DT_Spawn.bor
          - TAO/tests/RTScheduling/DT_Spawn/Makefile.bor
          - TAO/tests/RTScheduling/Scheduling_Interceptor/Makefile.bor
          - TAO/tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Client.bor
          - TAO/tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Server.bor
          - TAO/tests/RTScheduling/Thread_Cancel/Makefile.bor
          - TAO/tests/RTScheduling/Thread_Cancel/Thread_Cancel.bor
          - TAO/tests/RTScheduling/VoidData/Makefile.bor
          - TAO/tests/RTScheduling/VoidData/VoidData.bor

        * Added the following mpc files:

          - TAO/examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.mpc
          - TAO/examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc
          - TAO/tests/RTScheduling/Current/Current.mpc
          - TAO/tests/RTScheduling/DT_Spawn/DT_Spawn.mpc
          - TAO/tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor.mpc
          - TAO/tests/RTScheduling/Thread_Cancel/Thread_Cancel.mpc
          - TAO/tests/RTScheduling/VoidData/VoidData.mpc

        * Added the following mpc base projects:

          - bin/MakeProjectCreator/config/rtscheduling.mpb
          - bin/MakeProjectCreator/config/rtscheduling_client.mpb
          - bin/MakeProjectCreator/config/rtscheduling_server.mpb

Fri Oct 03 22:42:24 2003  Chris Cleeland  <cleeland@ociweb.com>

        * TAO version 1.3.4 released.

Fri Oct  3 20:53:12 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/RTScheduling/RTS.dsw:
        * tests/RTScheduling/RTS.dsw:
          Added them with new names. Adding with the old names could
          make cvs barf again.

Fri Oct  3 20:42:15 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/RTScheduling/rtscheduling.dsw:
        * tests/RTScheduling/RTScheduling_Tests.dsw: Removed
          from the repo since it was creating a hassle for the
          beta.

Thu Oct  2 16:12:45 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.i:
          Fixed unused args warning.

Thu Oct  2 07:44:17 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/examples/RtEC/Kokyu/README:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Supplier.{cpp,h}:
          Modified example to use EC timers.

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.{cpp,h,i}:
          Changed memory allocation to use allocators.

        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.{cpp,h}:
          Removed Honeywell proprietary RMS_Dyn_MNO scheduling strategy
          since this cannot be released as per CD Gill.

Wed Oct  1 11:02:12 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/tao_idl.mpc:
        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Inherit from the crosscompile base project to disallow building
          this when crosscompiling for the target os.

Wed Oct  1 08:19:03 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.bor:
          Applied patches that Johnny sent me to fix compile errors in the
          static builds.

Tue Sep 30 10:31:04 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosTypedEventChannelAdmin.idl:
        * orbsvcs/orbsvcs/CosTypedEventComm.idl:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.h:
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
          Fixed fuzz errors.

Tue Sep 30 09:51:08 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/RTCORBA/Priority_Inversion_With_Bands/test_i.cpp (test_i):
        * tao/RTScheduling/RTSchedulerC.h:

          Fixed fuzz errors.

Tue Sep 30 09:15:17 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h: Fixed a
          compile error with static builds on BCB6.

Sun Sep 28 21:46:33 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:

          Fixed warnings in Borland builds that were caused due to
          improper exception  specifications.

Sun Sep 28 11:01:59 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:

          Initialized the UUID generator before generating an UUID for the
          interceptor.

Thu Sep 25 23:15:06 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Supports_Test_impl.cpp:

          Added CORBA environment variable parameter to constructor
          calls.

Thu Sep 25 16:08:50 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/PortableServer/Object_Adapter.cpp (servant_cleanup):

          Changed ACE_CATCHANY to ACE_CATCHALL.  This will ensure that all
          exceptions will be caught properly.  This means that unknown
          exceptions and structural exceptions on Windows will also be
          caught and handled rather than only CORBA exceptions.  Thus, if
          an application servant throws a non-CORBA exception while being
          cleaned up from a call to POA::cleanup_servant(), a multithread
          ORB will no longer deadlock itself.  This fixes bug 1524.
          Thanks to Bruce Mcintosh <bruce.mcintosh@boeing.com> and later
          Russell Noseworthy <j.russell.noseworthy@objectsciences.com> for
          reporting this problem.

        * tao/PortableServer/POA.cpp:

          Made the following POA accessors public:

          - outstanding_requests
          - active_object_map
          - waiting_destruction

        * tests/UNKNOWN_Exception:

          Added test for ensuring that UNKNOWN exceptions raised by the
          server are handling correctly by the ORB.  There are two places
          where this example tests for UNKNOWN exceptions: (a) UNKNOWN
          exception raised in an upcall and (b) UNKNOWN exception raised
          while a servant is being cleaned up after deactivation.  The
          number of outstanding requests in the POA are checked after each
          unit of work performed by the server.  The assumption is that if
          the number of outstanding requests are correct, then the server
          correctly handled the UNKNOWN exceptions.

          The following files were added:

          - tests/UNKNOWN_Exception/README
          - tests/UNKNOWN_Exception/UNKNOWN_Exception.dsw
          - tests/UNKNOWN_Exception/UNKNOWN_Exception.mpc
          - tests/UNKNOWN_Exception/client.cpp
          - tests/UNKNOWN_Exception/client.dsp
          - tests/UNKNOWN_Exception/run_test.pl
          - tests/UNKNOWN_Exception/server.cpp
          - tests/UNKNOWN_Exception/server.dsp
          - tests/UNKNOWN_Exception/test.idl
          - tests/UNKNOWN_Exception/Makefile
          - tests/UNKNOWN_Exception/Makefile.bor
          - tests/UNKNOWN_Exception/Makefile.UNKNOWN_Exception_Client
          - tests/UNKNOWN_Exception/Makefile.UNKNOWN_Exception_Server
          - tests/UNKNOWN_Exception/UNKNOWN_Exception_Client.bor
          - tests/UNKNOWN_Exception/UNKNOWN_Exception_Server.bor

          The following files were modified:

          - tests/TAO_Tests.dsw
          - tests/Makefile
          - tests/Makefile.bor
          - tests/README
          - $ACE_ROOT/bin/tao_orb_tests.lst

Thu Sep 25 11:54:42 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.h:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp:

        Renamed the <init> method to <_init>. This avoids warnings on
        solaris regarding hiding the ACE_Shared_Object::init signature.

Thu Sep 25 10:08:12 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
          Added .in() to use of an object reference to fix warnings on GNU
          compiler platforms.

Thu Sep 25 05:51:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FT_ORB.bor: Added FT_ServerRequest_Interceptor
          to the borland makefile. This should fix problems in the daily
          builds.

Wed Sep 24 22:32:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FT_ORB.dsp: Added FT_ServerRequest_Interceptor
          to the project file.

Wed Sep 24 09:12:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/IOGR/Makefile: Do not link the
          server wih the FT library since it is not required.

        * orbsvcs/tests/FaultTolerance/IOGR/svc.conf: Remove the file from
          the repo.

        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
          Added a test for extracting the IOGR version info from the
          profile.

Wed Sep 24 09:04:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp: The
          set_component () created problems if we don't send a constant
          version of TAO_Tagged_Components.

          Integrated from the oci_haft_branch. Some of the ideas that have
          been used in the development mentioned below were influenced by
          Huang-Ming Huang and Didier Becu
          <didier.becu@fr.thalesgroup.com>.

        Sat Sep 20 16:46:29 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
          Added explicit template specifications.

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h: Added
          exception specification for  get_tagged_components ().

        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
          Test for get_tagged_components () added.

        Fri Sep 19 20:02:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h: Did a 20000 feet level
          code review and left comments for OCI folks. More needs to be
          done.

        * orbsvcs/orbsvcs/Makefile.CosLoadBalancing:
        * orbsvcs/orbsvcs/Makefile.PortableGroup: Added an -I for the IDL
          compiler to include orbsvcs

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.cpp: Fixed
          compilation errors and unused variable warnings with g++.

        Fri Sep 19 19:49:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
          Server interceptors for the FTORB. This interceptor does the
          following at present

          - Checks the IOGR version of the incoming message and does what
            is specified in the FTCORBA spec

          - Checks for the special operation that we will have the RM send
            us to udate the IOGR and the version information.

          We need an operation to find out whether the replica is a
          primary or not and take required action.

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
          Moved all the interceptors to be in TAO namespace. We now have
          the retention id implemented properly. We now

          - on an outgoing operation, we generate a new retention id and
            stick it in the TSS

          - once a reply is received we clear it off the TSS

          - if a forward location happens we reuse the one form TSS.

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h: Changes
          requested by Curt Hibbs, which was to get the group information
          from within a IOGR.

        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.cpp: Installed
          server interceptors.

        * orbsvcs/orbsvcs/Makefile.FTORB: Added the
          ServerRequestInterceptor to the Makefile.

Wed Sep 24 09:02:19 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.cpp:
        * tao/Buffering_Constraint_Policy.cpp:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.cpp:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/PortableServer/POA_Policies.cpp: Fix for [Bug 1587]. Please
          see  the documentation of the bug at

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1587

          for more details. Thanks to Carlos O'Ryan for the patches.

        * tao/MProfile.cpp: Fix for [BUG 1589]. Please see the
          documentation of the bug at

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1589

          Thanks to Huang-Ming Huang for the patch

        * tao/CORBALOC_Parser.cpp: Added explicit (char*) cast to fix
          compile error.

          Thanks to Olli Savia <ops@iki.fi> for the patches.

Tue Sep 23 14:50:30 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tests/OBV/Supports/Supports_Test_impl.h:
        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/client.cpp:

          Added an ACE_ENV_ARG_DECL to vt_graph_impl argumented CTORs so
          that the CTOR can pass out exception information when emulated
          exceptions are in use.

          Also did minor reformatting to bring code in line for code
          formatting standards.

Mon Sep 22 23:39:49 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAOACE.dsw:

          Removed redundant dependencies from "Metrics" project.  Fixes
          "__NULL_IMPORT_DESCRIPTOR already defined" MSVC++ 6 link
          warnings.

Mon Sep 22 17:04:50 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Request_Interceptor.cpp:

          Changed guid_counter from a global variable to a public class
          member scoped within TAO_RTScheduling_Current.   This should get
          rid of compiler errors on statically-linked platforms.

Mon Sep 22 15:02:39 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * TAO_IDL/be/be_interface.cpp (gen_operation_table):

          Changed the elements used to seed the random number generator
          for creating a temporary file for gperf's output.  There were
          strange situations on certain multiprocessor parallel-make
          scoreboard builds where skeleton files were completely missing
          gperf output in them.  I'm hoping this avoids the problem in the
          future, but I can't guarantee.  Thanks to Chad Elliott for
          suggesting this as a possible source of the problem.

Mon Sep 22 11:57:42 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.cpp:

          Declared the environment variable in send_poll method as unused
          as it was not used in the method. This should remove the warning
          on Redhat Explicit Template build.

Fri Sep 19 07:49:19 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/RTScheduling/Current/Makefile (SRC):

          Corrected this Make variable.  It previously listed non-existent
          files, which caused the dependency generation step to fail.
          This should alleviate some bogus test failures showing up in
          some automated builds.

          (LIBS, TEST_LIBS):

          Replaced LIBS variable with TEST_LIBS, where the latter only
          contains the TAO_RTScheduler library.  There is no need to
          explicitly list the core ACE/TAO/RTCORBA libraries since they
          already exist in the RT_TAO_CLNT_LIBS variable used during the
          link step.

Fri Sep 19 07:30:52 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/ImplRepoC.h:

          Explicitly #undef IOR in this file to work around an HPUX
          namespace conflict.

        * orbsvcs/tests/IOR_MCast/server_i.h (enable_multicast):
        * orbsvcs/tests/IOR_MCast/server_i.cpp (enable_multicast):

          Removed CORBA::Environment parameter and accompanying
          ACE_TRY/CATCH blocks.  They were not used.  Fixes an unused
          "ACE_TRY_LABEL" warning in non-inline builds.

        * orbsvcs/tests/IOR_MCast/Makefile:

          Updated dependencies.  They were missing altogether

Thu Sep 18 14:11:53 MST 2003 Trevor Fields <fields_t@ociweb.com>

        * TAO/performance-tests/Cubit/TAO/DII_Cubit/DII_Cubit.mpc:

          Corrected the name of the IDL_Cubit project to build after

        * TAO/examples/Quoter/Quoter.mpc:
        * TAO/examples/TypeCode_Creation/TypeCode_Creation.mpc:
        * TAO/orbsvcs/IFR_Service/IFR_Service.mpc:
        * TAO/orbsvcs/LifeCycle_Service/LifeCycle_Service.mpc:
        * TAO/orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * TAO/orbsvcs/orbsvcs/FTORB.mpc:
        * TAO/orbsvcs/orbsvcs/FaultTolerance.mpc:
        * TAO/orbsvcs/orbsvcs/IFRService.mpc:
        * TAO/orbsvcs/orbsvcs/PortableGroup.mpc:
        * TAO/orbsvcs/tests/CosEvent/Basic/basiceventtestexe.mpb:
        * TAO/orbsvcs/tests/CosEvent/lib/CosEvent_lib.mpc:
        * TAO/orbsvcs/tests/EC_Custom_Marshal/EC_Custom_Marshal.mpc:
        * TAO/orbsvcs/tests/EC_Mcast/EC_Mcast.mpc:
        * TAO/orbsvcs/tests/EC_Multiple/EC_Multiple.mpc:
        * TAO/orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * TAO/orbsvcs/tests/Event/Performance/eventperftestexe.mpb:
        * TAO/orbsvcs/tests/InterfaceRepo/Application_Test/InterfaceRepo_Application_Test.mpc:
        * TAO/orbsvcs/tests/InterfaceRepo/IDL3_Test/InterfaceRepo_IDL3_Test.mpc:
        * TAO/orbsvcs/tests/InterfaceRepo/IFR_Test/InterfaceRepo_IFR_Test.mpc:
        * TAO/orbsvcs/tests/InterfaceRepo/Persistence_Test/InterfaceRepo_Persistence_Test.mpc:
        * TAO/tests/ICMG_Any_Bug/Hello.mpc:
        * TAO/tests/Object_Loader/Object_Loader.mpc:
        * TAO/tests/POA/Default_Servant/Default_Servant.mpc:
        * TAO/tests/POA/MT_Servant_Locator/MT_Servant_Locator.mpc:

          Changed to not build when minimum_corba = 1

        * TAO/orbsvcs/examples/RtEC/IIOPGateway/RtEC_IIOPGateway.mpc:
        * TAO/tao/RTCORBA/RTCORBA.mpc:
        * TAO/tao/RTPortableServer/RTPortableServer.mpc:
        * TAO/tao/RTScheduling/RTScheduler.mpc:

          Added requires += corba_messaging

        * TAO/tests/AMI_Buffering/AMI_Buffering.mpc:
        * TAO/tests/AMI_Timeouts/AMI_Timeouts.mpc:
        * TAO/tests/LongUpcalls/LongUpcalls.mpc:

          Added requires += ami

Thurs Sep 18 17:15:51 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.cpp:

          Added the missing send_poll method to the MIF_Scheduler and
          FP_Scheduler to make it consistent with the following change
          made earlier:

          Mon Sep 15 15:50:35 2003 Yamuna Krishnamurthy <yamuna@oomworks.com>

          This should fix the compile errors on linux and
          solaris.

Thu Sep 18 13:25:13 2003  George Edwards  <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Supports_Test_impl.cpp:

          Added missing exception specifications.

Wed Sep 17 16:05:13 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tests/Bug_1551_Regression/README
        * tests/Bug_1551_Regression/run_test.pl

          Added the README file about this regression test.
          Modified the testing times in the run_test.pl file.

Wed Sep 17 15:24:01 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.h:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp:

        Renamed the <init> method to <_init>. This avoids warnings on
        solaris regarding hiding the ACE_Shared_Object::init signature.

Wed Sep 17 13:29:31 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/extra_core.mpb:

          Split out some of the ORB_Core related files into a feature base
          project.  These are triggered by minimum_corba and corba_messaging
          feature names.

        * tao/tao.mpc:

          Inherit from extra_core feature base project and remove some
          source files from the listing.

Wed Sep 17 13:01:15 2003  George Edwards <g.edwards@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp:

          Reordered base class constructors in the initialization section
          of the copy constructor of valuetype skeleton classes to eliminate
          compiler warnings.

Wed Sep 17 12:34:02 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Supports_Test_impl.h:
        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/client.cpp:

          Added missing exception specifications.

Wed Sep 17 07:13:04 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Utils/Utils.mpc:

          The best way to set the dependency upon the PorableServer library
          is to inherit from the portableserver base project.  This will
          give you all of the needed dependencies.

Tue Sep 16 20:21:49 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp (visit_sequence):

          Added code to set the field_node_ member of the sequence
          being visited, which ensures the correct name will be
          generated for anonymous sequence members of valuetypes,
          similarly to the way it works for structs and unions.
          Thanks to Jeff Dugan <jdugan@orincon.com> for sending in
          the example IDL file that uncovered the bug.

Tue Sep 16 12:23:45 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tao/Utils/Utils.mpc:

          Corrected dependency on PortableServer library.

Mon Sep 15 16:03:25 MST 2003 Trevor Fields <fields_t@ociweb.com>

        * tao/Utils/Utils.mpc:

          Added missing dependency on PortableServer library.

Mon Sep 15 13:22:37 MST 2003 Trevor Fields <fields_t@ociweb.com>

        * orbsvcs/performance-tests/RTEvent/lib/RTServer_Setup.cpp:

          Fixed passing of ACE_ENV_ARG_PARAMETER to super class.
          It was using the the declaration macro instead of parameter.

Mon Sep 15 15:50:35 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/RTScheduler.pidl:
        * tao/RTScheduling/RTSchedulerC.h:
        * tao/RTScheduling/RTSchedulerC.cpp:
        * tests/RTScheduling/Scheduler.h:
        * tests/RTScheduling/Scheduler.cpp:

          The send_poll operation on the Scheduler interface was
          missing. This was required to interact with the scheduler when
          the send_poll interception occurs. Hence, it was added.

Mon Sep 15 11:58:35 MST 2003 Trevor Fields <fields_t@ociweb.com>

        * orbsvcs/performance-tests/RTEvent/lib/Peer_Base.cpp:

          Fixed emulated exception macro.  "ACE_ENV_ARG_PARAMETER", not
          "ACE_ENV_SINGLE_ARG_PARAMETER" (in this case).

Mon Sep 15 11:25:37 MST 2003 Trevor Fields <fields_t@ociweb.com>

        * orbsvcs/tests/Event/Mcast/Complex/Complex.mpc:
        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc:
        * orbsvcs/tests/Event/Mcast/Two_Way/Two_Way.mpc:

          Changed the case of the "after +="  ECMcastTests_lib
          value.  This should make the Debian_Full mpc build in
          the correct order.

Mon Sep 15 12:06:47 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tao/Valuetype/ValueBase.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp:

          Added explicit base class initialization in copy constructor
          for valuetypes that support concrete interfaces.

Mon Sep 15 11:16:51 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/Request_Interceptor.cpp :

          In send_reply when the DT is cancelled the method should return
          and not continue as it used to before. Also corrected the
          updation of previous current in TSS.

          Changed the incorrect call to receive_reply on the scheduler in
          send_poll to send_poll call on the scheduler.

Mon Sep 15 07:05:31 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/RTCORBA/RTCORBA.mpc:

          Added a requires of rt_corba to the RTCORBA project.

Sun Sep 14 17:01:31 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/Supports_Test_impl.h:
        * tests/OBV/Supports/README:

          Fixed compilation error due to incomplete mutex type declaration
          in single-threaded builds. Updated documentation.

Fri Sep 12 15:13:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/examples/Notify/Lanes/Supplier.dsp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.dsp:

          Fixed release configuration settings.

Fri Sep 12 13:36:02 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/RTKokyuEvent.dsp:
        * orbsvcs/examples/RtEC/Kokyu/EC_Schedule_Service.dsp:

          Fixed project settings.

Fri Sep 12 10:58:28 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile (SRVR_LIBS):

          Explicitly link the ACE_SSL library to address an unresolved
          symbol link-time error in Solaris Sun CC 5.3 builds.  The
          server binary appears to needs the ACE_SSL_Context::instance()
          method, at least according to the linker error.

Fri Sep 12 12:50:57 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/RTScheduling/Current/Current.dsp:
        * tests/RTScheduling/DT_Spawn/DT_Spawn.dsp:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Client.dsp:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Server.dsp:
        * tests/RTScheduling/Thread_Cancel/Thread_Cancel.dsp:
        * tests/RTScheduling/VoidData/VoidData.dsp:

          Fixed release settings, and changed debug settings to link to
          debug multi-threaded DLLs. Also added dependency on
          IDL compiler to all configurations.

Fri Sep 12 10:42:30 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.h:

          Moved typedefs within the preprocessor block that is enabled
          when ACE_ENABLE_TIMEPROBES and ACE_COMPILE_TIMEPROBES are
          defined.  Fixes compile-time errors on builds that do not enable
          timeprobe support.

Fri Sep 12 10:29:13 MST 2003 Trevor Fields <fields_t@ociweb.com>

        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:

          Fixed compile error due to missing ACE_ENV_ARG_DECL.

Fri Sep 12 12:14:39 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAOACE.dsw:

          Added dependencies on PortableServer and RTCORBA for
          RTScheduler.

        * tao/RTScheduling/TAO_RTScheduler.dsp:

          Fixed release settings.

Fri Sep 12 11:55:04 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTScheduling/TAO_RTScheduler.dsp:

          Turned on RTTI for the release configuration.

Fri Sep 12 10:54:14 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/client.dsp:

          Turned on RTTI for all configurations.

Thu Sep 11 15:41:47 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/Supports_Test_impl.h:
        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:

          Fixed compile errors due to missing ACE_ENV_ARG_DECL.

Thu Sep 11 14:01:47 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

          Added more template specializations to placate explicit
          template instantiation builds.

Thu Sep 11 08:32:00 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile:
        * examples/RTScheduling/MIF_Scheduler/Makefile:

          Removed duplicate library instances in link command.  Addresses
          link errors showing up in statically linked builds.

Wed Sep 10 17:49:10 2003  George Edwards <g.edwards@vanderbilt.edu>

        Added files:

        * tests/OBV/Supports/Supports_Test.mpc:
        * tests/OBV/Supports/client.cpp:
        * tests/OBV/Supports/server.cpp:

        Removed files:

        * tests/OBV/Supports/Makefile:
        * tests/OBV/Supports/Makefile.bor:
        * tests/OBV/Supports/Client.dsp:
        * tests/OBV/Supports/Server.dsp:
        * tests/OBV/Supports/Supports_Test.dsw:
        * tests/OBV/Supports/Supports_Test.ncb:
        * tests/OBV/Supports/Client/client.cpp:
        * tests/OBV/Supports/Server/Server.cpp:

          Removed project files and make files. Added a MPC file that will
          eliminate include errors. Moved all files to same directory.

Wed Sep 10 16:03:50 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTScheduling/RTScheduler_Manager.h:

          Removed all manipulations of MSVC #pragma warning disables.
          Everything necessary is already in config-win32-msvc-*.h
          and the further #pragmas were actually re-enabling some of
          the warnings.

Wed Sep 10 13:19:23 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

          Added explicit template instantiations of
          TAO_IFR_Generic_Utils<CORBA::ExtInitializerSeq>,
          TAO_IFR_Generic_Utils<CORBA::InitializerSeq>,
          POA_CORBA::ExtValueDef_tie<TAO_ExtValueDef_i>, and
          POA_CORBA::ComponentIR::ModuleDef_tie<TAO_ModuleDef_i>.

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Added explicit template instantiations of
          ACE_Vector<AST_Factory *> and ACE_Array_Base<AST_Factory *>

Wed Sep 10 08:15:13 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IOP_IORC.i:

          Explicitly #undef IOR in this file to work around an HPUX
          namespace conflict.  For some reason, the same #undef in
          IOP_IORC.h is not enough.

Wed Sep 10 10:05:38 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV.mpc:
        * orbsvcs/orbsvcs/CosConcurrency.mpc:
        * orbsvcs/orbsvcs/CosLifeCycle.mpc:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/CosTime.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/ETCL.mpc:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/orbsvcs/IFRService.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTKokyuEvent.mpc:
        * orbsvcs/orbsvcs/RTOLDEvent.mpc:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/RTSchedEvent.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/Security.mpc:

          Add to tagchecks instead of directly assigning to it.

Wed Sep 10 07:48:55 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/be/be_interface.cpp:

          Added some randomization to the generation of the gperf input
          filename.  This allows multiple tao_idl instances to process idl
          files that have the same but are in different directories.

        * tests/Oneway_Buffering/Oneway_Buffering.mpc:

          Reverted my change from Mon Sep  8 07:06:38 2003.  With my
          automatic parallel dependency change for MPC, this is not
          necessary.

Tue Sep  9 16:21:55 MST 2003 Trevor Fields <fields_t@ociweb.com>

        * TAO/orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp:

          Removed duplicate explicit and pragma template instantiations.

Tue Sep  9 14:30:13 MST 2003 Trevor Fields <fields_t@ociweb.com>

        * TAO/orbsvcs/orbsvcs/Event/EC_RTCORBA_Dispatching.cpp:

          Changed array constructor to use a temporary variable
          instead of the direct funtion call.  gcc 2.95 on Solaris
          cant handle function call as length in initialization.

Mon Sep  8 16:01:08 2003  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tao/Adapter.cpp (find_adapter): Fixed some mistakes in coding
          style.  Thanks to Gan Deng for reporting this.

Mon Sep  8 23:29:17 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IOP_IORC.h:

          Moved HPUX-specific "#undef IOR" immediately after the last
          header include.  It ended up being hidden in some cases, which
          causes syntax errors in the `IOP_IORC.i' inline file to appear.

Mon Sep  8 23:21:51 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile (LIBS):
        * examples/RTScheduling/MIF_Scheduler/Makefile (LIBS):

          Added missing "RTCORBA", "TAO_Svc_Utils" and "TAO_IORTable"
          libraries to the list of libraries to link.  They must be
          explicitly listed for statically linked builds.

Mon Sep  8 18:56:30 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

          Fixed typos in servant class names.

Mon Sep  8 12:38:22 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/RTScheduling/RTScheduler.mpc:

          Added rtcorba and portableserver to the inheritance list.

Mon Sep  8 07:06:38 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Oneway_Buffering/Oneway_Buffering.mpc:

          Force the client and admin projects to be built after the server
          to avoid problems with processing the idl file in parallel.

Sun Sep  7 14:15:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ORB.cpp:

          Added explicit template instantiations for ORB_var and ORB_out.

Sun Sep  7 13:59:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

          Fixed typo and added #include of OperationDef_i.h.

Sun Sep  7 09:50:38 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

          Fixed incorrect preprocessor conditional expression.

Sat Sep  6 08:08:19 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/GIOPC.h:
        * tao/target_specification.h:

          #undef "IOR" (for HPUX) after all headers have been included to
          make sure it isn't indirectly redefined by other headers.
          Addresses TAO HPUX build failures.

Fri Sep  5 20:31:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

          Added specializations of TAO_IFR_Generic_Utils<T>::set_initializers
          guarded so they are seen only by platforms requiring explicit
          template instantiation. Thanks to Trevor Fields <fields_t@ociweb.com>
          and Ossama Othman <ossama@dre.vanderbilt.edu> for reporting the
          problem.

Fri Sep  5 08:19:20 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/CosEvent/Basic/basiceventtestexe.mpb:

          Removed the use of the server base project and replaced it with
          taoserver.

Thu Sep  4 16:07:51 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/RTScheduling/Makefile: Reverted the Makefile changes that
          went in by accident when the this "Wed Sep  3 17:37:21 2003
          Balachandran Natarajan  <bala@dre.vanderbilt.edu>" checkin was
          done.

Wed Sep  3 21:59:47 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/Options.html:

          Fixed incorrect HTML.

          Fixed absolute links flagged by "fuzz".  When possible, relative
          links should be used.

Wed Sep  3 20:32:00 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/RTScheduling/Scheduler.cpp (TAO_Scheduler):

          Added missing "ACE_ENV_ARG_PARAMETER" argument to
          "ORB::resolve_initial_references()" call.

Wed Sep  3 20:25:52 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Pseudo_VarOut_T.cpp (operator=):

          Removed spurious ACE_INLINE declaration.  Fixes a "fuzz" error.

        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.i (push):

          Added missing "ACE_CHECK".

        * orbsvcs/examples/Notify/Lanes/Consumer.cpp:
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/Lanes/ORB_Objects.cpp:
        * orbsvcs/examples/Notify/Lanes/ORB_Run_Task.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/ORB_Objects.cpp:
        * orbsvcs/examples/Notify/ThreadPool/ORB_Run_Task.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp:
        * orbsvcs/orbsvcs/Notify/AdminProperties.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_T.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup_T.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.cpp:
        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.cpp:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/Batch_Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.cpp:
        * orbsvcs/tests/Concurrency/lex.CC_command.cpp:

          Corrected broken "Id" RCS ID keywords.  "id" -> "Id".  Fixes
          "fuzz" build errors.

Wed Sep  3 17:37:21 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/RTScheduling/RTScheduler.mpc: Added the above file into the
          repository.

Wed Sep  3 17:10:58 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Messaging/Asynch_Invocation.h:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.h:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp: These files are not
          meant for the main trunk. Somehow sneaked into the main trunk.

Tue Sep  2 13:38:37 2003  Ossama Othman <ossama@dre.vanderbilt.edu>

        * TAOACE_Static.dsw:

          Fixed incorrect inter-project dependencies for PortableServer,
          ObjRefTemplate, and IORInterceptor projects.  Fixes "duplicate
          definition" link-time errors.  Thanks to Alexander Jasper
          <alexander.jasper@gmx.net> for pointing out the problem.

Tue Sep  2 07:20:13 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/tao_idl.mpc:

          Remove the use of the base project taoversion in order to have a
          consistent versioning of the TAO_IDL projects.

Sun Aug 31 15:43:03 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * performance-tests/Sequence_Latency/Thread_Per_Connection/Client_Task.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/Client_Task.cpp:
          Changed const int to int in Client_Task ctor.  Thanks to Johnny
          Willemsen <jwillemsen@remedy.nl> for this patch.

Sat Aug 30 16:50:51 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
          Added #include ace/Null_Mutex.h needed due to recent subsetting.

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
          Added #include ace/Reverse_Lock_T.h needed due to recent
          subsetting.

        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.cpp:
          Added #include ace/SString.h needed due to recent subsetting.

        * tao/PredefinedType_Seq_Tmplinst.cpp:
          Added #include tao/Object.h when
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION is defined and needed
          due to recent subsetting.

        * tao/Typecode.cpp:
          Added #include tao/Sequence_T.h when
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION is defined and needed
          due to recent subsetting.

Fri Aug 29 17:00:00 2003  Justin Michel <michel_j@ociweb.com>

        * orbsvcs/examples/CosEC/TypedSimple/CosEC_TypedSimple.mpc:

        Corrected this to make use of the proper base projects, and added
        requires += ec_typed_events so that this test won't be built
        if typed events are disabled.

Fri Aug 29 15:18:36 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/LB_server.[h,cpp]:
          Changed loc1 and loc2 to loc_1 and loc_2 since the former are
          definitions on Solaris.

Fri Aug 29 14:16:18 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_generator.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/include/ast_generator.h:

          Removed AST_Generator::create_expr (unsigned long), and
          replaced its remaining uses with the version taking
          ACE_UINT64 and AST_Expression::ExprType, which has subsumed
          its function. This change should eliminate a problem
          BCB has disambiguating AST_Generator::create_expr (unsigned long)
          and be_generator::create_expr (UTL_IdList *) in the derived
          class.

Fri Aug 29 11:07:45 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/examples/CosEC/TypedSimple/CosEC_TypedSimple.mpc:

          Added necessary lines for includes and idlflags.

Fri Aug 29 10:58:57 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:

          Fixed '_ACE_CORBA_Environment_variable undeclared' error.

Fri Aug 29 09:49:57 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Codec/client.cpp: Cosmetic fix. Removed the word "warning"
          from a debug statement. The data structure that is used for
          encoding and decoding is always aligned on an 8 byte
          boundary. There was a time when we used a data structure that
          was aligned on a 4 byte boundary and after encoding we used to
          have data aligned on a 8 byte boundary. This problem was fixed
          long back, but the warning word was not removed. This checkin
          fixes that.

Fri Aug 29 08:24:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTCORBA/RT_Protocols_Hooks.cpp:

          Added #include of tao/debug.h and made cosmetic changes to
          keep line lengths under 80 columns.

Fri Aug 29 07:45:30 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PollableC.cpp:

          Fixed two occurrences of 'const const' in method signatures.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          pointing out the problem.

Thu Aug 28 22:04:40 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IOP_IORC.h:

          Made #undef of "IOR" (for HPUX) match the original one found in
          corbafwd.h.  It is more generic.

        * tao/Object.h:
        * tao/Stub.h:
        * tao/corbafwd.h:

          #undef "IOR" (for HPUX) after all headers have been included to
          make sure it isn't indirectly redefined by other headers.
          Addresses TAO HPUX build failures.

Thu Aug 28 19:15:44 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:
        * tests/Portable_Interceptors/Collocated/Dynamic/test_i.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Client_Task.cpp:

          Fixed compilation errors related to misused ACE error handling macros.

Thu Aug 28 18:35:44 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Acceptor_Impl.cpp:

          Include "tao/debug.h" for TAO_debug_level global variable.

        * tao/Any_Impl_T.cpp:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Special_Impl_T.cpp:

          Include "tao/Environment.h" for CORBA::Environment class.

        * tao/Any_Dual_Impl_T.cpp:

          Include "tao/CDR.h" for TAO_{Input,Output}CDR types.

Thu Aug 28 17:34:51 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/RTEvent/lib/Auto_Functor.cpp
          (~Auto_Functor):
        * orbsvcs/performance-tests/RTEvent/lib/ORB_Shutdown.inl
          (ORB_Shutdown):

          Fixed emulated exception macro.  "ACE_ENV_ARG_PARAMETER", not
          "ACE_ENV_SINGLE_ARG_PARAMETER" (in this case).

Thu Aug 28 23:39:28 UTC 2003  Scott Harris <harris_s@ociweb.com>

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Server_Task.cpp

          Fixed include error. "ace/Stream.h" -> "ace/streams.h"
          Thanks Don Hinton.

Thu Aug 28 18:10:33 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:

          Added #include of tao/CDR.h to fully define TAO_InputCDR.

        * tao/Utils/RIR_Narrow.cpp:

          Added explicit 'typename' to return type of each class
          method, since they are typedefs inside template classes,
          and gcc 3.3.1 is no longer tolerant of implicit typenames.

Thu Aug 28 22:24:51 UTC 2003  Scott Harris <harris_s@ociweb.com>

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Server_Task.cpp

          Fixed include error. "ace/Streams.h" -> "ace/Stream.h"

Thu Aug 28 08:43:21 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/NVList.h:
        * tao/NVList.cpp:

          Moved "Environment.h" include to the header file.  Some code in
          NVList.i requires the CORBA::Environment class declaration.
          Fixes builds where emulated exceptions are used.

Thu Aug 28 08:21:24 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ObjectKey_Table.h:
        * tao/ObjectKey_Table.cpp:

          Moved "Object_KeyC.h" include to ObjectKey_Table.h.  The
          ObjectKey table's ACE_RB_Tree template declaration/typedef
          requires a complete type.  Fixes MSVC++ 6 builds.

Thu Aug 28 07:41:58 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/Unknown_User_Exception.cpp:

          Include "tao/Environment.h" for CORBA::Environment type.

        * tao/Messaging/Connection_Timeout_Policy_i.cpp:

          Include "tao/debug.h" for TAO_debug_level global variable.

        * tao/Strategies/uiop_endpoints.h:

          Include "tao/CDR.h" for TAO_{Input,Output}CDR types.

Thu Aug 28 12:37:21 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.cpp:
          Fixed unused variable warning and compile problem in emulated
          exception build.

Wed Aug 27 21:45:59 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Big_Oneways/Session.h:
        * tests/Big_Twoways/Session.h:

          Include "ace/Null_Barrier.h" in the single-threaded case to pull
          in ACE_Null_Barrier class declaration.

Thu Aug 28 04:24:24 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/.depend.Makefile.RT_Notification:
        * orbsvcs/tests/Notify/Destroy/.depend.Makefile:
        * orbsvcs/tests/Notify/Driver/.depend.Makefile:
        * orbsvcs/tests/Notify/RT_lib/.depend.Makefile:
        * orbsvcs/tests/Notify/Test_Filter/.depend.Makefile:
        * orbsvcs/tests/Notify/lib/.depend.Makefile:
          Removed these files since they should be generated dynamically
          by the new MPC Makefiles (that will also be generated
          dynamically).

Wed Aug 27 21:13:21 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/Options.cpp:

          Include "ace/Null_Mutex.h" to pull in ACE_Null_Mutex class
          declaration.

Wed Aug 27 21:00:41 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Adapter.h:

          Removed unnecessary "tao/Object.h" include.  Forward declaring
          CORBA::Object_{ptr,out} (via corbafwd.h) and "TAO::ObjectKey" is
          enough.

        * tao/Adapter.cpp:

          Include "Object.h" to pull in complete CORBA::Object_out type.

        * tao/Any.h:

          Removed unnecessary "tao/Object.h" include.

        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_SystemException.cpp:

          Include "tao/Environment.h" to pull in CORBA::Environment
          declaration.

        * tao/Acceptor_Filter.h:
        * tao/LocalObject.h:

          Removed unnecessary "tao/Object_KeyC.h" include.  A
          "TAO::ObjectKey" forward declaration is enough.

        * tao/CDR_Encaps_Codec.h:

          Include "IOP_CodecC.h" instead of "IOPC.h".  The former is
          lighter weight.

        * tao/Connector_Registry.h:

          No longer any need to include "tao/Endpoint.h".

          (get_connector):
        * tao/Connector_Registry.i (get_connector):

          Removed version of this method that accepts a TAO_Endpoint.  It
          is redundant.  Just use the version that accepts an endpoint tag
          value.  Allows removal of "tao/Endpoint.h" include.

        * tao/Invocation.cpp (perform_call):

          Use version of TAO_Connector_Registry::get_connector() that
          accepts an endpoint tag value instead of a pointer to an
          endpoint.  The latter is redundant and has been removed.

        * tao/MProfile.h:
        * tao/Message_PolicyValueC.h:
        * tao/PolicyFactory_Registry.h:

          Include "tao/Policy_ForwardC.h" instead of "tao/PolicyC.h".  The
          former is much lighter weight than the latter.  This helps
          improve compile times.

        * tao/MProfile.i (create_policy_list):
        * tao/MProfile.cpp (create_policy_list):

          Uninlined this method.  Inlining it didn't buy us much.

        * tao/Muxed_TMS.h:
        * tao/Typecode.h:

          Include "Hash_Map_Manager_T.h" instead of "Hash_Map_Manager.h".
          We save one level of header indirection in doing so since the
          latter includes the former.

        * tao/NVList.h:

          Forward declare TAO_ORB_Core class.

        * tao/Object.h:
        * tao/corbafwd.h:

          Moved the CORBA::Object_{var,out} typedefs to corbafwd.h.
          Allows reduction of inter-header dependencies for headers that
          only require forward declarations, not the complete types.

        * tao/PolicyFactory_Registry.h (create_policy, _create_policy):
        * tao/PolicyFactory_Registry.cpp (create_policy, _create_policy):

          Removed exception specifications.  They aren't strictly needed,
          and forced a dependency on PolicyC.h due to CORBA::PolicyError
          being placed in them.

        * tao/Any_Impl_T.cpp:
        * tao/DynamicC.h:
        * tao/TimeBaseC.h:

          Include "tao/CDR.h" for TAO_{Input,Output}CDR types.

        * tao/Transport.h:

          No need to include "tao/Exceptions.h" and
          "tao/Transport_Descriptor_Interface.h".

        * tao/Transport_Mux_Strategy.h:

          No need to include "IOPC.h".  Include "corbafwd.h" instead.

        * tao/Transport_Mux_Strategy.cpp:

          No need to include "Reply_Dispatcher.h".

        * tao/TypeCodeFactory_Adapter.h:

          Do not use default CORBA::Environment parameter values for
          TAO-specific/internal code.  Removed the default parameter
          values.

        * tao/target_specification.h:

          No need to include "tao/Object_KeyC.h" and "tao/IOPC.h".
          Suitable forward declarations in the IOP and TAO and namespaces
          are enough.

          Include "tao/corbafwd.h" to pull in primitive types in CORBA
          namespace.

Thu Aug 28 03:46:28 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Utils/Utils.mpc:
          Added missing mpc file.

Wed Aug 27 17:37:44 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/Portable_Interceptors/Bug_1559/Bug_1559.mpc
        * tests/Portable_Interceptors/Bug_1559/Client_ORBInitializer.cpp
        * tests/Portable_Interceptors/Bug_1559/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_1559/Server_ORBInitializer.cpp
        * tests/Portable_Interceptors/Bug_1559/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_1559/client.cpp
        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp
        * tests/Portable_Interceptors/Bug_1559/interceptors.h
        * tests/Portable_Interceptors/Bug_1559/run_test.pl
        * tests/Portable_Interceptors/Bug_1559/server.cpp
        * tests/Portable_Interceptors/Bug_1559/test.idl
        * tests/Portable_Interceptors/Bug_1559/test_i.cpp
        * tests/Portable_Interceptors/Bug_1559/test_i.h

          Added test for portable interceptors. The test verifies that
          service context manipulation works when a LOCATION_FORWARD is
          received by a client (Bugzilla 1559).

Wed Aug 27 15:13:45 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/ORB_init/Portspan/simpleI.cpp (test):

          Fixed unused argument warning.

Wed Aug 27 15:10:28 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/IOR_MCast/server_i.cpp (enable_multicast):

          Fixed emulated exception macro usage.

Wed Aug 27 14:57:06 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/fe/y.tab.cpp (tao_yydestruct):

          Silence an "unused variable" warning.

Wed Aug 27 14:48:17 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ClientRequestInfo_i.h:

          No need to include "tao/StringSeqC.h".

        * tao/DLL_ORB.h:

          Updated documentation to explicitly mark the TAO_DLL_ORB class
          as deprecated in the Doxygen generated documentation.

        * tao/ORBInitInfo.h:

          No need to include "tao/StringSeqC.h".  A forward declaration is
          enough.

          (TAO_ORBInitInfo):
        * tao/ORBInitInfo.cpp (TAO_ORBInitInfo):

          Updated to use TAO_Objref_{var,out} templates instead of
          defining custom _var and _out types.

        * tao/corba.h:

          No need to include "tao/varbase.h".

        * tao/Objref_VarOut.h:

          Corrected documentation.

        * orbsvcs/orbsvcs/AV/UDP.cpp (connect):

          Fixed warning about potential use of an uninitialized variable.

Wed Aug 27 14:11:35 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/RTSched.dsp:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/Makefile.RTSched: Removed RtecBaseC.cpp and
          RtecBaseS.cpp from the list of source files.

Wed Aug 27 13:14:24 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler.cpp: Added explicit
          template instantiations to fix link errors in
          RH71_Explicit_Templates build.

Wed Aug 27 16:58:11 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp:
          Fixed compile errors in emulated exception builds

Wed Aug 27 16:53:36 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/consumer.cpp:
          Fixed compile errors in emulated exception builds

Wed Aug 27 16:28:32 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile:
          Changed Sched to RTSched, this should fix the Debian Minimum static
          builds. Thanks to Venkita Subramonian for noticing that I forgot to
          update this.

Wed Aug 27 06:22:21 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/InterfaceRepo_IDL3_Test.mpc:

          Set the IDL_Files to empty since the idl file in this directory
          isn't meant to be compiled.

Tue Aug 26 17:57:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/Makefile:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/y.tab.cpp.diff:
        * TAO_IDL/fe/y.tab.h:
        * TAO_IDL/include/utl_namelist.h:
        * TAO_IDL/util/utl_namelist.cpp:

          Fixed a bug in the IDL grammar representation - the 'truncatable'
          keyword was out of place, so its use, even if correct, output a
          syntax error instead of the intended 'not supported' warning.
          Thanks to Manas <manasr_sahoo@yahoo.com> for reporting the
          problem. Also changed the C++ generation from idl.yy to use
          bison instead of yacc. Thanks to Krishnakumar Balasubramanian
          <kitty@dre.vanderbilt.edu> for his help with this.

Tue Aug 26 16:19:30 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Collocated/Forward/Client_Task.cpp
        * tests/OBV/Collocated/Forward/Client_Task.h
        * tests/OBV/Collocated/Forward/Collocated_Test.cpp
        * tests/OBV/Collocated/Forward/OBV_Forward.mpc
        * tests/OBV/Collocated/Forward/Server_Task.cpp
        * tests/OBV/Collocated/Forward/Server_Task.h
        * tests/OBV/Collocated/Forward/Test_impl.cpp
        * tests/OBV/Collocated/Forward/Test_impl.h
        * tests/OBV/Collocated/Forward/TreeBase.idl
        * tests/OBV/Collocated/Forward/TreeController.idl
        * tests/OBV/Collocated/Forward/TreeNode.idl
        * tests/OBV/Collocated/Forward/run_test.pl

          Added new test for Bugzilla 1390.

Tue Aug 26 15:16:30 2003  Yamuna Krishnamurthy <yamuna@oomworks.com>

        * orbsvcs/orbsvcs/AV/UDP.cpp:

          Set the local control address to the appropriate address for RTP
          flow protocols in TAO_AV_UDP_Connector::connect.

        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.i:

          In TAO_FlowSpec_Entry::parse_flow_protocol_string checked if
          flow_string was null string.

        * orbsvcs/orbsvcs/AV/RTP.cpp:

          Copied the data received into host_byte_order_payload_ when not
          required to correct the network byte ordering.

        * orbsvcs/tests/AVStreams/Component_Switching/sender.cpp:

          Removed the signal handler.

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp:

          Took care of '\r' and '\n' characters terminating the endpoint
          info strings in the address file.

        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile:

          Updated dependencies.

        * orbsvcs/tests/AVStreams/Full_Profile/ftp.cpp:
        * orbsvcs/tests/AVStreams/Full_Profile/ftp.h:

          Added local and peer addresses to be specified through command
          line arguments.

        * orbsvcs/tests/AVStreams/Full_Profile/run_test.pl:

          Added test for TCP protocol.

        * orbsvcs/tests/AVStreams/Pluggable/ftp.cpp:
        * orbsvcs/tests/AVStreams/Pluggable/ftp.h:

          Added local and peer addresses to be specified through command
          line arguments.

        * orbsvcs/tests/AVStreams/Pluggable/run_test.pl:

          Added test for TCP and RTP/UDP protocol.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.cpp:

          Added default local address. Set the peer address.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/run_test.pl:

          Added test for TCP and RTP/UDP protocol.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/sender.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/sender.h  :

          Added local and peer addresses to be specified through command
          line arguments.

Tue Aug 26 14:13:35 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile.RTSched: Updated dependencies.

Tue Aug 26 18:56:32 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynAny_Test/test_dynenum.cpp:
          Test the equal operator of the DynEnum

Tue Aug 26 13:34:16 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp: Fixed variable
          redefinition error in Win2K_MSVC6_DLL_Core build.

Tue Aug 26 17:59:13 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynAny_Test/test_dynenum.cpp:
          Added an extra usage of the DynAnyAnyalyzer to test the DynAny
          better.

        * tests/DynAny_Test/test_dynunion.cpp:
          Added a test case to test a DynUnion with a string. This is then
          analyzed by the DynAnyAnalyzer and then converted to an Any.
          This revealed the bug in ace/CDR_Stream.i Jeff Parsons fixed on
          Tue Aug 26 11:10:45 2003.

Tue Aug 26 09:21:32 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Collocated/Dynamic/Collocated_Test.cpp (named_orbs):

          Removed this unused static global variable.  Fixes a
          compile-time warning.

Tue Aug 26 09:16:55 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Dynamic/test_i.cpp (the_structure):

          Fixed "return-statement with no value" warning.

Tue Aug 26 09:15:44 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp (fini):

          Fixed emulated exception macro usage.

Tue Aug 26 09:06:19 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/interceptors_cs.cpp
          (generate_class_definition):

          Declared a constant variable in interceptor related code in the
          generated stub as "const".

        * TAO_IDL/be/be_visitor_operation/interceptors_result.cpp
          (visit_union):

          Distinguish between variable and fixed length unions when
          generating the PortableInterceptor::RequestInfo::result()
          implementation.

Tue Aug 26 11:03:01 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp:
          Fixed undefined variable compile error in Solaris_9_Forte7 build.

Tue Aug 26 10:46:51 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp:
          Added appropriate explicit template instantiations to get rid of errors in
          RH71_Explicit_Templates build.

Tue Aug 26 08:23:22 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FT_ORB.bor:
          Removed not needed libs

Mon Aug 25 20:20:00 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * orbsvcs/orbsvcs/RtecScheduler.idl: Fixed throw specifications to
          fix compile warnings in Win2K_BCB6_Pro_Static_Release build.

Mon Aug 25 14:47:53 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Collocated_ORBInitializer.cpp (pre_init):

          Fixed "unused argument" warning.

Mon Aug 25 16:24:38 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/Portable_Interceptors/Collocated/Dynamic/*.*

          Added new test for collocated portable interceptors.

Mon Aug 25 13:56:22 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/test_i.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/test_i.h:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/run_test.pl:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/interceptors.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Server_Task.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Collocated_Test.cpp:

          Fixed reference counting bug in collocated interceptor test.

Mon Aug 25 12:30:52 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/releasenotes/index.html:

          Updated load balancer release notes.

Mon Aug 25 12:00:30 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/interceptors_result.cpp
          (visit_sequence, visit_structure, visit_union):

          Force the copying version of the Any insertion operator to be
          used when inserting variable length types in the Any return
          value of the operation-specific
          PortableInterceptor::RequestInfo::result() implementation.
          Fixes a segmentation fault due to double deletion of the object
          inserted into the Any.  Thanks to Philip Leishman
          <leishman@rheinmetall-de.com> for detecting the original problem
          with variable length structures.

        * tests/Portable_Interceptors/Dynamic/client.cpp:
        * tests/Portable_Interceptors/Dynamic/interceptors.cpp:
        * tests/Portable_Interceptors/Dynamic/interceptors.h:
        * tests/Portable_Interceptors/Dynamic/test.idl:
        * tests/Portable_Interceptors/Dynamic/test_i.cpp:
        * tests/Portable_Interceptors/Dynamic/test_i.h:

          Added code that exercises
          PortableInterceptor::RequestInfo::result() method when variable
          length structures are used as return types.

Mon Aug 25 18:41:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/configurations.html:
        * orbsvcs/orbsvcs/Makefile:
          Changed TAO_ORBSVCS options. Removed Event, when specifying CosEvent
          than also RTEvent would be build. CosEvent and RTEvent already
          existed, so use them. Removed NativeCosEvent, is the same as
          CosEvent, so use CosEvent instead. Changed EventLog to CosEventLog,
          when EventLog was specified also the RTEventLog was build.
          Thanks to Charlie Frasch <cfrasch@spawar.navy.mil> for reporting
          this. This fixes bugzilla [1575].

Mon Aug 25 11:18:39 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAOACE.mwc:
        * TAO_IDL/TAO_IDL.mwc:

          Added a cmdline that turns optimize off for the TAO_IDL project
          (only affects nmake, em3, vc6 and vc71 types).  The MS compiler
          can't optimize it correctly.

Mon Aug 25 10:18:08 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp: Added #include
          ACE.h to fix compile errors in RH80_Static_Core build.

Mon Aug 25 13:58:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_Transport_Descriptor.cpp:
        * tao/RTCORBA/RT_Transport_Descriptor_Property.cpp:
          Fixed incorrect id tag

Mon Aug 25 08:41:13 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp: Fixed
          CORBA::Environment related compile errors and warnings in
          RH71_Explicit_Templates build.

        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp: Updated
          explicit template instantions to fix compile errors in
          RH71_Explicit_Templates build.

Mon Aug 25 08:05:38 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/examples/RtEC/Schedule/Schedule.h:
        * orbsvcs/examples/RtEC/Schedule/Service.cpp: Fixed compile errors
          caused by changes to compute_scheduling and dump_schedule
          methods.

Mon Aug 25 08:02:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynAny_Test/analyzer.{h,cpp}:
          Fixed compile errors in debian build.

Mon Aug 25 06:34:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.h:
          Added include of event_export.h

Mon Aug 25 06:02:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/ICMG_Any_Bug/Hello.cpp:
          Fixed for emulated exception case.

Sun Aug 24 21:38:48 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
          Fixed a bug where the preemption priority was wrongly set before
          dispatching a event to the Kokyu dispatcher.

Sun Aug 24 20:14:52 2003  Venkita Subramonian  <venkita@cs.wustl.edu>
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp: Fixed compile
          warnings regarding usage of ace_max in Debian_Core build.

Sun Aug 24 16:54:58 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
          Fixed compile errors and warnings in Debian_Core build. Removed
          virtual qualifiers for function definitions, and fixed unused
          variable warnings.

Sun Aug 24 13:09:50 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile.RTSched:
        * orbsvcs/orbsvcs/RTSched.bor:
        * orbsvcs/orbsvcs/RTSched.dsp:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/RtecBase.idl:
        * orbsvcs/orbsvcs/RtecScheduler.idl:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Scheduler_Factory.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
          Integrated the scheduler from the Boeing WSOA program into the
          main trunk. This scheduler has more interfaces and bug fixes
          than the one which existed in the main trunk.

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.{cpp,h}:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp:
          Changes to integrate the scheduler with the event channel.

        * orbsvcs/tests/EC_Multiple/EC_Multiple.{cpp,h}:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime1.h:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime2.h:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime_Dynamic.h:
        * orbsvcs/tests/Sched_Conf/Sched_Conf_Anomalies.cpp (main):
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp (main):
        * orbsvcs/tests/Event/Basic/Schedule.cpp (execute_test):
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:
        * examples/Simulator/Event_Supplier/DualEC_Sup.{cpp,h}:
          Changes to compute_scheduling, dump_schedule method calls to
          reflect changes made to interfaces as part of the WSOA scheduler.


Sun Aug 24 15:01:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynArray_i.cpp:
          In processing each array element, added a check for a null
          ACE_Message_Block in the Any_Impl class, along with the
          appropriate action if this is the case. This fixes the DynArray
          part of the DynAny test.

Sun Aug 24 13:53:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/lib/*.cpp:
        * orbsvcs/tests/Notify/RT_lib/*.cpp:
        * orbsvcs/tests/Notify/Test_Filter/*.cpp
          Corrected incorrect Id tags

        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp:
          Added #include ace/Barrier.h

Sun Aug 24 13:41:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.bor:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.bor:
          Fixed these BCB makefiles by regenerating them using MPC

Sun Aug 24 13:00:31 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynAny_Test/analyzer.cpp:
        * tests/DynAny_Test/analyzer.h:
          New file containing DynAnalyzer that analyzes the contents of the
          DynAny. Used in this test to dump the contents of the DynAny to
          the output when -d is passed as commandline option.

        * tests/DynAny_Test/basic_test.dsp:
        * tests/DynAny_Test/DynAny_Test.mpc:
        * tests/DynAny_Test/Makefile:
        * tests/DynAny_Test/Makefile.bor:
          Updated because of new file above.

        * tests/DynAny_Test/da_tests.idl:
          Added sequence of short.

        * tests/DynAny_Test/README:
          Document new -d option

        * tests/DynAny_Test/data.cp:
        * tests/DynAny_Test/data.h:
        * tests/DynAny_Test/driver.cpp:
        * tests/DynAny_Test/driver.h:
        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/test_dynany.h:
        * tests/DynAny_Test/test_dynarray.cpp:
        * tests/DynAny_Test/test_dynarray.h:
        * tests/DynAny_Test/test_dynenum.cpp:
        * tests/DynAny_Test/test_dynenum.h:
        * tests/DynAny_Test/test_dynsequence.cpp:
        * tests/DynAny_Test/test_dynsequence.h:
        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/test_dynstruct.h:
        * tests/DynAny_Test/test_dynunion.cpp:
        * tests/DynAny_Test/test_dynunion.h:
        * tests/DynAny_Test/test_wrapper.cpp:
        * tests/DynAny_Test/test_wrapper.h:
          Converted to doxygen. Added argument to constructor to specify
          whether we want debug or not. Before all to_any() calls the DynAny
          is analyzed first with the new DynAnyAnalyzer. This revealed
          the problems Jeff already fixed with his checkin
          Thu Aug 21 11:51:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>
          The DynArray also reveales now a new problem that must be fixed.

Sun Aug 24 11:41:51 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynamicAny.cpp:
        * tao/DynamicAny/DynamicAny.h:
        * tao/DynamicAny/DynAny_i.h:
        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny/DynAnyFactory.h:
        * tao/DynamicAny/DynArray_i.h:
        * tao/DynamicAny/DynCommon.h:
        * tao/DynamicAny/DynEnum_i.h:
        * tao/DynamicAny/DynSequence_i.h:
        * tao/DynamicAny/DynStruct_i.h:
        * tao/DynamicAny/DynUnion_i.h:
          Converted to doxygen format.

Sat Aug 23 12:03:18 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.h (setup_lanes):

          Removed unnecessary scope qualifier from this method
          declaration.  Fixes a warning.

        * examples/Logging/Logger_i.h:

          Include "ace/Null_Mutex.h" to pull in ACE_Null_Mutex class
          declaration.

        * orbsvcs/examples/Notify/Lanes/Supplier.h:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.h:

          Include "ace/Condition_Thread_Mutex.h" to pull in
          ACE_Condition_Thread_Mutex class declaration.

        * orbsvcs/tests/Notify/lib/Periodic_Supplier.h:

          Include "ace/Barrier.h" to pull in ACE_Barrier class
          declaration.

Sat Aug 23 11:41:33 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.h:

          Include "ace/Null_Condition.h" and
          "ace/Condition_Thread_Mutex.h" to pull in ACE_Null_Condition and
          and ACE_Condition_Thread_Mutex class declarations,
          respectively.

Sat Aug 23 18:28:32 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/TypeCode_Creation/TypeCode_Creation.mpc:
        * performance-tests/RTCorba/Oneways/Reliable/Reliable.mpc:
        * tests/RTCORBA/ORB_init/RTCORBA_ORB_init.mpc:
          Modified the project names to make them unique.

Sat Aug 23 04:28:54 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/CosEvent.mpc:
          Made the case of CosEvent match that of the file CosEvent.mpb,
          since the Unix file system is case sensative.

Fri Aug 22 20:10:41 UTC 2003  Justin Michel <michel_j@ociweb.com>

        * TAOACE.mwc

          Was picking up Kokyu tests directory.

        * TAO_IDL/tao_idl.mpc

          Renamed gperf_exe to gperf. We used to have a hack for vc6 that
        required all exe projects to be named _exe.

        * orbsvcs/examples/Notify/Lanes/Lanes.mpc
        * orbsvcs/examples/Notify/Lanes/Notify_Lanes.mpc
        * orbsvcs/examples/Notify/ThreadPool/Notify_ThreadPool.mpc
        * orbsvcs/examples/Notify/ThreadPool/ThreadPool.mpc
        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.mpc
        * orbsvcs/examples/RtEC/IIOPGateway/RtEC_IIOPGateway.mpc
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/AVStreams_Simple_Two_Stage_With_QoS.mpc
        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc
        * orbsvcs/tests/Security/SecurityLevel1/SecurityLevel1.mpc

          Fixes to mpc files to avoid duplicate names, and to use
          inheritance to get base project info instead of hard-coding
          libs.

        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp
        * orbsvcs/examples/CosEC/TypedSimple/Consumer.cpp
        * orbsvcs/examples/CosEC/TypedSimple/CosEC_TypedSimple.mpc
        * orbsvcs/examples/CosEC/TypedSimple/Country.idl
        * orbsvcs/examples/CosEC/TypedSimple/Country.idl.for_ifr
        * orbsvcs/examples/CosEC/TypedSimple/Country_i.cpp
        * orbsvcs/examples/CosEC/TypedSimple/Country_i.h
        * orbsvcs/examples/CosEC/TypedSimple/README
        * orbsvcs/examples/CosEC/TypedSimple/Supplier.cpp
        * orbsvcs/orbsvcs/CosEvent.mpb
        * orbsvcs/orbsvcs/CosEvent.mpc
        * orbsvcs/orbsvcs/CosTypedEventChannelAdmin.idl
        * orbsvcs/orbsvcs/CosTypedEventComm.idl
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.i
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.h
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.i
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.h
        * orbsvcs/orbsvcs/CosEvent/CEC_MT_Dispatching.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_MT_Dispatching.h
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.i
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.i
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.h
        * orbsvcs/orbsvcgs/CosEvent/CEC_TypedConsumerAdmin.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.i

          Added support for typed events to CosEvent. This was submitted
          by Jonathan Astle <jon@astle45.fsnet.co.uk>. I modified the code to
          use mpc, and added a new feature. Set ec_typed_event=0 to
          disable use of typed events. This works by setting a macro which
          Jon used throughout the new code. There are actually now two
          CosEvent projects in CosEvent.mpc. One uses the avoids keyword
          and the other the requires keyword. This could be used as a
          pattern for similar situations.

Fri Aug 22 15:58:41 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tests/ICMG_Any_Bug/Hello.mpc:
          Renamed projects to avoid a MSVC6 problem with duplicate names.

Fri Aug 22 15:28:34 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO.mwc:
          Exclude CIAO from normal builds.

Fri Aug 22 14:13:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/AV_Core.h:
          Added #include Null_Mutex.h

Fri Aug 22 14:09:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Custom_Marshal/ECM_Data.h:
          Added #include Null_Mutex.h

Fri Aug 22 13:59:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Multiple/EC_Multiple.h:
          Added #include Condition_Thread_Mutex.h

Fri Aug 22 09:53:36 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RtecEventChannelAdmin.idl:
          Fixed typo in comment

Fri Aug 22 03:56:22 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Base_Transport_Property.cpp:
          Added #include OS_Memory.h to pickup the ACE_NEW_RETURN
          definition.

Thu Aug 21 17:01:13 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao_other_tests.lst:

          Disabled running of RTScheduling tests when interceptors are
          disabled.

        * tao_orb_tests.lst:

          Added RTScheduling examples to the list.

Thu Aug 21 14:23:00 2003  Stuart Jones <jones_s@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.h
        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.cpp

          Added additonal checks for various error conditions.

Thu Aug 21 11:51:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_Special_Impl_T.cpp (extract):

          Made the attempted dynamic_cast conditional on the
          Any_Impl's ACE_Message_BLock being 0 (so that we know
          the Any contains an instantiation of one of the template
          Any_Impl classes and not TAO::Unknown_IDL_Type. Attempting
          dynamic_cast when the latter is the case, on Windows, results
          in an internal exception, rather than the 0 result we would
          expect. This change has already been made to the other
          template Any_Impl classes, it was overlooked on this one.

        * tao/DynamicAny/DynSequence_i.cpp (to_any):

          In processing each sequence element, added a check for a null
          ACE_Message_Block in the Any_Impl class, along with the
          appropriate action if this is the case.

          For the above changes, thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for reporting the problem, and for
          sending the extensions to Dynany_Test that reproduced it.

Thu Aug 21 15:48:46 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO.mwc:
        * TAO_IDL/TAO_IDL.mwc:
        * orbsvcs/orbsvcs.mwc:
        * orbsvcs/orbsvcs/orbsvcs.mwc:
        * tao/tao.mwc:
          Added mwc files so that mwc.pl will create complete and correct
          Makefiles at each directory level when invoked with the -recurse
          option.  This is a workaround and may be removed in the future,
          but is needed right now in order to move forward with MPC.

Thu Aug 21 13:33:50 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/orbsvcs/CosNaming.idl:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.h:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:

          Removed AlreadyBound exception from signature of resolve_str
          operation as per http://www.omg.org/docs/formal/02-09-02.pdf.
          This closes bug #1453.

Wed Aug 20 15:52:03 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/*.*

          Added new test for collocated portable interceptors.

Tue Aug 19 20:52:57 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/Event/Basic/rteventtestexe.mpb:
        * orbsvcs/tests/Event/lib/Event_lib.mpc:
          Changed name of Event_Test_Lib project so it could be used as a
          prerequisite to all the Event tests.

Tue Aug 19 18:49:10 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Callback_Quoter/Notifier_i.h:
        * examples/PluggableUDP/tests/Performance/UDP_i.h:
        * examples/RTCORBA/Activity/Activity.h:
        * examples/Simple/bank/AccountManager_i.h:
          Added #include Null_Mutex.h

        * examples/RTCORBA/Activity/Thread_Task.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Send_Task.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/client.cpp:
          Added #include Barrier.h.

        * orbsvcs/IFR_Service/ifr_visitor.cpp:
          Added #include Lock_Adapter_T.h, Synch_Traits.h, and Null_Mutex.h.

        * orbsvcs/performance-tests/RTEvent/lib/Send_Task.h:
          Added #include Synch_Traits.h and forward declaration of ACE_Barrier.

        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp:
          Added #include Reactor.h.

        * orbsvcs/tests/IOR_MCast/ior_mcast_client_i.h:
          Added #include SString.h:

        * performance-tests/RTCorba/Thread_Pool/client.cpp:
          Added #include Event.h.

        * orbsvcs/orbsvcs/RTEvent.mpc:
          Removed CRC.cpp.

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/GroupRef_Manipulation.mpc:
          Added testC.cpp to server project.

        * tests/ICMG_Any_Bug/Hello.mpc:
          Changed the client project to inherit from both ifr_client and
          dynamicinterface to pick up the correct link libraries.

Tue Aug 19 13:44:23 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Remove trailing whitespace from character string literals before
          attempting to chop off the trailing double quote.

Tue Aug 19 06:04:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.bor:
          Added Condition.cpp to INCLUDES to let it be installed because
          it contains template code. Thanks to Charlie Frasch
          <charlie.frasch@navy.mil> for reporting this.

Mon Aug 18 14:33:45 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/Request_Interceptor.cpp :

          Added return from Server_Request::receive_request method when an
          invalid service request is received.

        * tests/RTScheduling/DT_Spawn/test.cpp:

          Changed a debug statement to include "Expected Exception".

        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:

          Replaced ACE_PRINT_EXCEPTION with ACE_DEBUG messages so the
          builds will not report errors for expected exceptions.

        * tests/RTScheduling/Scheduling_Interceptor/Makefile:
        * tests/RTScheduling/Scheduling_Interceptor/run_test.pl:
        * tests/RTScheduling/Thread_Cancel/Makefile:
        * tests/RTScheduling/Thread_Cancel/run_test.pl:
        * tests/RTScheduling/DT_Spawn/Makefile:
        * tests/RTScheduling/DT_Spawn/run_test.pl:
        * tests/RTScheduling/Current/Makefile:
        * tests/RTScheduling/Current/run_test.pl:
        * tests/RTScheduling/VoidData/Makefile:
        * tests/RTScheduling/VoidData/run_test.pl:

          Changed the names of the executables created. This along with
          the following changes to the windows project files should fix
          the run-time errors on Windows.

        * tests/RTScheduling/VoidData/VoidData.dsp:
        * tests/RTScheduling/Thread_Cancel/Thread_Cancel.dsp:
        * tests/RTScheduling/DT_Spawn/DT_Spawn.dsp:
        * tests/RTScheduling/Current/Current.dsp:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Client.dsp:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Server.dsp:

          Changed the project files so they do not create executables in
          the Debug dirs.

Mon Aug 18 14:24:45 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tao/ORB.h:
        * tao/ORB.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:

          Moved TAO_Valuetype_Adapter from ORB to ORB_Core. Added new method
          ORB_Core::valuetype_adapter () to access the valuetype adapter.

Mon Aug 18 09:12:26 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:

          Include "ace/Lock_Adapter_T.h" to pull in ACE_Lock_Adapter<>
          template.

        * tests/Collocation_Tests/Server_Task.h:
        * tests/MT_BiDir/Server_Task.h:

          Forward declare ACE_Manual_Event.

        * tests/Collocation_Tests/Collocated_Test.cpp:
        * tests/Collocation_Tests/Server_Task.cpp:
        * tests/MT_BiDir/Sender_i.cpp:
        * tests/MT_BiDir/Server_Task.cpp:
        * tests/MT_BiDir/server.cpp:

          Include "ace/Manual_Event.h" to pull in ACE_Manual_Event class
          declaration.

        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
        * tests/Two_Objects/Second_i.cpp:

          Include "ace/Auto_Event.h" to pull in ACE_Auto_Event class
          declaration.

        * tests/Big_Oneways/Session.h:
        * tests/Big_Twoways/Session.h:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:

          Include "ace/Barrier.h" to pull in ACE_Barrier class
          declaration.

        * tests/Two_Objects/Second_i.h:

          Forward declare ACE_Auto_Event.

Sun Aug 17 23:41:22 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:
        * orbsvcs/orbsvcs/Notify/PropertySeq.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h:
        * orbsvcs/orbsvcs/Trader/Offer_Database.h:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.h:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.h:

          Include "ace/Null_Mutex.h" to pull in ACE_Null_Mutex class
          declaration.

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp:

          Include "ace/Reverse_Lock_T.h" to pull in ACE_Reverse_Lock<>
          template.

        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_T.h:

          Include "ace/Lock_Adapter_T.h" to pull in ACE_Lock_Adapter<>
          template.

        * orbsvcs/orbsvcs/Trader/Trader.cpp:

          Include "ace/Thread_Mutex.h" and "ace/RW_Thread_Mutex.h" to pull
          in ACE_{RW_}Thread_Mutex class declarations.

        * orbsvcs/orbsvcs/Log/PersistStore.h:

          Include "ace/Mutex.h" to pull in ACE_Mutex class declaration.

Sun Aug 17 17:22:03 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Cleanup_Func_Registry.h:

          No longer any need to include "ace/OS.h" to pull in
          ACE_CLEANUP_FUNC typedef.  Bonus!

        * tao/Seq_Var_T.h:
        * tao/Seq_Var_T.cpp:
        * tao/VarOut_T.h:
        * tao/VarOut_T.cpp:

          Moved "ace/OS_Memory.h" include from implementation file to
          header file.  The corresponding inline files require/use the
          ACE_NEW macros defined in "ace/OS_Memory.h".  Fixes build errors
          in explicit template instantiation builds.

Sun Aug 17 16:14:03 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile (LIBS):
        * examples/RTScheduling/MIF_Scheduler/Makefile (LIBS):

          Corrected library link order and added missing libraries.  Fixes
          unresolved symbol link-time errors in static builds.

        * orbsvcs/tests/EC_Multiple/Makefile (LDLIBS):

          Added missing TAO_Messaging library to library link list.  Fixes
          unresolved symbol link-time errors in static builds.

Sun Aug 17 13:28:40 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Condition.h:
        * tao/Endpoint.h:
        * tao/Fault_Tolerance_Service.cpp:
        * tao/Fault_Tolerance_Service.h:
        * tao/IIOP_Transport.h:
        * tao/LF_Follower.h:
        * tao/Leader_Follower.h:
        * tao/LocalObject.h:
        * tao/MProfile.h:
        * tao/NVList.h:
        * tao/ORB.h:
        * tao/ORB_Core.h:
        * tao/ORB_Table.h:
        * tao/Object.h:
        * tao/Object_Ref_Table.h:
        * tao/Principal.h:
        * tao/Profile.h:
        * tao/TAO_Singleton.h:
        * tao/Thread_Lane_Resources.h:
        * tao/Transport_Cache_Manager.h:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/IORTable/IOR_Table_Impl.h:
        * tao/PortableServer/Object_Adapter.h:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.h:

          Reduced inter-header dependencies by including the appropriate
          "ace/Synch{_T}.h" subsets (e.g. "ace/Thread_Mutex.h") instead of
          "ace/Synch{_T}.h" in all cases.

Sun Aug 17 12:48:26 2003  Jaiganesh Balasubramanian  <jai@dre.vanderbilt.edu>

        * tests/ICMG_Any_Bug/Test.idl:
        * tests/ICMG_Any_Bug/Hello.cpp:
        * tests/ICMG_Any_Bug/Hello.dsw:
        * tests/ICMG_Any_Bug/Hello.h:
        * tests/ICMG_Any_Bug/Hello.mpc:
        * tests/ICMG_Any_Bug/HelloWorld.cpp:
        * tests/ICMG_Any_Bug/HelloWorld.h:
        * tests/ICMG_Any_Bug/Makefile:
        * tests/ICMG_Any_Bug/Makefile.bor:
        * tests/ICMG_Any_Bug/README:
        * tests/ICMG_Any_Bug/client.bor:
        * tests/ICMG_Any_Bug/client.cpp:
        * tests/ICMG_Any_Bug/client.dsp:
        * tests/ICMG_Any_Bug/server.bor:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/ICMG_Any_Bug/server.dsp:
        * tests/ICMG_Any_Bug/run_test.pl:

          This is a test written to test the TAO Any
          implementation's widening to an Object.

          Thanks to Anand <anand@iCMGworld.com> for reporting
          the problem.

          Jeff Parsons <j.parsons@vanderbilt.edu> made a fix
          for the problem. Please refer to the changelog entry
          dated:
          Fri Jul 11 18:41:41 2003 Jeff Parsons.

Sun Aug 17 12:19:08 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/RTScheduling/Makefile (ACE_SHLIBS):

          Corrected library link order.

          Nuked trailing whitespace.

Sun Aug 17 12:12:22 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Stub.h:

          No longer any need to include "ORB_Core.h".

        * tao/Stub.i (service_profile_selection):
        * tao/Stub.cpp (service_profile_selection):

          Uninlined this deprecated method.  It isn't used anywhere in
          TAO.  Allowed removal of "ORB_Core.h" include from "Stub.h".

        * tao/ClientRequestInfo_i.cpp:
        * tao/DomainC.cpp:
        * tao/Messaging_PolicyValueC.cpp:
        * tao/Object_KeyC.cpp:
        * tao/PolicyC.cpp:
        * tao/Remote_Object_Proxy_Impl.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Stub.cpp:
        * tao/Valuetype/AbstractBase.cpp:

          Include "tao/ORB_Core.h" to pull in TAO_ORB_Core class
          declaration.

        * tao/Interceptor_List.cpp:

          Added "const" qualifier to some constant variables.

        * TAO_IDL/be/be_codegen.cpp (start_client_stubs):

          Since "tao/Stub.h" no longer includes "tao/ORB_Core.h" header,
          generated stubs now explicitly include "tao/ORB_Core.h".

Sun Aug 17 10:36:44 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:

          Include "TSS_Resources.h" instead of "ORB_Core.h".  The latter
          is overkill.

        * tests/RTCORBA/check_supported_priorities.cpp:

          Include "tao/ORB.h" to pull in CORBA::ORB class declaration.

        * tests/RTCORBA/Server_Protocol/server.cpp:

          Include "tao/Policy_Set.h" to pull in TAO_Policy_Set class
          declaration.

        * tests/Two_Objects/worker.h:

          Include "tao/ORB.h" instead of "tao/ORB_Core.h" to pull in the
          CORBA::ORB class declaration.  The latter itself no longer
          includes "tao/ORB.h".  Including "tao/ORB_Core.h" was overkill
          anyway.

Sun Aug 17 00:22:16 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:

          Moved TAO_TSS_Resources class to new TSS_Resources.* files.
          This allowed the removal of several included headers:
          Environment.h, Policy_Manager.h, TAO_Singleton_Manager.h and
          TAO_Singleton.h.

          Changed "orb_" member from a CORBA::ORB_var to a
          CORBA::ORB_ptr.  Inclusion of "ORB.h" in "ORB_Core.h" is no
          longer necessary.

        * tao/ORB_Core.i (default_environment):

          Uninlined these methods.  Removes interheader dependency on
          "TAO_TSS_Resources.h".

        * tao/TSS_Resources.h:
        * tao/TSS_Resources.cpp:

          New files containing the TAO_TSS_Resources class and
          accompanying singleton declarations.

        * tao/MCAST_Parser.cpp:
        * tao/ORBInitInfo.cpp:
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:

          Include "ORB.h."  Necessitated by interheader dependency
          reductions in "ORB_Core.h".

        * tao/ORB.cpp:

          Include "TAO_Singleton_Manager.h" and "Policy_Manager.h".
          Necessitated by interheader dependency reductions in
          "ORB_Core.h".

        * tao/Policy_Manager.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:

          Include "TSS_Resources.h" instead of "ORB_Core.h".  The latter
          is overkill.

        * tao/Stub.cpp:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTPortableServer/RT_POA.cpp:

          Include "Policy_Set.h" and "Policy_Manager.h".  Necessitated by
          interheader dependency reductions in "ORB_Core.h".

        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/RTScheduling/Current.cpp:

          Include "tao/TSS_Resources.h" to pull in TAO_TSS_Resources class
          declaration.

        * tao/PortableServer/Strategized_Object_Proxy_Broker.h:

          No need to include "tao/ORB_Core.h".

          Include "ace/Thread_Mutex.h" to pull in ACE_Thread_Mutex class
          declaration.

        * tao/PortableServer/Strategized_Object_Proxy_Broker.cpp:

          Include "tao/ORB_Core.h" to pull in TAO_ORB_Core class
          declaration.

        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:

          Include "tao/Policy_Set.h" to pull in TAO_Policy_Set class
          declaration.

        * tao/RTScheduling/Request_Interceptor.h (SchedulingInfo):

          Made this static variable "const".  It's value will never
          change.

        * tao/Makefile.am:
        * tao/Makefile.bor:
        * tao/Makefile.tao:
        * tao/TAO.dsp:
        * tao/TAO_Static.dsp:
        * tao/tao.mpc:

          Added new TSS_Resources.* files to these Makefiles.

        * tao/BiDir_GIOP/Makefile:
        * tao/Domain/Makefile:
        * tao/DynamicAny/Makefile:
        * tao/DynamicInterface/Makefile:
        * tao/IFR_Client/Makefile:
        * tao/IORInterceptor/Makefile:
        * tao/IORManipulation/Makefile:
        * tao/IORTable/Makefile:
        * tao/Messaging/Makefile:
        * tao/ObjRefTemplate/Makefile:
        * tao/PortableServer/Makefile:
        * tao/RTCORBA/Makefile:
        * tao/RTScheduling/Makefile:
        * tao/RTPortableServer/Makefile:
        * tao/SmartProxies/Makefile:
        * tao/Strategies/Makefile:
        * tao/TypeCodeFactory/Makefile:
        * tao/Utils/Makefile:
        * tao/Valuetype/Makefile:

          Updated dependencies.

Sat Aug 16 14:13:02 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/examples/Notify/ThreadPool/Consumer.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.h:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.h:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.h:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.h:

          Renamed classnames to resolve Solaris 9 compiler symbol
          conflicts with simile in the orbsvcs Notify lib.
          Thanks to Don Hinton  <dhinton @ dresystems.com> for reporting
          this.

Sat Aug 16 10:29:54 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IORTable/IORTableC.h (_raise):
        * tao/IORTable/IORTableC.cpp (_raise):
        * tao/RTCORBA/RTCORBAC.h (_raise):
        * tao/RTCORBA/RTCORBAC.cpp (_raise):
        * tao/RTScheduling/RTSchedulerC.h (_raise):
        * tao/RTScheduling/RTSchedulerC.cpp (_raise):

          Made _raise() method "const" in accordance with the changes in
          Exception.{h,cpp}.

Sat Aug 16 02:17:49 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Asynch_Reply_Dispatcher_Base.cpp:
        * tao/Default_Thread_Lane_Resources_Manager.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_State.cpp:
        * tao/GIOP_Utils.cpp:
        * tao/IOPS.cpp:
        * tao/Incoming_Message_Queue.cpp:
        * tao/Interceptor_List.cpp:
        * tao/Policy_Validator.cpp:
        * tao/Resource_Factory.cpp:
        * tao/Sync_Strategies.cpp:
        * tao/Tagged_Components.cpp:
        * tao/default_client.cpp:
        * tao/default_resource.cpp:
        * tao/default_server.cpp:

          No need to include "tao/ORB_Core.h".

        * tao/IIOP_Profile.cpp:
        * tao/Managed_Types.cpp:
        * tao/NVList.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/Typecode_Constants.cpp:

          No need to include "tao/ORB.h".

        * tao/Exception.cpp (_raise):
        * tao/Exception.h (_raise):

          This virtual method is now "const", as required by the latest
          (v1.1) C++ mapping.

        * tao/BoundsC.cpp:
        * tao/BoundsC.h:
        * tao/IOP_CodecC.cpp:
        * tao/IOP_CodecC.h:
        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/PollableC.cpp:
        * tao/PollableC.h:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.h:
        * tao/Typecode.cpp:
        * tao/Typecode.h:
        * tao/WrongTransactionC.cpp:
        * tao/WrongTransactionC.h:
        * tao/DynamicAny/DynamicAnyC.cpp:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/DynamicInterface/Unknown_User_Exception.h:
        * tao/DynamicInterface/Unknown_User_Exception.cpp:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORManipulation/IORC.h:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImplRepoC.h:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/PortableServerC.h:

          Made _raise() method "const" in accordance with the changes in
          Exception.{h,cpp}.

        * tao/ClientRequestInfo_i.cpp:
        * tao/Environment.cpp:
        * tao/Policy_Manager.cpp:

          Nuked trailing whitespace.

        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp (visit_exception):
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp (visit_exception):

          Made generated _raise() method "const" in accordance with the
          changes in Exception.{h,cpp}.

Fri Aug 15 14:37:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynAny_i.cpp:

          Added .in() to usage of CORBA::TypeCode_var.

Fri Aug 15 14:32:54 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcsProperty/CosPropertyService_i.cpp:
        * examples/POA/DSI/Database_i.cpp:
        * orbsvcs/examples/ORT/Gateway_i.cpp:
        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.cpp:
        * performance-tests/Latency/DSI/Roundtrip.cpp:
        * performance-tests/Sequence_Latency/DSI/Roundtrip.cpp:

          Fixed constructors of CORBA::Any and TAO::Unknown_IDL_Type
          to match recent changes to these classes.

Fri Aug 15 14:23:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/DynAny_Test/data.cpp:
        * tests/DynAny_Testdata.h:
        * tests/DynAny_Testtest_dynany.cpp:

          Changes required by the removal of the deprecated Any constructor in
          the checkin of

          Thu Aug 14 15:09:52 2003  Jeff Parsons <j.parsons@vanderbilt.edu>.

Fri Aug 15 16:41:37 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp (start_server_i):

          Removed avoid zombies option. Was causing exception on various
          Unix flavours. Thanks to Torsten Kuepper for reporting the problem.
          This closes bug #1557.

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp (list):

          Added initialisation to prevent problem when list attempt is made
          before an activator has been registered. Thanks to <jones_s@ociweb.com>
          for reporting this. This closes bug #1562.

Fri Aug 15 14:58:53 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/RtEC/IIOPGateway/EC.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.cpp:
          Fixes for emulated exceptions, will also fix the fuzz error.

Fri Aug 15 14:28:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/RtEC/IIOPGateway/Supplier.cpp:
          Increased the number of events to send before quitting

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.{h,cpp}:
          Added ability to suspend and resume the connection to the supplier
          ec.

        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.cpp:
          When connection is lost to the consumer ec, suspend events from
          the supplier ec.

        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h:
          Doxygen fix.

Fri Aug 15 10:07:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/RtEC/IIOPGateway/*:
          Added a new example which shows how the IIOP Gateway can be used.
          There is seperate executable for the consumer, supplier, ec, and
          gateway. This makes it easy to test all the options. The
          consumerec_crash perl scripts shows how the new reconnect policy
          in the gateway works when the consumerec is killed and restarted.

Fri Aug 15 09:40:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/RtEC/Simple/README:
          Fixed typo

Fri Aug 15 00:37:22 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.cpp:
          Changed loc1 and loc2 to location1 and location2 since the
          they are #defines in regexpr.h on Solaris.

Thu Aug 14 17:42:02 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Param_Test/any.cpp:
        * tests/Param_Test/bd_array_seq.cpp:
        * tests/Param_Test/bd_long_seq.cpp:
        * tests/Param_Test/bd_short_seq.cpp:
        * tests/Param_Test/bd_str_seq.cpp:
        * tests/Param_Test/bd_string.cpp:
        * tests/Param_Test/bd_struct_seq.cpp:
        * tests/Param_Test/bd_wstr_seq.cpp:
        * tests/Param_Test/bd_wstring.cpp:
        * tests/Param_Test/big_union.cpp:
        * tests/Param_Test/complex_any.cpp:
        * tests/Param_Test/driver.cpp:
        * tests/Param_Test/except.cpp:
        * tests/Param_Test/fixed_array.cpp:
        * tests/Param_Test/fixed_struct.cpp:
        * tests/Param_Test/helper.cpp:
        * tests/Param_Test/multdim_array.cpp:
        * tests/Param_Test/nested_struct.cpp:
        * tests/Param_Test/objref.cpp:
        * tests/Param_Test/objref_struct.cpp:
        * tests/Param_Test/options.cpp:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/recursive_struct.cpp:
        * tests/Param_Test/recursive_union.cpp:
        * tests/Param_Test/results.cpp:
        * tests/Param_Test/short.cpp:
        * tests/Param_Test/small_union.cpp:
        * tests/Param_Test/typecode.cpp:
        * tests/Param_Test/ub_any_seq.cpp:
        * tests/Param_Test/ub_array_seq.cpp:
        * tests/Param_Test/ub_long_seq.cpp:
        * tests/Param_Test/ub_objref_seq.cpp:
        * tests/Param_Test/ub_short_seq.cpp:
        * tests/Param_Test/ub_str_seq.cpp:
        * tests/Param_Test/ub_string.cpp:
        * tests/Param_Test/ub_struct_seq.cpp:
        * tests/Param_Test/ub_wstr_seq.cpp:
        * tests/Param_Test/ub_wstring.cpp:
        * tests/Param_Test/ulonglong.cpp:
        * tests/Param_Test/var_array.cpp:
        * tests/Param_Test/var_struct.cpp:

          Fixed initialization of OUT argument in DII version of Any test,
          and made cosmetic changes to all Param Test source files.

Thu Aug 14 15:49:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:

          Added -GH option (AMH classes generation enabled) to the usage
          message. Thanks to Carlos O'Ryan <coryan@atdesk.com> for
          reporting the oversight.

Thu Aug 14 15:09:52 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any.h:
        * tao/Any.i:

          Changed the memory management of the type code stored in the
          Any_Impl. The only way for this to work in all cases is for
          the Any_Impl to always own and release the type code. Also
          removed the constructor taking a type code and void* value,
          it has been removed from the C++ mapping. Finally, added a
          _tao_set_typecode() method to be used internally when it is
          necessary to manipulate the type code of an Any that has no value.

        * tao/Any_Array_Impl_T.cpp:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Impl_T.cpp:
        * tao/Any_Special_Basic_Impl_T.cpp:
        * tao/Any_Special_Impl_T.cpp:

          Changed the overridden free_value() methods to reflect the changed
          semantics of the type code member described above. Also modified
          the extract() methods to do a better memory cleanup in the event
          of a failed extraction.

        * tao/NVList.cpp:
        * tao/RequestInfo_Util.cpp:
        * tao/Typecode.cpp:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicInterface/Request.inl:
        * tests/Param_Test/any.cpp:
        * tests/Param_Test/complex_any.cpp:
        * tests/Param_Test/recursive_union.cpp:

          Changes required as a consequence of those above.

Thu Aug 14 18:46:58 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.h:
          Added #include Synch_Traits.h and Thread_Mutex.h needed due to
          recent subsetting>

Thu Aug 14 17:55:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/lib/Driver.cpp:
          When destroying the POA wait until completion.

Thu Aug 14 16:09:55 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:

          Replaced ACE_PRINT_EXCEPTION with ACE_DEBUG messages so the
          builds will not report errors for expected exceptions.

Thu Aug 14 13:22:19 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/Basic/Control.cpp:
          Destroy the orb when ready. On our Solaris box this fixes the crashing
          of this test.

Thu Aug 14 12:58:09 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/fe/fe_tmplinst.cpp:
          Added #include SString.h needed when
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION is defined due to recent
          subsetting.

Thu Aug 14 12:15:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/Basic/Timeout.cpp:
          Increased the timeout and decreased the number of events. Looks that
          for some build systems we send to many in a short period.

Thu Aug 14 11:53:23 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.{h,cpp}:
          Added commandline option -b to specify that BiDIR GIOP must be
          used. BiDIR GIOP is disabled by default.

        * orbsvcs/Event_Service/Event_Service.dsp:
        * orbsvcs/Event_Service/Event_Service.mpc:
        * orbsvcs/Event_Service/Event_Service_static.dsp:
        * orbsvcs/Event_Service/Makefile:
        * orbsvcs/Event_Service/Makefile.bor:
          Added BiDIR GIOP because of additon above.

Wed Aug 13 22:16:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Exception.cpp: The static type_code_array [] will now hold
          pointers to the typecode pointers. This way the initialization
          of the typecode pointers in make_standard_typecode () are not
          lost.

          This should fix the tests/Portable_Interceptor/Dynamic test
          failure in our daily builds.

Thu Aug 14 01:46:47 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/fe/fe_tmplinst.cpp:
          Added #include Null_Mutex.h needed when
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION is defined due to recent
          subsetting.

Wed Aug 13 19:56:39 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.h:

          Modifications to reflect changes in Kokyu classes. Added a
          Dispatcher_Attributes class to pass dispatcher setup
          information.

Wed Aug 13 16:50:56 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/RTScheduler_Manager.h:
        * tao/RTScheduling/RTScheduler_Manager.cpp:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Current.cpp:

          Replaced ptr_arith_t with ptrdiff_t.

        * tao/RTScheduling/RTScheduler_Manager.h:

          Added missing #pragma (pop).

        * tests/RTScheduling/Scheduler.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:

        Added missing environment variable in resolve_initial_reference() calls.

        The above fixes should take care of errors on Fuzz build.

Wed Aug 13 17:16:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          In the CDR extraction operator for CORBA::Any, when calling
          the constructor for TAO::Unknown_IDL_Type, the optional
          boolean release argument for the type code has been added and
          set to TRUE. The type code that is passed to this constructor
          is the result of extraction from the input CDR stream, and so
          must be ultimately released. Thanks to Sunil Rottoo
          <srottoo@adacelcanada.com> for reporting the memory leak and
          suggesting the fix.

Wed Aug 13 16:33:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_generator.cpp:
        * TAO_IDL/be/be_expression.cpp:
        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/be_include/be_expression.h:
        * TAO_IDL/be_include/be_generator.h:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/include/ast_expression.h:
        * TAO_IDL/include/ast_generator.h:

          Added AST_Expression::ExprType enum parameter to the AST_Expression
          constructor taking an ACE_UINT64, to disambiguate it from the
          constructor taking an unsigned long, on platforms where these
          two types are the same.

Wed Aug 13 15:22:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp (create_event_i):

          Fixed an incorrect return type in ACE_CHECK_RETURN.

Wed Aug 13 14:41:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynAny_i.cpp (equal):

          Added typedef stripping to handled aliased types. Thanks to
          Stephan Frenzel <stephan.frenzel@realtech.de> for reporting
          the problem with typedefs of strings. Also separated the
          code paths for bounded and unbounded (w)strings.

Wed Aug 13 19:28:29 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
          Removed unused arguments to quash a warning.

Wed Aug 13 18:41:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.h:
          Fixed fuzz error about missing /**/ before post.h

Wed Aug 13 10:34:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_exception.cpp (in_recursion):
        * TAO_IDL/ast/ast_structure.cpp (in_recursion):
        * TAO_IDL/ast/ast_union.cpp (in_recursion):
        * TAO_IDL/be/be_valuetype.cpp (in_recursion):

          Fixed a possible bug when the above types have a member that is
          a typedef.

        * TAO_IDL/be/be_visitor_structure_fwd/structure_fwd_ch.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:

          Cosmetic changes to source code.

        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:

          Replaced calls to a forward declaration redefinition helper
          function for structs and unions that had somehow gone missing.
          These helper functions and calls to them were added as part of
          support for forward declared structs and unions. Their absence
          caused an assertion failure when computing the size type of a
          recursive and/or nested struct as part of generating its _var
          class typedef. Thanks to Jerome Waibel <schrom@schlund.de> for
          reporting the problem.

Wed Aug 13 10:36:34 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Map.h:

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Struct.h:

          Fixed fuzz errors.

Wed Aug 13 10:12:40 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bench/wire:
        * tests/Bench/Collocated: Removed these two tests from the main
          trunk. They were suposed to be in our branch for testing.

Wed Aug 13 10:08:01 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IORManipulation/IORC.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:

          Fixed fuzz errors.

Wed Aug 13 14:03:58 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.{h,cpp}:
          Changed signature reconnec_consumer_ec method for emulated exception
          builds.

        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.cpp:
          When closing the client proxies, also close the connection to the
          consumer ec.

        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp:
        * orbsvcs/orbsvcs/Makefile.RTEvent:
        * orbsvcs/orbsvcs/RTEvent.bor:
        * orbsvcs/orbsvcs/RTEvent.dsp:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent_Static.dsp:
        * docs/ec_options.html:
          Added a new reconnect control. This can be configured in the IIOP
          Gateway. In case of a connection loss, this control will poll on a
          configurable interval for the consumer ec. When the consumer ec is
          reachable again, the gateway will connect itself again and then
          forward the events again. When the consumer ec uses a persistent IOR
          than also after a restart of the system the gateway will reconnect
          to the consumer ec again and continue forwarding events.

        * orbsvcs/Event_Service/Event_Service.cpp:
          Cleanup policies after they are set.

Wed Aug 13 10:08:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.{h,cpp}:
          Always store the updated consumer QoS and added a new method with
          which the gateway can be requested to reconnect itself to the
          consumer ec with the consumer QoS that is stored.

Wed Aug 13 09:44:51 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.{h,cpp}:
          Added a commandline option q to specify that a persistent POA
          must be used for the EC and as argument specify the servant
          name. The option p was already taken, so then the next one.
          This makes it easy to use the Event Service in applications
          where just the exe is used but also persistent IORs are needed.

Wed Aug 13 09:05:19 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.cpp:
          Removed not needed include

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.(h,cpp):
          Moved all code to setup a new connection to open_i() and use
          this in the update_consumer_i(). This makes reuse of this large
          piece of code easier.

Wed Aug 13 08:42:19 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
          Added #include SString.h needed due to recent subsetting.

        * orbsvcs/Notify_Service/NT_Notify_Service.cpp:
          Added #include Reactor.h needed due to recent subsetting.

Wed Aug 13 08:25:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Throughput/run_test.pl:
          Explicitly set the scheduler type to local because this test
          uses the new RTEvent but wants to use a scheduler. This fixes
          the failing of this test in the daily builds.

Tue Aug 12 22:18:42 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Valuetype/Valuetype_Adapter_Impl.cpp:

          Regenerated type codes initialized in the constructor of
          TAO_Valuetype_Adapter_Impl to have the "omg.org" prefix.

Tue Aug 12 17:05:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/corbafwd.cpp:
        * tao/corbafwd.h:

          Removed CORBA::_tc_Visibility and CORBA::_tc_ValueModifier.

        * tao/Valuetype/ValueBase.cpp:
        * tao/Valuetype/ValueBase.h:

          Added declaration and initialization to 0 of the above two
          type codes plus CORBA::_tc_ValueBase. Thanks to Frank
          Pilhofer <fpilhofe@mc.com> for pointing out the lack of
          _tc_ValueBase.

        * tao/Valuetype/Valuetype_Adapter_Impl.cpp:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:

          Added default constructor in which to do the actual initialization
          of the 3 type codes mentioned above. They are released in the
          destructor.

Tue Aug 12 17:49:27 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * examples/RTScheduling/Fixed_Priority_Scheduler/run_test.pl:
        * examples/RTScheduling/MIF_Scheduler/run_test.pl:

          Added scripts to run the RTScheduler examples.

Tue Aug 12 06:27:19 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp: Missed the
          checkin last night. This should fix build errors in our daily
          builds.

Mon Aug 11 22:37:43 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Activate.h: Decoupled
          the dependency between IOGR property and other services required
          from the FT ORB. There are many use cases where one may want to use
          the IOGR alone instead of combining it with other FTORB features
          including special service contexts.

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
          #included the required headers.

          This decoupling is just fine, since the IOGR would only be used
          probably by the RM whereas other participants like the FT-Client
          need not know about IOGR's.

Mon Aug 11 19:04:24 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/AV/UDP.cpp:
          Removed a spurious ";" from the end of an if statement.

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
          Changed an ACE_ENV_ARG_DECL to ACE_ENV_ARG_DECL_NOT_USED to
          remove a warning.

        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
          Added #include SString.h needed due to recent subsetting.

        * orbsvcs/tests/Event/Basic/BCast.cpp:
          Added #include INET_Addr.h needed due to recent subsetting.

        * orbsvcs/tests/Event/Basic/BCast.h:
          Added forward declaration of ACE_INET_Addr needed due to recent
          subsetting.

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
          Added in() to IORM in call to _narrow() since it's a *_var type,
          and #ifdef'd away the entire file if TAO_HAS_INTERCEPTORS != 1.

        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
          Added in() to IORM in call to _narrow() since it's a *_var type.

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.cpp:
          Removed ACE_TRY_NEW_ENV block since LB_server's interface
          doesn't include exceptions and thus they aren't needed.

        * performance-tests/Cubit/TAO/MT_Cubit/Util_Thread.cpp:
          Added #include ACE.h due to recent subsetting.

Mon Aug 11 14:44:00 UTC 2003  Stephen Torri storri@cse.wustl.edu

        * orbsrvcs/orbsvcs/Metrics/Metrics_LocalCache.h:

          Added missing file.

Mon Aug 11 12:36:19 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
          Fixed warnings and errors on when exceptions=0 by changing or
          removing several ACE_ENV_ARG_* macros.

Mon Aug 11 02:31:10 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO/orbsvcs/tests/Redundant_Naming/Makefile:
          Added the following missing libraries to LDLIBS: -lTAO_Valuetype
          -lTAO_ObjRefTemplate -lTAO_IORInterceptor. They were getting
          added automagically in shared builds but must be supplied
          explicitly for static builds.

Mon Aug 11 00:35:47 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Load_Balancing_persistent/Load_Balancer_i.h:
          Added #include Memory_Pool.h and Malloc_T.h needed due to recent
          subsetting.

        * examples/Persistent_Grid/Grid_i.h:
          Added #include OS.h, Memory_Poll.h, and Null_Mutex.h needed due
          to recent subsetting.

Sun Aug 10 20:26:27 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/Makefile:
          Fixed a typo: s/IFR_Test/IDL3_Test/.

Sun Aug 10 08:27:38 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/RTKokyuEvent_Static.dsp: Added new .dsp file for
          static builds.

        * orbsvcs/orbsvcs/RTKokyuEvent.mpc:
          Updated these files so that they are similar to RTSchedEvent files.

        * TAOACE.dsw:
        * TAOACE_Static.dsw:
        * orbsvcs/orbsvcs/orbsvcs.dsw:
        * orbsvcs/orbsvcs/orbsvcs_static.dsw:
          Added RTKokyuEvent dsp files.

Sat Aug  9 14:05:13 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.cpp: Fixed unused
          parameters compiler warnings in Debian_Full_Reactors build.

Sat Aug  9 13:38:27 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/Event_Service/Event_Service.cpp:
        * orbsvcs/Event_Service/Event_Service.h:
          Added <none> as a possible value for the -s (scheduler type)
          option. If -s option is not specified and the new EC is selected
          using the -t (EC type) option, then no scheduler is used by the
          EC. If the old EC (-t <old_reactive|old_mt>) is used, then it
          requires a scheduler and the -s <none> option translates to
          using a local scheduler. This will preserve the behavior for
          existing users.

Sat Aug  9 13:23:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.i:
        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
        * docs/ec_options.html:
          Added new option ECGIIOPUseConsumerProxyMap which is 1 by default.
          The IIOP Gateway implementation requested a different proxy push
          consumer for each unique source id. The EC doesn't enforce this,
          so when setting this new option to 0, only one proxy push consumer
          is used for all source ids. In the case that there is no relation
          between supplier and source id this would save a lot of proxy push
          consumer objects and a lot of searching.
          Also fixed a problem that a subscription with source 0 and type all
          resulted in no event subscription. Increased the allocation of one
          QoS which was too small when just subscribing with source 0.

        * orbsvcs/orbsvcs/Event_Service_Constants.h:
          Converted to doxygen layout

Sat Aug  9 01:03:52 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/VarOut_T.cpp:
          Added #include OS_Memory.h needed on Solaris.

Fri Aug  8 08:45:50 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile.RTKokyuEvent: Updated dependencies to
          get rid of Debian_Core build errors.

Fri Aug  8 07:35:38 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp: Fixed a
          logical error while comparing profiles.

Fri Aug  8 09:22:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.i:
        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
          Extended the IIOP Gateway factory with ECGIIOPUseTTL, to specify
          whether the gateway must use the TTL flag in the event. By default
          the TTL is enabled, but this can be disabled using -ECGIIOPUseTTL 0
          in the svc.conf file. This is usefull for systems where a gateway
          just wants to forward events over multiple ec's but the supplier
          is unaware of that and just sets the TTL to 1 by default.

        * docs/ec_options.html:
          Described the existince of the IIOP Gateway factory, how it can
          be configured and which options its supports.

Thu Aug  7 22:14:34 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.h: Added #include for
          ace/SString.h to get rid of compile errors.

Thu Aug  7 22:06:12 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile: Added RTKokyuEvent to a one more place
          in the Makefile. Makefile.RTKokyuEvent was not appearing in the
          generated make command with .mkfiles and hence RTKokyuEvent was
          not getting built.

Thu Aug  7 15:48:59 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile: Added RTKokyuEvent to the list of
          services to be built.

Thu Aug  7 12:06:13 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Object.h:

          Removed unnecessary "tao/Object_KeyC.h" include.  A
          "TAO::ObjectKey" forward declaration is enough.

          Removed obsolete "TAO_ObjectKey" declaration.

        * tao/Tagged_Profile.h:

          Included "tao/Object_KeyC.h" to pull in TAO::ObjectKey class
          declaration.  Necessitated by above change.

Thu Aug  7 11:14:56 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
          Fixed a couple of problems with the checkin "Wed Aug  6 22:10:51
          2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>".

Wed Aug  6 22:10:51 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:

          If the TAG_FT_GROUP component is not available, don't propagate
          the exception to the application. There may be cases, where the
          FTORB would try to make simple calls, like trying to contact a
          naming service. The application can't do much if TAG_FT_GROUP
          isn't available. Thanks to Huang-Min Huang for reporting the
          problem.

Wed Aug  6 19:09:00 2003  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * performance-tests/Latency/Collocation/Client_Task.h:
        * performance-tests/Latency/Collocation/Client_Task.cpp:
        * performance-tests/Latency/Collocation/Server_Task.h:
        * performance-tests/Latency/Collocation/Client_Task.cpp:
        * performance-tests/Latency/Collocation/Collocated_Test.cpp:
        * performance-tests/Latency/Collocation/Test.idl:
        * performance-tests/Latency/Collocation/Roundtrip.h:
        * performance-tests/Latency/Collocation/Roundtrip.cpp:
        * performance-tests/Latency/Collocation/run_test.pl:
        * performance-tests/Latency/Collocation/README:
        * performance-tests/Latency/Collocation/Makefile:
        * performance-tests/Latency/Collocation/svc.conf:
          Simple test to measure round-trip latency when client and server
          are collocated. Both client and server are single-threaded.
          Collocation strategy used for testing is the "Thru_POA".

Thu Aug  7 00:12:50 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/LoadBalancer/Signal_Handler.cpp:
          Added #include Reactor.h required by recent subsetting.

Wed Aug  6 20:44:51 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Event_Comm/Event_Comm_i.h:
          Added #include Reactor.h.

        * examples/Logging/Logger_i.h:
        * examples/POA/DSI/server.cpp:
        * examples/POA/Default_Servant/client.cpp:
        * examples/POA/Default_Servant/server.cpp:
        * examples/POA/Explicit_Activation/server.cpp:
        * examples/POA/Loader/Servant_Locator.h:
        * examples/POA/NewPOA/NewPOA.cpp:
        * examples/POA/On_Demand_Activation/server.cpp.
        * examples/POA/TIE/server.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_Client_i.cpp:
        * examples/PluggableUDP/tests/Performance/UDP_PerformanceClient.cpp:
        * examples/RTCORBA/Activity/Job_i.h:
        * examples/RTCORBA/Activity/POA_Holder.h:
        * examples/RTCORBA/Activity/Periodic_Task.h:
        * examples/RTScheduling/Job_i.h:
        * examples/RTScheduling/POA_Holder.h:
        * examples/Simple/bank/AccountManager_i.h:
        * examples/ior_corbaloc/ior_corbaloc_client_i.h:
        * examples/ior_corbaloc/status_i.h:
          Added #include SString.h.

        * examples/Simple/chat/Client_i.h:
          Added #include of SString.h and Event_Handler.h.

Wed Aug  6 10:44:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Removed unused local variables.

Wed Aug  6 10:23:47 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/InterfaceRepo/IDL_Test/Makefile:

          Fixed mistakes and updated dependencies.

Wed Aug  6 15:01:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ec_options.html:
          Extended documentation of RTEC options.

Tue Aug  5 15:20:00 UTC 2003  Gautam Thaker <gthaker@atl.lmco.com>

        Please email any questions/comments about this update to
        Jason Cohen, jcohen@atl.lmco.com

        * tao/Strategies/SCIOP_Connection_Handler.cpp:

          Changed IPPROTO_IP reference to IPPROTO_SCTP.
          Fixed hardcoded SCTP_NODELAY option to allow stock RH9
          to build SCIOP code without implementation support.

Tue Aug  5 17:31:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/test.idl:

          Added test of eventtype support, and fixed related bugs.

Tue Aug  5 15:51:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:

          Minor cosmetic changes.

        * orbsvcs/tests/InterfaceRepo/Makefile:

          Added the new test to the directory list.

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/InterfaceRepo_IDL3_Test.mpc:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/Makefile:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/README:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/run_test.pl:

          New files to complete the test integration.

Tue Aug  5 14:01:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_home.cpp:
        * TAO_IDL/include/ast_home.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/test.idl:

          Testing and debugging of IFR support for valuetypes
          and component homes.

Tue Aug  5 05:11:25 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
          Added #inlcude Null_Mutex.h.

        * orbsvcs/examples/Notify/Filter/Filter.h:
        * orbsvcs/examples/Notify/Lanes/Consumer.h:
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.h:
        * orbsvcs/examples/Notify/Lanes/Supplier.h:
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.h:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.h:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.h:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.h:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        * orbsvcs/tests/Notify/RT_lib/RT_POA_Command.h:
        * orbsvcs/tests/ior_corbaname/ior_corbaname_client_i.cpp:
          Added #include SString.h.

Mon Aug  4 23:15:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/IFRService/Container_i.h:
        * orbsvcs/IFRService/ExtValueDef_i.cpp:
        * tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * tests/InterfaceRepo/IDL3_Test/test.idl:

        More testing and debugging of IFR valuetype support.

Mon Aug  4 19:06:21 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IFR_Service/ifr_adding_visitor.cpp:
        * IFR_Service/ifr_adding_visitor.h:
        * IFR_Service/ifr_adding_visitor_operation.cpp:
        * orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/IFRService/IFR_Service_Utils.h:
        * orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/IFRService/ValueDef_i.h:
        * tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * tests/InterfaceRepo/IDL3_Test/test.idl:

          More testing and debugging of IFR valuetype support.

Mon Aug  4 18:28:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IORManipulation/IOR.pidl:
        * tao/IORManipulation/IORC.h: Fixed typos from the last checkin.

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h: Made the
          signature changes that were necessitated from "Mon Aug  4
          11:06:55 2003  Balachandran Natarajan
          <bala@dre.vanderbilt.edu>".

Mon Aug  4 18:01:52 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:

          Fixed bug in generating inheritance list for event types.
          Thanks to George Edwards <edwardsgt@isis.vanderbilt.edu> for
          pointing out the bug.

Mon Aug  4 21:02:12 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tests/Bug_1551_Regression/Hello.h:
          Changed ACE_Thread_Mutex::ACE_Thread_Mutex to TAO_SYNCH_MUTEX.

        * tests/Queued_Message_Test/Queued_Message_Test.cpp:
          Added #include ACE.

Mon Aug  4 11:48:46 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/Makefile:
        * orbsvcs/tests/FaultTolerance/Makefile.bor: Added
          GroupRef_Manipulation test to the daily builds.

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/svc.conf:
          This file is not needed.

Mon Aug  4 11:06:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Tagged_Components.cpp (remove_component):
        * tao/Tagged_Components.h: Added a new method which removes tagged
          components from the list of tagged components based on component
          id.

        * tao/IORManipulation/IOR.pidl:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORManipulation/IORC.h:
        * tao/IORManipulation/IORC.i: A new operation, remove_primary_tag
          ()  on TAO_IOP::TAO_IOR_Property interface. Please see
          documentation for details.

          Further all operations in TAO_IOP::TAO_IOR_Property interface
          that modify parameters have been made inout instead of just
          in. This was causing all sorts of confusion for a normal user.

        * tao/IORManipulation/IORManipulation.cpp:
        * tao/IORManipulation/IORManipulation.h: A concrete implementation
          of remove_primary_tag () within the IORManipulation library.

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h: A concrete
          implementation of remove_primary_tag () within the
          FaultTolerance library.

          Thanks to Milan Cvetkovic <mcvetcovic@mpathix.com>, for
          motivating the above changes and providing the patches.

Mon Aug  4 000:09:26 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/IFRService/ExtValueDef_i.h:
        * orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/IFRService/ValueDef_i.cpp:
        * tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * tests/InterfaceRepo/IDL3_Test/test.idl:

          Debugging and testing of IFR's support of valuetypes.

Thu Aug  4 21:59:32 2003  Ossama Othman <ossama@dre.vanderbilt.edu>

        * tao/corbafwd.i (string_alloc, wstring_alloc):
        * tao/corbafwd.cpp:

          Uninlined these functions.  They invoke the standard free store
          allocator (e.g. new()), meaning that inlining them doesn't
          provide a noticeable performance gain.  Reduces static
          footprint.

        * tao/corbafwd.h:

          No longer any need to include "ace/OS_Memory.h".  Improves
          compile times.

        * tao/Seq_Var_T.cpp:
        * tao/Sequence_T.cpp:

          Include "ace/OS_Memory.h" to pull in ACE_NEW_RETURN macro
          definition.

        * tao/ClientRequestInfo.h:
        * tao/PortableServer/ServerRequestInfo.h:

          Updated documentation.

        * tao/PortableServer/Object_Adapter.h (upcall_cleanup):
        * tao/PortableServer/Object_Adapter.cpp (~Servant_Upcall):
          (upcall_cleanup):

          Moved Servant_Upcall cleanup code from ~Servant_Upcall()
          destructor to a new upcall_cleanup() method.  This allows the
          Servant_Upcall state to be explicitly cleaned up without
          destroying the Servant_Upcall object itself.

          (prepare_for_upcall):

          Do not invoke the ~Servant_Upcall() destructor to reset the
          state of the Servant_Upcall object.  Doing so invokes undefined
          behavior since we end up making calls and using state in an
          object that no longer exists.  Call the new upcall_cleanup()
          method instead.

Mon Aug  4 03:26:30 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Muxed_TMS.h:
        * tao/ObjectKey_Table.h:
        * tao/PolicyFactory_Registry.h:
        * tao/Typecode.cpp:
          #included Null_Mutex.h needed due to Synch changes in ACE.

        * tao/Typecode.h:
          #included Thread_Mutex.h needed due to Synch changes in ACE.

        * tao/orbconf.h:
          #included Synch_Traits.h needed due to Synch changes in ACE.

        * tao/Sequence.cpp:
          #included OS.h needed due to Synch changes in ACE.

Sun Aug  3 21:56:38 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/ImplRepo/airplane_client_i.cpp:
        * orbsvcs/tests/ImplRepo/nestea_client_i.cpp: #included ACE.h to
          get rid of compile  errors on full reactor build.

Sun Aug  3 21:05:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/EventType.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp: #included ACE.h to
          get rid of compile  errors on full reactor build.

Sun Aug  3 20:57:39 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/OctetSeq/client.cpp:
        * tests/OctetSeq/test_i.cpp: #included ACE.h to get rid of compile
          errors on full reactor build.

Sun Aug  3 18:43:30 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Notify/lib/Peer.h: #included ace/SStream.h

Sun Aug  3 17:39:00 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Collocation_Tests/Collocated_Test.cpp:
        * tests/File_IO/client.cpp:
        * tests/File_IO/server.cpp:
        * tests/POA/Default_Servant/Default_Servant.cpp:
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
        * tests/POA/Persistent_ID/server.cpp: Fixed compile errors that
          were caused due to recent refactoring. Most of the files needed
          an include of "ace/SString.h".

Sun Aug  3 17:33:36 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp: The skeleton files needed an extra
          include if dynamic_hash is used. This was needed due to the
          recent refactoring.

Sat Aug 02 17:35:44 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_T.h (class
          TAO_Notify_Method_Request_Dispatch_T): Removed unnecessary
          export declaration for the template class.  It was causing
          compilation errors on MSVC 7.1.

Sat Aug  2 13:08:51 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Event_Service/Event_Service.h:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * orbsvcs/ImplRepo_Service/tao_imr_i.h:
        * orbsvcs/LoadBalancer/Signal_Handler.h:
        * orbsvcs/Notify_Service/Notify_Service.h:
        * orbsvcs/PSS/PSDL_Datastore.cpp:
        * orbsvcs/PSS/PSDL_Datastore.h:
        * orbsvcs/PSS/PSDL_Scope.h:
        * orbsvcs/PSS/PSDL_String.cpp: Fixed compile errors that were
          caused due to the refactoring done in ACE+TAO core.

Sat Aug  2 09:14:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_interceptor.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp:

          Cosmetic fixes.

Sat Aug  2 09:10:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
          Cosmetic fixes.

        * orbsvcs/orbsvcs/FaultTolerance/FT_Services_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Services_Activate.cpp: Moved
          all the initialization to the Initializer () routine. This
          should fix problems in the static builds. This have been long
          overdue.

Sat Aug  2 08:05:18 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Adapter.h:
        * tao/Adapter.cpp: Looks like a forward declaration of
          SystemException was insufficient in builds where native
          exceptions are used.

Fri Aug  1 22:45:56 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/ORB_Core.i (is_profile_equivalent): Intialize the default
          value to be true. Incorrect initializations lead to simple
          errors with oebjref comparisions which showed up in our daily
          builds.

Fri Aug  1 22:33:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Sequence.cpp: Fixed a link error due to a wrong inline
          declaration within the cpp file.

Fri Aug  1 21:48:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/Container_i.cpp: Fixed a simple
          compiler in non-native exception builds.

Fri Aug  1 20:11:44 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.h:
        * orbsvcs/orbsvcs/Scheduler_Utilities.h:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.h:
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.h:
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.h:
        * orbsvcs/orbsvcs/Event/BCU.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.h
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter.h:
        * orbsvcs/orbsvcs/Event/Memory_Pools.h:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.cpp:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp: #included "ace/SString.h"
          to get them compiling for the timebeing. We need to take a
          closer look to see whether they are even necessary in the first
          place. We need to take a closer look in the next checkin.

Fri Aug  1 20:13:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:

          Implemented CORBA::Container::create_ext_value method.
          Also factored out common servant code that creates IFR entries for
          valuetype factories, and for the exception references
          of operations, attributes and valuetype factories.

Fri Aug  1 20:08:01 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Adapter.h: Forward declared CORBA::Exception.
        * tao/Adapter.cpp: #included Exception.h

        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Impl_T.cpp:
        * tao/Any_SystemException.cpp: #included ace/Auto_Ptr.h

        * tao/Codeset_Manager.h: #included ace/Unbounded_Set.h

        * tao/Exception.cpp: #included ace/Malloc.h

        * tao/LocalObject.h:
        * tao/Fault_Tolerance_Service.h: #included ace/Synch.h

        * tao/Object.h: Forward declared ACE_Lock;

        * tao/PI_ForwardC.cpp: #included "Typecode.h"
        * tao/Principal.h: #included "Pseudo_VarOut_T.h"

        * tao/Refcounted_ObjectKey.cpp: #included "ace/Log_Msg.h".

        * tao/Sequence_T.cpp:
        * tao/Sequence_T.i:
        * tao/Sequence.cpp:
        * tao/Sequence.h:
        * tao/Sequence.i: Removed dependency on Log_Msg.h ie. files
          including Sequence.h wouldnt get Log_msg.h free. Log_Msg.h was
          included just to get ACE_ASSERT.

          Added a new method check_bounds () which is used for checking
          the bounds of the sequence.

        * tao/Typecode.h: #included "ace/Hash_Map_Manager.h" and
          "ace/Unbounded_Queue.h".

        * tao/PortableServer/Key_Adapters.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/Transport_Cache_Manager.cpp: #included "ace/ACE.h".

        * tao/Strategies/advanced_resource.cpp: #included "ace/Malloc.h".

          Thanks to Carlos for providing the patches. These patches
          improve the compilation times by removing unwanted dependencies
          that take up compilation time for TAO's applications.

Fri Aug  1 17:04:49 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.cpp:

          Removed the unused ACE_TRY_LABEL warning from RH 7.1 Explicit
          Template build.

Fri Aug 1 16:35:43 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tests/RTScheduling/VoidData/run_test.pl:
        * tests/RTScheduling/Thread_Cancel/run_test.pl:
        * tests/RTScheduling/DT_Spawn/run_test.pl:
        * tests/RTScheduling/Current/run_test.pl:
        * tests/RTScheduling/Scheduling_Interceptor/run_test.pl:
        * tao_orb_tests.lst:

          Added run_test.pl to execute the tests.

Fri Aug 01 14:37:23 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tao/Object_KeyC.h:
        * tao/Object_KeyC.cpp:

          Changed tao_encode_sequence_to_string and
          decode_string_to_sequence methods to use '%' instead of '\'
          for escaping. Restricted unescaped characters to those
          permitted in a URI by RFC 2396.

          Thanks to Dan Halbert <halbert@bbn.com> for reporting the
          problem. This closes Bug #1330.

Fri Aug  1 13:07:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.{h,cpp}:
          Added two helper methods so that from the outside we can set the
          supplierec and consumerec object reference to nil in case the
          connection to that ec is lost.

Fri Aug  1 12:32:56 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Persistent_ID/server.cpp:
          Fixed incorrect Id string

Thu Jul 31 22:39:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          More debugging of IFR IDL3 support.

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/test.idl:

          Extended test so that it now covers component attributes,
          inheritance, supported interfaces, facets, receptacles,
          event sources and sinks.

Fri Aug  1 01:16:07 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/mfc/client.mpc:
        * examples/mfc/server.mpc:
          Added a verbatim tag that ifdef's out the entire Makefile on
          non-Windows systems.

Thu Jul 31 18:00:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:

          More debugging of IFR IDL3 support.

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/test.idl:

          Extended test so that it now covers component attributes,
          inheritance, supported interfaces, facets and receptacles.

        * tao/Typecode.cpp:
        * tao/append.cpp:
        * tao/skip.cpp:

          Fixed bug in demarshaling of IDL3-related type codes.
          Also fixed similar bugs in interpretive (de)marshaling,
          where the interpreter skips over or appends portions
          of the CDR stream.

Thu Jul 31 12:26:27 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tests/RTScheduling/RTScheduling_tests.dsw:
        * tests/RTScheduling/VoidData/VoidData.dsp:
        * tests/RTScheduling/Thread_Cancel/Thread_Cancel.dsp:
        * tests/RTScheduling/DT_Spawn/DT_Spawn.dsp:
        * tests/RTScheduling/Current/Current.dsp:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Server.dsp:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor_Client.dsp:

          Added windows project and workspace files to compile
          RTScheduling tests on windows.

        * examples/RTScheduling/rtschedulers.dsw:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.dsp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.dsp:
        * examples/RTScheduling/Starter.dsp:
        * examples/RTScheduling/Common_IDL_Gen.dsp:

          Added windows project and workspace files to compile
          RTScheduling examples on windows.

Wed Jul 30 23:00:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFRService/ComponentContainer_i.cpp:
        * tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * tests/InterfaceRepo/IDL3_Test/test.idl:

          More testing and debugging of the IFR's IDL3 support.

Wed Jul 30 22:11:37 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/IDL3_Test.dsp:

          Update project settings.

Wed Jul 30 18:25:13 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:

          Fixed cut and paste error in code that adds attribute
          exceptions to the AST.

        * orbsvcs/IFR_Service/be_produce.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:

          A start on debugging and testing the IFR's support of
          IDL3 types.

        * tao/Typecode.cpp:

          Fixed bugs in marshaling and demarshaling of IDL3
          type codes.

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/IDL3_Test.dsp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/test.idl:

          Start of new test for IFR's IDL3 support.

        * orbsvcs/tests/InterfaceRepo/InterfaceRepo.dsw:
        * orbsvcs/tests/InterfaceRepo/Application_Test/client.cpp:

          Updates and minor changes.

Wed Jul 30 17:00:03 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * examples/RTScheduling/FP_SchedulingC.h:
        * examples/RTScheduling/FP_SchedulingC.cpp:
        * examples/RTScheduling/FP_SchedulingC.i:
        * examples/RTScheduling/MIF_SchedulingC.h:
        * examples/RTScheduling/MIF_SchedulingC.cpp:
        * examples/RTScheduling/MIF_SchedulingC.i:

          Generated stubs with exceptions. This should fix compile errors
          on Redhat 7.1 and Debian builds.

Wed Jul 30 16:09:23 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:

          Fixed compile errors from improper exception specifications.

        * orbsvcs/orbsvcs/FT_CORBA_ORB.idl: This missed my last commit.

          This should fix compile errors in the core builds.

Wed Jul 30 18:34:34 UTC 2003  Craig Rodrigues  <crodrigu@bbn.com>

        * orbsvcs/orbsvcs/AV/UDP.cpp:
          - Change mtu() to return the maximum theoretical MTU for UDP.
            The existing value was too low, and was silently corrupting
            data by silently truncating it.
          - Make the the iovec version of send_frame() like the other versions.

Wed Jul 30 13:12:26 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FT_ORB.dsp: Added the new file
          (FT_ClientRequest_Interceptor.h,cpp} into the MSVC projects.

Wed Jul 30 12:53:05 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation: A new test
          for testing some simple FT ORB features. Please see the README
          file for more details.

        * orbsvcs/tests/FaultTolerance/IOGR/svc.conf: Fixed a typo.
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp: Fixed some
          obvious memory leaks.

Wed Jul 30 12:50:33 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Profile.h:
        * tao/Profile.cpp: Added two new methods, hash_service_i () and
          is_profile_equivalent_i (). These methods are basically hooks
          for is_equivalent () and  hash () calls declared in the profile
          classes. The hook serves to address the following problem

          - services like FTCORBA have additional requirements to decide
            whether two objects or profiles are equivalent. This hook
            is used by the services, like FTCORBA to their additional
            requirements.

        * tao/IIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/SCIOP_Profile.cpp: Calls to hash () and
          is_equivalent (), invokes the above new methods in their base
          classes in addition to the computations that is already done.

          Thanks to Didier Becu <didier.becu@fr.thalesgroup.com> for
          motivating these changes.


        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.cpp:

          Fixed a subtle problem which prevented location forwarded IOR's
          to be overlooked when trying to search for a primary.

        * orbsvcs/orbsvcs/FT_ORB.bor: Added the new file to the borland
          Makefile.


        Integration from the branch. The relevant ChangeLog entries are:

        Thu Jul 10 11:20:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.FaulTolerance: Added new files.

        * orbsvcs/orbsvcs/FT_CORBA_ORB.idl: Make the IDL spec compatible.

        Thu Jul 10 11:09:25 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
          Client side interceptor for FaultTolerance. This interceptor is
          now used to modify the service context list that is passed to
          the server side. The interceptor is setup using the standard
          svc.conf mechanism. This fixes some of the subtle bugs that have
          been reported in the past that arose from

          - A new IOGR version showing up from the server through a
            location forward mechanism but the service context list
            sending older group version information to the server.

          - The policy for request_duration_time not accessible if set on
            the PolicyManager.

        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.h: Register the
          server side and client side interceptors through the
          initializer.

        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.h: The latest specs
          changed the attribute in FTRequestDurationPolicy from
          request_duration_policy to
          request_duration_policy_value. Changed the accesor to match the
          IDL file.

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.h: Removed
          all the callback code used for processing service context
          information. We now interceptors to do that.

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.i: Removed all the callbacks for logging and
          service context for FT.


        * tao/Service_Callbacks.h:
        * tao/Service_Callbacks.cpp: The effect of the above
          changes. Remove interfaces that are totally irrelevant.


        * tao/PortableServer/ServantBase.cpp: The effect of the above change.

Tue Jul 29 16:27:52 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/be_produce.cpp (BE_produce):

          Fixed a bug in launching the removing visitor.

        * orbsvcs/tests/InterfaceRepo/Application_Test/run_test.pl:

          Added '-ORBInitRef InterfaceRepository=file://xxxxx' to
          the command line passed to the server and tao_ifr processes.
          On some platforms at least, the default multicast no longer
          works at all. The server process also needs this info, since
          the client may call _get_interface() on it.

        * orbsvcs/tests/InterfaceRepo/IFR_Test/run_test.pl:

          Removed '-ORBDottedDecimalAddresses 1' from the argument list
          passed to the IFR process. This is needed only if the host
          has no static IP address.

Tue Jul 29 14:15:11 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:

          Cleaned up formatting of generated code.

Tue Jul 29 19:08:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event_Utilities.h:
        * orbsvcs/orbsvcs/RtecBase.idl:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.i:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h:
        * orbsvcs/orbsvcs/Event/ EC_MT_Dispatching.h:
          Fixed doxygen warnings.

Tue Jul 29 09:04:08 2003  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * docs/ORBEndpoint.html: Updated this document so that the DIOP
          section points to the examples/PluggableUDP/DIOP/README file,
          which describes the limitations with DIOP.  Thanks to
          Michael Kircher for motivating this!

Tue Jul 29 10:08:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Metrics/Metrics.dsp:

          Turned on RTTI in MetricsC.cpp.

Tue Jul 29 09:24:16 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tao/Muxed_TMS.cpp

          Reverted the changes to the file to version 1.23, since the
          changes might cause applications to crash, because in the
          clear_cache () function the unbind () function call will make
          the iterator to be invalid.

Tue Jul 29 01:08:10 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * examples/RTScheduling/DT_Creator.cpp:

          Removed the inclusion of file Task.h. This should fix the Debian
          builds.

Mon Jul 28 18:37:27 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tao/Muxed_TMS.cpp
          Modify the TAO_Muxed_TMS::clear_cache () function, which
          is supposed to be modified fully in the last patch at:

          Tue Jul 15 10:18:07 2003  Gan Deng  <gan.deng@vanderbilt.edu>

Mon Jul 28 16:12:15 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tao/Exception.h
        * tao/Exception.cpp

          Modify these two files in accordance with the new OMG CORBA
          C++ Mapping version 1.1.

          However, due to the problem of MS VC++ 6.0 compiler, not all
          specification for Exception type has been fulfilled. Some
          constructors, copy constructors and assignment operators which
          are supposed be be put into the "protected" section in class
          declaration still remained in the "public" section. These
          changes will be made later when we full migrate to MS VC++
          7.0 or later version.

          See the "NOTE" section in the Exception.h file for details.

Mon Jul 28 16:14:22 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Exception.cpp: Fixed explicit template build problems.

Mon Jul 28 14:46:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TAO_Static.dsp:

          Added new files from

          Mon Jul 28 12:34:16 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

          to static project.

Mon Jul 28 13:05:08 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * tests/Param_Test/except.cpp
        * tests/Param_Test/param_test_i.cpp

          Added the testing for the SystemException into the
          exception test.

Mon Jul 28 13:03:57 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any.h: Provided a default implementation for
          TAO::Any_Impl::_tao_decode ().

Mon Jul 28 12:47:22 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_SystemException.cpp:

          Cosmetic changes.

        * tao/TAO.dsp:

          Added above file and corresponding header file to project.

Mon Jul 28 12:34:16 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Any_SystemException.h:
        * tao/Any_SystemException.cpp: New Any_Impl classes to be used by
          different concrete CORBA::SystemException  types. The way it was
          done before added a lot of footprint.

        * tao/Exception.cpp: Use TAO::Any_SystemException class for Any
          extraction and insertion operators.

        * tao/Makefile.tao:
        * tao/tao.mpc:
        * tao/makefile.bor: Added the new file to the following Makefiles
          and project files.

Mon Jul 28 13:25:00 2003  Stephen Torri <storri@cse.wustl.edu>

        * orbsvcs/orbsvcs/Metrics.idl:

          Added missing file.

Mon Jul 28 10:48:49 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:

          Added generation of specialization for the
          TAO::Any_Dual_Impl_T<...>::demarshal_value method, for
          user exceptions. Bala will soon check in a specialization
          of the entire class for system exceptions.

        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:

          Removed the '_NOT_USED' part of environment variable for
          _tao_decode and _tao_encode methods. The implementation of
          both these methods may throw CORBA::MARSHAL.

        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.inl:

          Reverted my changes to the demarshal_value method in

          Thu Jul 24 11:35:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

          since we now have an alternate approach in the changes
          described above.

Mon Jul 28 10:13:30 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:

          Fixed indentation in generated code.

Mon Jul 28 09:33:23 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Current.h:

          Cosmetic changes.

        * tao/RTScheduling/TAO_RTScheduler.dsp:

          Fixed typos in export preprocessor flag.

Mon Jul 28 09:14:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/Notify/lib/TAO_NotifyTests.dsp:

          Changed settings to exclude template source file from build.

        * orbsvcs/tests/Redundant_Naming/client.dsp:

          Turned on RTTI in project settings.

        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.cpp:
        * orbsvcs/tests/Notify/lib/Peer_T.cpp:

          Fixed problems with usage of environment variable, and cosmetic
          changes.

Mon Jul 28 09:04:14 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Minor change to make the return type of atoui(), modified
          in

          Mon Jul 21 15:58:39 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

          compatible with its usage to set the line number.

Mon Jul 28 14:04:10 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/RTScheduling/DT_Creator.cpp:
          Removed leftover inclusion of Task.h file that was causing
          compile errors.

Mon Jul 28 13:52:13 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h:
        * orbsvcs/orbsvcs/Event/EC_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.h:
          Fixed doxygen warnings

Mon Jul 28 08:45:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:

          Fixed some problems with environment variable usage.

Sun Jul 27 19:23:22 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:

          Changed filename string literal assignment at top of file
          to const char *.

Sun Jul 27 19:11:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:

          Fixed indentation in generation of pure virtual member accessor
          method declarations.

        * examples/Persistent_Grid/Grid_i.cpp:
        * examples/Persistent_Grid/Grid_i.h:
        * examples/Simple/bank/AccountManager_i.cpp:
        * examples/Simple/bank/AccountManager_i.h:
        * examples/Simple/echo/Echo_i.cpp:
        * examples/Simple/echo/Echo_i.h:
        * examples/Simple/grid/Grid_i.cpp:
        * examples/Simple/grid/Grid_i.h:
        * examples/Simple/time/Time_i.cpp:
        * examples/Simple/time/Time_i.h:

          Removed no-op copy constructors that were there only to placate
          old g++.

        * orbsvcs/tests/Trading/Offer_Importer.cpp:

          Changed use of CosTrading::Lookup::SpecifiedProps union case 'all_'
          removed in

          Thu Jul 24 11:36:36 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

          to use of existing case 'prop_names'.

        * tests/CodeSets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Translator.cpp:

          Cast array subscript values of type char to int.

Sun Jul 27 19:31:27 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * examples/RTScheduling/DT_Creator.h:

          Added the missing DT_Creator.h file.

        * examples/RTScheduling/FP_SchedulingC.h:
        * examples/RTScheduling/MIF_SchedulingC.h:

          Included RTScheduler.h file instaed of RTSchedulerC.h.

        * examples/RTScheduling/Thread_Task.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_DT_Creator.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.h:

          Removed the inclusion of Task.h file that is no longer used.

        * examples/RTScheduling/MIF_Scheduler/Makefile:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile:

          Updated dependencies.

          Above changes fix compile problems on most builds.

Sun Jul 27 17:30:14 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp: Converted period
          argument for scheduler->set from ACE_Time_Value to
          RtecScheduler::Period_t to clear warnings in
          WinXP_MSVC_Warning_Level_4_Debug build.

        * orbsvcs/examples/RtEC/Kokyu/Service.cpp: Used ORBSVCS_Time
          utility function to convert between ACE_Time_Value and
          TimeBase::TimeT to clear warnings in
          WinXP_MSVC_Warning_Level_4_Debug build.

Sun Jul 27 09:06:02 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Stub.cpp (get_policy): Removed the check for this->policies_
          == 0. This is actually bogus since the get_client_policy () does
          all the checks. Moreover, if the policy is set on Current or on
          the PolicyManager, we could by mistake a return a null
          policy. Thanks to Christoph Liebig <xfrog2000@yahoo.com>
          for reporting this problem.

Sun Jul 27 07:29:51 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Exception.h:
        * tao/Exception.cpp: Fixed compiation errors and warnings in
          SunC++  builds. These were caused due to the following

          - string literal being converted to char *
          - explicit template instantiations required that the
          CORBA::SystemException not be an abstract base class. Hence
          provided default implementations for them.

Sat Jul 26 19:03:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:

          More reordering of base class constructor calls, as per
          gcc 3.3's requirements.

Sat Jul 26 14:34:11 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:

          More reordering of base class constructor calls, as per
          gcc 3.3's requirements.

Sat Jul 26 11:37:17 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_Component.h:

          Uncommented ACE_STATIC_SVC_REQUIRE macro.  It is needed when
          using this component in a statically linked application.

        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.cpp:

          Re-enabled code that automatically and transparently adds load
          balancing to servers.  This was made possible by Carlos'
          IORInterceptor deadlock fix (see Bug 1414).

        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp
          (find_object_group):

          Fixed problem where nil object group reference was used when
          adding members to the object group.  In particular, use
          "_retn()" not "out()" when transferring ownership of object
          group reference.

        * orbsvcs/orbsvcs/LoadBalancing/LB_ServerRequestInterceptor.cpp
          (receive_request_service_contexts):

          Commented out code that attempts to check for a load
          balancing-specific IOP::ServiceContext.  Such a service context
          is no longer used.  A CORBA::TRANSIENT exception is now thrown
          for all requests when a load alert is enabled, regardless of
          whether or not the target is load balanced.

        * tao/Pseudo_VarOut_T.inl:
        * tao/Pseudo_VarOut_T.cpp:

          Nuked trailing whitespace.

Sat Jul 26 13:27:35 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/RTKokyuEvent.dsp:

          Added Kokyu library to list of link libraries and added Kokyu
          path to link path.

Sat Jul 26 10:02:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.i:

          Again changed the order of base class constructor calls in the
          copy constructor for implementations of 3 FT policy interfaces,
          to eliminate warnings from gcc 3.3. The order now is not
          depth-first left-to-right, but perhaps the fact that the
          implementation classes don't use virtual inheritance has an
          effect on the rule gcc applies.

        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.h:

          Cosmetic changes.

Fri Jul 25 22:17:44 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.h:

          Modifications to reflect changes in Kokyu. The Kokyu dispatcher
          is stored in an auto ptr instead of a regular pointer. This is
          enforced by the Kokyu interface.

        * orbsvcs/orbsvcs/Event/RTKokyuEvent.dsw:

          Changed the dependency to Kokyu.dsp instead of Kokyu_DLL.dsp.

Fri Jul 25 17:07:00 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.h:

          Removed unused copy constructors and assignment
          operators, inserted only for older versions
          of gcc no longer supported.

        * TAO_IDL/fe/fe_lookup.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.i:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
        * tao/Domain/DomainS.cpp:
        * tao/Messaging/MessagingS.cpp:

          Fixed more gcc 3.3 warnings, about array subscript
          values of type char and about the order of base
          class constructor calls in copy constructors.

Fri Jul 25 13:15:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Param_Test/except.cpp:
        * tests/Param_Test/param_test_i.cpp:

          Changed the logic inside the catch blocks of
          Test_Exception::dii_req_invoke and Test_Exception::run_sii_test.
          Changes in progress to TAO's exception classes have been
          producing errors in exception handling that were not caught
          by this test. Also made slight change to the servant method,
          a change to the type of a local variable.

Fri Jul 25 14:08:09 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC*.h:
          Added /**/ before the include of event_export.h so that this file
          isn't added to the doxygen include hierarchy pictures. This will
          make the pictures simpler.

Fri Jul 25 08:21:28 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Exception.h: Fix for the undefined symbol error that showed
          up in our daily builds. Strange that it never showed up in my
          workspace before I checked stuff in.

Fri Jul 25 13:09:56 UTC 2003  Johnny Willlemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
          Extended the gateway with a factory and a consumer event channel
          control. With this control the behaviour when a misbehaving consumer
          ec is detected can be controlled.

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h:
          New factory for the options of the IIOP Gateway.

        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
          Added the defaults for the new controls

        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.cpp:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.i:
          Default control that just ignores any error and continues as normal.
          This is exactly the same as the behaviour of the IIOP Gateway before
          this checkin. Is selected by not setting -ECGIIOPConsumerECControl or
          setting it to null.

        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.i:
          A reactive control that disconnects the consumer event channel in
          case it misbehaves. Also it is possible to configure this control that
          the consumer ec is polled on a certain internal. Is selected by
          setting -ECGIIOPConsumerECControl to reactive.

        * orbsvcs/orbsvcs/Makefile.RTEvent:
        * orbsvcs/orbsvcs/RTEvent.bor:
        * orbsvcs/orbsvcs/RTEvent.dsp:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent_Static.dsp:
          Added new files

        * orbsvcs/orbsvcs/Event_Utilities.h:
          Doxygen improvement

Thu Jul 24 17:38:11 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        Various scoreboard items ----

        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/include/ast_interface.h:

          Changed the inheritance graph traversal mechanism
          to be depth-first instead of breadth-first. It
          seems that gcc 3.3 wants base class constructors
          to be called in left-to-right depth-first order,
          as required by ANSI C++.

        * orbsvcs/orbsvcs/CosTrading.dsp:

          Added missing header files to project.

        * orbsvcs/orbsvcs/PortableGroup.dsp:

          Modified an included template source file to be
          excluded from the build.

        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:

          Removed a check for an unsigned char argument
          value greater than 255, which gcc 3.3 correctly
          warns is impossible.

        * orbsvcs/orbsvcs/Trader/Offer_Iterators.h:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.h:

          Removed some legacy no-op copy constructors that
          were originally added only to please some version
          of gcc. The new 3.3 version of gcc now complains
          about their existence.

        * tao/Messaging/MessagingS.cpp:
        * TAO_IDL/fe/fe_lookup.cpp:

          Modified char type array subscripts to be cast
          to int, reflecting recent changes to gperf.

Thu Jul 24 17:30:33 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/lib/Peer_T.ccp (status):

          Changed ENV to NOT_USED to fix compile warning.

Thu Jul 24 16:06:21 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Exception.h:
        * tao/Exception.cpp: Some cosmetic fixes that reduce the in disk
          footprint of this file. The problem is that we use macros to
          create and initalize a tonne of system exceptions. The footprint
          blow up is due to code duplication. This checkin primarily tries
          to reduce code duplication which helps the footprint.

Thu Jul 24 14:26:12 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * examples/Makefile:

        Updated the Makefile to include the RTScheduling DIR.

        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile:
        * examples/RTScheduling/MIF_Scheduler/Makefile:

        Removed rules to compile FP_Scheduling.idl and
        MIF_Scheduling.idl.

Thu Jul 24 13:48:33 2003  Irfan Pyarali  <irfan@oomworks.com>

        * orbsvcs/examples/Notify/ThreadPool/Supplier.cpp
          (subscription_change):

          string_var needed .in() accessor.

        * orbsvcs/examples/Notify/ThreadPool/run_test.pl:

          Fixed typo.

Thu Jul 24 13:36:48 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTScheduling/Scheduler.cpp:
        * tests/RTScheduling/VoidData/test_client.cpp (main):
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp (main):
        * tests/RTScheduling/Current/test.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:

          Fixed use of ACE_ENV.

Thu Jul 24 13:01:46 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCORBA/Priority_Inversion_With_Bands/test_i.cpp
          (initialize):

          ACE_ENV_ARG was not used in this function.

Thu Jul 24 11:35:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_Dual_Impl_T.h:
        * tao/Any_Dual_Impl_T.cpp:

          Fixed a bug in the extraction of exceptions. Thanks to
          Arturo Montes <mitosys@colomsat.net.co> for reporting the
          problem in the DII version of Param_Test::test_exception's
          mishandling of CORBA::UnknownUserException.

Thu Jul 24 11:36:36 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosTrading.idl: Thanks to Sebastien Lalonde
          <SLalonde@interstarinc.com> for reporting that the IDL is not
          spec compatible. The IDL should now be spec compliant.

Thu Jul 24 11:09:52 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Exception.h:
        * tao/Exception.cpp:

          Reverted the previous changes to these files. They were
          somehow causing exceptions thrown in the servant to
          bypass the catch block in
          TAO_ServantBase::synchronous_upcall_dispatch and instead be
          caught in TAO_GIOP_Message_Base::process_request, where they
          were incorrectly handled.

Thu Jul 24 08:27:07 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * README:

          Reverted accidental changes. Thanks to Johnny Willemsen for
          pointing this out.

Thu Jul 24 03:03:20 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        Two example schedulers were plugged into the Dynamic Scheduling
        framework to illustrate the pluggable scheduler concept of the
        framework. The two schedulers are Fixed_Priority_Scheduler and
        Most Important First (MIF) Scheduler.

        Fixed Priority Scheduler
        ------------------------

        * examples/RTScheduling/FP_Scheduling.pidl:
        * examples/RTScheduling/FP_SchedulingC.h:
        * examples/RTScheduling/FP_SchedulingC.cpp:
        * examples/RTScheduling/FP_SchedulingC.i:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_DT_Creator.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_DT_Creator.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile:
        * examples/RTScheduling/Fixed_Priority_Scheduler/README:
        * examples/RTScheduling/Fixed_Priority_Scheduler/fp_dt_creator_export.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/svc.conf.client:
        * examples/RTScheduling/Fixed_Priority_Scheduler/svc.conf.server:

        In this experiment we show how dynamic scheduling is done using
        the Dynamic Scheduling framework with the Fixed Priority Scheduler
        as the pluggable scheduler.

        This scheduler uses the OS scheduler to schedule the Distributable
        Threads (DTs) in the system. The DTs are scheduled according to
        their importance. The scheduler maps the importance of the DT to
        native thread priorities so the OS scheduler can schedule the
        DTs. At any given instance the DT of highest priority is running
        on a given host.


        MIF Scheduler
        --------------

        * examples/RTScheduling/MIF_Scheduling.pidl:
        * examples/RTScheduling/MIF_SchedulingC.h:
        * examples/RTScheduling/MIF_SchedulingC.cpp:
        * examples/RTScheduling/MIF_SchedulingC.i:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.cpp:
        * examples/RTScheduling/MIF_Scheduler/test.cpp:
        * examples/RTScheduling/MIF_Scheduler/test.h:
        * examples/RTScheduling/MIF_Scheduler/Makefile:
        * examples/RTScheduling/MIF_Scheduler/README:
        * examples/RTScheduling/MIF_Scheduler/mif_dt_creator_export.h:
        * examples/RTScheduling/MIF_Scheduler/svc.conf.client:
        * examples/RTScheduling/MIF_Scheduler/svc.conf.server:

        In this experiment we show how dynamic scheduling is done using
        the Dynamic Scheduling framework with the MIF Scheduler as the
        pluggable scheduler.

        This scheduler manages a ready queue of Distributable Threads
        (DTs) ordered by their importance and suspended on a condition
        variable. AT any given time the scheduler dequeues the DT at the
        head of the queue, that corresponds to the most important thread,
        and signals the thread to activate it. The service context is used
        to send the importance and GUID of the DT across hosts it spans so
        the DT can be scheduled accordingly on the remote host. At any
        given instance the DT of highest priority is running on a given
        host.

        Common Files
        ------------

        * examples/RTScheduling/Job.idl:
        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/Job_i.h:
        * examples/RTScheduling/DT_Creator.cpp:
        * examples/RTScheduling/DT_Creator.h:
        * examples/RTScheduling/Synch.idl:
        * examples/RTScheduling/Synch_i.cpp:
        * examples/RTScheduling/Synch_i.h:
        * examples/RTScheduling/Task_Stats.cpp:
        * examples/RTScheduling/Task_Stats.h:
        * examples/RTScheduling/Task_Stats.inl:
        * examples/RTScheduling/Thread_Task.cpp:
        * examples/RTScheduling/Thread_Task.h:
        * examples/RTScheduling/POA_Holder.h:
        * examples/RTScheduling/POA_Holder.cpp:
        * examples/RTScheduling/Starter.h:
        * examples/RTScheduling/Starter.cpp:
        * examples/RTScheduling/Makefile:
        * examples/RTScheduling/README:


Wed Jul 23 14:45:32 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/Object_Adapter.cpp (open):
        * tao/PortableServer/POA.cpp (TAO_POA, create_POA_i):
          (establish_components):

          Re-applied Carlos' fix for a deadlock in the IORInterceptor
          support code.  It now works due to some corrections made by
          Irfan.  [Bug 1414]

        * tao/RTScheduling/Request_Interceptor.cpp (receive_request):

          Fixed a memory leak.

          Fixed emulated exception usage.

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp (operator>>):

          Fixed format specifier mismatch warning in fscanf() call.  The
          data being scanned is an "unsigned int".  As such, the format
          specifier should be "%u", not "%d".

Wed Jul 23 16:25:52 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/examples/RtEC/Kokyu/Makefile:

          Modified Makefile to add the RTKokyuEvent library to the
          list of libraries.

        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:

          Removed the capability to run in config mode. Running in config
          mode used to generate a Schedule.h file, which needs to be
          included and compiled to enable running in "non-config"
          mode. After these changes, the scheduler regenerates the
          schedule on each run (based on the RT_Infos registered with it)
          and the EC_Kokyu dispatcher gets the schedule info dynamically
          from the scheduler and sets up the dispatch lanes.

Wed Jul 23 16:18:38 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * README:

          Reverted accidental changes. Thanks to Johnny Willemsen for
          pointing this out.

Wed Jul 23 15:26:41 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tests/RTScheduling/DT_Spawn/test.cpp (main): Used ACE_TRY_EX
          macro because of nested pseudo-try blocks.  This should fix
          compilation problems on non-exception builds.

        * tests/RTScheduling/Scheduler.h (CTOR): Fixed signature so that
          it's consistent with non-exception builds.

        * tests/RTScheduling/DT_Spawn/Thread_Action.h (_cxx_do):

          Changed to use proper ACE_CHECK macro rather than
          ACE_TRY_CHECK.  This should get rid of compilation problems on
          non-exception builds.

Wed Jul 23 19:35:27 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
          Changed dtor to use ACE_SOCK_Dgram_Mcast::leave() instead of
          ACE_SOCK_Dgram_Mcast::unsubscribe(), which gets rid of a
          warning.  Thanks to Serkan Unsal <serkan_u2000@yahoo.com> for
          reporting the problem.

Wed Jul 23 18:40:00 UTC 2003  Gautam Thaker  <gthaker@atl.lmco.com>

        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.h:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Profile.cpp:
        * tao/Strategies/SCIOP_Transport.cpp:

          Please send any questions or comments about this ChangeLog
          entry to jcohen@atl.lmco.com.

          Corrected interface related build problems caused by changes
          to some of the abstract protocol classes that have occurred
          over the last two months.  Future problems should be more easily
          observed in the RH9_SCTP scoreboard.

Wed Jul 23 18:03:21 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/ast/ast_attribute.cpp:
        * TAO_IDL/ast/ast_component.cpp:
        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_eventtype.cpp:
        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_factory.cpp:
        * TAO_IDL/ast/ast_home.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_operation.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_identifier.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/util/utl_string.cpp:
        * docs/tutorials/Quoter/AMI/Handler_i.cpp:
        * docs/tutorials/Quoter/AMI/client.cpp:
        * docs/tutorials/Quoter/AMI/server.cpp:
        * docs/tutorials/Quoter/Event_Service/Stock_Consumer.cpp:
        * docs/tutorials/Quoter/Event_Service/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/Event_Service/client.cpp:
        * docs/tutorials/Quoter/Event_Service/server.cpp:
        * docs/tutorials/Quoter/Naming_Service/client.cpp:
        * docs/tutorials/Quoter/Naming_Service/server.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/Handler_i.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/client.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/server.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_Consumer.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_Factory_i.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/client.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/server.cpp:
        * docs/tutorials/Quoter/Simple/Client/client.cpp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/client.cpp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/server.cpp:
        * docs/tutorials/Quoter/Simple/ImprovedServer/server.cpp:
        * docs/tutorials/Quoter/Simple/Persistent/client.cpp:
        * docs/tutorials/Quoter/Simple/Persistent/server.cpp:
        * docs/tutorials/Quoter/Simple/Server/server.cpp:
        * examples/Simple/grid/Grid_Client_i.cpp:
        * examples/Simulator/Event_Supplier/Event_Con.cpp:
        * orbsvcs/IFR_Service/drv_preproc_ifr.cpp:
        * orbsvcs/IFR_Service/tao_ifr.cpp:
        * orbsvcs/PSS/Dump_Visitor.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * orbsvcs/tests/Interoperable_Naming/ncontextext_client_i.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tao/ORB_Core.cpp:
        * tests/Bug_1361_Regression/shutdown.cpp:
        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp:
        * tests/IDL_Test/main.cpp:
        * tests/MProfile/client.cpp:
        * tests/MT_BiDir/Sender_i.cpp:
          Added #include "ace/streams.h" due to refactoring in ACE that
          removed "ace/streams.h" from "ace/String_Base.cpp" which is a
          template file indirectly included in every file using
          ACE_[C|T|W]String, which turns out to most in TAO.  Thanks to
          Bala Natarajan <bala@dre.vanderbilt.edu> for motivating this
          change.

Wed Jul 23 09:04:06 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tao/Exception.h
        * tao/Exception.cpp

          Modified these two files based on the new C++ Language Mapping
          Specification (version 1.1) published on June 2003.

Wed Jul 23 10:37:19 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
          Added space and newline to the not supported option message

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.{h,cpp}:
          Splitted close_i() in two separate methods, one for the supplier
          proxy, one for the consumer proxies, just call the two new ones.
          Added a cleanup_consumer_proxies method that just removes the
          consumer proxies without disconnecting. Can be used in case
          consumer event channel doesn't exists anymore.
          Push the events to the consumer ec in a separate method and added
          exception handling around it.

Tue Jul 22 20:44:47 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile.RTKokyuEvent:

          Updated dependencies.

Tue Jul 22 18:57:59 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/TAO_Tests.dsw:

          Restored DOS style end-of-line markers.

Tue Jul 22 18:05:09 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/Connection_Failure/Connection_Failure.mpc:

          No need to include messaging.

Tue Jul 22 17:59:26 2003  Jaiganesh Balasubramanian  <jai@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Makefile:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Makefile.bor:

          Changed the files to assist in adding the test to check the infrastructure
          controlled membership of the Load Balancer.

Tue Jul 22 17:51:03 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/Collocation_Opportunities/Makefile:

          Updated dependencies.

Tue Jul 22 16:48:48 2003  Jaiganesh Balasubramanian <jai@dre.vanderbilt.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Map.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Map.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Struct.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Struct.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Infrastructure_Controlled.dsw:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/LB_server.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/LB_server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.bor:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Simple.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Simple.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Test.idl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/client.bor:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/client.dsp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.bor:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/server.dsp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Makefile:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Makefile.bor:

          Added New directory to test the infrastructure controlled membership of the Load
          balancer

Tue Jul 22 17:36:29 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/PortableServer/Object_Adapter (get_collocated_servant):

          Stub parameter no longer needed.

Tue Jul 22 16:57:06 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/PortableServer/Object_Adapter.cpp:

          - create_collocated_object() and initialize_collocated_object():
          These methods should create a collocated object irrespective of
          whether the servant is found or not.  The servant pointer is
          needed only with the DIRECT collocation option.  Otherwise, as
          long as we have an endpoint match, we should create a collocated
          object.

          This change is necessary since servants may show up after the
          object was created.  There is no point is making a remote object
          that will make a connection to the same process.  If the servant
          is truely not available, the POA will finally generate an
          OBJECT_NOT_FOUND exception when handling an upcall.

          - get_collocated_servant(): The servant ORB was only getting set
          when the servant was found.  We need to set it even when servant
          is not found.  Now this is done in create_collocated_object()
          and initialize_collocated_object().

        * tao/ORB_Core.cpp (create_object):

          Result from create_collocated_object() can be returned directly.

        * tao/PortableServer/Object_Adapter.cpp (previous):

          Returns the previous POA current implementation.

        * tests/Collocation_Opportunities:

          A test for making sure the ORB avails all collocation
          opportunities it is presented with.

          This test has three collocated objects.  The first object is
          collocated since the POA created this object and marked it
          collocated. In addition, endpoints in the object reference match
          the local endpoints and the servant is be available.

          The second object is collocated since the POA created this
          object and marked it collocated. In addition, endpoints in the
          object reference match the local endpoints even though the
          servant is not available at the time the object was created.

          The third object is collocated even though the collocated flag
          set by the POA was lost when the second object was converted
          into a string and then back. Endpoints in the object reference
          match the local endpoints even though the servant is not
          available at the time the object was created.

          This test checks for POA currents to see if an upcall was
          collocated or remote.  If remote, there will be only one POA
          current since the upcall will be handled by ORB Task thread.  We
          ensure that the main thread does not handle the upcall by
          setting the ORBClientConnectionHandler option to RW. If
          collocated, there will be a <previous> POA current since the
          first POA current would be setup with a call to the <base>
          servant.

          The following files were added:

          - tests/Collocation_Opportunities/Collocation_Opportunities.cpp
          - tests/Collocation_Opportunities/Collocation_Opportunities.dsp
          - tests/Collocation_Opportunities/Collocation_Opportunities.dsw
          - tests/Collocation_Opportunities/Collocation_Opportunities.mpc
          - tests/Collocation_Opportunities/Makefile
          - tests/Collocation_Opportunities/Makefile.bor
          - tests/Collocation_Opportunities/README
          - tests/Collocation_Opportunities/run_test.pl
          - tests/Collocation_Opportunities/svc.conf
          - tests/Collocation_Opportunities/test.idl

          The following files were modified:

          - tests/TAO_Tests.dsw
          - tests/Makefile
          - tests/Makefile.bor
          - tests/README
          - $ACE_ROOT/bin/tao_orb_tests.lst

          These changes fix bug 1535.  Thanks to Carlos for reporting this
          bug.

Tue Jul 22 16:57:06 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/PortableServer/POA.cpp (locate_servant_i): Initialize <cookie>
          to zero to avoid uninitialized memory read warnings.  Thanks to
          Martin Habets <mhabets@il0015mhabets1.ih.lucent.com> for
          pointing this out.

Tue Jul 22 14:07:36 2003  Bryan Thrall  <thrall@cs.wustl.edu>

        * orbsvcs/examples/RtEC/Kokyu/Consumer.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Consumer.h:
        * orbsvcs/examples/RtEC/Kokyu/EC_Schedule_Service.dsp:
        * orbsvcs/examples/RtEC/Kokyu/Makefile:
        * orbsvcs/examples/RtEC/Kokyu/README:
        * orbsvcs/examples/RtEC/Kokyu/Schedule.dsw:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Supplier.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Supplier.h:
        * orbsvcs/examples/RtEC/Kokyu/svc.conf:
        * orbsvcs/examples/RtEC/Kokyu/svc.conf.xml:

        Example to test new Event Channel with Kokyu dispatching.
        Merged orbsvcs/examples/RtEC/Kokyu/* from EC_Kokyu_0 branch.
        These files were reported merged earlier, but apparently the
        merge didn't stick. See ChangeLogs/ChangeLog-03b line 4873 for
        the original report:
        Tue Apr 22 19:33:31 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

Tue Jul 22 11:24:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Strategies/SHMIOP_Profile.cpp (parse_string_i): Fixed a cut
          an paste error that threw up undefined variable errors.

Tue Jul 22 11:29:47 2003  Irfan Pyarali  <irfan@oomworks.com>

        * orbsvcs/orbsvcs/Notify/RT_Builder.cpp:

          Added include for Object.h.

Tue Jul 22 09:31:34 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp (parse_string_i):  This
          methoid assumed that the port part of the ior is always an integer
          even though the comments suggested otherwise. This made it
          difficult to corbaloc in the following format

          -ORBInitRef NameService=corbaloc:iiop:NameService/NameService

          but the following worked

           -ORBEndPoint iiop://localhost:NameService

          if there is an entry for NameService in the network service
          database. Thanks to Charlie Spawar  Frasch
          <charlie.frasch@navy.mil> for detecting the problem and
          providing the patches.

          It would be really helpful if the port could be specified using
          a name in the network services database

Tue Jul 22 06:11:53 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Gateway_Sched.{h,cpp}:
          Updated this class with the changes of yesterday in the IIOP
          Gateway. This fixes the compile errors.

Tue Jul 22 06:05:31 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ReactorTask.h:
          Fixed compile error.

Tue Jul 22 03:35:52 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/examples/Notify/ThreadPool/Consumer.h:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.h:
        * orbsvcs/examples/Notify/ThreadPool/ORB_Objects.h:
        * orbsvcs/examples/Notify/ThreadPool/ORB_Run_Task.h:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.h:
          Fixed fuzz errors by adding "/**/" to the pre.h/post.h includes.

Mon Jul 21 22:57:54 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * CIAO/ciao/*.h:
        * CIAO/docs/templates/CIAO_Glue_Session_Template.h:
        * CIAO/examples/handcrafted/BasicSP/BasicSP_svnt.h:
        * CIAO/examples/handcrafted/BasicSP/BMClosedED/BMClosedED_svnt.h:
        * CIAO/examples/handcrafted/BasicSP/BMDevice/BMDevice_svnt.h:
        * CIAO/examples/handcrafted/BasicSP/BMDisplay/BMDisplay_svnt.h:
        * CIAO/examples/handcrafted/BasicSP/EC/EC_svnt.h:
        * CIAO/examples/handcrafted/Display/HUDisplay_svnt.h:
        * CIAO/examples/handcrafted/Display/GPS/GPS_svnt.h:
        * CIAO/examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.h:
        * CIAO/examples/handcrafted/Display/RateGen/RateGen_svnt.h:
        * CIAO/tools/Assembly_Deployer/*.h:
        * CIAO/tools/Daemon/*.h:
        * CIAO/tools/Simple_Component_Server/Simple_Server_i.h:
        * CIAO/tools/XML_Helpers/Cascadable_DocHandler.h:
        * examples/AMH/Sink_Server/AMH_Servant.h:
        * examples/AMH/Sink_Server/Base_Server.h:
        * examples/Content_Server/AMI_Observer/Push_Iterator_Factory_i.h:
        * orbsvcs/IFR_Service/ifr_visitor_macro.h:
        * orbsvcs/ImplRepo_Service/*.h:
        * orbsvcs/LoadBalancer/Push_Handler.h:
        * orbsvcs/PSS/*.h:
        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/*.h:
        * orbsvcs/examples/Notify/Lanes/*.h:
        * orbsvcs/examples/PSS/*.h:
        * orbsvcs/examples/RtEC/MCast/AddrServer.h:
        * orbsvcs/orbsvcs/*.h:
        * orbsvcs/orbsvcs/AV/*.h:
        * orbsvcs/orbsvcs/Concurrency/*.h:
        * orbsvcs/orbsvcs/CosEvent/*.h:
        * orbsvcs/orbsvcs/ETCL/ETCL_Interpreter.h:
        * orbsvcs/orbsvcs/FaultTolerance/:
        * orbsvcs/orbsvcs/IFRService/*.h:
        * orbsvcs/orbsvcs/LoadBalancing/*.h:
        * orbsvcs/orbsvcs/Log/*.h:
        * orbsvcs/orbsvcs/Naming/*.h:
        * orbsvcs/orbsvcs/Notify/*.h:
        * orbsvcs/orbsvcs/Notify/Any/*,h:
        * orbsvcs/orbsvcs/Notify/Sequence/*.h:
        * orbsvcs/orbsvcs/Notify/Structured/*.h:
        * orbsvcs/orbsvcs/PortableGroup/*.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/SSLIOP/*.h:
        * orbsvcs/orbsvcs/Sched/*.h:
        * orbsvcs/orbsvcs/Security/*.h:
        * orbsvcs/orbsvcs/Time/*.h:
        * orbsvcs/orbsvcs/Trader/*.h:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Roundtrip.h:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/*.h:
        * orbsvcs/performance-tests/RTEvent/lib/*.h:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/TimeStamp.h:
        * orbsvcs/tests/EC_MT_Mcast/AddrServer.h:
        * orbsvcs/tests/FaultTolerance/IOGR/Client_i.h:
        * orbsvcs/tests/Miop/McastHello/McastHello.h:
        * orbsvcs/tests/Notify/RT_lib/*.h:
        * orbsvcs/tests/Notify/Test_Filter/*.h:
        * orbsvcs/tests/Notify/lib/*.h:
        * orbsvcs/tests/Security/MT_IIOP_SSL/*.h:
        * orbsvcs/tests/Security/MT_SSLIOP/*.h:
        * performance-tests/Latency/AMH/Single_Threaded/Roundtrip.h:
        * performance-tests/Latency/*.h:
        * performance-tests/Latency/DII/Roundtrip.h:
        * performance-tests/Latency/DSI/Roundtrip.h:
        * performance-tests/Latency/Deferred/Roundtrip.h:
        * performance-tests/Latency/Single_Threaded/Roundtrip.h:
        * performance-tests/Latency/Thread_Per_Connection/*.h:
        * performance-tests/Latency/Thread_Pool/*.h:
        * performance-tests/Memory/IORsize/*.h:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.h:
        * performance-tests/POA/Implicit_Activation/*.h:
        * performance-tests/Sequence_Latency/AMH/Single_Threaded/Roundtrip.h:
        * performance-tests/Sequence_Latency/AMI/*.h:
        * performance-tests/Sequence_Latency/DII/Roundtrip.h:
        * performance-tests/Sequence_Latency/DSI/Roundtrip.h:
        * performance-tests/Sequence_Latency/Deferred/Roundtrip.h:
        * performance-tests/Sequence_Latency/Single_Threaded/Roundtrip.h:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/*.h:
        * performance-tests/Sequence_Latency/Thread_Pool/*.h:
        * performance-tests/Throughput/*.h:
        * tao/*.h:
        * tao/BiDir_GIOP/*.h:
        * tao/Domain/*.h:
        * tao/DynamicAny/*.h:
        * tao/DynamicInterface/*.h:
        * tao/IFR_Client/*.h:
        * tao/IORInterceptor/*.h:
        * tao/IORManipulation/*.h:
        * tao/IORTable/*.h:
        * tao/Messaging/*.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
        * tao/PortableServer/*.h:
        * tao/RTCORBA/*.h:
        * tao/RTPortableServer/*.h:
        * tao/RTScheduling/*.h:
        * tao/SmartProxies/Smart_Proxies.h:
        * tao/Strategies/*.h:
        * tao/TypeCodeFactory/*.h:
        * tao/Utils/*.h:
        * tao/Valuetype/*.h:
        * tests/AMI_Buffering/*.h:
        * tests/Big_Oneways/*.h:
        * tests/Big_Reply/*.h:
        * tests/Big_Request_Muxing/*.h:
        * tests/Big_Twoways/*.h:
        * tests/Blocking_Sync_None/Blocking_Sync_None.h:
        * tests/Bug_1020_Basic_Regression/*.h:
        * tests/Bug_1020_Regression/Server_Task.h:
        * tests/Bug_1269_Regression/Server_Timer.h:
        * tests/Bug_1270_Regression/Server_Timer.h:
        * tests/Bug_1361_Regression/Server_Timer.h:
        * tests/Bug_1482_Regression/*.h:
        * tests/Bug_1551_Regression/*.h:
        * tests/Cache_Growth_Test/Hello.h:
        * tests/Client_Leaks/*.h:
        * tests/CodeSets/libs/IBM1047_ISO8859/*.h:
        * tests/Collocation_Tests/*.h:
        * tests/Connect_Strategy_Test/Hello.h:
        * tests/Connection_Purging/test_i.h:
        * tests/Crash_On_Write/*.h:
        * tests/Crashed_Callback/*.h:
        * tests/DLL_ORB/*.h:
        * tests/Hello/Hello.h:
        * tests/MT_BiDir/*.h:
        * tests/MT_Timeout/*.h:
        * tests/Muxing/*.h:
        * tests/ORB_shutdown/Foo_Bar.h:
        * tests/Oneway_Buffering/*.h:
        * tests/Oneways_Invoking_Twoways/*.h:
        * tests/Portable_Interceptors/AMI/*.h:
        * tests/Portable_Interceptors/Benchmark/*.h:
        * tests/Portable_Interceptors/Dynamic/*.h:
        * tests/Portable_Interceptors/ForwardRequest/*.h:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/*.h:
        * tests/Portable_Interceptors/Service_Context_Manipulation/*.h:
        * tests/RTCORBA/Client_Propagated/Client_ORBInitializer.h:
        * tests/RTCORBA/Diffserv/Custom_Network_Priority_Mapping.h:
        * tests/Reliable_Oneways/*.h:
        * tests/Server_Connection_Purging/Test_i.h:
        * tests/Server_Leaks/Ping_Service.h:
        * tests/Stack_Recursion/*.h:
          Added comment that adding "/**/" between the #include and the
          filenames in order to improve doxygen documentation.

Mon Jul 21 15:41:09 2003  Pradeep Gore  <pradeep@oomworks.com>

        Added an example to show how to use ThreadPools with
        RT-Notification.

        * orbsvcs/examples/Notify/ThreadPool/Consumer.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.dsp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.h:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.h:
        * orbsvcs/examples/Notify/ThreadPool/Makefile:
        * orbsvcs/examples/Notify/ThreadPool/ORB_Objects.cpp:
        * orbsvcs/examples/Notify/ThreadPool/ORB_Objects.h:
        * orbsvcs/examples/Notify/ThreadPool/ORB_Run_Task.cpp:
        * orbsvcs/examples/Notify/ThreadPool/ORB_Run_Task.h:
        * orbsvcs/examples/Notify/ThreadPool/README:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.dsp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.h:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.h:
        * orbsvcs/examples/Notify/ThreadPool/ThreadPool.dsp:
        * orbsvcs/examples/Notify/ThreadPool/ThreadPool.mpc:
        * orbsvcs/examples/Notify/ThreadPool/client.conf:
        * orbsvcs/examples/Notify/ThreadPool/notify.conf:
        * orbsvcs/examples/Notify/ThreadPool/run_test.pl:

          Added. See README for details.

        * orbsvcs/examples/Notify/Notify_Examples.dsw:
        * orbsvcs/examples/Notify/Makefile:

          Added ThreadPool example

        * orbsvcs/orbsvcs/Event_Forwarder.idl:

          Make all the forwarding methods as oneways.
          This change is due to the following reason:
          When the event receiving thread makes a two-way invocation to
          transfer the event propagation to the dispatching thread, the
          receving thread gets blocked waiting for the 2-way to complete,
          essentially making the event propagation synchronous. By making
          this method a oneway, the receving thread can make progress on
          other events entering the system while the dispatching thread
          continues with its dispatching efforts.

        * orbsvcs/orbsvcs/Notify/POA_Helper.cpp:
        * orbsvcs/orbsvcs/Notify/POA_Helper.h:

          Moved the <id_factory_> helper member to the
          TAO_Notify_POA_Helper::activate method scope as a static
          variable. This change allows a Notification wide unique ID to be
          assigned to each object created. This solves the pesky problem
          of say e.g. 2 different POA's in the Notification generating the same
          ID for its Proxy Objects. Though this is consistent with the
          spec., in practice it is more convinient for each and every object
          to have a unique id.

        * orbsvcs/orbsvcs/Notify/Find_Worker_T.h:
          Include "Object.h"

Mon Jul 21 16:28:46 2003 Stephen Torri  <storri@cs.wustl.edu>

        * TAOACE.dsw:

          Added Metrics.dsp to workspace.

        * orbsvcs/orbsvcs/Metrics.dsp:
        * orbsvcs/orbsvcs/Metrics/Metrics.dsp:
          Moved project file from Metrics subdirectory to match
          orbsvcs file convention in TAO/orbsvcs/orbsvcs

        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_Logger.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_Logger.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.cpp:

          Hide class behind #ifdef statements if the configuration for
          ACE lacks ACE_METRICS_COLLECTION and ACE_COMPILE_TIMEPORBES


Mon Jul 21 16:24:07 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/append.cpp:

          Applied a fix for unions with an enum discriminator similar to
          what is used for the same case in skip.cpp. Thanks to
          Sunil Rottoo <srottoo@adacelcanada.com> for pointing out the
          problem and suggesting the fix.

Mon Jul 21 15:58:39 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_generator.cpp:
        * TAO_IDL/be/be_expression.cpp:
        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/be_include/be_expression.h:
        * TAO_IDL/be_include/be_generator.h:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/y.tab.h:
        * TAO_IDL/include/ast_expression.h:
        * TAO_IDL/include/ast_generator.h:

          Fixed a bug where unsigned long long constants were truncated if
          the literal rhs was greater than ULONG_MAX. Thanks to Scott
          Clarke <sclarke@ideorlando.org>for reporting the bug.

Mon Jul 21 19:33:24 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/orbsvcs.html:
          Updated description of tests directories of the RTEvent service

        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/ReactorTask.h:
        * orbsvcs/orbsvcs/Event/Timer_Module.h:
          Doxygen documentation update

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.{h,cpp}
          The gateway used the variable names local ec and remote ec but this
          makes it very confusing. With local ec the ec that consumes events
          is meant, with remote ec the ec that supplies the events. Local and
          remote where chosen because normally the gateway is located on the
          host where the consumer ec is located. We are working on a solution
          where the gateway is located on the host where the supplier ec is
          located, so having local and remote makes it very confusing.
          Therefor changed local_ec in consumer_ec and remote_ec in
          supplier_ec. This makes it easier to implement and understand the
          additions we will adding the next few weeks.

        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.{h,cpp,i}:
          Added a reactive observer strategy. The existing basic strategy
          always just tries each observer and in case of an exception it just
          continues with the next observer, but with the next update the
          observer that caused the exception is just tried again. The reactive
          observer strategy removes an observer that causes an excepion from
          its observer map, this is just like the consumer/supplier reactive
          controls work. In this way an observer that is crashed or
          unreachable doesn't slow down the EC anymore. This can be configures
          using "-ECObserver reactive" svc.conf file.

        * docs/ec_options:
          Described new reactive observer strategy

Mon Jul 21 14:09:27 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Domain/DomainS.cpp:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/PolicyS.cpp:

          Modified these files by hand to reflect recent changes to gperf
          and to skeleton side class inheritance generation for gcc 3.3.

Mon Jul 21 14:07:09 2003  Aniruddha Gokhale  <gokhale@doc.dre.vanderbilt.edu>

        * tao/Makefile.tao:
          tao/BiDir_GIOP/Makefile:
          tao/Domain/Makefile:
          tao/DynamicAny/Makefile:
          tao/DynamicInterface/Makefile:
          tao/IFR_Client/Makefile:
          tao/IORInterceptor/Makefile:
          tao/IORManipulation/Makefile:
          tao/IORTable/Makefile:
          tao/Messaging/Makefile:
          tao/ObjRefTemplate/Makefile:
          tao/PortableServer/Makefile:
          tao/RTCORBA/Makefile:
          tao/RTPortableServer/Makefile:
          tao/RTScheduling/Makefile:
          tao/SmartProxies/Makefile:
          tao/Strategies/Makefile:
          tao/TypeCodeFactory/Makefile:
          tao/Utils/Makefile:
          tao/Valuetype/Makefile:

          Updated dependencies

Mon Jul 21 13:41:54 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tao/Makefile.bor:
        * tao/Makefile.tao:
        * tao/TAO.dsp:
        * tao/TAO_Static.dsp:

          Updated makefiles to include new files
          tao/IORInterceptor_Adapter_Factory.h and
          tao/IORInterceptor_Adapter_Factory.cpp.

Mon Jul 21 10:16:23 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/Makefile.EXE:

          Added an INSTALL value to put tao_idl in $ACE_ROOT/bin in order to
          be forward compatible with MPC.

Mon Jul 21 06:43:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/*.h:
          Added "/**/" between the #include and filename for pre.h and
          post.h so Doxygen won't include them in the file reference tree
          graphs.

Sun Jul 20 16:03:21 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/ORB_Core.cpp: Fixed compile errors that were caused from
          undefined environment variables.

Sun Jul 20 12:10:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
          Removed ACE_INLINE from struct Observer_Entry, this was a workaround
          for the GCC 2.7.x compiler and we don't support that version anymore.

        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.h:
          Doxygen improvement.

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
          Removed two explicit template instantiations that where also in
          ECG_Mcast_EC.cpp. This should fix the multiple definitions error in the
          VxWorks build.

Fri Jul 18 17:26:32 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tao/default_resource.cpp: As an experiment, change the typedef
          for LOCKED_ALLOCATOR from an ACE_Malloc<>-based allocator to use
          the ACE_New_Allocator, thus delegating all issues with regard to
          dynamic allocations to the underlying heap allocator.  In simple
          tests on Redhat 8.0/gcc 3.2-based systems, this resulted in
          smaller dynamic memory footprints.  If the change doesn't
          exhibit the same behavior on other platforms, I'll back this
          out.

Fri Jul 18 17:22:49 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tests/Bug_1551_Regression/Reply_Handler.h (Reply_Handler):

          Use TAO_SYNCH_MUTEX preprocessor macro rather than
          ACE_Thread_Mutex directly so that things build properly on
          single-threaded builds like Debian_SingleThreaded.

Fri Jul 18 15:58:20 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tao/tao.mpc:
        * tao/IORInterceptor/Makefile:
        * tao/IORInterceptor/Makefile.bor:
        * tao/IORInterceptor/TAO_IORInterceptor_Static.dsp:

        Added new IORInterceptor_Adapter_Factory files to makefiles.

Fri Jul 18 14:02:42 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tao/ORB_Core.cpp:

        Fixed parse error on line 2814 by replacing ACE_ENV_ARG_PARAMETER with
        ACE_ENV_SINGLE_ARG_PARAMETER.

Fri Jul 18 10:35:23 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tao/IORInterceptor_Adapter.cpp:
        * tao/IORInterceptor_Adapter.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/IORInterceptor/TAO_IORInterceptor.dsp:

        Added Files:
        * tao/IORInterceptor_Adapter_Factory.cpp:
        * tao/IORInterceptor_Adapter_Factory.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.h:

        Modified ORB_Core to create a new IORInterceptor_Adapter when
        needed instead of obtaining a reference to a global
        IORInterceptor_Adapter. This is accomplished via the new
        IORInterceptor_Adapter_Factory class. This change was made so that
        processes with multiple ORBs can have different IOR interceptors
        registered with each ORB (fixes Bugzilla [1548]).

Fri Jul 18 15:29:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.h:
        * orbsvcs/tests/Event/Basic/BCast.h:
        * orbsvcs/tests/Event/Basic/Control.h:
        * orbsvcs/tests/Event/Basic/MT_Disconnect.h:
        * orbsvcs/tests/Event/Basic/Observer.h:
        * orbsvcs/tests/Event/Basic/Random.h:
        * orbsvcs/tests/Event/Basic/Reconnect.h:
        * orbsvcs/tests/Event/Basic/Schedule.h:
        * orbsvcs/tests/Event/Basic/Shutdown.h:
          Converted documentation to doxygen style

Fri Jul 18 10:18:41 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Client.dsp:
        * tests/OBV/Supports/Server.dsp:
        * tests/OBV/Supports/README:
        * tests/OBV/Supports/Supports_Test.idl:
        * tests/OBV/Supports/Supports_Test_impl.h:
        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/Client/client.cpp:
        * tests/OBV/Supports/Server/server.cpp:
        * tests/OBV/Supports/Server/svc.conf:
        * tests/OBV/Supports/run_test.pl:

        Enhanced Supports example to test valuetype functionality in
        a multi-threaded environment. Added a run_test.pl script to run
        the tests conveniently.

        * docs/releasenotes/OBV.html:

        Updated documentation to reflect recent additions and corrections
        to TAO's OBV support, most importantly 1) changes that ensure
        the correct factory types are generated in all cases, and 2) changes
        that allow valuetypes to correctly support concrete interfaces.

        * TAO_IDL/be/be_Visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_Visitor_valuetype/valuetype_obv_ch.cpp:
        * TAO_IDL/be/be_Visitor_valuetype/valuetype_obv_cs.cpp:
        * TAO_IDL/be/be_Visitor_valuetype/valuetype_init_ch.cpp:

        Changed constructors for valuetype factories to be public or
        protected in the right situations. Added protected constructor
        and destructor for abstract OBV_ classes.

        * TAO_IDL/be/be_Visitor_valuetype/arglist.cpp:

        Fixed indentation problem in generated code.

Fri Jul 18 00:42:12 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tests/RTScheduling/VoidData/test_client.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Scheduler.cpp:

          Fixed all manner of wrong usage of ACE_ENV_* related macros.
          I may not have caught them all.  This should address problems in
          the RH71_Explicit_Templates build specifically, and any build
          that doesn't have native exceptions turned on.

Thu Jul 17 13:14:46 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tests/Bug_1551_Regression/Reply_Handler.h
        * tests/Bug_1551_Regression/Hello.h

          Fixed the Debian_SingleThreaded_Build error by adding
          the scope name when defining the variable "counter_".

Wed Jul 16 16:28:47 2003  Pradeep Gore  <pradeep@oomworks.com>

        Fix for the Discarding test failing:

        * orbsvcs/orbsvcs/Notify/Property_T.h:
        * orbsvcs/orbsvcs/Notify/Property_T.inl:

          Removed the = operator that did not set the <valid_> flag when
          assigning to the TAO_Notify_PropertyBase_T.
          This caused a problem when the pacing interval was assigned in
          the SequenceProxySupplier because the flag was not copied in
          the = operator.

        * orbsvcs/orbsvcs/Notify/QoSProperties.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.cpp:

          Removed assignment to properties via .value().

        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.cpp:

          Changed the number of events sent to 20 instead of 96 otherwise
          the test runs for too long and the consumer times out in the run_test.pl.
          Now the supplier sends 2 event batches of 10 events each.
          The consumer max batch size is 5 so it should receive a max of 4
          batches. Also reduced the pacing interval to 3s.

        * orbsvcs/tests/Notify/Basic/Sequence.cpp:

          Added useful debug messages.

Wed Jul 16 14:13:24 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tests/RTScheduling/Scheduler.cpp:

          Removed unused variable server_guid_counter.

        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:

          Replaced ACE_Thread_Mutex with TAO_SYNCH_MUTEX in the
          declaration of guid_index.

          The above changes should fix compile errors on Debian Single
          Threaded build.


Wed Jul 16 11:07:26 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tao/Muxed_TMS.cpp
          Removed an unused variable trying to get rid of the
          compile warning message.

Wed Jul 16 10:17:57 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tests/Makefile
        * tests/TAO_Tests.dsw
          Added Bug_1551_Regression directory into daily builds.

Wed Jul 16 13:06:03 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
          When updating the observers, when one fails, then just go on
          further with the other observers instead of just stopping
          with updating them all.

        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
          Small doxygen improvements

Wed Jul 16 12:15:34 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/ast/ast_argument.cpp:
        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_component_fwd.cpp:
        * TAO_IDL/ast/ast_eventtype_fwd.cpp:
        * TAO_IDL/ast/ast_field.cpp:
        * TAO_IDL/ast/ast_interface_fwd.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:
        * TAO_IDL/ast/ast_union_fwd.cpp:
        * TAO_IDL/ast/ast_union_label.cpp:
        * TAO_IDL/ast/ast_valuetype_fwd.cpp:
        * TAO_IDL/util/utl_idlist.cpp:
        * TAO_IDL/util/utl_indenter.cpp:
        * TAO_IDL/util/utl_strlist.cpp:
          Added #include "ace/streams.h" to coincide with changing
          ace/OS_Log_Msg_Attributes.h to include "ace/iosfwd.h" instead of
          "ace/streams.h".

Wed Jul 16 08:34:01 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.cpp:
          Fixed incorrect checking of ECScheduling option, priority was
          checked twice, the first check for priority should be group.
          Thanks to Kees van Marle <kvmarle@remedy.nl> for reporting this

Wed Jul 16 00:33:10 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/TAO_Internal.cpp:

          Called the RTScheduler_Loader::init () method to initialize
          RTScheduler framework.

        * tao/RTScheduling/Current.cpp:

          Added new debug statements and ensured the other debug
          statements are printed when debug level > 0.

          In delete_all_currents method initialized the
          tss->rtscheduler_current_impl_ to
          tss->rtscheduler_previous_current_impl_ to make sure that tss is
          restored to the state of the previous DT that was serviced by
          the same native thread.

        * tao/RTScheduling/RTScheduling_Interceptor:

          Added a check to ensure that the scheduler returns a non-null
          Guid when a DT request is received.

          Ensured that the debug statements are printed when debug level >
          0.

Wed Jul 16 00:03:40 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        Tests for the Dynamic Scheduling framework

        * tests/RTScheduling/Scheduler.h:
        * tests/RTScheduling/Scheduler.cpp:

          The scheduler used in the following tests.

        VoidData
        --------

        * tests/RTScheduling/VoidData/test.pidl:
        * tests/RTScheduling/VoidData/testC.h:
        * tests/RTScheduling/VoidData/testC.cpp:
        * tests/RTScheduling/VoidData/testC.i:
        * tests/RTScheduling/VoidData/test.h:
        * tests/RTScheduling/VoidData/test_client.cpp:
        * tests/RTScheduling/VoidData/README:
        * tests/RTScheduling/VoidData/Makefile:

          A simple test to test the passing of CORBA::VoidData to a
          method.

        Current
        -------

        * tests/RTScheduling/Current/test.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Current/Thread_Task.h:
        * tests/RTScheduling/Current/Makefile:
        * tests/RTScheduling/Current/README:

          This is a test of the various operations in the
          RTScheduling::Current Interface used to create and manage
          DTs. The following are the operations and cases tested:

          1. Out of context end_scheduling_segment () invocation.
          2. Out of context update_scheduling_segment () invocation.
          3. Creation of DT's consisting of nested scheduling segments
             using begin_scheduling_segment() and end_scheduling_segment()
             operations.
          4. Retreiving DT Guid with Current::id () method.
          5. Listing the names of the scheduling segments using
             current_scheduling_segment_names ().

        DT_Spawn
        --------

        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/DT_Spawn/Makefile:
        * tests/RTScheduling/DT_Spawn/README:

          This is a test for forking new DTs from existing DTs using
          Current::spawn (). A local DT is created with
          Current::begin_scheduling_segment() and
          Current::end_scheduling_segment (). A new DT is spawned within
          the context of the DT created. The Thread_Action::do () method
          is called when the spawned DT is activated. This method provides
          a point of entry for the spawned DT. This test also shows that
          the DT spawn should be made only within the context of another
          DT.


        Thread_Cancel
        -------------

        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.h:
        * tests/RTScheduling/Thread_Cancel/README:
        * tests/RTScheduling/Thread_Cancel/Makefile:

          This test illustrates the DT cancel mechanism when the DT's are
          local (ie. DT's do not span multiple nodes). A reference to each
          DT is stored. These references are then used to cancel the
          corresponding DT. When the DT is cancelled it throws the
          CORBA::THREAD_CANCELLED exception.

        Scheduling_Interceptor
        ----------------------

        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test.idl:
        * tests/RTScheduling/Scheduling_Interceptor/Makefile:
        * tests/RTScheduling/Scheduling_Interceptor/README:

          This test creates a distributed DT ie. a DT that spans multiple
          hosts/processes. In this test they span two hosts/processes. The
          DT makes a one-way and a two-way invocations. In a one-way
          invocation a new DT is created to continue servicing the
          request. In the case of a two-way invocation the same DT
          executes on the second host/process.

          The DT information is propagated across hosts/processes via the
          service contexts.

          This test also illustrates the propagation of the
          CORBA::THREAD_CANCELLED exception to the point of origin of the
          DT when it is cancelled on a remote host/process it is currently
          executing in.

        * tests/Makefile:
        * tests/RTScheduling/Makefile:

          Corresponding Makefiles to compile all the RTScheduling tests.

Tue Jul 15 16:12:56 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated_RTCORBA/colocated.conf:

          Fixed typos in the scripts.

Tue Jul 15 14:49:13 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tests/Makefile.bor
          Added the directory Bug_1551_Regression into build directories.

Tue Jul 15 19:28:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.cpp:
          Splitted the narrow in two steps, some compilers don't like it doing
          T::_obj_type_::_narrow(). Thanks to Chris Cleeland for helping with
          this.

Tue Jul 15 15:44:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/releasenotes/ec.html:
          Corrected link to bugzilla.

Tue Jul 15 10:31:29 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tests/Bug_1551_Regression/*

          Bug regression test files for Bug 1551.

          This bug causes the ORB deadlock if one tries send messages
          while handling exceptions in AMI.

Tue Jul 15 10:18:07 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * tao/Transport.cpp (send_closed_connection_notification):
          Before closing the TMS, release the lock. Else the ORB would
          deadlock. This should also fix Bug_1482_Regression failures
          in our daily builds.

        * tao/Muxed_TMS.h:
        * tao/Muxed_TMS.cpp: Added a new method clear_cache () that
          takes care of cleaning up the dispatcher table. We now
          do the following during close_connection

          - Iterate through the dispatcher table by taking the
            elements and adding it to an unbounded array.

          - Unbind all the entries

          - Call close_connection on all of them.

          This prevents closed entries being left over in cache that
          which leads to crashes. Thanks to Balachandran Natarajan
          <bala@dre.vanderbilt.edu> for helping me out with
          this. Thanks to Carlos O'Ryan <coryan@atdesk.com> for
          reporting the bug.

Mon Jul 14 18:41:29 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify_Service.cpp:

          Fixed a typo in a debug message.

        * orbsvcs/tests/Notify/lib/Direct_Consumer.cpp:

          Removed unnecessary debug messages.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/relay.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/supplier.conf:

          Fixed this test to use Direct consumer instead of Relay. removed
          the relay.conf file as it is not required.

Mon Jul 14 14:35:00 2003  Justin Michel <michel_j@ociweb.com>

        * examples/RTCORBA/Activity/Makefile:
        * examples/RTCORBA/Activity/Makefile.Activity.bor:
        * examples/RTCORBA/Activity/Makefile.Activity_Lib.bor:
        * examples/RTCORBA/Activity/Makefile.bor:

          Reverted Makefiles back to the way they were a few weeks ago. Hopefully
        this will fix any lingering problems with this example.

        * orbsvcs/tests/Notify/Basic/Basic.mpc:

          Added missing projects to the mpc file.

Mon Jul 14 18:53:02 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Added some documentation of setting TAO_ROOT with Cygwin and MinGW

        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
          Moved TAO_EC_Gateway_IIOP to a separate file. This in preparation for
          several extensions to this class. TAO_EC_Gateway_IIOP::init now has a
          return value so that caller can check if init succeeded or not.

        * orbsvcs/orbsvcs/Makefile.RTEvent:
        * orbsvcs/orbsvcs/RTEvent.bor:
        * orbsvcs/orbsvcs/RTEvent.dsp:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent_Static.dsp:
          Updated these project files because of the change above

        * orbsvcs/performance-tests/RTEvent/lib/Peer_Base.cpp:
        * orbsvcs/tests/Event/Basic/Gateway.cpp:
        * orbsvcs/tests/Event/Basic/Observer.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_Sched.h:
          Updated these test because of the TAO_EC_Gateway_IIOP move.

        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierControl.h:

          Doxygen fixes.

        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.cpp:
          Improved debug message

        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.cpp:
          Fixed incorrect debug message.

        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.cpp:
          Cleanup the strategies in reverse order then created this because
          there are dependencies between the strategies. Thanks to
          Carlos O'Ryan <coryan@atdesk.com> for reporting this and making
          the patch, this fixes bugzilla [1549]

        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.cpp:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.i:
          Removed workaround with usage of TAO_Objref_Var::_T_obj_type

        * orbsvcs/tests/Bug_1393_Regression/Makefile:
        * orbsvcs/tests/Bug_1395_Regression/Makefile:
          Removed windows specific parts from this makefile. This is not
          needed and cause problems when using windows and the msys shell.
          This solves several compile problems in the MinGW build.

        * orbsvcs/tests/Notify/Basic/Makefile.bor:
          Added missing library to fix BCB6 Static link errors.

Mon Jul 14 14:21:46 2003  Pradeep Gore  <pradeep@oomworks.com>

        * docs/releasenotes/notify.html:
          Updated.

Mon Jul 14 12:55:13 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/Lanes/run_test.pl:
        * orbsvcs/tests/Notify/ThreadPool/run_test.pl:

          Use <Kill> instead of <Wait> to stop the "Still Running on
          exit.." error by perl.

        * orbsvcs/tests/Notify/RT_lib/RT_POA_Command.cpp:
        * orbsvcs/tests/Notify/lib/Options_Parser.cpp:
        * orbsvcs/tests/Notify/*.conf:

          Changed inconsistent use of "ThreadPoolLanes" string to the
          easily readable "Lanes".

        * orbsvcs/tests/Notify/lib/Driver.cpp:
        * orbsvcs/tests/Notify/lib/Driver.h:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/run_test.pl:

          Added the "-Skip_Priority_Levels_Check" option. We need some
          Notify tests to run regardless of the available priority levels.

Mon Jul 14 11:12:25 2003  Pradeep Gore  <pradeep@oomworks.com>

        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/test_i.cpp:

          Fixed incorrect ACE_TRY usage.

        * tests/RTCORBA/Priority_Inversion_With_Bands/README:

          Fixed minor typo in README and in ChangeLog dated Sat Jul 12 14:01:47 2003

Sat Jul 12 18:43:31 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp (svc):

          Improved output format.

Sat Jul 12 18:27:10 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp:

          Thread priority should be determined after the real-time thread
          has been spawned.

Sat Jul 12 17:43:36 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/RTCORBA/RT_Transport_Descriptor.cpp:

          Zero time value should be specified as ACE_Time_Value::zero and
          not 0.

        * tao/RTCORBA/RT_Transport_Descriptor_Property.h:

          Based class destructor should be virtual.

        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp:

          Fixed member initialization.

        * tao/RTCORBA/RT_Transport_Descriptor.cpp:

          Must add "tao/" in front of TAO include files.

        * tests/RTCORBA/Priority_Inversion_With_Bands/Makefile:
        * tao/RTCORBA/Makefile:

          Updated Makefile dependencies.

Sat Jul 12 17:31:20 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/RTSchedulerC.h:

          Forced the inclusion of RTScheduler.h file instead of directly
          including RTSchedulerC.h. This is to ensure RTScheduler is
          initialized when the application starts up.

        * tao/RTScheduling/RTScheduler_Loader.cpp:

          Added debug messages.

        * tao/RTScheduling/RTScheduler_Initializer.cpp:

          Removed unnecessary printf statement.

        * tao/RTScheduling/Request_Interceptor.cpp:

          Added a check to see if the service context received in a
          request is what was expected.

        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/RTSchedulerC.cpp:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/RTScheduling/Request_Interceptor.h:
        * tao/RTScheduling/RTScheduler_Manager.h:
        * tao/RTScheduling/Distributable_Thread.h:

          Included RTScheduler.h instead of RTSchedulerC.h.

Sat Jul 12 14:01:47 2003  Irfan Pyarali and Pradeep Gore <irfan@oomworks.com and pradeep@oomworks.com>

        * RTCORBA thread pools are assigned a single endpoint. When bands are
          configured, the TAO transport connection cache does not create
          separate connections for each band specified because it reads a
          single endpoint associated with the server object.

          This is fixed by extending the transport descriptor to be aware
          of bands. When the connection cache tries to look for an
          exisiting connection, we match the request against endpoint and
          band information.  Thus now, 2 bands to the same endpoint would
          create 2 seperate connections.

        * tao/RTCORBA/RT_Transport_Descriptor.h:
        * tao/RTCORBA/RT_Transport_Descriptor.cpp:
        * tao/RTCORBA/RT_Transport_Descriptor.inl:

          RT transport descriptor is a container for transport descriptor
          properties.

        * tao/RTCORBA/RT_Transport_Descriptor_Property.h:
        * tao/RTCORBA/RT_Transport_Descriptor_Property.cpp:
        * tao/RTCORBA/RT_Transport_Descriptor_Property.inl:

          Contains the
          TAO_RT_Transport_Descriptor_Banded_Connection_Property and
          TAO_RT_Transport_Descriptor_Private_Connection_Property classes
          that hold the bands and private connections specific data.

        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp (endpoint_from_profile):

          Modified this method to populate the RT_Transport_Descriptor
          with the endpoint, bands and/or private connection property.

        * tao/RTCORBA/Private_Transport_Descriptor.h:
        * tao/RTCORBA/Private_Transport_Descriptor.cpp:
        * tao/RTCORBA/Private_Transport_Descriptor.inl:

          Removed because obsolete.

        * tao/RTCORBA/TAO_RTCORBA.dsp:
        * tao/RTCORBA/TAO_RTCORBA_Static.dsp:
        * tao/RTCORBA/Makefile:
        * tao/RTCORBA/Makefile.bor:

          Update project and Makefiles.

        * tests/RTCORBA/Priority_Inversion_With_Bands:

          Added new test. This test check for priority inversion when
          using different RTCORBA configurations.  The following four
          configurations are tested:

          (a) Thread lanes without bands
          (b) Thread lanes with bands
          (c) Thread pool without bands
          (d) Thread pool with bands

          The server has a servant registered with a POA serviced by a
          thread pool without lanes and another servant registered with a
          POA serviced by a thread pool with lanes.  The thread pool with
          lanes has a low and a high priority lane.

          The client makes several oneway low priority invocations
          followed by several oneway high priority invocations.  Each
          invocation performs about 2 seconds of CPU bound work.  Priority
          inversion occurs if low priority invocations get processed
          before high priority invocations.

          (a) shows the best result of high priority requests getting
          serviced before low priority requests even though low priority
          requests were sent before high priority requests.  This is
          because low priority invocations are processed by the low
          priority lane and high priority invocations are processed by the
          high priority lane.  In addition, low priority requests are sent
          on a different connection than the high priority requests since
          each lane has a different endpoint.

          (b) does not improve on (a) since the requests are already sent
          on different connections.

          (c) shows priority inversion as low priority requests get
          processed before high priority requests.  This is because only
          one connection is used for both low and high priority requests.
          Therefore, the high priority requests are queued behind the low
          priority requests.

          (d) shows improvement on (c) since using bands allows the high
          priority requests to go on a different connection than the low
          priority requests.  However, priority inversion still exists
          since the server does not distinguish between the low priority
          connection and the high priority connection and therefore treats
          them equally.  Removing this priority inversion will require two
          improvements: (1) band information needs to be propagated to the
          server when a banded connection is established by the client;
          (2) server side dispatching needs to be based on the priority of
          the connections.

          See run_test.pl to see how to run this test.  The server
          static_threads should be set to the number of CPUs on the
          machine.

          Added the following files:

          - tests/RTCORBA/Priority_Inversion_With_Bands/Makefile
          - tests/RTCORBA/Priority_Inversion_With_Bands/Makefile.bor
          - tests/RTCORBA/Priority_Inversion_With_Bands/Priority_Inversion_With_Bands.dsw
          - tests/RTCORBA/Priority_Inversion_With_Bands/Priority_Inversion_With_Bands.mpc
          - tests/RTCORBA/Priority_Inversion_With_Bands/README
          - tests/RTCORBA/Priority_Inversion_With_Bands/client.bor
          - tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp
          - tests/RTCORBA/Priority_Inversion_With_Bands/client.dsp
          - tests/RTCORBA/Priority_Inversion_With_Bands/run_test.pl
          - tests/RTCORBA/Priority_Inversion_With_Bands/server.bor
          - tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp
          - tests/RTCORBA/Priority_Inversion_With_Bands/server.dsp
          - tests/RTCORBA/Priority_Inversion_With_Bands/svc.conf
          - tests/RTCORBA/Priority_Inversion_With_Bands/svc.conf.xml
          - tests/RTCORBA/Priority_Inversion_With_Bands/test.idl
          - tests/RTCORBA/Priority_Inversion_With_Bands/test_i.cpp
          - tests/RTCORBA/Priority_Inversion_With_Bands/test_i.h

          The following files were modified:

          - tao/RTCORBA/TAO_RTCORBA.dsp
          - tests/RTCORBA/Makefile
          - tests/RTCORBA/Makefile.bor
          - tests/RTCORBA/README
          - tests/RTCORBA/RTCORBA-test-configurations.xls
          - tests/RTCORBA/RTCORBA_tests.dsw
          - $ACE_ROOT/bin/tao_orb_tests.lst


Sat Jul 12 11:08:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_constant.cpp:

          To a previous fix to prevent a truncation error on MSVC when
          assigning a float constant from a literal in the constructor, added
          an additional check to make sure we are not assigning from
          another float constant, or from a literal decimal coerced to a
          float. Thanks to Erik Johannes <erik_posting_email@yahoo.com> for
          reporting the problem assigning one float constant to another.

Fri Jul 11 18:41:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any.h:
        * tao/Valuetype_Adapter.h:
        * tao/Valuetype/Valuetype_Adapter_Impl.cpp:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:

          Fixed a bug in the Any extraction operators that widen to Object,
          ValueBase and AbstractBase, which were failing when
          the Any contains an unknown IDL type. Thanks to Anand
          <anand@iCMGworld.com> for reporting the problem with
          widening to Object.

Fri Jul 11 16:23:05 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Strategies/DIOP_Acceptor.cpp (close):

          Method should return 0.

Fri Jul 11 01:08:41 2003  Irfan Pyarali  <irfan@oomworks.com>

        * orbsvcs/orbsvcs/AV/TCP.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:

          Added explicit template instantiation for ACE_Connector_Base.

Thu Jul 10 20:01:43 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Transport_Cache_Manager.cpp:

          Fixed template instantiation goofs.

Thu Jul 10 19:01:54 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/ORB_Core.cpp (lane_resources):

          This file got checked in by mistake.

Thu Jul 10 18:58:43 2003  Irfan Pyarali  <irfan@oomworks.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:

          - open_i() now transfers connection handler ownership to the
          Reactor after the handler successfully registers with the
          Reactor.

          - close() does nothing since the memory for the connection
          handler is automatically managed.

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:

          - Forgot to remove the assert from ~TAO_UIPMC_Transport().

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp (handle_close):
        * tao/Strategies/DIOP_Connection_Handler.cpp (handle_close):

          No asserts in handle_close() since the handler is registered
          with the Reactor and the handler ownership is given to the
          Reactor.  When the Reactor closes, it will call handle_close()
          on the handler.  It is however important to overwrite
          handle_close() to do nothing since the base class does too much.

Wed Jul  9 22:31:54 2003  Oliver Kellogg <oliver.kellogg@sysde.eads.net>

        * tao/IIOP_Connection_Handler.cpp (set_dscp_codepoint): Valgrind
          found that the local variable `tos' was not initialized in all
          possible paths of control flow.

Tue Jul 08 15:24:33 2003  Pradeep Gore  <pradeep@oomworks.com>

        * docs/releasenotes/index.html:
        * docs/releasenotes/notify.html:

          Updated information in the Notification Service section.

        * orbvsvcs/Notify_Service/Notify_Service.cpp:

          Deprecated the "-Notify_TPReactor" option and updated it with
          the "-ORBRunThreads".

        * orbvsvcs/Notify_Service/README:
        * orbvsvcs/CosEvent_Service/README:

          Updated the READMEs with a note explaining how to use the Naming
          Service with the "-m 1" option or the -ORBInitRef option while
          starting these services. Thanks to Tram Nguyen <ttnguye@sandia.gov>
          for reporting this issue.

Mon Jul 07 23:18:24 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Strategies/UIOP_Connector.cpp (make_connection):

          Changed is_finalized() to is_closed().

Mon Jul 07 18:00:38 2003  Irfan Pyarali  <irfan@oomworks.com>

        * The following changes utilize the new memory management mechanisms
          of Event Handlers.  Previously, both the connection handlers and
          the transports had their own reference counting mechanism and
          independent lifetimes.  The reference counting was inadequate
          since it was not originated at the Reactor and the independent
          lifetimes unnecessarily completed protocol specific transport
          code.

          These changes couple the lifetime of the connection handler with
          that of the transport and utilizes the reference count in the
          base ACE_Event_Handler class.  This allowed us to remove several
          hacks throughout TAO code which were designed to prevent (or
          delay) crashes.  Several extra checks and unnecessary locks were
          also removed.

          All of the following protocols were updated:

          - DIOP
          - IIOP
          - SCIOP
          - SHMIOP
          - SSLIOP
          - UIOP
          - UIPMC

        Fri Jun 20 19:45:07 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Connection_Handler:

          - Removed the incr_refcount() and decr_refcount() methods and
          the related <reference_count_> and <refcount_lock_> members.
          Also removed any explicit reference counting since now the
          Reactor framework will handle this correctly.

          - Removed all asserts for a valid <transport_> since now the
          lifetime of the handler and the transport are the same.

          - Removed connection_close_wait() since this state is no longer
          needed.

          - handle_close_eh() is no longer required since we no longer
          rely on the Reactor calling handle_close().

          - Moved the call to release_os_resources() from decr_refcount()
          to the destructor.

          - Mega-simplified transport() method since the transport will
          only be set once.

          - Call to Transport::send_connection_closed_notifications() was
          moved to Connection_Handler::close_connection_eh() to ensure it
          gets called in all cases when the handler is closed.

          - close_connection_eh() was also super-simplified.  Now it
          simply purges the handler from the connection cache and removes
          the handler from the Reactor.

          - Made the destructor public since this class is no longer
          (directly) reference counted.

          - is_finalized() was renamed to is_closed().

          - is_open() and is_connecting() were added to check the status
          of the connection handler.

        * tao/IIOP_Connection_Handler:

          - Added close() method that will be called by the Acceptor or
          Connector when connection establishment fails.

          - No need to reference count the transport.  Handlers and
          transports now have the same lifespan.  Transport in created in
          the constructor and deleted in the destructor.

          - handle_input() and handle_output() intercept any errors from
          handle_input_eh() and handle_output_eh() respectively and call
          close_connection().  We no longer rely on handle_close().

          - Assert that handle_close() no longer gets called.

          - Added handle_timeout(). We don't use this upcall for I/O.
          This is only used by the Connector to indicate that the
          connection timedout.  Therefore, we should call close().

          - The unused constructor should assert(0).

        * tao/Transport:

          - The Transport class no longer needs to inherit from
          TAO_Synch_Refcountable.  The reference counting is provided by
          the Event_Handler class.

          - Replaced the _duplicate() and release() methods with
          add_reference() and remove_reference() methods.  This matches
          the signature of the reference counting methods on the base
          Event_Handler class.

          - Changed provide_handler() to simply provide the related
          connection handler.

          - register_handler() was made virtual and register_handler_i()
          was removed since there was no locking required.  Same was done
          for recv() and send().

          - Removed:

                close_connection_shared()
                close_connection_no_purge()
                close_connection_i(),
                connection_handler_closing()
                check_event_handler_i()
                invalidate_event_handler_i()

          since they were no longer needed.

          - Renamed handle_input_i() to handle_input().

          - Made send_connection_closed_notifications() public.

          - No need for:

                send_message_block_chain()
                send_message_shared()
                schedule_output_i()
                drain_queue_helper()
                handle_timeout()
                check_buffering_constraints_i()
                notify_reactor()

          to call check_event_handler_i() since the handler is always
          valid.

          - No need for to call send_connection_closed_notifications() in
          case of errors since it will get called when the handler is
          closed.

          - No need for process_parsed_messages() to do any explicit
          reference counting since now the Reactor framework will handle
          this correctly.

          - No need for notify_reactor() to create a Notify_Handler.  The
          Reactor framework already does the proper reference counting for
          notifications.

        * tao/IIOP_Transport:

          - invalidate_event_handler_i() no longer needed.

          - Override send() and recv() instead of send_i() and recv_i().

          - No need for reference counting the connection handler since
          the lifespan of the connection handler is tied to the lifespan
          of the transport.

          - register_handler_i() no longer needed.

          - No need for:

                send_request()
                send_message_shared()
                tear_listen_point_list()
                get_listen_point()

          to call check_event_handler_i() since the handler is always
          valid.

        * tao/Acceptor_Impl.cpp (activate_svc_handler):

          Made several changes to this method.  Now the sequence is:

          - At the start of the method, the service handler has been
          created and the new connection has been accepted.  #REFCOUNT# is
          one at this point.

          - Cache handler: If successful, #REFCOUNT# is two at this
          point.  If failure, call close on handler.

          - Activate/register handler: If successful, #REFCOUNT# is three
          at this point. We can let go of our reference.  If failure,
          remove handler from cache and call close on handler.

          - Success completion of method: #REFCOUNT# is two at this point.

        * tao/IIOP_Connector.cpp (make_connection):

          Made several changes to this method.  Now the sequence is:

          - The connect() method creates the service handler and bumps the
          #REFCOUNT# up one extra.  There are three possibilities from
          calling connect(): (a) connection succeeds immediately - in this
          case, the #REFCOUNT# on the handler is two; (b) connection
          completion is pending - in this case, the #REFCOUNT# on the
          handler is also two; (c) connection fails immediately - in this
          case, the #REFCOUNT# on the handler is one since close() gets
          called on the handler.

          - The extra reference count in
          TAO_Connect_Creation_Strategy::make_svc_handler() is needed in
          the case when connection completion is pending and we are going
          to wait on a variable in the handler to change, signifying
          success or failure.  Note, that this increment cannot be done
          once the connect() returns since this might be too late if
          another thread picks up the completion and potentially deletes
          the handler before we get a chance to increment the reference
          count.

          - If there is no immediate result, wait for completion. No need
          to specify timeout to wait() since the correct timeout was
          passed to the Connector. The Connector will close the handler in
          the case of timeouts, so the event will complete (either success
          or failure) within timeout.

          - When the wait completes, check if the handler has been closed.
          Irrespective of success or failure, remove the #REFCOUNT#
          added for waiting.

          - There are three possibilities when wait() returns: (a)
          connection succeeded; (b) connection failed; (c) wait() failed
          because of some other error.  It is easy to deal with (a) and
          (b).  (c) is tricky since the connection is still pending and
          may get completed by some other thread.  The following deals
          with (c).

          * In case of failure and close() has not be called, first
          cancel from connector.  Then double check to make sure the
          handler has not been closed yet.  This double check is required
          to ensure that the connection handler was not closed yet by some
          other thread since it was still registered with the connector.
          Once connector.cancel() has been processed, we are assured that
          the connector will no longer open/close this handler.

          * If closed, there is nothing to do.

          * If the handler has been opened, some other thread was able to
          open the handler even though wait failed for this thread. Reset
          <result> to zero.

          * If the handler is still connecting, forcefully close() the
          handler.

          - If the connection has be successfully connected, add the
          handler to connection cache.

          - Failure in adding to cache, close the handler.

          - If the wait strategy wants us to be registered with the reactor
          then we do so. If registeration is required and it succeeds,
          #REFCOUNT# becomes two.

          - In case of reactor registration failures, purge from the
          connection cache and close the handler.

          - In case of success, handover the transport pointer to the
          Invocation class.

        * tao/Connector_Impl.cpp (make_svc_handler):

          We add to the #REFCOUNT# since the Connector needs this. See
          Connector::make_connection() for details.

        * tao/Transport_Cache_Manager (close):

          Previously, close() was returning a handle set and a set of
          event handlers.  This was changed such the only a set of
          connection handlers is returned since the previous parameters
          are no longer necessary.

          Also in purge(), there is no need to actually purge the handler
          since they will be purged when the handlers close.  This also
          removes the need for Transport::close_connection_no_purge().
          Transport_Cache_Manager no longer needs to be friends with the
          Transport.

        * tao/Thread_Lane_Resources.cpp (finalize):

          We now close the transport cache and return the handlers that
          were still registered.  The cache will decrease the #REFCOUNT#
          on the handler when it removes the handler from cache.  However,
          #REFCOUNT# is increased when the handler is placed in the
          handler set. Then we go through the handler set, closing the
          connections and removing the references. Finally the connection
          is closed.  There is also a potential removal from the Reactor.
          Finally, the #REFCOUNT# related to the handler set decreases.

        * tao/Notify_Handler:

          These files are no longer required since the Reactor framework
          does the correct reference counting for notifications.

        * tao/LF_CH_Event:
        * tao/LF_Event:

          Removed the LFS_CONNECTION_CLOSE_WAIT state since it is no
          longer needed.

        * tao/Connect_Strategy:

          Removed Connect_Strategy::post_failed_connect() since
          *_Connector::make_connection() now does the right thing.

        * tao/Asynch_Reply_Dispatcher_Base.cpp:
        * tao/Asynch_Reply_Dispatcher_Base.i:
        * tao/Cache_Entries.cpp:
        * tao/Invocation.cpp:
        * tao/Transport.cpp:
        * tao/Notify_Handler.cpp:
        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/PortableServer/AMH_Response_Handler.cpp:

          Replace calls to Transport::_duplicate() and
          Transport::release() with new Transport::add_handler() and
          Transport::remove_handler() methods respectively.

        * tests/TAO_Tests.dsw:

          Added several missing tests:

          - AMH_Exceptions_Test
          - AMH_Oneway_Test
          - Abstract Interface
          - Bug_1361_Regression
          - Bug_1482_Regression
          - Collocation_Test
          - Connect_Strategy_Test
          - Connection_Timeout
          - File_IO
          - MProfile_Connection_Timeout
          - MT_BiDir
          - Manipulation
          - Muxed_GIOP_Versions
          - Nested_Upcall_Crash
          - No_Server_MT_Connect_Test
          - ORB_shutdown
          - Objref_Sequence_Test
          - Oneway_Buffering
          - Stack_Recursion
          - Strategies
          - Two_Objects

        * tao/Makefile.bor:
        * tao/Makefile.tao:
        * tao/TAO.dsp:
        * tao/TAO_Static.dsp:
        * tao/tao.mpc:

          Removed Notify_Handler* from project/makefiles.

        * tests/Connection_Timeout/client.dsp:
        * tests/MProfile_Connection_Timeout/client.dsp:
        * tests/MProfile_Connection_Timeout/server.dsp:
        * tests/MT_BiDir/client.dsp:
        * tests/MT_BiDir/server.dsp:
        * tests/ORB_shutdown/server.dsp:

          Fixed the above project files.

        * tests/Bug_1361_Regression/Bug_1361_Regression.dsw:
        * tests/Bug_1361_Regression/client.dsp:
        * tests/Bug_1361_Regression/server.dsp:
        * tests/Bug_1361_Regression/shutdown.dsp:

          New project files.

        Tue Jun 24 21:46:13 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Strategies/DIOP_Connection_Handler:
        * tao/Strategies/SCIOP_Connection_Handler:
        * tao/Strategies/SHMIOP_Connection_Handler:
        * tao/Strategies/UIOP_Connection_Handler:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler:

          - Constructor: Removed code to release the transport.  Lifetimes
          of transports and connection handlers are now coupled.

          - Destructor: Delete the transport.

          - handle_input(), handle_output(): Intercept any errors from
          handle_input_eh() and handle_output_eh() respectively and call
          close_connection(). We no longer rely on handle_close().

          - handle_close(): Assert that this method no longer gets called.

          - handle_timeout(): Added this method. We don't use this upcall
          for I/O.  This is only used by the Connector to indicate that
          the connection timedout.  Therefore, we should call close().

          - close(): Added this method that will be called by the Acceptor
          or Connector when connection establishment fails.

          - The unused constructor should assert(0).

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler:

          - Constructor: Replaced the code to release the transport with
          explicit deletion.  Lifetimes of transports and connection
          handlers are now coupled.

          - The unused constructor should assert(0).

        * tao/Strategies/DIOP_Transport:
        * tao/Strategies/SCIOP_Transport:
        * tao/Strategies/SHMIOP_Transport:
        * tao/Strategies/UIOP_Transport:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport:

          - Constructor: No need to manage reference count on the
          connection handler.  Lifetimes of transports and connection
          handlers are now coupled.

          - Destructor: Removed the assert for the connection handler.

          - send(), recv(): send_i() and recv_i() were renamed send() and
          recv() respectively since locks are no longer required while
          sending or receiving.

          - handle_input(): handle_input_i() was renamed to
          handle_input().

          - register_handler(): No longer required since the base class
          does the right thing.

          - invalidate_event_handler_i(): This is no longer required.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport:

          No need for acquiring <handler_lock_> and calling
          check_event_handler_i() in tear_listen_point_list() and
          get_listen_point() since <connection_handler_> is now always
          valid for the lifetime of the transport.

        * tao/Strategies/DIOP_Transport:

          - Removed commented out code.

          - Renamed register_handler_i() to register_handler().

        * tao/Strategies/SCIOP_Transport:

          - send_request(), get_listen_point(), tear_listen_point_list():
          Removed guard and check for valid connection handler.

          - send_message_shared(): Removed check for valid connection
          handler.

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport:

          Rename handle_input_i() to handle_input().

        * tao/Strategies/SCIOP_Connector.cpp (make_connection):
        * tao/Strategies/UIOP_Connector.cpp (make_connection):
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp (make_connection):
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp (ssliop_connect):

          Made this method similar to IIOP_Connector::make_connection().

        * tao/Strategies/SHMIOP_Connector.cpp (make_connection):

          Made this method similar to IIOP_Connector::make_connection()
          except that the connects are always blocking.

        * tao/Strategies/DIOP_Connector.cpp (make_connection):

          - Replaced decr_refcount() with remove_reference() and
          duplicate() with add_reference() respectively.

        Wed Jun 25 15:56:14 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Strategies/DIOP_Acceptor:

          Revised the management of the connection handler.  Replaced the
          call to handle_close() with call to remove_reference().

        Thu Jun 26 19:34:26 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Strategies/DIOP_Acceptor.cpp (close):

          Added DONT_CALL mask to the remove_handler() call so that
          handle_close() is not called anymore.

        Mon Jun 30 20:46:22 2003  Irfan Pyarali  <irfan@oomworks.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport:

          DIOP and UIPMC are very similar.  Therefore, similar changes
          were made.

        * tests/Connection_Failure:

          New test added that checks connection failures by connecting to
          a non-existent object.

          The following files were added:

          - tests/Connection_Failure/Connection_Failure.dsw
          - tests/Connection_Failure/Connection_Failure.mpc
          - tests/Connection_Failure/Makefile
          - tests/Connection_Failure/Makefile.bor
          - tests/Connection_Failure/README
          - tests/Connection_Failure/client.bor
          - tests/Connection_Failure/client.cpp
          - tests/Connection_Failure/client.dsp
          - tests/Connection_Failure/run_test.pl
          - tests/Connection_Failure/test.idl

          and the following were modified:

          - tests/Makefile
          - tests/Makefile.bor
          - tests/TAO_Tests.dsw
          - tests/README
          - $ACE_ROOT/bin/tao_orb_tests.lst

        Thu May 15 19:46:49 2003  Irfan Pyarali  <irfan@oomworks.com>

        * orbsvcs/orbsvcs/AV/TCP.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:

          Fixed Connector related template instantiations.

        Thu May 22 14:13:37 2003  Irfan Pyarali  <irfan@oomworks.com>

        * Merged Reactor_RefCount branch with the main truck since all ACE
          level changes are now complete.  New branch is
          Reactor_RefCount_1.

        Tue May 27 19:59:25 2003  Irfan Pyarali  <irfan@oomworks.com>

        * Merged Reactor_RefCount_1 branch with the main truck to avail
          new changes by Bala to the TAO connection handlers.  New branch
          is Reactor_RefCount_2.

Mon Jul 07 07:46:00 2003  Justin Michel  <michel_j@ociweb.com>
        * examples/RTCORBA/Activity/Activity.cpp
        * examples/RTCORBA/Activity/Activity.mpc
        * examples/RTCORBA/Activity/main.cpp

          Reverted my changes to Activity from July 3. I thought
        of a new way to write the mpc that's compatible with the
        existing Makefile.

Mon Jul 07 07:52:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/Makefile:
          Added NT_Service, this fixes the build and link problems we have
          with MinGW.

Mon Jul 07 07:00:01 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simple/echo/Echo_Client.bor:
        * examples/Simple/echo/Echo_Server.bor:
          Corrected the names of the executables generated. The perl script
          expects certain names and borland generated other filenames
          resulting in the fact that the perl script didn't run.

Mon Jul 07 06:06:11 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTScheduling/RTScheduler.h:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.h:
          Fixed fuzz errors about incorrect doxygen file tag

Sun Jul 06 17:40:19 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/lib:
        * orbsvcs/tests/Notify/RT_lib:

          Changed all instances of "TAO_NS_" with "TAO_Notify_Tests_" because of
          conflicting namespace with the Notify orbsvcs library classes.
          This was causing some programs to crash on Win2k.

        * orbsvcs/orbsvcs/Notify:
        * orbsvcs/Notify_Service/Notify_Service.cpp:

          Changed all instances of "TAO_NS_" with "TAO_Notify_" as "NS" is
          easily confused with the Naming Service.

        * orbsvcs/examples/Notify/Lanes/Supplier.h:
        * orbsvcs/examples/Notify/Lanes/Supplier.cpp:
        * orbsvcs/examples/Notify/Lanes/Consumer.h:
        * orbsvcs/examples/Notify/Lanes/Consumer.cpp:

          Appended "Lanes" word to the Supplier and Consumer class
          declarations to avoid namespace conflict with the Notify library.

        * orbsvcs/tests/Notify/Lanes/supplier.conf:
        * orbsvcs/tests/Notify/Lanes/consumer.conf:
        * orbsvcs/tests/Notify/Lanes/notify.conf:

          Commented out directive to use SCHED_FIFO. Using the default
          SCHED_OTHER will enable the test to run on solaris and windows
          without being root.

        * orbsvcs/tests/Notify/lib/Driver.cpp:

          Added a check in the <init> method for available priority
          levels and exit gracefully if only 1 level is available.
          Thanks to Irfan for code borrowed from his RTCORBA tests.

        * orbsvcs/examples/Notify/Filter/run_test.pl:
        * orbsvcs/examples/Notify/Subscribe/run_test.pl:

          Added for convenience.

Sun Jul 6 19:31:01 UTC 2003  Johnny Willemsne  <jwillemsen@remedy.nl>

        * examples/RTCORBA/Activity/Makefile.bor:
        * examples/RTCORBA/Activity/Makefile.Activity_Lib.bor:
        * examples/RTCORBA/Activity/Makefile.Activity.bor:
          Update the first makefile and added the last two because of the
          recent changes to this example. This fixes the link problems with
          the BCB compiler.

Sun Jul 6 16:48:12 UTC 2003  Johnny Willemsne  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Basic/Makefile.bor:
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.bor:
        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.bor:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.bor:
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.bor:
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.bor:
        * orbsvcs/tests/Notify/Discarding/Structured_Supplier.bor:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.bor:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.bor:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.bor:
        * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.bor:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.bor:
        * orbsvcs/tests/Notify/Ordering/Structured_Supplier.bor:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.bor:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.bor:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.bor:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.bor:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Filter_Consumer.bor:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Filter_Supplier.bor:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Filter_Consumer.bor:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Filter_Supplier.bor:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.bor:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.bor:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.bor:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.bor:
          Added missing libraries to fix link errors in the BCB6 Static Release build.

Sun Jul 6 13:08:57 UTC 2003  Johnny Willemsne  <jwillemsen@remedy.nl>

        * orbsvcs/IFR_Service/Makefile.tao_ifr:
          Removed windows specific parts from this makefile. This is not
          needed and cause problems when using windows and the msys shell.
          This solves several compile problems in the MinGW build.

Sun Jul 6 13:01:12 UTC 2003  Johnny Willemsne  <jwillemsen@remedy.nl>

        * orbsvcs/examples/CosEC/RtEC_Based/lib/Makefile:
          Set the correct BUILD_DLL define. This fixes the link error on the
          MinGW build.

Sun Jul 6 12:41:03 UTC 2003  Johnny Willemsne  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/lib/Makefile:
          Removed include of rules.bin.GNU because we are building a library,
          so this is not needed. Maybe this fixes the problem we see on our
          cygwin/mingw build systems that the dll build is not removed from
          the ace directory with reaclean, so with a new build the dll is
          not copied and we link with an old version of the dll resulting in
          a lot of link errors.

Sat Jul 5 13:39:10 UTC 2003  Johnny Willemsne  <jwillemsen@remedy.nl>

        * orbsvcs/IFR_Service/Makefile:
        * orbsvcs/PSS/Makefile:
          Removed windows specific parts from these makefiles. These are not
          needed and cause problems when using windows and the msys shell.
          This solves several compile problems in the MinGW build. Thanks to
          Martin Corino <mcorino@remedy.nl> for finding this.

Sat Jul 5 08:17:54 UTC 2003  Johnny Willemsne  <jwillemsen@remedy.nl>

        * rules.tao.GNU:
          With cygwin we could have used cygpath -w, but this doesn't work.
          Removed cygwin specific part completely because it doesn't work
          and is not needed.

Sat Jul 5 06:55:12 UTC 2003  Johnny Willemsne  <jwillemsen@remedy.nl>

        * tao/RTScheduling/Makefile.bor:
          Corrected small erros in this BCB makefile

        * tao/Makefile.bor:
          Added RTScheduling directory so that this directory is also build

Fri Jul 4 17:05:39 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/Makefile.bor:

          Added Makefile to build with Borland compiler.

Fri Jul  4 12:27:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rules.tao.GNU:
          Only when using cygwin, use cygpath for setting TAO_IDL_PREPROCESSOR.
          Thanks to Serge Kolgan <skolgan@trigraph.com> for reporting this.

Fri Jul  4 10:08:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
          When the worker threads have to be stopped, don't use a sleep, but
          do a wait on the thread manager to wait until all threads are
          stopped. Hopefully this will fix the EC_MT_Cast crashes we sometimes
          see in the daily builds.

Fri Jul  4 08:07:45 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/lib/Consumer.h:
        * orbsvcs/tests/Event/lib/Supplier.h:
        * orbsvcs/tests/Event/lib/Counting_Consumer.h:
        * orbsvcs/tests/Event/lib/Counting_Supplier.h:
        * orbsvcs/tests/Event/lib/Driver.h:
          Fix fuxed errors about incorrect @file tags

Thu Jul  3 17:44:43 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * examples/RTCORBA/Activity/Makefile: Added 'main' to the FILES so
          that we'd have a main().  This should get rid of the compile
          errors seen on various platforms where crt1.o can't find a
          reference to main().

Thu Jul  3 11:48:40 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/tests/Redundant_Naming/client.cpp: Initialized ns[12]ref
          variables to zero.  Although the code looked like the variables
          probably would be assigned prior to use, this de-warns on picky
          platforms/compilers like GCC 3.2.

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          Modified operator<< and operator>> to use
          ACE_SIZE_T_FORMAT_SPECIFIER macro rather than an explicit %d.
          This should rid us of warnings such as "warning: int format,
          different type arg (arg 3)"

        * tao/Transport.cpp (dump_iov): Made same modification as above
          for the same reasons.

Thu Jul  3 11:22:47 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Used proper ACE_ENV_ARG_* macros in function declarations and
          function bodies.  This should get rid of compilation errors on
          no-exception builds that manifested themselves as
          "`_ACE_CORBA_Environment_variable' undeclared" errors.

          Also used .in() to explicitly select a conversion on a _var so
          get rid of warnings regarding which conversion the G++ compiler
          was going to choose.


Thu Jul 03 18:53:51 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>


        * orbsvcs/tests/Event/lib/Consumer.h:
        * orbsvcs/tests/Event/lib/Supplier.h:
        * orbsvcs/tests/Event/lib/Counting_Consumer.h:
        * orbsvcs/tests/Event/lib/Counting_Supplier.h:
          Converted documentation to doxygen.

        * orbsvcs/tests/Event/lib/Driver.cpp:
        * orbsvcs/tests/Event/lib/Driver.h:
          Added modify_attributes() method to the driver as virtual again and
          call it before creating the event channel. This method is overruled
          in the reconnect test and because I removed the calling of this
          method the reconnect test failed in the daily builds. The removal
          was done in the checkin of Thu Jun 26 17:35:11 UTC 2003. Now the
          RTEvent reconnect with connect test works again.

Thu Jul 3 14:50:08 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/Makefile

          Added rules to make the RTScheduler library with cygwin/mingw
          compilers. Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          providing the patch. This should fix the internal compile errors
          on cygwin/mingw builds.

Thu Jul 03 13:20:16 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/lib/Makefile.bor:

          Added TAO_DYNAMICANY to the EXTERNAL_LIBS to fix Borland static
          build problems.

        * orbsvcs/tests/Notify/lib/Makefile:
        * orbsvcs/tests/Notify/RT_lib/Makefile:

          Added BUILD_DLL option to CPPFLAGS. These are needed
          for the cygwin/mingw compiler to export the symbols from the DLL.

          Many thanks to Johnny Willemsen  <jwillemsen@remedy.nl> for all
          of the above.

Thu Jul 03 17:03:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/lib/Makefile:
          Set correct BUILD_DLL define when building shared libs. This fixes
          link errors in the Cygwin/MinGW and Kylix builds.

Thu Jul 03 16:24:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp (init_endpoint):
          Changed the way endpoint is allocated from the heap to resolve BCB
          warning about a temporary used.

Thu Jul 03 11:47:44 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/examples/Notify/Lanes/Makefile:

          Added missing linkage to CosNotification.
          Thanks to Michael Rice <MichaelARice@knology.net> for reporting
          this.

Thu Jul  3 02:34:49 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Any_Array_Impl_T.cpp:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Impl_T.cpp:
        * tao/Any_Special_Basic_Impl_T.cpp:
        * tao/Any_Special_Impl_T.cpp:
        * tao/default_server.cpp:
          Rolled back Wed Jul  2 22:17:15 UTC 2003  Don Hinton
          <dhinton@dresystems.com>.  As Bala pointed out, Any's require
          dynamic_cast and RTTI to work properly.  The warnings on Windows
          should be fixed by enabling RTTI, which will be the next change.

Wed Jul 02 22:10:59 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Discarding/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.h:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Supplier.h:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.cpp:

          Fixed the build warnings of derived class method "hides virtual
          function" in the base class, on SunCC and BCB compiler.
          All the <connect> methods in the derived classes have been
          changed to <_connect> and all calls to these methods have also
          been renamed.

        * orbsvcs/examples/Notify/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/Consumer_Client.h:
        * orbsvcs/examples/Notify/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/Supplier_Client.h:

          For the same reason as above, the <init> method has been
          renamed to <initialize>.

        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp:

          Initialized the member pointer <barrier_> in the constructor.
          The pointer is "delete"ed in the destructor. If it is left
          uninitialized, we will get an exception when the
          Activation_Manager is destroyed without calling the
          <activate_suppliers> method (where <barrier_> is initialized).

        * orbsvcs/tests/Notify/lib/ConsumerAdmin_Command.cpp:

          Corrected a comment on line 141.

        * orbsvcs/tests/Notify/lib/Driver.cpp:

          Added a wait for the <worker_> thread manager before exit.
          This is required to make sure we do not exit the main thread
          before the spawned threads in the <worker_> task have finished.

        * orbsvcs/examples/Notify/Lanes.dsp:
          This file was checked in by mistake. It is not required so I
          have removed it.

Thu Jul  3 00:59:24 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Any_Array_Impl_T.cpp:
          Changed one instance of ACE_dynamic_cast to
          ACE_dynamic_cast_2_ptr that I erroneous changed to
          ACE_dynamic_cast below.

Wed Jul  2 22:17:15 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Any_Array_Impl_T.cpp:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Impl_T.cpp:
        * tao/Any_Special_Basic_Impl_T.cpp:
        * tao/Any_Special_Impl_T.cpp:
        * tao/default_server.cpp:
          Changed raw usage of the C++ cast operators to use the
          ACE_* variety, e.g., ACE_dynamic_cast instead of
          dynamic_cast.  This clears up warnings on Windows when
          RTTI is not turned on.

Wed Jul 02 14:57:00 2003  Justin Michel  <michel_j@ociweb.com>

        * examples/AMH/Sink_Server/Sink_Server.mpc
        * examples/RTCORBA/Activity/Activity.cpp
        * examples/RTCORBA/Activity/Activity.mpc
        * examples/RTCORBA/Activity/main.cpp
        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc
        * orbsvcs/examples/Notify/Lanes/Lanes.mpc
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/TimeStamp.cpp
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/TimeStamp.h
        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc
        * orbsvcs/tests/Security/MT_IIOP_SSL/MT_SSLIOP.mpc
        * performance-tests/Latency/AMH/Single_Threaded/Single_Threaded.mpc
        * performance-tests/Sequence_Latency/AMH/Single_Threaded/Single_Threaded.mpc
        * performance-tests/Sequence_Latency/DSI/DSI.mpc
        * performance-tests/Sequence_Latency/Single_Threaded/Single_Threaded.mpc
        * tests/IDL_Test/IDL_Test.mpc
        * tests/OBV/Any/OBV_Any.mpc
        * tests/OBV/Factory/OBV_Factory.mpc
        * tests/OBV/Forward/OBV_Forward.mpc
        * tests/OBV/TC_Alignment/OBV_TC_Alignment.mpc
        * tests/Param_Test/Param_Test.mpc

          Fixed broken mpc files.
          Updated Activity example by splitting it into a separate library. The
        example was exporting symbols from an exe. There may be another way
        to solve this, but I had to guess at what was originally intended.
          Removed extra MT_IIOP_SSL mpc file.
          Updated Pluggable_Flow_Protocol test to not use covariant return, since
        this isn't supported on VC6, and wasn't necessary in this case.

Wed Jul 2 15:37:36 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/TAO_RTScheduler.dsp:

          Added the /GR option to TAO_RTScheduler.dsp to fix warnings due
          to run time type identifcation problem.

Wed Jul 2 00:23:18 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/Distributable_Thread.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Current.cpp:

          Fixed compile errors and warnings in Red Hat 7.1 Explicit
          Template and RH73 GCC32 NoInterceptorsNoExceptions builds. Used
          ACE_ENV_ARG_DECL_NOT_USED instead of ACE_ENV_ARG_DECL in
          methods, in the corresponding .cpp files, that did not use the
          env argument, to fix unused parameter errors and warnings.

Tue Jul 1 00:27:35 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/Current.cpp:

          Fixed compile errors in Debian SingleThreaded and RH73 GCC32
          NoInterceptorsNoExceptions. The error was caused due to the
          missing env argument parameter in the
          TAO_RTScheduler_Current::lookup (...) method. This prevented the
          RTScheduler Initializer from creating an instance of the current
          object.

Mon Jun 30 16:31:18 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/Request_Interceptor.h:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Current.cpp:

          Fixed compile errors and warnings in Debian SingleThreaded build
          caused by the usage of ACE_Thread_Mutex. This was replaced with
          TAO_SYNCH_MUTEX.

Mon Jun 30 16:02:55 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/RTScheduling/Distributable_Thread.h:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/Request_Interceptor.h:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:

          Fixed compile errors and warnings in Red Hat 7.1 Explicit
          Template build caused by missing return statements in functions
          returning non-void. Also moved the creation of an instance of
          TAO_RT_Current from TAO_RTSceduler_Current constructor to a
          method init.

Mon Jun 30 12:19:22 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/Thread_Pool/Client_Task.cpp
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Client_Task.cpp

          Tried to modify the code to get rid of the compiling warning messages for the
          build named "RH71_Explicit_Templates".

Mon Jun 30 11:44:34 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/AMH/Single_Threaded/Roundtrip.cpp

          Fixed the code to get rid of the gcc compiling warning about unused
          parameters in function definitions.

Mon Jun 30 11:52:22 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/examples/Notify/Lanes/Consumer.cpp:
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/Lanes/ORB_Objects.cpp:
        * orbsvcs/examples/Notify/Lanes/ORB_Run_Task.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.cpp:

          Removed references to .inl files.

Mon Jun 30 09:33:31 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/Deferred/client.bor

          Added this missing BCB makefile client.bor.

Sun Jun 29 02:09:20 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp:

          Added explicit template instantiation for hash map of endpoint
          addresses. This should fix the compile problem on sun solaris.

Sun Jun 29 00:26:56 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * tao/corbafwd.h:
        * tao/Exeception.h:
        * tao/Exeception.cpp:

          Added THREAD_CANCELLED to CORBA system exception. The exception
          is thrown when a Distributable Thread is cancelled. This should
          fix compile problems.

        * TAOACE.dsw:
        * tao/TAO.dsw:
        * tao/RTScheduling/TAO_RTScheduler.dsp:
        * tao/RTScheduling/TAO_RTScheduler.rc:

          Added project and workspace files to build RTScheduler library on
          windows.

Fri Jun 27 12:12:09 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:

          Finally fixed the explicit instantiation for activate<>.  As it
          turns out, the problem is that the build on which this was
          failing had exceptions turned off, which required the
          ACE_ENV_ARG_DECL at the end of the arg list.  Other explicit
          instantiation builds didn't trip the problem because they had
          exceptions turned on.

Thu Jun 26 22:34:10 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        The following checkins correspond to the implementation of Dynamic
        Scheduling in TAO. This implementation is based on OMG's
        RTCORBA 2.0 specification.

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:

          Added member variables rtscheduler_current_impl_ and
          rtscheduler_previous_current_impl_ to TSS to store the
          thread specific implementation of RTScheduling::Current.

        * tao/RTScheduling/RTScheduler.pidl:
        * tao/RTScheduling/RTSchedulerC.cpp:
        * tao/RTScheduling/RTSchedulerC.h:
        * tao/RTScheduling/RTSchedulerC.i:

          The psuedo IDL file and corresponding stubs/skeletons defining
          the various interfaces constituting the dynamic scheduling
          framework as defined by the RTCORBA 2.0 specification.

        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Current.h:

          Contains implementation of the RTScheduling::Current
          interface. The operations of the Current interface facilitate
          creation, termination and updation of scheduling segments and
          Distributable Threads (DTs).

        * tao/RTScheduling/Distributable_Thread.cpp:
        * tao/RTScheduling/Distributable_Thread.h:

          Implements the RTScheduling::DistributableThread interface. This
          interface is used to cancel the corresponding DT.

        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/Request_Interceptor.h:

          Provide interception points when sending/receiving requests so
          the ORB can interact with the scheduler. This helps the
          scheduler make scheduling decisions at these scheduling points
          where the DTs are entering or leaving the host.

        * tao/RTScheduling/RTScheduler_Manager.cpp:
        * tao/RTScheduling/RTScheduler_Manager.h:
        * tao/RTScheduling/RTScheduler_Manager.i:

          Manages addition/removal of schedulers implementing specific
          scheduling disciplines. The scheduler manager facilitates
          changing schedulers at run-time.

        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/RTScheduling/RTScheduler_Initializer.h:

          Registers the "RTScheduler_Current" and "RTScheduler_Manager" in
          the object table when the ORB is initialized. They can be
          queried with the corresponding names using
          resolve_initial_references. It also registers the Client and
          Server interceptors defined in Request_Interceptor.{h,cpp}.

        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/RTScheduling/RTScheduler_Loader.h:

          Registers the orb initializer, RTScheduler_Initializer.

        * tao/RTScheduling/RTScheduler.cpp:
        * tao/RTScheduling/RTScheduler.h:

          Bootstraps the dynamic scheduling framework by loading in the
          RTScheduler_Loader. The header file 'MUST' be included in the
          application that wants to use the RTScheduler library.

        * tao/RTScheduling/ThreadAction.h

          Defines the RTScheduling::Thread_Action interface that is used
          as an entry point when spawning new DTs.

        * tao/RTScheduling/Makefile
        * tao/Makefile.dirs

          Corresponding Makefiles to compile RTScheduler library.

Thu Jun 26 17:35:00 2003  Justin Michel  <michel_j@ociweb.com>

        * TAOACE.mwc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTKokyuEvent.mpc:
        * orbsvcs/orbsvcs/RTOLDEvent.mpc:
        * orbsvcs/orbsvcs/RTSchedEvent.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:

          Fixes for mpc generated builds.


Thu Jun 26 16:08:03 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/Supports_Test_impl.h:
        * tests/OBV/Supports/Client/client.cpp:

        Enhanced valuetype test by including more complex valuetypes and
        adding more parameter passing scenarios.

Thu Jun 26 14:30:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Objref_VarOut_T.h:

          Added 'typedef T _obj_type;' to the _var class for interfaces. This
          allows access to T's static methods and typedefs from template code
          using the corresponding _var.

Thu Jun 26 14:03:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp (visit_interface):

          To the generation of the typedefs added in

          Mon Jun 23 19:04:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

          added a global "::" prefix to the scoped name. This eliminates
          confusion when a module name reappears at a more deeply nested
          level.

Thu Jun 26 17:35:11 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/lib/Driver.cpp:
        * orbsvcs/tests/Event/lib/Driver.h:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Defaults.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Event/EC_Defaults.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.cpp:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.i:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.cpp:
          Removed busy_hwm and max_write_delay attributes. These can be set in
          the ESF framework. The ones in the EC aren't used anymore when the
          ESF framework was introduced. This fixes bugzilla entry [530].

Wed Jun 25 17:54:00 2003  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/examples/Notify/Lanes/Lanes.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * orbsvcs/tests/Event/Mcast/Complex/Complex.mpc:
        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc:
        * orbsvcs/tests/Event/Mcast/Two_Way/Two_Way.mpc:
        * orbsvcs/tests/Notify/RT_lib/RT_Notify_lib.mpc:
        * performance-tests/Cubit/TAO/DII_Cubit/DII_Cubit.mpc:
        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * tao/IORInterceptor/IORInterceptor.mpc:

          More mpc file cleanups to push stuff up to base projects.

Wed Jun 25 17:06:18 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated_RTCORBA/colocated.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated/colocated.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/README:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.h:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp:
        * orbsvcs/tests/Notify/performance-tests/Throughput/README:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.h:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.cpp:

          Replaced misspelling word "colocated" with correctly spelled
          "collocated" throughout these files.  I did not change actual
          file or directory names due to potential problems with CVS.

          The COLOCATED option in TAO_NS_EventChannel_Command::init is
          grandfathered in at the moment, but it also prints out a
          warning that you're using a deprecated misspelled option.

Wed Jun 25 17:02:03 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/OBV/Supports/Client.dsp
        * tests/OBV/Supports/Makefile
        * tests/OBV/Supports/Makefile.bor
        * tests/OBV/Supports/README
        * tests/OBV/Supports/Server.dsp
        * tests/OBV/Supports/Supports_Test.dsw
        * tests/OBV/Supports/Supports_Test.idl
        * tests/OBV/Supports/Supports_Test_impl.cpp
        * tests/OBV/Supports/Supports_Test_impl.h
        * tests/OBV/Supports/Client/client.cpp
        * tests/OBV/Supports/Client/client.bor
        * tests/OBV/Supports/Server/server.cpp
        * tests/OBV/Supports/Server/server.bor
        * tests/OBV/Supports/Server/svc.conf

        Added new test for valuetypes.

Wed Jun 25 17:00:00 2003  Justin Michel  <michel_j@ociweb.com>

        * tao/IORInterceptor/IORInterceptor.mpc:
        * tao/ObjRefTemplate/ObjRefTemplate.mpc:
        * tao/PortableServer/PortableServer.mpc:
        * tao/RTCORBA/Multi_Priority_Mapping.h:
        * tao/Valuetype/Valuetype.mpc:

          Fixes for various mpc generation problems.
          Incorrect export macro used in the rtcorba header.

Wed Jun 25 16:05:50 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator.dsp: Changed incorrect
          path to TAO Strategies library in the release build.  Thanks to
          Bruce MacDonald <brucemac@netcomuk.co.uk> for submitting the bug
          report and the fix.

Wed Jun 25 16:00:02 2003  George Edwards <g.edwards@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:

          Fixed bug in argument list generation for valutypes supporting
          interfaces.

Wed Jun 25 13:52:13 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/DSI/Makefile

          Fixed the dependency relation error.

        * performance-tests/Sequence_Latency/Deferred/client.cpp
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Client_Task.h
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Client_Task.cpp
        * performance-tests/Sequence_Latency/Thread_Pool/Client_Task.h
        * performance-tests/Sequence_Latency/Thread_Pool/Client_Task.cpp
        * performance-tests/Sequence_Latency/Thread_Pool/client.cpp

          Fixed the bugs in the code.
          Those buys caused errors when dealing with non-native C++ exception handling
          mechanism.

Wed June 25 14:46:19 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.h:
          Added load_ep () method to read an address file (if available)
          to get the sender and receiver endpoints for each flow that is
          set up. The address file has entries in the format:
          Flowname/Sender_Host:Port/Reciever_Host:Port. If the address
          file or endpoints are not specified then the connection manager
          uses INADDR_ANY for the endpoints.

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/sender.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/receiver.h:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/receiver.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/distributer.h:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/distributer.cpp:
          Added additional parameter -a <address_file> to the command line
          arguments to specify the endpoint address file from which to
          load the flow endpoint addresses. Also, made a call to the
          Connection_Manager::load_ep () method that reads the address
          file and stores the endpoint addresses for each speficied flow
          in a hash map.

Wed Jun 25 12:38:11 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/tao.mpc:

          Updated the file list for this project.

Wed Jun 25 12:14:39 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/tao_idl.mpc:
        * orbsvcs/orbsvcs/AV.mpc:
        * orbsvcs/orbsvcs/CosConcurrency.mpc:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosLifeCycle.mpc:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/CosTime.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/ETCL.mpc:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/orbsvcs/IFRService.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/Security.mpc:
        * orbsvcs/orbsvcs/Svc_Utils.mpc:

          Removed precompiled header related information.

Wed Jun 25 11:00:00 2003  Justin Michel  <michel_j@ociweb.com>

        * TAOACE.mwc:
        * TAO_IDL/tao_idl.mpc:
        * examples/examples.mwc:
        * examples/AMH/Sink_Server/Sink_Server.mpc:
        * examples/AMI/FL_Callback/FL_Callback.mpc:
        * examples/Callback_Quoter/Callback_Quoter.mpc:
        * examples/Content_Server/SMI_Iterator/SMI_Iterator.mpc:
        * examples/Event_Comm/Event_Comm.mpc:
        * examples/Load_Balancing/Load_Balancing.mpc:
        * examples/Load_Balancing_persistent/Load_Balancing_persistent.mpc:
        * examples/Logging/Logging.mpc:
        * examples/OBV/Typed_Events/Typed_Events.mpc:
        * examples/Persistent_Grid/Persistent_Grid.mpc:
        * examples/PluggableUDP/tests/Basic/Basic.mpc:
        * examples/PluggableUDP/tests/Performance/Performance.mpc:
        * examples/PluggableUDP/tests/SimplePerformance/SimplePerformance.mpc:
        * examples/Quoter/Quoter.mpc:
        * examples/RTCORBA/Activity/Activity.mpc:
        * examples/Simple/bank/bank.mpc:
        * examples/Simple/chat/chat.mpc:
        * examples/Simple/echo/echo.mpc:
        * examples/Simple/grid/grid.mpc:
        * examples/Simple/time/time.mpc:
        * examples/Simple/time-date/time_date.mpc:
        * examples/TypeCode_Creation/TypeCode_Creation.mpc:
        * examples/ior_corbaloc/ior_corbaloc.mpc:
        * examples/mfc/client.mpc:
        * examples/mfc/server.mpc:
        * orbsvcs/Concurrency_Service/Concurrency_Service.mpc:
        * orbsvcs/CosEvent_Service/CosEvent_Service.mpc:
        * orbsvcs/Dump_Schedule/Dump_Schedule.mpc:
        * orbsvcs/Event_Service/Event_Service.mpc:
        * orbsvcs/IFR_Service/IFR_Service.mpc:
        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.mpc:
        * orbsvcs/LoadBalancer/LoadBalancer.mpc:
        * orbsvcs/Naming_Service/Naming_Service.mpc:
        * orbsvcs/Notify_Service/Notify_Service.mpc:
        * orbsvcs/Scheduling_Service/Scheduling_Service.mpc:
        * orbsvcs/Time_Service/Time_Service.mpc:
        * orbsvcs/Trading_Service/Trading_Service.mpc:
        * orbsvcs/examples/examples.mwc:
        * orbsvcs/orbsvcs/AV.mpc:
        * orbsvcs/orbsvcs/CosConcurrency.mpc:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosLifeCycle.mpc:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/CosTime.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/ETCL.mpc:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/orbsvcs/IFRService.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTOLDEvent.mpc:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/RTSchedEvent.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/Security.mpc:
        * orbsvcs/orbsvcs/Svc_Utils.mpc:
        * orbsvcs/performance-tests/perf.mwc:
        * orbsvcs/performance-tests/RTEvent/lib/RTEC_Perf.mpc:
        * orbsvcs/tests/tests.mwc:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/AVStreams_Asynch_Three_Stage.mpc:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/AVStreams_Bidirectional_Flows.mpc:
        * orbsvcs/tests/AVStreams/Component_Switching/AVStreams_Component_Switching.mpc:
        * orbsvcs/tests/AVStreams/Full_Profile/AVStreams_Full_Profile.mpc:
        * orbsvcs/tests/AVStreams/Latency/AVStreams_Latency.mpc:
        * orbsvcs/tests/AVStreams/Modify_QoS/AVStreams_Modify_QoS.mpc:
        * orbsvcs/tests/AVStreams/Multicast/AVStreams_Multicast.mpc:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/AVStreams_Multicast_Full_Profile.mpc:
        * orbsvcs/tests/AVStreams/Multiple_Flows/AVStreams_Multiple_Flows.mpc:
        * orbsvcs/tests/AVStreams/Pluggable/AVStreams_Pluggable.mpc:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/AVStream_Pluggable_Flow_Protocol.mpc:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/AVStreams_Simple_Three_Stage.mpc:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/AVStreams_Simple_Two_Stage.mpc:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/AVStreams_Simple_Two_Stage_With_QoS.mpc:
        * orbsvcs/tests/Bug_1393_Regression/Bug_1393_Regression.mpc:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.mpc:
        * orbsvcs/tests/Concurrency/Concurrency.mpc:
        * orbsvcs/tests/CosEvent/Basic/CosEvent_Basic.mpc:
        * orbsvcs/tests/CosEvent/Basic/basiceventtestexe.mpb:
        * orbsvcs/tests/CosEvent/lib/CosEvent_lib.mpc:
        * orbsvcs/tests/EC_Custom_Marshal/EC_Custom_Marshal.mpc:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.mpc:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.mpc:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * orbsvcs/tests/Event/Basic/Event_Basic.mpc:
        * orbsvcs/tests/Event/Basic/rteventtestexe.mpb:
        * orbsvcs/tests/Event/Mcast/Common/ECMcastTests_lib.mpc:
        * orbsvcs/tests/Event/Mcast/Complex/Complex.mpc:
        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc:
        * orbsvcs/tests/Event/Mcast/Two_Way/Two_Way.mpc:
        * orbsvcs/tests/Event/Performance/Event_Performance.mpc:
        * orbsvcs/tests/Event/Performance/eventperftestexe.mpb:
        * orbsvcs/tests/Event/lib/Event_lib.mpc:
        * orbsvcs/tests/FaultTolerance/IOGR/FaultTolerance_IOGR.mpc:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/FaultTolerance_IOGRManipulation.mpc:
        * orbsvcs/tests/IOR_MCast/IOR_MCast.mpc:
        * orbsvcs/tests/ImplRepo/ImplRepo.mpc:
        * orbsvcs/tests/ImplRepo/NameService/ImplRepo_NameService.mpc:
        * orbsvcs/tests/InterfaceRepo/Application_Test/InterfaceRepo_Application_Test.mpc:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/InterfaceRepo_IFR_Test.mpc:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/InterfaceRepo_Persistence_Test.mpc:
        * orbsvcs/tests/Interoperable_Naming/Interoperable_Naming.mpc:
        * orbsvcs/tests/Miop/McastHello/McastHello.mpc:
        * orbsvcs/tests/Notify/Basic/Basic.mpc:
        * orbsvcs/tests/Notify/Blocking/Blocking.mpc:
        * orbsvcs/tests/Notify/Destroy/Destroy.mpc:
        * orbsvcs/tests/Notify/Discarding/Discarding.mpc:
        * orbsvcs/tests/Notify/MT_Dispatching/MT_Dispatching.mpc:
        * orbsvcs/tests/Notify/Ordering/Ordering.mpc:
        * orbsvcs/tests/Notify/RT_lib/RT_Notify_lib.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Multi_ETCL_Filter.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/Test_Filter/Test_Filter.mpc:
        * orbsvcs/tests/Notify/lib/Notify_lib.mpc:
        * orbsvcs/tests/Notify/performance-tests/Filter/Filter.mpc:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen.mpc:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.mpc:
        * orbsvcs/tests/Property/Property.mpc:
        * orbsvcs/tests/Redundant_Naming/Redundant_Naming.mpc:
        * orbsvcs/tests/Sched/Sched.mpc:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.mpc:
        * orbsvcs/tests/Security/Big_Request/Big_Request.mpc:
        * orbsvcs/tests/Security/Callback/Callback.mpc:
        * orbsvcs/tests/Security/MT_IIOP_SSL/MT_IIOP_SSL.mpc:
        * orbsvcs/tests/Security/MT_IIOP_SSL/MT_SSLIOP.mpc:
        * orbsvcs/tests/Security/MT_SSLIOP/MT_SSLIOP.mpc:
        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc:
        * orbsvcs/tests/Security/SecurityLevel1/SecurityLevel1.mpc:
        * orbsvcs/tests/Simple_Naming/Simple_Naming.mpc:
        * orbsvcs/tests/Time/Time.mpc:
        * orbsvcs/tests/Trading/Trading.mpc:
        * orbsvcs/tests/ior_corbaname/ior_corbaname.mpc:
        * orbsvcs/tests/tests_svc_loader/tests_svc_loader.mpc:
        * performance-tests/perf.mwc:
        * performance-tests/Callback/Callback.mpc:
        * performance-tests/Cubit/TAO/DII_Cubit/DII_Cubit.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit.mpc:
        * performance-tests/Latency/AMH/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/AMI/AMI.mpc:
        * performance-tests/Latency/DII/DII.mpc:
        * performance-tests/Latency/DSI/DSI.mpc:
        * performance-tests/Latency/Deferred/Deferred.mpc:
        * performance-tests/Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/Thread_Per_Connection/Thread_Per_Connection.mpc:
        * performance-tests/Latency/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * performance-tests/POA/Create_Reference/Create_Reference.mpc:
        * performance-tests/POA/Demux/Demux.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * performance-tests/POA/Object_Creation_And_Registration/Object_Creation_And_Registration.mpc:
        * performance-tests/Pluggable/Pluggable.mpc:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Common.mpc:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/ORB_Per_Priority.mpc:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Single_Endpoint.mpc:
        * performance-tests/RTCorba/Oneways/Reliable/Reliable.mpc:
        * performance-tests/RTCorba/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Sequence_Latency/AMH/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/AMI/ami.mpc:
        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * performance-tests/Sequence_Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Thread_Per_Connection.mpc:
        * performance-tests/Sequence_Latency/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Throughput/Throughput.mpc:
        * tao/tao.mpc:
        * tao/BiDir_GIOP/BiDir_GIOP.mpc:
        * tao/Domain/Domain.mpc:
        * tao/DynamicAny/DynamicAny.mpc:
        * tao/DynamicInterface/DynamicInterface.mpc:
        * tao/IFR_Client/IFR_Client.mpc:
        * tao/IORInterceptor/IORInterceptor.mpc:
        * tao/IORManipulation/IORManipulation.mpc:
        * tao/IORTable/IORTable.mpc:
        * tao/Messaging/Messaging.mpc:
        * tao/ObjRefTemplate/ObjRefTemplate.mpc:
        * tao/PortableServer/PortableServer.mpc:
        * tao/RTCORBA/RTCORBA.mpc:
        * tao/RTPortableServer/RTPortableServer.mpc:
        * tao/SmartProxies/SmartProxies.mpc:
        * tao/Strategies/Strategies.mpc:
        * tao/TypeCodeFactory/TypeCodeFactory.mpc:
        * tao/Valuetype/Valuetype.mpc:
        * tests/tests.mwc:
        * tests/AMI/AMI.mpc:
        * tests/AMI_Buffering/AMI_Buffering.mpc:
        * tests/AMI_Timeouts/AMI_Timeouts.mpc:
        * tests/BiDirectional/BiDirectional.mpc:
        * tests/BiDirectional_NestedUpcall/BiDirectional_NestedUpcall.mpc:
        * tests/Big_Oneways/Big_Oneways.mpc:
        * tests/Big_Reply/Big_Reply.mpc:
        * tests/Big_Request_Muxing/Big_Request_Muxing.mpc:
        * tests/Big_Twoways/Big_Twoways.mpc:
        * tests/Blocking_Sync_None/Blocking_Sync_None.mpc:
        * tests/CDR/CDR.mpc:
        * tests/Cache_Growth_Test/Cache_Growth_Test.mpc:
        * tests/Client_Leaks/Client_Leaks.mpc:
        * tests/Codec/Codec.mpc:
        * tests/Collocation/Collocation.mpc:
        * tests/Connect_Strategy_Test/Connect_Strategy_Test.mpc:
        * tests/Connection_Purging/Connection_Purging.mpc:
        * tests/Connection_Timeout/Connection_Timeout.mpc:
        * tests/Crash_On_Write/Crash_On_Write.mpc:
        * tests/Crashed_Callback/Crashed_Callback.mpc:
        * tests/DLL_ORB/DLL_ORB.mpc:
        * tests/DSI_Gateway/DSI_Gateway.mpc:
        * tests/DynAny_Test/DynAny_Test.mpc:
        * tests/Explicit_Event_Loop/Explicit_Event_Loop.mpc:
        * tests/Exposed_Policies/Exposed_Policies.mpc:
        * tests/Faults/Faults.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/Forwarding/Forwarding.mpc:
        * tests/Hello/Hello.mpc:
        * tests/IDL_Test/IDL_Test.mpc:
        * tests/IORManipulation/IORManipulation.mpc:
        * tests/InterOp-Naming/InterOp-Naming.mpc:
        * tests/Leader_Followers/Leader_Followers.mpc:
        * tests/LongUpcalls/LongUpcalls.mpc:
        * tests/MProfile/MProfile.mpc:
        * tests/MProfile_Connection_Timeout/MProfile_Connection_Timeout.mpc:
        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc:
        * tests/MT_BiDir/MT_BiDir.mpc:
        * tests/MT_Client/MT_Client.mpc:
        * tests/MT_Server/MT_Server.mpc:
        * tests/MT_Timeout/MT_Timeout.mpc:
        * tests/Multiple/Multiple.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
        * tests/Muxed_GIOP_Versions/Muxed_GIOP_Versions.mpc:
        * tests/Muxing/Muxing.mpc:
        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/NestedUpcall/MT_Client_Test/MT_Client_Test.mpc:
        * tests/NestedUpcall/Simple/Simple.mpc:
        * tests/NestedUpcall/Triangle_Test/Triangle_Test.mpc:
        * tests/Nested_Event_Loop/Nested_Event_Loop.mpc:
        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
        * tests/No_Server_MT_Connect_Test/No_Server_Connect_Test.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Factory/OBV_Factory.mpc:
        * tests/OBV/Forward/OBV_Forward.mpc:
        * tests/OBV/TC_Alignment/OBV_TC_Alignment.mpc:
        * tests/ORB_destroy/ORB_destroy.mpc:
        * tests/ORB_init/ORB_init.mpc:
        * tests/ORB_init/Portspan/ORB_Init_Portspan.mpc:
        * tests/ORB_shutdown/Foo_Bar.mpc:
        * tests/ORT/ORT.mpc:
        * tests/Object_Loader/Object_Loader.mpc:
        * tests/Objref_Sequence_Test/Objref_Sequence_Test.mpc:
        * tests/OctetSeq/OctetSeq.mpc:
        * tests/Oneway_Buffering/Oneway_Buffering.mpc:
        * tests/Oneways_Invoking_Twoways/Oneways_Invoking_Twoways.mpc:
        * tests/POA/Current/Current.mpc:
        * tests/POA/Default_Servant/Default_Servant.mpc:
        * tests/POA/Etherealization/Etherealization.mpc:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.mpc:
        * tests/POA/Identity/Identity.mpc:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.mpc:
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.mpc:
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.mpc:
        * tests/POA/Object_Reactivation/Object_Reactivation.mpc:
        * tests/POA/POA_Destruction/POA_Destruction.mpc:
        * tests/POA/Policies/Policies.mpc:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.mpc:
        * tests/POA/wait_for_completion/wait_for_completion.mpc:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Policies/Policies.mpc:
        * tests/Portable_Interceptors/Benchmark/Portable_Interceptors_Benchmark.mpc:
        * tests/Portable_Interceptors/Dynamic/Portable_Interceptors_Dynamic.mpc:
        * tests/Portable_Interceptors/ForwardRequest/Portable_Interceptors_ForwardRequest.mpc:
        * tests/Portable_Interceptors/IORInterceptor/Portable_Interceptors_IORInterceptor.mpc:
        * tests/Portable_Interceptors/PICurrent/Portable_Interceptors_PICurrent.mpc:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Portable_Interceptors_Request_Interceptor_Flow.mpc:
        * tests/Portable_Interceptors/Service_Context_Manipulation/Portable_Interceptors_Service_Context_Manipulation.mpc:
        * tests/Queued_Message_Test/Queued_Message_Test.mpc:
        * tests/RTCORBA/Banded_Connections/RTCORBA_Banded_Connections.mpc:
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc:
        * tests/RTCORBA/Client_Protocol/RTCORBA_Client_Protocol.mpc:
        * tests/RTCORBA/Collocation/RTCORBA_Collocation.mpc:
        * tests/RTCORBA/Destroy_Thread_Pool/RTCORBA_Destroy_Thread_Pool.mpc:
        * tests/RTCORBA/Explicit_Binding/RTCORBA_Explicit_Binding.mpc:
        * tests/RTCORBA/Linear_Priority/RTCORBA_Linear_Priority.mpc:
        * tests/RTCORBA/MT_Client_Protocol_Priority/RTCORBA_MT_Client_Protocol_Priority.mpc:
        * tests/RTCORBA/ORB_init/RTCORBA_ORB_init.mpc:
        * tests/RTCORBA/Persistent_IOR/RTCORBA_Persistent_IOR.mpc:
        * tests/RTCORBA/Policies/Policies.mpc:
        * tests/RTCORBA/Policy_Combinations/RTCORBA_Policy_Combinations.mpc:
        * tests/RTCORBA/Private_Connection/RTCORBA_Private_Connection.mpc:
        * tests/RTCORBA/RTMutex/RTCORBA_RTMutex.mpc:
        * tests/RTCORBA/Server_Declared/RTCORBA_Server_Declared.mpc:
        * tests/RTCORBA/Server_Protocol/RTCORBA_Server_Protocol.mpc:
        * tests/RTCORBA/Thread_Pool/RTCORBA_Thread_Pool.mpc:
        * tests/Reliable_Oneways/Reliable_Oneways.mpc:
        * tests/Server_Leaks/Server_Leaks.mpc:
        * tests/Single_Read/Single_Read.mpc:
        * tests/Smart_Proxies/Smart_Proxies.mpc:
        * tests/Stack_Recursion/Stack_Recursion.mpc:
        * tests/Strategies/Strategies.mpc:
        * tests/Timed_Buffered_Oneways/Timed_Buffered_Oneways.mpc:
        * tests/Timeout/Timeout.mpc:
        * tests/Two_Objects/Two_Objects.mpc:
        * tests/Xt_Stopwatch/Xt_Stopwatch.mpc:
        * utils/utils.mwc:
        * utils/catior/catior.mpc:

          Added and updated mpc files to use the latest
        features and make use of base projects.

Wed Jun 25 09:40:08 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TAO_Static.dsp:
        * tao/IORInterceptor/TAO_IORInterceptor_Static.dsp: Added missing
          files into the project. Thanks to Tommy Andreasen
          <Tommy.Andreasen@Radiometer.dk> for providing the patches.

Tue Jun 25 11:26:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/sciop_endpoints.i:
          Fixed incorrect export macro.

Tue Jun 25 11:00:23 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
          Fixed typo that caused error in some builds.

Tue Jun 24 18:40:08 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/run_test.pl:
          uncommented code that should have been enabled.

        * orbsvcs/tests/Notify/Basic/run_test.pl:
          Added build option for RT Notification.

        * orbsvcs/tests/Notify/Basic/notify.rt.conf:
          Configuration file for RT Notification.

Tue June 24 16:26:06 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/orbsvcs/AV/AV_Core.cpp: Check if the peer address is
          set for B endpoint when initializing forward flows. If set use
          that address to create acceptors. This case happens when no
          address is specified for the A endpoint.

        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.h:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp: Changed the flow spec entry from
          "Flowname/Direction/Format/Flow_Prtocol/Sender_Address" to
          "Flowname/Direction/Format/Flow_Prtocol/Sender_Address/Receiver_Address".
          The additional Receiver_Address field allows the user to specify
          the receiver address that will be used to receive the
          data. This addition helps to solve the problem arising on a
          multi-homed host where the acceptor was by default accepting on
          all interfaces. This was not acceptable in some cases. Hence,
          by specifying the sender and receiver addresses explicitly only
          the required interfaces on a multi-homed host are used.

        * orbsvcs/orbsvcs/AV/QoS_UDP.cpp:
        * orbsvcs/orbsvcs/AV/UDP.cpp:Made changes to create sockets on the
          specified local and remote addresses to send and receive data
          correspondingly.

        * orbsvcs/orbsvcs/AV/QoS_UDP.cpp: The source host and port in the
          TSpec for setting the RSVP sending_qos were not set
          correctly. This was fixed.

          Thanks to Craig Rodrigues <crodrigu@bbn.com> for bringing this
          problem to our notice.

Tue Jun 24 11:54:29 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp  (bind_new_context):

          Fixed compile errors where there was a return with no value.
          This only caused problems on a few platforms for some reason.

Tue Jun 24 11:34:53 2003  Pradeep Gore  <pradeep@oomworks.com>

        Simple example to show how to use RTCORBA Lanes with RT Notification.

        * orbsvcs/examples/Notify/Lanes/Consumer.cpp:
        * orbsvcs/examples/Notify/Lanes/Consumer.h:

          Structured Consumer implementation.

        * orbsvcs/examples/Notify/Lanes/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.h:

          Client program.

        * orbsvcs/examples/Notify/Lanes/ORB_Objects.cpp:
        * orbsvcs/examples/Notify/Lanes/ORB_Objects.h:

          Holder for common ORB objects.

        * orbsvcs/examples/Notify/Lanes/ORB_Run_Task.cpp:
        * orbsvcs/examples/Notify/Lanes/ORB_Run_Task.h:

          Task to run ORB::run method.

        * orbsvcs/examples/Notify/Lanes/Supplier.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier.h:

          Structured Supplier implementation.

        * orbsvcs/examples/Notify/Lanes/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.h:

          Supplier Client.

        * orbsvcs/examples/Notify/Lanes/client.conf:
        * orbsvcs/examples/Notify/Lanes/notify.conf:
        * orbsvcs/examples/Notify/Lanes/run_test.pl:
        * orbsvcs/examples/Notify/Lanes/Lanes.dsp:
        * orbsvcs/examples/Notify/Lanes/Supplier.dsp:
        * orbsvcs/examples/Notify/Lanes/Consumer.dsp:
        * orbsvcs/examples/Notify/Lanes/Lanes.mpc:
        * orbsvcs/examples/Notify/Lanes/Makefile:

          Configuration files, run script and project files.

        * orbsvcs/examples/Notify/Lanes/README:

          README for this example.

        * orbsvcs/examples/Notify/Notify_Examples.dsw:

          Updated to include Lanes example.

Tue Jun 24 03:49:40 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp: Added patches supplied by
          Rob Andzik to get it compiling on VxWORKS.

Mon Jun 23 22:28:49 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp: Removed the
          usage of TAO_Event_CRC. Used ACE::crc32 () instead. Thanks to
          Carlos for pointing it out.

        * orbsvcs/orbsvcs/Makefile.RTEvent:
        * orbsvcs/orbsvcs/RTEvent.bor: Removed CRC.{h,cpp} from the
          library.

Mon Jun 23 19:35:58 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/ObjRefTemplate/ObjRefTemplate.mpc: Changed parent project
          named "valuetype_only" to "valuetype".  There doesn't seem to be
          a base project called "valuetype_only".

Mon Jun 23 20:18:31 2003  Pradeep Gore  <pradeep@oomworks.com>

        More fixes for compile warnings and errors:

        * orbsvcs/tests/Notify/lib/PushConsumer.h:
        * orbsvcs/tests/Notify/lib/PushSupplier.h:
        * orbsvcs/tests/Notify/lib/SequencePushConsumer.h:
        * orbsvcs/tests/Notify/lib/SequencePushSupplier.h:
        * orbsvcs/tests/Notify/lib/StructuredPushConsumer.h:
        * orbsvcs/tests/Notify/lib/StructuredPushSupplier.h:

          Added missing export directive to class declaration.

        * orbsvcs/tests/Notify/lib/Supplier_T.cpp:
        * orbsvcs/tests/Notify/lib/Consumer_T.cpp:

          Added missing ACE_TYPENAME.

        * orbsvcs/tests/Notify/lib/Task_Stats.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.h:
        * orbsvcs/tests/Notify/lib/Task_Stats.inl:

          Changed all parameter types to ACE_UINT64.

        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp

          Specify the correct scope for call to <activate> method.

Mon Jun 23 19:04:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Array_VarOut_T.h:
        * tao/Objref_VarOut_T.h:
        * tao/Pseudo_VarOut_T.h:
        * tao/Seq_Var_T.h:
        * tao/VarOut_T.h:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:

          Added typedefs of the return types of the .in(), .inout(),
          .out() and ._retn() operations for _vars. Also added
          typedefs of the stub type, stub _ptr type and stub _var type
          to the code generation for the corresponding skeleton class
          for interfaces. This closes [BUGID:1083]. Thanks to
          Andrew Sutton <ansutton@sep.com>, Holger Krekel <krekel@merlinux.de>
          and Jody Hagins <jody@atdesk.com> for their suggestions.

Mon Jun 23 16:53:58 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:

          Removed '<>' from explicit instantiation for template function
          to try to placate the Redhat 7.1 explicit instantiation build.

Mon Jun 23 12:37:48 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:

          Avoid an infinite loop during 'autostart'.  Once a server list
          is found to be of zero length, then we leave the while loop.  This
          would also happen if a 'list' command was issued and there were
          more than 10 servers registered with the ImR.

Mon Jun 23 12:38:54 2003  Rich Seibel <seibel_r@ociweb.com>

        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
          Bugzilla bug #1499 fix applied.

        * orbsvcs/orbsvcs/Makefile.CosNaming:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNaming.bor:
        * orbsvcs/orbsvcs/CosNaming.dsp:
        * orbsvcs/orbsvcs/CosNaming_Static.dsp:
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.h:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.h:
        * orbsvcs/orbsvcs/Naming/Storable.h:
        * orbsvcs/orbsvcs/Naming/Storable.inl:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.h:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.h:
          Inserted the redundant name service code.  Plus, bug 1499
          fix applied to Storable_Naming_Context.cpp.

        * orbsvcs/tests/Redundant_Naming:
        * orbsvcs/tests/Redundant_Naming/README:
        * orbsvcs/tests/Redundant_Naming/Makefile:
        * orbsvcs/tests/Redundant_Naming/client.cpp:
        * orbsvcs/tests/Redundant_Naming/test_object.idl:
        * orbsvcs/tests/Redundant_Naming/run_test.pl:
        * orbsvcs/tests/Redundant_Naming/Redundant_Naming.mpc:
        * orbsvcs/tests/Redundant_Naming/Redundant_Naming.dsw:
        * orbsvcs/tests/Redundant_Naming/client.dsp:
        * orbsvcs/tests/Redundant_Naming/makefile.bor:
        * orbsvcs/tests/Makefile:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/tests/Makefile.bor:
        * orbsvcs/tests/tests.dsw:
          added test for redundant name service

        * orbsvcs/tests/Simple_Naming/run_test.pl:
        * orbsvcs/tests/Simple_Naming/run_test_ffp.pl:
          Moved the flat file persistence test to a separate run test
          so that it could be disabled on MIN CORBA.  The Redundant
          Naming Service is build on the same code base as Flat File
          and uses a Servant Activator which is not available in
          minimum CORBA.

Sun Jun 22 13:58:08 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tests/CodeSets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Translator.cpp:
          Added include of ace/OS.h.

Sun Jun 22 03:27:10 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Cleanup_Func_Registry.h:
          Due to subsetting in ACE, added include of OS.h.

        * tao/Notify_Handler.h:
          Due to subsetting in ACE, added include of Global_Macros.h.

Sat Jun 21 22:29:16 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/lib/Makefile.bor:
          Corrected bad syntax.

Sat Jun 21 11:22:02 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h: Changed the constructor to
          set buffer sizes for the dgram sockets created.

          Thanks to J. Russell Noseworthy and Keith Snively for providing
          the patches.

Sat Jun 21 19:54:47 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/RTPortableServer/RTPortableServerC.h:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_POA.h:
          Adjusted location of #ifdef so that it's after orbconf.h
          which is where ACE_HAS_CORBA_MESSAGING gets set if you user
          doesn't specify it explicitly.

Sat Jun 21 09:34:14 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/BiDir_GIOP/BiDir_Policy_i.cpp (TAO_BidirectionalPolicy):

          Corrected base class initialization order in base member
          initialization list to match class inheritance order.  Fixes a
          warning.

Sat Jun 21 14:53:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.cpp:
          Removed not needed explicit template instantiations

Fri Jun 20 17:45:46 2003  Gan Deng  <dengg@dre.vanderbilt.edu>

        * performance-tests/Sequence_Latency/AMI/run_test.pl
        * performance-tests/Sequence_Latency/AMH/Single_Threaded/run_test.pl
        * performance-tests/Sequence_Latency/DII/run_test.pl
        * performance-tests/Sequence_Latency/DSI/run_test.pl
        * performance-tests/Sequence_Latency/Deferred/run_test.pl
        * performance-tests/Sequence_Latency/Thread_Per_Connection/run_test.pl
        * performance-tests/Sequence_Latency/Thread_Pool/run_test.pl

          Fixed the perl running command line format in order to facilitate
          automatic performance statistics analysis.

Fri Jun 20 16:42:33 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Fixed more typos. Thanks to Danta Cannarozzi <djc2@cse.wustl.edu>
          for reporting the problem.

Fri Jun 20 15:42:14 2003  Gan Deng  <dengg@dre.vanderbilt.edu>

        * performance-tests/Sequence_Latency/Deferred/run_test.pl

          Added this missing file into the directory.

Fri Jun 20 14:48:56 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/Event_Service/Event_Service.cpp:

          Added missing explicit instantiations that were causing build
          problems on impaired platforms.  Some of the explicit
          instantiations probably ought to be handled in generated code or
          other places, but that's a bigger issue to bite off.

Fri Jun 20 12:56:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.h:

          Fixed case error in spelling of included file. Thanks to Diego
          Sevilla Ruiz <dsevilla@ditec.um.es> for reporting the mistake.

Fri Jun 20 10:08:25 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/AMI/Makefile
        * performance-tests/Sequence_Latency/AMI/Makefile.bor

          Deleted the old "makefile" and "makefile.bor", which have
          wrong lower case file name causing the build error.
          Simply changed the file names and fixed the problem.

Fri Jun 20 10:10:07 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tests/QtTests/QtTests.mpc:

          Added a project for the QtTests.  This will only get built if the
          qt feature is enabled.

Fri Jun 20 14:50:32 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/RTCORBA/RTCORBA.h:
        * tao/RTCORBA/RT_Endpoint_Selector_Factory.h:
        * tao/RTCORBA/RT_ORB_Loader.h:
          Adjusted location of ifdef so that it's after orbconf.h
          which is where ACE_HAS_CORBA_MESSAGING gets set if you user
          doesn't specify it explicitly.

Fri Jun 20 11:26:14 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.cpp:
          The validate_connection can only be done when corba messaging
          is available.

Fri Jun 20 11:04:58 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/RtEC/MCast/MCast.cpp:
          Fixed compile problem in emulated exception case

Fri Jun 20 09:13:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.{h,i}:
          Changed template type name to T and make sure that declaration
          and implementation use the same.

Fri Jun 20 07:40:11 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Filter.cpp:
          Added missing include

        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
          Updated documentation

        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
          Added missing explicit template instantiations

Fri Jun 20 04:22:37 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/RTCORBA/Continuous_Priority_Mapping.cpp:
        * tao/RTCORBA/Continuous_Priority_Mapping.h:
        * tao/RTCORBA/Direct_Priority_Mapping.cpp:
        * tao/RTCORBA/Direct_Priority_Mapping.h:
        * tao/RTCORBA/Linear_Network_Priority_Mapping.cpp:
        * tao/RTCORBA/Linear_Network_Priority_Mapping.h:
        * tao/RTCORBA/Linear_Priority_Mapping.cpp:
        * tao/RTCORBA/Linear_Priority_Mapping.h:
        * tao/RTCORBA/Network_Priority_Mapping.cpp:
        * tao/RTCORBA/Network_Priority_Mapping.h:
        * tao/RTCORBA/Network_Priority_Mapping_Manager.cpp:
        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping.cpp:
        * tao/RTCORBA/Priority_Mapping.h:
        * tao/RTCORBA/Priority_Mapping_Manager.cpp:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTCORBA/Private_Transport_Descriptor.cpp:
        * tao/RTCORBA/Private_Transport_Descriptor.h:
        * tao/RTCORBA/RTCORBA.cpp:
        * tao/RTCORBA/RTCORBA.h:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTCORBA/RT_Current.cpp:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Endpoint_Selector_Factory.cpp:
        * tao/RTCORBA/RT_Endpoint_Selector_Factory.h:
        * tao/RTCORBA/RT_Endpoint_Utils.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.h:
        * tao/RTCORBA/RT_Mutex.cpp:
        * tao/RTCORBA/RT_Mutex.h:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_ORB_Loader.h:
        * tao/RTCORBA/RT_PolicyFactory.cpp:
        * tao/RTCORBA/RT_PolicyFactory.h:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.h:
        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTCORBA/RT_Stub.h:
        * tao/RTCORBA/RT_Stub_Factory.cpp:
        * tao/RTCORBA/RT_Stub_Factory.h:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.h:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTPortableServer/RTPortableServer.cpp:
        * tao/RTPortableServer/RTPortableServer.h:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/RTPortableServer/RTPortableServerC.h:
        * tao/RTPortableServer/RT_Acceptor_Filters.cpp:
        * tao/RTPortableServer/RT_Acceptor_Filters.h:
        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_Collocation_Resolver.h:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_POA.h:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.h:
          #Ifdef'd out all the code if TAO_HAS_CORBA_MESSAGING = 0, since
          RTCORBA depends on messaging.

Thu Jun 19 20:45:06 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/lib/Peer_T.cpp:
        * orbsvcs/tests/Notify/lib/Supplier_T.cpp:
        * orbsvcs/tests/Notify/lib/Consumer_T.cpp:

          Added ACE_TYPENAME to stop compiler warnings.

Thu Jun 19 18:29:28 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/AMH/Single_Threaded/run_test.pl

          Fixed some wrong output information.

Thu Jun 19 17:32:38 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/DSI/client.cpp

          Removed an unused dummy variable in the source code.

Thu Jun 19 16:05:09 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/DII/Makefile
        * performance-tests/Sequence_Latency/DSI/Makefile

          Added the missing dependency relation to the old makefiles.

Thu Jun 19 14:08:22 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/.depend.Makefile.RT_Notification:
        * orbsvcs/tests/Notify/RT_lib/.depend.Makefile:
        * orbsvcs/tests/Notify/Test_Filter/.depend.Makefile:
        * orbsvcs/tests/Notify/lib/.depend.Makefile:

          Updated dependencies.

        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp:

          Use <proxy_id_> instead of <supplier_proxy_id_> and
          <consumer_proxy_id_>.
          Use <proxy_> instead of <supplier_proxy_> and
          <consumer_proxy_>.
          This is required due to changes to implementation of Test
          Supplier and Consumers.

Thu Jun 19 11:54:31 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/Makefile:
        * performance-tests/Sequence_Latency/Makefile.bor:

          New make file for the recently newly added sequence
          latency test examples.

Thu Jun 19 11:54:29 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:

          Fixed more argument related bugs.

Thu Jun 19 16:58:00 UTC 2003 Stephen Torri <storri@cse.wustl.edu>

        * orbsvcs/tests/Metrics/Makefile:
        * orbsvcs/tests/Metrics/Metrics_Local_Cache_Test.cpp:
        * orbsvcs/tests/Metrics/Metrics_Local_Cache_Test.h:
        * orbsvcs/tests/Metrics/Remote_Metrics_Logger.cpp:
        * orbsvcs/tests/Metrics/Remote_Metrics_Logger.h:
        * orbsvcs/tests/Metrics/Rate_Group_Info.cpp:
        * orbsvcs/tests/Metrics/Rate_Group_Info.h:
        * orbsvcs/tests/Metrics/Rate_Group_Info.i:
        * orbsvcs/tests/Metrics/Makefile:
        * tao/orbconf.h:

          Added tests for libTAO_Metrics.

        * orbsvcs/orbsvcs/Metrics/metrics_export.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager.i:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.i:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.i:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache_T.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache_T.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache_T.i:
        * orbsvcs/orbsvcs/Metrics/Metrics_Logger.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_Logger.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.i:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.i:
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.i:
        * orbsvcs/orbsvcs/Metrics:
        * orbsvcs/orbsvcs/Metrics.idl:
        * orbsvcs/orbsvcs/Makefile.Metrics:
        * orbsvcs/orbsvcs/Makefile:

          Adding new TAO Metrics ORB service.
          - TAO_Metrics_Frame_Manager_Data is a class makes use of
            the <ACE_Time_Value> class to store period and
            endpoint data for a given time frame. This is used
            by the TAO_Metrics_Frame_Manager to make use of the
            <ACE_Metrics_Cache> class to implement a cache for local use.

          - TAO_Metrics_Timeprobe is a class that makes use of the
            <ACE_Metrics_Timeprobe> class to implement a timeprobe for
            use in a local metrics cache.

          - TAO_Metrics_LocalCache is a class that makes use of the
            <ACE_Metrics_Cache> class to implement a cache for local use
            for storing metrics data.

          - TAO_Metrics_ReportingCache is a class that use of the
            <TAO_Metrics_LocalCache> as its a cache for local use,
            and adds reporting to the logger <TAO_Metrics_Logger>.

          - TAO_Metrics_Logger is a class that allows a client to
            log monitored QoS. Clients will pass their information
            to the TAO_Metrics_Logger in a series of TAO_Metrics_Logger_Data
            elements.

          - TAO_Metrics_UpcallMonitor is a class that allows clients to
            monitor QoS, collected by the rest of the metrics framework.

          - TAO_Metrics_ReportingUpcallMonitor is a class implemenets
            a reporting extension for a Metrics QoS Monitor.

          - TAO_Utils is a collection of metrics utility functions.


        * tao/RTCORBA/Multi_Priority_Mapping.cpp:
        * tao/RTCORBA/Multi_Priority_Mapping.h:
        * tao/RTCORBA/Multi_Priority_Mapping.i:

        - TAO_Multi_Priority_Mapping is an implementation of
          Priority_Mapping interface for communication between
          different platforms. This implementation uses a custom
          mapping between the range of priorities for a given
          scheduling class (ACE_SCHED_OTHER, ACE_SCHED_FIFO,
          ACE_SCHED_RR) and the valid range of CORBA priorities
          (0...32767)

Thu Jun 19 16:01:59 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/index.html:
          Updated link to doxygen documentation.

Thu Jun 19 15:34:01 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.cpp:
          Added missing explicit template instantiations

Thu Jun 19 15:23:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Adapters.cpp:
          Added missing explicit template instantiations

Thu Jun 19 14:56:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RtecEventChannelAdmin.idl:
          Fixed small typos

        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
          Fixed problem with emulated exception compile.

Thu Jun 19 09:55:55 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/AMI/*:

          New test for the sequence of different data types. This
          is based on performance-tests/Latency/AMI/*, but uses
          different data types.

Thu Jun 19 14:56:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
          Added missing explicit template instantiations

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
          Documentation update

Thu Jun 19 06:12:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
          Updated doxygen documentation

Wed Jun 18 23:29:20 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/CosNotification.dsp:
        * orbsvcs/orbsvcs/CosNotification_Static.dsp:
        * orbsvcs/tests/Notify/lib/TAO_NotifyTests.dsp:
        * orbsvcs/tests/Notify/lib/TAO_NotifyTests_Static.dsp:
        * orbsvcs/orbsvcs/CosNotification.bor:

          Updated

Wed Jun 18 22:27:49 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify_Service/Notify_Service.cpp:
          Activate worker thread at lowest avialable priority.

        * orbsvcs/orbsvcs/Notify/AdminProperties.cpp:

          Cosmetic changes.

        * orbsvcs/orbsvcs/Notify/Consumer.h:
        * orbsvcs/orbsvcs/Notify/Consumer.cpp:
        * orbsvcs/orbsvcs/Notify/Consumer.inl:

          Inlined <push> method

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/Properties.cpp:

          Changed default initialization of ThreadPoolParams structure.

        * orbsvcs/orbsvcs/Notify/Event.h:
        * orbsvcs/orbsvcs/Notify/Event.cpp:
        * orbsvcs/orbsvcs/Notify/Event.inl:

          - "const"ified various public methods.
          - Added helper classes for the TAO_NS_Event_var

        * orbsvcs/orbsvcs/Notify/FilterAdmin.h:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.inl:

          Changed signature of <match> method, moved this method to the
          .inl file.

        * orbsvcs/orbsvcs/Notify/Method_Request.h:
        * orbsvcs/orbsvcs/Notify/Method_Request.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request.inl:

          - Added <TAO_NS_Method_Request_No_Copy> class that does not copy the
          event that it holds.
          - Moved the <init> method to the .inl file

        * orbsvcs/orbsvcs/Notify/Method_Request_Event.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.inl:

          Moved the <Method_Request_Event> to its own separate file.

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_T.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_T.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_T.inl:

          Helper templatized logic for dispatching. This is required to
          support different types of event implementations (Event_var and Event*)
          and proxy implementations (ProxySupplier_Guard and ProxySupplier).

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.inl:

          There are 3 different approaches to memory management during
          event dispatching:
          <TAO_NS_Method_Request_Dispatch> - This class increments the
          reference count on the event copy and on the ProxySupplier.

          <TAO_NS_Method_Request_Dispatch_No_Copy> - The event is not
          copied and the refcount on the ProxySupplier is not incremented.

         <TAO_NS_Method_Request_Dispatch_T> - The refcount on the event is
          incremented but not for the ProxySupplier.

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_No_Filtering.*:
          Removed this file. The Method_request_Dispatch accepts a flag
          that is used to determine if the filters should be executed.

        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup_T.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup_T.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup_T.inl:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.inl:

          Implements <TAO_NS_Method_Request_Lookup> and
          <TAO_NS_Method_Request_Lookup_No_Copy> classes.

        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.inl:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.inl:

          Implements <TAO_NS_Method_Request_Updates> and
          <TAO_NS_Method_Request_Updates_No_Copy> classes.

        * orbsvcs/orbsvcs/Notify/Object.h:
        * orbsvcs/orbsvcs/Notify/Object.inl:

          Added accessor for the Event_Manager.

        * orbsvcs/orbsvcs/Notify/Peer.cpp:

          Using Proxy_Guard instead of Refcountable_Guard

        * orbsvcs/orbsvcs/Notify/Property_T.h:
        * orbsvcs/orbsvcs/Notify/Property_T.cpp:
        * orbsvcs/orbsvcs/Notify/Property_T.inl:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.h:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.cpp:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.inl:

          Changed type of property name from CString to char*.

        * orbsvcs/orbsvcs/Notify/Proxy.h:
        * orbsvcs/orbsvcs/Notify/Proxy.cpp:
        * orbsvcs/orbsvcs/Notify/Proxy.inl:

          Changed <check_filter> to TAO_NS_Event* instead of
          TAO_NS_Event_var.
          Moved the method to the .inl file.

        * orbsvcs/orbsvcs/Notify/ProxyConsumer.h:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.inl:

          Removed <push> method from this class.
          Defined the TAO_NS_ProxyConsumer_Guard class.

        * orbsvcs/orbsvcs/Notify/ProxySupplier.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.inl:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.inl:

          Modified <push> method to include ACE_ENV parameter.
          Defined the TAO_NS_ProxySupplier_Guard class.

        * orbsvcs/orbsvcs/Notify/QoSProperties.cpp:

          Access property using <value> method.

        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.cpp:

          Use the priority model passed in the Pool/Lane parameter.

        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.cpp:

          Modified the <execute> method to include ACE_ENV parameter.

        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.h:
        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.cpp:
        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.inl:

          A helper class that increments the reference count in the
          constructor. The count is decremented in the destructor.

        * orbsvcs/orbsvcs/Notify/Worker_Task.h:

          Modified the <execute> method to include ACE_ENV parameter.

        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.cpp:

          Modified the <push> methods to include ACE_ENV parameter.

        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.cpp:

          Modified the <push> methods to include ACE_ENV parameter.

        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.cpp:

          Modified the <TAO_NS_StructuredEvent> constructor to read the
          qos parameters directly instead of using the expensive
          TAO_NS_PropertySeq class.

          Implements 2 types of structured event wrappers - the
          <TAO_NS_StructuredEvent_No_Copy> does not make a copy of the event.

          The <TAO_NS_StructuredEvent> creates a copy of the event.

        * orbsvcs/orbsvcs/Notify/StructuredProxyPushConsumer.cpp:
          The <push_structured_event> does not make a copy of the event
          and the Lookup method request object is created on the stack.
          We have optimized by not making allocations until it is necessary.

        * orbsvcs/orbsvcs/Notify/StructuredPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/StructuredPushConsumer.h:

          The signature of <push_i> is changed to accept TAO_NS_Event*.

        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.h:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.cpp:

          Implements the <TAO_NS_AnyEvent> and <TAO_NS_AnyEvent_No_Copy>
          classes.

        * orbsvcs/orbsvcs/Notify/ProxyPushConsumer.cpp:

          Optimized <push> avoids unnecessary copies.

        * orbsvcs/orbsvcs/Notify/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/PushConsumer.h:

          signature of <push_i> is changed to accept TAO_NS_Event*.

        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.cpp:

          Optimized <push> avoids unnecessary copies.

        * orbsvcs/orbsvcs/Notify/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/SequencePushConsumer.h:

          signature of <push_i> is changed to accept TAO_NS_Event*.

        * orbsvcs/tests/Notify/lib/Peer.h:
        * orbsvcs/tests/Notify/lib/Peer_T.h:
        * orbsvcs/tests/Notify/lib/Peer.inl:
        * orbsvcs/tests/Notify/lib/Peer_T.inl:
        * orbsvcs/tests/Notify/lib/Peer.cpp:
        * orbsvcs/tests/Notify/lib/Peer_T.cpp:

          Template implementation of Suppliers and Consumers.

        * orbsvcs/tests/Notify/lib/Consumer_T.h:
        * orbsvcs/tests/Notify/lib/Consumer_T.cpp:
        * orbsvcs/tests/Notify/lib/Consumer_T.inl:

          Specialization of Peer_T for Consumers.

        * orbsvcs/tests/Notify/lib/Supplier_T.h:
        * orbsvcs/tests/Notify/lib/Supplier_T.cpp:
        * orbsvcs/tests/Notify/lib/Supplier_T.inl:

          Specialization of Peer_T for Suppliers.

        * orbsvcs/tests/Notify/lib/Direct_Consumer.h:
        * orbsvcs/tests/Notify/lib/Direct_Consumer.inl:
        * orbsvcs/tests/Notify/lib/Direct_Consumer.cpp:

          A consumer that receives events directly from a supplier and
          hence does not connect to the EventChannel.

        * orbsvcs/tests/Notify/lib/Relay_Consumer.h:
        * orbsvcs/tests/Notify/lib/Relay_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Relay_Consumer.inl:

          A Direct_Consumer that relays the event received to yet another
          consumer.

        * orbsvcs/tests/Notify/lib/Direct_Supplier.h:
        * orbsvcs/tests/Notify/lib/Direct_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Direct_Supplier.inl:

          A supplier that sends directly to a consumer and
          hence does not connect to the EventChannel.

        * orbsvcs/tests/Notify/lib/PushConsumer.h:
        * orbsvcs/tests/Notify/lib/PushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/PushConsumer.inl:

          Traits based implementation of ProxyConsumer.

        * orbsvcs/tests/Notify/lib/PushSupplier.h:
        * orbsvcs/tests/Notify/lib/PushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/PushSupplier.inl:

          Traits based implementation of ProxySupplier.

        * orbsvcs/tests/Notify/lib/SequencePushConsumer.h:
        * orbsvcs/tests/Notify/lib/SequencePushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/SequencePushConsumer.inl:

          Traits based implementation of SequenceProxyConsumer.

        * orbsvcs/tests/Notify/lib/SequencePushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/SequencePushSupplier.h:
        * orbsvcs/tests/Notify/lib/SequencePushSupplier.inl:

          Traits based implementation of SequenceProxySupplier.

        * orbsvcs/tests/Notify/lib/StructuredPushConsumer.h:
        * orbsvcs/tests/Notify/lib/StructuredPushConsumer.inl:
        * orbsvcs/tests/Notify/lib/StructuredPushConsumer.cpp:

          Traits based implementation of StructuredProxyConsumer.

        * orbsvcs/tests/Notify/lib/StructuredPushSupplier.h:
        * orbsvcs/tests/Notify/lib/StructuredPushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/StructuredPushSupplier.inl:

          Traits based implementation of StructuredProxySupplier.

        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp:
          Prints hostname to data file.

        * orbsvcs/tests/Notify/lib/Driver.cpp:
          The thread that executes command objects is initialized to
          lowest available priority.

        * orbsvcs/tests/Notify/lib/EventChannel.h:
        * orbsvcs/tests/Notify/lib/EventChannel.cpp:

          Added <create_colocated_ecf> method to created a colocated
          EventChannelFactory.

        * orbsvcs/tests/Notify/Lookup.h:
        * orbsvcs/tests/Notify/Lookup.cpp:

          Added resolve methods for
          CosNotifyChannelAdmin::StructuredProxyPushSupplier_var and
          CosNotifyChannelAdmin::StructuredProxyPushConsumer_var

          Removed resolve methods for
          CosNotifyComm::StructuredPushSupplier_var
          CosNotifyComm::StructuredPushConsumer_var
          as they are not required.

        * orbsvcs/tests/Notify/lib/Notify_PushSupplier.h:
        * orbsvcs/tests/Notify/lib/Notify_StructuredPushSupplier.h:
        * orbsvcs/tests/Notify/lib/Notify_SequencePushSupplier.h:
        * orbsvcs/tests/Notify/lib/Notify_PushSupplier.h:
        * orbsvcs/tests/Notify/lib/Notify_StructuredPushSupplier.h:
        * orbsvcs/tests/Notify/lib/Notify_SequencePushSupplier.h:

          typedef to new implementation for backward compatibility.

        * orbsvcs/tests/Notify/lib/Notify_PushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/Notify_StructuredPushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/Notify_SequencePushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/Notify_PushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/Notify_StructuredPushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/Notify_SequencePushSupplier.cpp:

          Removed as they are obsoleted by the new implementation.

        * orbsvcs/tests/Notify/lib/Options_Parser.cpp:

          Populate the revised definition of NotifyExt::ThreadPoolParams.

        * orbsvcs/tests/Notify/lib/Periodic_Consumer.h:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.cpp:

          - Changes to accommodate base class modifications.

          - Note that the periodic consumer receives "warmup events" from
          the periodic supplier . This helps us avoid huge spikes in
          latency for the first few iterations of a test run.
          - The periodic consumer recognizes a special "Stop" event that
          hints that no event will be supplier now on.
          - The periodic consumer can be asked to check if the priority of
          the thread receiving the event is the same as the Priority field
          in the event QoS.

        * Periodic_Consumer_Command.h:
        * Periodic_Consumer_Command.cpp:

          Parses options to create a a "Relay" or "Direct" consumer.

        * orbsvcs/tests/Notify/lib/Periodic_Supplier.h:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:

          - Changes to accommodate base class modifications.

          - The supplier can be asked to run for a fixed amount of time
          regardless of if it could send the number of events that we
          asked it to send.

        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.h:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.cpp:

          Parses options to create a "Direct" supplier.

        * orbsvcs/tests/Notify/lib/Task_Stats.h:
        * orbsvcs/tests/Notify/lib/Task_Stats.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.inl:

          The square of the deviation in the sample set is calculated in the
          <dump_stats> method. The <sample> method only records the sample
          and does no more.

        * orbsvcs/Notify_Service/Notify_Service.cpp:

          By default, always run ORB.run() in a separate thread that has the ORB SCHED
          policies set on it.

        * orbsvcs/tests/Notify/RT_lib/RT_POA_Command.cpp:

          The RT POA is created with the implicit activation policy.

        * orbsvcs/tests/Notify/lib/Makefile:
        * orbsvcs/tests/Notify/lib/Makefile.bor:
        * orbsvcs/tests/Notify/RT_lib/Makefile:
        * orbsvcs/tests/Notify/lib/Test_Filter/Makefile:

          Updated.

        * orbsvcs/tests/Notify/Lanes/supplier.conf:
        * orbsvcs/tests/Notify/Lanes/consumer.conf:

          Corrected the Lane info set in the filter.

        * orbsvcs/orbsvcs/Notify/POA_Helper.cpp:
        * orbsvcs/orbsvcs/Notify/POA_Helper.h:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.h:

          Added method <get_unique_id> to generate unique POA names.

        * orbsvcs/tests/Notify/performance-tests/scripts/README:
        * orbsvcs/tests/Notify/performance-tests/scripts/run_all.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/cos_notify.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/high_path.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_10/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_1/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_5/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_20/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/rt_notify.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_all.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_high_path.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_notify.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_other_paths.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/README:

          Test to measure the throughput of the high priority task with
          increasing number of paths.

        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_0/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_10/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_15/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_20/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_25/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_30/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_35/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_40/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_45/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_5/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_50/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/cos_notify.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/rt_notify.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/run_all.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/README:

          Test to measure the Throughput of a High, Medium and Low priority
          task with increasing load.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops/supplier.conf:

          This test measures throughput for a 2-way between a
          StructuredSupplier and StructuredConsumer.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/relay.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/supplier.conf:

          This test measures throughput for a 2-way between a
          StructuredSupplier and StructuredConsumer where the consumer is
          activated in an RT-POA with the CLIENT-PROPAGATED priority model.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/relay.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/supplier.conf:

          In this test, the supplier sends events to a "relay" consumer that forwards it
          to the final consumer.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops_RTCORBA/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops_RTCORBA/relay.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops_RTCORBA/supplier.conf:

          The consumers are activated in an RT-POA.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated/colocated.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated/run_test.pl:

          Tests the throughput obtained when the supplier, CosNotification
          and consumer are collocated in the same process space.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated_RTCORBA/colocated.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated_RTCORBA/run_test.pl:

          Tests the throughput obtained when the supplier, RT-Notification
          and consumer are colocated in the same process space.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/README:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/run_all.pl:

          Readme and run script for the Max_Throughput set of experiments.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/notify.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/run_test.pl:

          Max possible throughput measurement for CosNotification.

        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify_RTCORBA/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify_RTCORBA/notify.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify_RTCORBA/supplier.conf:

          Max possible throughput measurement for RT-Notification.

        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/README:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/cos_notify.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/rt_notify.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/run_all.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_0/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_5/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_10/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_15/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_20/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_25/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_30/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_35/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_40/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_45/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_50/supplier.conf:

          The test measures the throughput with increasing load.


Wed Jun 18 19:33:24 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/AMH/*:

          New test for the sequence of different data types. This is
          based on performance-tests/Latency/AMH, but uses different
          data types.

Wed Jun 18 19:25:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:

          Added .in() to a _var argument in a function call.

Wed Jun 18 19:03:53 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/Deffered/*:

          New test for the sequence of different data types. This is
          based on performance-tests/Latency/Deffered, but uses different
          data types.

Wed Jun 18 18:36:19 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/DII/*:

          New test for the sequence of different data types for DII. This
          is based on performance-tests/Latency/DII, but uses different
          data types.

Wed Jun 18 18:15:33 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/DSI/*:

          New test for the sequence of different data types for DSI. This
          is based on performance-tests/Latency/DSI, but uses different
          data types.

Wed Jun 18 17:47:28 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/RTEvent.dsp:
        * orbsvcs/orbsvcs/RTEvent_Static.dsp: Added the new files for the
          daily builds.

Wed Jun 18 17:19:47 2003  George Edwards <g.edwards@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp

          Corrected scoping error for parameters of CORBA::release ()
          and CORBA::is_nil () for interfaces that inherit from
          abstract interfaces

Wed Jun 18 17:06:40 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/Thread_Per_Connection/*:

          New test for the sequence of different data types. This is based
          on performance-tests/Latency/Thread_Per_Connection, but uses
          different data types.


Wed Jun 18 17:10:21 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.RTEvent:
        * orbsvcs/orbsvcs/RTEvent.bor: Added CRC.cpp for compilation in
          various builds.


Wed Jun 18 16:54:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/CRC.h:
        * orbsvcs/orbsvcs/Event/CRC.cpp: New file for CRC calculation.

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.i:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.i:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.i:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.inl: This set of checkins
          adds a capability to  perform CRC checksum calculations. This is
          what it does

          - The sender calculates the CRC checksum and sends it as part of
            the header. The field in the header which is padded, is used
            for CRC checksums.

          - The receiver after receiving the message calculates the CRC
            checksum (ofocurse without the checksum value) and compares
            with the one received.

         Ofcourse, all of the above ar optional, and can be chosen when
         the receiver is created by the create () call.

         Thanks to Keith Snively <ksnively@d-a-s.com> and J. Russell
         Noseworthy <j.russell.noseworthy@objectsciences.com> for
         providing these patches.


Wed Jun 18 16:39:51 2003  George Edwards <g.edwards@vanderbilt.edu>

        * TAO_IDL/be_include/be_valuetype.h
        * TAO_IDL/be/be_valuetype.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp

          Added mapping of operations of abstract interfaces inherited by
          concrete interfaces supported by valuetypes to pure virtual
          methods in the valuetype.

Wed Jun 18 16:18:19 2003  Gan Deng  <gan.deng@vanderbilt.edu>

        * performance-tests/Sequence_Latency/Thread_Pool/*: New test for
          the sequence of different data types. This is based on
          performance-tests/Latency/Thread_Pool, but uses different data
          types.

Wed Jun 18 14:01:37 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Objref_VarOut_T.cpp:
        * tao/Objref_VarOut_T.h:
        * tao/Pseudo_VarOut_T.h:
        * tao/Pseudo_VarOut_T.inl:

          Changed signature of the const cast operator from T const *& to
          T * const &, which eliminates warnings on Irix. Thanks to
          Michael Rice <MichaelARice@knology.net> for coming up with this
          Irix-compatible suggestion.

        * tao/Seq_Var_T.h:

          Cosmetic changes.

Wed Jun 18 13:08:07 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp (visit_interface):
        * TAO_IDL/be/be_interface.cpp (copy_ctor_helper);

          Changed the order of base class constructor calls in code
          generation for the interface copy constructor.

Wed Jun 18 12:50:15 2003  George Edwards <g.edwards@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_valuetype/valuetype.h
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp

          Fixed bug in factory generation for valuetypes that
          support interfaces

Wed Jun 18 12:47:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/BiDir_GIOP/BiDir_Policy_i.cpp:
        * tao/Domain/DomainS.cpp:
        * tao/Messaging/MessagingS.cpp:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/PolicyS.cpp:

          Added call to TAO_Abstract_ServantBase in the copy constructor
          and/or fixed the order of base class constructor calls in the
          copy constructor.

Wed Jun 18 12:13:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_enum.cpp:
        * TAO_IDL/be/be_eventtype.cpp:
        * TAO_IDL/be/be_eventtype_fwd.cpp:
        * TAO_IDL/be/be_union_fwd.cpp:

          Fixed mistakes in constructor reordering from

          Tue Jun 17 09:56:38 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

Wed Jun 18 13:53:22 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTEvent.dsp:
        * orbsvcs/orbsvcs/RTEvent_Static.dsp:
          Removed EC_Gateway_UDP.{h,i} from both dsps.

Wed Jun 18 13:17:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.RTEvent:
          Updated dependencies.

Wed Jun 18 08:48:51 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/EC_MT_Mcast/Makefile:
          Updated this test for all RTEC changes and updated dependencies

Wed Jun 18 08:18:22 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
          Fixed type

        * orbsvcs/tests/EC_Mcast/Makefile:
        * orbsvcs/tests/Event/Basic/Makefile:
          Updated dependencies

Wed Jun 18 06:39:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

          Below an detail overview of all RTEC changes. The changes are made by
          Carlos O'Ryan <coryan@atdesk.com>, Marina Spivak <marina@cs.wustl.edu>
          and Jason Smith <jason@atdesk.com>. We have integrated all these
          changes back into the repo and will make sure that it builds and works
          using all different compilers.

        * orbsvcs/orbsvcs/Event/ECG_Adapters.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.i:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.i:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.i:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.i:
        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.i:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.i:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.i:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.i:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.cpp:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.cpp:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.i:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.cpp:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.i:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.cpp:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.h:
          Added all these files. See below for details

        * orbsvcs/orbsvcs/Event/EC_QOS_Info.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.i:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.inl:
        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.h:
          Modified all these files. See below for details

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.h
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.i
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp
          Removed these files

          The detailed changes. Changes are listed from recent to old and all
          together are now migrated into the main repo.

        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
          Add new attribute to control if the gateway uses blocking or
          non-blocking UDP sockets.

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
          If the send() call returns with -1/EWOULDBLOCK simply report the
          failure, do not raise exceptions that cause a disconnection.

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
          In short, changed the class to use a dedicated socket for each
          multicast subscription.

        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.cpp (filter):
          Was always returning 1, resulting in not filtering any events
          out. Fixed.

        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.cpp:
          Enabled "consumer_reconnect" event channel attributes, so the
          feature is enabled when test clients need it.

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
          Made the receiver a little more paranoid about the messages it
          accepts.  Basically we reject messages whose 'byte_order' field
          is neither 0 nor 1 (i.e. things like 71 or 42 are rejected when
          they used to be accepted).  We also inject some magic numbers
          ('ABC') in the padding bytes after the byte order field, so the
          receiver can check for those too.
          This was all motivated by an unexplained crash where the stack
          trace revealed some out of range numbers in incoming data,
          though the strangeness does not explain the crash.

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.i:
          Reimplemented to optimize for non-fragmented multicast messages
          and to make the logic easier to follow and maintain.
          Non-fragmented messages now incur 0 data copies and 0 memory
          allocations.  Also, we no longer use reactor timers to
          expire incomplete messages.  Instead, we purge messages
          whenever we run out of space in internal structures.

          Instead of using a hash map indexed by address+request_id,
          we now use a hash map indexed by address, where each entry
          is an array, used in circular fashion, indexed by
          request_id.  See source files for more details.

        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i:
          Removed -ECGFragmentTimeoutPeriod and
          -ECGFragmentTimeoutNumber options and related code since we
          no longer use timeouts.

        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
          Removed timeout period and timeout number multicast options
          related code since we no longer use timeouts to expire
          messages.

          Updated to reflect minor interface changes in ECG_CDR_Message_Receiver.

          Corrected error handling code: log all errors, but do not
          return -1 in handle_input(), since this would deregister the
          handler from reactor and put the object into a useless state.

        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
          Re-order fields to make the Attributes structure, the init()
          arguments, and their declarations consistent.

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
          Enable non-blocking I/O for the incoming UDP multicast
          sockets. I ran into a dead-lock situation without this flag.

        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.i:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.cpp
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.h:
          Utility for auto-destroying Event Channel.

        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.cpp
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.h:
          Utility for autodisconnecting proxies from Event Channel.

        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
          Changed the init() methods to receive a single
          TAO_ECG_Mcast_Gateway::Attributes structure.  It is easier to
          add more attributes this way, and applications do not need to
          know all the default values to change just one attribute.
          Add support to disable the IP_MULTICAST_LOOP flag.

        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.i:
          Updated UDP handler to follow Mcast handlers in
          interface/behavior.  Updated ECG_Mcast_Gateway so it can be
          configured to use a UDP handler.

        * orbsvcs/tests/Event/Mcast/Simple/README
        * orbsvcs/tests/Event/Mcast/Simple/run_test.pl
        * orbsvcs/tests/Event/Mcast/Simple/udp-consumer-ec.conf
        * orbsvcs/tests/Event/Mcast/Simple/udp-supplier-ec.conf:
          Added a test for federating Event Channels using UDP handler and
          ECG_Mcast_Gateway wrapper.

        * orbsvcs/orbsvcs/Event/ECG_Defaults.h
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i
          Added init() method to ECG_Mcast_Gateway, which allows to
          configure the gateway programatically (without using config
          files).

        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.cpp
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.i:
          The most primitive implementation of the
          RtecUDPAdmin::AddrServer interface: address server always
          returns the same address it was initialized with.

        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.cpp
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.i:
          Implementation of RtecUDPAdmin::AddrServer idl interface, which
          returns a different multicast address based on event source (or
          event type - depending on how the server is configured).  String
          provided at server initialization specifies type to address
          mappings.

        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.cpp
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.i:
          Common abstract base class for various implementations of
          RtecUDPAdmin::AddrServer interface.  The primary goal of this
          ABC is to provide a common way to initialize all Address Server
          implementations.

        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i
        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
          Wrapper for setting up multicast-federated Event Channel.
          Can be configured through service conf. file.  See .h file for
          all the valid options.

        * orbsvcs/orbsvcs/Event/ECG_Adapters.cpp
        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
          Define interfaces that Receivers and handler can use to
          communicate with each other.  Use of these interfaces eliminates
          the coupling of specific Receivers on specific handlers, and
          vice versa.

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.i
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.i
        * orbsvcs/orbsvcs/Event/ECG_Default_Dgram_Handler.cpp
        * orbsvcs/orbsvcs/Event/ECG_Default_Dgram_Handler.h
        * orbsvcs/orbsvcs/Event/ECG_Default_Dgram_Handler.i
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.i
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.cpp
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.i
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.h
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.i
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.i
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.i:
          EC_Gateway_UDP.* was removed, and its functionality split into
          ECG_UDP_Sender.* and ECG_UDP_Receiver.*

          Documented/updated documentation for all of the classes in this
          checkin.

          Changed how lifetime management and shutdown cleanup is done for
          the above classes:
          - Classes implementing idl interfaces derive from RefCounted
          Servant Base - their lifetime is managed by POA
          - Heap allocation is forced through named constructor idiom
          - Classes that use these servants use type-safe Servant_vars
          - Deactivators and auto-disconnect and auto-shutdown objects are
          used throughout to insure proper object cleanup.

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.i:
          Endpoint destructor now closes underlying dgram.

        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.cpp
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h:
          Added deactivate_consumer_admin() and
          deactivate_supplier_admin() helpers.  Unlike previous code,
          these helpers ignore exceptions thrown during deactivation.  As
          we migrate Event Channel servants to use refcounting and have
          their lifetimes managed by POAs, it is possible that admins will
          be deactivated before Event Channel servant, hence we should be
          able to not choke up on exceptions in such a case.

        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.cpp
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.i
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.cpp
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.h
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.i:
          These files are a temporary location for general CORBA
          application utilities, e.g., Object Deactivator, ORB Holder,
          type-safe Servant_Var, etc.  These utilities will be moved into
          tao lib. Some are already moved and the Event code will be cleaned
          up a little later.

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.h
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.i
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.i
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.i:
          Factored out code for breaking up a CDR message into fragments
          and sending each fragment with its own header from
          TAO_ECG_UDP_Sender into a separate TAO_ECG_CDR_Message_Sender class.

          Factored out code for receiving and assembling multicast message
          fragments TAO_ECG_UDP_Receiver into a separate
          TAO_ECG_CDR_Message_Receiver class.

          This restructuring allows better reuse of the
          fragmentation/assembly logic encapsulated into ECG_CDR_Message*
          classes.

        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.h
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.cpp
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.i:
          Added implementation for a simplest possible multicast event
          handler.  It subscribes to a single prespecified multicast
          group using one socket and does not observe subscription changes
          in the Event Channel.  Useful for setups where multicast traffic
          is _not_ separated into different multicast groups.

        * orbsvcs/tests/Event/Mcast/Common/*.{h,cpp,i}:
        * orbsvcs/tests/Event/Mcast/Complex/*.{h,cpp,i}:
        * orbsvcs/tests/Event/Mcast/Simple/*.{h,cpp,i}:
        * orbsvcs/tests/Event/Mcast/Two_Way/*.{h,cpp,i}:
          Added new RTEvent tests for the Mcast based federations.

        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.i:
        * orbsvcs/tests/Event/Basic/BCast.cpp:
        * orbsvcs/examples/RtEC/MCast/MCast.cpp:
          Updated these files because of all RTEC changes

        * orbsvcs/orbsvcs/Makefile.RTEvent:
        * orbsvcs/orbsvcs/RTEvent.bor:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.dsp:
        * orbsvcs/orbsvcs/RTEvent_Static.dsp:
          Updated to reflect all changes

Tue Jun 17 18:31:31 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        From Terry Lacy <terry.lacy@thomson.net>
        * orbsvcs/orbsvcs/PortableGroup/PG_Null_Property_Validator.h
          (validate_criteria):

          Added missing "ACE_ENV_ARG_DECL" emulated exception macro
          argument.  [Bug 1539]

Tue Jun 17 17:09:46 2003  George Edwards <g.edwards@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_valuetype/valuetype.h:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:

          Amended valuetype factory mapping to take into account the
          presence of supported interfaces by adding a new method to
          check for this condition.

          Added inheritance of DefaultValueRefCountBase mix-in class to
          valuetypes that support abstract interfaces.

        * TAO_IDL/be/be_visitor_valuetype/valuetype_sh.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp:

          Added inheritance of the valuetype base class and eliminated
          declarations of _this() and _interface_repository_id() in the
          skeleton class for valuetypes that support concrete interfaces.

Tue Jun 17 09:59:56 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:

          Allow help requests to get down to the directives.

Tue Jun 17 09:56:38 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_argument.cpp:
        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_attribute.cpp:
        * TAO_IDL/ast/ast_component.cpp:
        * TAO_IDL/ast/ast_component_fwd.cpp:
        * TAO_IDL/ast/ast_concrete_type.cpp:
        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_enum_val.cpp:
        * TAO_IDL/ast/ast_eventtype.cpp:
        * TAO_IDL/ast/ast_eventtype_fwd.cpp:
        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_factory.cpp:
        * TAO_IDL/ast/ast_field.cpp:
        * TAO_IDL/ast/ast_generator.cpp:
        * TAO_IDL/ast/ast_home.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_interface_fwd.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_native.cpp:
        * TAO_IDL/ast/ast_operation.cpp:
        * TAO_IDL/ast/ast_predefined_type.cpp:
        * TAO_IDL/ast/ast_root.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:
        * TAO_IDL/ast/ast_union_fwd.cpp:
        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/ast/ast_valuetype_fwd.cpp:
        * TAO_IDL/be/be_argument.cpp:
        * TAO_IDL/be/be_array.cpp:
        * TAO_IDL/be/be_attribute.cpp:
        * TAO_IDL/be/be_component.cpp:
        * TAO_IDL/be/be_component_fwd.cpp:
        * TAO_IDL/be/be_constant.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_enum.cpp:
        * TAO_IDL/be/be_enum_val.cpp:
        * TAO_IDL/be/be_eventtype.cpp:
        * TAO_IDL/be/be_eventtype_fwd.cpp:
        * TAO_IDL/be/be_exception.cpp:
        * TAO_IDL/be/be_factory.cpp:
        * TAO_IDL/be/be_field.cpp:
        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/be/be_home.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_interface_fwd.cpp:
        * TAO_IDL/be/be_module.cpp:
        * TAO_IDL/be/be_native.cpp:
        * TAO_IDL/be/be_operation.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_root.cpp:
        * TAO_IDL/be/be_scope.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_string.cpp:
        * TAO_IDL/be/be_structure.cpp:
        * TAO_IDL/be/be_structure_fwd.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_typedef.cpp:
        * TAO_IDL/be/be_union.cpp:
        * TAO_IDL/be/be_union_branch.cpp:
        * TAO_IDL/be/be_union_fwd.cpp:
        * TAO_IDL/be/be_union_label.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_valuetype_fwd.cpp:
        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_constant.cpp:
        * TAO_IDL/be/be_visitor_valuetype.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp:
        * TAO_IDL/be_include/be_eventtype.h:
        * TAO_IDL/be_include/be_generator.h:
        * TAO_IDL/be_include/be_valuetype.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_init_arglist_ch.h:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/include/ast_eventtype.h:
        * TAO_IDL/include/ast_factory.h:
        * TAO_IDL/include/ast_generator.h:
        * TAO_IDL/include/ast_valuetype.h:
        * tao/IFR_Client/IFR_Components.pidl:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.h:
        * tao/IFR_Client/IFR_ComponentsC.i:

          Various changes:

          - Added support for exceptions in valuetype factories.

          - Changed the order of constructor calls in IDL compiler
            source files, to eliminate warnings from gcc 3.3.

          - Fixed bug in code generation for impl classes. Thanks to
            Victor N. <dreamland_skib2@mailru.com> for reporting the
            bug.

          - Fixed bug in code generation for typedef'd string
            constant when it appears inside an interface or
            valuetype. Thanks to Francesco Baldi <Francesco.Baldi@hit.it>
            for reporting the bug.

          - Fixed bug in typecode generation for recursive types
            using a typdef'd sequence and forward struct/union
            declaration. Thanks to Thomas Wiegert <wiegert@schlund.de>
            for reporting the bug.

          - Fixed bug in code generation for sequences of managed
            types, when the managed type is declared in different
            module than the sequence. Thanks to Huang-Ming Huang
            <hh1@cse.wustl.edu> for reporting the bug.

          - Added infrastructure to store and pass a default
            value of 0 for the 'custom' flag applied to
            valuetypes, even though we don't support it yet.

        * tests/OBV/Factory/FactoryC_impl.cpp:
        * tests/OBV/Factory/FactoryC_impl.h:

           Added throw spec to test code, now that factoy
           operations for valuetypes support exceptions.

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_operation.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_structure.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
        * orbsvcs/IFR_Service/ifr_visitor.h:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.i
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.i
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:

          Added more support for IDL3 extensions in the IFR and
          IFR loader. None of this is tested yet.

        * tao/Array_VarOut_T.h:
        * tao/Array_VarOut_T.inl:
        * tao/Objref_VarOut_T.cpp:
        * tao/Objref_VarOut_T.h:
        * tao/Pseudo_VarOut_T.cpp:
        * tao/Pseudo_VarOut_T.h:
        * tao/Pseudo_VarOut_T.inl:
        * tao/Seq_Out_T.inl:
        * tao/TAO.dsp:
        * tao/VarOut_T.inl:

          Changed the position of 'const' qualifiers, which causes
          no change in semantics, but makes it easier for MSVC to
          deal with. The workaround on MSVC was causing problems
          with irix, as reported by Michael Rice <MichaelARice@knology.net>.

Tue Jun 17 09:20:18 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:

          Made the usage a little more readable.

Tue Jun 17 06:54:14 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/params.cpp:

          There was an error in the parse_enpoints() function that affects
          the semi-colon(;) seperated list of Endpoints if more than 2
          Enpoints are given:

          -ORBEndpoint "protocolx://V.v@addr1;protocolx://V.v@addr;protocolx://V.v@addr1"

          Thanks to Markus Wild <markus.wild@homag.de> for supplying the
          fix.

Tue Jun 17 05:50:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/implrepo/index.html:
          Corrected link to doxygen documentation
