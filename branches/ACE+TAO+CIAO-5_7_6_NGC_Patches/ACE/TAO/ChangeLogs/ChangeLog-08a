Thu Feb 21 02:34:37 CST 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

	* TAO version 1.6.3 released.

Wed Feb 20 15:14:25 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Timed_Buffered_Oneways/client.cpp:
          Remove unused parameter. Fixes warning.

Wed Feb 20 11:00:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/CodeSets/simple/run_test.pl:
          Add the necessary library paths for the libs/IBM1047_ISO8859
          and libs/UCS4_UTF16.

Tue Feb 19 22:20:05 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Timed_Buffered_Oneways/client.cpp:
          The timeout could be from a previous loop. A simplistic analysis
          could incorrectly conclude that as an unexpected timeout
          exception.

Tue Feb 19 16:30:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO/tests/Parallel_Connect_Strategy/client.cpp:
          Remove unused variable.

Tue Feb 19 00:22:13 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tao/Transport.cpp:
          Partially sent messages should not be discarded from the
          queue. GIOP stream was getting corrupted when a partially sent
          message was being discarded.

Fri Feb 15 08:52:41 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Crashed_Callback/server.cpp:
        * tests/Server_Connection_Purging/server.cpp:
          Fixed GCC 2.96 warnings

Thu Feb 14 16:31:05 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Bug_3154_Regression/run_test.pl:
          Cross-platform build fix. HOST_ROOT taken into account.

Thu Feb 14 10:26:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Big_Oneways/run_test.pl:
        * tests/Big_Twoways/run_test.pl:
          Made robust spawn checks and adjusted timeouts.

Wed Feb 13 20:50:50 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Bug_3193_Regression:
          Removed test. The test scenario is covered in
          Oneway_Send_Timeouts.

Wed Feb 13 18:36:52 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Client.cpp:
        * tests/Oneway_Send_Timeouts/Server.cpp:
        * tests/Oneway_Send_Timeouts/main.cpp:
          Now using ACE_auto_ptr_reset instead of std::auto_ptr::reset() for
          wider platform compatibility.

Wed Feb 13 16:42:51 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Server.cpp:
          Fix for VxWorks warnings.

Wed Feb 13 16:21:16 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Timed_Buffered_Oneways/client.cpp:
          Since the invocations are oneways, the timeout exception can
          occur when the ORB is driven.

Tue Feb 12 19:08:38 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Server_Task.h:
          Fuzz build fix.

Tue Feb 12 17:43:18 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/run_test.pl:
        * tests/Bug_3154_Regression/run_test.pl:
          Build tao_idl path relative to ACE_ROOT instead of current
          position. This was based upon the legacy packaging style.

        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/Reactive_Flushing_Strategy.cpp:
          Remove extra include headers.

        * tests/Timed_Buffered_Oneways/client.cpp:
          The client has RTT enabled and therefore needed to catch timeout
          exceptions.

Tue Feb 12 16:03:33 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * Updated NEWS file.

Tue Feb 12 15:49:53 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
          Chop out code replicated in base class.

        * tao/Transport.cpp:
          Removed tab.

        * tests/Oneway_Send_Timeouts/Client.h:
        * tests/Oneway_Send_Timeouts/Client.cpp:
        * tests/Oneway_Send_Timeouts/Client_Task.h:
        * tests/Oneway_Send_Timeouts/ORB_Task.h:
        * tests/Oneway_Send_Timeouts/Oneway_scenarios.mpc:
        * tests/Oneway_Send_Timeouts/Server.h:
        * tests/Oneway_Send_Timeouts/Server.cpp:
        * tests/Oneway_Send_Timeouts/Server_Task.h:
        * tests/Oneway_Send_Timeouts/Test.idl:
        * tests/Oneway_Send_Timeouts/Test_i.h:
        * tests/Oneway_Send_Timeouts/Test_i.cpp:
        * tests/Oneway_Send_Timeouts/main.cpp:
          Fuzz build fixes.

Tue Feb 12 15:12:58 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/Oneway_Send_Timeouts/Server_Task.h:

          Now using ACE_auto_ptr_reset instead of std::auto_ptr::reset() for
          wider platform compatibility.

Tue Feb 12 13:40:14 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * Updated NEWS file.

Tue Feb 12 12:35:40 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * tests/Server_Connection_Purging/Server_Connection_Purging.mpc:

          Fix fuzz error.

Tue Feb 12 10:55:28 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tests/BiDirectional/run_test.pl:

          Removed inadvertent debug addition.

Tue Feb 12 10:18:14 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * MPC/config/csd_pt_testinf_lib.mpb:
        * MPC/config/csd_pt_testservant_lib.mpb:
        * MPC/config/kokyu_dsrt_schedulers.mpb:
        * MPC/config/notifytest.mpb:
        * MPC/config/orbsvcslib.mpb:
        * MPC/config/rtcorbacommon.mpb:
        * MPC/config/taolib.mpb:
        * docs/tutorials/Quoter/Naming_Service/Quoter_Naming_Service.mpc:
        * docs/tutorials/Quoter/Simple/Client/Quoter_Simple_Client.mpc:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Quoter_Simple_Impl_Repo.mpc:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Quoter_Simple_ImprovedServer.mpc:
        * docs/tutorials/Quoter/Simple/Persistent/Quoter_Simple_Persistent.mpc:
        * docs/tutorials/Quoter/Simple/Server/Quoter_Simple_Server.mpc:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.mpc:
        * examples/RTScheduling/Fixed_Priority_Scheduler/run_test.pl:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc:
        * examples/RTScheduling/MIF_Scheduler/run_test.pl:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/IFR_Service/IFR_Service.mpc:
        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:
        * orbsvcs/PSS/PSDL.mpc:
        * orbsvcs/examples/ImR/Combined_Service/ImR_Combined_Service.mpc:
        * orbsvcs/examples/Notify/Federation/Agent/Agent.mpc:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.mpc:
        * orbsvcs/orbsvcs/AV.mpc:
        * orbsvcs/orbsvcs/CosConcurrency.mpc:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosLifeCycle.mpc:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:
        * orbsvcs/orbsvcs/CosNaming_Skel.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/CosTime.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/ETCL.mpc:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:
        * orbsvcs/orbsvcs/HTIOP.mpc:
        * orbsvcs/orbsvcs/IFRService.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTCosScheduling.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:
        * orbsvcs/orbsvcs/RTKokyuEvent.mpc:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/RTSchedEvent.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/Security.mpc:
        * orbsvcs/orbsvcs/Svc_Utils.mpc:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Colocated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Federated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/RTCORBA_Baseline.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/RTCORBA_Callback.mpc:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/TCP_Baseline.mpc:
        * orbsvcs/tests/CosEvent/Basic/basiceventtestexe.mpb:
        * orbsvcs/tests/CosEvent/Basic/run_test.pl:
        * orbsvcs/tests/Event/Basic/rteventtestexe.mpb:
        * orbsvcs/tests/Event/Basic/run_test.pl:
        * orbsvcs/tests/Event/Mcast/Complex/Complex.mpc:
        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc:
        * orbsvcs/tests/Event/Mcast/Two_Way/Two_Way.mpc:
        * orbsvcs/tests/Event/Performance/eventperftestexe.mpb:
        * orbsvcs/tests/Event/Performance/run_test.pl:
        * orbsvcs/tests/Notify/Basic/run_test.pl:
        * orbsvcs/tests/Notify/Basic/run_test_ipv6.pl:
        * orbsvcs/tests/Notify/Blocking/run_test.pl:
        * orbsvcs/tests/Notify/Bug_1385_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Bug_2561_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Discarding/run_test.pl:
        * orbsvcs/tests/Notify/MC/run_test.pl:
        * orbsvcs/tests/Notify/MT_Dispatching/run_test.pl:
        * orbsvcs/tests/Notify/Ordering/run_test.pl:
        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/Filter/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/run_test.pl:
        * performance-tests/CSD_Strategy/TestApps/run_test.pl:
        * tao/AnyTypeCode.mpc:
        * tao/BiDir_GIOP.mpc:
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/CSD_Framework.mpc:
        * tao/CSD_ThreadPool.mpc:
        * tao/CodecFactory.mpc:
        * tao/Codeset.mpc:
        * tao/Compression.mpc:
        * tao/DiffServPolicy.mpc:
        * tao/DynamicAny.mpc:
        * tao/DynamicInterface.mpc:
        * tao/EndpointPolicy.mpc:
        * tao/IFR_Client.mpc:
        * tao/IORInterceptor.mpc:
        * tao/IORManipulation.mpc:
        * tao/IORTable.mpc:
        * tao/ImR_Client.mpc:
        * tao/Messaging.mpc:
        * tao/ObjRefTemplate.mpc:
        * tao/PI.mpc:
        * tao/PI_Server.mpc:
        * tao/PortableServer.mpc:
        * tao/RTCORBA.mpc:
        * tao/RTPortableServer.mpc:
        * tao/RTScheduler.mpc:
        * tao/SmartProxies.mpc:
        * tao/Strategies.mpc:
        * tao/TC.mpc:
        * tao/TC_IIOP.mpc:
        * tao/TypeCodeFactory.mpc:
        * tao/Utils.mpc:
        * tao/Valuetype.mpc:
        * tao/ZlibCompressor.mpc:
        * tests/CSD_Strategy_Tests/Broken/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_1/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_2/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_3/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_4/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_Static/run_test.pl:
        * tests/Collocation/run_test.pl:
        * tests/POA/Adapter_Activator/POA_Adapter_Activator.mpc:
        * tests/POA/Adapter_Activator/run_test.pl:
        * tests/POA/Explicit_Activation/POA_Explicit_Activation.mpc:
        * tests/POA/Explicit_Activation/run_test.pl:
        * tests/POA/Loader/run_test.pl:
        * tests/POA/On_Demand_Activation/POA_On_Demand_Activation.mpc:
        * tests/POA/On_Demand_Activation/run_test.pl:
        * tests/POA/On_Demand_Loading/run_test.pl:
        * tests/POA/Reference_Counted_Servant/Reference_Counted_Servant.mpc:
        * tests/POA/Reference_Counted_Servant/run_test.pl:
        * tests/RTCORBA/Persistent_IOR/run_test.pl:
        * tests/TransportCurrent/Framework/run_test.pl:
        * tests/TransportCurrent/IIOP/run_test.pl:

          Changes to fix bug #3192. In summary these are:
          Add *_output.mpb base projects to mpc files for ORB core and ORB
          service libraries to direct their libraries into $ACE_ROOT/lib.
          Add extra library paths into test mpc files and test run scripts so
          that they can locate libraries that are not in the above category
          (e.g. test / example libraries).

        * tests/BiDirectional/run_test.pl:
        * tests/Bug_1020_Basic_Regression/run_test.pl:
        * tests/Bug_1020_Regression/run_test.pl:
        * tests/Bug_1269_Regression/run_test.pl:
        * tests/Bug_1270_Regression/run_test.pl:
        * tests/Bug_1361_Regression/run_test.pl:
        * tests/Bug_1482_Regression/run_test.pl:
        * tests/Bug_1551_Regression/run_test.pl:
        * tests/Oneways_Invoking_Twoways/Client_Task.h:
        * tests/Oneways_Invoking_Twoways/Client_Task.cpp:
        * tests/Oneways_Invoking_Twoways/Receiver_i.h:
        * tests/Oneways_Invoking_Twoways/Receiver_i.cpp:
        * tests/Oneways_Invoking_Twoways/Sender_i.h:
        * tests/Oneways_Invoking_Twoways/Sender_i.cpp:
        * tests/Oneways_Invoking_Twoways/Test.idl:
        * tests/Oneways_Invoking_Twoways/client.cpp:
        * tests/Crash_On_Write/client.cpp:
        * tests/Crash_On_Write/server.cpp:
        * tests/Crashed_Callback/Service.h:
        * tests/Crashed_Callback/Service.cpp:
        * tests/Crashed_Callback/server.cpp:
        * tests/Parallel_Connect_Strategy/client.cpp:
        * tests/Parallel_Connect_Strategy/run_test.pl:
        * tests/Server_Connection_Purging/Server_Connection_Purging.mpc:
        * tests/Server_Connection_Purging/Test.idl:
        * tests/Server_Connection_Purging/Test_i.h:
        * tests/Server_Connection_Purging/Test_i.cpp:
        * tests/Server_Connection_Purging/client.cpp:
        * tests/Server_Connection_Purging/client2.cpp:
        * tests/Server_Connection_Purging/run_test.pl:
        * tests/Server_Connection_Purging/server.cpp:
        * tests/Single_Read/run_test.pl:
        * tests/Single_Read/test_i.h:
        * tests/Single_Read/test_i.cpp:
        * tests/Stack_Recursion/client.cpp:
        * tests/Stack_Recursion/run_test.pl:
        * tests/Nested_Upcall_Crash/run_test.pl:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:

          Made changes to make these tests take more reasonable times to run. In
          some cases this is simply removal of unecessary inefficiencies. On
          others this has been the addition of a -quick argument to optionally
          reduce the amount of repetition or similar in the scenario.

Mon Feb 11 20:51:59 UTC 2008  Ciju John  <johnc at ociweb dot com>

        Merging in changes from branch "Bug_3193". Here are the individual
        Changelog entries:
        Mon Feb 11 17:00:23 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Test_i.h:
        * tests/Oneway_Send_Timeouts/Test_i.cpp:
          Remove ACE_THROW_SPEC.

        Fri Feb  8 21:43:01 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/reactive_flush.conf:
          Need this for testing the reactive flush strategy.

        Thu Feb  7 22:49:48 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/Reactive_Flushing_Strategy.cpp:
          Check for timeout in flush_message and flush_transport API's. If
          hit set errno appropriately and return -1, informing higher layer.

        * tao/Strategies/DIOP_Transport.h:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.h:
        * tao/Strategies/SCIOP_Transport.cpp:
          Chop out replicated code.

        * tests/Oneway_Send_Timeouts/run_test.pl:
          Extend test for reactive flushing.

        Tue Feb  5 22:50:16 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Client.h:
        * tests/Oneway_Send_Timeouts/Client.cpp:
          Refactor test to better simulate flooded TCP buffers in block
          flushing scenario.

        Thu Jan 31 16:05:52 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Client.cpp:
          More Windows warnings fixes.

        Thu Jan 31 15:57:56 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Client.cpp:
        * tests/Oneway_Send_Timeouts/Oneway_scenarios.mpc:
        * tests/Oneway_Send_Timeouts/Server.cpp:
        * tests/Oneway_Send_Timeouts/main.cpp:
          Fix for Windows warnings.

        Wed Jan 30 23:11:05 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts:
          New test for RTT validation during send/flush.

        Wed Jan 30 18:02:59 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tao/Transport.cpp:
          Check sent_bytes value to determine if something got flushed
          instead of queue head location.

        Mon Jan 28 22:53:40 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tao/Leader_Follower_Flushing_Strategy.cpp:
          flush_transport() correctly sets errno to ETIME if timeout
          expires.

        * tao/Transport.cpp:
          Throws a CORBA::TIMEOUT if flush_transport() gets a timeout.

        Mon Jan 21 16:19:15 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/Oneway_Timeouts/run_test.pl:

          This one perl script runs a number of sub-tests.  If any one fails,
          print an error message but continue, making sure to return nonzero
          from the perl script.

        Fri Jan 18 21:51:21 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.cpp:

          Completed the fix from yesterday's commit so that both sync and
          async requests that don't send any bytes do NOT result in closing
          the connection.

        * tests/Timed_Buffered_Oneways/client.cpp:

          Tolerate timeout exceptions when sending the oneways.  Prior to the
          transport changes for Bug 3191, TAO would not enforce the timeout on
          the request sending path.

        Thu Jan 17 22:53:05 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.cpp:

          Fixed the case where a timeout happens with zero bytes sent.  This
          is not a partial send so we don't return -1 to shut down the
          transport.  Also added a debug log message and cleaned up indenting.

        Thu Jan 17 20:02:43 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/run_test.pl:
        * tests/Bug_3154_Regression/run_test.pl:

          Fixed tests that assumed $TAO_ROOT was $ACE_ROOT/TAO.

        Wed Jan 16 19:39:58 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.cpp:

          Fixed a logic error where the rest of a partially-sent message was
          put on the wrong end of the output queue.

        Wed Jan 16 16:12:35 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.h:

          Added doxygen for the 'back' parameter.

        Tue Jan 15 22:19:48 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.h:
        * tao/Block_Flushing_Strategy.h:
        * tao/Block_Flushing_Strategy.cpp:
        * tao/Connection_Handler.cpp:
        * tao/Flushing_Strategy.h:
        * tao/Leader_Follower_Flushing_Strategy.h:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/Reactive_Flushing_Strategy.h:
        * tao/Reactive_Flushing_Strategy.cpp:
          API changes to pass max_wait_time.

        * tao/IIOP_Transport.h:
        * tao/IIOP_Transport.cpp:
          Remove base class duplicate method send_message_shared().

        * tao/Transport.cpp:
          Pass max_wait_time properly through the stack.
          Additional comments/notes.
          Flush only if timeout hasn't already been encountered.
          Pass max_wait_time to the flushing strategy.
          Bubble up flushing startegy errors (ignored earlier).
          In asynch send (send_asynchronous_message_i), push remaining
          message to front of queue and only flush if timeout hasn't been
          already encountered.

Thu Feb  7 10:49:41 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Log/Basic/TLS_Client.cpp:
        * orbsvcs/orbsvcs/DsLogAdmin.idl:
        * orbsvcs/orbsvcs/Log/BasicLog_i.h:
        * orbsvcs/orbsvcs/Log/EventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.h:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogNotification.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogNotification.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:
          Layout and doxygen changes

Thu Feb  7 10:33:29 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Fixed a potential bug after refactor where an object was
          checked for nil after it was actually used.

Thu Feb  7 10:00:22 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_3215_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Bug_3215_Regression/server.cpp:

          As below.

Wed Feb  6 11:00:38 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_3216_Regression/Bug_3216_Regression.mpc:
        * orbsvcs/tests/Bug_3216_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_3216_Regression/ServerRequest_Interceptor.cpp:
        * orbsvcs/tests/Bug_3216_Regression/server.cpp:

          Fix deprecated macros and remove explicit solaris compile flags.

Wed Feb  6 10:34:41 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_3080/client.cpp:
          Fixed compile errors when interceptors are disabled

Wed Feb  6 10:05:41 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocalObject.cpp:
        * tao/LocalObject.h:
        * tao/Object.cpp:
        * tao/Object.h:
          Removed _get_implementation, it is deprecated with CORBA 2.2 and we
          always just return 0.

        * tao/Strategies/advanced_resource.cpp:
          Added TAO_DEFAULT_REACTOR_TYPE which is ACE_TP_Reactor by default. This
          way we can easily change the default reactor at the moment the
          strategies library is used.

Tue Feb  5 21:59:02 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:
        * tao/ORB_Core.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:

          Add a new ORB initialisation option '-ORBFTSendFullGroupTC'.
          When FT support is enabled this property controls the format of data
          transmitted in the IOP::FT_GROUP_VERSION service context in GIOP
          messages to IOGRs. The value '0' (this is the default value if the
          option is not supplied) transmits the group version only as per the
          CORBA spec (i.e. as defined in the IDL for
          FT::FTGroupVersionServiceContext). The value '1' will transmit
          instead the whole data found in the server IOGR's
          FT::TagFTGroupTaggedComponent tagged component in the context body.

          This fixes bugzilla bug #3216.

        * orbsvcs/tests/Bug_3216_Regression:
        * orbsvcs/tests/Bug_3216_Regression/Bug_3216_Regression.mpc:
        * orbsvcs/tests/Bug_3216_Regression/Hello.h:
        * orbsvcs/tests/Bug_3216_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_3216_Regression/README:
        * orbsvcs/tests/Bug_3216_Regression/ServerORBInitializer.h:
        * orbsvcs/tests/Bug_3216_Regression/ServerORBInitializer.cpp:
        * orbsvcs/tests/Bug_3216_Regression/ServerRequest_Interceptor.h:
        * orbsvcs/tests/Bug_3216_Regression/ServerRequest_Interceptor.cpp:
        * orbsvcs/tests/Bug_3216_Regression/Test.idl:
        * orbsvcs/tests/Bug_3216_Regression/client.cpp:
        * orbsvcs/tests/Bug_3216_Regression/run_test.pl:
        * orbsvcs/tests/Bug_3216_Regression/server.cpp:

          Regression test for the above.

Tue Feb  5 19:56:41 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_resource.h:
          Layout change

        * tao/LocalObject.cpp:
        * tao/LocalObject.h:
          Improved CORBA/e support

        * tao/ORB_Core.cpp:
          Updated a few ACE_DEBUG statements to have the normal formatting

        * tao/Parser_Registry.cpp:
          Guard against the fact that the resource factory could be zero. This
          could happen when there are issues with static initialisation

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Layout changes

        * tao/PortableServer/POA.pidl:
        * tao/PortableServer/RequestProcessingStrategy.h
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.h
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.h
        * tao/PortableServer/RequestProcessingStrategyServantActivator.h
        * tao/PortableServer/RequestProcessingStrategyServantManager.h
          CORBA/e and layout improvements

        * tao/TAO_Internal.cpp:
          Use prefix decrement

Mon Feb  4 15:02:41 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.h:
          Fixed compile warning with VxWorks 5.5

Mon Feb  4 13:42:29 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_3215_Regression/Bug_3215_Regression.mpc:
        * orbsvcs/tests/Bug_3215_Regression/Hello.h:
        * orbsvcs/tests/Bug_3215_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_3215_Regression/ServerORBInitializer2.h:
        * orbsvcs/tests/Bug_3215_Regression/ServerORBInitializer2.cpp:
        * orbsvcs/tests/Bug_3215_Regression/ServerRequest_Interceptor2.h:
        * orbsvcs/tests/Bug_3215_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Bug_3215_Regression/run_test.pl:

          Fix fuzz errors and weirdness involving disappearing run_test.pl
          contents.

Mon Feb  4 12:35:07 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2777_Regression:
        * orbsvcs/tests/Bug_2777_Regression/README:
        * orbsvcs/tests/Bug_2777_Regression/run_test.pl:

          Regression test for bug #2777.

        * tao/Strategies/SHMIOP_Profile.cpp:

          Avoid double incrment of object key pointer. This fixes bug #2777.

        * orbsvcs/tests/Bug_3215_Regression:
        * orbsvcs/tests/Bug_3215_Regression/Bug_3215_Regression.mpc:
        * orbsvcs/tests/Bug_3215_Regression/Hello.h:
        * orbsvcs/tests/Bug_3215_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_3215_Regression/README:
        * orbsvcs/tests/Bug_3215_Regression/ServerORBInitializer2.h:
        * orbsvcs/tests/Bug_3215_Regression/ServerORBInitializer2.cpp:
        * orbsvcs/tests/Bug_3215_Regression/ServerRequest_Interceptor2.h:
        * orbsvcs/tests/Bug_3215_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Bug_3215_Regression/Test.idl:
        * orbsvcs/tests/Bug_3215_Regression/client.cpp:
        * orbsvcs/tests/Bug_3215_Regression/run_test.pl:
        * orbsvcs/tests/Bug_3215_Regression/server.cpp:

          Regression test for bug #3215.

        * tao/Stub.inl:
        * tao/Stub.cpp:

          Prevent deletion of permanent location forward profiles when unwinding
          the forward stack on exception. This fixes bug #3215.

Sun Feb  3 19:48:41 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.h:
        * orbsvcs/orbsvcs/Trader.h:
        * orbsvcs/orbsvcs/IFR_Service_Utils_T.cpp:
          Fixes for CodeGear C++ Builder 2007 December 2007 update

Fri Feb  1 21:57:41 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * AnyTypeCode/Any_Unknown_IDL_Type.h:

          Patch submitted by Russell Mora
          <russell_mora at symantec dot com> to address the problem
          of Unknown_IDL_Type's static local lock object sometimes being
          destroyed before all instances of Unknown_IDL_Type. This fix
          closes [BUGID:3214].

Fri Feb  1 15:01:11 UTC 2008  Chris Cleeland  <cleeland@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/a.idl:
        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/b1.idl:
        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/b2.idl:

        * orbsvcs/tests/InterfaceRepo/Duplicate_Typedef_Test/test1.idl:
        * orbsvcs/tests/InterfaceRepo/Duplicate_Typedef_Test/test2.idl:
        * orbsvcs/tests/InterfaceRepo/Duplicate_Typedef_Test/test3.idl:

          Fixed missing RCS/CVS/SVN keywords that caused fuzz errors.

Fri Feb 01 14:15:00 UTC 2008  Simon Massey  <sma@prismtech.com>

        * tests/Big_Onewaysserver.cpp:
          Fixed possible shutdown race condition.

        * tests/Big_Twoways/server.cpp:
          Fixed possible shutdown race condition.

Thu Jan 31 19:12:00 UTC 2008  Chris Cleeland  <cleeland@ociweb.com>

        * orbsvcs/IFR_Service/be_global.h:
        * orbsvcs/IFR_Service/be_global.cpp:
        * orbsvcs/IFR_Service/be_produce.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Added in a new option, -T, to tao_ifr that warns but permits
          duplicate typedefs in submitted IDL rather than flagging it as
          an error.  This allows for backwards compatibility with IDL that
          used to be able to be processed by older versions of tao_ifr.

        * orbsvcs/tests/InterfaceRepo/Duplicate_Typedef_Test:
        * orbsvcs/tests/InterfaceRepo/Duplicate_Typedef_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Duplicate_Typedef_Test/test1.idl:
        * orbsvcs/tests/InterfaceRepo/Duplicate_Typedef_Test/test2.idl:
        * orbsvcs/tests/InterfaceRepo/Duplicate_Typedef_Test/test3.idl:

          Added a test for the new option.

        * NEWS: Updated to reflect recent commits.

Thu Jan 31 15:21:00 UTC 2008  Chris Cleeland  <cleeland@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression:
        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/a.idl:
        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/b1.idl:
        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/b2.idl:
        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/run_test.pl:

          Added regression test for [BUGID:3200] as promised.

        * orbsvcs/tests/InterfaceRepo/IDL_Test:
        * orbsvcs/tests/InterfaceRepo/IDL_Test/IFR.pm:
        * orbsvcs/tests/InterfaceRepo/IDL_Test/README:
        * orbsvcs/tests/InterfaceRepo/IDL_Test/run_test.pl:

          Added new stress test for IFR that runs the IFR with various
          IDL.  In its current unfinished form, this test uses the IDL
          files from the IDL compiler's "IDL_Test", but can easily be
          extended to use other files.

          The plan for the test is outlined in the README, though only
          phase 1 is currently implemented.

Thu Jan 31 12:05:00 UTC 2008  Simon Massey <sma@prismtech.com>

        * orbsvcs/tests/Security/Crash_Test/client.cpp
        * orbsvcs/tests/Security/Crash_Test/run_test.pl

          Make this test more robust to timing problems.
          (NOTE this does not correct the server's BAD_PARAM problem of
           previous build.)

Wed Jan 30 23:17:50 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/fe_extern.h:
        * TAO_IDL/be/be_produce.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/fe/fe_interface_header.cpp:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_string.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * orbsvcs/IFR_Service/be_produce.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          - Changed the name of exception FE_Bailout to
            Bailout. The original name implied that the
            exception could be used only in the front
            end of the IDL compiler, which was not the
            intention. Thanks to Chris Cleeland
            <cleeland at ociweb dot com> for the
            suggestion.

          - Removed increments of global internal error
            count before throwing Bailout, since the
            increment is now done in the catch block.

Wed Jan 30 21:30:49 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:

          Added local temporary variable in main() to hold the error
          count so it can be returned after the IDL_GlobalData class
          that contains it is destroyed as part of cleanup.

Wed Jan 30 20:13:18 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/util/utl_global.cpp:

          Cleaned up and made more consistent the way in which the
          global internal error count is updated, in conjunction
          with the use of the FE_Bailout exception. Thanks to Chris
          Cleeland <cleeland at ociweb dot com> for helpful input
          on this issue.

Wed Jan 30 18:34:02 UTC 2008  Chris Cleeland  <cleeland@ociweb.com>

        * TAO_IDL/tao_idl.cpp (main):

          Bump up the value of "status" when FE_Bailout is caught.  This
          insures that tao_ifr (and tao_idl) exit with a non-zero error
          condition whenever FE_Bailout is thrown.  The correct fix is to
          go through and find all the places where FE_bailout is thrown
          without incrementing the error count and fix those, but this
          will suffice for now.  The downside to this change is that the
          exit status is supposed to indicate the number of errors
          encountered, and this change could make it be higher than actual
          errors.  I tend to think that this is a better alternative to
          what we had before, which is that the exit status could indicate
          a LOWER number of errors...namely, zero.

Tue Jan 29 22:55:23 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/be_produce.cpp(BE_ifr_repo_init):

          Added catch block for CORBA::ORB::InvalidName exception, which
          is what will be thrown if no -ORBInitRef option is passed to
          the IFR loader and multicast fails. In this catch block, the
          error count is incremented (which affects the return value of
          main()) and the FE_Bailout exception is thrown so proper
          cleanup will happen.

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp(element_type):

          One of two things happens in this method - either the element
          type is visited or its repo id is looked up. If either action
          fails, we now increment the global error count and throw
          FE_Bailout, to get proper cleanup and exit value.

        Thanks to Chris Cleeland <cleeland at ociweb dot com> for
        reporting these bugs.

Fri Jan 25 18:45:53 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * NEWS:

          Added notes about this new feature.

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:

          Merging a feature from OCITAO 1.5a into DOC. A Naming Service
          started with flat-file persistence (-u) will now allow for
          iteration of its contents using list().

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:

          Fixed a bug where we ignored reference counting and just
          called delete.

        * orbsvcs/tests/Simple_Naming/client.h:
        * orbsvcs/tests/Simple_Naming/client.cpp:
        * orbsvcs/tests/Simple_Naming/run_test_ffp.pl:

          Added an additional test for a flat-file persistence Naming
          Service. Use the results of previous tests as well as bind
          new entries to validate iterator functionality.

Wed Jan 23 20:51:11 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp(visit_array):

          Fixed bug when processing an anonymous array member whose base
          type is declared as part of the array declaration itself. Very
          unusual IDL, but legal. This fix closes [BUGID:3203], thanks
          to Chris Cleeland <cleeland_c at ociweb dot com> for reporting it.

        * orbsvcs/IFR_Service/ifr_adding_visitor_structure.cpp:

          Corrected mistake in comment.

Tue Jan 22 14:34:51 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * TAO_IDL/util/utl_global.cpp:
          Fixed a problem with the fix for bug 3154 that existed on
          Windows and also fixed a more dangerous bug where iterator
          used in a cycle was not advanced while I was trying to optimize
          the work of that cycle.

Mon Jan 21 17:45:12 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Big_Oneways/server.cpp:
          POA manager activation before IOR distribution closes a failure
          window. Clients could fail trying to narrow a reference before
          the POA is in accept state.

Mon Jan 21 16:43:51 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/Oneway_Timeouts/run_test.pl:

          This one perl script runs a number of sub-tests.  If any one fails,
          print an error message but continue, making sure to return nonzero
          from the perl script.

Mon Jan 21 06:11:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocateRequest_Invocation_Adapter.cpp:
          Check whether we have a transport before using it. This fixes
          bugzilla 3198

        * tao/Policy_Current.h:
          Fixed incorrect file documentation

Fri Jan 18 19:52:51 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp(visit_interface):

          Added additional check before destroying the IFR contents of
          an interface entry that has not been previously forward
          declared. If the interface is from an included IDL file, we
          leave the contents alone. Thanks to Chris Cleeland
          <cleeland at ociweb dot com> for reporting the problem that
          results when another IDL file with the same included file is
          processed and the contents of the interface (an operation for
          example) are not found in the IFR.

Fri Jan 18 09:57:52 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/Bug_3154_Regression/run_test.pl:
        * TAO_IDL/util/utl_global.cpp:
          Updated a fix for bug 3154 with respect to the problem
          that was found lately. I.e. application of custom endings
          to ORB files when user provides ORB specific include paths
          either with -I option on in INCLUDE environment variable.
          The test is updated as well.

Wed Jan 16 20:16:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3198_Regression/bug_3198_regression.cpp:
          Check whether we get the transient exception as we should

        * tests/Exposed_Policies/client.cpp:
          use prefix increment

Wed Jan 16 20:02:29 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/constants.idl:

          Added example IDL mentioned in

          Wed Jan 16 19:31:54 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

Wed Jan 16 19:31:54 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_expression.cpp:

          Fixed bug in coercion of typedef'd unsigned short IDL constant,
          having an rhs consisting of a bitwise OR expression made up
          of previously declared constants of the same type. Thanks to
          Nayeem Khan <d dot nayeem dot khan at gmail dot com> for
          reporting the problem and supplying example IDL.

Wed Jan 16 19:22:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CSD_Framework/CSD_POA.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.h:
        * tao/CSD_Framework/CSD_Strategy_Proxy.h:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.h:
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Task.h:
          Layout changes

        * tao/default_resource.{h,cpp}:
          Changed dynamically_allocated_reactor to a real bool

        * tao/orbconf.h:
          Fixed typo in comment

        * tao/Transport_Cache_Manager.cpp:
          Layout and const changes

Wed Jan 16 18:12:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3198_Regression/*:
          New test, thanks to Hans Utz <hutz at arc dot nasa dot gov>
          for reporting this problem

        * orbsvcs/tests/Security/Big_Request/client.cpp:
          Added -x option to indicate that the client has to shutdown the
          server

        * orbsvcs/tests/Security/Big_Request/run_test.pl:
          Added -x

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
          Layout changes and corrected an ACE_DEBUG to be an ACE_ERROR

        * tests/Bug_2826_Regression/bug_2826_regression.cpp:
          No need to pass in an empty orb name

Tue Jan 15 19:49:31 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Bug_3193_Regression/test_i.h:
        * tests/Bug_3193_Regression/test_i.cpp:
          Remove Fuzz build errors.

Tue Jan 15 19:05:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:
          Const changes

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.cpp:
          Initialise some pointers with 0

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
          Const changes and use ACE_ERROR

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
          Layout changes

        * orbsvcs/tests/Security/Big_Request/client.cpp:
          Extended this client to be able to specify the number of
          iterations and the size of the data send

        * orbsvcs/tests/Security/Big_Request/TX_Object.idl:
          Use CORBA::OctetSeq

        * orbsvcs/tests/Security/Big_Request/TX_Object_i.cpp:
          Layout changes

Tue Jan 15 18:33:20 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Bug_3193_Regression:
          New regression for Bug 3193.

Mon Jan 14 14:02:44 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:
          Changed a bit a fix for bug 3165. It happens that ASN1_INTEGER_to_BN
          unconditionally allocates BIGNUM and thus that BIGNUM has to be
          freed unconditionally too.

Mon Jan 14 01:04:17 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/TAO_IDL.mwc:
          Reverted previous changes at the request of Adam Mitz. This change
          interfered with the OCI autobuilds.

Sun Jan 13 18:44:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3108_Regression/client.cpp:
        * tests/DSI_AMH/Roundtrip.cpp:
          Fixed conversion warnings

Wed Jan  9 11:54:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Servant_To_Reference_Test/run_test.pl:
        * tests/Servant_To_Reference_Test/server.cpp:
          When the server has started it writes a dummy ior file, that way
          we can correctly handle the slow startup of the vxworks tests. Then
          we can use the original timeout of 90 seconds again

Tue Jan  8 21:56:58 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/TAO_IDL.mwc:
          Filled this file to make it useful.  Builds all necessary dependencies
          for tao_idl, which is useful in cross-compile builds.

Tue Jan  8 10:11:48 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/PortableServer/Active_Policy_Strategies.inl:
        * tao/PortableServer/Active_Policy_Strategies.h:
        * tao/PortableServer/Root_POA.cpp:
          Fixed bug 3184 which was about leaks of POA manager and strategies
          in active_policy_strategies_ inside TAO_Root_POA constructor in
          case if exception is thrown in that constructor.

Mon Jan  7 15:43:12 UTC 2008  Martin Corino <mcorino@remedy.nl>

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
          Added space to fix compile warning with VC71.

        * tao/DynamicInterface/Unknown_User_Exception.cpp:
          Added missing 'return';

Mon Jan  7 12:56:12 UTC 2008  Martin Corino <mcorino@remedy.nl>

        * tao/PortableServer/Collocated_Arguments_Converter.h:
        * tao/Messaging/AMI_Arguments_Converter_Impl.{h, cpp}:
        * tao/DynamicInterface/DII_Arguments_Converter.{h, cpp}:
          Implemented new conversion methods for collocation in combination
          with DSI which follows a different path from 'normal' servants and
          requires slightly different functionality.

        * tao/DynamicInterface/DII_Invocation_Adapter.{h, cpp}:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/DynamicInterface/Unknown_User_Exception.{h, cpp}:
          Various changes to fix problems with (DII +) DSI + Collocation.
          Problems were visible in the failing DII_Collocation_Tests/twoway
          tests (all platforms) and testing done with R2CORBA which is
          implemented using DII and DSI.

Sun Jan  6 19:05:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Abstract_Interface/client.cpp:
        * tests/Abstract_Interface/run_test.pl:
        * tests/Abstract_Interface/server.cpp:
        * tests/Abstract_Interface/test.idl:
        * tests/Abstract_Interface/test_i.cpp:
        * tests/Abstract_Interface/test_i.h:
          Reworked this test so that the client does a shutdown of the
          server.

        * tests/Bug_2234_Regression/client.cpp:
        * tests/Bug_3108_Regression/client.cpp:
        * tests/DII_AMI_Forward/DII_ReplyHandler.cpp:
          Fixed conversion warning

        * tests/Multiple/run_test.pl:
          Removed not needed code

Sun Jan  6 07:36:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:
          Fixed conversion warning

        * tao/Dynamic_Adapter.h:
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.h:
          Layout changes

Fri Jan  4 10:33:21 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/ORB_Core.cpp:
          Removed a check for nil of implrepo_service_ before releasing
          it that I intoduced with a fix of bug 3181. The fix was actully
          about moving the release of implrepo_service_ object from
          TAO_ORB_Core::fini() which is called only when orb core's counter
          reachs zero and which never happens till implrepo_service_ exists
          to TAO_ORB_Core::shutdown().

Fri Jan  4 09:38:32 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/Messaging/Messaging_ORBInitializer.cpp:
          Fixed a potential memory leak which can occur if
          TAO_Messaging_ORBInitializer::register_value_factory is called
          more than once. Currently I don't know any setup where this
          can happen but still the code was unsafe and had to be fixed.

Fri Jan  4 09:30:14 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/ORB_Core.cpp:
          Fixed a bug 3181.

Thu Jan  3 14:36:18 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/orbsvcs/ssliop_params_dup.mpb:

          Fixed a fuzz error.

Thu Jan  3 10:14:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/client.{h,cpp}:
          Fixed compile problems with VxWorks

Thu Jan  3 10:04:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Fixed may be unitialized warnings with VxWorks 6.6

Thu Jan  3 09:57:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Prefix increment and moved some variables into the loop
          where they are used

Mon Dec 31 16:43:40 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/ssliop_params_dup.mpb:

          Make the decision of params_dup.c vs. params_dup.cpp based on the
          presence/absence of the mfc feature instead of the type of the mpc
          project.  Only mfc builds require params_dup.cpp, and it causes build
          errors in (non-mfc) vc71 builds with the latest OpenSSL (0.9.8g).

Thu Dec 20 15:01:48 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tao/CSD_ThreadPool/CSD_TP_Task.h:
        * tao/CSD_ThreadPool/CSD_TP_Task.inl:

          Resolved errors from the Borland compiler.

Wed Dec 19 17:15:19 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tao/CSD_ThreadPool/CSD_TP_Task.h:
        * tao/CSD_ThreadPool/CSD_TP_Task.inl:
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:

          Fixed a bug in my prior check-in of this code.  The case where the
          thread calling close(1) is also a CSD ThreadPool thread was not
          previously covered.

        * tests/CSD_Collocation/CSD_Collocation.mpc:
        * tests/CSD_Collocation/Diamond_i.h:
        * tests/CSD_Collocation/run_test.pl:

          Simplified the test down to one executable, no shared libraries.

        * tests/CSD_Collocation/diamond_export.h:
        * tests/CSD_Collocation/stub_export.h:

          Removed these files.

Wed Dec 19 09:31:59 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * orbsvcs/IFR_Service/IFR_Service.h:
        * orbsvcs/IFR_Service/IFR_Server.cpp:
        * orbsvcs/IFR_Service/IFR_Service.cpp:
          Fixed bug 3175.

Tue Dec 18 20:21:05 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_interface_header (check_concrete_supported_inheritance):

          Fixed bug in the logic of this method, which checks
          valuetypes that support a concrete interface to make sure
          that, if the supported interface has ancestors, that all
          its ancestors are supported by the valuetype's ancestors.

Tue Dec 18 14:38:22 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/CSD_Collocation/CSD_Collocation.mpc:

          Exclude this test from minimum CORBA.

Tue Dec 18 12:09:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Queued_Message.{h,cpp,inl}:
          Added new inline file

Tue Dec 18 10:45:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3171_Regression/*:
          New regression provided by Joe Seward <joseph dot f dot seward at saic dot com>
          for providing this test. This bug is not fixed yet.

Tue Dec 18 10:11:20 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * orbsvcs/orbsvcs/IFRService/Options.cpp:
          Fixed two memory leaks in Options::parse_args in handling
          of string arguments.

Tue Dec 18 07:53:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CDR.{h,cpp,inl}:
        * tao/Remote_Invocation.{h,cpp}:
          Updated message_semantics

        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
          Added needed include to fix GCC 4 errors

        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
          Reordered includes

Mon Dec 17 20:02:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.h
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.h
        * tao/IIOP_Transport.cpp
        * tao/IIOP_Transport.h
        * tao/Strategies/COIOP_Transport.cpp
        * tao/Strategies/COIOP_Transport.h
        * tao/Strategies/DIOP_Transport.cpp
        * tao/Strategies/DIOP_Transport.h
        * tao/Strategies/SCIOP_Transport.cpp
        * tao/Strategies/SCIOP_Transport.h
        * tao/Strategies/SHMIOP_Transport.cpp
        * tao/Strategies/SHMIOP_Transport.h
        * tao/Strategies/UIOP_Transport.cpp
        * tao/Strategies/UIOP_Transport.h
        * tao/Transport.cpp
        * tao/Transport.h
          Changed message_semantics to a real enum, this fixes bugzilla
          2992

        * tao/Bind_Dispatcher_Guard.h:
        * tao/Bind_Dispatcher_Guard.inl:
          Changed status to TAO_Bind_Dispatcher_Status instead of int

        * tao/IIOP_Connection_Handler.cpp:
          Const changes

        * tao/ORB.cpp:
          Use true/false instead of 1/0

        * tao/ORB.h:
          Documentation change

        * tao/ORB_Core.cpp:
          Layout change

        * tao/Resume_Handle.h:
          Doxygen change

Mon Dec 17 16:39:01 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:

          Fixed a bug where the CSD ThreadPool would not get properly
          re-initialized after destroying and re-initing the ORB.

        * tests/CSD_Collocation:
        * tests/CSD_Collocation/CSD_Collocation.mpc:
        * tests/CSD_Collocation/Collocation.cpp:
        * tests/CSD_Collocation/Collocation_Tester.h:
        * tests/CSD_Collocation/Collocation_Tester.cpp:
        * tests/CSD_Collocation/Diamond.idl:
        * tests/CSD_Collocation/Diamond_i.h:
        * tests/CSD_Collocation/Diamond_i.cpp:
        * tests/CSD_Collocation/README:
        * tests/CSD_Collocation/diamond_export.h:
        * tests/CSD_Collocation/run_test.pl:
        * tests/CSD_Collocation/stub_export.h:
        * tests/CSD_Collocation/svc.conf:
        * tests/CSD_Collocation/svc.conf.csd:
        * tests/CSD_Collocation/svc.conf.xml:

          Test case for this bug.

Mon Dec 17 13:55:00 UTC 2007  Simon Massey  <simon.massey@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/Bug_3174_Regression.mpc:

          REMOVE the redundant include path!

Mon Dec 17 13:40:00 UTC 2007  Simon Massey  <simon.massey@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/Bug_3174_Regression.mpc:

          CORRECT the mpc name!

Mon Dec 17 12:35:00 UTC 2007  Simon Massey  <simon.massey@prismtech.com>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/Bug_3155_Regression.mpc:
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/ReadMe.txt:
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/test.idl:
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/test_idl.cpp:

          Fixed bugzilla 3174.

Mon Dec 17 08:35:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:
          Fixed memory leaks in the SSLIOP implementation, thanks to
          Venkat Sidhabathuni <venkats at idengines dot com> for providing
          the patches. This fixes bugzilla 3165

Mon Dec 17 08:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
          Fixed compile error

Sun Dec 16 19:53:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
          Doxygen changes

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
          Const and layout changes

Sun Dec 16 19:49:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
          Always generate SystemException.h in the stub source file and
          slightly changed the generated encode/decode operations.
          This fixes bugzilla 3158, thanks to JT  Conklin for reporting
          this

Fri Dec 14 02:48:57 CST 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.6.2 released.

Wed Dec 12 14:27:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Redirection/run_test.pl:
          Improved this script for VxWorks

Wed Dec 12 14:20:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_3079/run_test.pl:
          Fixed bug in VxWorks specific part of this script

Wed Dec 12 13:22:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Reply/server.cpp:
          Added -t argument to specify the number of threads used in the
          server.

Tue Dec 11 21:11:16 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * NEWS:
          Added bug fix in

          Tue Dec 11 20:31:39 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

Tue Dec 11 20:37:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/TransportCurrent/lib/Current_Test_Lib.mpc:
        * tests/TransportCurrent/Framework/run_test.pl:
        * tests/TransportCurrent/IIOP/run_test.pl:
          Install the test lib in the regular ACE_ROOT/lib directory, that
          simplifies the perl scripts and fixes the test failures on
          VxWorks

        * tests/LongDouble/run_test.pl:
          Improved for VxWorks

 Tue Dec 11 20:31:39 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_declarator.cpp:

          Fixed bug in checking for illegal use of undefined forward
          declared structs and unions. Thanks to Simon Massey
          <Simon dot Massey at prismtech dot com> for reporting the
          bug.

Tue Dec 11 20:28:06 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * NEWS:
          Added my checkins since the last beta.

Tue Dec 11 20:13:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Two_Objects/client.cpp:
        * tests/Two_Objects/run_test.pl:
        * tests/Two_Objects/Second_i.cpp:
        * tests/Two_Objects/server.cpp:
        * tests/Two_Objects/worker.cpp:
        * tests/Two_Objects/worker.h:
          Let the client shutdown the server instead of having a fixed time
          to run the ORB. This fixes the failing of this test on VxWorks
          and slower systems.

Tue Dec 11 18:55:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
          Layout change

        * orbsvcs/tests/Security/Big_Request/client.cpp:
          No need to pass in an empty ORB name

        * orbsvcs/tests/Security/Big_Request/server.cpp:
          Added -t argument to specify the number of threads used in the
          server. We observed that when using multiple threads the performance
          of SSLIOP drops with a factor of about 20 times. With this
          change we can retest this performance drop on all platforms

Mon Dec 10 08:13:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTCORBA/Thread_Pool.inl:
        * docs/rtcorba/features.html:
          Added new RTORBDynamicThreadRunTime which can be specified through
          the RT_ORB_Loader. This requires a long argument which speficies the
          number of microseconds the dynamic thread will run. After the time
          has elapsed it will end automatically.

Sat Dec  8 14:53:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Dynamic_Thread_Pool/run_test.pl:
          No need to create a logfile on disk

        * tests/Server_Connection_Purging/run_test.pl:
          Simplified this file

Sat Dec  8 14:35:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Thread_Pool.cpp:
          Use orb->run() for the dynamic threads that have an idle timeout, the
          work_pending/perform_work loop causes signifant additional CPU load. We
          do run the ORB for the specified idle timeout

        * tao/RTCORBA/Thread_Pool.h:
          Layout changes

Thu Dec  6 15:26:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
          Layout and const changes

Thu Dec  6 15:10:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/BiDirectional/run_test.pl
        * tests/Big_Oneways/run_test.pl
        * tests/DIOP/run_test.pl
        * tests/DIOP/run_test_ipv6.pl
        * tests/MT_BiDir/run_test.pl
        * tests/Nested_Event_Loop/run_test.pl
          Don't use ORBDottedDecimalAddresses 1 on VxWorks, it is a workaround
          for a DNS issue in the network stack

        * tests/Big_Oneways/run_test.pl
        * tests/Big_Request_Muxing/Client_Task.cpp:
          Layout change

        * tests/Big_Reply/server.cpp:
        * tests/Big_Twoways/server.cpp:
          Initialise pointer with 0

        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
          Added vc9

        * tests/Smart_Proxies/Policy/run_test.pl:
          Increased timeouts for VxWorks

Wed Dec  5 14:49:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Connector.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
          Layout and const changes

Tue Dec  4 18:53:08 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_2234_Regression/client.cpp:

          Used CORBA::ULong instead of integer literals to
          index into IDL array vars.

Tue Dec  4 15:41:37 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * docs/tutorials/Quoter/RTCORBA/Distributor_i.h:
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h:
        * orbsvcs/PSS/PSDL_Scope.cpp:

          Replaced ACE_Thread_Mutex with TAO_SYNCH_MUTEX to comply with TAO
          coding standards and to silence fuzz warnings.

Tue Dec  4 14:54:02 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_2234_Regression/Test.idl:
        * tests/Bug_2234_Regression/client.cpp:
        * tests/Bug_2234_Regression/server.cpp:

          Extended this test to also pass arrays (of variable-length elements)
          and object references to ensure that the interceptors don't cause a
          crash.  This was fixed in bug 2852.

        * tests/Bug_3163_Regression/server.cpp:

          Use CORBA::ULong to index sequences, for 64-bit compatibility.

Tue Dec  4 10:59:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
          Only set the safe_rd when we have a transport

Mon Dec  3 21:25:15 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp(gen_gperf_lookup_methods):

          - Added "Error:" prefix to error messages where it was missing,
            so autobuilds can pick it up. Thanks to Will Otte
            <wotte at dre dot vanderbilt dot edu> for the suggestion.

          - Added the exit code of the spawned gperf process to the error
            message seen if ACE_Process::wait() returns unsuccessfully
            after spawning gperf to generate the interface's operation table.

Mon Dec  3 20:36:42 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:

          Changes required to handling of base component and base valuetype
          storage in the IFR resulting from changes in

          Thu Nov 29 23:58:21 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

Mon Dec  3 19:39:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3163_Regression/*:
          New regression test, reworked version as provided by
          Andre Kostur <akostur at incognito dot com> It runs perfect
          on my Windows system, let the scoreboard show what happens
          on other platforms

Mon Dec  3 18:53:48 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.h:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.h:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.cpp:

          Reverted unintended commit.

Mon Dec  3 18:05:43 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.h:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.h:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:

          Parts of TAO use TAO_SYNCH_MUTEX while other parts use ACE_SYNCH_MUTEX.
          All occurrences of ACE_SYNCH_MUTEX were replaced with TAO_SYNCH_MUTEX for
          consistency.

Mon Dec  3 16:23:58 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/CSD_Strategy/ThreadPool/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool2/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool3/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool4/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool5/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool6/OrbShutdownTask.h:
        * examples/RTCORBA/Activity/Task_Stats.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/MIF_Scheduler/test.cpp:
        * examples/RTScheduling/Task_Stats.cpp:
        * orbsvcs/orbsvcs/AV/sfp.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.cpp:
        * orbsvcs/tests/Notify/lib/LookupManager.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:
        * tests/Bug_2417_Regression/publisher_impl.cpp:

          Replaced ACE_Thread_Mutex with TAO_SYNCH_MUTEX to comply with TAO
          coding standards and to silence fuzz warnings.

Mon Dec  3 13:49:18 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/CSD_Strategy/ThreadPool2/FooServantList.h:
        * examples/CSD_Strategy/ThreadPool4/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool5/FooServantList.h:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/examples/LoadBalancing/RPS_Monitor.h:
        * orbsvcs/examples/LoadBalancing/RPS_Monitor.cpp:
        * orbsvcs/examples/LoadBalancing/ServerRequestInterceptor.h:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Update_Manager.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Update_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.cpp:
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.h:
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp:
        * orbsvcs/orbsvcs/Notify/Random_File.h:
        * orbsvcs/orbsvcs/Notify/Random_File.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.h:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Standard_Event_Persistence.h:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/RPS_Monitor.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/RPS_Monitor.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ServerRequestInterceptor.h:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/client.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * performance-tests/CSD_Strategy/TestInf/AppShutdown.h:
        * performance-tests/CSD_Strategy/TestInf/ClientEngine.h:
        * performance-tests/CSD_Strategy/TestInf/ClientTask.h:
        * performance-tests/RTCorba/Thread_Pool/client.cpp:
        * tests/Big_Oneways/Session.h:
        * tests/Big_Oneways/Session.cpp:
        * tests/Big_Oneways/Session_Control.h:
        * tests/Big_Oneways/Session_Control.cpp:
        * tests/Big_Twoways/Session.h:
        * tests/Big_Twoways/Session.cpp:
        * tests/Big_Twoways/Session_Control.h:
        * tests/Big_Twoways/Session_Control.cpp:
        * tests/Bug_1020_Basic_Regression/Echo.h:
        * tests/Bug_1020_Basic_Regression/Echo.cpp:
        * tests/Bug_1361_Regression/Echo.h:
        * tests/Bug_2805_Regression/client.cpp:
        * tests/Bug_2909_Regression/client.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/AppShutdown.h:
        * tests/CSD_Strategy_Tests/TP_Common/ClientEngine.h:
        * tests/CSD_Strategy_Tests/TP_Common/ClientTask.h:
        * tests/MT_BiDir/Receiver_i.cpp:
        * tests/MT_BiDir/Sender_i.cpp:
        * tests/Muxed_GIOP_Versions/server.cpp:
        * tests/Muxing/Receiver.h:
        * tests/Muxing/Receiver.cpp:
        * tests/Stack_Recursion/Sender.h:
        * tests/Stack_Recursion/Sender.cpp:

          Parts of TAO use TAO_SYNCH_MUTEX while other parts use ACE_SYNCH_MUTEX.
          All occurrences of ACE_SYNCH_MUTEX were replaced with TAO_SYNCH_MUTEX for
          consistency.

Sun Dec  2 16:10:32 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.h:
        * tao/CSD_ThreadPool/CSD_TP_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State.h:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State_Map.h:
        * tao/CSD_ThreadPool/CSD_TP_Synch_Helper.h:
        * tao/MMAP_Allocator.h:
        * tao/Messaging/AMH_Response_Handler.h:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTCORBA/Thread_Pool.cpp:

          Parts of TAO use TAO_SYNCH_MUTEX while other parts use ACE_SYNCH_MUTEX.
          All occurrences of ACE_SYNCH_MUTEX were replaced with TAO_SYNCH_MUTEX for
          consistency.

Sat Dec  1 17:41:00 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/orbconf.h:
          Disable fuzz check for ACE_SYNCH_MUTEX in a section of the code
          were we define TAO_SYNCH_MUTEX in terms of ACE_SYNCH_MUTEX.

Fri Nov 30 20:23:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Multiple/client.cpp:
        * tests/Multiple/run_test.pl:
        * tests/Multiple/server.cpp:
          Pass IOR filename through the commandline

Fri Nov 30 14:10:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/run_test.pl:

          Correct TAO_ROOT's.

Fri Nov 30 11:50:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/Bug_3155_Regression.mpc:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/ReadMe.txt:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/test.idl:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/test_idl.cpp:

          Removed new regression test (wrong place)

Fri Nov 30 11:43:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Bug_3155_Regression/Bug_3155_Regression.mpc:
        * tests/Bug_3155_Regression/ReadMe.txt:
        * tests/Bug_3155_Regression/run_test.pl:
        * tests/Bug_3155_Regression/test.idl:
        * tests/Bug_3155_Regression/test_idl.cpp:

          Removed new regression test (wrong place)

Fri Nov 30 06:42:17 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/Bug_2953_Regression/run_test.pl:

          Fix typo in error message.

Fri Nov 30 00:38:11 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/be/be_visitor_template_export.cpp:
        * examples/RTScheduling/Task_Stats.inl:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:
        * tao/Codeset/Codeset_Translator_Factory_T.cpp:
        * tests/Bug_2677_Regression/server.cpp:
        * tests/Bug_2735_Regression/server.cpp:
        * tests/Bug_2936_Regression/bug2936.cpp:
        * tests/Param_Test/options.cpp:

          Add #include "ace/Log_Msg.h".

        * tao/AnyTypeCode/Struct_TypeCode.cpp:
        * tao/PolicyC.cpp:

          Add #include "tao/SystemException.h"

        * tao/DiffServPolicy/Server_Network_Priority_Policy.cpp:
        * tao/DynamicInterface/DII_Arguments_Converter_Impl.cpp:
        * tao/IORManipulation/IORManip_IIOP_Filter.cpp:
        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
        * tao/Messaging/ExceptionHolder_i.cpp:

          Add #include "tao/CDR.h"

        * tao/DynamicAny/DynUnion_i.cpp:

          Add #include "tao/DynEnum_i.h"

        * tao/GIOP_Message_Base.h:
        * tao/Invocation_Base.h:
        * tao/Messaging/AMH_Response_Handler.h:
        * tao/operation_details.h:

          Add #include "tao/Exception.h"

        * tao/Request_Dispatcher.h:

          Add #include "tao/TAO_Export.h"

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Statistic_Registry.cpp:

          Add #include "tao/TAO_Singleton_Manager.h"

        * tests/Bug_1383_Regression/SimpleClient.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/client.cpp:

          Add #include "ace/Thread.h"

        * tests/Param_Test/anyop.cpp:

          Add #include "tao/Stub.h"

        These headers are included implicitly by template *.cpp files on
        platforms where ACE_TEMPLATES_REQUIRE_SOURCE, but are needed for
        those that don't.

Thu Nov 29 23:58:21 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:

          Fixed bug in storing parent information in the IFR for types
          with a single parent (valuetypes and components). Thanks to
          Simon Massey <simon dot massey at prismtech dot com> for reporting
          the problem with valuetypes.

Thu Nov 29 16:58:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Bug_3155_Regression/Bug_3155_Regression.mpc:
        * tests/Bug_3155_Regression/ReadMe.txt:
        * tests/Bug_3155_Regression/run_test.pl:
        * tests/Bug_3155_Regression/test.idl:
        * tests/Bug_3155_Regression/test_idl.cpp:

          Create new regression test.

Thu Nov 29 14:58:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Fixed GCC warning when ACE_INITIALIZE_MEMORY_BEFORE_USE is defined

Thu Nov 29 14:46:49 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/PortableServer/Root_POA.cpp:
          Fixed a memory leak described by Bug#3151. However, it's
          difficult to provide an automated test for this bug since
          it lies in refcounting of root POA.

Thu Nov 29 04:23:58 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DSI_AMH/Roundtrip.cpp:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:
          Fix to the ServerRequest argument ownership to avoid a double
          delete situation which crashes these tests on HPUX.

Wed Nov 28 12:59:33 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/Bug_3154_Regression/orbsvcs/CosNotification.idl:
        * tests/Bug_3154_Regression/test.idl:
        * tests/Bug_3154_Regression/run_test.pl:
          Added Id to these files to make fuzz check happy.

Wed Nov 28 10:42:20 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/Bug_3154_Regression/orbsvcs/CosNotification.idl:
        * tests/Bug_3154_Regression/test.idl:
        * tests/Bug_3154_Regression/run_test.pl:
        * tests/Bug_3154_Regression/README:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/util/utl_global.cpp:
          Added a test and implementation of the feature described
          by Bug#3154.

Wed Nov 28 07:33:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/LoadBalancer/Signal_Handler.{h,cpp}:
          Updated activate method because of new argument in the base
          class

Tue Nov 27 16:02:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
          Layout changes and improved some debug messages

Tue Nov 27 15:56:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.cpp:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
          Layout changes

        * tao/IIOP_Transport.cpp:
        * tao/Transport.cpp:
          Layout changes and improved some debug messages

        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/Thread_Per_Connection_Handler.h:
          No need to use ACE_Task<>, just use ACE_Task_Base, we don't need
          the message queue. Also removed the activate method, just use the
          method from the base

Tue Nov 27 14:55:14 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/AMI/FL_Callback/FL_Callback.mpc:

          Added explicit lists of header and inline files to the project.

Tue Nov 27 11:20:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/DynamicInterface/DII_Invocation.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Endpoint_Selectors.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Synch_Invocation.h:
          Reworked the fix for bug 2133/3079/3080 in such a way that the
          Transport Current code is working again (see bug 3127)

Tue Nov 27 06:33:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/UDP.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.cpp:
          Don't use the deprecated ACE_SOCK_Dgram_Mcast methods

Mon Nov 26 19:31:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
          Don't use the deprecated ACE_SOCK_Dgram_Mcast methods

Fri Nov 23 20:32:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/UIOP_Transport.cpp:
          Corrected debug statements

Fri Nov 23 19:33:54 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
          Prefix increment

        * orbsvcs/orbsvcs/SSLIOP.mpc:
          Updated for vc9

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
          Corrected debug statement

        * tao/SystemException.cpp:
          Prefix decrement

        * tests/CodeSets/simple/client.cpp:
          No need to pass an empty orb name

        * tests/Param_Test/server.cpp:
          Layout change

Thu Nov 22 05:32:24 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/Bug_1551_Regression/server.cpp:
        * tests/Bug_2503_Regression/server.cpp:

          Fetch the high res timer's global scale factor to ensure it is
          calibrated (if necessary on this platform) at the beginning of
          the test.  While the timer would otherwise be calibrated on
          first use, this introduces delay in the middle of the test's
          execution.  This leads to failures due to timing assumptions
          (timeouts, etc.) within the test itself.

Thu Nov 22 04:54:58 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Add conditionals needed to add ZLIB/ZZIP libraries for
          TAO_CosNotification_Persist library iff used by build.

Thu Nov 15 20:37:24 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.cpp:
          Work around for bug 2980. Create the MC ORB in the parent thread
          and pass to the ORBTask.
          Setup a barrier to synch the parent and child threads. This
          holds the parent thread till child initialization is completed.

Wed Nov 14 18:52:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TransportCurrent/lib/Client_Request_Interceptor.cpp:
          Don't try to catch NoContext, TC is broken at this moment after the change
          of Mon Nov 12 08:54:21 UTC 2007. Will work on a revised change
          which also should make the change to this test not needed. The
          test will then fail on the scoreboard until the change is in
          the repo.

Wed Nov 14 12:42:08 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
          Fixed 2 memory leaks that was happening because the value
          returned by activate_server_i(...) was ignored.

Tue Nov 13 22:27:17 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tao/TransportCurrent/IIOP_Current_Impl.h:
        * tao/TransportCurrent/IIOP_Current_Impl.cpp:

        Updated comments to reflect the implementation changes in:
        Mon Nov 12 08:54:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

Mon Nov 12 17:54:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/LongUpcalls/run_test.pl:
        * tests/Multiple/run_test.pl:
          Improved for VxWorks

Mon Nov 12 17:44:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/simple/run_test.pl:
          Added support for VxWorks cross platform testing

        * tests/RTCORBA/MT_Client_Protocol_Priority/run_test.pl:
          Simplified this script

Mon Nov 12 13:59:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2174_Regression/run_test.pl:
        * tests/Bug_2183_Regression/run_test.pl:
        * tests/Bug_2234_Regression/run_test.pl:
        * tests/Bug_2328_Regression/run_test.pl:
        * tests/Bug_2804_Regression/run_test.pl:
          Improved VxWorks cross platform testing

Mon Nov 12 13:02:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1361_Regression/run_test.pl:
          Use PerlACE::wait_interval_for_process_creation

Mon Nov 12 11:48:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2289_Regression/run_test.pl:
          Added support for VxWorks cross platform testing

        * tests/Bug_2936_Regression/run_test.pl:
        * tests/Bug_2953_Regression/run_test.pl:
          Simplified these files

Mon Nov 12 09:48:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2869_Regression/run_test.pl:
          Simplified this file

Mon Nov 12 09:25:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2734_Regression/*:
          Build client/server here instead of using them from a different test.
          Fixes issues on VxWorks

Mon Nov 12 08:54:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

          Changed the way how portable interceptors relate to connection
          establishment. A few years ago the connection was setup after the
          send_request client interceptor call, this was changed with some
          refactoring. The send_request was now called after the connection
          establishment, as a result, if the connection establishment failed,
          the receive_exception method on the client request interceptor
          wasn't called. With this behaviour it is not possible to implement
          a FT app with just interceptors, you need a TAO specific endpoint
          selector. The change I made is to move the connection establishment
          after the send_request. As a result in the send_request it can
          happen that there is no transport selected, at that moment
          retrieving transport current (which is TAO specific) will give a
          NoContext exception.

          This fixes bugzilla 2133, 3079, and 3080. Thanks to Simon McQueen
          and Jaiganesh Balasubramanian for reporting these issues.

        * tao/Synch_Invocation.cpp:
        * tao/Synch_Invocation.h:
        * tao/Messaging/Asynch_Invocation.cpp:
          Moved the resolve on the profile_transport_resolver to after the
          send_request. At the moment a transport has been selected the
          virtual method transport_resolved() is called so that derived
          classes can set additional values on the transport.

        * tao/Remote_Invocation.{h,cpp} (write_header):
          Setup TAO_Target_Specification within this method, no need to
          pass it in as argument

        * tao/DynamicInterface/DII_Invocation.{h,cpp}:
          Use the new transport_resolved to set the transport in the safe_rd and
          reset the byter order, at the moment the remote_invocation is called
          it is possible that the transport is not resolved yet

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
          Don't reset the byte order here, do that in DII_Invocation

        * tao/Invocation_Adapter.cpp:
          Const changes, layout changes and don't resolve the transport here,
          do that in the Remote_Invocation derived classes

        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
          Don't schedule the timer here, but in the Async_Invocation because we
          maybe haven't resolved the transport.

        * tao/TransportCurrent/IIOP_Current_Impl.cpp:
          When we have no transport or no connection handler return a NoContext
          instead of No_Implement

        * tao/Object.cpp:
          Fixed typo in comment

        * tests/TransportCurrent/Framework/Current_Test_Impl.cpp:
        * tests/TransportCurrent/lib/Client_Request_Interceptor.cpp:
        * tests/TransportCurrent/lib/Client_Request_Interceptor.h:
          Updated for the fact that send_request could throw NoContext

        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.cpp:
          Layout changes

        * tao/Utils/ORB_Manager.cpp:
          Destroy the ORB in the destructor

        * tests/Portable_Interceptors/Bug_3079/run_test.pl:
          Small updates

Mon Nov 12 08:12:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2234_Regression/run_test.pl:
          Extended timeout for VxWorks

        * tests/Leader_Followers/run_test.pl:
        * tests/Leader_Followers/select_mt.conf:
        * tests/Leader_Followers/tp.conf:
          Updated for VxWorks

        * tests/CollocationLockup/CollocationLockup.cpp:
          Wait explicitly on the thread manager and shutdown the ORB to
          fix some memory leaks

Sun Nov 11 20:15:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Recursive_ORBInitializer/Client_ORBInitializer.cpp:
          Layout change

        * tests/Servant_To_Reference_Test/run_test.pl:
          Improved for VxWorks

        * tests/CSD_Strategy_Tests/TP_Test_Static/run_test.pl:
          Corrected for VxWorks

Sun Nov 11 19:55:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2174_Regression/run_test.pl
        * tests/Bug_2319_Regression/run_test.pl
        * tests/Bug_2792_Regression/run_test.pl
        * tests/Bug_2795_Regression/run_test.pl
        * tests/Bug_2809_Regression/run_test.pl
        * tests/Bug_2935_Regression/run_test.pl
        * tests/IORManipulation/run_test.pl
        * tests/ORB_destroy/run_test.pl
        * tests/ORB_init/run_test.pl
        * tests/POA/Deactivate_Object/run_test.pl
        * tests/POA/wait_for_completion/run_test.pl
          Added support for VxWorks cross platform testing and simplified
          the files

Sun Nov 11 19:15:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IORManipulation/filter/run_test.pl:
          Added support for VxWorks cross platform testing

Sun Nov 11 19:08:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2809_Regression/run_test.pl:
          Added support for VxWorks cross platform testing

Sun Nov 11 19:06:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2345_Regression/run_test.pl:
          Added support for VxWorks cross platform testing

Sun Nov 11 19:04:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2319_Regression/run_test.pl:
          Added support for VxWorks cross platform testing

Sun Nov 11 19:01:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2134_Regression/run_test.pl:
          Added support for VxWorks cross platform testing

Fri Nov  9 11:29:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.cpp:
          Removed msvc6 workaround and layout changes

        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.h:
          Layout changes

        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
          Fixed GCC 4.2 warnings

Fri Nov  9 09:04:21 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TAO_Singleton_Manager.cpp:
          dynamically_allocated is a bool

        * tao/PI/PI.cpp:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.{h,cpp}:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.cpp:
          Layout changes

        * tao/ORBInitializer_Registry.cpp:
          With VxWorks and TSS emulation enabled we do need to search the
          global registry because the loader which creates the global registry
          is a different thread then the thread that executes main

Wed Nov  7 18:48:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_2133/*:
          New regression test for bug 2133, thanks to Simon McQueen for
          creating this test

        * testsPortable_Interceptors/Bug_3080/server.cpp:
          Fixed memory leak in this test

        * tests/Blocking_Sync_None/run_test.pl:
          Added support for -debug which adds -ORBDebugLevel 10 to the
          executables

Wed Nov  7 15:40:23 UTC 2007  Jaiganesh B <jai@shiva.dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Bug_3079/Client_Request_Interceptor.cpp:

          Modified the ACE_DEBUG statements to use the word "exception"
          instead of the word "EXCEPTION" which is interpreted by the
          autobuilds as a test failure.

Wed Nov  7 15:33:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORManipulation/IORManipulation.cpp:
          Layout changes

        * tao/Object.cpp:
          Fixed comment

Wed Nov  7 15:30:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
          Shutdown the orb to fix some memory leaks and layout changes

Wed Nov  7 14:58:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Mobility_Service:
          Removed, empty

        * orbsvcs/Naming_Service/NT_Naming_Service.cpp:
          Layout change

        * tests/NestedUpcall/MT_Client_Test/client.cpp:
        * tests/NestedUpcall/MT_Client_Test/local_server.cpp:
          Fixed incorrect ACE_ERROR_RETURN statements. This test is now
          failing on svn head, it doesn't do a correct cleanup and should
          be improved much more

        * tests/NestedUpcall/MT_Client_Test/run_test.pl:
          Simplified

        * tests/POA/Default_Servant2/client.cpp:
          Layout change

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
          Use ACE_ERROR for errors, prefix increment

Tue Nov  6 15:59:43 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp:
          Fixed a memory leak with improper order of cleanup.

Tue Nov  6 15:51:01 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * examples/RTCORBA/Activity/Job.idl:
        * examples/RTCORBA/Activity/Activity.h:
        * examples/RTCORBA/Activity/POA_Holder.cpp:
        * examples/RTCORBA/Activity/POA_Holder.h:
        * examples/RTCORBA/Activity/Builder.cpp:
        * examples/RTCORBA/Activity/Activity.cpp:
        * examples/RTCORBA/Activity/run_test.pl:
          Fixed a lot of memory leaks in this example.

Mon Nov  5 16:30:00 UTC 2007  Simon Massey  <simon.massey@prismtech.com>

        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:

          Correct typo from causing infinate recursion when defining
          value types after forward declaring the same type.

Mon Nov  5 14:33:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * README:
          TAO is implementing a lot of the 3.x CORBA features

Mon Nov  5 12:17:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_3080/client.cpp:
        * tests/Portable_Interceptors/Bug_3080/Client_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Bug_3080/Client_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Bug_3080/Client_Request_Interceptor.h:
          Improved this test

Mon Nov  5 10:26:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/client.h:
        * performance-tests/Cubit/TAO/MT_Cubit/Globals.h:
          Updated for VxWorks thread id changes

Mon Nov  5 03:05:06 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated for PI.mpc & PI_Server.mpc changes.

        * tao/tao.mpc:

          Fix Header_Files section where Objref_VarOut_T.h and
          Object_Reference_Traits_Base_T.h were listed on the same line.
          This was interpreted as a single filename with embedded spaces
          in the automake build's Makefile.am generation.

Thu Nov  1 14:13:36 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DII_AMI_Forward/DII_ReplyHandler.cpp:
          Scoreboard cleanup.

Thu Nov  1 10:49:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI.mpc:
          Added include guard so that we prevent users from including any
          generated file, they need to include PI.h

        * tao/PI/ClientRequestDetails.h:
        * tao/PI/ClientRequestInfo.h:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:
        * tao/PI/Interceptor_List_T.cpp:
        * tao/PI/ORBInitInfo.h:
        * tao/PI/PI.h:
        * tao/PI/PI_ORBInitializer.h:
        * tao/PI/PI_PolicyFactory.h:
        * tao/PI/PICurrent.h:
        * tao/PI/PICurrent_Impl.h:
        * tao/PI/ProcessingModePolicy.h:
          Updated includes to use PI_includeC.h

        * tao/PI_Server.mpc:
          Added include guard so that we prevent users from including any
          generated file, they need to include PI_Server.h

        * tao/PI_Server/PI_Server.cpp:
          Layout change

        * tao/PI_Server/PortableServer_ORBInitializer.h:
        * tao/PI_Server/ServerInterceptorAdapter.h:
        * tao/PI_Server/ServerRequestDetails.h:
        * tao/PI_Server/ServerRequestInfo.h:
          Updated includes to use PI_Server_includeC.h

        * tao/PI_Server/ServerRequestInfo.pidl:
        * tao/PI_Server/ServerRequestInterceptor.pidl:
          Include PI_include.pidl

        * tao/PI_Server/ServerRequestInterceptorC.h:
          Updated

        * tao/PortableServer/Servant_Base.cpp:
        * tao/RTScheduling/RTScheduler_Manager.h:
          Layout change

        * tao/RTScheduling/Request_Interceptor.h:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/RTScheduling/RTScheduler_Initializer.h:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/RTScheduling/RTScheduler_Loader.h:
          Updated includes

        * tao/Transport_Cache_Manager.cpp:
          Layout and const changes

Thu Nov  1 10:24:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Hello/Hello.mpc:
          Use -Sp to get smaller footprint

Wed Oct 31 14:44:23 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/Bug_2417_Regression/publisher_impl.cpp:

          This test used ACE_Guards that take ownership of a mutex.  But
          since the mutex had never been acquired, critical regions were
          not protected, and the unacquired mutex was released, which is
          undefined behavior.  Changed to use the other constructor that
          acquires the mutex, blocking if necessary.

Wed Oct 31 13:47:28 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/OBV/TC_Alignment/run_test.pl:

          Change client timeout from 10 to 15 seconds.  Calibrating the
          high resolution timer used within the ORB takes ~5 seconds on
          some platforms.  This happens once in the server, once in the
          client, at different times.  This causes the test to run in
          just over 10 seconds.

Wed Oct 31 10:31:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          VxWorks updates

Wed Oct 31 08:46:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted change below

        Mon Oct 29 14:31:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>
        * tests/Bug_2084_Regression/EventNode.cpp:
        * tests/Bug_2084_Regression/Hello.cpp:
          Removed tid_to_int usage
        * tests/Bug_2084_Regression/tid_to_int.h:
          Deleted

Wed Oct 31 04:09:15 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/Options.html:

          Fix typo in -ORBGestalt description.

Tue Oct 30 13:54:31 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Update so that Policy_Current.pidl, Policy_Manager.pidl,
          Policy_CurrentS.h, Policy_ManagerS.h,
          AnyTypeCode/Policy_CurrentA.h, AnyTypeCode/Policy_ManagerA.h
          headers are installed.

        * tao/tao.mpc:

          Add Policy_CurrentS.h, Policy_ManagerS.h to Header_Files
          section.

        * tao/AnyTypeCode.mpc:

          Add AnyTypeCode/Policy_CurrentA.h,
          AnyTypeCode/Policy_ManagerA.h to Header_Files section.

Mon Oct 29 14:31:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2084_Regression/EventNode.cpp:
        * tests/Bug_2084_Regression/Hello.cpp:
          Removed tid_to_int usage

        * tests/Bug_2084_Regression/tid_to_int.h:
          Deleted

Sun Oct 28 20:47:53 UTC 2007  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:

          Changed to not install a default Notify Service Filter on the
          consumer admin.  The filter will prevent most events from being
          logged (since a generic event will not likely match the default
          filter's constraints).  Although the current TAO implementation
          does not support it, the Notify Log Service API supports adding
          filters.  When this is added, users will be able to install
          filters appropriate to their deployment.

Sun Oct 28 13:02:06 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DII_AMI_Forward/DII_AMI_Forward.mpc:

          Ensure it doesn't build for minimum CORBA.

Sat Oct 27 11:54:44 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DII_AMI_Forward/client.cpp (main):
        * tests/DII_AMI_Forward/DII_ReplyHandler.cpp:
        * tests/DII_AMI_Forward/DII_ReplyHandler.h:
          Make the test more efficient by signaling from the reply handler
          to the main loop when a reply is received so the main can exit
          quickly rather than waiting for a hard timeout.

Fri Oct 26 11:25:35 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DII_AMI_Forward/DII_ReplyHandler.cpp:
          Scoreboard repair, satisfy the include file ordering requirements.

Thu Oct 25 15:32:19 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DII_AMI_Forward/test_i.cpp:

          Missed this one with the previous fuzz fix.

Thu Oct 25 14:27:42 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Messaging/AMH_Response_Handler.cpp:

        * tests/DII_AMI_Forward/DII_AMI_Forward.mpc:
        * tests/DII_AMI_Forward/DII_ReplyHandler.h:
        * tests/DII_AMI_Forward/DII_ReplyHandler.cpp:
        * tests/DII_AMI_Forward/README:
        * tests/DII_AMI_Forward/client.cpp:
        * tests/DII_AMI_Forward/run_test.pl:
        * tests/DII_AMI_Forward/server.cpp:
        * tests/DII_AMI_Forward/test.idl:
        * tests/DII_AMI_Forward/test_i.h:

          Fuzz fixes.

Thu Oct 25 13:01:00 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * NEWS:

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.cpp:
        * tao/DynamicInterface/Request.cpp:

        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Messaging.h:

          New implementation described in bug #3105. Location Forward
          exceptions are different than ordinary exceptions in that the
          payload is an object reference to which the request must be
          resent. This code now provides the framework in which such
          exceptions may be at least detected or handled. Coupling the AMI
          receipt of such exception with the AMH sending ability gives
          middle tier applications the ability to pass the exception back
          to the original caller, perhaps with a modified reference.

        * tests/DII_AMI_Forward:

        * tests/DII_AMI_Forward/DII_AMI_Forward.mpc:
        * tests/DII_AMI_Forward/DII_ReplyHandler.h:
        * tests/DII_AMI_Forward/DII_ReplyHandler.cpp:
        * tests/DII_AMI_Forward/README:
        * tests/DII_AMI_Forward/client.cpp:
        * tests/DII_AMI_Forward/orb_initializer.h:
        * tests/DII_AMI_Forward/orb_initializer.cpp:
        * tests/DII_AMI_Forward/run_test.pl:
        * tests/DII_AMI_Forward/server.cpp:
        * tests/DII_AMI_Forward/server_interceptor.h:
        * tests/DII_AMI_Forward/server_interceptor.cpp:
        * tests/DII_AMI_Forward/test.idl:
        * tests/DII_AMI_Forward/test_i.h:
        * tests/DII_AMI_Forward/test_i.cpp:

          This is a new test demonstrating the capability of handling
          location forward exceptions in DII reply handlers.

Thu Oct 25 12:56:53 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:

          Improved support for IPv6 addresses.

Thu Oct 25 11:41:18 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DSI_AMH/Roundtrip.cpp:

        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.h:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.cpp:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Reintroduction of the use of NVList_var for more streamlined
          memory management. The new *_VarOut_T templates require some
          bizzare include file ordering, such as the inclusion of
          CORBA_methods.h.

          Also reverted a previous change where a _var was used as the
          pointer in an ACE_NEW macro. The Borland compiler just couldn't
          take it.

Thu Oct 25 09:49:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3108_Regression/*:
          New regression for bugzilla 3108

        * tests/MT_Client/client.cpp:
          Bool change

Thu Oct 25 09:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_3080/*:
          New regression test for bugzilla 3080

Wed Oct 24 18:00:59 UTC 2007  Jaiganesh B  <jai@shiva.dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Bug_3079/Client_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Bug_3079/Client_Request_Interceptor.h:
        * tests/Portable_Interceptors/Bug_3079/client.cpp:
        * tests/Portable_Interceptors/Bug_3079/Client_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Bug_3079/run_test.pl:

          Updated regression test for Bug 3079.

Wed Oct 24 14:38:06 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tao/Parser_Registry.cpp:

          ACE_Dynamic_Service<>::instance() could return null if the parser
          isn't registered with the ACE svc conf.  Check for nulls and avoid
          storing them in the array.  Also, warn at TAO_debug_level 1 or more.
          See Bugzilla bug# 3103.

Tue Oct 23 12:38:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bind_Dispatcher_Guard.cpp:
        * tao/Endpoint_Selector_Factory.h:
        * tao/Invocation_Endpoint_Selectors.{h,cpp}:
        * tao/Messaging/Asynch_Invocation.{h,cpp}:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.{h,cpp}:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/Strategies/advanced_resource.cpp:
          Layout changes

        * tao/CodecFactory/IOP_Codec_include.pidl:
          Removed obsolete regeneration instructions

        * tao/HTTP_Client.cpp:
        * tao/HTTP_Handler.cpp:
        * tao/HTTP_Parser.cpp:
          Updated debug statements to use the same formatting as in other
          places in TAO

        * tao/PI/PI_include.pidl:
          New file to be included when you want to include a pidl file of the
          PI library

Tue Oct 23 10:54:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/tie_ss.cpp:
          Use true/false, const changes

        * TAO_IDL/be/be_visitor_traits.cpp:
          Generate argument names so that doxygen can handle the traits better

Mon Oct 22 11:50:34 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * examples/Simple/grid/Grid_i.h:
        * examples/Simple/grid/Grid_Client_i.cpp:
        * examples/Simple/grid/Grid_i.cpp:
        * examples/Simple/Simple_util.cpp:
        * examples/Simple/bank/AccountManager_i.cpp:
        * examples/Simple/bank/Bank_Client_i.cpp:
        * examples/Simple/bank/AccountManager_i.h:
        * examples/Simple/bank/Account_i.cpp:
        * examples/Simple/bank/run_test.pl:
          Fixed some more memory leaks. The example bank required quite
          substantial changes.

Mon Oct 22 03:30:03 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.inl:

        * tests/DSI_AMH/Roundtrip.cpp:

        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.h:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.cpp:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          This is a somewhat more conservative application of the changes
          originally suggested in but #3093. I still believe the
          AMH_DSI_Response_Handler implementation should be replaced with
          template instances, but apparently this takes more effort than I
          have to give.

          I am now avoiding the use of NVList_var in the test code, it
          caused build failures on some scoreboard platforms. Again, I
          believe that should be the correct solution, but requires
          further study to determine what I was doing wrong.

Sun Oct 21 20:43:18 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.inl:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tests/DSI_AMH/Roundtrip.cpp:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.h:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.cpp:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Reverted previous change, it wasn't building on some platforms.

Sun Oct 21 03:37:10 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.inl:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          Removed redundent code, replaced with existing _var and _out
          type templates for objref and value types. This change was
          inspired by the suggestion of Venkat Sidhabathuni <venkats at
          idengines dot com> in bugzilla #3093.

        * tests/DSI_AMH/Roundtrip.cpp:

        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.h:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.cpp:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Fix memory leaks documented in bug 3093.

Thu Oct 18 14:17:52 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/tests/Notify/MC/run_test.pl:
          Test was failing because MC ORB didn't have the correct NS
          endpoint info.

Mon Oct 15 15:31:04 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/tests/Notify/MC/notify.conf:
        * orbsvcs/tests/Notify/MC/run_test.pl:
          The Montoring Service now registers itself with the Naming
          Service. The test script now directly passes the NS reference to
          the Monitoring service.

Fri Oct 12 17:17:21 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/tests/Security/ssliop_CSD/Messenger_i.h:
        * orbsvcs/tests/Security/ssliop_CSD/Messenger_i.cpp:
        * orbsvcs/tests/Security/ssliop_CSD/run_test.pl:
        * orbsvcs/tests/Security/ssliop_CSD/ssliop_CSD.mpc:
          Fuzz build cleanups.

        * orbsvcs/tests/Security/ssliop_CSD/MessengerI.cpp:
          Removed this file. Was duplicate of Messenger_i.cpp

Fri Oct 12 15:18:40 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/POA/DSI/client.cpp:
        * tests/POA/DSI/server.cpp:
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.cpp:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.cpp:
        * tests/POA/Current/Current.cpp:
        * tests/POA/RootPOA/RootPOA.cpp:
        * tests/POA/Bug_2511_Regression/server.cpp:
        * tests/POA/Default_Servant/Default_Servant.cpp:
        * tests/POA/Etherealization/Etherealization.cpp:
        * tests/POA/POA_BiDir/POA_BiDir.cpp:
        * tests/POA/NewPOA/NewPOA.cpp:
        * tests/POA/Identity/Identity.cpp:
        * tests/POA/Adapter_Activator/server.cpp:
        * tests/POA/Deactivate_Object/server.cpp:
        * tests/POA/Explicit_Activation/server.cpp:
        * tests/POA/On_Demand_Activation/server.cpp:
        * tests/POA/Loader/Server_Manager.cpp:
        * tests/POA/Loader/Server_Manager.h:
        * tests/POA/Default_Servant2/client.cpp:
        * tests/POA/Default_Servant2/server.cpp:
        * tests/POA/Generic_Servant/client.cpp:
        * tests/POA/FindPOA/FindPOA.cpp:
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.cpp:
        * tests/POA/Reference_Counted_Servant/server.cpp:
        * tests/POA/Bug_1592_Regression/client.cpp:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.cpp:
        * tests/POA/Forwarding/client.cpp:
        * tests/POA/Forwarding/server.cpp:
        * tests/POA/POA_Destruction/POA_Destruction.cpp:
        * tests/POA/POAManagerFactory/POAManagerFactory.cpp:
        * tests/POA/wait_for_completion/wait_for_completion.cpp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
        * tests/POA/Persistent_ID/client.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
          Memory leak fixes in these tests. Mostly it was missing call to
          destroy() for orb.

Thu Oct 11 13:24:26 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/POA/EndpointPolicy/server.cpp:

          The test is now failing to initialize endpoints on some
          platforms. I've added some more explicit information as debug
          output to learn why this is happening.

Wed Oct 10 20:23:11 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:

          Fixed typo in comment and changed a C-style cast to C++-style.

        * TAO_IDL/util/utl_identifier.cpp:

          Fixed check in the constructor for an escaped indentifier to
          handle the case where a C++ keyword clash prefix and an AMI
          exception holder suffix are both present in the arg string.
          Thanks to Greg <ustrel at free dot fr> for reporting the
          compile failure that results from the mismatch between code
          generated from the AMI 'implied IDL' node and code generated
          from the original node and mangled on the fly.

Tue Oct  9 02:55:18 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/POA/EndpointPolicy/server.cpp:

          fix to address bug 3075. Replace references to "localhost" with
          the hostname obtained via ACE_OS::hostname(). If this causes
          trouble on windows hosts that are improperly configured so that
          they cannot resolve themselves, then a "-h <hostname>" command
          line parameter can be added to the server to explicitly set the
          hostname to localhost or something else as needed.

Thu Oct  4 23:20:27 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp (to_value):
          (to_abstract_base):

          Ported Any value ownership fix for to_object() described in
          ChangeLog entry "Oct 30 18:56:03 UTC 2006  Jeff Parsons
          <j.parsons@...> " to these methods.

          Fixed TypeCode kind comparison typo in to_abstract_base()
          method.  s/tk_value/tk_abstract_interface

          Replaced TypeCode kind unaliasing code with calls to
          TAO::unaliased_kind().

          Const-correctness improvements.

          Wide string improvements.

        * tao/Valuetype/ValueBase.cpp:

          Simplified conditional statement.

Thu Oct  4 20:05:47 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/tests/Security/ssliop_CSD:
          This test demonstrates CSD (Custom Servant Dispatch)
          incompatibility with SSLIOP transport protocol. Once this
          incompatibility has been fixed this test can be turned on in the
          nightly tests.

Thu Oct  4 19:02:11 UTC 2007  Ciju John  <johnc at ociweb dot com>

        Cleanup Named proxies upon disconnect.
        * orbsvcs/orbsvcs/Notify/Admin.h:
        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannel.h:
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
          - Add virtual method 'cleanup_proxy' to EC.
          - MonitorEventChannel::cleanup_proxy unbinds the name-ID
          association.
          - Add 'cleanup_proxy' to admin and make 'remove' private.
          'cleanup_proxy' now calls 'remove' and ec->cleanup_proxy
          - Consumer/Subscriber Proxies call admin::cleanup_proxy

        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/README:
          Extend to test named proxy disconnect and recreation.

Mon Oct  1 18:57:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Property/run_test.pl:
        * orbsvcs/tests/Time/run_test.pl:
          Updated for cross platform testing

Fri Sep 28 00:04:19 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * TAO-INSTALL.html: Fixed the links to "ACE installation notes" so
          they point to the right place.  Thanks to Matthew Gillen
          <mgillen at bbn dot com> for reporting this.

Thu Sep 27 04:28:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/union.idl:
          Extended SunCC workaround to also include Sun Studio 12

Wed Sep 26 06:11:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp:
          dump_msg only works with debug level >= 5, so corrected all places
          where this method is called.

        * tao/GIOP_Message_Base.h:
          Made most methods private

        * tao/IIOP_Transport.cpp:
        * tao/MCAST_Parser.cpp:
          Layout change

        * tao/Invocation_Adapter.cpp:
          Const change

        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
          Use bool

Tue Sep 25 07:13:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Fixed incorrect checking of the return value of ACE_String_Base::find

Tue Sep 25 06:49:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_3079/*:
          New regression test created by  Jaiganesh Balasubramanian

Tue Sep 25 05:06:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Fixed some bugs introduced when renaming the reply_status
          method to pi_reply_status

Mon Sep 24 13:27:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI_Server.mpc:
          With BCB use -Q as workaround for a compiler bug with BCB6

Mon Sep 24 07:43:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/GIOP_Message_Generator_Parser.h:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_State.cpp:
        * tao/GIOP_Message_State.h:
        * tao/GIOP_Message_State.inl:
        * tao/GIOP_Utils.h:
        * tao/Invocation_Adapter.cpp:
        * tao/LocateRequest_Invocation.cpp:
        * tao/LocateRequest_Invocation.h:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/LocateRequest_Invocation_Adapter.h:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
        * tao/PI_Server/ServerRequestInfo.inl:
        * tao/Pluggable_Messaging_Utils.cpp:
        * tao/Pluggable_Messaging_Utils.h:
        * tao/Pluggable_Messaging_Utils.inl:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/Queued_Data.h:
        * tao/Queued_Data.inl:
        * tao/Reply_Dispatcher.cpp:
        * tao/Reply_Dispatcher.h:
        * tao/Reply_Dispatcher.inl:
        * tao/Synch_Invocation.cpp:
        * tao/Synch_Reply_Dispatcher.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.inl:
        * tao/Transport.cpp:
          Use the in IDL defined enums for message type, reply status type and
          locate status type. By making this a real enum the compiler can check
          whether we handle all possible values in a switch statement and can
          also check incorrect checks. As a result the code to convert between
          the IDL enums and the TAO enums has been removed. Also changes in several
          classes exception_type to reply_status, that is meant by that flag

Fri Sep 22 00:57:01 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp (init_ORB):

          Fixed leaked RootPOA.

Fri Sep 22 00:21:47 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/GIOP_Message_State.cpp:

          Cleaned up error checking code.

        * tao/ORBInitializer_Registry.cpp:

          Removed leading whitespace before preprocessor directives.

        * tao/TAO_Internal.cpp (TAO_Ubergestalt_Ready_Condition):

          Removed use of "this" pointer from base member initializer
          list since such use is not portable.

          Removed stray semi-colon.

        * tao/Tagged_Profile.inl (TAO_Tagged_Profile):

          Added missing initialization of "object_key_extracted_" member
          in base member initializer list.

        * tao/Transport.cpp (schedule_output_i):

          Simplified event handler clean-up code.

        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.cpp (fill_profile):

          Fixed Coverity CHECKED_RETURN errors.  Error conditions in a
          return value were not checked.

        * tao/Messaging/Connection_Timeout_Policy_i.cpp (hook):
          (set_time_value):
        * tao/Messaging/Messaging_Policy_i.cpp (hook, set_time_value):

          Corrected time types used in cast from a TimeBase::TimeT to
          match the types used by the underlying ACE_Time_Value type to
          properly support time values greater than 32 bits in size.

        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp (file_size):
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.h (file_size):
        * orbsvcs/orbsvcs/Notify/Random_File.cpp (size):
        * orbsvcs/orbsvcs/Notify/Random_File.h (size):

          Corrected file offset type (s/size_t/ACE_OFF_T/).  Addresses
          compile-time warnings.

        * orbsvcs/orbsvcs/Notify/XML_Saver.cpp (open):

          Do not call operator delete() on a FILE* created through
          fopen().  Finalize it using fclose() instead.

Fri Sep 21 10:54:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/Queued_Data.h:
        * tao/Queued_Data.inl:
        * tao/Remote_Invocation.cpp:
          Various small changes (const, layout, bool) merged in manually
          from the ZIOP3 branch

Fri Sep 21 09:44:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.{cpp,inl}:
          Moved messaging_init to the cpp file, caused problem errors in the
          inline file and this way it reduces dependencies

Fri Sep 21 08:29:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvs/orbsvcs/HTIOP/HTIOP_Connection_Handler.h:
        * orbsvs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
        * orbsvs/orbsvcs/HTIOP/HTIOP_Transport.h:
        * orbsvs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.h:
        * orbsvs/orbsvcs/PortableGroup/UIPMC_Mcast_Connection_Handler.h:
        * orbsvs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvs/orbsvcs/PortableGroup/UIPMC_Transport.h:
        * orbsvs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
        * orbsvs/orbsvcs/SSLIOP/SSLIOP_Transport.h:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Transport.cpp:
        * tao/IIOP_Transport.h:
        * tao/Makefile.am:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/On_Demand_Fragmentation_Strategy.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Strategies/COIOP_Transport.cpp:
        * tao/Strategies/COIOP_Transport.h:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/DIOP_Transport.h:
        * tao/Strategies/SCIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.h:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.h:
        * tao/Strategies/UIOP_Transport.cpp:
        * tao/Strategies/UIOP_Transport.h:
        * tao/tao.mpc:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/Transport.cpp:
        * tao/Transport.h:
        * tao/Transport.inl:
          Removed the pluggable messaging abstraction. We only had one
          implementation and CORBA only defines GIOP, no other messaging
          support is required. This replaces a lot of virtual calls with
          regular calls which makes the ORB faster. Moved also the messaging
          pointer from the concrete transports to the base transport.
          Fixes bugzilla 2993

        * tao/Pluggable_Messaging.{h,cpp}:
          Removed from the repo

Mon Sep  3 14:34:39 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp (ReplicaController):
        * orbsvcs/examples/LoadBalancing/RPS_Monitor.cpp (RPS_Monitor):
        * orbsvcs/examples/Notify/Federation/Gate/Gate.cpp (init):
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/RPS_Monitor.cpp (RPS_Monitor):
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp (TAO):
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp (subscribe_notifier):
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.tpp: Chan
        * tao/Strategies/COIOP_Acceptor.cpp (TAO_COIOP_Acceptor): Changed
          generateUUID() to generate_UUID() to match new ACE-ification of
          the UUDI class.

Thu Sep 20 09:35:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Objref_VarOut_T.inl:
          Fixed compile errors

Thu Sep 20 08:36:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.pidl:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_POA.h:
        * tao/RTPortableServer/RT_POA.inl:
          Disable create_reference_with_id when CORBA/e micro is enabled.
          This fixes bugzilla 3039, thanks to Simon Massey
          <simon dot massey at prismtech dot com> for reporting this

Thu Sep 20 07:32:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/POA/Demux/demux_test_client.h:
          Removed not needed include

Thu Sep 20 07:12:15 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Objref_VarOut_T.{h,cpp,inl}:
          Added new inline file and made most method inline. Fixes bugzilla 3056

        * tao/tao.mpc:
        * tao/Makefile.am:
          Added new file

        * tao/OctetSeq.pidl:
          Updated comments in this file

        * tao/Generic_Sequence.h:
          Small optimization when extending the length without the fact that
          a buffer has been allocated

Wed Sep 19 04:10:15 CDT 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.6.1 released.

Tue Sep 11 15:28:45 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/IFRService.mpc:

          Added missing 'tagchecks' settings.

Mon Sep 10 11:14:10 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * docs/tutorials/Quoter/Simple/Impl-Repo/server.cpp:
          Untabify.

Sat Sep  8 15:03:05 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/POA/EndpointPolicy/README:
          Revised the wording.

        * tests/POA/POAManagerFactory/README:
          Added a README for this test.

Fri Sep  7 19:28:33 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_enum.cpp:

          One  more bit of old code that needed to be restored,

Fri Sep  7 18:42:26 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_enum.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:

          Removed some experimental code that was inadvertently checked
          in with

          Thu Sep  6 13:10:49 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

Fri Sep  7 18:15:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Updated supported platform list

        * tao/Abstract_Servant_Base.h:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object_Proxy_Broker.h:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.h:
        * tao/be/be_interface.cpp:
        * tao/be/be_visitor_component/component_sh.cpp:
        * tao/be/be_visitor_interface/amh_sh.cpp:
        * tao/be/be_visitor_interface/interface_sh.cpp:
        * tao/be/be_visitor_interface/interface_ss.cpp:
          Disable get_interface when CORBA/e is enabled. This fixes bugzilla bug
          3066

Thu Sep  6 22:57:44 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * utils/NamingViewer/AddNameServerDlg.h:
        * utils/NamingViewer/AddNameServerDlg.cpp:
        * utils/NamingViewer/BindDialog.h:
        * utils/NamingViewer/BindDialog.cpp:
        * utils/NamingViewer/BindNewContext.h:
        * utils/NamingViewer/BindNewContext.cpp:
        * utils/NamingViewer/NamingTreeCtrl.h:
        * utils/NamingViewer/NamingTreeCtrl.cpp:
        * utils/NamingViewer/NamingViewer.h:
        * utils/NamingViewer/NamingViewer.cpp:
        * utils/NamingViewer/NamingViewerDlg.h:
        * utils/NamingViewer/NamingViewerDlg.cpp:
        * utils/NamingViewer/SelectNSDialog.h:
        * utils/NamingViewer/SelectNSDialog.cpp:
        * utils/NamingViewer/StdAfx.cpp:
        * utils/NamingViewer/ViewIORDialog.h:
        * utils/NamingViewer/ViewIORDialog.cpp:
        * utils/catior/catior.cpp:
        * utils/wxNamingViewer/wxBindDialog.cpp:
          Untabify.

Thu Sep  6 18:01:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Service.h (create):
          Readded default argument for pure virtual function this is required

Thu Sep  6 13:10:49 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:
        * TAO_IDL/be/be_enum.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/util/utl_global.cpp:

          Fixes intended for checkin last July and overlooked, including:

          - fixes to optional generated stream operators
          - addition and usage of global list of relative include paths

Thu Sep  6 12:37:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Borland/ChatClientWnd.cpp:
          Catch exceptions as const

        * examples/Simple/fullname:
        * examples/Simple/fullname/README:
        * examples/Simple/squareit:
        * examples/Simple/squareit/README:
          Removed, these examples where never implemented. Thanks to Douglas
          Schmidt for pointing this out

Thu Sep  6 10:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/AV_Core.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
          Removed Borland workarounds

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.h:
          Improved CodeGear C++ Builder support

Thu Sep  6 09:30:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.h:
          Improved CodeGear C++ Builder support

        * tao/Utils/ORB_Manager.cpp:
          Layout changes

Thu Sep  6 09:24:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.h:
        * orbsvcs/orbsvcs/PortableGroup.idl:
          Doxygen improvements

        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.cpp:
          Layout changes

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h (create):
          Added default argument for factory_name, thanks to Lothar
          Werzingen <lothar at tradescape dot biz> for reporting this

        * orbsvcs/orbsvcs/Notify/Service.h (create):
          Default argument for pure virtual function is not needed

Wed Sep  5 13:26:26 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp (start_anyop_header):

          Changed logic again to generate empty *A.h file if -GA appears
          with -Sa or -St.

        * docs/compiler.html:

          Updated command line option table description to reflect the
          change above.

Tue Sep  4 18:05:08 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * docs/compiler.html:

          Updated command line option table descriptions to reflect
          changes below.

Tue Sep  4 17:52:54 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp (start_anyop_header);

          Changed the logic of the check at the top of this method so
          that the options to suppress generation of Any operators or
          type codes will override the option to generate a separate
          header file for these things. However, the option to generate
          an empty *A.h file will override all of the above.

Mon Sep 03 02:50:30 CDT 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.6 released.

Thu Aug 30 08:09:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Security/BiDirectional/ssl/*.pem:
          Generated new keys, old ones are expired

Wed Aug 29 18:47:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/FL_Cube/server.cpp:
          Fixed incorrect include. Thanks to Hans Utz <hans dot utz at nasa dot gov>
          for reporting this.

Wed Aug 29 10:40:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/EndpointPolicy/run_test.pl:
          Fixed typo in the VxWorks specific part of this script

Wed Aug 29 10:07:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Forwarding/run_test.pl:
          Updated for VxWorks cross platform testing

Wed Aug 29 08:16:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Simple/client.cpp:
        * tests/OBV/Simple/Client_i.cpp:
        * tests/OBV/Simple/run_test.pl:
          Let the client shutdown the server. Fixes test failure on
          OpenVMS

Wed Aug 29 07:52:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Default_Servant2/client.cpp:
        * tests/POA/Default_Servant2/File.idl:
        * tests/POA/Default_Servant2/File_i.cpp:
        * tests/POA/Default_Servant2/File_i.h:
        * tests/POA/Default_Servant2/run_test.pl:
        * tests/POA/Default_Servant2/server.cpp:
          Added a shutdown call to the server so that we shutdown nicely,
          fixes the crash of this test on OpenVMS

Tue Aug 28 20:48:47 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/Param_Test/run_test.pl: Added missing config argument to
          the create_target() call. Fixes test failures on all platforms.

Tue Aug 28 18:42:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1568_Regression/run_test.pl:
        * tests/Bug_1568_Regression/server.cpp:
        * tests/Bug_1568_Regression/client.cpp:
        * tests/Bug_1568_Regression/Test.idl:
          Added a shutdown call to the server so that we shutdown nicely,
          fixes the crash of this test on OpenVMS

Tue Aug 28 14:16:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * docs/notification/using_monitor_extensions.html:

          Documented the extended monitoring interfaces.

Tue Aug 28 10:29:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
          Layout changes

        * tao/RTCORBA.mpc:
        * tao/RTPortableServer.mpc:
          Simplified these files

Mon Aug 27 13:29:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2356_Regression/client.cpp:
          Fixed error in this test program, when things did work we returned
          1 by accident which was wrong

Mon Aug 27 08:06:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/Makefile.am:
          Added missing header and inline files section. Thanks to
          Vikram Karandikar <softking at gmail dot com> for reporting this

Sat Aug 25 12:37:53 UTC 2007  Steve Huston  <shuston@riverace.com>

        * tests/AHM_Exceptions/run_test.pl:
        * tests/CDR/run_test.pl:
        * tests/CallbackTest/run_test.pl:
        * tests/Client_Leaks/run_test.pl:
        * tests/Codec/run_test.pl:
        * tests/Collocation/run_test.pl:
        * tests/Hello/run_test.pl:
        * tests/Param_Test/run_test.pl: Converted to use the new target
          test mechanism. See ACE ChangeLog
          Sat Aug 25 12:57:30 UTC 2007  Steve Huston  <shuston@riverace.com>

Fri Aug 24 15:18:56 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:
          Again, since adding the -ORBGestalt Local option, there was a
          problem when multiple ORBs were defined. It was assumed that
          since each ORB has its own local configuration context in
          addition to the global context, the local configuration instance
          should be closed when the ORB is destroyed. However, this isn't
          the case when the only configuration context is the global one.

Thu Aug 23 14:39:30 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:
          One more change related to the use of a single global context.
          The failed status was being lost if TAO debug level was 0.

Wed Aug 22 20:27:35 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:
          Since adding the -ORBGestalt Local option, with a default of
          using the global service context, it turns out that service
          directives passed explicitly on the command line using
          -ORBSvcConfDirective weren't being processed. The problem is
          that these directives were considered "private" to the ORB that
          was being initialized and stored separately to be procesed by
          the ORB's local configuration context. But now that ORBs may be
          using the global context exclusively, these "private" directives
          need to be passed to the service configurator along with all the
          rest. Having done this means that calling ORB_init more a second
          time with -ORBSvcConf... arguments will see those arguments
          ignored. This is the way it worked before ORB-specific
          configuration was defined.

Tue Aug 21 19:47:26 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/HTIOP/Hello/run_test.pl:
          Windows doesn't like the single-quote around the endpoint
          argument value.

Tue Aug 21 15:01:33 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_extern.cpp (FE_yyparse):

          Added ACE_OS::fclose of the input file after parsing is done.
          This lack was causing an error and exit if more than 512 files
          are parsed in a single execution.

Tue Aug 21 14:23:30 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/Callback_Quoter/Consumer_Signal_Handler.h:
          Minor layout change.

Tue Aug 21 11:37:02 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/MC/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/MC/run_test.pl:

          Modified the consumer to write out a file once the event channel
          has been created and registered with the name service.  Then
          instead of a sleep, wait for the file in the run_test.pl before
          starting the supplier.

Tue Aug 21 09:36:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/interface.idl:
          Added a new test case

        * testsHello/run_test.pl:
        * tests/No_Server_MT_Connect_Test/run_test.pl:
          Put iorbase filename into a perl variable

        * tests/POA/Default_Servant2/run_test.pl:
        * tests/Exposed_Policies/run_test.pl:
          Extended timeout for slow systems

Mon Aug 20 15:57:00 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/old_union2.idl:
        * tests/IDL_Test/old_struct.idl:
        * tests/IDL_Test/dif2.idl:
        * tests/IDL_Test/module.idl:
        * tests/IDL_Test/inherit.idl:
        * tests/IDL_Test/old_constants.idl:
        * tests/IDL_Test/simple2.idl:
        * tests/IDL_Test/old_array.idl:
        * tests/IDL_Test/old_union.idl:
        * tests/IDL_Test/simple.idl:
        * tests/IDL_Test/primtypes.idl:
        * tests/IDL_Test/old_sequence.idl:

          Added file description comments and fixed formatting.

Mon Aug 20 15:06:33 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/interface.idl:

          Cosmetic changes.

        * tests/IDL_Test/IDL_Test.mpc:

          Added moved files below to the MPC project.

        * tests/IDL_Test/old_union2.idl:
        * tests/IDL_Test/old_struct.idl:
        * tests/IDL_Test/dif2.idl:
        * tests/IDL_Test/module.idl:
        * tests/IDL_Test/inherit.idl:
        * tests/IDL_Test/old_constants.idl:
        * tests/IDL_Test/simple2.idl:
        * tests/IDL_Test/old_array.idl:
        * tests/IDL_Test/old_union.idl:
        * tests/IDL_Test/simple.idl:
        * tests/IDL_Test/primtypes.idl:
        * tests/IDL_Test/old_sequence.idl:

          File moved from TAO_IDL/idl_specs. In some cases, there
          was a name clash with existing IDL files, so 'old_' was
          prepended to those filenames of the moved files. These
          files were used for testing the earliest versions of the
          IDL compiler, and were moved to the IDL_Test directory
          so they can be used again.

        * TAO_IDL/idl_specs/*:

          Removed IDL files from this directory and removed the directory.

Mon Aug 20 14:05:18 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/Callback_Quoter/Consumer_Input_Handler.h:
        * examples/Callback_Quoter/Consumer_Signal_Handler.h:
          Zapped ACE_Shutup_GPlusPLus, it was a reclic from the older days
          of ACE/TAO, it was used to silence incorrect warning from g++
          compiler. Moved the destructor to the protected section to
          correctly handle such warnings (if they still exist) without
          having to introduce a phony friend.

Mon Aug 20 14:02:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Property/client.cpp:
          Layout change

        * orbsvcs/tests/Property/server.cpp:
          Don't use the TAO_ORB_Manager, that way we can run also this test
          with CORBA/e compact

        * orbsvcs/tests/Property/server.h:
          No need to include TAO_ORB_Manager

        * orbsvcs/tests/Property/Property.mpc:
          Server doesn't need utils lib

Mon Aug 20 07:31:59 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * tests/Big_Request_Muxing/Client_Task.cpp:
        * tests/Big_Request_Muxing/Client_Task.h:
        * tests/Big_Request_Muxing/server.cpp:

          Fixed issue of first thread done marking task done for all threads.
          Corrected typo in output.

Mon Aug 20 07:14:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Options.html:
          Added note that -ORBDeamon changes the current directory to /
          Thanks to Hans Utz <hans dot utz at nasa dot gov> for making
          this proposal

Mon Aug 20 02:21:04 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
          Update the protocol-specific tear_listen_point_list impl to be
          consistent with those of other protocols. There was an obsolete
          guard that was conflicting with recent changes to the transport
          cache manager. The processing of listen points requires a
          recache of the transport, and that involves calling is_connected
          which in turn is guarded by the transport's lock.

        * orbsvcs/tests/HTIOP/AMI/run_test.pl:
        * orbsvcs/tests/HTIOP/BiDirectional/run_test.pl:
          Fix to take away the hard-coded listen endpoint.

Sun Aug 19 23:48:56 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:
        * tests/Bug_2953_Regression/server.cpp:

          Fixed ACE_OS fuzz warnings. Use ACE_OS calls instead of raw OS function
          where possible. If fuzz detected a false-positive, then disable
          the ACE_OS fuzz check for that section of the code.

Fri Aug 17 23:04:53 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_arg_traits.cpp (visit_argument):

          Fixed code generation for bounded (w)string argument in
          an AMI handler operation. The dummy struct used in the
          arg traits specialization had the same name as the one
          for the original interface operation.

Fri Aug 17 15:50:19 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * NEWS:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/Transport.h:
        * tao/Transport.inl:
        * tao/Transport.cpp:
        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Cache_Manager.cpp:
        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:
        * tests/Bug_1476_Test/client.cpp:
          Revert bug 2935 changes.
          Changes are now in a bug_2935 branch and will
          be reapplied later once I fix whatever is causing
          some tests to fail.


        * tests/Bug_1361_Regression/Echo.cpp:
        * tests/Bug_1361_Regression/client.cpp:
          raise (SIGABRT) rather than raise (9) to kill self process.
          Q: would calling abort() be a better approach?

        * tests/AMI/run_test.pl:
        * tests/BiDirectional/run_test.pl:
          Minor script changes to help use the tests as TAO debug tools.

Fri Aug 17 14:38:15 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * docs/Options.html:
          Add description of the -ORBGestalt option.

        * tao/ORB.cpp:
          Fix ACE_TEXT consistency.

Fri Aug 17 08:24:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosPropertyService.idl:
          Removed, it was for backward compatibility for years, now time to remove
          it. Users should include CosProperty.idl, this is related to bugzilla 3041,
          thanks to Bogdan Jeram <bjeram at eso dot org> for reporting that issue

        * orbsvcs/orbsvcs/CosProperty.idl:
          Doxygen updates

        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/Makefile.am:
          Removed CosPropertyService.idl

Thu Aug 16 23:44:00 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * TAO_IDL/ast/ast_argument.cpp:
        * TAO_IDL/ast/ast_enum_val.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/be/be_constant.cpp:
        * TAO_IDL/be/be_operation_strategy.cpp:
        * TAO_IDL/be/be_union_label.cpp:
        * TAO_IDL/be/be_visitor_component/component.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ih.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_is.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_reset_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:
        * TAO_IDL/fe/fe_private.cpp:
        * TAO_IDL/idl_specs/array.idl:
        * TAO_IDL/idl_specs/constant.idl:
        * TAO_IDL/idl_specs/dif2.idl:
        * TAO_IDL/idl_specs/module.idl:
        * TAO_IDL/idl_specs/primtypes.idl:
        * TAO_IDL/idl_specs/sequence.idl:
        * TAO_IDL/idl_specs/simple.idl:
        * TAO_IDL/idl_specs/simple2.idl:
        * TAO_IDL/idl_specs/struct.idl:
        * TAO_IDL/idl_specs/union.idl:
        * TAO_IDL/idl_specs/union2.idl:
        * TAO_IDL/util/utl_exceptlist.cpp:
        * TAO_IDL/util/utl_exprlist.cpp:
        * TAO_IDL/util/utl_labellist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_decllist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_exceptlist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_exprlist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_labellist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_namelist.cpp:
          Untabify.

Thu Aug 16 19:19:11 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp (visit_interface_fwd):

          Fixed incorrect code generation for CDR insertion operators
          for struct members which are forward declared interfaces
          not yet fully defined, and forward declared inside a reopening
          of the module in which the struct is defined.

        * tests/IDL_Test/fwd.idl:

          Added IDL to test for the use case above.

Thu Aug 16 19:12:27 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tao/Valuetype/Bounded_Valuetype_Sequence_T.h:
        * tests/IDL_Test/valuetype.idl:
          Bounded_ValueType_Sequence unit marshalling now uses the stream
          '<<' operator as currently done in the
          Unbounded_ValueType_Sequence. Also add test for
          Bounded_ValueType_Sequence.

Thu Aug 16 16:29:46 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/ORB.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:

          Add explicit configuration of configuration contexts to resolve
          the multiple ORBInitializer issue documented in bug 2995. By
          default ORBs will use the global configuration context
          exclusively. If -ORBGestalt Local is supplied on the command
          line the ORB will create a local configuration context into
          which separately loaded service objects will override any of
          those installed in the global context.

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:
        * tests/ORB_Local_Config/Bug_2612/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/primary-csd.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/primary-ssl.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/run_test.pl:

          Add the new -ORBGestalt Local option to ensure these tests still
          perform as intended.

Thu Aug 16 12:13:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFR_Service_Utils_T.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.h:
          Updated for BCB2007 Update 2

Thu Aug 16 11:42:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object_Reference_Sequence_Element_T.h:
          Provide an inout method, this fixes bugzilla 2877. Thanks to Phil
          Mesnier for reporting this

        * tests/DynAny_Test/test_dynsequence.cpp:
          Added test code for bugzilla 2877

        * tao/Transport_Cache_Manager.cpp:
          Improved layout of a debug message

        * tests/Bug_3042_Regression/client.cpp:
        * tests/Bug_3042_Regression/test.idl:
          Increased the bound maximum and set the length of the sequence

Thu Aug 16 11:34:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Object_Reference_Sequence_T.h:
        * tao/Object_Reference_Const_Sequence_Element_T.h:
        * tao/Unbounded_Object_Reference_Sequence_T.h:
          Let the const operator[] return a const element on which
          we can use .in(). Fixes bugzilla 2829

        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
          Use .in on the element returned by operator[]

        * tao/Bounded_Object_Reference_Sequence_T.h:
          Improved doxygen docu

        * tao/diffs/Domain.diff:
          Removed, obsolete

        * tao/String_Const_Sequence_Element_T.h:
          Const improvement

Thu Aug 16 09:54:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.h:
          Updated for BCB2007 Update 2

Thu Aug 16 07:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Generic_Sequence_T.h:
          Forgot to commit this file as part of buzilla 3042

Wed Aug 15 17:31:43 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tao/Transport_Connector.cpp:
          Disable code paths that call wait_for_transport.  This
          avoids a problem in which more than one thread waits
          on the same transport.  However it also negates the
          fix for too-many-connections (bugzilla 2935)

        * tao/Transport_Cache_Manager.cpp:
          Cosmetic fix to a log message

        * tests/Stack_Recursion/Client_Task.cpp:
          Fix some ugly code without changing functionality.

        * tests/Stack_Recursion/README:
          Document what this test really does.

Wed Aug 15 15:00:38 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/Borland/ChatClientWnd.h:
        * examples/Logging/Logger.idl:
        * examples/Quoter/Quoter.idl:
        * examples/mfc/Resource.h:
        * examples/mfc/StdAfx.h:
        * examples/mfc/StdAfx.cpp:

          Untabify.

Wed Aug 15 11:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Array_Allocation_Traits_T.h:
        * tao/Bounded_Reference_Allocation_Traits_T.h:
        * tao/Bounded_Value_Allocation_Traits_T.h:
        * tao/Valuetype/Bounded_Valuetype_Allocation_Traits_T.h:
          Don't preallocate all sequence members when using bound sequences,
          this could lead to a stack overflow when using recursive types
          as described in bugzilla 3042. Thanks to Stanislaw Trytek
          <tryteks at pit dot edu dot pl> for reporting this.

        * tests/Bug_3042_Regression/*:
          New regression test for bug 3042, thanks to Stanislaw Trytek
          <tryteks at pit dot edu dot pl> for creating this one

Tue Aug 14 21:50:40 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Factory.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:

          Make sure HTIOP builds and runs properly in an IPv6 enabled
          environment.

        * orbsvcs/tests/HTIOP/AMI/client.cpp:
        * orbsvcs/tests/HTIOP/AMI/server.cpp:

        * orbsvcs/tests/HTIOP/HT_Config.conf:

        * orbsvcs/tests/HTIOP/Hello/client.cpp:
        * orbsvcs/tests/HTIOP/Hello/server.cpp:

          Fix up the tests to run cleanly in a nightly build environment
          This is primarily fixing the configuration so that it does not
          depend on an external proxy, but will use one if locally
          configured to do so. Also fixed up the test output and command
          line processing to make it more consistent with other tests.

          I've not turned on the automatic running of these tests just
          yet, I'd rather wait and just make sure the build is clean. We
          can turn on the automatic run at some point later now that the
          tests are cleaned up.


Tue Aug 14 17:47:30 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/AnyTypeCode/append.cpp:
        * tao/CDR.cpp:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/Request.inl:
        * tao/IFR_Client/IFR_Base.pidl:
        * tao/IFR_Client/IFR_Basic.pidl:
        * tao/IFR_Client/IFR_Components.pidl:
        * tao/IFR_Client/IFR_Extended.pidl:
        * tao/Messaging/AMH_Response_Handler.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplate.pidl:
        * tao/PI/PICurrent.h:
        * tao/PI_Forward.pidl:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/PolicyS_T.inl:
        * tao/PortableServer/Servant_Dispatcher.h:
        * tao/Principal.cpp:
        * tao/Profile.cpp:
        * tao/RTCORBA/Linear_Priority_Mapping.h:
        * tao/RTCORBA/Linear_Priority_Mapping.cpp:
        * tao/RTCORBA/Multi_Priority_Mapping.cpp:
        * tao/RTCORBA/Network_Priority_Mapping.h:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Stub.inl:
        * tao/TAO_Singleton_Manager.inl:

          Untabify.

Tue Aug 14 16:19:35 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Cache_Entries.h:
        * tao/Cache_Entries.inl:
        * tao/Cache_Entries.cpp:
        * tao/Transport.inl:
        * tao/Transport.cpp:
        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Cache_Manager.cpp:

          Performance enhancement for looking up connections in the
          cache. The problem was that the fix for the transport cache
          problems required a call to Transport->is_connected(), which has
          a lock.

Tue Aug 14 10:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Selection_Guard.cpp:
          Fixed incorrect ACE_RCSID. Thanks to Bogdan Jeram
          <bjeram at eso dot org> for reporting this. This fixes bugzilla
          3040

Mon Aug 13 20:54:46 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tao/Transport_Cache_Manager.cpp:
          Eliminate the unused variable which was optimized out of
          existence by the previous check-in.

Mon Aug 13 18:57:05 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Cache_Manager.cpp:
          Optimize the most common path thru cache manager.

Mon Aug 13 17:53:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/POA/Demux/Demux.mpc:
          Fixed this mpc file

Mon Aug 13 14:16:58 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/MC/MonitorControl.mpc:
        * orbsvcs/tests/Notify/MC/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/MC/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/MC/test_monitor.cpp:

          Removed fuzz errors.

Mon Aug 13 12:11:29 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/Event_Comm/notifier.h:
        * examples/Event_Comm/supplier.h:
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/Task_Stats.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.cpp:
        * examples/Logging/Logger.idl:
        * examples/Quoter/Quoter.idl:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/Job.idl:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.h:
        * examples/RTScheduling/Synch_i.cpp:
        * examples/RTScheduling/Task_Stats.cpp:
        * examples/Simple/bank/Bank.idl:
        * examples/Simple/chat/client.cpp:
        * examples/Simple/echo/Echo.idl:
        * examples/Simulator/NavWeap.idl:
        * examples/mfc/MainFrm.h:
        * examples/mfc/MainFrm.cpp:
        * examples/mfc/client.cpp:
        * examples/mfc/server.h:
        * examples/mfc/server.cpp:
        * examples/mfc/serverDoc.h:
        * examples/mfc/serverDoc.cpp:
        * examples/mfc/serverView.h:
        * examples/mfc/serverView.cpp:

          Untabify.

Mon Aug 13 11:38:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:
        * orbsvcs/tests/Notify/MC/Makefile.am:
        * orbsvcs/tests/Notify/MC/MonitorControl.mpc:
        * orbsvcs/tests/Notify/MC/MonitorTestInterface.idl:
        * orbsvcs/tests/Notify/MC/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/MC/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/MC/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/MC/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/MC/notify.conf:
        * orbsvcs/tests/Notify/MC/notify.conf.xml:
        * orbsvcs/tests/Notify/MC/run_test.pl:
        * orbsvcs/tests/Notify/MC/test_monitor.cpp:
        * orbsvcs/tests/Notify/Makefile.am:

          Added a new test that involves a slow consumer and has a test
          monitor checking the state of the notification service at various
          times.

Mon Aug 13 11:19:28 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Consumer.h:
        * orbsvcs/orbsvcs/Notify/Consumer.cpp:

          Added a new function, assume_pending_events, so that events
          that were sent for a consumer are not lost during the consumer
          reconnect.

        * orbsvcs/orbsvcs/Notify/Event.h:

          Document the way that the queueable_copy() method works.

        * orbsvcs/orbsvcs/Notify/Event.cpp:

          Change the default reliable_ setting to true.  This doesn't cause
          any harm since this value is only inspected when persistence is
          enabled.

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:

          Removed an unused constructor from
          TAO_Notify_Method_Request_Dispatch_No_Copy.

        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:

          Added a constructor to make a TAO_Notify_Method_Request_Lookup
          using a deliver request.  And use this new constructor in the
          TAO_Notify_Method_Request_Lookup_Queueable constructor.

        * orbsvcs/orbsvcs/Notify/Object.cpp:

          Fixed a bug in find_qos_property_value() where finding a property
          would return false when, in fact, the property existed.

        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:

          Fixed a bug where getting the CosNotification::EventReliability
          would fail due to extraction of a CORBA::Any into the wrong type.

        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:

          Attempt to have the new consumer assume the pending events for the
          old consumer.

        * orbsvcs/orbsvcs/Notify/Routing_Slip.cpp:

          Fixed a locking issue where the lock was not being released at the
          correct time.  Also, reduced the number of mutex acquire()'s which
          will increase performence.

        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:

          Cleaned up the code by removing redundant sequence length settings
          and the TEST_SET_QOS and DISABLE_PROPERTIES_TODO #ifdef's.

        * orbsvcs/tests/Notify/Reconnecting/event.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_mt_both.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_st_both.conf:

          Fixed a bug where the wrong library name is used to find the
          Standard_Event_Persistence service.

        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:

          Cleaned up this script quite a bit and added a new test which
          tests the persistence of events that are sent by a supplier (upon
          reconnect) before the consumer reconnects.  The consumer should
          receive events sent during it's absence.

Mon Aug 12 10:45:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:

          Add a missing return true; from the original commit of:
          Tue Jul 10 10:20:00 UTC 2007  Simon Massey  <sma@prismtech.com>

Sat Aug 11 17:20:15 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/AMH/Sink_Server/client.cpp:
        * examples/AMH/Sink_Server/mt_server.cpp:
        * examples/AMH/Sink_Server/st_server.cpp:
        * examples/AMI/FL_Callback/peer.cpp:
        * examples/AMI/FL_Callback/progress.cpp:
        * examples/Advanced/ch_12/client.cpp:
        * examples/Advanced/ch_12/server.cpp:
        * examples/Advanced/ch_18/client.cpp:
        * examples/Advanced/ch_18/server.cpp:
        * examples/Advanced/ch_21/client.cpp:
        * examples/Advanced/ch_21/server.cpp:
        * examples/Advanced/ch_3/client.cpp:
        * examples/Advanced/ch_3/server.cpp:
        * examples/Advanced/ch_8_and_10/client.cpp:
        * examples/Advanced/ch_8_and_10/server.cpp:
        * examples/Buffered_AMI/client.cpp:
        * examples/Buffered_AMI/server.cpp:
        * examples/Buffered_Oneways/client.cpp:
        * examples/Buffered_Oneways/server.cpp:
        * examples/CSD_Strategy/ThreadPool/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool2/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool2/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool3/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool3/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool4/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool5/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool5/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool6/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool6/server_main.cpp:
        * examples/Callback_Quoter/consumer.cpp:
        * examples/Callback_Quoter/notifier.cpp:
        * examples/Callback_Quoter/supplier.cpp:
        * examples/Content_Server/AMI_Iterator/client.cpp:
        * examples/Content_Server/AMI_Iterator/server.cpp:
        * examples/Content_Server/AMI_Observer/client.cpp:
        * examples/Content_Server/AMI_Observer/server.cpp:
        * examples/Content_Server/SMI_Iterator/client.cpp:
        * examples/Content_Server/SMI_Iterator/server.cpp:
        * examples/Event_Comm/consumer.cpp:
        * examples/Event_Comm/notifier.cpp:
        * examples/Event_Comm/supplier.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/server.cpp:
        * examples/Load_Balancing/Identity_Client.cpp:
        * examples/Load_Balancing/Identity_Server.cpp:
        * examples/Load_Balancing/Load_Balancing_Service.cpp:
        * examples/Load_Balancing_persistent/Identity_Client.cpp:
        * examples/Load_Balancing_persistent/Identity_Server.cpp:
        * examples/Load_Balancing_persistent/Load_Balancing_Service.cpp:
        * examples/Logging/Logging_Service.cpp:
        * examples/Logging/Logging_Test.cpp:
        * examples/OBV/Typed_Events/client.cpp:
        * examples/OBV/Typed_Events/server.cpp:
        * examples/Persistent_Grid/client.cpp:
        * examples/Persistent_Grid/persistent_client.cpp:
        * examples/Persistent_Grid/server.cpp:
        * examples/PluggableUDP/tests/Performance/client.cpp:
        * examples/PluggableUDP/tests/Performance/server.cpp:
        * examples/Quoter/Factory_Finder.cpp:
        * examples/Quoter/Generic_Factory.cpp:
        * examples/Quoter/client.cpp:
        * examples/Quoter/server.cpp:
        * examples/RTCORBA/Activity/Activity.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/MIF_Scheduler/test.cpp:
        * examples/RTScheduling/Starter.cpp:
        * examples/Simple/bank/client.cpp:
        * examples/Simple/bank/server.cpp:
        * examples/Simple/chat/client.cpp:
        * examples/Simple/chat/server.cpp:
        * examples/Simple/echo/client.cpp:
        * examples/Simple/echo/server.cpp:
        * examples/Simple/grid/client.cpp:
        * examples/Simple/grid/server.cpp:
        * examples/Simple/time-date/client.cpp:
        * examples/Simple/time-date/server.cpp:
        * examples/Simple/time/client.cpp:
        * examples/Simple/time/server.cpp:
        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp:
        * examples/Simulator/Event_Supplier/Event_Con.cpp:
        * examples/Simulator/Event_Supplier/Event_Sup.cpp:
        * examples/Simulator/Event_Supplier/Logging_Sup.cpp:
        * examples/mfc/client.cpp:

          Use ACE_TMAIN instead of main to adhere to ACE/TAO coding guidlines.

        * examples/AMH/Sink_Server/Sink_Server.mpc:
        * examples/AMI/FL_Callback/FL_Callback.mpc:
        * examples/Advanced/ch_8_and_10/Advanced_ch_8_and_10.mpc:
        * examples/Callback_Quoter/Callback_Quoter.mpc:
        * examples/Event_Comm/Event_Comm.mpc:
        * examples/Logging/Logging.mpc:
        * examples/Persistent_Grid/Persistent_Grid.mpc:
        * examples/Quoter/Quoter.mpc:
        * examples/Simple/chat/chat.mpc:

          Explicitly set exename in MPC files. This is required because MPC does
          not recognize ACE_TMAIN as a program entry point.

Sat Aug 11 11:38:47 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.cpp:

          Re-applying Dale's change. The lock up I noticed was the result
          of attempting to recursively grab a non-recursive lock. With
          that sorted out, the patch is otherwise fine. At least on my
          machine.

Sat Aug 11 02:34:18 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.cpp:

          Reverting Dale's change. This causes tests to sieze up, at least
          on linux.

Fri Aug 10 21:59:23 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.cpp:

          The cache manager uses an index to distinguish between duplicate
          cache entries.  It makes some invalid assumptions about this
          index.  This changes corrects one of those assumptions which led
          to poor performance and/or failure of multithreaded latency
          performance tests.

Fri Aug 10 15:33:54 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * docs/notification/monitor.html:

          Added documentation for the Notification Service Monitor.

        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:

          Catch potential exceptions from the "shutdown" command.

        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMC.idl:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:

          Modified to throw the InvalidName exception if the name provided
          to shutdown_event_channel does not correspond to an event channel.

Fri Aug 10 10:22:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Loader/Servant_Activator.cpp:
          Fixed OpenVMS warning

Thu Aug  9 16:39:53 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tao/Transport_Cache_Manager.cpp:
          Clean up log messages.
            Consistent formatting
            Consistent use of TAO_debug_level and LM_xxxx
               TAO_debug_level > 0: recoverable/ignorable error condition (LM_ERROR)
               TAO_debug_level > 4: normal transport cache operations (LM_INFO)
               TAO_debug_level > 6: detailed cache operations (LM_DEBUG)
               TAO_debug_level > 8: for debugging the cache itself

Thu Aug  9 14:31:02 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tao/Transport.cpp:
          Fix indenting.
          In post_open set cache entry state to ENTRY_IDLE_BUT_NOT_PURGABLE directly
          rather than trying to re-register.
          Remove the call to purge_entry in the destructor.  If this transport
          is still in the cache at the time it gets destroyed, we're already in deep trouble.

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Cache_Manager.cpp:
          Change some argument types from reference to pointer entry to simple pointer.
          These routines don't change the pointer.  They only change the entry.
          Add set_entry_state method to directly change the state of a cached entry.

Thu Aug  9 08:22:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,inl}:
          Disabled some methods and members when CORBA messaging is disabled

        * tao/RTPortableServer/RT_Policy_Validator.cpp:
          Layout changes

        * tao/Makefile.am:
          Corrected an error in this file

Thu Aug  9 04:23:07 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
          More support for IPv6 by allowing the acceptance of IPv4 or IPv6
          addresses during endpoint validation.

Wed Aug  8 18:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Messaging_ORBInitializer.cpp:
          Fixed unused argument warning

Wed Aug  8 15:06:35 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:

          Fix for SSLIOP when used with IPv6 and Bidir.

        * tao/TAO_Server_Request.cpp:

          Fix for using GIOP versions other than the default. The
          particular problem was that servers always return raised
          exceptions using their default GIOP version, not the version
          used by the client.

Wed Aug  8 14:56:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.{h,cpp,inl}:
          Make use of default argument values and inline methods

Wed Aug  8 14:17:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Codeset.mpc:
        * tao/Makefile.am:
          We really don't need Any/TypeCode support for the pidl file, so
          remove the generation of them.

Wed Aug  8 12:29:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Codeset.mpc:
        * tao/Codeset/Codeset_Manager_i.cpp:
        * tao/Codeset/CodeSetContext.pidl:
        * tao/CONV_FRAME.pidl:
        * tao/Makefile.am:
          Moved the CodeSetContext struct to the Codeset library, it
          is only used by code in this library.

Wed Aug  8 11:58:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.{cpp,h}:
          Reduced codesize of Active Object Map when CORBA/e micro is enabled

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Layout change

Wed Aug  8 11:22:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode.mpc:
        * tao/AnyTypeCode/PolicyA.cpp:
        * tao/AnyTypeCode/PolicyA.h:
        * tao/corba.h:
        * tao/Makefile.am:
        * tao/orb.idl:
        * tao/Policy.pidl:
        * tao/Policy_Current.h:
        * tao/Policy_Current.pidl:
        * tao/Policy_Manager.h:
        * tao/Policy_Manager.pidl:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/tao.mpc:
        * tao/Messaging/Messaging.h:
          Moved PolicyCurrent and PolicyManager to their own files. This
          reduces footprint for applications that have corba messaging
          disabled. Fixes bugzilla 3033

Wed Aug  8 10:19:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DiffServPolicy/DiffServPolicy.cpp
        * tao/DiffServPolicy/DiffServPolicy.h
        * tao/EndpointPolicy/EndpointPolicy.cpp
        * tao/EndpointPolicy/EndpointPolicy.h
        * tao/TAO_Internal.cpp
          Rework the Diffserv policy loader to avoid loading a dll during
          a static initializer, as described in Sun Aug  5 18:58:12 UTC
          2007  Johnny Willemsen  <jwillemsen@remedy.nl>.

Wed Aug  8 08:38:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/diff/PolicyFactory.diff:
          Updated

        * tao/RTCORBA/RTCORBA.h:
          Fixed compile problem when messaging is disabled

Wed Aug  8 06:51:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Timed_Buffered_Oneways/client.cpp:
        * tests/Oneway_Timeouts/client.cpp:
        * tests/Oneway_Timeouts/run_test.pl:
          Replaced SYNC_EAGER_BUFFERING with SYNC_NONE, they are the same and
          SYNC_EAGER_BUFFERING is removed

Tue Aug  7 15:24:09 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/POA_Helper.h:
        * orbsvcs/orbsvcs/Notify/POA_Helper.cpp:

          Added code to support the persistent POA activation of the notify
          event channel by default.

        * orbsvcs/tests/Notify/Persistent_POA/Makefile.am:
        * orbsvcs/tests/Notify/Persistent_POA/Persistent_POA.mpc:
        * orbsvcs/tests/Notify/Persistent_POA/README:
        * orbsvcs/tests/Notify/Persistent_POA/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Persistent_POA/run_test.pl:

          Added a test to ensure that the notify event channel persistent
          POA changes work properly.

        * configure.ac:
        * orbsvcs/tests/Notify/Makefile.am:

          Updated to reflect the new Makefile added for the test.

Tue Aug  7 12:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbconf.h:
          Also disable interceptors with CORBA/e

Tue Aug  7 12:41:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IOP_IOR.pidl:
        * tao/PortableServer/Root_POA.h:
          Removed TaggedComponentList and use TaggedComponentSeq, the first
          one is not part of the CORBA spec, the second is.

        * tao/IORInterceptor/IORInfo.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/IORInterceptor/IORInterceptor_Details.h:
          Layout changes

Tue Aug  7 11:48:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/DomainA.cpp:
        * tao/AnyTypeCode/DomainA.h:
        * tao/Domain.mpc:
        * tao/Domain.pidl:
        * tao/Domain/diffs/Domain.diff:
        * tao/Domain/domain_export.h:
        * tao/Domain/DomainS.cpp:
        * tao/Domain/DomainS.h:
        * tao/Domain/DomainS.inl:
        * tao/Domain/DomainS_T.cpp:
        * tao/Domain/DomainS_T.h:
        * tao/Domain/DomainS_T.inl:
        * tao/Domain/TAO_Domain.pc.in:
        * tao/Domain/TAO_Domain.rc:
        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/DomainC.inl:
          Removed all these files, Domain.pidl defined some interfaces
          that are not used at all in TAO and not implemented. When we
          really are going to implement these, we will readd them. This
          saves footprint for all applications. Fixes bugzilla issue
          3018.

        * tao/IFR_Client_Adapter.h:
          Layout changes

        * tao/Makefile.am:
        * tao/tao.mpc:
          Updated

        * tao/Stub.{h,cpp}:
          Uninlined the refcount methods again, caused a footprint increase
          in servant libraries

        * tao/corba.h:
          Removed include of DomainC.h

Tue Aug  7 11:24:41 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:

          Use CORBA::ULong with sequences instead of size_t.

Tue Aug  7 09:46:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CORBALOC_Parser.{h,cpp,inl}:
          Added new TAO_HAS_CORBALOC_PARSER that defaults to 1, set to 0 to
          disable this parser

        * tao/CORBANAME_Parser.{h,cpp}:
          Added new TAO_HAS_CORBANAME_PARSER that defaults to 1, set to 0 to
          disable this parser

        * tao/DLL_Parser.{h,cpp}:
          Added new TAO_HAS_DLL_PARSER that defaults to 1, set to 0 to
          disable this parser

        * tao/FILE_Parser.{h,cpp}:
          Added new TAO_HAS_FILE_PARSER that defaults to 1, set to 0 to
          disable this parser

        * tao/HTTP_Client.{h,cpp}:
        * tao/HTTP_Handler.{h,cpp}:
        * tao/HTTP_Parser.{h,cpp}:
          Added new TAO_HAS_HTTP_PARSER that defaults to 1, set to 0 to
          disable this parser
        * tao/MCAST_Parser.{h,cpp.inl}:
          Added new TAO_HAS_MCAST_PARSER that defaults to 1, set to 0 to
          disable this parser

        * tao/default_resource.cpp:
          Update the logic to file the parser_names array

        * tao/ORB_Core.{h,cpp.inl}:
        * tao/Transport_Queueing_Strategies.{h,cpp}:
          Removed the default queueing strategy, just return 0 as
          transport queue strategy in the default case, the Transport
          has already set the correct defaults and we don't need to change
          the settings at that moment. Saves a virtual call in the critical
          path.

        * tao/ORB_Core.{h,cpp.inl}:
          Reworked get_transport_queueing_strategy to use a switch

        * tao/orbconf.h:
          Set all defines for the different parsers to 1 if they are not
          set

        * tao/Stub.{h,inl}:
          Made a few methods inline

        * tao/TAO_Internal.cpp:
          Only do a process directive for a parser when it is enabled

        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/TAO.pidl:
        * tao/Invocation_Adapter.cpp
          Removed TAO::SYNC_EAGER_BUFFERING, it is the same as
          Messaging::SYNC_NONE.

Tue Aug  7 08:12:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,inl}:
          Disable the new queueing strategy methods when buffering constraint
          is not enabled

Mon Aug  6 19:53:24 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/EndpointPolicy.h:
        * tao/EndpointPolicy/EndpointPolicy.cpp:

        * tao/TAO_Internal.cpp:

          Rework the Endpoint policy loader to avoid loading a dll during
          a static initializer, as described in Sun Aug  5 18:58:12 UTC
          2007  Johnny Willemsen  <jwillemsen@remedy.nl>.

Mon Aug  6 18:31:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Buffering_Constraint_Policy.{h,cpp,inl}:
        * tao/Messaging/Buffering_Constraint_Policy.{h,cpp,inl}:
          Moved the Buffering Constraint Policy to the Messaging Library. It
          doesn't need in the core, and if someone wants to create the Policy
          he already needed the Messaging library

        * tao/extra_core.mpb:
          Removed Buffering_Constraint_Policy.cpp:

        * tao/Makefile.am:
          Updated

        * tao/Messaging/Messaging.pidl:
          Include TAO_Ext.pidl

        * tao/Messaging/Messaging_ORBInitializer.cpp:
          Set the buffering constraint strategies into the ORB

        * tao/Messaging/Messaging_PolicyFactory.{h,cpp}:
          Updated for the fact that the Buffering Constraint Policy is now
          in the Messaging lib

        * tao/Transport_Queueing_Strategies.{h,cpp}:
        * tao/Messaging/Messaging_Queueing_Strategies.{h,cpp}:
          Moved the strategies that used the Buffering Constraint Policy to
          the Messaging lib

        * tao/Messaging/TAO_Ext.pidl:
        * tao/TAO.pidl:
          Moved Buffering Constraint Policy to Messaging

        * tao/ORB_Core.{h,cpp,inl}:
          Updated all queueing strategy methods to return a pointer and
          added set methods for the strategies that are now in the
          messaging lib

        * tao/Stub.{h,cpp}:
          Return the queueing strategy as pointer

        * tao/tao.mpc:
          Removed Buffering_Constraint_Policy.h

        * tao/Transport.cpp:
          Updated to handle the queuing strategy as pointer

Mon Aug  6 18:17:55 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Notify_Service/Notify_Service.cpp:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Delivery_Request.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Standard_Event_Persistence.cpp:
        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp:
        * orbsvcs/tests/Notify/lib/Driver.cpp:

          Changed my static_cast's from Mon Aug  6 13:53:30 UTC 2007 into
          ACE_Utils::truncate_cast's.

Mon Aug  6 18:09:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Makefile.am:
          Removed POA directory

        * examples/POA/*:
          Deleted

Mon Aug  6 13:53:30 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Notify_Service/Notify_Service.cpp:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/Delivery_Request.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Standard_Event_Persistence.cpp:
        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp:
        * orbsvcs/tests/Notify/lib/Driver.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.h:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.h:

          Added static_cast's and changed types to avoid type mismatch
          warnings on 64-bit builds.

Mon Aug  6 13:39:40 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Default_Factory.h:
        * orbsvcs/orbsvcs/Notify/RT_Factory.h:

          Reverted my change from Thu Aug  2 11:33:16 UTC 2007 and Fri Aug
          3 18:46:13 UTC 2007.

        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:

          Added the -w-hid option for borland and bmake project types to the
          CosNotification_MC_Ext and RT_Notification projects since
          Borland doesn't support "using" within a class and doesn't support
          #pragma warning (disable :8022).  The only other alternative is to
          duplicate a lot of code.

Mon Aug  6 11:45:14 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic_Registry.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h:

          Added an export to the nested exception classes.

Mon Aug  6 11:17:39 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/Makefile.am:

          Changed the idl flags to create the include for the export header
          to include orbsvcs/Notify/MonitorControl and
          orbsvcs/Notify/MonitorControlExt for the CosNotification_MC and
          CosNotification_MC_Ext projects respectively.

Mon Aug  6 11:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,cpp,inl}:
        * tao/params.{h,cpp,inl}:
          Moved collocation_resolver to ORB params. timeout_hook
          and sync_scope hook are moved to the ORB. This way we
          use Service Config less in the critical path and can
          in the future make these different for different orbs

        * tao/Messaging/Messaging_ORBInitializer.cpp:
          Set the sync_scope and timeout_hook into the ORB

        * tao/PortableServer/PortableServer.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/RTCORBA/RT_Endpoint_Selector_Factory.h:
        * tao/Strategies/Optimized_Connection_Endpoint_Selector.h:
          Layout changes

        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
          Set the collocation resolver name into the ORB

        * tao/Strategies/OC_Endpoint_Selector_Factory.h:
          Fixed typo in comment

        * tao/Transport.cpp:
          Use true instead of 1

Mon Aug  6 05:12:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/IORManipulation/IORManip_Loader.cpp:
          Layout change

        * tao/CSD_Framework/CSD_Framework_Loader.cpp:
          Added missing process_directive, fixes failure of the CSD tests

        * tao/CSD_ThreadPool/CSD_ThreadPool.h:
          Removed usage of ACE_HAS_BROKEN_STATIC_CONSTRUCTORS, this macro
          has been removed a long time ago

Sun Aug  5 19:14:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Forwarding/run_test.pl:
          Updated for cross platform testing

Sun Aug  5 18:58:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CSD_Framework/CSD_Framework_Loader.cpp:
        * tao/CSD_Framework/CSD_Framework_Loader.h:
          Don't register the ORBInitializer in the static method, this causes
          problems when loading libraries on demand because this code does
          trigger the loading of the PI library. The windows documentation states
          explicityly that only very simple things should be done in static
          methods, no loading of libraries. Thanks to Iliyan Jeliazkov and
          Adam Mitz for analyzing why the Two_DLL_Orb fails on Windows. This is
          related to bugzilla issue 2994

        * tao/TAO_Internal.cpp:
          Try to call init on the CSD_Framework_Loader

        * tao/CSD_ThreadPool/CSD_ThreadPool.cpp:
          Updated for CSD_Framework change

        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/PI_Server_Loader.h:
        * tao/PortableServer/Operation_Table_Perfect_Hash.cpp:
        * tao/Valuetype/Valuetype_Adapter_Factory_Impl.h:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:
          Layout change

Sun Aug  5 18:01:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/File_IO/run_test.pl:
          Added -sdebug and -cdebug to run server and/or client with
          debugging

Fri Aug  3 19:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/IDL_Cubit/run_test.pl:
          Removed references to lite protocols

Fri Aug  3 18:46:13 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Default_Factory.h:
        * orbsvcs/orbsvcs/Notify/RT_Factory.h:

          Changed to check for Borland <= 0x590 instead of all versions of
          Borland compilers.

Fri Aug  3 12:44:51 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/Makefile.am:

          Fixed an issue where the destination directory for the idl
          generated files does not exist (for automake only).

        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:

          Fixed build warnings about conversion from size_t to CORBA::Ulong.

Fri Aug  3 08:56:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Single_Threaded_POA/run_test.pl:
          Extended the timeout

        * POA/Single_Threaded_POA/Single_Threaded_POA.cpp:
          Layout changes

Thu Aug  2 19:30:30 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tao/Transport_Connector.cpp:
          remove_reference call was disabled for testing. Put it back in.

Thu Aug  2 14:24:11 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tao/Strategies/SCIOP_Connector.cpp:
          Provide correct arguments to wait_for_connection_completion.

Thu Aug  2 14:07:01 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
          Made so that TAO_Naming_Server uses ACE_DEFAULT_MULTICASTV6_ADDR
          in IPv6 builds.

        * orbsvcs/tests/Simple_Naming/run_test_ipv6.pl:
        * orbsvcs/tests/Simple_Naming/run_test.pl:
          Updated this test so that in IPv4 builds it uses strictly IPv4
          multicast address and in IPv6 builds it uses node-local (starting
          with ff01) multicast address since IPv6 networking is not properly
          configured on TAO tests machines and thus other types of IPv6
          multicast addresses do not work.

Thu Aug  2 11:33:16 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Default_Factory.h:
        * orbsvcs/orbsvcs/Notify/RT_Factory.h:

          The Borland compiler does not honor the "using" statement.
          Instead of duplicating every create() function in the sub-classes,
          I have disabled the 8022 warning for these headers only.  The
          warning is pushed and popped in each header.

Thu Aug  2 09:45:21 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/ast_component.h:

          Added 'line_number' member to the port description struct.
          Since ports aren't nodes (which store their line numbers)
          in the AST, this helps some backends get a total ordering
          of a component's members.

        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:

          Added code to set the line number member before the port
          description struct in enqueued in its component node.

Thu Aug  2 09:03:02 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/idl_defines.h:

          Changed the size of the buffer that holds filenames to be
          processed from 1024 to 2048. A crash was reported and it
          was determined that there was an attempt to process ~1450
          IDL files.

Thu Aug  2 08:55:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2935_Regression/Bug_2935_Regression.mpc:
          Simplified this mpc file

Thu Aug  2 08:39:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Asynch_Queued_Message.cpp:
        * tao/Condition.cpp:
        * tao/Connection_Handler.cpp:
        * tao/default_client.cpp:
        * tao/default_resource.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Muxed_TMS.cpp:
        * tao/orbconf.h:
        * tao/Queued_Data.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Thread_Lane_Resources.cpp:
        * tao/Transport.cpp:
        * tao/Valuetype/ValueBase.cpp:
          Replaced @@TODO with @todo so that doxygen adds this to the
          documentation

Thu Aug  2 03:15:32 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Bug_2935_Regression/middle_i.h:
        * tests/Bug_2935_Regression/middle_i.cpp:
        * tests/Bug_2935_Regression/sink_i.h:
        * tests/Bug_2935_Regression/sink_i.cpp:
          Removed ACE_THROW_SPEC anachronisms.

        * tests/Bug_2935_Regression/Bug_2935_Regression.mwc:
          Removed this file.

Wed Aug  1 21:54:15 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * NEWS:
          Add entries for fixing ORBMuxedConnectionMax and too-many-connections.

Wed Aug  1 21:26:32 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * tests/Bug_2935_Regression:
        * tests/Bug_2935_Regression/Bug_2935_Regression.mpc:
        * tests/Bug_2935_Regression/Bug_2935_Regression.mwc:
        * tests/Bug_2935_Regression/README.txt:
        * tests/Bug_2935_Regression/ThreeTier.idl:
        * tests/Bug_2935_Regression/middle.conf:
        * tests/Bug_2935_Regression/middle.cpp:
        * tests/Bug_2935_Regression/middle_i.h:
        * tests/Bug_2935_Regression/middle_i.cpp:
        * tests/Bug_2935_Regression/run_test.pl:
        * tests/Bug_2935_Regression/sink.cpp:
        * tests/Bug_2935_Regression/sink_i.h:
        * tests/Bug_2935_Regression/sink_i.cpp:
        * tests/Bug_2935_Regression/source.cpp:
        * tests/Bug_2935_Regression/source_i.h:
        * tests/Bug_2935_Regression/source_i.cpp:
          Add regression test for Wed Aug  1 15:54:01 UTC 2007  checkin

Wed Aug  1 21:16:15 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/Cache_Entries.h:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.cpp:
        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:
        * tests/AMH_Oneway/client.cpp:
        * tests/Bug_1476_Test/client.cpp:
          Jonnny's suggestions
          Change find_transport's busy_count argument from unsigned int
          to size_t
          Use @todo rather than @@TODO -- reference bugzilla entrys to track the todos.

Wed Aug  1 15:54:01 UTC 2007  Dale Wilson  <wilsond@ociweb.com>

          Corrections for bugs #2934 and #2935: connection problems in
          the transport cache.

          Briefly: the change involves adding the transport to the
          cache at the time the connection is initiated rather than
          waiting until the connection is complete.   This avoids the
          situation where *way* too many connections are started in a
          nested upcall and/or multithreading situation because none
          of the connection attempts know the others are already in
          progress.
          At the same time it eliminates the wait-for-condition code
          technique for honoring the -MaxMuxedConnections. The old
          technique is unsafe and ineffective.

        * tao/Cache_Entries.h:
        * tao/Cache_Entries.inl:
          Declare new cache entry status:  ENTRY_CONNECTING
          Make the recycle_state method const (it's poorly named, but I'm not
          fixing that now.)

        * tao/IIOP_Connector.cpp:
          Use RAII to manage tlist (list of pending connections) during parallel
          connection.
          Update the cache (rather than adding a new entry) when connection is
          complete.
          Change the way the transport is registered with the reactor so that it
          is always registered before necessary.  Otherwise there was a race
          condition when thread A tried to use a newly established connection
          before thread B had "quite" finished preparing it for use.

        * tao/Transport.h:
          Declare new method: register_if_necessary to consolodate the various
          attempts to register the transport with the reactor.

        * tao/Transport.cpp:
          Implement and use register_if_necessary
          Update transport cache status in the post_connect method

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Cache_Manager.cpp:
          Change find_transport to return one of the following statuses:
            CACHE_FOUND_NONE
            CACHE_FOUND_CONNECTING
            CACHE_FOUND_BUSY
            CACHE_FOUND_AVAILABLE
          The more than one status applies, the last one in the above list
          overrides (i.e. if there's one available, never mind the other stuff.)
          Add an additional argument to find_transport to return the count of
          busy transport's found when none were available.  This helps the
          Transport_Connector to honor -MaxMuxedConnections.
          Remove the attempt to open a new connection from the cache.  It belongs
          in the Transport_Connector.
          Improve support for updating cache entry status.

        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:
          Eliminate TransportCleanupGuard.  It was ill conceived.
          Supply new argument to and accept new status returns from find_transport.
          New wait_for_transport method allows waiting for a connection to complete
          even if it was started elsewhere.
          The TAO_Connector::connect method has been reorganized.  It now consists
          of a while loop that retries the search for the transport in the cache
          until success, timeout, error, or a return because this is a non-blocking attempt.

          The transport found by this method *ALWAYS* comes from the cache.   There
          was code that attempted to short-circuit this for newly established connections
          but it led to quite a few subtle bugs.  The new approach shouldn't be any
          slower than the old one, but if is, there is room for improvment in the
          cache now that it doesn't have to handle all the special cases.   (i.e.
          consider long and carefully before trying to improve performance by reintroducing
          the short-circuit-on-new-connection code.)

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * tests/Bug_1476_Test/client.cpp:
          Supply additional argument to wait_for_connection_completion
          Supply new argument to Transport_Cache_Manager::find_transport
          Recognize new return status from Transport_Cache_Manager::find_transport
          [no functional change]

        * tao/IIOP_Transport.cpp:
          Log status code on error.

        * tao/Leader_Follower.cpp:
          Ignore null tranport pointer (effects logging only)

        * tests/AMH_Oneway/client.cpp:
          Add a sleep before process exit.  To quote the internal documentation:
           // The following sleep is a workaround for a defect in the Windows
           // implementation of sockets (Win XP)
           // The when this client exits after writing to a localhost socket
           // Windows discards any data that has not been read by the server.
           // The sleep gives the server time to catch up.  num_calls/2 gives
           // it half a second per request which *really* should be overkill, but
           // it also means the client will terminate before the server actually
           // handles the requests (a good thing).
           // I'm still trying to decide whether this should be a bugzilla entry.
           // wilsond@ociweb.com

        * tests/AMH_Oneway/server.cpp:
          Modified to honor -ORB arguments on command line [so I could diagnose the silly
          windows/localhost problem]

        * performance-tests/Latency/DII/Test.idl:
          Make the shutdown method a one-way to eliminate a very rare race condition while
          shutting down.

Wed Aug  1 11:44:24 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:

          Added the new Makefiles to the list that I added on Mon Jul 30
          13:13:58 UTC 2007.

Wed Aug  1 11:35:42 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Saver.h:
        * orbsvcs/orbsvcs/Notify/XML_Saver.cpp:
        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:

          Changed types or added static_cast's to avoid build warnings.

Wed Aug  1 10:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Collocated_Object_Proxy_Broker:
          Disable the correct method for CORBA/e

Wed Aug  1 09:02:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.h:
        * tao/Strategies/COIOP_Transport.cpp:
        * tao/Strategies/COIOP_Transport.h:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/DIOP_Transport.h:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.h:
        * tao/Transport.cpp:
        * tao/Transport.h:
        * tao/Wait_On_Read.cpp:
          Removed deprecated block argument from handle_input method.
          Fixes bugzilla bug 2253

Wed Aug  1 08:25:33 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnyTypeCode.mpc:

          Added inheritance of gen_ostream feature, similar to tao.mpc
          and valuetype.mpc, so the ostream operator overloads in the
          library can be conditionally compiled, if the feature is
          toggled on in default.features.

        * TAO_IDL/be/be_codegen.cpp:

          Added generation of preprocessor definition of GEN_OSTREAM_OPS,
          if the -Gos option is used, so the ostream operators can be
          seen in included ORB headers.

        * TAO_IDL/be/be_string.cpp:

          Fixed incorrect ostream code generation for wstring members
          in IDL types that have member acceessors (union and valuetype),
          since these accessors return CORBA::WChar *, whereas the
          corresponding member type in an IDL struct is TAO_WString_Manager.

          Thanks to Lothar Werzinger <lothar at tradescape dot biz> for
          reporting the compilation problems in generated code resulting
          from the above bugs.

Wed Aug  1 07:38:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Replaced ACE_LIB_TEXT with ACE_TEXT

        * tao/Asynch_Queued_Message.cpp:
        * tao/Asynch_Queued_Message.h:
        * tao/Queued_Message.h:
        * tao/Synch_Queued_Message.cpp:
          Made the heap allocated flag const and pass it to all constructors
          so that we don't have to set if after creating the qm.

Wed Aug  1 07:34:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/CosEC/TypedSimple/Consumer.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.cpp:
        * orbsvcs/tests/HTIOP/test_config.h:
          Replaced ACE_LIB_TEXT with ACE_TEXT

Tue Jul 31 14:12:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype.mpc:
          Added genostream as base project

Tue Jul 31 12:39:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Abstract_Servant_Base.h:
          Fixed typo in comment

        * tao/PortableServer/Adapter_Activator.h:
          Layout change

        * tao/PortableServer/POA.pidl:
        * tao/PortableServer/POAManagerFactory.pidl:
          Fixed a few ifdef checks so that also minimum corba with BCB
          can be used

        * tao/PortableServer/Servant_Base.{h,cpp}:
          Don't make methods dependent on CORBA/e or Minimum Corba. This
          makes it possible to use the -Gce and -Gmc options on the IDL
          files. When all generated files are removed from the repo the
          checks can be added again, created bugzilla 3019 as reminder for
          this.

        * MPC/config/corba_e_compact.mpb:
        * MPC/config/corba_e_micro.mpb:
        * MPC/config/core_minimum_corba.mpb:
          Added -Gce and -Gmc again

Tue Jul 31 12:22:20 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/run_test.pl:

          Set the executable property on this script.

Tue Jul 31 11:36:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDir_Policy_i.cpp:
        * tao/Policy_Current.cpp:
        * tao/Policy_Current.h:
        * tao/Policy_Current_Impl.h:
        * tao/Policy_Manager.inl:
        * tao/Policy_Set.cpp:
        * tao/PortableServer/Default_Policy_Validator.cpp:
        * tao/PortableServer/POA_Policy_Set.h:
        * tao/Stub.cpp:
          Layout changes

Tue Jul 31 11:35:53 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/Makefile.am:

          Added the tao_versioning_idl_defaults base project to the
          CosNotification_MC project.

Tue Jul 31 10:58:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/corba_e_compact.mpb:
        * MPC/config/corba_e_micro.mpb:
        * MPC/config/core_minimum_corba.mpb:
          Temporarily removed the new -Gce and -Gmc idl flags, the
          few generated files in the repo cause problems. We need to
          zap them asap.

Tue Jul 31 10:54:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object_Proxy_Broker.h:
          non_existent is not needed for CORBA/e

        * tao/Codeset_Translator_Base.h:
        * tao/Collocation_Proxy_Broker.h:
        * tao/Collocation_Resolver.h:
          Layout changes

Tue Jul 31 10:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocated_Object_Proxy_Broker.{h,cpp}:
          non_existent is not needed for CORBA/e

Tue Jul 31 07:22:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Abstract_Servant_Base.{h,cpp,inl}:
          Also disabled some methods with CORBA/e and Minimum CORBA in this
          class and made the constructor, copy constructor and assignment
          operator inline

        * tao/Makefile.am:
          Added new inline file

Tue Jul 31 06:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/compiler.html:
        * MPC/config/core_minimum_corba.mpb:
        * tao/Object.h:
        * tao/PortableServer/Servant_Base.{h,cpp}:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be_include/be_global.h:
          Added -Gmc to the IDL compiler to generate code targeted for
          Minimum CORBA. When this option is enabled we suppress several
          methods from the generation of the skeleton. This fixes
          bugzilla 3017

Tue Jul 31 05:42:34 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Server_Request.cpp:

        Fixing a typo in the base initializers list, only affecting
        no-interceptors builds.

Tue Jul 31 05:11:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.{h,cpp}:
          With CORBA/e no need to compile get_component

        * tao/Protocol_Factory.{h,cpp}:
          Made most methods pure virtual, derived classes must implement them

        * TAO_IDL/be/be_global.cpp:
          Added -Gce to the compiler flags

Mon Jul 30 21:12:51 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/Transport_Selection_Guard.h:

          Implementing the misisng operator=(), needed by
          TAO::CSD::FW_Server_Reques_Wrapper.

Mon Jul 30 18:54:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/compiler.html:
        * MPC/config/corba_e_compact.mpb:
        * MPC/config/corba_e_micro.mpb:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be_include/be_global.h:
          Added new option -Gce indicating that we are compiling with CORBA/e
          enabled. In that case we don't need to generate the _component
          method in the skeleton which safes footprint. This fixes bugzilla
          issue 2968

Mon Jul 30 18:17:45 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:

          Explicitly initialize struct members.  There is no constructor for
          IDL generated structs.

Mon Jul 30 18:12:58 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2926_Regression/server.cpp:

          Added a missing parameter to the TAO_CosNotify_Service::create()
          method.

Mon Jul 30 14:54:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/*:
        * tests/POA/*:
          Moved all POA examples to tests, this are all one button POA
          tests that we need to run in all core builds

Mon Jul 30 13:13:58 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/notification_mc.mpb:
        * MPC/config/notification_mc_ext.mpb:

          Added base projects for the new noftification service libraries.

        * NEWS:

          Added an entry for this new feature.

        * orbsvcs/Notify_Service/Notify_Service.cpp:

          Updated to provide the factory name during factory creation, the
          channel name during channel creation, and fixed a leak of objects
          during shutdown of the service.

        * orbsvcs/examples/Notify/MC/Makefile.am:
        * orbsvcs/examples/Notify/MC/TkMonitor/Makefile:
        * orbsvcs/examples/Notify/MC/TkMonitor/README:
        * orbsvcs/examples/Notify/MC/TkMonitor/external_idl.pl:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules/GeometryStore.pm:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules/MonitorControl.pm:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules/Tk:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules/Tk/active.xpm:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules/Tk/factory.xpm:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules/Tk/hand.xbm:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules/Tk/inactive.xpm:
        * orbsvcs/examples/Notify/MC/TkMonitor/modules/Tk/mask.xbm:
        * orbsvcs/examples/Notify/MC/TkMonitor/monitor.pl:

          Added a graphical interface written in perl to access the
          Notification Service Monitor.  It was written using opalORB.

        * orbsvcs/examples/Notify/Makefile.am:
        * orbsvcs/examples/Notify/MC/monitor/Makefile.am:
        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:
        * orbsvcs/examples/Notify/MC/monitor/monitor.mpc:

          Added a command line monitor to demonstrate the monitoring
          and control capabilities.

        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/Makefile.am:

          Added the new MC and MC_Ext libraries.

        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:

          Added a method to return the time of the oldest event in the
          queue.

        * orbsvcs/orbsvcs/Notify/Builder.h:
        * orbsvcs/orbsvcs/Notify/Builder.cpp:

          Enhanced the event channel factory and event channel building
          methods to take an optional name parameter.

        * orbsvcs/orbsvcs/Notify/Container_T.h:
        * orbsvcs/orbsvcs/Notify/Container_T.cpp:

          Added a method to destroy all of the objects held in the
          collection.

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:

          Implement the new finalize_service() method by destroying all
          event channels held by the provided event channel factory.
          Implement the updated create() method to provide the factory name
          to the builder.

        * orbsvcs/orbsvcs/Notify/Event.h:
        * orbsvcs/orbsvcs/Notify/Event.inl:
        * orbsvcs/orbsvcs/Notify/Event.cpp:

          Added a time of creation stamp on the event.

        * orbsvcs/orbsvcs/Notify/EventChannel.h:

          Changed to virtually inherit from
          POA_CosNotifyChannelAdmin::EventChannel and made the destroy()
          method public to allow the TAO_Notify_Container_T access.

        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:

          Added a call to destroy() on the supplier and consumer admin
          containers.  This cleans up the reference counts on the admins.

        * orbsvcs/orbsvcs/Notify/EventChannelFactory.h:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:

          Added a method to create a named event channel.  To support
          automatic creation of named event channels by the Notify_Service
          executable.  This version is the same as calling create_channel().

          Also fixed a leak during activation with the POA.  An extra narrow
          was occurring which was not stored in a var.

        * orbsvcs/orbsvcs/Notify/Factory.h:
        * orbsvcs/orbsvcs/Notify/Default_Factory.h:
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:

          Updated the create methods for event channel factories and event
          channels to take a name parameter.

        * orbsvcs/orbsvcs/Notify/Method_Request.h:
        * orbsvcs/orbsvcs/Notify/Method_Request.cpp:

          Added a time stamp that is populated by the event to which the
          request corresponds.

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.h:

          Fixed a doxygen comment.

        * orbsvcs/orbsvcs/Notify/MonitorControl/Control.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Control.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Control_Registry.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Control_Registry.cpp:

          A class that can be used to keep track of named control objects.

        * orbsvcs/orbsvcs/Notify/MonitorControl/Dynamic_Statistic.h:

          A template to facilitate the creation of statistics that are
          calculated on-the-fly.

        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic_Registry.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic_Registry.cpp:

          A generic class that can be used to keep track of named objects.

        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.cpp:

          This class allows the user to dynamically load the manager and
          configure it through the service configurator.  It starts a thread
          and services monitoring requests via an ORB that is separate from
          the ORB for the normal operation of the notification service.

        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMC.idl:

          Provide a definition of an interface to retrieve statistics and
          perform functions upon the Notify Service.

        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:

          Implements the CosNotification::NotificationServiceMonitorControl
          which includes accessing statistics and performing control
          functions on the notify service.

        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.inl:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.cpp:

          Implement a statistic object that can hold various types of data.

        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic_Registry.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic_Registry.cpp:

          A class that can be used to keep track of named statistic objects.

        * orbsvcs/orbsvcs/Notify/MonitorControl/notify_mc_export.h:

          Export file for the MC library.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Default_Factory.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Default_Factory.cpp:

          Implement a factory that will create the monitor versions of the
          event channel factory, event channel, supplier admin and consumer
          admin.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Notify_Service.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Notify_Service.cpp:

          Extend the TAO_CosNotify_Service to create the monitoring factory,
          run the monitor manager during initialization and shutdown the
          monitor manager during finalization.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorConsumerAdmin.cpp:

          Implement the NotifyMonitoringExt::ConsumerAdmin interface which
          includes creation of named proxy suppliers.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:

          Extend the TAO_Notify_EventChannel to track statistics and named
          supplier proxies and consumer proxies.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.cpp:

          Implement the NotifyMonitoringExt::EventChannelFactory interface
          which includes statistics registration and tracking event channel
          names.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorSupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorSupplierAdmin.cpp:

          Implement the NotifyMonitoringExt::SupplierAdmin interface which
          includes creation of named proxy consumers.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/NotifyMonitoringExt.idl:

          Provide a definition for the monitoring extensions to the event
          channel factory, supplier admin and consumer admin.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/notify_mc_ext_export.h:

          Export file for the MC_Ext library.

        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.h:
        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.cpp:

          Updated to take a factory name.

        * orbsvcs/orbsvcs/Notify/Object.h:
        * orbsvcs/orbsvcs/Notify/Object.cpp:

          Fixed a bug in destroy_proxy_poa() where the wrong poa object was
          being used.

          Added a method to access the worker task.

        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:

          Fixed a bug where a the object could not be destroyed if it had
          previously been shutdown.  This caused it and related objects to
          be leaked due to reference counts not being decremented.

        * orbsvcs/orbsvcs/Notify/RT_Factory.h:
        * orbsvcs/orbsvcs/Notify/RT_Factory.cpp:

          Removed duplicated functions that are inherited from
          TAO_Notify_Default_Factory.

        * orbsvcs/orbsvcs/Notify/Service.h:
        * orbsvcs/orbsvcs/Notify/Service.cpp:

          Added a static method to locate the notify service from a default
          list of service names.  This allows us to avoid duplicating this
          code everywhere a notify service is to be dynamically loaded.

          Added a pure virtual method to finalize the service and changed
          the create() method to take an optional factory name.

        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h:

          Made the destroy() method public to allow the
          TAO_Notify_Container_T access.

        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:

          Added an accessor for the buffering strategy.

        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.cpp:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.cpp:

          Use the TAO_Notify_Service::load_default() method to dynamically
          locate the notify service instead of duplicating code.

        * orbsvcs/tests/unit/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/Control/Control.cpp:
        * orbsvcs/tests/unit/Notify/MC/Control/Control.mpc:
        * orbsvcs/tests/unit/Notify/MC/Control/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/Control/run_test.pl:
        * orbsvcs/tests/unit/Notify/MC/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.mpc:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/run_test.pl:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/svc.conf:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/svc.conf.xml:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorClient.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorManager.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorManager.mpc:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/run_test.pl:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/svc.conf:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/svc.conf.xml:
        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.mpc:
        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/run_test.pl:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.mpc:
        * orbsvcs/tests/unit/Notify/MC/Statistic/run_test.pl:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Statistic_Registry.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Statistic_Registry.mpc:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/run_test.pl:
        * orbsvcs/tests/unit/Notify/Makefile.am:

          Added unit tests for the different components of the MC and MC_Ext
          libraries.

Mon Jul 30 12:18:29 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.inl:
        * tao/TAO_Server_Request.cpp:
        * tao/Transport_Selection_Guard.h:

          Eliminating duplication of the transport_ member from
          TAO_Server_Request. The Transport_Selection_Guard is a
          smart pointer, designed to work both as a normal pointer
          and with the transport current feature. When TC is disabled,
          it is also lightweight enough to avoid footprint increase.
          This fixes bugzilla 2991.

Mon Jul 30 11:24:47 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/GIOP_Fragments/PMB_With_Fragments/run_test.pl:
          Fixed this test on IPv6 builds by changing localhost to
          127.0.0.1.

Mon Jul 30 11:09:21 UTC 2007  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/MCAST_Parser.cpp:
          Made so that an opened datagram socket has a proper protocol
          family. This fixes TAO/orbsvcs/tests/Simple_Naming/run_test.pl
          of IPv6 builds.

Mon Jul 30 08:33:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Leader_Follower_Flushing_Strategy.cpp (flush_transport):
        * tao/Reactive_Flushing_Strategy.cpp (flush_transport):
          Const changes and no need for intermediate variable

        * tao/Transport.{h,cpp,inl}:
          Layout changes and updated queue_is_empty to return a bool

Fri Jul 27 06:50:14 CDT 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.5.10 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
