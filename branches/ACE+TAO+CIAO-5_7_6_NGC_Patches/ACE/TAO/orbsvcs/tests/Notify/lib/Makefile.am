##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)


## Makefile.NotifyTests_Lib.am

if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS

BUILT_SOURCES = \
  Activation_ManagerC.cpp \
  Activation_ManagerC.h \
  Activation_ManagerC.inl \
  Activation_ManagerS.cpp \
  Activation_ManagerS.h \
  Activation_ManagerS.inl

CLEANFILES = \
  Activation_Manager-stamp \
  Activation_ManagerC.cpp \
  Activation_ManagerC.h \
  Activation_ManagerC.inl \
  Activation_ManagerS.cpp \
  Activation_ManagerS.h \
  Activation_ManagerS.inl

Activation_ManagerC.cpp Activation_ManagerC.h Activation_ManagerC.inl Activation_ManagerS.cpp Activation_ManagerS.h Activation_ManagerS.inl: Activation_Manager-stamp

Activation_Manager-stamp: $(srcdir)/Activation_Manager.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs $(srcdir)/Activation_Manager.idl
	@touch $@

noinst_LTLIBRARIES = libTAO_NotifyTests.la

libTAO_NotifyTests_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -DTAO_HAS_TYPED_EVENT_CHANNEL \
  -DTAO_NOTIFY_TEST_BUILD_DLL

libTAO_NotifyTests_la_SOURCES = \
  Activation_Manager.cpp \
  Activation_ManagerC.cpp \
  Activation_ManagerS.cpp \
  Application_Command.cpp \
  Command.cpp \
  Command_Builder.cpp \
  Command_Factory.cpp \
  ConsumerAdmin_Command.cpp \
  Direct_Consumer.cpp \
  Direct_Supplier.cpp \
  Driver.cpp \
  EventChannel_Command.cpp \
  Factories_Define.cpp \
  Filter_Command.cpp \
  LookupManager.cpp \
  Name.cpp \
  Notify_Test_Client.cpp \
  Options_Parser.cpp \
  Peer.cpp \
  Periodic_Consumer.cpp \
  Periodic_Consumer_Command.cpp \
  Periodic_Supplier.cpp \
  Periodic_Supplier_Command.cpp \
  Priority_Mapping.cpp \
  PushConsumer.cpp \
  PushSupplier.cpp \
  Relay_Consumer.cpp \
  SequencePushConsumer.cpp \
  SequencePushSupplier.cpp \
  StructuredEvent.cpp \
  StructuredPushConsumer.cpp \
  StructuredPushSupplier.cpp \
  SupplierAdmin_Command.cpp \
  Task_Callback.cpp \
  Task_Stats.cpp \
  common.cpp

noinst_HEADERS = \
  Activation_Manager.h \
  Activation_Manager.idl \
  Activation_ManagerC.h \
  Activation_ManagerC.inl \
  Activation_ManagerS.h \
  Activation_ManagerS.inl \
  Application_Command.h \
  Command.h \
  Command_Builder.h \
  Command_Factory.h \
  Command_Factory_T.cpp \
  Command_Factory_T.h \
  ConsumerAdmin_Command.h \
  Consumer_T.cpp \
  Consumer_T.h \
  Direct_Consumer.h \
  Direct_Supplier.h \
  Direct_Supplier.inl \
  Driver.h \
  Driver_Base.h \
  EventChannel_Command.h \
  Factories_Define.h \
  Filter_Command.h \
  LookupManager.h \
  Name.h \
  Notify_PushConsumer.h \
  Notify_PushSupplier.h \
  Notify_SequencePushConsumer.h \
  Notify_SequencePushSupplier.h \
  Notify_StructuredPushConsumer.h \
  Notify_StructuredPushSupplier.h \
  Notify_Test_Client.h \
  Options_Parser.h \
  Peer.h \
  Peer.inl \
  Peer_T.cpp \
  Peer_T.h \
  Periodic_Consumer.h \
  Periodic_Consumer_Command.h \
  Periodic_Supplier.h \
  Periodic_Supplier_Command.h \
  Priority_Mapping.h \
  PushConsumer.h \
  PushConsumer.inl \
  PushSupplier.h \
  PushSupplier.inl \
  Relay_Consumer.h \
  Relay_Consumer.inl \
  SequencePushConsumer.h \
  SequencePushConsumer.inl \
  SequencePushSupplier.h \
  SequencePushSupplier.inl \
  StructuredEvent.h \
  StructuredPushConsumer.h \
  StructuredPushConsumer.inl \
  StructuredPushSupplier.h \
  StructuredPushSupplier.inl \
  SupplierAdmin_Command.h \
  Supplier_T.cpp \
  Supplier_T.h \
  Task_Callback.h \
  Task_Stats.h \
  Task_Stats.inl \
  common.h \
  notify_test_export.h

endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
