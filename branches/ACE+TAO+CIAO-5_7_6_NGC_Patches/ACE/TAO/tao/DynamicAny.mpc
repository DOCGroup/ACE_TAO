//$Id$
project(*idl) : tao_versioning_idl_defaults, valuetype {
  custom_only = 1
  IDL_Files {
    idlflags += -Gp -Gd -Sci -SS -Sorb \
                -Wb,export_macro=TAO_DynamicAny_Export \
                -Wb,export_include=tao/DynamicAny/dynamicany_export.h \
                -Wb,include_guard=TAO_DYNAMICANY_SAFE_INCLUDE \
                -Wb,safe_include=tao/DynamicAny/DynamicAny.h \
                -o DynamicAny
    DynamicAny/DynamicAny.pidl
  }
}

project(DynamicAny) : install, tao_output, valuetype, taoidldefaults {
  after       += *idl
  sharedname    = TAO_DynamicAny
  dynamicflags  = TAO_DYNAMICANY_BUILD_DLL

  Source_Files {
    DynamicAny/DynamicAny.cpp
    DynamicAny/DynamicAnyC.cpp
    DynamicAny/DynAny_i.cpp
    DynamicAny/DynArray_i.cpp
    DynamicAny/DynCommon.cpp
    DynamicAny/DynEnum_i.cpp
    DynamicAny/DynSequence_i.cpp
    DynamicAny/DynStruct_i.cpp
    DynamicAny/DynUnion_i.cpp
    DynamicAny/DynValue_i.cpp
    DynamicAny/DynValueBox_i.cpp
    DynamicAny/DynValueCommon_i.cpp
    DynamicAny/DynAnyFactory.cpp
  }

  Source_Files {
    DynamicAny/DynamicAnyC.cpp
  }

  Header_Files {
    DynamicAny
  }

  Inline_Files {
    DynamicAny
  }

  Template_Files {
    DynamicAny/DynAnyUtils_T.cpp
  }

  Resource_Files {
    DynamicAny
  }

  PIDL_Files {
    DynamicAny
  }

  IDL_Files {
  }

  Pkgconfig_Files {
    DynamicAny/TAO_DynamicAny.pc.in
  }
}
