<?xml version="1.0" encoding="utf-8"?>
<!-- 

Description
XML QoS Profile 

The QoS configuration of the DDS entities in the generated example is 
loaded from this file.

This file is used only when it is in the current working directory
or when the enviroment variable
NDDS_QOS_PROFILES is defined and points to this file.

For more information about XML QoS Profiles see Chapter 15 in the 
RTI Data Distribution Service user manual.
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="c:/ndds/ndds.4.4d/scripts/../resource/rtiddsgen/../qos_profiles_4.4d/schema/rti_dds_qos_profiles.xsd" version="4.4d">
  <!-- QoS Library containing the QoS profile used in the generated example.

        A QoS library is a named set of QoS profiles.
    -->
  <qos_library name="HelloTest_Library">
    <!-- QoS profile used to configure reliable communication between the DataWriter 
             and DataReader created in the example code.

             A QoS profile groups a set of related QoS.
        -->
    <qos_profile name="LatencyQoS" is_default_qos="true">
      <!-- QoS used to configure the data writer created in the example code -->

      <datawriter_qos>
        <!--
        The number of samples for which the middleware will set aside space.
        See the comments above for more information.
        -->
        <resource_limits>
          <max_instances>1000</max_instances>
          <initial_instances>1000</initial_instances>
          <max_samples>LENGTH_UNLIMITED</max_samples>
          <initial_samples>100</initial_samples>
          <max_samples_per_instance>LENGTH_UNLIMITED</max_samples_per_instance>
        </resource_limits>
        <!--
        The behavioral contract under which the DataWriter will carry out the
        reliability protocol. See the comments above for more information.
        -->
        <protocol>
          <rtps_reliable_writer>
            <low_watermark>10</low_watermark>
            <high_watermark>100</high_watermark>
            <heartbeats_per_max_samples>1000</heartbeats_per_max_samples>
            <heartbeat_period>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>10000000</nanosec>
            </heartbeat_period>
            <fast_heartbeat_period>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>1000000</nanosec>
            </fast_heartbeat_period>
            <late_joiner_heartbeat_period>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>10000000</nanosec>
            </late_joiner_heartbeat_period>
            <max_heartbeat_retries>LENGTH_UNLIMITED</max_heartbeat_retries>
            <min_nack_response_delay>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>DURATION_ZERO_NSEC</nanosec>
            </min_nack_response_delay>
            <max_nack_response_delay>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>DURATION_ZERO_NSEC</nanosec>
            </max_nack_response_delay>
          </rtps_reliable_writer>
        </protocol>

        <writer_data_lifecycle>
          <autodispose_unregistered_instances>false</autodispose_unregistered_instances>
        </writer_data_lifecycle>

      </datawriter_qos>
     
      <!-- QoS used to configure the data reader created in the example code -->
      <datareader_qos>
        <!--
        The number of samples for which the middleware will set aside space.
        See the comments above for more information.
        -->
        <resource_limits>
          <max_instances>1000</max_instances>
          <initial_instances>10</initial_instances>
          <max_samples>100</max_samples>
          <initial_samples>100</initial_samples>
          <max_samples_per_instance>100</max_samples_per_instance>
        </resource_limits>
        <reader_resource_limits>
          <max_samples_per_remote_writer>100</max_samples_per_remote_writer>
        </reader_resource_limits>

        <!--
        The behavioral contract under which the DataReader will carry out the
        reliability protocol. See the comments above for more information.
        -->
        <protocol>
          <rtps_reliable_reader>
            <min_heartbeat_response_delay>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>DURATION_ZERO_NSEC</nanosec>
            </min_heartbeat_response_delay>
            <max_heartbeat_response_delay>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>DURATION_ZERO_NSEC</nanosec>
            </max_heartbeat_response_delay>
            <heartbeat_suppression_duration>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>DURATION_ZERO_NSEC</nanosec>
            </heartbeat_suppression_duration>
          </rtps_reliable_reader>
        </protocol>
      </datareader_qos>
      
    </qos_profile>
  </qos_library>
</dds>