##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)

noinst_PROGRAMS =

## Makefile.Event_Comm_IDL.am

BUILT_SOURCES = \
  Event_CommC.cpp \
  Event_CommC.h \
  Event_CommC.inl \
  Event_CommS.cpp \
  Event_CommS.h \
  Event_CommS.inl

CLEANFILES = \
  Event_Comm-stamp \
  Event_CommC.cpp \
  Event_CommC.h \
  Event_CommC.inl \
  Event_CommS.cpp \
  Event_CommS.h \
  Event_CommS.inl

Event_CommC.cpp Event_CommC.h Event_CommC.inl Event_CommS.cpp Event_CommS.h Event_CommS.inl: Event_Comm-stamp

Event_Comm-stamp: $(srcdir)/Event_Comm.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St $(srcdir)/Event_Comm.idl
	@touch $@

noinst_HEADERS = \
  Event_Comm.idl

## Makefile.Event_Comm_Consumer.am

if BUILD_EXCEPTIONS

noinst_PROGRAMS += consumer

consumer_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs

consumer_SOURCES = \
  Consumer_Handler.cpp \
  Consumer_Input_Handler.cpp \
  Event_CommC.cpp \
  Event_CommS.cpp \
  Event_Comm_i.cpp \
  consumer.cpp \
  Consumer_Handler.h \
  Consumer_Input_Handler.h \
  Event_Comm_i.h

consumer_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNaming.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS

## Makefile.Event_Comm_Notifier.am

if BUILD_EXCEPTIONS

noinst_PROGRAMS += notifier

notifier_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs

notifier_SOURCES = \
  Event_CommC.cpp \
  Event_CommS.cpp \
  Event_Comm_i.cpp \
  Notifier_Server.cpp \
  notifier.cpp \
  Event_Comm_i.h \
  Notifier_Server.h \
  notifier.h

notifier_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_Utils.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNaming.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS

## Makefile.Event_Comm_Supplier.am

if BUILD_EXCEPTIONS

noinst_PROGRAMS += supplier

supplier_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs

supplier_SOURCES = \
  Event_CommC.cpp \
  Event_CommS.cpp \
  Event_Comm_i.cpp \
  Notifier_Handler.cpp \
  Supplier_Input_Handler.cpp \
  supplier.cpp \
  Event_Comm_i.h \
  Notifier_Handler.h \
  Supplier_Input_Handler.h \
  supplier.h

supplier_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNaming.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
