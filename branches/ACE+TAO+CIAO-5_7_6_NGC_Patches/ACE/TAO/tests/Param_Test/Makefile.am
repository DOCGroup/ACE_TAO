##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)

noinst_PROGRAMS =

## Makefile.Param_Test_Idl.am

BUILT_SOURCES = \
  param_testC.cpp \
  param_testC.h \
  param_testC.inl \
  param_testS.cpp \
  param_testS.h \
  param_testS.inl

CLEANFILES = \
  param_test-stamp \
  param_testC.cpp \
  param_testC.h \
  param_testC.inl \
  param_testS.cpp \
  param_testS.h \
  param_testS.inl

param_testC.cpp param_testC.h param_testC.inl param_testS.cpp param_testS.h param_testS.inl: param_test-stamp

param_test-stamp: $(srcdir)/param_test.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) $(srcdir)/param_test.idl
	@touch $@

noinst_HEADERS = \
  param_test.idl

## Makefile.Param_Test_Anyop.am

if BUILD_EXCEPTIONS

noinst_PROGRAMS += anyop

anyop_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR)

anyop_SOURCES = \
  anyop.cpp \
  param_testC.cpp \
  any.h \
  bd_array_seq.h \
  bd_long_seq.h \
  bd_short_seq.h \
  bd_str_seq.h \
  bd_string.h \
  bd_struct_seq.h \
  bd_wstr_seq.h \
  bd_wstring.h \
  big_union.h \
  client.h \
  complex_any.h \
  driver.h \
  except.h \
  fixed_array.h \
  fixed_struct.h \
  helper.h \
  multdim_array.h \
  nested_struct.h \
  objref.h \
  objref_struct.h \
  options.h \
  param_test_i.h \
  recursive_struct.h \
  recursive_union.h \
  results.h \
  short.h \
  small_union.h \
  tests.h \
  typecode.h \
  ub_any_seq.h \
  ub_array_seq.h \
  ub_long_seq.h \
  ub_objref_seq.h \
  ub_short_seq.h \
  ub_str_seq.h \
  ub_string.h \
  ub_struct_seq.h \
  ub_wstr_seq.h \
  ub_wstring.h \
  ulonglong.h \
  var_array.h \
  var_struct.h

anyop_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_Codeset.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS

## Makefile.Param_Test_Client.am

if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS

noinst_PROGRAMS += client

client_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR)

client_SOURCES = \
  any.cpp \
  bd_array_seq.cpp \
  bd_long_seq.cpp \
  bd_short_seq.cpp \
  bd_str_seq.cpp \
  bd_string.cpp \
  bd_struct_seq.cpp \
  bd_wstr_seq.cpp \
  bd_wstring.cpp \
  big_union.cpp \
  client.cpp \
  complex_any.cpp \
  driver.cpp \
  except.cpp \
  fixed_array.cpp \
  fixed_struct.cpp \
  helper.cpp \
  multdim_array.cpp \
  nested_struct.cpp \
  objref.cpp \
  objref_struct.cpp \
  options.cpp \
  param_testC.cpp \
  recursive_struct.cpp \
  recursive_union.cpp \
  results.cpp \
  short.cpp \
  small_union.cpp \
  typecode.cpp \
  ub_any_seq.cpp \
  ub_array_seq.cpp \
  ub_long_seq.cpp \
  ub_objref_seq.cpp \
  ub_short_seq.cpp \
  ub_str_seq.cpp \
  ub_string.cpp \
  ub_struct_seq.cpp \
  ub_wstr_seq.cpp \
  ub_wstring.cpp \
  ulonglong.cpp \
  var_array.cpp \
  var_struct.cpp \
  any.h \
  bd_array_seq.h \
  bd_long_seq.h \
  bd_short_seq.h \
  bd_str_seq.h \
  bd_string.h \
  bd_struct_seq.h \
  bd_wstr_seq.h \
  bd_wstring.h \
  big_union.h \
  client.h \
  complex_any.h \
  driver.h \
  except.h \
  fixed_array.h \
  fixed_struct.h \
  helper.h \
  multdim_array.h \
  nested_struct.h \
  objref.h \
  objref_struct.h \
  options.h \
  recursive_struct.h \
  recursive_union.h \
  results.h \
  short.h \
  small_union.h \
  typecode.h \
  ub_any_seq.h \
  ub_array_seq.h \
  ub_long_seq.h \
  ub_objref_seq.h \
  ub_short_seq.h \
  ub_str_seq.h \
  ub_string.h \
  ub_struct_seq.h \
  ub_wstr_seq.h \
  ub_wstring.h \
  ulonglong.h \
  var_array.h \
  var_struct.h

client_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_DynamicInterface.la \
  $(TAO_BUILDDIR)/tao/libTAO_Messaging.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_Valuetype.la \
  $(TAO_BUILDDIR)/tao/libTAO_Codeset.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING

## Makefile.Param_Test_Server.am

if BUILD_EXCEPTIONS

noinst_PROGRAMS += server

server_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR)

server_SOURCES = \
  param_testC.cpp \
  param_testS.cpp \
  param_test_i.cpp \
  server.cpp \
  param_test_i.h

server_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_Codeset.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
