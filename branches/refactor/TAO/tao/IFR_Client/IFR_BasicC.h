// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_ORIG_IFR_BASICC_H_
#define _TAO_IDL_ORIG_IFR_BASICC_H_

#include "ace/pre.h"

#include "IFR_BaseC.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "ifr_client_export.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_IFR_Client_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO TAO_IFR_Client_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48

TAO_NAMESPACE  CORBA
{
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_PRIMITIVEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_PRIMITIVEDEF__ODDS_N_ENDS_CH_
  
  class PrimitiveDef;
  typedef PrimitiveDef *PrimitiveDef_ptr;
  struct tao_PrimitiveDef_life;
  
  typedef
    TAO_Objref_Var_T<
        PrimitiveDef,
        tao_PrimitiveDef_life
      >
    PrimitiveDef_var;
  
  typedef
    TAO_Objref_Out_T<
        PrimitiveDef,
        tao_PrimitiveDef_life
      >
    PrimitiveDef_out;
  
  struct TAO_IFR_Client_Export tao_PrimitiveDef_life
  {
    static PrimitiveDef_ptr tao_duplicate (PrimitiveDef_ptr);
    static void tao_release (PrimitiveDef_ptr);
    static PrimitiveDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        PrimitiveDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_PrimitiveDef_cast
  {
    static PrimitiveDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_STRINGDEF__ODDS_N_ENDS_CH_)
#define _CORBA_STRINGDEF__ODDS_N_ENDS_CH_
  
  class StringDef;
  typedef StringDef *StringDef_ptr;
  struct tao_StringDef_life;
  
  typedef
    TAO_Objref_Var_T<
        StringDef,
        tao_StringDef_life
      >
    StringDef_var;
  
  typedef
    TAO_Objref_Out_T<
        StringDef,
        tao_StringDef_life
      >
    StringDef_out;
  
  struct TAO_IFR_Client_Export tao_StringDef_life
  {
    static StringDef_ptr tao_duplicate (StringDef_ptr);
    static void tao_release (StringDef_ptr);
    static StringDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        StringDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_StringDef_cast
  {
    static StringDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_SEQUENCEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_SEQUENCEDEF__ODDS_N_ENDS_CH_
  
  class SequenceDef;
  typedef SequenceDef *SequenceDef_ptr;
  struct tao_SequenceDef_life;
  
  typedef
    TAO_Objref_Var_T<
        SequenceDef,
        tao_SequenceDef_life
      >
    SequenceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        SequenceDef,
        tao_SequenceDef_life
      >
    SequenceDef_out;
  
  struct TAO_IFR_Client_Export tao_SequenceDef_life
  {
    static SequenceDef_ptr tao_duplicate (SequenceDef_ptr);
    static void tao_release (SequenceDef_ptr);
    static SequenceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        SequenceDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_SequenceDef_cast
  {
    static SequenceDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_ARRAYDEF__ODDS_N_ENDS_CH_)
#define _CORBA_ARRAYDEF__ODDS_N_ENDS_CH_
  
  class ArrayDef;
  typedef ArrayDef *ArrayDef_ptr;
  struct tao_ArrayDef_life;
  
  typedef
    TAO_Objref_Var_T<
        ArrayDef,
        tao_ArrayDef_life
      >
    ArrayDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ArrayDef,
        tao_ArrayDef_life
      >
    ArrayDef_out;
  
  struct TAO_IFR_Client_Export tao_ArrayDef_life
  {
    static ArrayDef_ptr tao_duplicate (ArrayDef_ptr);
    static void tao_release (ArrayDef_ptr);
    static ArrayDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ArrayDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_ArrayDef_cast
  {
    static ArrayDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_WSTRINGDEF__ODDS_N_ENDS_CH_)
#define _CORBA_WSTRINGDEF__ODDS_N_ENDS_CH_
  
  class WstringDef;
  typedef WstringDef *WstringDef_ptr;
  struct tao_WstringDef_life;
  
  typedef
    TAO_Objref_Var_T<
        WstringDef,
        tao_WstringDef_life
      >
    WstringDef_var;
  
  typedef
    TAO_Objref_Out_T<
        WstringDef,
        tao_WstringDef_life
      >
    WstringDef_out;
  
  struct TAO_IFR_Client_Export tao_WstringDef_life
  {
    static WstringDef_ptr tao_duplicate (WstringDef_ptr);
    static void tao_release (WstringDef_ptr);
    static WstringDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        WstringDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_WstringDef_cast
  {
    static WstringDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_FIXEDDEF__ODDS_N_ENDS_CH_)
#define _CORBA_FIXEDDEF__ODDS_N_ENDS_CH_
  
  class FixedDef;
  typedef FixedDef *FixedDef_ptr;
  struct tao_FixedDef_life;
  
  typedef
    TAO_Objref_Var_T<
        FixedDef,
        tao_FixedDef_life
      >
    FixedDef_var;
  
  typedef
    TAO_Objref_Out_T<
        FixedDef,
        tao_FixedDef_life
      >
    FixedDef_out;
  
  struct TAO_IFR_Client_Export tao_FixedDef_life
  {
    static FixedDef_ptr tao_duplicate (FixedDef_ptr);
    static void tao_release (FixedDef_ptr);
    static FixedDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        FixedDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_FixedDef_cast
  {
    static FixedDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/enum_ch.cpp:57
  
  enum PrimitiveKind
  {
    pk_null,
    pk_void,
    pk_short,
    pk_long,
    pk_ushort,
    pk_ulong,
    pk_float,
    pk_double,
    pk_boolean,
    pk_char,
    pk_octet,
    pk_any,
    pk_TypeCode,
    pk_Principal,
    pk_string,
    pk_objref,
    pk_longlong,
    pk_ulonglong,
    pk_longdouble,
    pk_wchar,
    pk_wstring,
    pk_value_base
  };
  
  typedef PrimitiveKind &PrimitiveKind_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PrimitiveKind;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_REPOSITORY__ODDS_N_ENDS_CH_)
#define _CORBA_REPOSITORY__ODDS_N_ENDS_CH_
  
  class Repository;
  typedef Repository *Repository_ptr;
  struct tao_Repository_life;
  
  typedef
    TAO_Objref_Var_T<
        Repository,
        tao_Repository_life
      >
    Repository_var;
  
  typedef
    TAO_Objref_Out_T<
        Repository,
        tao_Repository_life
      >
    Repository_out;
  
  struct TAO_IFR_Client_Export tao_Repository_life
  {
    static Repository_ptr tao_duplicate (Repository_ptr);
    static void tao_release (Repository_ptr);
    static Repository_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        Repository_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_Repository_cast
  {
    static Repository_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_REPOSITORY_CH_)
#define _CORBA_REPOSITORY_CH_
  
  class _TAO_Repository_Proxy_Impl;
  class _TAO_Repository_Remote_Proxy_Impl;
  class _TAO_Repository_Proxy_Broker;
  class _TAO_Repository_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export Repository
    : public virtual CORBA::Container
  {
  public:
    typedef Repository_ptr _ptr_type;
    typedef Repository_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static Repository_ptr _duplicate (Repository_ptr obj);
    
    static Repository_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Repository_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Repository_ptr _nil (void)
      {
        return (Repository_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Contained_ptr lookup_id (
        const char * search_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr get_canonical_typecode (
        CORBA::TypeCode_ptr tc
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::PrimitiveDef_ptr get_primitive (
        CORBA::PrimitiveKind kind
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::StringDef_ptr create_string (
        CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::WstringDef_ptr create_wstring (
        CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::SequenceDef_ptr create_sequence (
        CORBA::ULong bound,
        CORBA::IDLType_ptr element_type
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ArrayDef_ptr create_array (
        CORBA::ULong length,
        CORBA::IDLType_ptr element_type
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::FixedDef_ptr create_fixed (
        CORBA::UShort digits,
        CORBA::Short scale
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_Repository_Proxy_Broker *the_TAO_Repository_Proxy_Broker_;
  
  protected:
    Repository (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_Repository_setup_collocation (int collocated);
    
    Repository (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~Repository (void);
    
    friend class _TAO_Repository_Remote_Proxy_Impl;
    friend class _TAO_Repository_ThruPOA_Proxy_Impl;
    friend class _TAO_Repository_Direct_Proxy_Impl;
  
  private:
    Repository (const Repository &);
    void operator= (const Repository &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_Repository_Proxy_Impl
    : public virtual CORBA::_TAO_Container_Proxy_Impl
  {
  public:
    virtual ~_TAO_Repository_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::Contained_ptr lookup_id (
        CORBA::Object *_collocated_tao_target_,
        const char * search_id
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::TypeCode_ptr get_canonical_typecode (
        CORBA::Object *_collocated_tao_target_,
        CORBA::TypeCode_ptr tc
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::PrimitiveDef_ptr get_primitive (
        CORBA::Object *_collocated_tao_target_,
        CORBA::PrimitiveKind kind
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::StringDef_ptr create_string (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::WstringDef_ptr create_wstring (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::SequenceDef_ptr create_sequence (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound,
        CORBA::IDLType_ptr element_type
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::ArrayDef_ptr create_array (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong length,
        CORBA::IDLType_ptr element_type
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::FixedDef_ptr create_fixed (
        CORBA::Object *_collocated_tao_target_,
        CORBA::UShort digits,
        CORBA::Short scale
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_Repository_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_Repository_Remote_Proxy_Impl
    : public virtual _TAO_Repository_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_Container_Remote_Proxy_Impl
  {
  public:
    _TAO_Repository_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_Repository_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::Contained_ptr lookup_id (
        CORBA::Object *_collocated_tao_target_,
        const char * search_id
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::TypeCode_ptr get_canonical_typecode (
        CORBA::Object *_collocated_tao_target_,
        CORBA::TypeCode_ptr tc
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::PrimitiveDef_ptr get_primitive (
        CORBA::Object *_collocated_tao_target_,
        CORBA::PrimitiveKind kind
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::StringDef_ptr create_string (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::WstringDef_ptr create_wstring (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::SequenceDef_ptr create_sequence (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound,
        CORBA::IDLType_ptr element_type
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::ArrayDef_ptr create_array (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong length,
        CORBA::IDLType_ptr element_type
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::FixedDef_ptr create_fixed (
        CORBA::Object *_collocated_tao_target_,
        CORBA::UShort digits,
        CORBA::Short scale
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_Repository_Proxy_Broker
  {
  public:
    virtual ~_TAO_Repository_Proxy_Broker (void);
    virtual _TAO_Repository_Proxy_Impl &select_proxy (
        Repository *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_Repository_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_Repository_Remote_Proxy_Broker
    : public virtual _TAO_Repository_Proxy_Broker
  {
  public: 
    _TAO_Repository_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_Repository_Remote_Proxy_Broker (void);
    
    virtual _TAO_Repository_Proxy_Impl &select_proxy (
        Repository *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_Repository_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_Repository_Remote_Proxy_Broker *the_TAO_Repository_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Repository;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_MODULEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_MODULEDEF__ODDS_N_ENDS_CH_
  
  class ModuleDef;
  typedef ModuleDef *ModuleDef_ptr;
  struct tao_ModuleDef_life;
  
  typedef
    TAO_Objref_Var_T<
        ModuleDef,
        tao_ModuleDef_life
      >
    ModuleDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ModuleDef,
        tao_ModuleDef_life
      >
    ModuleDef_out;
  
  struct TAO_IFR_Client_Export tao_ModuleDef_life
  {
    static ModuleDef_ptr tao_duplicate (ModuleDef_ptr);
    static void tao_release (ModuleDef_ptr);
    static ModuleDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ModuleDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_ModuleDef_cast
  {
    static ModuleDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_MODULEDEF_CH_)
#define _CORBA_MODULEDEF_CH_
  
  class _TAO_ModuleDef_Proxy_Impl;
  class _TAO_ModuleDef_Remote_Proxy_Impl;
  class _TAO_ModuleDef_Proxy_Broker;
  class _TAO_ModuleDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export ModuleDef
    : public virtual CORBA::Container,
      public virtual CORBA::Contained
  {
  public:
    typedef ModuleDef_ptr _ptr_type;
    typedef ModuleDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ModuleDef_ptr _duplicate (ModuleDef_ptr obj);
    
    static ModuleDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ModuleDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ModuleDef_ptr _nil (void)
      {
        return (ModuleDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_ModuleDef_Proxy_Broker *the_TAO_ModuleDef_Proxy_Broker_;
  
  protected:
    ModuleDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ModuleDef_setup_collocation (int collocated);
    
    ModuleDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~ModuleDef (void);
    
    friend class _TAO_ModuleDef_Remote_Proxy_Impl;
    friend class _TAO_ModuleDef_ThruPOA_Proxy_Impl;
    friend class _TAO_ModuleDef_Direct_Proxy_Impl;
  
  private:
    ModuleDef (const ModuleDef &);
    void operator= (const ModuleDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ModuleDef_Proxy_Impl
    : public virtual CORBA::_TAO_Container_Proxy_Impl, 
      public virtual CORBA::_TAO_Contained_Proxy_Impl
  {
  public:
    virtual ~_TAO_ModuleDef_Proxy_Impl (void) {}
  
  protected:
    _TAO_ModuleDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_ModuleDef_Remote_Proxy_Impl
    : public virtual _TAO_ModuleDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_Container_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_Contained_Remote_Proxy_Impl
  {
  public:
    _TAO_ModuleDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_ModuleDef_Remote_Proxy_Impl (void) {}
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ModuleDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_ModuleDef_Proxy_Broker (void);
    virtual _TAO_ModuleDef_Proxy_Impl &select_proxy (
        ModuleDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_ModuleDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_ModuleDef_Remote_Proxy_Broker
    : public virtual _TAO_ModuleDef_Proxy_Broker
  {
  public: 
    _TAO_ModuleDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_ModuleDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_ModuleDef_Proxy_Impl &select_proxy (
        ModuleDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_ModuleDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_ModuleDef_Remote_Proxy_Broker *the_TAO_ModuleDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ModuleDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
  
  struct ModuleDescription;
  
  typedef
    TAO_Var_Var_T<
        ModuleDescription
      >
    ModuleDescription_var;
  
  typedef
    TAO_Out_T<
        ModuleDescription,
        ModuleDescription_var
      >
    ModuleDescription_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export ModuleDescription
  {
    typedef ModuleDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    TAO_String_Manager id;
    TAO_String_Manager defined_in;
    TAO_String_Manager version;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ModuleDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_CONSTANTDEF__ODDS_N_ENDS_CH_)
#define _CORBA_CONSTANTDEF__ODDS_N_ENDS_CH_
  
  class ConstantDef;
  typedef ConstantDef *ConstantDef_ptr;
  struct tao_ConstantDef_life;
  
  typedef
    TAO_Objref_Var_T<
        ConstantDef,
        tao_ConstantDef_life
      >
    ConstantDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ConstantDef,
        tao_ConstantDef_life
      >
    ConstantDef_out;
  
  struct TAO_IFR_Client_Export tao_ConstantDef_life
  {
    static ConstantDef_ptr tao_duplicate (ConstantDef_ptr);
    static void tao_release (ConstantDef_ptr);
    static ConstantDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ConstantDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_ConstantDef_cast
  {
    static ConstantDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_CONSTANTDEF_CH_)
#define _CORBA_CONSTANTDEF_CH_
  
  class _TAO_ConstantDef_Proxy_Impl;
  class _TAO_ConstantDef_Remote_Proxy_Impl;
  class _TAO_ConstantDef_Proxy_Broker;
  class _TAO_ConstantDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export ConstantDef
    : public virtual CORBA::Contained
  {
  public:
    typedef ConstantDef_ptr _ptr_type;
    typedef ConstantDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ConstantDef_ptr _duplicate (ConstantDef_ptr obj);
    
    static ConstantDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ConstantDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ConstantDef_ptr _nil (void)
      {
        return (ConstantDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::IDLType_ptr type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void type_def (
        CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Any * value (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void value (
        const CORBA::Any & value
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_ConstantDef_Proxy_Broker *the_TAO_ConstantDef_Proxy_Broker_;
  
  protected:
    ConstantDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ConstantDef_setup_collocation (int collocated);
    
    ConstantDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~ConstantDef (void);
    
    friend class _TAO_ConstantDef_Remote_Proxy_Impl;
    friend class _TAO_ConstantDef_ThruPOA_Proxy_Impl;
    friend class _TAO_ConstantDef_Direct_Proxy_Impl;
  
  private:
    ConstantDef (const ConstantDef &);
    void operator= (const ConstantDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ConstantDef_Proxy_Impl
    : public virtual CORBA::_TAO_Contained_Proxy_Impl
  {
  public:
    virtual ~_TAO_ConstantDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::TypeCode_ptr type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::IDLType_ptr type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::Any * value (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void value (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::Any & value
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_ConstantDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_ConstantDef_Remote_Proxy_Impl
    : public virtual _TAO_ConstantDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_Contained_Remote_Proxy_Impl
  {
  public:
    _TAO_ConstantDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_ConstantDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::TypeCode_ptr type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::IDLType_ptr type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::Any * value (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void value (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::Any & value
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ConstantDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_ConstantDef_Proxy_Broker (void);
    virtual _TAO_ConstantDef_Proxy_Impl &select_proxy (
        ConstantDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_ConstantDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_ConstantDef_Remote_Proxy_Broker
    : public virtual _TAO_ConstantDef_Proxy_Broker
  {
  public: 
    _TAO_ConstantDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_ConstantDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_ConstantDef_Proxy_Impl &select_proxy (
        ConstantDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_ConstantDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_ConstantDef_Remote_Proxy_Broker *the_TAO_ConstantDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ConstantDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
  
  struct ConstantDescription;
  
  typedef
    TAO_Var_Var_T<
        ConstantDescription
      >
    ConstantDescription_var;
  
  typedef
    TAO_Out_T<
        ConstantDescription,
        ConstantDescription_var
      >
    ConstantDescription_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export ConstantDescription
  {
    typedef ConstantDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    TAO_String_Manager id;
    TAO_String_Manager defined_in;
    TAO_String_Manager version;
    CORBA::TypeCode_var type;
    CORBA::Any value;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ConstantDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_STRUCTDEF__ODDS_N_ENDS_CH_)
#define _CORBA_STRUCTDEF__ODDS_N_ENDS_CH_
  
  class StructDef;
  typedef StructDef *StructDef_ptr;
  struct tao_StructDef_life;
  
  typedef
    TAO_Objref_Var_T<
        StructDef,
        tao_StructDef_life
      >
    StructDef_var;
  
  typedef
    TAO_Objref_Out_T<
        StructDef,
        tao_StructDef_life
      >
    StructDef_out;
  
  struct TAO_IFR_Client_Export tao_StructDef_life
  {
    static StructDef_ptr tao_duplicate (StructDef_ptr);
    static void tao_release (StructDef_ptr);
    static StructDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        StructDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_StructDef_cast
  {
    static StructDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_STRUCTDEF_CH_)
#define _CORBA_STRUCTDEF_CH_
  
  class _TAO_StructDef_Proxy_Impl;
  class _TAO_StructDef_Remote_Proxy_Impl;
  class _TAO_StructDef_Proxy_Broker;
  class _TAO_StructDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export StructDef
    : public virtual CORBA::TypedefDef,
      public virtual CORBA::Container
  {
  public:
    typedef StructDef_ptr _ptr_type;
    typedef StructDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static StructDef_ptr _duplicate (StructDef_ptr obj);
    
    static StructDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static StructDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static StructDef_ptr _nil (void)
      {
        return (StructDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::StructMemberSeq * members (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void members (
        const CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_StructDef_Proxy_Broker *the_TAO_StructDef_Proxy_Broker_;
  
  protected:
    StructDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_StructDef_setup_collocation (int collocated);
    
    StructDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~StructDef (void);
    
    friend class _TAO_StructDef_Remote_Proxy_Impl;
    friend class _TAO_StructDef_ThruPOA_Proxy_Impl;
    friend class _TAO_StructDef_Direct_Proxy_Impl;
  
  private:
    StructDef (const StructDef &);
    void operator= (const StructDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_StructDef_Proxy_Impl
    : public virtual CORBA::_TAO_TypedefDef_Proxy_Impl, 
      public virtual CORBA::_TAO_Container_Proxy_Impl
  {
  public:
    virtual ~_TAO_StructDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::StructMemberSeq * members (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void members (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_StructDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_StructDef_Remote_Proxy_Impl
    : public virtual _TAO_StructDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_TypedefDef_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_Container_Remote_Proxy_Impl
  {
  public:
    _TAO_StructDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_StructDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::StructMemberSeq * members (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void members (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_StructDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_StructDef_Proxy_Broker (void);
    virtual _TAO_StructDef_Proxy_Impl &select_proxy (
        StructDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_StructDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_StructDef_Remote_Proxy_Broker
    : public virtual _TAO_StructDef_Proxy_Broker
  {
  public: 
    _TAO_StructDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_StructDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_StructDef_Proxy_Impl &select_proxy (
        StructDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_StructDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_StructDef_Remote_Proxy_Broker *the_TAO_StructDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StructDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_UNIONDEF__ODDS_N_ENDS_CH_)
#define _CORBA_UNIONDEF__ODDS_N_ENDS_CH_
  
  class UnionDef;
  typedef UnionDef *UnionDef_ptr;
  struct tao_UnionDef_life;
  
  typedef
    TAO_Objref_Var_T<
        UnionDef,
        tao_UnionDef_life
      >
    UnionDef_var;
  
  typedef
    TAO_Objref_Out_T<
        UnionDef,
        tao_UnionDef_life
      >
    UnionDef_out;
  
  struct TAO_IFR_Client_Export tao_UnionDef_life
  {
    static UnionDef_ptr tao_duplicate (UnionDef_ptr);
    static void tao_release (UnionDef_ptr);
    static UnionDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        UnionDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_UnionDef_cast
  {
    static UnionDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_UNIONDEF_CH_)
#define _CORBA_UNIONDEF_CH_
  
  class _TAO_UnionDef_Proxy_Impl;
  class _TAO_UnionDef_Remote_Proxy_Impl;
  class _TAO_UnionDef_Proxy_Broker;
  class _TAO_UnionDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export UnionDef
    : public virtual CORBA::TypedefDef,
      public virtual CORBA::Container
  {
  public:
    typedef UnionDef_ptr _ptr_type;
    typedef UnionDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static UnionDef_ptr _duplicate (UnionDef_ptr obj);
    
    static UnionDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static UnionDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static UnionDef_ptr _nil (void)
      {
        return (UnionDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr discriminator_type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::IDLType_ptr discriminator_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void discriminator_type_def (
        CORBA::IDLType_ptr discriminator_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::UnionMemberSeq * members (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void members (
        const CORBA::UnionMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_UnionDef_Proxy_Broker *the_TAO_UnionDef_Proxy_Broker_;
  
  protected:
    UnionDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_UnionDef_setup_collocation (int collocated);
    
    UnionDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~UnionDef (void);
    
    friend class _TAO_UnionDef_Remote_Proxy_Impl;
    friend class _TAO_UnionDef_ThruPOA_Proxy_Impl;
    friend class _TAO_UnionDef_Direct_Proxy_Impl;
  
  private:
    UnionDef (const UnionDef &);
    void operator= (const UnionDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_UnionDef_Proxy_Impl
    : public virtual CORBA::_TAO_TypedefDef_Proxy_Impl, 
      public virtual CORBA::_TAO_Container_Proxy_Impl
  {
  public:
    virtual ~_TAO_UnionDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::TypeCode_ptr discriminator_type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::IDLType_ptr discriminator_type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void discriminator_type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr discriminator_type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::UnionMemberSeq * members (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void members (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::UnionMemberSeq & members
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_UnionDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_UnionDef_Remote_Proxy_Impl
    : public virtual _TAO_UnionDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_TypedefDef_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_Container_Remote_Proxy_Impl
  {
  public:
    _TAO_UnionDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_UnionDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::TypeCode_ptr discriminator_type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::IDLType_ptr discriminator_type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void discriminator_type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr discriminator_type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::UnionMemberSeq * members (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void members (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::UnionMemberSeq & members
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_UnionDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_UnionDef_Proxy_Broker (void);
    virtual _TAO_UnionDef_Proxy_Impl &select_proxy (
        UnionDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_UnionDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_UnionDef_Remote_Proxy_Broker
    : public virtual _TAO_UnionDef_Proxy_Broker
  {
  public: 
    _TAO_UnionDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_UnionDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_UnionDef_Proxy_Impl &select_proxy (
        UnionDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_UnionDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_UnionDef_Remote_Proxy_Broker *the_TAO_UnionDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UnionDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_ENUMDEF__ODDS_N_ENDS_CH_)
#define _CORBA_ENUMDEF__ODDS_N_ENDS_CH_
  
  class EnumDef;
  typedef EnumDef *EnumDef_ptr;
  struct tao_EnumDef_life;
  
  typedef
    TAO_Objref_Var_T<
        EnumDef,
        tao_EnumDef_life
      >
    EnumDef_var;
  
  typedef
    TAO_Objref_Out_T<
        EnumDef,
        tao_EnumDef_life
      >
    EnumDef_out;
  
  struct TAO_IFR_Client_Export tao_EnumDef_life
  {
    static EnumDef_ptr tao_duplicate (EnumDef_ptr);
    static void tao_release (EnumDef_ptr);
    static EnumDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        EnumDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_EnumDef_cast
  {
    static EnumDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ENUMDEF_CH_)
#define _CORBA_ENUMDEF_CH_
  
  class _TAO_EnumDef_Proxy_Impl;
  class _TAO_EnumDef_Remote_Proxy_Impl;
  class _TAO_EnumDef_Proxy_Broker;
  class _TAO_EnumDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export EnumDef
    : public virtual CORBA::TypedefDef
  {
  public:
    typedef EnumDef_ptr _ptr_type;
    typedef EnumDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static EnumDef_ptr _duplicate (EnumDef_ptr obj);
    
    static EnumDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static EnumDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static EnumDef_ptr _nil (void)
      {
        return (EnumDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::EnumMemberSeq * members (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void members (
        const CORBA::EnumMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_EnumDef_Proxy_Broker *the_TAO_EnumDef_Proxy_Broker_;
  
  protected:
    EnumDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_EnumDef_setup_collocation (int collocated);
    
    EnumDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~EnumDef (void);
    
    friend class _TAO_EnumDef_Remote_Proxy_Impl;
    friend class _TAO_EnumDef_ThruPOA_Proxy_Impl;
    friend class _TAO_EnumDef_Direct_Proxy_Impl;
  
  private:
    EnumDef (const EnumDef &);
    void operator= (const EnumDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_EnumDef_Proxy_Impl
    : public virtual CORBA::_TAO_TypedefDef_Proxy_Impl
  {
  public:
    virtual ~_TAO_EnumDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::EnumMemberSeq * members (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void members (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::EnumMemberSeq & members
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_EnumDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_EnumDef_Remote_Proxy_Impl
    : public virtual _TAO_EnumDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_TypedefDef_Remote_Proxy_Impl
  {
  public:
    _TAO_EnumDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_EnumDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::EnumMemberSeq * members (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void members (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::EnumMemberSeq & members
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_EnumDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_EnumDef_Proxy_Broker (void);
    virtual _TAO_EnumDef_Proxy_Impl &select_proxy (
        EnumDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_EnumDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_EnumDef_Remote_Proxy_Broker
    : public virtual _TAO_EnumDef_Proxy_Broker
  {
  public: 
    _TAO_EnumDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_EnumDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_EnumDef_Proxy_Impl &select_proxy (
        EnumDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_EnumDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_EnumDef_Remote_Proxy_Broker *the_TAO_EnumDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_EnumDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_ALIASDEF__ODDS_N_ENDS_CH_)
#define _CORBA_ALIASDEF__ODDS_N_ENDS_CH_
  
  class AliasDef;
  typedef AliasDef *AliasDef_ptr;
  struct tao_AliasDef_life;
  
  typedef
    TAO_Objref_Var_T<
        AliasDef,
        tao_AliasDef_life
      >
    AliasDef_var;
  
  typedef
    TAO_Objref_Out_T<
        AliasDef,
        tao_AliasDef_life
      >
    AliasDef_out;
  
  struct TAO_IFR_Client_Export tao_AliasDef_life
  {
    static AliasDef_ptr tao_duplicate (AliasDef_ptr);
    static void tao_release (AliasDef_ptr);
    static AliasDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        AliasDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_AliasDef_cast
  {
    static AliasDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ALIASDEF_CH_)
#define _CORBA_ALIASDEF_CH_
  
  class _TAO_AliasDef_Proxy_Impl;
  class _TAO_AliasDef_Remote_Proxy_Impl;
  class _TAO_AliasDef_Proxy_Broker;
  class _TAO_AliasDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export AliasDef
    : public virtual CORBA::TypedefDef
  {
  public:
    typedef AliasDef_ptr _ptr_type;
    typedef AliasDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static AliasDef_ptr _duplicate (AliasDef_ptr obj);
    
    static AliasDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static AliasDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static AliasDef_ptr _nil (void)
      {
        return (AliasDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::IDLType_ptr original_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void original_type_def (
        CORBA::IDLType_ptr original_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_AliasDef_Proxy_Broker *the_TAO_AliasDef_Proxy_Broker_;
  
  protected:
    AliasDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_AliasDef_setup_collocation (int collocated);
    
    AliasDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~AliasDef (void);
    
    friend class _TAO_AliasDef_Remote_Proxy_Impl;
    friend class _TAO_AliasDef_ThruPOA_Proxy_Impl;
    friend class _TAO_AliasDef_Direct_Proxy_Impl;
  
  private:
    AliasDef (const AliasDef &);
    void operator= (const AliasDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_AliasDef_Proxy_Impl
    : public virtual CORBA::_TAO_TypedefDef_Proxy_Impl
  {
  public:
    virtual ~_TAO_AliasDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::IDLType_ptr original_type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void original_type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr original_type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_AliasDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_AliasDef_Remote_Proxy_Impl
    : public virtual _TAO_AliasDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_TypedefDef_Remote_Proxy_Impl
  {
  public:
    _TAO_AliasDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_AliasDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::IDLType_ptr original_type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void original_type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr original_type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_AliasDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_AliasDef_Proxy_Broker (void);
    virtual _TAO_AliasDef_Proxy_Impl &select_proxy (
        AliasDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_AliasDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_AliasDef_Remote_Proxy_Broker
    : public virtual _TAO_AliasDef_Proxy_Broker
  {
  public: 
    _TAO_AliasDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_AliasDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_AliasDef_Proxy_Impl &select_proxy (
        AliasDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_AliasDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_AliasDef_Remote_Proxy_Broker *the_TAO_AliasDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AliasDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_NATIVEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_NATIVEDEF__ODDS_N_ENDS_CH_
  
  class NativeDef;
  typedef NativeDef *NativeDef_ptr;
  struct tao_NativeDef_life;
  
  typedef
    TAO_Objref_Var_T<
        NativeDef,
        tao_NativeDef_life
      >
    NativeDef_var;
  
  typedef
    TAO_Objref_Out_T<
        NativeDef,
        tao_NativeDef_life
      >
    NativeDef_out;
  
  struct TAO_IFR_Client_Export tao_NativeDef_life
  {
    static NativeDef_ptr tao_duplicate (NativeDef_ptr);
    static void tao_release (NativeDef_ptr);
    static NativeDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        NativeDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_NativeDef_cast
  {
    static NativeDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_NATIVEDEF_CH_)
#define _CORBA_NATIVEDEF_CH_
  
  class _TAO_NativeDef_Proxy_Impl;
  class _TAO_NativeDef_Remote_Proxy_Impl;
  class _TAO_NativeDef_Proxy_Broker;
  class _TAO_NativeDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export NativeDef
    : public virtual CORBA::TypedefDef
  {
  public:
    typedef NativeDef_ptr _ptr_type;
    typedef NativeDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static NativeDef_ptr _duplicate (NativeDef_ptr obj);
    
    static NativeDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static NativeDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static NativeDef_ptr _nil (void)
      {
        return (NativeDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_NativeDef_Proxy_Broker *the_TAO_NativeDef_Proxy_Broker_;
  
  protected:
    NativeDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_NativeDef_setup_collocation (int collocated);
    
    NativeDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~NativeDef (void);
    
    friend class _TAO_NativeDef_Remote_Proxy_Impl;
    friend class _TAO_NativeDef_ThruPOA_Proxy_Impl;
    friend class _TAO_NativeDef_Direct_Proxy_Impl;
  
  private:
    NativeDef (const NativeDef &);
    void operator= (const NativeDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_NativeDef_Proxy_Impl
    : public virtual CORBA::_TAO_TypedefDef_Proxy_Impl
  {
  public:
    virtual ~_TAO_NativeDef_Proxy_Impl (void) {}
  
  protected:
    _TAO_NativeDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_NativeDef_Remote_Proxy_Impl
    : public virtual _TAO_NativeDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_TypedefDef_Remote_Proxy_Impl
  {
  public:
    _TAO_NativeDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_NativeDef_Remote_Proxy_Impl (void) {}
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_NativeDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_NativeDef_Proxy_Broker (void);
    virtual _TAO_NativeDef_Proxy_Impl &select_proxy (
        NativeDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_NativeDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_NativeDef_Remote_Proxy_Broker
    : public virtual _TAO_NativeDef_Proxy_Broker
  {
  public: 
    _TAO_NativeDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_NativeDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_NativeDef_Proxy_Impl &select_proxy (
        NativeDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_NativeDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_NativeDef_Remote_Proxy_Broker *the_TAO_NativeDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NativeDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_PRIMITIVEDEF_CH_)
#define _CORBA_PRIMITIVEDEF_CH_
  
  class _TAO_PrimitiveDef_Proxy_Impl;
  class _TAO_PrimitiveDef_Remote_Proxy_Impl;
  class _TAO_PrimitiveDef_Proxy_Broker;
  class _TAO_PrimitiveDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export PrimitiveDef
    : public virtual CORBA::IDLType
  {
  public:
    typedef PrimitiveDef_ptr _ptr_type;
    typedef PrimitiveDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static PrimitiveDef_ptr _duplicate (PrimitiveDef_ptr obj);
    
    static PrimitiveDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static PrimitiveDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static PrimitiveDef_ptr _nil (void)
      {
        return (PrimitiveDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::PrimitiveKind kind (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_PrimitiveDef_Proxy_Broker *the_TAO_PrimitiveDef_Proxy_Broker_;
  
  protected:
    PrimitiveDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_PrimitiveDef_setup_collocation (int collocated);
    
    PrimitiveDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~PrimitiveDef (void);
    
    friend class _TAO_PrimitiveDef_Remote_Proxy_Impl;
    friend class _TAO_PrimitiveDef_ThruPOA_Proxy_Impl;
    friend class _TAO_PrimitiveDef_Direct_Proxy_Impl;
  
  private:
    PrimitiveDef (const PrimitiveDef &);
    void operator= (const PrimitiveDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_PrimitiveDef_Proxy_Impl
    : public virtual CORBA::_TAO_IDLType_Proxy_Impl
  {
  public:
    virtual ~_TAO_PrimitiveDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::PrimitiveKind kind (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_PrimitiveDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_PrimitiveDef_Remote_Proxy_Impl
    : public virtual _TAO_PrimitiveDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_IDLType_Remote_Proxy_Impl
  {
  public:
    _TAO_PrimitiveDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_PrimitiveDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::PrimitiveKind kind (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_PrimitiveDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_PrimitiveDef_Proxy_Broker (void);
    virtual _TAO_PrimitiveDef_Proxy_Impl &select_proxy (
        PrimitiveDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_PrimitiveDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_PrimitiveDef_Remote_Proxy_Broker
    : public virtual _TAO_PrimitiveDef_Proxy_Broker
  {
  public: 
    _TAO_PrimitiveDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_PrimitiveDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_PrimitiveDef_Proxy_Impl &select_proxy (
        PrimitiveDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_PrimitiveDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_PrimitiveDef_Remote_Proxy_Broker *the_TAO_PrimitiveDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PrimitiveDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_STRINGDEF_CH_)
#define _CORBA_STRINGDEF_CH_
  
  class _TAO_StringDef_Proxy_Impl;
  class _TAO_StringDef_Remote_Proxy_Impl;
  class _TAO_StringDef_Proxy_Broker;
  class _TAO_StringDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export StringDef
    : public virtual CORBA::IDLType
  {
  public:
    typedef StringDef_ptr _ptr_type;
    typedef StringDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static StringDef_ptr _duplicate (StringDef_ptr obj);
    
    static StringDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static StringDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static StringDef_ptr _nil (void)
      {
        return (StringDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::ULong bound (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void bound (
        CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_StringDef_Proxy_Broker *the_TAO_StringDef_Proxy_Broker_;
  
  protected:
    StringDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_StringDef_setup_collocation (int collocated);
    
    StringDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~StringDef (void);
    
    friend class _TAO_StringDef_Remote_Proxy_Impl;
    friend class _TAO_StringDef_ThruPOA_Proxy_Impl;
    friend class _TAO_StringDef_Direct_Proxy_Impl;
  
  private:
    StringDef (const StringDef &);
    void operator= (const StringDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_StringDef_Proxy_Impl
    : public virtual CORBA::_TAO_IDLType_Proxy_Impl
  {
  public:
    virtual ~_TAO_StringDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::ULong bound (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void bound (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_StringDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_StringDef_Remote_Proxy_Impl
    : public virtual _TAO_StringDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_IDLType_Remote_Proxy_Impl
  {
  public:
    _TAO_StringDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_StringDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::ULong bound (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void bound (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_StringDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_StringDef_Proxy_Broker (void);
    virtual _TAO_StringDef_Proxy_Impl &select_proxy (
        StringDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_StringDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_StringDef_Remote_Proxy_Broker
    : public virtual _TAO_StringDef_Proxy_Broker
  {
  public: 
    _TAO_StringDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_StringDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_StringDef_Proxy_Impl &select_proxy (
        StringDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_StringDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_StringDef_Remote_Proxy_Broker *the_TAO_StringDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StringDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_WSTRINGDEF_CH_)
#define _CORBA_WSTRINGDEF_CH_
  
  class _TAO_WstringDef_Proxy_Impl;
  class _TAO_WstringDef_Remote_Proxy_Impl;
  class _TAO_WstringDef_Proxy_Broker;
  class _TAO_WstringDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export WstringDef
    : public virtual CORBA::IDLType
  {
  public:
    typedef WstringDef_ptr _ptr_type;
    typedef WstringDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static WstringDef_ptr _duplicate (WstringDef_ptr obj);
    
    static WstringDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static WstringDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static WstringDef_ptr _nil (void)
      {
        return (WstringDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::ULong bound (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void bound (
        CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_WstringDef_Proxy_Broker *the_TAO_WstringDef_Proxy_Broker_;
  
  protected:
    WstringDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_WstringDef_setup_collocation (int collocated);
    
    WstringDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~WstringDef (void);
    
    friend class _TAO_WstringDef_Remote_Proxy_Impl;
    friend class _TAO_WstringDef_ThruPOA_Proxy_Impl;
    friend class _TAO_WstringDef_Direct_Proxy_Impl;
  
  private:
    WstringDef (const WstringDef &);
    void operator= (const WstringDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_WstringDef_Proxy_Impl
    : public virtual CORBA::_TAO_IDLType_Proxy_Impl
  {
  public:
    virtual ~_TAO_WstringDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::ULong bound (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void bound (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_WstringDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_WstringDef_Remote_Proxy_Impl
    : public virtual _TAO_WstringDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_IDLType_Remote_Proxy_Impl
  {
  public:
    _TAO_WstringDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_WstringDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::ULong bound (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void bound (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_WstringDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_WstringDef_Proxy_Broker (void);
    virtual _TAO_WstringDef_Proxy_Impl &select_proxy (
        WstringDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_WstringDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_WstringDef_Remote_Proxy_Broker
    : public virtual _TAO_WstringDef_Proxy_Broker
  {
  public: 
    _TAO_WstringDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_WstringDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_WstringDef_Proxy_Impl &select_proxy (
        WstringDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_WstringDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_WstringDef_Remote_Proxy_Broker *the_TAO_WstringDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_WstringDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_SEQUENCEDEF_CH_)
#define _CORBA_SEQUENCEDEF_CH_
  
  class _TAO_SequenceDef_Proxy_Impl;
  class _TAO_SequenceDef_Remote_Proxy_Impl;
  class _TAO_SequenceDef_Proxy_Broker;
  class _TAO_SequenceDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export SequenceDef
    : public virtual CORBA::IDLType
  {
  public:
    typedef SequenceDef_ptr _ptr_type;
    typedef SequenceDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static SequenceDef_ptr _duplicate (SequenceDef_ptr obj);
    
    static SequenceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SequenceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SequenceDef_ptr _nil (void)
      {
        return (SequenceDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::ULong bound (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void bound (
        CORBA::ULong bound
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr element_type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::IDLType_ptr element_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void element_type_def (
        CORBA::IDLType_ptr element_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_SequenceDef_Proxy_Broker *the_TAO_SequenceDef_Proxy_Broker_;
  
  protected:
    SequenceDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_SequenceDef_setup_collocation (int collocated);
    
    SequenceDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~SequenceDef (void);
    
    friend class _TAO_SequenceDef_Remote_Proxy_Impl;
    friend class _TAO_SequenceDef_ThruPOA_Proxy_Impl;
    friend class _TAO_SequenceDef_Direct_Proxy_Impl;
  
  private:
    SequenceDef (const SequenceDef &);
    void operator= (const SequenceDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_SequenceDef_Proxy_Impl
    : public virtual CORBA::_TAO_IDLType_Proxy_Impl
  {
  public:
    virtual ~_TAO_SequenceDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::ULong bound (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void bound (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::TypeCode_ptr element_type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::IDLType_ptr element_type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void element_type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr element_type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_SequenceDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_SequenceDef_Remote_Proxy_Impl
    : public virtual _TAO_SequenceDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_IDLType_Remote_Proxy_Impl
  {
  public:
    _TAO_SequenceDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_SequenceDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::ULong bound (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void bound (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong bound
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::TypeCode_ptr element_type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::IDLType_ptr element_type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void element_type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr element_type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_SequenceDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_SequenceDef_Proxy_Broker (void);
    virtual _TAO_SequenceDef_Proxy_Impl &select_proxy (
        SequenceDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_SequenceDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_SequenceDef_Remote_Proxy_Broker
    : public virtual _TAO_SequenceDef_Proxy_Broker
  {
  public: 
    _TAO_SequenceDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_SequenceDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_SequenceDef_Proxy_Impl &select_proxy (
        SequenceDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_SequenceDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_SequenceDef_Remote_Proxy_Broker *the_TAO_SequenceDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SequenceDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ARRAYDEF_CH_)
#define _CORBA_ARRAYDEF_CH_
  
  class _TAO_ArrayDef_Proxy_Impl;
  class _TAO_ArrayDef_Remote_Proxy_Impl;
  class _TAO_ArrayDef_Proxy_Broker;
  class _TAO_ArrayDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export ArrayDef
    : public virtual CORBA::IDLType
  {
  public:
    typedef ArrayDef_ptr _ptr_type;
    typedef ArrayDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ArrayDef_ptr _duplicate (ArrayDef_ptr obj);
    
    static ArrayDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ArrayDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ArrayDef_ptr _nil (void)
      {
        return (ArrayDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::ULong length (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void length (
        CORBA::ULong length
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr element_type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::IDLType_ptr element_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void element_type_def (
        CORBA::IDLType_ptr element_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_ArrayDef_Proxy_Broker *the_TAO_ArrayDef_Proxy_Broker_;
  
  protected:
    ArrayDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ArrayDef_setup_collocation (int collocated);
    
    ArrayDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~ArrayDef (void);
    
    friend class _TAO_ArrayDef_Remote_Proxy_Impl;
    friend class _TAO_ArrayDef_ThruPOA_Proxy_Impl;
    friend class _TAO_ArrayDef_Direct_Proxy_Impl;
  
  private:
    ArrayDef (const ArrayDef &);
    void operator= (const ArrayDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ArrayDef_Proxy_Impl
    : public virtual CORBA::_TAO_IDLType_Proxy_Impl
  {
  public:
    virtual ~_TAO_ArrayDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::ULong length (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void length (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong length
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::TypeCode_ptr element_type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::IDLType_ptr element_type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void element_type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr element_type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_ArrayDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_ArrayDef_Remote_Proxy_Impl
    : public virtual _TAO_ArrayDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_IDLType_Remote_Proxy_Impl
  {
  public:
    _TAO_ArrayDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_ArrayDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::ULong length (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void length (
        CORBA::Object *_collocated_tao_target_,
        CORBA::ULong length
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::TypeCode_ptr element_type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::IDLType_ptr element_type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void element_type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr element_type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ArrayDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_ArrayDef_Proxy_Broker (void);
    virtual _TAO_ArrayDef_Proxy_Impl &select_proxy (
        ArrayDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_ArrayDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_ArrayDef_Remote_Proxy_Broker
    : public virtual _TAO_ArrayDef_Proxy_Broker
  {
  public: 
    _TAO_ArrayDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_ArrayDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_ArrayDef_Proxy_Impl &select_proxy (
        ArrayDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_ArrayDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_ArrayDef_Remote_Proxy_Broker *the_TAO_ArrayDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ArrayDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_EXCEPTIONDEF__ODDS_N_ENDS_CH_)
#define _CORBA_EXCEPTIONDEF__ODDS_N_ENDS_CH_
  
  class ExceptionDef;
  typedef ExceptionDef *ExceptionDef_ptr;
  struct tao_ExceptionDef_life;
  
  typedef
    TAO_Objref_Var_T<
        ExceptionDef,
        tao_ExceptionDef_life
      >
    ExceptionDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExceptionDef,
        tao_ExceptionDef_life
      >
    ExceptionDef_out;
  
  struct TAO_IFR_Client_Export tao_ExceptionDef_life
  {
    static ExceptionDef_ptr tao_duplicate (ExceptionDef_ptr);
    static void tao_release (ExceptionDef_ptr);
    static ExceptionDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ExceptionDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_ExceptionDef_cast
  {
    static ExceptionDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXCEPTIONDEF_CH_)
#define _CORBA_EXCEPTIONDEF_CH_
  
  class _TAO_ExceptionDef_Proxy_Impl;
  class _TAO_ExceptionDef_Remote_Proxy_Impl;
  class _TAO_ExceptionDef_Proxy_Broker;
  class _TAO_ExceptionDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export ExceptionDef
    : public virtual CORBA::Contained,
      public virtual CORBA::Container
  {
  public:
    typedef ExceptionDef_ptr _ptr_type;
    typedef ExceptionDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ExceptionDef_ptr _duplicate (ExceptionDef_ptr obj);
    
    static ExceptionDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExceptionDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExceptionDef_ptr _nil (void)
      {
        return (ExceptionDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::StructMemberSeq * members (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void members (
        const CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_ExceptionDef_Proxy_Broker *the_TAO_ExceptionDef_Proxy_Broker_;
  
  protected:
    ExceptionDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExceptionDef_setup_collocation (int collocated);
    
    ExceptionDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~ExceptionDef (void);
    
    friend class _TAO_ExceptionDef_Remote_Proxy_Impl;
    friend class _TAO_ExceptionDef_ThruPOA_Proxy_Impl;
    friend class _TAO_ExceptionDef_Direct_Proxy_Impl;
  
  private:
    ExceptionDef (const ExceptionDef &);
    void operator= (const ExceptionDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExceptionDef_Proxy_Impl
    : public virtual CORBA::_TAO_Contained_Proxy_Impl, 
      public virtual CORBA::_TAO_Container_Proxy_Impl
  {
  public:
    virtual ~_TAO_ExceptionDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::TypeCode_ptr type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::StructMemberSeq * members (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void members (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_ExceptionDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_ExceptionDef_Remote_Proxy_Impl
    : public virtual _TAO_ExceptionDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_Contained_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_Container_Remote_Proxy_Impl
  {
  public:
    _TAO_ExceptionDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_ExceptionDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::TypeCode_ptr type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::StructMemberSeq * members (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void members (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExceptionDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_ExceptionDef_Proxy_Broker (void);
    virtual _TAO_ExceptionDef_Proxy_Impl &select_proxy (
        ExceptionDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_ExceptionDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_ExceptionDef_Remote_Proxy_Broker
    : public virtual _TAO_ExceptionDef_Proxy_Broker
  {
  public: 
    _TAO_ExceptionDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_ExceptionDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_ExceptionDef_Proxy_Impl &select_proxy (
        ExceptionDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_ExceptionDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_ExceptionDef_Remote_Proxy_Broker *the_TAO_ExceptionDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExceptionDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:75
  
  class ExceptionDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        ExceptionDefSeq,
        TAO_Object_Manager<
            ExceptionDef,
            ExceptionDef,
            CORBA::tao_ExceptionDef_life
          >
      >
    ExceptionDefSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        ExceptionDefSeq,
        ExceptionDefSeq_var,
        TAO_Object_Manager<
            ExceptionDef,
            ExceptionDef,
            CORBA::tao_ExceptionDef_life
          >
      >
    ExceptionDefSeq_out;
  
  class TAO_IFR_Client_Export ExceptionDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            ExceptionDef,
            ExceptionDef,
            CORBA::tao_ExceptionDef_life,
            CORBA::tao_ExceptionDef_cast
          >
  {
  public:
    ExceptionDefSeq (void);
    ExceptionDefSeq (CORBA::ULong max);
    ExceptionDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExceptionDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    ExceptionDefSeq (const ExceptionDefSeq &);
    ~ExceptionDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ExceptionDefSeq_var _var_type;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExceptionDefSeq;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/enum_ch.cpp:57
  
  enum AttributeMode
  {
    ATTR_NORMAL,
    ATTR_READONLY
  };
  
  typedef AttributeMode &AttributeMode_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AttributeMode;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_ATTRIBUTEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_ATTRIBUTEDEF__ODDS_N_ENDS_CH_
  
  class AttributeDef;
  typedef AttributeDef *AttributeDef_ptr;
  struct tao_AttributeDef_life;
  
  typedef
    TAO_Objref_Var_T<
        AttributeDef,
        tao_AttributeDef_life
      >
    AttributeDef_var;
  
  typedef
    TAO_Objref_Out_T<
        AttributeDef,
        tao_AttributeDef_life
      >
    AttributeDef_out;
  
  struct TAO_IFR_Client_Export tao_AttributeDef_life
  {
    static AttributeDef_ptr tao_duplicate (AttributeDef_ptr);
    static void tao_release (AttributeDef_ptr);
    static AttributeDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        AttributeDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_AttributeDef_cast
  {
    static AttributeDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ATTRIBUTEDEF_CH_)
#define _CORBA_ATTRIBUTEDEF_CH_
  
  class _TAO_AttributeDef_Proxy_Impl;
  class _TAO_AttributeDef_Remote_Proxy_Impl;
  class _TAO_AttributeDef_Proxy_Broker;
  class _TAO_AttributeDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export AttributeDef
    : public virtual CORBA::Contained
  {
  public:
    typedef AttributeDef_ptr _ptr_type;
    typedef AttributeDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static AttributeDef_ptr _duplicate (AttributeDef_ptr obj);
    
    static AttributeDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static AttributeDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static AttributeDef_ptr _nil (void)
      {
        return (AttributeDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::IDLType_ptr type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void type_def (
        CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::AttributeMode mode (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void mode (
        CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_AttributeDef_Proxy_Broker *the_TAO_AttributeDef_Proxy_Broker_;
  
  protected:
    AttributeDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_AttributeDef_setup_collocation (int collocated);
    
    AttributeDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~AttributeDef (void);
    
    friend class _TAO_AttributeDef_Remote_Proxy_Impl;
    friend class _TAO_AttributeDef_ThruPOA_Proxy_Impl;
    friend class _TAO_AttributeDef_Direct_Proxy_Impl;
  
  private:
    AttributeDef (const AttributeDef &);
    void operator= (const AttributeDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_AttributeDef_Proxy_Impl
    : public virtual CORBA::_TAO_Contained_Proxy_Impl
  {
  public:
    virtual ~_TAO_AttributeDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::TypeCode_ptr type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::IDLType_ptr type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::AttributeMode mode (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void mode (
        CORBA::Object *_collocated_tao_target_,
        CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_AttributeDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_AttributeDef_Remote_Proxy_Impl
    : public virtual _TAO_AttributeDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_Contained_Remote_Proxy_Impl
  {
  public:
    _TAO_AttributeDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_AttributeDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::TypeCode_ptr type (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::IDLType_ptr type_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void type_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::AttributeMode mode (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void mode (
        CORBA::Object *_collocated_tao_target_,
        CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_AttributeDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_AttributeDef_Proxy_Broker (void);
    virtual _TAO_AttributeDef_Proxy_Impl &select_proxy (
        AttributeDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_AttributeDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_AttributeDef_Remote_Proxy_Broker
    : public virtual _TAO_AttributeDef_Proxy_Broker
  {
  public: 
    _TAO_AttributeDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_AttributeDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_AttributeDef_Proxy_Impl &select_proxy (
        AttributeDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_AttributeDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_AttributeDef_Remote_Proxy_Broker *the_TAO_AttributeDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AttributeDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
  
  struct AttributeDescription;
  
  typedef
    TAO_Var_Var_T<
        AttributeDescription
      >
    AttributeDescription_var;
  
  typedef
    TAO_Out_T<
        AttributeDescription,
        AttributeDescription_var
      >
    AttributeDescription_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export AttributeDescription
  {
    typedef AttributeDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    TAO_String_Manager id;
    TAO_String_Manager defined_in;
    TAO_String_Manager version;
    CORBA::TypeCode_var type;
    CORBA::AttributeMode mode;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AttributeDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
  
  struct ExtAttributeDescription;
  
  typedef
    TAO_Var_Var_T<
        ExtAttributeDescription
      >
    ExtAttributeDescription_var;
  
  typedef
    TAO_Out_T<
        ExtAttributeDescription,
        ExtAttributeDescription_var
      >
    ExtAttributeDescription_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export ExtAttributeDescription
  {
    typedef ExtAttributeDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    TAO_String_Manager id;
    TAO_String_Manager defined_in;
    TAO_String_Manager version;
    CORBA::TypeCode_var type;
    CORBA::AttributeMode mode;
    CORBA::ExcDescriptionSeq get_exceptions;
    CORBA::ExcDescriptionSeq put_exceptions;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtAttributeDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_EXTATTRIBUTEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_EXTATTRIBUTEDEF__ODDS_N_ENDS_CH_
  
  class ExtAttributeDef;
  typedef ExtAttributeDef *ExtAttributeDef_ptr;
  struct tao_ExtAttributeDef_life;
  
  typedef
    TAO_Objref_Var_T<
        ExtAttributeDef,
        tao_ExtAttributeDef_life
      >
    ExtAttributeDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtAttributeDef,
        tao_ExtAttributeDef_life
      >
    ExtAttributeDef_out;
  
  struct TAO_IFR_Client_Export tao_ExtAttributeDef_life
  {
    static ExtAttributeDef_ptr tao_duplicate (ExtAttributeDef_ptr);
    static void tao_release (ExtAttributeDef_ptr);
    static ExtAttributeDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ExtAttributeDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_ExtAttributeDef_cast
  {
    static ExtAttributeDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXTATTRIBUTEDEF_CH_)
#define _CORBA_EXTATTRIBUTEDEF_CH_
  
  class _TAO_ExtAttributeDef_Proxy_Impl;
  class _TAO_ExtAttributeDef_Remote_Proxy_Impl;
  class _TAO_ExtAttributeDef_Proxy_Broker;
  class _TAO_ExtAttributeDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export ExtAttributeDef
    : public virtual CORBA::AttributeDef
  {
  public:
    typedef ExtAttributeDef_ptr _ptr_type;
    typedef ExtAttributeDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ExtAttributeDef_ptr _duplicate (ExtAttributeDef_ptr obj);
    
    static ExtAttributeDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExtAttributeDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExtAttributeDef_ptr _nil (void)
      {
        return (ExtAttributeDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ExcDescriptionSeq * get_exceptions (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void get_exceptions (
        const CORBA::ExcDescriptionSeq & get_exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ExcDescriptionSeq * set_exceptions (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void set_exceptions (
        const CORBA::ExcDescriptionSeq & set_exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ExtAttributeDescription * describe_attribute (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_ExtAttributeDef_Proxy_Broker *the_TAO_ExtAttributeDef_Proxy_Broker_;
  
  protected:
    ExtAttributeDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExtAttributeDef_setup_collocation (int collocated);
    
    ExtAttributeDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~ExtAttributeDef (void);
    
    friend class _TAO_ExtAttributeDef_Remote_Proxy_Impl;
    friend class _TAO_ExtAttributeDef_ThruPOA_Proxy_Impl;
    friend class _TAO_ExtAttributeDef_Direct_Proxy_Impl;
  
  private:
    ExtAttributeDef (const ExtAttributeDef &);
    void operator= (const ExtAttributeDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExtAttributeDef_Proxy_Impl
    : public virtual CORBA::_TAO_AttributeDef_Proxy_Impl
  {
  public:
    virtual ~_TAO_ExtAttributeDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::ExcDescriptionSeq * get_exceptions (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void get_exceptions (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ExcDescriptionSeq & get_exceptions
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::ExcDescriptionSeq * set_exceptions (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void set_exceptions (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ExcDescriptionSeq & set_exceptions
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::ExtAttributeDescription * describe_attribute (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_ExtAttributeDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_ExtAttributeDef_Remote_Proxy_Impl
    : public virtual _TAO_ExtAttributeDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_AttributeDef_Remote_Proxy_Impl
  {
  public:
    _TAO_ExtAttributeDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_ExtAttributeDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::ExcDescriptionSeq * get_exceptions (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void get_exceptions (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ExcDescriptionSeq & get_exceptions
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::ExcDescriptionSeq * set_exceptions (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void set_exceptions (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ExcDescriptionSeq & set_exceptions
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::ExtAttributeDescription * describe_attribute (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExtAttributeDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_ExtAttributeDef_Proxy_Broker (void);
    virtual _TAO_ExtAttributeDef_Proxy_Impl &select_proxy (
        ExtAttributeDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_ExtAttributeDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_ExtAttributeDef_Remote_Proxy_Broker
    : public virtual _TAO_ExtAttributeDef_Proxy_Broker
  {
  public: 
    _TAO_ExtAttributeDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_ExtAttributeDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_ExtAttributeDef_Proxy_Impl &select_proxy (
        ExtAttributeDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_ExtAttributeDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_ExtAttributeDef_Remote_Proxy_Broker *the_TAO_ExtAttributeDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtAttributeDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/enum_ch.cpp:57
  
  enum OperationMode
  {
    OP_NORMAL,
    OP_ONEWAY
  };
  
  typedef OperationMode &OperationMode_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_OperationMode;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
  
  struct ParameterDescription;
  
  typedef
    TAO_Var_Var_T<
        ParameterDescription
      >
    ParameterDescription_var;
  
  typedef
    TAO_Out_T<
        ParameterDescription,
        ParameterDescription_var
      >
    ParameterDescription_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export ParameterDescription
  {
    typedef ParameterDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    CORBA::TypeCode_var type;
    CORBA::IDLType_var type_def;
    CORBA::ParameterMode mode;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ParameterDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:75
  
  class ParDescriptionSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        ParDescriptionSeq,
        ParameterDescription
      >
    ParDescriptionSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        ParDescriptionSeq,
        ParDescriptionSeq_var,
        ParameterDescription
      >
    ParDescriptionSeq_out;
  
  class TAO_IFR_Client_Export ParDescriptionSeq
    : public
        TAO_Unbounded_Sequence<
            ParameterDescription
          >
  {
  public:
    ParDescriptionSeq (void);
    ParDescriptionSeq (CORBA::ULong max);
    ParDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ParameterDescription* buffer, 
        CORBA::Boolean release = 0
      );
    ParDescriptionSeq (const ParDescriptionSeq &);
    ~ParDescriptionSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ParDescriptionSeq_var _var_type;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ParDescriptionSeq;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:367
  
  typedef char * ContextIdentifier;
  typedef CORBA::String_var ContextIdentifier_var;
  typedef CORBA::String_out ContextIdentifier_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ContextIdentifier;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:75
  
  class ContextIdSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        ContextIdSeq,
        TAO_SeqElem_String_Manager
      >
    ContextIdSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        ContextIdSeq,
        ContextIdSeq_var,
        TAO_SeqElem_String_Manager
      >
    ContextIdSeq_out;
  
  class TAO_IFR_Client_Export ContextIdSeq
    : public
        TAO_Unbounded_String_Sequence
  {
  public:
    ContextIdSeq (void);
    ContextIdSeq (CORBA::ULong max);
    ContextIdSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        char ** buffer, 
        CORBA::Boolean release = 0
      );
    ContextIdSeq (const ContextIdSeq &);
    ~ContextIdSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ContextIdSeq_var _var_type;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ContextIdSeq;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_OPERATIONDEF__ODDS_N_ENDS_CH_)
#define _CORBA_OPERATIONDEF__ODDS_N_ENDS_CH_
  
  class OperationDef;
  typedef OperationDef *OperationDef_ptr;
  struct tao_OperationDef_life;
  
  typedef
    TAO_Objref_Var_T<
        OperationDef,
        tao_OperationDef_life
      >
    OperationDef_var;
  
  typedef
    TAO_Objref_Out_T<
        OperationDef,
        tao_OperationDef_life
      >
    OperationDef_out;
  
  struct TAO_IFR_Client_Export tao_OperationDef_life
  {
    static OperationDef_ptr tao_duplicate (OperationDef_ptr);
    static void tao_release (OperationDef_ptr);
    static OperationDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        OperationDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_OperationDef_cast
  {
    static OperationDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_OPERATIONDEF_CH_)
#define _CORBA_OPERATIONDEF_CH_
  
  class _TAO_OperationDef_Proxy_Impl;
  class _TAO_OperationDef_Remote_Proxy_Impl;
  class _TAO_OperationDef_Proxy_Broker;
  class _TAO_OperationDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export OperationDef
    : public virtual CORBA::Contained
  {
  public:
    typedef OperationDef_ptr _ptr_type;
    typedef OperationDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static OperationDef_ptr _duplicate (OperationDef_ptr obj);
    
    static OperationDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static OperationDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static OperationDef_ptr _nil (void)
      {
        return (OperationDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr result (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::IDLType_ptr result_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void result_def (
        CORBA::IDLType_ptr result_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ParDescriptionSeq * params (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void params (
        const CORBA::ParDescriptionSeq & params
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::OperationMode mode (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void mode (
        CORBA::OperationMode mode
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ContextIdSeq * contexts (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void contexts (
        const CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ExceptionDefSeq * exceptions (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void exceptions (
        const CORBA::ExceptionDefSeq & exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_OperationDef_Proxy_Broker *the_TAO_OperationDef_Proxy_Broker_;
  
  protected:
    OperationDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_OperationDef_setup_collocation (int collocated);
    
    OperationDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~OperationDef (void);
    
    friend class _TAO_OperationDef_Remote_Proxy_Impl;
    friend class _TAO_OperationDef_ThruPOA_Proxy_Impl;
    friend class _TAO_OperationDef_Direct_Proxy_Impl;
  
  private:
    OperationDef (const OperationDef &);
    void operator= (const OperationDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_OperationDef_Proxy_Impl
    : public virtual CORBA::_TAO_Contained_Proxy_Impl
  {
  public:
    virtual ~_TAO_OperationDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::TypeCode_ptr result (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::IDLType_ptr result_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void result_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr result_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::ParDescriptionSeq * params (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void params (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ParDescriptionSeq & params
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::OperationMode mode (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void mode (
        CORBA::Object *_collocated_tao_target_,
        CORBA::OperationMode mode
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::ContextIdSeq * contexts (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void contexts (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::ExceptionDefSeq * exceptions (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void exceptions (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ExceptionDefSeq & exceptions
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_OperationDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_OperationDef_Remote_Proxy_Impl
    : public virtual _TAO_OperationDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_Contained_Remote_Proxy_Impl
  {
  public:
    _TAO_OperationDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_OperationDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::TypeCode_ptr result (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::IDLType_ptr result_def (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void result_def (
        CORBA::Object *_collocated_tao_target_,
        CORBA::IDLType_ptr result_def
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::ParDescriptionSeq * params (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void params (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ParDescriptionSeq & params
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::OperationMode mode (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void mode (
        CORBA::Object *_collocated_tao_target_,
        CORBA::OperationMode mode
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::ContextIdSeq * contexts (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void contexts (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::ExceptionDefSeq * exceptions (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void exceptions (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::ExceptionDefSeq & exceptions
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_OperationDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_OperationDef_Proxy_Broker (void);
    virtual _TAO_OperationDef_Proxy_Impl &select_proxy (
        OperationDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_OperationDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_OperationDef_Remote_Proxy_Broker
    : public virtual _TAO_OperationDef_Proxy_Broker
  {
  public: 
    _TAO_OperationDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_OperationDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_OperationDef_Proxy_Impl &select_proxy (
        OperationDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_OperationDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_OperationDef_Remote_Proxy_Broker *the_TAO_OperationDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_OperationDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
  
  struct OperationDescription;
  
  typedef
    TAO_Var_Var_T<
        OperationDescription
      >
    OperationDescription_var;
  
  typedef
    TAO_Out_T<
        OperationDescription,
        OperationDescription_var
      >
    OperationDescription_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export OperationDescription
  {
    typedef OperationDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    TAO_String_Manager id;
    TAO_String_Manager defined_in;
    TAO_String_Manager version;
    CORBA::TypeCode_var result;
    CORBA::OperationMode mode;
    CORBA::ContextIdSeq contexts;
    CORBA::ParDescriptionSeq parameters;
    CORBA::ExcDescriptionSeq exceptions;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_OperationDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:75
  
  class RepositoryIdSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        RepositoryIdSeq,
        TAO_SeqElem_String_Manager
      >
    RepositoryIdSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        RepositoryIdSeq,
        RepositoryIdSeq_var,
        TAO_SeqElem_String_Manager
      >
    RepositoryIdSeq_out;
  
  class TAO_IFR_Client_Export RepositoryIdSeq
    : public
        TAO_Unbounded_String_Sequence
  {
  public:
    RepositoryIdSeq (void);
    RepositoryIdSeq (CORBA::ULong max);
    RepositoryIdSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        char ** buffer, 
        CORBA::Boolean release = 0
      );
    RepositoryIdSeq (const RepositoryIdSeq &);
    ~RepositoryIdSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef RepositoryIdSeq_var _var_type;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RepositoryIdSeq;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:75
  
  class OpDescriptionSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        OpDescriptionSeq,
        OperationDescription
      >
    OpDescriptionSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        OpDescriptionSeq,
        OpDescriptionSeq_var,
        OperationDescription
      >
    OpDescriptionSeq_out;
  
  class TAO_IFR_Client_Export OpDescriptionSeq
    : public
        TAO_Unbounded_Sequence<
            OperationDescription
          >
  {
  public:
    OpDescriptionSeq (void);
    OpDescriptionSeq (CORBA::ULong max);
    OpDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        OperationDescription* buffer, 
        CORBA::Boolean release = 0
      );
    OpDescriptionSeq (const OpDescriptionSeq &);
    ~OpDescriptionSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef OpDescriptionSeq_var _var_type;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_OpDescriptionSeq;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:75
  
  class AttrDescriptionSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        AttrDescriptionSeq,
        AttributeDescription
      >
    AttrDescriptionSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        AttrDescriptionSeq,
        AttrDescriptionSeq_var,
        AttributeDescription
      >
    AttrDescriptionSeq_out;
  
  class TAO_IFR_Client_Export AttrDescriptionSeq
    : public
        TAO_Unbounded_Sequence<
            AttributeDescription
          >
  {
  public:
    AttrDescriptionSeq (void);
    AttrDescriptionSeq (CORBA::ULong max);
    AttrDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        AttributeDescription* buffer, 
        CORBA::Boolean release = 0
      );
    AttrDescriptionSeq (const AttrDescriptionSeq &);
    ~AttrDescriptionSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef AttrDescriptionSeq_var _var_type;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AttrDescriptionSeq;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:75
  
  class ExtAttrDescriptionSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        ExtAttrDescriptionSeq,
        ExtAttributeDescription
      >
    ExtAttrDescriptionSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        ExtAttrDescriptionSeq,
        ExtAttrDescriptionSeq_var,
        ExtAttributeDescription
      >
    ExtAttrDescriptionSeq_out;
  
  class TAO_IFR_Client_Export ExtAttrDescriptionSeq
    : public
        TAO_Unbounded_Sequence<
            ExtAttributeDescription
          >
  {
  public:
    ExtAttrDescriptionSeq (void);
    ExtAttrDescriptionSeq (CORBA::ULong max);
    ExtAttrDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExtAttributeDescription* buffer, 
        CORBA::Boolean release = 0
      );
    ExtAttrDescriptionSeq (const ExtAttrDescriptionSeq &);
    ~ExtAttrDescriptionSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ExtAttrDescriptionSeq_var _var_type;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtAttrDescriptionSeq;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_INTERFACEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_INTERFACEDEF__ODDS_N_ENDS_CH_
  
  class InterfaceDef;
  typedef InterfaceDef *InterfaceDef_ptr;
  struct tao_InterfaceDef_life;
  
  typedef
    TAO_Objref_Var_T<
        InterfaceDef,
        tao_InterfaceDef_life
      >
    InterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        InterfaceDef,
        tao_InterfaceDef_life
      >
    InterfaceDef_out;
  
  struct TAO_IFR_Client_Export tao_InterfaceDef_life
  {
    static InterfaceDef_ptr tao_duplicate (InterfaceDef_ptr);
    static void tao_release (InterfaceDef_ptr);
    static InterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        InterfaceDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_InterfaceDef_cast
  {
    static InterfaceDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_INTERFACEDEF_CH_)
#define _CORBA_INTERFACEDEF_CH_
  
  class _TAO_InterfaceDef_Proxy_Impl;
  class _TAO_InterfaceDef_Remote_Proxy_Impl;
  class _TAO_InterfaceDef_Proxy_Broker;
  class _TAO_InterfaceDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export InterfaceDef
    : public virtual CORBA::Container,
      public virtual CORBA::Contained,
      public virtual CORBA::IDLType
  {
  public:
    typedef InterfaceDef_ptr _ptr_type;
    typedef InterfaceDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static InterfaceDef_ptr _duplicate (InterfaceDef_ptr obj);
    
    static InterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static InterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static InterfaceDef_ptr _nil (void)
      {
        return (InterfaceDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::InterfaceDefSeq * base_interfaces (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void base_interfaces (
        const CORBA::InterfaceDefSeq & base_interfaces
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean is_a (
        const char * interface_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
    
    struct FullInterfaceDescription;
    
    typedef
      TAO_Var_Var_T<
          FullInterfaceDescription
        >
      FullInterfaceDescription_var;
    
    typedef
      TAO_Out_T<
          FullInterfaceDescription,
          FullInterfaceDescription_var
        >
      FullInterfaceDescription_out;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
    
    struct TAO_IFR_Client_Export FullInterfaceDescription
    {
      typedef FullInterfaceDescription_var _var_type;
      
      static void _tao_any_destructor (void *);
      TAO_String_Manager name;
      TAO_String_Manager id;
      TAO_String_Manager defined_in;
      TAO_String_Manager version;
      ACE_NESTED_CLASS (CORBA, OpDescriptionSeq) operations;
      ACE_NESTED_CLASS (CORBA, AttrDescriptionSeq) attributes;
      ACE_NESTED_CLASS (CORBA, RepositoryIdSeq) base_interfaces;
      CORBA::TypeCode_var type;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_FullInterfaceDescription;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::InterfaceDef::FullInterfaceDescription * describe_interface (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::AttributeDef_ptr create_attribute (
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr type,
        CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::OperationDef_ptr create_operation (
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr result,
        CORBA::OperationMode mode,
        const CORBA::ParDescriptionSeq & params,
        const CORBA::ExceptionDefSeq & exceptions,
        const CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_InterfaceDef_Proxy_Broker *the_TAO_InterfaceDef_Proxy_Broker_;
  
  protected:
    InterfaceDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_InterfaceDef_setup_collocation (int collocated);
    
    InterfaceDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~InterfaceDef (void);
    
    friend class _TAO_InterfaceDef_Remote_Proxy_Impl;
    friend class _TAO_InterfaceDef_ThruPOA_Proxy_Impl;
    friend class _TAO_InterfaceDef_Direct_Proxy_Impl;
  
  private:
    InterfaceDef (const InterfaceDef &);
    void operator= (const InterfaceDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_InterfaceDef_Proxy_Impl
    : public virtual CORBA::_TAO_Container_Proxy_Impl, 
      public virtual CORBA::_TAO_Contained_Proxy_Impl, 
      public virtual CORBA::_TAO_IDLType_Proxy_Impl
  {
  public:
    virtual ~_TAO_InterfaceDef_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::InterfaceDefSeq * base_interfaces (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void base_interfaces (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::InterfaceDefSeq & base_interfaces
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::Boolean is_a (
        CORBA::Object *_collocated_tao_target_,
        const char * interface_id
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::InterfaceDef::FullInterfaceDescription * describe_interface (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::AttributeDef_ptr create_attribute (
        CORBA::Object *_collocated_tao_target_,
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr type,
        CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::OperationDef_ptr create_operation (
        CORBA::Object *_collocated_tao_target_,
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr result,
        CORBA::OperationMode mode,
        const CORBA::ParDescriptionSeq & params,
        const CORBA::ExceptionDefSeq & exceptions,
        const CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_InterfaceDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_InterfaceDef_Remote_Proxy_Impl
    : public virtual _TAO_InterfaceDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_Container_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_Contained_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_IDLType_Remote_Proxy_Impl
  {
  public:
    _TAO_InterfaceDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_InterfaceDef_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::InterfaceDefSeq * base_interfaces (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void base_interfaces (
        CORBA::Object *_collocated_tao_target_,
        const CORBA::InterfaceDefSeq & base_interfaces
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::Boolean is_a (
        CORBA::Object *_collocated_tao_target_,
        const char * interface_id
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::InterfaceDef::FullInterfaceDescription * describe_interface (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::AttributeDef_ptr create_attribute (
        CORBA::Object *_collocated_tao_target_,
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr type,
        CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::OperationDef_ptr create_operation (
        CORBA::Object *_collocated_tao_target_,
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr result,
        CORBA::OperationMode mode,
        const CORBA::ParDescriptionSeq & params,
        const CORBA::ExceptionDefSeq & exceptions,
        const CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_InterfaceDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_InterfaceDef_Proxy_Broker (void);
    virtual _TAO_InterfaceDef_Proxy_Impl &select_proxy (
        InterfaceDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_InterfaceDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_InterfaceDef_Remote_Proxy_Broker
    : public virtual _TAO_InterfaceDef_Proxy_Broker
  {
  public: 
    _TAO_InterfaceDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_InterfaceDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_InterfaceDef_Proxy_Impl &select_proxy (
        InterfaceDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_InterfaceDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_InterfaceDef_Remote_Proxy_Broker *the_TAO_InterfaceDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InterfaceDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
  
  struct InterfaceDescription;
  
  typedef
    TAO_Var_Var_T<
        InterfaceDescription
      >
    InterfaceDescription_var;
  
  typedef
    TAO_Out_T<
        InterfaceDescription,
        InterfaceDescription_var
      >
    InterfaceDescription_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export InterfaceDescription
  {
    typedef InterfaceDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    TAO_String_Manager id;
    TAO_String_Manager defined_in;
    TAO_String_Manager version;
    CORBA::RepositoryIdSeq base_interfaces;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InterfaceDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_INTERFACEATTREXTENSION__ODDS_N_ENDS_CH_)
#define _CORBA_INTERFACEATTREXTENSION__ODDS_N_ENDS_CH_
  
  class InterfaceAttrExtension;
  typedef InterfaceAttrExtension *InterfaceAttrExtension_ptr;
  struct tao_InterfaceAttrExtension_life;
  
  typedef
    TAO_Objref_Var_T<
        InterfaceAttrExtension,
        tao_InterfaceAttrExtension_life
      >
    InterfaceAttrExtension_var;
  
  typedef
    TAO_Objref_Out_T<
        InterfaceAttrExtension,
        tao_InterfaceAttrExtension_life
      >
    InterfaceAttrExtension_out;
  
  struct TAO_IFR_Client_Export tao_InterfaceAttrExtension_life
  {
    static InterfaceAttrExtension_ptr tao_duplicate (InterfaceAttrExtension_ptr);
    static void tao_release (InterfaceAttrExtension_ptr);
    static InterfaceAttrExtension_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        InterfaceAttrExtension_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_InterfaceAttrExtension_cast
  {
    static InterfaceAttrExtension_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_INTERFACEATTREXTENSION_CH_)
#define _CORBA_INTERFACEATTREXTENSION_CH_
  
  class _TAO_InterfaceAttrExtension_Proxy_Impl;
  class _TAO_InterfaceAttrExtension_Remote_Proxy_Impl;
  class _TAO_InterfaceAttrExtension_Proxy_Broker;
  class _TAO_InterfaceAttrExtension_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export InterfaceAttrExtension
    : public virtual CORBA::Object
  {
  public:
    typedef InterfaceAttrExtension_ptr _ptr_type;
    typedef InterfaceAttrExtension_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static InterfaceAttrExtension_ptr _duplicate (InterfaceAttrExtension_ptr obj);
    
    static InterfaceAttrExtension_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static InterfaceAttrExtension_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static InterfaceAttrExtension_ptr _nil (void)
      {
        return (InterfaceAttrExtension_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231
    
    struct ExtFullInterfaceDescription;
    
    typedef
      TAO_Var_Var_T<
          ExtFullInterfaceDescription
        >
      ExtFullInterfaceDescription_var;
    
    typedef
      TAO_Out_T<
          ExtFullInterfaceDescription,
          ExtFullInterfaceDescription_var
        >
      ExtFullInterfaceDescription_out;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
    
    struct TAO_IFR_Client_Export ExtFullInterfaceDescription
    {
      typedef ExtFullInterfaceDescription_var _var_type;
      
      static void _tao_any_destructor (void *);
      TAO_String_Manager name;
      TAO_String_Manager id;
      TAO_String_Manager defined_in;
      TAO_String_Manager version;
      ACE_NESTED_CLASS (CORBA, OpDescriptionSeq) operations;
      ACE_NESTED_CLASS (CORBA, ExtAttrDescriptionSeq) attributes;
      ACE_NESTED_CLASS (CORBA, RepositoryIdSeq) base_interfaces;
      CORBA::TypeCode_var type;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_ExtFullInterfaceDescription;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription * describe_ext_interface (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ExtAttributeDef_ptr create_ext_attribute (
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr type,
        CORBA::AttributeMode mode,
        const CORBA::ExceptionDefSeq & get_exceptions,
        const CORBA::ExceptionDefSeq & set_exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_InterfaceAttrExtension_Proxy_Broker *the_TAO_InterfaceAttrExtension_Proxy_Broker_;
  
  protected:
    InterfaceAttrExtension (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_InterfaceAttrExtension_setup_collocation (int collocated);
    
    InterfaceAttrExtension (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~InterfaceAttrExtension (void);
    
    friend class _TAO_InterfaceAttrExtension_Remote_Proxy_Impl;
    friend class _TAO_InterfaceAttrExtension_ThruPOA_Proxy_Impl;
    friend class _TAO_InterfaceAttrExtension_Direct_Proxy_Impl;
  
  private:
    InterfaceAttrExtension (const InterfaceAttrExtension &);
    void operator= (const InterfaceAttrExtension &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_InterfaceAttrExtension_Proxy_Impl
    : public virtual TAO_Object_Proxy_Impl
  {
  public:
    virtual ~_TAO_InterfaceAttrExtension_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription * describe_ext_interface (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::CORBA::ExtAttributeDef_ptr create_ext_attribute (
        CORBA::Object *_collocated_tao_target_,
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr type,
        CORBA::AttributeMode mode,
        const CORBA::ExceptionDefSeq & get_exceptions,
        const CORBA::ExceptionDefSeq & set_exceptions
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_InterfaceAttrExtension_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_InterfaceAttrExtension_Remote_Proxy_Impl
    : public virtual _TAO_InterfaceAttrExtension_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl
  {
  public:
    _TAO_InterfaceAttrExtension_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_InterfaceAttrExtension_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription * describe_ext_interface (
        CORBA::Object *_collocated_tao_target_
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::CORBA::ExtAttributeDef_ptr create_ext_attribute (
        CORBA::Object *_collocated_tao_target_,
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr type,
        CORBA::AttributeMode mode,
        const CORBA::ExceptionDefSeq & get_exceptions,
        const CORBA::ExceptionDefSeq & set_exceptions
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_InterfaceAttrExtension_Proxy_Broker
  {
  public:
    virtual ~_TAO_InterfaceAttrExtension_Proxy_Broker (void);
    virtual _TAO_InterfaceAttrExtension_Proxy_Impl &select_proxy (
        InterfaceAttrExtension *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_InterfaceAttrExtension_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_InterfaceAttrExtension_Remote_Proxy_Broker
    : public virtual _TAO_InterfaceAttrExtension_Proxy_Broker
  {
  public: 
    _TAO_InterfaceAttrExtension_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_InterfaceAttrExtension_Remote_Proxy_Broker (void);
    
    virtual _TAO_InterfaceAttrExtension_Proxy_Impl &select_proxy (
        InterfaceAttrExtension *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_InterfaceAttrExtension_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_InterfaceAttrExtension_Remote_Proxy_Broker *the_TAO_InterfaceAttrExtension_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InterfaceAttrExtension;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_EXTINTERFACEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_EXTINTERFACEDEF__ODDS_N_ENDS_CH_
  
  class ExtInterfaceDef;
  typedef ExtInterfaceDef *ExtInterfaceDef_ptr;
  struct tao_ExtInterfaceDef_life;
  
  typedef
    TAO_Objref_Var_T<
        ExtInterfaceDef,
        tao_ExtInterfaceDef_life
      >
    ExtInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtInterfaceDef,
        tao_ExtInterfaceDef_life
      >
    ExtInterfaceDef_out;
  
  struct TAO_IFR_Client_Export tao_ExtInterfaceDef_life
  {
    static ExtInterfaceDef_ptr tao_duplicate (ExtInterfaceDef_ptr);
    static void tao_release (ExtInterfaceDef_ptr);
    static ExtInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ExtInterfaceDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_ExtInterfaceDef_cast
  {
    static ExtInterfaceDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXTINTERFACEDEF_CH_)
#define _CORBA_EXTINTERFACEDEF_CH_
  
  class _TAO_ExtInterfaceDef_Proxy_Impl;
  class _TAO_ExtInterfaceDef_Remote_Proxy_Impl;
  class _TAO_ExtInterfaceDef_Proxy_Broker;
  class _TAO_ExtInterfaceDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export ExtInterfaceDef
    : public virtual CORBA::InterfaceDef,
      public virtual CORBA::InterfaceAttrExtension
  {
  public:
    typedef ExtInterfaceDef_ptr _ptr_type;
    typedef ExtInterfaceDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ExtInterfaceDef_ptr _duplicate (ExtInterfaceDef_ptr obj);
    
    static ExtInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExtInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExtInterfaceDef_ptr _nil (void)
      {
        return (ExtInterfaceDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_ExtInterfaceDef_Proxy_Broker *the_TAO_ExtInterfaceDef_Proxy_Broker_;
  
  protected:
    ExtInterfaceDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExtInterfaceDef_setup_collocation (int collocated);
    
    ExtInterfaceDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~ExtInterfaceDef (void);
    
    friend class _TAO_ExtInterfaceDef_Remote_Proxy_Impl;
    friend class _TAO_ExtInterfaceDef_ThruPOA_Proxy_Impl;
    friend class _TAO_ExtInterfaceDef_Direct_Proxy_Impl;
  
  private:
    ExtInterfaceDef (const ExtInterfaceDef &);
    void operator= (const ExtInterfaceDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExtInterfaceDef_Proxy_Impl
    : public virtual CORBA::_TAO_InterfaceDef_Proxy_Impl, 
      public virtual CORBA::_TAO_InterfaceAttrExtension_Proxy_Impl
  {
  public:
    virtual ~_TAO_ExtInterfaceDef_Proxy_Impl (void) {}
  
  protected:
    _TAO_ExtInterfaceDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_ExtInterfaceDef_Remote_Proxy_Impl
    : public virtual _TAO_ExtInterfaceDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_InterfaceDef_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_InterfaceAttrExtension_Remote_Proxy_Impl
  {
  public:
    _TAO_ExtInterfaceDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_ExtInterfaceDef_Remote_Proxy_Impl (void) {}
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExtInterfaceDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_ExtInterfaceDef_Proxy_Broker (void);
    virtual _TAO_ExtInterfaceDef_Proxy_Impl &select_proxy (
        ExtInterfaceDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_ExtInterfaceDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_ExtInterfaceDef_Remote_Proxy_Broker
    : public virtual _TAO_ExtInterfaceDef_Proxy_Broker
  {
  public: 
    _TAO_ExtInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_ExtInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_ExtInterfaceDef_Proxy_Impl &select_proxy (
        ExtInterfaceDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_ExtInterfaceDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_ExtInterfaceDef_Remote_Proxy_Broker *the_TAO_ExtInterfaceDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtInterfaceDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_ABSTRACTINTERFACEDEF__ODDS_N_ENDS_CH_
  
  class AbstractInterfaceDef;
  typedef AbstractInterfaceDef *AbstractInterfaceDef_ptr;
  struct tao_AbstractInterfaceDef_life;
  
  typedef
    TAO_Objref_Var_T<
        AbstractInterfaceDef,
        tao_AbstractInterfaceDef_life
      >
    AbstractInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        AbstractInterfaceDef,
        tao_AbstractInterfaceDef_life
      >
    AbstractInterfaceDef_out;
  
  struct TAO_IFR_Client_Export tao_AbstractInterfaceDef_life
  {
    static AbstractInterfaceDef_ptr tao_duplicate (AbstractInterfaceDef_ptr);
    static void tao_release (AbstractInterfaceDef_ptr);
    static AbstractInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        AbstractInterfaceDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_AbstractInterfaceDef_cast
  {
    static AbstractInterfaceDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_ABSTRACTINTERFACEDEF_CH_)
#define _CORBA_ABSTRACTINTERFACEDEF_CH_
  
  class _TAO_AbstractInterfaceDef_Proxy_Impl;
  class _TAO_AbstractInterfaceDef_Remote_Proxy_Impl;
  class _TAO_AbstractInterfaceDef_Proxy_Broker;
  class _TAO_AbstractInterfaceDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export AbstractInterfaceDef
    : public virtual CORBA::InterfaceDef
  {
  public:
    typedef AbstractInterfaceDef_ptr _ptr_type;
    typedef AbstractInterfaceDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static AbstractInterfaceDef_ptr _duplicate (AbstractInterfaceDef_ptr obj);
    
    static AbstractInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static AbstractInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static AbstractInterfaceDef_ptr _nil (void)
      {
        return (AbstractInterfaceDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_AbstractInterfaceDef_Proxy_Broker *the_TAO_AbstractInterfaceDef_Proxy_Broker_;
  
  protected:
    AbstractInterfaceDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_AbstractInterfaceDef_setup_collocation (int collocated);
    
    AbstractInterfaceDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~AbstractInterfaceDef (void);
    
    friend class _TAO_AbstractInterfaceDef_Remote_Proxy_Impl;
    friend class _TAO_AbstractInterfaceDef_ThruPOA_Proxy_Impl;
    friend class _TAO_AbstractInterfaceDef_Direct_Proxy_Impl;
  
  private:
    AbstractInterfaceDef (const AbstractInterfaceDef &);
    void operator= (const AbstractInterfaceDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_AbstractInterfaceDef_Proxy_Impl
    : public virtual CORBA::_TAO_InterfaceDef_Proxy_Impl
  {
  public:
    virtual ~_TAO_AbstractInterfaceDef_Proxy_Impl (void) {}
  
  protected:
    _TAO_AbstractInterfaceDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_AbstractInterfaceDef_Remote_Proxy_Impl
    : public virtual _TAO_AbstractInterfaceDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_InterfaceDef_Remote_Proxy_Impl
  {
  public:
    _TAO_AbstractInterfaceDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_AbstractInterfaceDef_Remote_Proxy_Impl (void) {}
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_AbstractInterfaceDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_AbstractInterfaceDef_Proxy_Broker (void);
    virtual _TAO_AbstractInterfaceDef_Proxy_Impl &select_proxy (
        AbstractInterfaceDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_AbstractInterfaceDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_AbstractInterfaceDef_Remote_Proxy_Broker
    : public virtual _TAO_AbstractInterfaceDef_Proxy_Broker
  {
  public: 
    _TAO_AbstractInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_AbstractInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_AbstractInterfaceDef_Proxy_Impl &select_proxy (
        AbstractInterfaceDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_AbstractInterfaceDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_AbstractInterfaceDef_Remote_Proxy_Broker *the_TAO_AbstractInterfaceDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AbstractInterfaceDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__ODDS_N_ENDS_CH_
  
  class ExtAbstractInterfaceDef;
  typedef ExtAbstractInterfaceDef *ExtAbstractInterfaceDef_ptr;
  struct tao_ExtAbstractInterfaceDef_life;
  
  typedef
    TAO_Objref_Var_T<
        ExtAbstractInterfaceDef,
        tao_ExtAbstractInterfaceDef_life
      >
    ExtAbstractInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtAbstractInterfaceDef,
        tao_ExtAbstractInterfaceDef_life
      >
    ExtAbstractInterfaceDef_out;
  
  struct TAO_IFR_Client_Export tao_ExtAbstractInterfaceDef_life
  {
    static ExtAbstractInterfaceDef_ptr tao_duplicate (ExtAbstractInterfaceDef_ptr);
    static void tao_release (ExtAbstractInterfaceDef_ptr);
    static ExtAbstractInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ExtAbstractInterfaceDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_ExtAbstractInterfaceDef_cast
  {
    static ExtAbstractInterfaceDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEF_CH_
  
  class _TAO_ExtAbstractInterfaceDef_Proxy_Impl;
  class _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Impl;
  class _TAO_ExtAbstractInterfaceDef_Proxy_Broker;
  class _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export ExtAbstractInterfaceDef
    : public virtual CORBA::AbstractInterfaceDef,
      public virtual CORBA::InterfaceAttrExtension
  {
  public:
    typedef ExtAbstractInterfaceDef_ptr _ptr_type;
    typedef ExtAbstractInterfaceDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ExtAbstractInterfaceDef_ptr _duplicate (ExtAbstractInterfaceDef_ptr obj);
    
    static ExtAbstractInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExtAbstractInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExtAbstractInterfaceDef_ptr _nil (void)
      {
        return (ExtAbstractInterfaceDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_ExtAbstractInterfaceDef_Proxy_Broker *the_TAO_ExtAbstractInterfaceDef_Proxy_Broker_;
  
  protected:
    ExtAbstractInterfaceDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExtAbstractInterfaceDef_setup_collocation (int collocated);
    
    ExtAbstractInterfaceDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~ExtAbstractInterfaceDef (void);
    
    friend class _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Impl;
    friend class _TAO_ExtAbstractInterfaceDef_ThruPOA_Proxy_Impl;
    friend class _TAO_ExtAbstractInterfaceDef_Direct_Proxy_Impl;
  
  private:
    ExtAbstractInterfaceDef (const ExtAbstractInterfaceDef &);
    void operator= (const ExtAbstractInterfaceDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExtAbstractInterfaceDef_Proxy_Impl
    : public virtual CORBA::_TAO_AbstractInterfaceDef_Proxy_Impl, 
      public virtual CORBA::_TAO_InterfaceAttrExtension_Proxy_Impl
  {
  public:
    virtual ~_TAO_ExtAbstractInterfaceDef_Proxy_Impl (void) {}
  
  protected:
    _TAO_ExtAbstractInterfaceDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Impl
    : public virtual _TAO_ExtAbstractInterfaceDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_AbstractInterfaceDef_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_InterfaceAttrExtension_Remote_Proxy_Impl
  {
  public:
    _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_ExtAbstractInterfaceDef_Remote_Proxy_Impl (void) {}
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExtAbstractInterfaceDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_ExtAbstractInterfaceDef_Proxy_Broker (void);
    virtual _TAO_ExtAbstractInterfaceDef_Proxy_Impl &select_proxy (
        ExtAbstractInterfaceDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_ExtAbstractInterfaceDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Broker
    : public virtual _TAO_ExtAbstractInterfaceDef_Proxy_Broker
  {
  public: 
    _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_ExtAbstractInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_ExtAbstractInterfaceDef_Proxy_Impl &select_proxy (
        ExtAbstractInterfaceDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_ExtAbstractInterfaceDef_Remote_Proxy_Broker *the_TAO_ExtAbstractInterfaceDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtAbstractInterfaceDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_LOCALINTERFACEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_LOCALINTERFACEDEF__ODDS_N_ENDS_CH_
  
  class LocalInterfaceDef;
  typedef LocalInterfaceDef *LocalInterfaceDef_ptr;
  struct tao_LocalInterfaceDef_life;
  
  typedef
    TAO_Objref_Var_T<
        LocalInterfaceDef,
        tao_LocalInterfaceDef_life
      >
    LocalInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        LocalInterfaceDef,
        tao_LocalInterfaceDef_life
      >
    LocalInterfaceDef_out;
  
  struct TAO_IFR_Client_Export tao_LocalInterfaceDef_life
  {
    static LocalInterfaceDef_ptr tao_duplicate (LocalInterfaceDef_ptr);
    static void tao_release (LocalInterfaceDef_ptr);
    static LocalInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        LocalInterfaceDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_LocalInterfaceDef_cast
  {
    static LocalInterfaceDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_LOCALINTERFACEDEF_CH_)
#define _CORBA_LOCALINTERFACEDEF_CH_
  
  class _TAO_LocalInterfaceDef_Proxy_Impl;
  class _TAO_LocalInterfaceDef_Remote_Proxy_Impl;
  class _TAO_LocalInterfaceDef_Proxy_Broker;
  class _TAO_LocalInterfaceDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export LocalInterfaceDef
    : public virtual CORBA::InterfaceDef
  {
  public:
    typedef LocalInterfaceDef_ptr _ptr_type;
    typedef LocalInterfaceDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static LocalInterfaceDef_ptr _duplicate (LocalInterfaceDef_ptr obj);
    
    static LocalInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static LocalInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static LocalInterfaceDef_ptr _nil (void)
      {
        return (LocalInterfaceDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_LocalInterfaceDef_Proxy_Broker *the_TAO_LocalInterfaceDef_Proxy_Broker_;
  
  protected:
    LocalInterfaceDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_LocalInterfaceDef_setup_collocation (int collocated);
    
    LocalInterfaceDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~LocalInterfaceDef (void);
    
    friend class _TAO_LocalInterfaceDef_Remote_Proxy_Impl;
    friend class _TAO_LocalInterfaceDef_ThruPOA_Proxy_Impl;
    friend class _TAO_LocalInterfaceDef_Direct_Proxy_Impl;
  
  private:
    LocalInterfaceDef (const LocalInterfaceDef &);
    void operator= (const LocalInterfaceDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_LocalInterfaceDef_Proxy_Impl
    : public virtual CORBA::_TAO_InterfaceDef_Proxy_Impl
  {
  public:
    virtual ~_TAO_LocalInterfaceDef_Proxy_Impl (void) {}
  
  protected:
    _TAO_LocalInterfaceDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_LocalInterfaceDef_Remote_Proxy_Impl
    : public virtual _TAO_LocalInterfaceDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_InterfaceDef_Remote_Proxy_Impl
  {
  public:
    _TAO_LocalInterfaceDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_LocalInterfaceDef_Remote_Proxy_Impl (void) {}
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_LocalInterfaceDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_LocalInterfaceDef_Proxy_Broker (void);
    virtual _TAO_LocalInterfaceDef_Proxy_Impl &select_proxy (
        LocalInterfaceDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_LocalInterfaceDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_LocalInterfaceDef_Remote_Proxy_Broker
    : public virtual _TAO_LocalInterfaceDef_Proxy_Broker
  {
  public: 
    _TAO_LocalInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_LocalInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_LocalInterfaceDef_Proxy_Impl &select_proxy (
        LocalInterfaceDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_LocalInterfaceDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_LocalInterfaceDef_Remote_Proxy_Broker *the_TAO_LocalInterfaceDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_LocalInterfaceDef;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__ODDS_N_ENDS_CH_)
#define _CORBA_EXTLOCALINTERFACEDEF__ODDS_N_ENDS_CH_
  
  class ExtLocalInterfaceDef;
  typedef ExtLocalInterfaceDef *ExtLocalInterfaceDef_ptr;
  struct tao_ExtLocalInterfaceDef_life;
  
  typedef
    TAO_Objref_Var_T<
        ExtLocalInterfaceDef,
        tao_ExtLocalInterfaceDef_life
      >
    ExtLocalInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtLocalInterfaceDef,
        tao_ExtLocalInterfaceDef_life
      >
    ExtLocalInterfaceDef_out;
  
  struct TAO_IFR_Client_Export tao_ExtLocalInterfaceDef_life
  {
    static ExtLocalInterfaceDef_ptr tao_duplicate (ExtLocalInterfaceDef_ptr);
    static void tao_release (ExtLocalInterfaceDef_ptr);
    static ExtLocalInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ExtLocalInterfaceDef_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_IFR_Client_Export tao_ExtLocalInterfaceDef_cast
  {
    static ExtLocalInterfaceDef_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_EXTLOCALINTERFACEDEF_CH_)
#define _CORBA_EXTLOCALINTERFACEDEF_CH_
  
  class _TAO_ExtLocalInterfaceDef_Proxy_Impl;
  class _TAO_ExtLocalInterfaceDef_Remote_Proxy_Impl;
  class _TAO_ExtLocalInterfaceDef_Proxy_Broker;
  class _TAO_ExtLocalInterfaceDef_Remote_Proxy_Broker;
  
  class TAO_IFR_Client_Export ExtLocalInterfaceDef
    : public virtual CORBA::LocalInterfaceDef,
      public virtual CORBA::InterfaceAttrExtension
  {
  public:
    typedef ExtLocalInterfaceDef_ptr _ptr_type;
    typedef ExtLocalInterfaceDef_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ExtLocalInterfaceDef_ptr _duplicate (ExtLocalInterfaceDef_ptr obj);
    
    static ExtLocalInterfaceDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExtLocalInterfaceDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExtLocalInterfaceDef_ptr _nil (void)
      {
        return (ExtLocalInterfaceDef_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    _TAO_ExtLocalInterfaceDef_Proxy_Broker *the_TAO_ExtLocalInterfaceDef_Proxy_Broker_;
  
  protected:
    ExtLocalInterfaceDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_ExtLocalInterfaceDef_setup_collocation (int collocated);
    
    ExtLocalInterfaceDef (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~ExtLocalInterfaceDef (void);
    
    friend class _TAO_ExtLocalInterfaceDef_Remote_Proxy_Impl;
    friend class _TAO_ExtLocalInterfaceDef_ThruPOA_Proxy_Impl;
    friend class _TAO_ExtLocalInterfaceDef_Direct_Proxy_Impl;
  
  private:
    ExtLocalInterfaceDef (const ExtLocalInterfaceDef &);
    void operator= (const ExtLocalInterfaceDef &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExtLocalInterfaceDef_Proxy_Impl
    : public virtual CORBA::_TAO_LocalInterfaceDef_Proxy_Impl, 
      public virtual CORBA::_TAO_InterfaceAttrExtension_Proxy_Impl
  {
  public:
    virtual ~_TAO_ExtLocalInterfaceDef_Proxy_Impl (void) {}
  
  protected:
    _TAO_ExtLocalInterfaceDef_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class TAO_IFR_Client_Export _TAO_ExtLocalInterfaceDef_Remote_Proxy_Impl
    : public virtual _TAO_ExtLocalInterfaceDef_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual CORBA::_TAO_LocalInterfaceDef_Remote_Proxy_Impl,
      public virtual CORBA::_TAO_InterfaceAttrExtension_Remote_Proxy_Impl
  {
  public:
    _TAO_ExtLocalInterfaceDef_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_ExtLocalInterfaceDef_Remote_Proxy_Impl (void) {}
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class TAO_IFR_Client_Export _TAO_ExtLocalInterfaceDef_Proxy_Broker
  {
  public:
    virtual ~_TAO_ExtLocalInterfaceDef_Proxy_Broker (void);
    virtual _TAO_ExtLocalInterfaceDef_Proxy_Impl &select_proxy (
        ExtLocalInterfaceDef *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_ExtLocalInterfaceDef_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class TAO_IFR_Client_Export _TAO_ExtLocalInterfaceDef_Remote_Proxy_Broker
    : public virtual _TAO_ExtLocalInterfaceDef_Proxy_Broker
  {
  public: 
    _TAO_ExtLocalInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_ExtLocalInterfaceDef_Remote_Proxy_Broker (void);
    
    virtual _TAO_ExtLocalInterfaceDef_Proxy_Impl &select_proxy (
        ExtLocalInterfaceDef *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_ExtLocalInterfaceDef_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_ExtLocalInterfaceDef_Remote_Proxy_Broker *the_TAO_ExtLocalInterfaceDef_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtLocalInterfaceDef;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67

}
TAO_NAMESPACE_CLOSE // module CORBA

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/root.cpp:80

extern TAO_IFR_Client_Export
CORBA::_TAO_Repository_Proxy_Broker *
(*CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_ModuleDef_Proxy_Broker *
(*CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_ConstantDef_Proxy_Broker *
(*CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_StructDef_Proxy_Broker *
(*CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_UnionDef_Proxy_Broker *
(*CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_EnumDef_Proxy_Broker *
(*CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_AliasDef_Proxy_Broker *
(*CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_NativeDef_Proxy_Broker *
(*CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_PrimitiveDef_Proxy_Broker *
(*CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_StringDef_Proxy_Broker *
(*CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_WstringDef_Proxy_Broker *
(*CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_SequenceDef_Proxy_Broker *
(*CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_ArrayDef_Proxy_Broker *
(*CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_ExceptionDef_Proxy_Broker *
(*CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_AttributeDef_Proxy_Broker *
(*CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_ExtAttributeDef_Proxy_Broker *
(*CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_OperationDef_Proxy_Broker *
(*CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_InterfaceDef_Proxy_Broker *
(*CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_InterfaceAttrExtension_Proxy_Broker *
(*CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_ExtInterfaceDef_Proxy_Broker *
(*CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_AbstractInterfaceDef_Proxy_Broker *
(*CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_ExtAbstractInterfaceDef_Proxy_Broker *
(*CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_LocalInterfaceDef_Proxy_Broker *
(*CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
CORBA::_TAO_ExtLocalInterfaceDef_Proxy_Broker *
(*CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::FixedDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::FixedDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::FixedDef *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_ch.cpp:51

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveKind);
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::PrimitiveKind &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Repository_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Repository_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Repository_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ModuleDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ModuleDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ModuleDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ModuleDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ModuleDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ModuleDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ModuleDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ConstantDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ConstantDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ConstantDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ConstantDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ConstantDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ConstantDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ConstantDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StructDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StructDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::StructDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::UnionDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::UnionDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::UnionDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::EnumDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::EnumDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::EnumDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AliasDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AliasDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AliasDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::NativeDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::NativeDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::NativeDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::PrimitiveDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StringDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StringDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::StringDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::WstringDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::WstringDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::WstringDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::SequenceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::SequenceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::SequenceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ArrayDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ArrayDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ArrayDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExceptionDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExceptionDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExceptionDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExceptionDefSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_ch.cpp:51

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeMode);
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttributeMode &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttributeDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::AttributeDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttributeDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::AttributeDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtAttributeDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAttributeDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAttributeDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtAttributeDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAttributeDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAttributeDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAttributeDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_ch.cpp:51

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationMode);
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OperationMode &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ParameterDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ParameterDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ParameterDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ParameterDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ParDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ParDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ParDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ParDescriptionSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ContextIdSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ContextIdSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ContextIdSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ContextIdSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OperationDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::OperationDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OperationDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::OperationDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::RepositoryIdSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::RepositoryIdSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::RepositoryIdSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::RepositoryIdSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::OpDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OpDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OpDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::OpDescriptionSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::AttrDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttrDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttrDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::AttrDescriptionSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtAttrDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAttrDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAttrDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtAttrDescriptionSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::InterfaceDef::FullInterfaceDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef::FullInterfaceDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDef::FullInterfaceDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::InterfaceDef::FullInterfaceDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::InterfaceDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::InterfaceDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceAttrExtension_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceAttrExtension_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceAttrExtension_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AbstractInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AbstractInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::LocalInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::LocalInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::LocalInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::FixedDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::FixedDef_ptr &);


// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::PrimitiveKind &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PrimitiveKind &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Repository_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Repository_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ModuleDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ModuleDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ModuleDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ModuleDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ConstantDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ConstantDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ConstantDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ConstantDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StructDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StructDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::UnionDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::UnionDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::EnumDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::EnumDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AliasDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AliasDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::NativeDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::NativeDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::PrimitiveDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PrimitiveDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StringDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StringDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::WstringDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::WstringDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::SequenceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::SequenceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ArrayDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ArrayDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExceptionDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExceptionDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExceptionDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExceptionDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExceptionDefSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeMode &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeMode &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAttributeDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAttributeDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAttributeDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAttributeDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationMode &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationMode &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ParameterDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ParameterDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ParDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ParDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ParDescriptionSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_CORBA_ContextIdSeq_H_
#define _TAO_CDR_OP_CORBA_ContextIdSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ContextIdSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ContextIdSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ContextIdSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_
#define _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::RepositoryIdSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::RepositoryIdSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_RepositoryIdSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::OpDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::OpDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_OpDescriptionSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::AttrDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::AttrDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_AttrDescriptionSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExtAttrDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExtAttrDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef::FullInterfaceDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef::FullInterfaceDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceAttrExtension_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceAttrExtension_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AbstractInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AbstractInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAbstractInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAbstractInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::LocalInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::LocalInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtLocalInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtLocalInterfaceDef_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1018

#if defined (__ACE_INLINE__)
#include "IFR_BasicC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

