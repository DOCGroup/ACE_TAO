Fri Jul  1 17:44:31 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>
  
        * Merged the main trunk of TAO into this branch again.

  Wed Jun 29 12:44:21 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * examples/Advanced/TO-DO:
          * examples/Advanced/ch_21/client.cpp:
          * examples/Quoter/Quoter_i.cpp:
          * examples/Simple/bank/README:
            Cleanup

  Wed Jun 29 11:27:19 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * tests/OBV/Simple/Client_i.h:
          * tests/OBV/Simple/OBV_impl.h:
          * tests/OBV/Simple/Server_i.h:
          * tests/OBV/Simple/Server_i.cpp:
          * tests/OBV/Simple/server.cpp:
            Cleanup

  Wed Jun 29 11:13:02 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * tao/AnyTypeCode/TypeCode_Case_T.h:
          * tao/Basic_Argument_T.h:
          * tao/Invocation_Adapter.h:
          * tao/Bounded_Basic_String_Sequence_T.h:
          * tao/Generic_Sequence_T.h:
            Layout changes

          * tao/Object.cpp:
            Fixed coverity errors

          * tao/Incoming_Message_Stack.h:
            Removed borland workaround

  Wed Jun 29 10:47:05 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * tao/ORB_Core.cpp:
            Fixed coverity errors

  Mon Jun 27 10:28:15 UTC 2011  Martin Corino  <mcorino@remedy.nl>

          * tao/CDR.h:
          * tao/CDR.inl:
            Added CDR streaming ops for std::wstring and helper classes
            and streaming ops to extract bounded strings into std strings.

  Thu Jun 23 12:39:08 CEST 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * etc/*.doxygen:
            Disable html help, seems doxygen now disables the search option
            when html help is enabled

  Thu Jun 23 13:46:08 CEST 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * TAO version 2.0.3 released.

  Wed Jun 22 18:25:21 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

          * tao/AnyTypeCode/Any_Basic_Impl.cpp:
          * tao/AnyTypeCode/Any_Basic_Impl.h:
          * tests/LongDouble/client.cpp:
          * tests/IDL_Test/constants.idl:
          * tests/IDL_Test/union.idl:
          * TAO_IDL/include/ast_expression.h:
          * TAO_IDL/be/be_helper.cpp:
          * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:
          * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
          * TAO_IDL/ast/ast_constant.cpp:
          * TAO_IDL/ast/ast_expression.cpp:
          * NEWS:

            Reverted all changes related to support for long double
            constants in IDL.

  Wed Jun 22 15:15:05 UTC 2011  Phil Mesnier  <mesnier_p@ociweb.com>

          * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:

            Ensure the naming service can use the CSD_TP strategy if necessary.
            Since the naming service is single threaded, it can become a
            bottleneck when there is very heavy use.

            The need for this change may also indicate a problem with the
            CSD strategy implementation. It appears that the thread pool at
            least is only initialized when the POA Manager is activated. If
            A POA is created with using a POA Manager already in the active
            state, the TP is not initialized. Alternatively this might be a
            problem with the POA creation, that create_POA can be supplied a
            POA Manager that is already been activated, and the new POA is
            itself instantly active.

  Wed Jun 22 14:49:09 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * orbsvcs/tests/Security/BiDirectional/run_test.pl:
          * orbsvcs/tests/Security/Big_Request/run_test.pl:
          Added -clog and -slog to write a separate client and server log file
          to disk

  Tue Jun 21 13:07:15 UTC 2011  Olli Savia  <ops@iki.fi>

          * TAO_IDL/util/utl_err.cpp:
          Fixed typo.

  Thu Jun 16 15:30:23 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

          * tests/IDL_Test/constants.idl:

            Guarded out the long double constant set to the double max
            value, for MinGW, which outputs a floating point error
            for this value.

  Thu Jun 16 14:00:53 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

          * tests/LongDouble/client.cpp:

            Replaced '==' with equivalent '<' and '>' expressions for
            a long double, some platoforms warn that '==' shouldn't
            be used with floating point types.

  Thu Jun 16 07:56:54 UTC 2011  Simon Massey  <sma at prismtech dot com>

          * orbsvcs/tests/Security/Big_Request/cacert.pem:
          * orbsvcs/tests/Security/Big_Request/client_cert.pem:
          * orbsvcs/tests/Security/Big_Request/client_key.pem:
          * orbsvcs/tests/Security/Big_Request/server_cert.pem:
          * orbsvcs/tests/Security/Big_Request/server_key.pem:

            Updated certificates - Missed one.

  Wed Jun 15 14:36:54 UTC 2011  William R. Otte  <wotte@dre.vanderbilt.edu>

          * orbsvcs/tests/Security/Bug_1107_Regression/cacert.pem:
          * orbsvcs/tests/Security/Bug_1107_Regression/client_cert.pem:
          * orbsvcs/tests/Security/Bug_1107_Regression/client_key.pem:
          * orbsvcs/tests/Security/Bug_1107_Regression/server_cert.pem:
          * orbsvcs/tests/Security/Bug_1107_Regression/server_key.pem:
          * orbsvcs/tests/Security/Callback/cacert.pem:
          * orbsvcs/tests/Security/Callback/client_cert.pem:
          * orbsvcs/tests/Security/Callback/client_key.pem:
          * orbsvcs/tests/Security/Callback/server_cert.pem:
          * orbsvcs/tests/Security/Callback/server_key.pem:
          * orbsvcs/tests/Security/Crash_Test/cacert.pem:
          * orbsvcs/tests/Security/Crash_Test/client_cert.pem:
          * orbsvcs/tests/Security/Crash_Test/client_key.pem:
          * orbsvcs/tests/Security/Crash_Test/server_cert.pem:
          * orbsvcs/tests/Security/Crash_Test/server_key.pem:
          * orbsvcs/tests/Security/Null_Cipher/cacert.pem:
          * orbsvcs/tests/Security/Null_Cipher/client_cert.pem:
          * orbsvcs/tests/Security/Null_Cipher/client_key.pem:
          * orbsvcs/tests/Security/Null_Cipher/server_cert.pem:
          * orbsvcs/tests/Security/Null_Cipher/server_key.pem:
          * orbsvcs/tests/Security/Secure_Invocation/cacert.pem:
          * orbsvcs/tests/Security/Secure_Invocation/client_cert.pem:
          * orbsvcs/tests/Security/Secure_Invocation/client_key.pem:
          * orbsvcs/tests/Security/Secure_Invocation/server_cert.pem:
          * orbsvcs/tests/Security/Secure_Invocation/server_key.pem:
          * orbsvcs/tests/Security/mixed_security_test/cacert.pem:
          * orbsvcs/tests/Security/mixed_security_test/client_cert.pem:
          * orbsvcs/tests/Security/mixed_security_test/client_key.pem:
          * orbsvcs/tests/Security/mixed_security_test/server_cert.pem:
          * orbsvcs/tests/Security/mixed_security_test/server_key.pem:

            Updated certificates.

          * orbsvcs/tests/Security/cert:
          * orbsvcs/tests/Security/cert/DOCCA:
          * orbsvcs/tests/Security/cert/DOCCA/cacert.pem:
          * orbsvcs/tests/Security/cert/DOCCA/certs:
          * orbsvcs/tests/Security/cert/DOCCA/index.txt:
          * orbsvcs/tests/Security/cert/DOCCA/index.txt.attr:
          * orbsvcs/tests/Security/cert/DOCCA/index.txt.attr.old:
          * orbsvcs/tests/Security/cert/DOCCA/index.txt.old:
          * orbsvcs/tests/Security/cert/DOCCA/newcerts:
          * orbsvcs/tests/Security/cert/DOCCA/newcerts/1000.pem:
          * orbsvcs/tests/Security/cert/DOCCA/newcerts/1001.pem:
          * orbsvcs/tests/Security/cert/DOCCA/private:
          * orbsvcs/tests/Security/cert/DOCCA/private/cakey.pem:
          * orbsvcs/tests/Security/cert/DOCCA/serial:
          * orbsvcs/tests/Security/cert/DOCCA/serial.old:
          * orbsvcs/tests/Security/cert/README:
          * orbsvcs/tests/Security/cert/cacert.pem:
          * orbsvcs/tests/Security/cert/client_cert.pem:
          * orbsvcs/tests/Security/cert/client_key.pem:
          * orbsvcs/tests/Security/cert/openssl.cnf:
          * orbsvcs/tests/Security/cert/server_cert.pem:
          * orbsvcs/tests/Security/cert/server_key.pem:

            Added the full CA information used to sign the above certs.  These certs
            are good for the next 20 years.

          * orbsvcs/tests/Security/Secure_Invocation/client_key_nopasswd.pem:
          * orbsvcs/tests/Security/Secure_Invocation/server_key_nopasswd.pem:
          * orbsvcs/tests/Security/mixed_security_test/client_key_nopasswd.pem:
          * orbsvcs/tests/Security/mixed_security_test/server_key_nopasswd.pem:

            Removed these files.

  Wed Jun 15 08:54:50 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * TAO_IDL/be/be_visitor_operation/operation_ch.cpp:
            Reverted 3971 change, broke some CCM tests

  Tue Jun 14 13:12:05 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

          * TAO_IDL/be/be_valuetype.cpp:
          * TAO_IDL/be/be_valuetype.h:
          * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
          * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp:

            Added code generation for AMH exception holder's default
            constructor to initialize the CORBA::Exception* member
            to 0. This fix closes [BUGID:3970].

  Tue Jun 14 12:18:00 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

          * TAO_IDL/be/be_visitor_operation/operation_ch.cpp:
            Only the methods for operations in local interfaces need to be
            virtual. This reduces footprint and improves performance, this
            fixes bugzilla 3971

Mon Jun 13 18:00:05 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * Merged main trunk into this branch, resolved all conflicts.
        * Merged ChangeLog from main trunk.

          Fri Jun 10 19:08:19 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/be/be_helper.cpp:

                    Used the recently added ACE_LONG_DOUBLE_FORMAT_SPECIFIER_ASCII
                    to generate long double literals portably.

          Fri Jun 10 12:41:00 UTC 2011  Simon Massey <sma at prismtech dot com>

                  * tests/MT_NoUpcall_Client_Leader/run_test.pl:

                    This test wasn't capable of exiting with an error, it was
                    always successful even if the test failed.

                  * tests/MT_NoUpcall_Client_Leader/client.cpp:
                  * tests/MT_NoUpcall_Client_Leader/server.cpp:

                    The mutex needed to be locked prior to worker thread creation
                    and the stop_condition.wait condition, then released after,
                    otherwise worker threads can signal prior to the server/client
                    being ready to deal with the event. Client needed to
                    pause before the issuing the shutdown request to the server
                    so as to allow it to finish its own worker thread.

                  * tests/MT_NoUpcall_Client_Leader/police.cpp:

                    The stat test in the loop was occationally detecting the creation
                    of the ior file before the contents had been written. Moving
                    the sleep after the stat and before the test allows the contents to
                    be output before allowing the client/server to use the ior it
                    has just detected.

                  * tests/MT_NoUpcall_Client_Leader/chatter.cpp:
                  * tests/MT_NoUpcall_Client_Leader/chatter.h:

                    Need to mutex control access to the two nrequests_ and nreplies_
                    counts, as the client has two concurrent worker threads competing
                    to update them, these counts also need to be volitile.

          Thu Jun  9 19:38:48 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/be/be_helper.cpp:

                    Changed print format of long double literal to be conditional,
                    based on the existence of a native 16-byte long double, in
                    order to eliminate warnings of rhs and lhs type mismatch.

          Thu Jun  9 17:28:25 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
                  * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:

                    Changed generated code to always use a constructor with an
                    ACE_CDR::LongDoubleAssign argument for long double constants.

          Thu Jun  9 07:05:59 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * orbsvcs/examples/FaultTolerance/RolyPoly/client.cpp:
                  * orbsvcs/tests/Bug_2709_Regression/Client_Task.cpp:
                    Fixed gcc 4.6 warnings

          Thu Jun  9 01:09:40 UTC 2011  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

                  * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp (TAO_Notify_ThreadPool_Task::execute):
                    Fixed a memory leak that occurred when the enqueue() failed.
                    Thanks to Jochen Meier <gesammeltimusenet2009 at arcor dot de> for
                    reporting this and suggesting a fix.

          Mon Jun  6 19:53:54 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * tao/AnyTypeCode/Any_Basic_Impl.cpp:
                  * tao/AnyTypeCode/Any_Basic_Impl.h:

                    Restored the long double member back to the member union of
                    Any_Basic_Impl. A change suggested by Adam Mitz <mitza at
                    ociweb dot com> enabled the use of the LongDouble emulator
                    struct without constructors or assignment operators.

                  * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
                  * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:

                    Changed code generation for long double constant initialization,
                    when 16-byte native long double does not exist, to use the
                    new LongDoubleAssign struct in ACE_CDR.

                  * tests/IDL_Test/union.idl:

                    Added a test case of a union containing a long double, to
                    test that the generated union doesn't contain a member
                    with a constructor.

          Mon Jun  6 18:59:41 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/be/be_helper.cpp:

                    Restored minimum significant digit suggestions for the format
                    string for double, and added them to the format string for
                    long double.

          Mon Jun  6 17:28:05 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * tao/AnyTypeCode/Any_Basic_Impl.cpp:
                  * tao/AnyTypeCode/Any_Basic_Impl.h:

                    Added a separate member for long doubles, rather than have
                    support for long doubles on all platforms disabled because
                    the struct that is now used for some long double representations
                    has a constructor.

                  * tests/DynAny_Test/test_dynany.cpp:

                    Reverted the change in

                    Fri Jun  3 18:54:59 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                    since that part of the test will work again.

          Mon Jun  6 15:06:42 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * TAO_IDL/be/be_codegen.cpp:
                  * TAO_IDL/be/be_global.cpp:
                  * TAO_IDL/be/be_visitor_connector/connector_dds_exh.cpp:
                  * TAO_IDL/be_include/be_global.h:
                  * TAO_IDL/fe/lex.yy.cpp:
                  * TAO_IDL/include/idl_global.h:
                  * TAO_IDL/util/utl_global.cpp:
                    Extended DDS support

          Fri Jun  3 18:54:59 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * tao/AnyTypeCode/Any_Basic_Impl.cpp:
                  * tao/AnyTypeCode/Any_Basic_Impl.h:

                    On platforms where native long doubles aren't 16 bytes,
                    eliminated case where an Any contains a CORBA::LongDouble.
                    The class contains a C++ union, which can't contain a
                    non-native LongDouble ( a struct) since it now has a constructor.
                    A fair tradeoff since in return for the recent changes to
                    ACE_CDR::LongDouble, we now have support for IDL constants
                    of type CORBA::LongDouble on all platforms.

                  * tests/DynAny_Test/test_dynany.cpp:

                    Similarly to the above item, eliminated the test for long
                    double on platforms where a non-native struct alternative
                    is used.

          Thu Jun  2 12:24:59 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/be/be_helper.cpp:

                    - Fixed print format for long double, eliminated warnings.
                    - Added '#' flag to all floating point print formats, forces
                      printing of decimal point even if not present in IDL.

          Wed Jun  1 19:39:08 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/include/AST_Expression.h:
                  * TAO_IDL/ast/AST_Expression.cpp
                  * TAO_IDL/ast/AST_Constant.cpp
                  * TAO_IDL/be/be_helper.cpp:
                  * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
                  * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:

                    Added support for long double constants in IDL.

                  * tests/IDL_Test/constants.idl:

                    Added test cases for long double constants.

                  * NEWS:

                    Added item about long double constant support.

          Wed Jun  1 09:46:54 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * orbsvcs/tests/AVStreams/Multicast_Full_Profile/ftp.cpp:
                  * orbsvcs/tests/Log/Basic_Log_Test/client.cpp:
                  * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp:
                  * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:
                    Fixed Coverity warnings regarding uncaught exceptions.

          Tue May 31 05:47:19 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * tests/Sequence_Unit_Tests/string_sequence_tester.hpp:
                    Fixed gcc 4.6 warnings: variable was set but not used.

          Mon May 30 10:21:08 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * examples/Logging/Logger_i.cpp:
                    Resolved gcc 4.6 warning: variable may be used uninitialized
                    in this function

          Mon May 30 10:00:33 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * orbsvcs/LoadBalancer/LoadMonitor.cpp:
                    Fixed compiler error on Windows.

          Mon May 30 06:39:12 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * tests/Sequence_Unit_Tests/string_sequence_tester.hpp:
                  * tests/Smart_Proxies/Benchmark/client.cpp:
                    Resolved gcc 4.6 warnings: variable was set but not used.

          Fri May 27 14:35:57 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * tests/Bug_2936_Regression/bug2936.cpp:
                  * tests/Bug_3926_Regression/Client_Request_Interceptor.cpp:
                  * tests/Exposed_Policies/RT_Properties.cpp:
                  * tests/IOR_Endpoint_Hostnames/list_interfaces.cpp:
                    Resolved gcc 4.6 warnings: variable was set but not used.

                  * tests/POA/Bug_2511_Regression/server.cpp:
                    Resolved gcc 4.6 warnings: variable was set but not used.
                    Code alignment.

          Fri May 27 14:13:08 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * performance-tests/POA/Demux/demux_test_server.cpp:
                  * tests/Bug_2677_Regression/DllORB.cpp:
                  * tests/Bug_2683_Regression/server.cpp:
                    Resolved gcc 4.6 warnings: variable was set but not used.

          Fri May 27 13:52:37 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * TAO_IDL/be/be_visitor_union/union_ch.cpp:
                    Removed generation of holder_ member of an union, it is not used
                    at all

          Fri May 27 10:09:25 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
                  * orbsvcs/tests/IOR_MCast/client.cpp:
                  * orbsvcs/tests/Security/Bug_1107_Regression/client.cpp:
                    Statisfy Coverity and the GNU 4.6 gcc compiler. Using a
                    returned value either by using ACE_UNUSED_ARG or to print
                    in a log message.

                  * tests/Sequence_Unit_Tests/value_sequence_tester.hpp:
                    Fuzz.

          Fri May 27 09:14:29 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * orbsvcs/LoadBalancer/LoadMonitor.cpp:
                  * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
                  * orbsvcs/tests/Bug_3486_Regression/server.cpp:
                  * orbsvcs/tests/IOR_MCast/client.cpp:
                  * orbsvcs/tests/Notify/Bug_2926_Regression/server.cpp:
                  * orbsvcs/tests/Notify/Bug_3646b_Regression/server.cpp:
                  * orbsvcs/tests/Notify/Bug_3646c_Regression/server.cpp:
                  * orbsvcs/tests/Notify/Bug_3646d_Regression/server.cpp:
                  * orbsvcs/tests/Notify/Bug_3663_Regression/server.cpp:
                  * orbsvcs/tests/Notify/Bug_3688b_Regression/server.cpp:
                  * orbsvcs/tests/Security/Bug_1107_Regression/client.cpp:
                    Resolved gcc 4.6 warnings: variable was set but not used.

          Thu May 26 15:25:36 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * TAO_IDL/fe/fe_utils.cpp:
                    tmp variable wasn't necessary. Removed it.

          Thu May 26 14:13:05 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
                  * TAO_IDL/fe/fe_utils.cpp:
                  * tao/Strategies/COIOP_Acceptor.cpp:
                    Resolved gcc 4.6 warnings: variable was set but not used.

          Thu May 26 13:48:29 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * tests/Sequence_Unit_Tests/Bounded_Simple_Types.cpp:
                  * tests/Sequence_Unit_Tests/Bounded_String.cpp:
                  * tests/Sequence_Unit_Tests/Unbounded_Octet.cpp:
                  * tests/Sequence_Unit_Tests/Unbounded_Simple_Types.cpp:
                  * tests/Sequence_Unit_Tests/Unbounded_String.cpp:
                    Catch uncaught exceptions in main.

          Thu May 26 13:11:19 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * tao/Generic_Sequence_T.h:
                    Added file name to doxygen documentation

                  * tests/Sequence_Unit_Tests/value_sequence_tester.hpp:
                    Resolved Coverity warning: catching a uncaught BAD_PARAM exception.

          Fri May 20 22:07:56 UTC 2011  Adam Mitz  <mitza@ociweb.com>

                  * tao/AnyTypeCode/TAO_AnyTypeCode.rc:
                  * tao/Codeset/TAO_Codeset.rc:
                  * tao/PI/TAO_PI.rc:
                  * tao/PI_Server/TAO_PI_Server.rc:
                  * tao/Utils/TAO_Utils.rc:
                  * tao/ZIOP/TAO_ZIOP.rc:

                    Add resource files to get TAO version number on DLLs.

          Fri May 20 14:20:53 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tests/Oneway_Timeouts/test.mpc:
                    Added explicit idl project to get correct build order on VMS

          Thu May 19 14:53:55 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

                  * tests/QtTests/client.cpp:
                  * tests/QtTests/client.h:
                  * tests/QtTests/QtTests.mpc:
                  * tests/QtTests/server.cpp:
                  * tests/QtTests/test_i.h:
                  Adapted to qt4.

          Tue May 17 19:20:55 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tests/OBV/Indirection/MessengerServer.cpp:
                  * tests/Portable_Interceptors/Slot/driver.cpp:
                    Catch exceptions in main

          Tue May 17 11:32:18 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
                  * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
                    Layout changes to the generated code

          Fri May 13 08:04:48 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * tao/Bounded_Basic_String_Sequence_T.h:
                  * tao/Bounded_Object_Reference_Sequence_T.h:
                  * tao/Bounded_Value_Sequence_T.h:
                  * tao/Unbounded_Basic_String_Sequence_T.h:
                  * tao/Unbounded_Object_Reference_Sequence_T.h:
                    Doxygen changes.

          Wed May 11 18:43:15 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/ObjectKey_Table.h:
                  * tao/orbconf.h:
                  * tao/params.h:
                    Doxygen changes

          Wed May 11 13:35:28 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

                  * tao/QtResource/QtResource_Loader.h:
                  Changed for QT4 deprecated include QT/..

          Tue May 10 18:15:28 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/ImR_Client/ImR_Client.cpp:
                    changed variable name to not match method argument

                  * utils/catior/catior.cpp:
                  * utils/nslist/nsadd.cpp:
                  * utils/nslist/nsdel.cpp:
                  * utils/nslist/nslist.cpp:
                    Fixed coverity errors, not leak exceptions

          Tue May 10 06:15:43 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * tao/IORManipulation/IORManip_IIOP_Filter.cpp:
                    Fixed compile error.

          Mon May  9 19:10:54 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * TAO_IDL/be/be_interface.cpp:
                  * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
                  * tao/IORManipulation/IORManip_IIOP_Filter.cpp:
                    Fixed coverity errors

          Wed Apr 27 13:35:10 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * TAO.mwc:
                    Exclude DAnCE, thanks to Remko Duppen <remko dot duppen at syntel dot nl>
                    for reporting this

          Tue Apr 26 13:12:03 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
                  * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
                    Layout changes generated code

          Tue Apr 26 13:04:11 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/Collocation_Resolver.h:
                  * tao/Connect_Strategy.h:
                  * tao/Endpoint_Selector_Factory.h:
                  * tao/GIOP_Message_Base.h:
                  * tao/GIOP_Message_Generator_Parser.h:
                  * tao/GIOP_Message_Generator_Parser_10.h:
                  * tao/GIOP_Message_Generator_Parser_11.h:
                  * tao/GIOP_Message_Generator_Parser_Impl.h:
                  * tao/GIOP_Message_State.h:
                  * tao/GIOP_Utils.h:
                  * tao/GUIResource_Factory.h:
                  * tao/LF_Connect_Strategy.h:
                  * tao/LF_Follower.cpp:
                    Doxygen changes

          Tue Apr 26 12:50:24 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/ORB_Core.cpp:
                  * tao/Thread_Lane_Resources.h:
                  * tao/Thread_Lane_Resources_Manager.h:
                  * tao/Thread_Per_Connection_Handler.h:
                  * tao/Transport.h:
                  * tao/Transport_Connector.h:
                  * tao/TypeCodeFactory_Adapter.h:
                    Doxygen changes

          Tue Apr 26 12:21:05 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/Acceptor_Impl.h:
                  * tao/Acceptor_Impl.cpp:
                  * tao/Acceptor_Registry.h:
                  * tao/Adapter_Registry.h:
                  * tao/Bind_Dispatcher_Guard.h:
                  * tao/Blocked_Connect_Strategy.h:
                  * tao/Blocked_Connect_Strategy.cpp:
                  * tao/Cleanup_Func_Registry.h:
                  * tao/Collocated_Invocation.cpp:
                  * tao/LF_Event_Loop_Thread_Helper.inl:
                  * tao/LF_Follower_Auto_Adder.inl:
                  * tao/Leader_Follower.cpp:
                  * tao/Queued_Message.h:
                  * tao/Transport_Cache_Manager_T.cpp:
                  * tao/Wait_On_LF_No_Upcall.h:
                  * tao/Wait_On_LF_No_Upcall.cpp:
                  * tao/Wait_On_Reactor.h:
                  * tao/Wait_On_Read.h:
                    Doxygen changes

          Tue Apr 26 11:57:42 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/Leader_Follower.h:
                  * tao/Leader_Follower.inl:
                  * tao/Wait_On_LF_No_Upcall.h:
                  * tao/Wait_On_Leader_Follower.h:
                  * tao/Wait_On_Reactor.h:
                  * tao/Wait_On_Read.h:
                  * tao/Wait_Strategy.h:
                    Use explicit for single argument constructors, doxygen improvements

          Tue Apr 26 11:13:59 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tests/MT_NoUpcall_Client_Leader/client.cpp:
                  * tests/MT_NoUpcall_Client_Leader/run_test.pl:
                  * tests/MT_NoUpcall_Client_Leader/server.cpp:
                    Make it possible to pass number of threads through the commandline

          Tue Apr 26 09:42:36 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/Leader_Follower.h:
                  * tao/Leader_Follower.inl:
                    Use bool instead of int for several methods

                  * tao/Thread_Lane_Resources.cpp:
                    Simplied some code

          Tue Apr 26 09:26:48 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * bin/tao_orb_tests.lst:
                    MT_NoUpcall_Client_Leader shouldn't run when there is no messaging

          Tue Apr 26 09:00:31 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * bin/tao_orb_tests.lst:
                    Disabled some tests with CORBA/e micro

                  * tao/Connection_Handler.cpp:
                  * tao/Resume_Handle_Deferred.h:
                  * tao/Resume_Handle_Deferred.cpp:
                    Use reference counting for deletion, also log an error and return -1
                    when schedule_timer fails, we have a critical error at that moment

                  * tao/Policy_Validator.cpp:
                  * tao/TAO_Singleton.cpp:
                  * tao/Leader_Follower.cpp:
                    Use %@ for logging pointers

          Fri Apr 22 12:41:53 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * orbsvcs/tests/Bug_3418_Regression/b.conf:
                  * orbsvcs/tests/HTIOP/HT_Config.conf:
                  * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/windows.conf:
                  * orbsvcs/tests/LoadBalancing/GenericFactory/DeadMemberDetection_App_Ctrl/non-windows.conf:
                  * orbsvcs/tests/LoadBalancing/GenericFactory/DeadMemberDetection_App_Ctrl/windows.conf:
                  * orbsvcs/tests/LoadBalancing/GenericFactory/DeadMemberDetection_Inf_Ctrl/non-windows.conf:
                  * orbsvcs/tests/LoadBalancing/GenericFactory/DeadMemberDetection_Inf_Ctrl/windows.conf:
                  * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/windows.conf:
                  * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/windows.conf:
                  * orbsvcs/tests/Notify/Lanes/consumer.conf:
                  * orbsvcs/tests/Notify/Lanes/notify.conf:
                  * performance-tests/Protocols/lksctp_params.conf:
                  * performance-tests/Protocols/sctp_params.conf:
                  * performance-tests/RTCorba/Thread_Pool/native-svc.conf:
                  * tests/Bug_3068_Regression/server.conf:
                  * tests/ORB_Local_Config/Bug_1459/m.conf:
                  * tests/ORB_Local_Config/Two_DLL_ORB/secondary-empty.conf:
                  * tests/RTCORBA/Explicit_Binding/svc.conf:
                    Fuzz: added $Id string

          Fri Apr 22 12:14:18 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/Connection_Handler.cpp:
                  * tao/Resume_Handle_Deferred.h:
                  * tao/Resume_Handle_Deferred.cpp:
                    Notify a specific event handler

                  * tao/Resume_Handle_Deferred.inl:
                    Removed this file, virtual methods may not be inline

          Fri Apr 22 11:56:20 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/Resume_Handle_Deferred.h:
                  * tao/Resume_Handle_Deferred.inl:
                  * tao/Resume_Handle_Deferred.cpp:
                    We should only trigger the reactor

                  * tao/Transport.cpp:
                    Doxygen changes

          Fri Apr 22 07:28:43 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                  * DevGuideExamples/Multithreading/Reactive/svc.conf:
                  * DevGuideExamples/Multithreading/ThreadPerConnection/server.conf:
                  * DevGuideExamples/RTCORBA/svc.conf:
                  * docs/tutorials/Quoter/Event_Service/ec.conf:
                  * examples/PluggableUDP/tests/Performance/svc.conf:
                  * examples/PluggableUDP/tests/SimplePerformance/svc.conf:
                  * examples/RTCORBA/Activity/client.conf:
                  * examples/RTCORBA/Activity/server.conf:
                  * examples/RTCORBA/Activity/svc.conf.client:
                  * examples/RTCORBA/Activity/svc.conf.server:
                  * examples/RTScheduling/Fixed_Priority_Scheduler/svc.conf.client:
                  * examples/RTScheduling/Fixed_Priority_Scheduler/svc.conf.server:
                  * examples/RTScheduling/MIF_Scheduler/svc.conf.client:
                  * examples/RTScheduling/MIF_Scheduler/svc.conf.server:
                  * orbsvcs/Concurrency_Service/svc.conf:
                  * orbsvcs/DevGuideExamples/EventServices/RTEC_Federated/supplier.conf:
                  * orbsvcs/DevGuideExamples/EventServices/RTEC_Filter/ec.conf:
                  * orbsvcs/DevGuideExamples/EventServices/RTEC_MCast_Federated/supplier.conf:
                  * orbsvcs/DevGuideExamples/NotifyService/RTNotify/notify.conf:
                  * orbsvcs/DevGuideExamples/NotifyService/RTNotify/nsclient.conf:
                  * orbsvcs/DevGuideExamples/ValueTypes/Notify/notify.conf:
                  * orbsvcs/Event_Service/svc.conf:
                  * orbsvcs/Logging_Service/Notify_Logging_Service/svc.conf:
                  * orbsvcs/TAO_Service/svc.conf:
                  * orbsvcs/examples/ImR/Combined_Service/dynserver.conf:
                  * orbsvcs/examples/ImR/Combined_Service/start_all.conf:
                  * orbsvcs/examples/Notify/Lanes/client.conf:
                  * orbsvcs/examples/Notify/Lanes/notify.conf:
                  * orbsvcs/examples/Notify/ThreadPool/client.conf:
                  * orbsvcs/examples/Notify/ThreadPool/notify.conf:
                  * orbsvcs/examples/RtEC/IIOPGateway/ec.conf:
                  * orbsvcs/examples/RtEC/IIOPGateway/gateway.conf:
                  * orbsvcs/examples/RtEC/Kokyu/svc.conf:
                  * orbsvcs/examples/RtEC/MCast/svc.conf:
                  * orbsvcs/examples/RtEC/Schedule/svc.conf:
                  * orbsvcs/examples/RtEC/Simple/ec.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.dispatching_reactive.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.dispatching_rtcorba.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.dispatching_threaded.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.filter_null.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.filter_per_supplier.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.locking_copy_on_read.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.locking_copy_on_write.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.locking_delayed.conf:
                  * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/ec.locking_immediate.conf:
                  * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/roundtrip.conf:
                  * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/realtime.conf:
                  * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/realtime.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.dispatching_reactive.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.dispatching_rtcorba.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.dispatching_threaded.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.locking_copy_on_read.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.locking_copy_on_write.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.locking_delayed.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.locking_immediate.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.supplier_filter_null.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/ec.supplier_filter_per_supplier.conf:
                  * orbsvcs/performance-tests/RTEvent/Roundtrip/roundtrip.conf:
                  * orbsvcs/tests/AVStreams/Component_Switching/components_svc.conf:
                  * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/svc.conf:
                  * orbsvcs/tests/Bug_2316_Regression/svc.conf:
                  * orbsvcs/tests/Bug_2377_Regression/svc.conf:
                  * orbsvcs/tests/Bug_2925_Regression/svc.conf:
                  * orbsvcs/tests/Bug_3387_Regression/NotSvc.conf:
                  * orbsvcs/tests/Bug_3418_Regression/m.conf:
                  * orbsvcs/tests/Bug_3444_Regression/diop_svc.conf:
                  * orbsvcs/tests/Bug_3444_Regression/miop_svc.conf:
                  * orbsvcs/tests/CosEvent/Basic/svc.pull.conf:
                  * orbsvcs/tests/CosEvent/Timeout/cosevent.conf:
                  * orbsvcs/tests/EC_MT_Mcast/svc.conf:
                  * orbsvcs/tests/EC_Mcast/svc.conf:
                  * orbsvcs/tests/EC_Throughput/ec.conf:
                  * orbsvcs/tests/Event/Basic/control.conf:
                  * orbsvcs/tests/Event/Basic/mt.svc.conf:
                  * orbsvcs/tests/Event/Basic/observer.conf:
                  * orbsvcs/tests/Event/Basic/svc.complex.conf:
                  * orbsvcs/tests/Event/Basic/svc.conf:
                  * orbsvcs/tests/Event/Mcast/Complex/consumer-ec.conf:
                  * orbsvcs/tests/Event/Mcast/Complex/supplier-ec.conf:
                  * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/supplier.conf:
                  * orbsvcs/tests/Event/Mcast/Two_Way/gateway.conf:
                  * orbsvcs/tests/Event/Performance/ec.list.conf:
                  * orbsvcs/tests/Event/Performance/ec.mt.conf:
                  * orbsvcs/tests/Event/Performance/ec.rb_tree.conf:
                  * orbsvcs/tests/Event/Performance/ec.st.conf:
                  * orbsvcs/tests/Event/Performance/latency.conf:
                  * orbsvcs/tests/Event/UDP/svc.conf:
                  * orbsvcs/tests/HTIOP/AMI/exclusive.conf:
                  * orbsvcs/tests/HTIOP/AMI/muxed.conf:
                  * orbsvcs/tests/ImplRepo/scale/client.conf:
                  * orbsvcs/tests/InterfaceRepo/Persistence_Test/svc.conf:
                  * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/svc.conf:
                  * orbsvcs/tests/Miop/McastHello/svc.conf:
                  * orbsvcs/tests/Notify/Basic/notify.mt.conf:
                  * orbsvcs/tests/Notify/Basic/notify.reactive.conf:
                  * orbsvcs/tests/Notify/Basic/notify.rt.conf:
                  * orbsvcs/tests/Notify/Blocking/notify.conf:
                  * orbsvcs/tests/Notify/Bug_1385_Regression/notify.conf:
                  * orbsvcs/tests/Notify/Bug_1884_Regression/ecf.conf:
                  * orbsvcs/tests/Notify/Lanes/consumer.conf:
                  * orbsvcs/tests/Notify/Persistent_Filter/NS.conf:
                  * orbsvcs/tests/Notify/PluggableTopology/plugtop_ns.conf:
                  * orbsvcs/tests/Notify/Reconnecting/event.conf:
                  * orbsvcs/tests/Notify/Reconnecting/ns_mt.conf:
                  * orbsvcs/tests/Notify/Reconnecting/ns_mt_both.conf:
                  * orbsvcs/tests/Notify/Reconnecting/ns_mt_topo.conf:
                  * orbsvcs/tests/Notify/Reconnecting/ns_st.conf:
                  * orbsvcs/tests/Notify/Reconnecting/ns_st_both.conf:
                  * orbsvcs/tests/Notify/Reconnecting/ns_st_topo.conf:
                  * orbsvcs/tests/Notify/ThreadPool/consumer.conf:
                  * orbsvcs/tests/Notify/ThreadPool/notify.conf:
                  * orbsvcs/tests/Notify/ThreadPool/supplier.conf:
                  * orbsvcs/tests/Notify/Validate_Client/notify.conf:
                  * orbsvcs/tests/Notify/XML_Persistence/svc.conf:
                  * orbsvcs/tests/Notify/performance-tests/RedGreen/listener.conf:
                  * orbsvcs/tests/Notify/performance-tests/RedGreen/lookup.conf:
                  * orbsvcs/tests/Notify/performance-tests/RedGreen/svc.conf:
                  * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/cos_notify.conf:
                  * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/rt_notify.conf:
                  * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/cos_notify.conf:
                  * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/rt_notify.conf:
                  * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/notify.conf:
                  * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify_RTCORBA/notify.conf:
                  * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/cos_notify.conf:
                  * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/rt_notify.conf:
                  * orbsvcs/tests/Security/BiDirectional/client.conf:
                  * orbsvcs/tests/Security/BiDirectional/server.conf:
                  * orbsvcs/tests/Security/Bug_2908_Regression/client.conf:
                  * orbsvcs/tests/Security/Bug_2908_Regression/server.conf:
                  * orbsvcs/tests/Security/EndpointPolicy/svc.conf:
                  * orbsvcs/tests/Security/InsecureReferences/client.conf:
                  * orbsvcs/tests/Security/MT_IIOP_SSL/client.conf:
                  * orbsvcs/tests/Security/MT_IIOP_SSL/server.conf:
                  * orbsvcs/tests/Security/MT_SSLIOP/client.conf:
                  * orbsvcs/tests/Security/MT_SSLIOP/server.conf:
                  * orbsvcs/tests/Security/ssliop_CSD/csd.conf:
                  * orbsvcs/tests/Security/ssliop_corbaloc/client.conf:
                  * orbsvcs/tests/Security/ssliop_corbaloc/server.conf:
                  * orbsvcs/tests/unit/Notify/MC/MonitorManager/svc.conf:
                  * performance-tests/Protocols/altq.conf:
                  * performance-tests/Protocols/svc.conf:
                  * performance-tests/RTCorba/Thread_Pool/svc.conf:
                  * tests/AMI/muxed.conf:
                  * tests/AMI_Timeouts/svc.conf:
                  * tests/Bug_2186_Regression/server.conf:
                  * tests/Bug_2935_Regression/middle.conf:
                  * tests/Bug_3000_Regression/rw.conf:
                  * tests/Bug_3068_Regression/client.conf:
                  * tests/Bug_3163_Regression/server.conf:
                  * tests/Bug_3251_Regression/Bug_3251.conf:
                  * tests/Bug_3598a_Regression/svc.conf:
                  * tests/Bug_3630_Regression/TAO Conf File.conf:
                  * tests/Bug_3630_Regression/TAO_Conf_File.conf:
                  * tests/Bug_3683_Regression/svc.conf:
                  * tests/Bug_3801_Regression/exclusive.conf:
                  * tests/Bug_3801_Regression/muxed.conf:
                  * tests/Bug_3837_Regression/logger.conf:
                  * tests/CSD_Strategy_Tests/TP_Test_Dynamic/svc.conf:
                  * tests/CSD_Strategy_Tests/TP_Test_Static/svc.conf:
                  * tests/CodeSets/simple/cs_test.conf:
                  * tests/CodeSets/simple/svc.conf:
                  * tests/CodeSets/simple/wcs_test.conf:
                  * tests/Collocation_Opportunities/svc.conf:
                  * tests/Exposed_Policies/svc.conf:
                  * tests/Leader_Followers/select_mt.conf:
                  * tests/Leader_Followers/tp.conf:
                  * tests/ORB_Local_Config/Bug_1459/a.conf:
                  * tests/ORB_Local_Config/Bug_1459/b.conf:
                  * tests/ORB_Local_Config/Bug_1459/d.conf:
                  * tests/ORB_Local_Config/Bug_1459/m1.conf:
                  * tests/ORB_Local_Config/Bug_3049/a.conf:
                  * tests/ORB_Local_Config/Service_Dependency/Service_Config_Test.conf:
                  * tests/ORB_Local_Config/Two_DLL_ORB/primary-csd.conf:
                  * tests/ORB_Local_Config/Two_DLL_ORB/primary-ssl.conf:
                  * tests/ORB_Local_Config/Two_DLL_ORB/secondary-csd.conf:
                  * tests/ORB_Local_Config/Two_DLL_ORB/secondary-ssl.conf:
                  * tests/Oneway_Send_Timeouts/block_flush.conf:
                  * tests/Oneway_Send_Timeouts/lf_flush.conf:
                  * tests/Oneway_Send_Timeouts/reactive_flush.conf:
                  * tests/Optimized_Connection/oc_svc.conf:
                  * tests/POA/EndpointPolicy/multi_prot.conf:
                  * tests/POA/Explicit_Activation/alternate.conf:
                  * tests/Parallel_Connect_Strategy/blocked.conf:
                  * tests/Parallel_Connect_Strategy/reactive.conf:
                  * tests/RTCORBA/Banded_Connections/svc.conf:
                  * tests/RTCORBA/Bug_3382_Regression/svc.conf:
                  * tests/RTCORBA/Bug_3643_Regression/svc.conf.dynamic:
                  * tests/RTCORBA/Client_Propagated/svc.conf:
                  * tests/RTCORBA/Client_Protocol/svc.conf:
                  * tests/RTCORBA/Collocation/continuous.conf:
                  * tests/RTCORBA/Collocation/svc.conf:
                  * tests/RTCORBA/Destroy_Thread_Pool/continuous.conf:
                  * tests/RTCORBA/Dynamic_Thread_Pool/continuous.conf:
                  * tests/RTCORBA/Dynamic_Thread_Pool/svc.conf:
                  * tests/RTCORBA/Linear_Priority/svc.conf:
                  * tests/RTCORBA/MT_Client_Protocol_Priority/svc.conf:
                  * tests/RTCORBA/Persistent_IOR/continuous.conf:
                  * tests/RTCORBA/Policy_Combinations/svc.conf:
                  * tests/RTCORBA/Priority_Inversion_With_Bands/continuous.conf:
                  * tests/RTCORBA/Priority_Inversion_With_Bands/svc.conf:
                  * tests/RTCORBA/Profile_And_Endpoint_Selection/svc.conf:
                  * tests/RTCORBA/Server_Declared/continuous.conf:
                  * tests/RTCORBA/Server_Declared/svc.conf:
                  * tests/RTCORBA/Server_Protocol/server_iiop.conf:
                  * tests/RTCORBA/Server_Protocol/server_iiop_shmiop.conf:
                  * tests/RTCORBA/Server_Protocol/server_iiop_uiop.conf:
                  * tests/RTCORBA/Server_Protocol/server_reverse.conf:
                  * tests/RTCORBA/Server_Protocol/server_reverse_nt.conf:
                  * tests/RTCORBA/Server_Protocol/server_shmiop.conf:
                  * tests/RTCORBA/Server_Protocol/server_uiop.conf:
                  * tests/RTCORBA/Thread_Pool/continuous.conf:
                  * tests/RTCORBA/Thread_Pool/svc.conf:
                  * tests/TransportCurrent/Framework/client-static.conf:
                  * tests/TransportCurrent/Framework/client.conf:
                  * tests/TransportCurrent/Framework/server-static.conf:
                  * tests/TransportCurrent/Framework/server.conf:
                  * tests/TransportCurrent/IIOP/client_dynamic.conf:
                  * tests/TransportCurrent/IIOP/client_static.conf:
                  * tests/TransportCurrent/IIOP/server_dynamic.conf:
                  * tests/TransportCurrent/IIOP/server_static.conf:
                    Fuzz. Added lacking $Id string.

          Thu Apr 21 13:02:25 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * bin/tao_orb_tests.lst:
                    Updated test list

                  * tests/AMI/mt_noupcall.conf:
                  * tests/AMI/run_mt_noupcall.pl:
                  * tests/AMI/run_test.pl:
                    New run_mt_noupcall, the existing script was using -ORBCollocation no
                    which doesn't work with AMI and mt_noupcall

                  * tests/AMI/simple_client.cpp:
                    Layout change

          Thu Apr 21 12:07:41 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * bin/tao_orb_tests.lst:
                    Run AMI test with more options

                  * tests/AMI/exclusive.conf:
                  * tests/AMI/server.conf:
                    Added Id tag

                  * tests/AMI/mt_noupcall.conf:
                    New file for testing with mt_noupcall

                  * tests/AMI/run_test.pl:
                    Add option -mt_noupcall and give client/server separate debug levels

          Thu Apr 21 11:17:36 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/Wait_On_LF_No_Upcall.cpp:
                    Log transport id

          Thu Apr 21 10:31:58 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * tao/Connection_Handler.cpp:
                    Use the orb core reactor which is the LF reactor

          Wed Apr 20 08:59:58 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * TAO_IDL/be/be_visitor_connector/connector_dds_exh.cpp:
                    Improved portability

                  * bin/tao_orb_tests.lst:
                    Added new test

                  * tao/Leader_Follower.h:
                    Layout change

                  * tao/Strategies/SHMIOP_Acceptor.cpp:
                  * tao/Wait_On_LF_No_Upcall.cpp:
                    Fixed coverity errors

                  * tests/Bug_3531b_Regression:
                  * tests/Bug_3531b_Regression/Bug_3531b_Regression.mpc:
                  * tests/Bug_3531b_Regression/run_test.pl:
                  * tests/Bug_3531b_Regression/server.cpp:
                    New test

          Wed Apr 20 09:52:52 CEST 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                  * TAO version 2.0.2 released.

Wed Jun  8 13:35:39 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Alt_Mapping/nested_struct.cpp:
        * tests/Alt_Mapping/nested_struct.h:
        * tests/Alt_Mapping/var_struct.cpp:
        * tests/Alt_Mapping/var_struct.h:

          New files, contain new test cases - a variable size struct
          and a nested struct containing it.

        * tests/Alt_Mapping/alt_mapping.idl:
        * tests/Alt_Mapping/alt_mapping.mpc:
        * tests/Alt_Mapping/alt_mapping_i.cpp:
        * tests/Alt_Mapping/alt_mapping_i.h:
        * tests/Alt_Mapping/driver.cpp:
        * tests/Alt_Mapping/options.cpp:
        * tests/Alt_Mapping/options.h:
        * tests/Alt_Mapping/tests.h:

          Changes reflecting the new test cases.

        * tests/Alt_Mapping/run_test.pl:

          Eliminated the $invocation local variable, not used in this test.

        * tests/Alt_Mapping/ub_long_seq.cpp:
        * tests/Alt_Mapping/ub_octet_seq.cpp:
        * tests/Alt_Mapping/ub_str_seq.cpp:
        * tests/Alt_Mapping/ub_struct_seq.cpp:
        * tests/Alt_Mapping/ub_string.cpp:

          Fixed comments.

Tue May 10 16:13:44 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * performance-tests/Alt_Mapping/StringMember/client.cpp:
        * performance-tests/Alt_Mapping/StringMember/server.cpp:

          Removed these files.

        * performance-tests/Alt_Mapping/StringMember/StringMember_Test.cpp:
        * performance-tests/Alt_Mapping/StringMember/StringMember_Test.h:

          New files, combining client and server in the same process.

        * performance-tests/Alt_Mapping/StringMember/StringMember.idl:

          Removed the shutdown() operation, no need to invoke it remotely
          any more.

        * performance-tests/Alt_Mapping/StringMember/StringMember.mpc:
        * performance-tests/Alt_Mapping/StringMember/run_test.pl:

          Mods reflecting the above changes. The overall intent is to
          measure the average latency difference between setting the
          operation argument with and without a string copy, without
          including any measurement of network overhead.

Tue Apr 12 20:11:30 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * performance-tests/Alt_Mapping/StringMember/*.*:

          New test, measures latency of a CORBA operation sending a
          struct with a string member, in two versions - when the
          string member in question is assigned with a copy and
          without a copy.

Fri Apr  8 20:49:40 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Alt_Mapping/Options.cpp:

          Removed ACE_RCSID macro.

        * tao/String_Manager_T.h:

          Debugging changes and comments.

Tue Apr  5 17:46:38 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/BiDir_GIOP/*.cpp:
        * tao/CodecFactory/*.cpp:
        * tao/Messaging/*.cpp:
        * tao/PI/*.cpp:
        * tao/ValueType/*.cpp:
        * orbsvcs/orbsvcs/*.cpp:
        * orbsvcs/orbsvcs/Event/*.cpp:
        * orbsvcs/orbsvcs/Sched/*.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Client.cpp:

          - Removed ACE_RCSID macros from non-generated source files.
          - Changed 'ACE_AUTO_PTR_RESET' to 'ACE_auto_ptr_reset' and modified signature
          - Updated #includes to reflect ACE changes

Tue Apr  5 16:50:23 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/*.cpp:
        * tao/CodeSet/*.cpp:
        * tao/AnyTypeCode/*.cpp:
        * tao/PortableServer/*.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/util/utl_indenter.cpp:

          - Removed ACE_RCSID macros from non-generated source files.
          - Changed 'ACE_AUTO_PTR_RESET' to 'ACE_auto_ptr_reset' and modified signature

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_interface.cpp:

          Updated use syntax of random seed corresponding to changes in ACE.

        * tao/QtResource.mpc:

          Updated changed in base project name.

Tue Sep 28 17:46:42 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Alt_Mapping/alt_mapping_i.cpp:
        * tests/Alt_Mapping/server.cpp:
        * tests/Alt_Mapping/alt_mapping_i.h:
        * tests/Alt_Mapping/driver.cpp:
        
          Updated to
            - use const std::string<>& for IN arg signature
            - use ORB_init() with std::string for ORB name arg

Tue Sep 28 17:35:31 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/Event_Service/Event_Service.cpp:
        
          Cosmetic changes.
          
        * tao/CORBA_methods.h:
        * tao/ORB.cpp:
        * tao/Utils/ORB_Manager.cpp:
        * tao/Utils/ORB_Manager.h:
        
          Added ORB_init() method that takes a std::string ORB name
          arg instead of const char*.

Fri Sep 24 15:12:48 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * TAO_IDL/be/be_visitor_argument/arglist.cpp:
        * tao/PortableServer/POAManagerFactory.cpp:
        * tao/PortableServer/POAManagerFactory.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/Object_KeyC.h:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PI/ORBInitInfo.h:

          Changed generation type of std::string IN parameter
          from const std::string to const std::string &,
          regenerated, and modified operation implementations
          accordingly.

Thu Sep 16 18:59:25 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_Type_Filter.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.cpp:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Masked_Type_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.cpp:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.inl:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.inl:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/Event_Service/Event_Service.cpp:

          Changes to get the Event Service to build with the
          alternate mapping.

Wed Sep 15 19:26:33 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/Event_Utilities.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * tao/CORBANAME_Parser.cpp:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/PortableServer/Basic_SArguments.h:
        * tao/Object_KeyC.h:
        * tao/Messaging.mpc:
        * tao/Object.h:
        * tao/Messaging/ExceptionHolder_i.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/ExceptionHolder_i.h:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/BiDir_GIOP/BiDir_Service_Context_Handler.cpp:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PI/RequestInfo_Util.h:
        * tao/PI/Interceptor_List_T.cpp:
        * tao/PI/ORBInitInfo.h:
        * tao/PI/ClientRequestDetails.cpp:
        * tao/PI/RequestInfo_Util.cpp:
        * tao/PI/ClientRequestInfo.h:
        * tao/PI/Interceptor_List_T.h:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/CodecFactory.mpc:
        * tao/Object_T.cpp:
        * tao/PI.mpc:
        * tao/Object.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.h:

          More changes to support the alternatie IDL->C++
          mapping. The changes above allow clean builds
          of the Portable Interceptor and Messaging libs.

Tue Sep  7 16:00:49 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Alt_Mapping/ub_long_seq.h:
        * tests/Alt_Mapping/ub_octet_seq.cpp:
        * tests/Alt_Mapping/ub_octet_seq.h:
        * tests/Alt_Mapping/ub_long_seq.cpp:

          New files, adding test coverage for
          sequences of longs and octets.

        * tests/Alt_Mapping/options.h:
        * tests/Alt_Mapping/ub_string.h:
        * tests/Alt_Mapping/alt_mapping_i.cpp:
        * tests/Alt_Mapping/tests.h:
        * tests/Alt_Mapping/alt_mapping_i.h:
        * tests/Alt_Mapping/ub_str_seq.h:
        * tests/Alt_Mapping/helper.cpp:
        * tests/Alt_Mapping/alt_mapping.idl:
        * tests/Alt_Mapping/helper.h:
        * tests/Alt_Mapping/ub_struct_seq.h:
        * tests/Alt_Mapping/alt_mapping.mpc:
        * tests/Alt_Mapping/options.cpp:
        * tests/Alt_Mapping/driver.cpp:
        * tests/Alt_Mapping/run_test.pl:

          Related and cosmetic changes.

Mon Sep  6 19:42:08 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Alt_Mapping/ub_str_seq.cpp:
        * tests/Alt_Mapping/ub_str_seq.h:

          New files, defining a test for unbounded
          sequence of string.

        * tests/Alt_Mapping/alt_mapping.mpc:

          Added new files to project, and refactored
          projects to separate client and server
          executables from stub and skeleton libraries.

        * tests/Alt_Mapping/options.h:
        * tests/Alt_Mapping/alt_mapping_i.cpp:
        * tests/Alt_Mapping/server.cpp:
        * tests/Alt_Mapping/tests.h:
        * tests/Alt_Mapping/alt_mapping_i.h:
        * tests/Alt_Mapping/client.cpp:
        * tests/Alt_Mapping/alt_mapping.idl:
        * tests/Alt_Mapping/ub_struct_seq.cpp:
        * tests/Alt_Mapping/ub_struct_seq.h:
        * tests/Alt_Mapping/options.cpp:
        * tests/Alt_Mapping/driver.cpp:
        * tests/Alt_Mapping/run_test.pl:

          Changes to cover the added string sequence test.

Mon Sep  6 15:24:49 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Alt_Mapping/server.cpp:
        
          Updated code related to ObjectId to reflect ORB changes.
          
        * TAO_IDL/be/be_visitor_typedef/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/cdr_op_cs.cpp:
        
          Restored code generation for CDR operators for typedef of
          sequence that had been erroneously commented out.
          
        * tao/Object_KeyC.cpp:
        * tao/Object_KeyC.h:
        * tao/Object_Key.pidl:
        
          Redefined TAO::ObjectKey as a typedef of CORBA::OctetSeq,
          instead of a typedef of sequence<octet>.

Fri Sep  3 18:50:06 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/Root_POA.cpp:
        * tao/Profile.cpp:
        * tao/Service_Context.cpp:
        * tao/Tagged_Profile.cpp:
        * tao/operation_details.h:

          Changes to the new implementation of
          the object key (CORBA::OctetSeq) as
          a std::vector<CORBA::Octet>, made to
          debug the client/server connection
          process.

Thu Aug 26 14:46:25 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typedef/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/cdr_op_cs.cpp:

          Disabled code generation of CDR and optional
          ostream operators for typedefs if the base
          type is a sequence. Since the sequence is now
          itself a typedef, we get 'already defined'
          link errors for these operators because the
          compiler doesn't see it as an overload.
          
        * tao/tao.mpc:

          Moved Object_Key.pidl out of the hand-crafted
          list and into the automatic list. It is now
          generated as a typedef of OctetSeq, and doing
          it this way eliminates 'already defined' link
          errors between TAO and PortableServer. The
          hand-crafted static methods that had been
          added to Object_Key are now in TAO_Profile.

        * tao/target_specification.h:
        * tao/PortableServer/POA_Current_Impl.h:
        * tao/PortableServer/Root_POA.cpp:
        * tao/Object_KeyC.cpp:
        * tao/Adapter.h:
        * tao/Object_KeyC.h:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/Adapter_Registry.h:
        * tao/ObjectKey_Table.h:
        * tao/Profile.cpp:
        * tao/Transport_Acceptor.h:
        * tao/DLL_Parser.cpp:
        * tao/Profile.h:
        * tao/Object.h:
        * tao/Stub.h:
        * tao/ORB_Core.h:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/COIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/SCIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Acceptor_Filter.h:
        * tao/IIOP_Profile.cpp:
        * tao/LocalObject.h:

          Mods necessitated by the changes above.

Wed Aug 25 20:44:19 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Tagged_Profile.inl:
        * tao/ObjectKey_Table.cpp:
        * tao/Tagged_Profile.cpp:
        
          A few more needed changes for the alternate mapping
          caught by the compiler when doing a clean build.

Wed Aug 25 19:55:18 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp:
        * tao/ORB_Core.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/POA_Current.h:
        * tao/PortableServer/Key_Adapters.cpp:
        * tao/PortableServer/PortableServer_WFunctions.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/Servant_Upcall.inl:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/PortableServer_Functions.cpp:
        * tao/PortableServer/POA_Current_Impl.inl:
        * tao/PortableServer/Active_Object_Map.h:
        * tao/PortableServer/Active_Object_Map.inl:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/Object_Adapter.inl:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/POAManagerFactory.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.h:
        * tao/PortableServer/ORT_Adapter.h:
        * tao/PortableServer/Servant_Upcall.h:
        * tao/PortableServer/POAManagerFactory.h:
        * tao/PortableServer/PortableServer_Functions.h:
        * tao/PortableServer/POA_Current_Impl.cpp:
        * tao/PortableServer/Active_Object_Map.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA_Current_Impl.h:
        * tao/PortableServer/POA_Current.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Servant_Dispatcher.h:
        * tao/PortableServer/Default_Servant_Dispatcher.h:
        * tao/PortableServer/POA_Policy_Set.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h:
        * tao/Object_KeyC.cpp:
        * tao/MProfile.inl:
        * tao/MProfile.h:
        * tao/Object_KeyC.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.h:
        * tao/ObjRefTemplate/ORT_Adapter_Impl.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.cpp:
        * tao/ObjRefTemplate/ORT_Adapter_Impl.h:
        * tao/Profile.cpp:
        * tao/ORB.h:
        * tao/Profile.h:
        * tao/ORB_Core.h:
        * tao/IIOP_Profile.cpp:
        * tao/Object.cpp:
        * tao/LocalObject.cpp:
        * tao/LocalObject.h:
        * tao/MProfile.cpp:
        
          More changes to make the ORB and POA compatible with the
          alternate IDL to C++  mapping.

Tue Aug 24 18:13:42 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * tao/Tagged_Components.cpp:
        * tao/Synch_Reply_Dispatcher.h:
        * tao/ORB_Core.cpp:
        * tao/tao.mpc:
        * tao/GIOP_Message_Base.cpp:
        * tao/AnyTypeCode/Vector_AnyOp_T.h:
        * tao/AnyTypeCode/BasicTypeTraits.h:
        * tao/PortableServer.mpc:
        * tao/Policy_Set.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantManager
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.h:
        * tao/PortableServer/POA_Policy_Set.h:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/Active_Object_Map.h:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Active_Object_Map.inl:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/RequestProcessingStrategy.h:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant
        * tao/PortableServer/Root_POA.inl:
        * tao/PortableServer/POAManagerFactory.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.h:
        * tao/PortableServer/RequestProcessingStrategyServantManager
        * tao/PortableServer/POAManagerFactory.h:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant
        * tao/PortableServer/Active_Object_Map.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/LifespanStrategy.h:
        * tao/PortableServer/POA_Policy_Set.cpp:
        * tao/PortableServer/PS_ForwardC.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h:
        * tao/IIOP_Acceptor.cpp:
        * tao/Object_KeyC.cpp:
        * tao/Synch_Reply_Dispatcher.cpp:
        * tao/Stub.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/MProfile.h:
        * tao/Object_KeyC.h:
        * tao/Profile_Transport_Resolver.inl:
        * tao/Profile_Transport_Resolver.h:
        * tao/operation_details.inl:
        * tao/IIOP_Transport.h:
        * tao/Profile.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/ClientRequestInterceptor_Adapter.h:
        * tao/Service_Context.cpp:
        * tao/Policy_Set.inl:
        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/Policy_Current.cpp:
        * tao/Profile.h:
        * tao/Object.h:
        * tao/Stub.h:
        * tao/Policy_Manager.h:
        * tao/Service_Callbacks.h:
        * tao/TAO_Server_Request.cpp:
        * tao/Principal.cpp:
        * tao/ORB_Core.h:
        * tao/Policy_Current.h:
        * tao/Policy_Set.h:
        * tao/IIOP_Profile.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/CONV_FRAME.pidl:
        * tao/TAO_Server_Request.h:
        * tao/Services.pidl:
        * tao/ServerRequestInterceptor_Adapter.h:
        * tao/AnyTypeCode.mpc:
        * tao/Service_Context.inl:
        * tao/Object.cpp:
        * tao/LocalObject.cpp:
        * tao/IIOP_Connection_Handler.h:
        * tao/LocateRequest_Invocation_Adapter.h:
        * tao/Policy_Forward.pidl:
        * tao/TAO_Server_Request.inl:
        * tao/LocalObject.h:
        * tao/IOP.pidl:
        * tao/Codeset/Codeset_Manager_i.cpp:
        * tao/IIOP_Transport.cpp:
        * tao/MProfile.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/Policy_Current_Impl.cpp:
        * tao/Policy_Manager.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/ObjectIdList.pidl:
        * tao/Policy_Current_Impl.h:
        * tao/Service_Context_Handler_Registry.cpp:

          Regenerated all ORB and POA system IDL files
          with alternate mapping -Gstl option, and
          partially modified C++ files as necessary
          because of the string and sequence redefinition.
          Also fixed bugs in IDL compiler's generation
          of sequence types as typedefs of stl::vector<>.
