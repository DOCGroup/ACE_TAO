// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

#include "IFR_BasicC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Enum_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"
#include "tao/AnyTypeCode/Any_Basic_Impl_T.h"
#include "tao/AnyTypeCode/orb_typesA.h"
#include "tao/AnyTypeCode/ParameterModeA.h"

// TAO_IDL - Generated from
// be/be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_CORBA_PrimitiveKind[] =
  {
    "pk_null",
    "pk_void",
    "pk_short",
    "pk_long",
    "pk_ushort",
    "pk_ulong",
    "pk_float",
    "pk_double",
    "pk_boolean",
    "pk_char",
    "pk_octet",
    "pk_any",
    "pk_TypeCode",
    "pk_Principal",
    "pk_string",
    "pk_objref",
    "pk_longlong",
    "pk_ulonglong",
    "pk_longdouble",
    "pk_wchar",
    "pk_wstring",
    "pk_value_base"

  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_PrimitiveKind (
    "IDL:omg.org/CORBA/PrimitiveKind:1.0",
    "PrimitiveKind",
    _tao_enumerators_CORBA_PrimitiveKind,
    22);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_PrimitiveKind =
    &_tao_tc_CORBA_PrimitiveKind;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Repository (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/Repository:1.0",
    "Repository");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_Repository =
    &_tao_tc_CORBA_Repository;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ModuleDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ModuleDef:1.0",
    "ModuleDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ModuleDef =
    &_tao_tc_CORBA_ModuleDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ModuleDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ModuleDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ModuleDescription:1.0",
    "ModuleDescription",
    _tao_fields_CORBA_ModuleDescription,
    4);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ModuleDescription =
    &_tao_tc_CORBA_ModuleDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ConstantDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ConstantDef:1.0",
    "ConstantDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ConstantDef =
    &_tao_tc_CORBA_ConstantDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ConstantDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode },
    { "value", &CORBA::_tc_any }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ConstantDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ConstantDescription:1.0",
    "ConstantDescription",
    _tao_fields_CORBA_ConstantDescription,
    6);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ConstantDescription =
    &_tao_tc_CORBA_ConstantDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_StructDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/StructDef:1.0",
    "StructDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_StructDef =
    &_tao_tc_CORBA_StructDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_UnionDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/UnionDef:1.0",
    "UnionDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_UnionDef =
    &_tao_tc_CORBA_UnionDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_EnumDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/EnumDef:1.0",
    "EnumDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_EnumDef =
    &_tao_tc_CORBA_EnumDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AliasDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/AliasDef:1.0",
    "AliasDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AliasDef =
    &_tao_tc_CORBA_AliasDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_NativeDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/NativeDef:1.0",
    "NativeDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_NativeDef =
    &_tao_tc_CORBA_NativeDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_PrimitiveDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/PrimitiveDef:1.0",
    "PrimitiveDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_PrimitiveDef =
    &_tao_tc_CORBA_PrimitiveDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_StringDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/StringDef:1.0",
    "StringDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_StringDef =
    &_tao_tc_CORBA_StringDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_WstringDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/WstringDef:1.0",
    "WstringDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_WstringDef =
    &_tao_tc_CORBA_WstringDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_SequenceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/SequenceDef:1.0",
    "SequenceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_SequenceDef =
    &_tao_tc_CORBA_SequenceDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ArrayDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ArrayDef:1.0",
    "ArrayDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ArrayDef =
    &_tao_tc_CORBA_ArrayDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExceptionDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExceptionDef:1.0",
    "ExceptionDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExceptionDef =
    &_tao_tc_CORBA_ExceptionDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:925


#ifndef _TAO_TYPECODE_CORBA_ExceptionDefSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExceptionDefSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExceptionDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExceptionDef,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExceptionDefSeq_0 =
      &CORBA_ExceptionDefSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExceptionDefSeq_GUARD */
static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExceptionDefSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExceptionDefSeq:1.0",
    "ExceptionDefSeq",
    &TAO::TypeCode::tc_CORBA_ExceptionDefSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExceptionDefSeq =
    &_tao_tc_CORBA_ExceptionDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_CORBA_AttributeMode[] =
  {
    "ATTR_NORMAL",
    "ATTR_READONLY"

  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AttributeMode (
    "IDL:omg.org/CORBA/AttributeMode:1.0",
    "AttributeMode",
    _tao_enumerators_CORBA_AttributeMode,
    2);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AttributeMode =
    &_tao_tc_CORBA_AttributeMode;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AttributeDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/AttributeDef:1.0",
    "AttributeDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AttributeDef =
    &_tao_tc_CORBA_AttributeDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_AttributeDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode },
    { "mode", &CORBA::_tc_AttributeMode }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AttributeDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/AttributeDescription:1.0",
    "AttributeDescription",
    _tao_fields_CORBA_AttributeDescription,
    6);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AttributeDescription =
    &_tao_tc_CORBA_AttributeDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ExtAttributeDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode },
    { "mode", &CORBA::_tc_AttributeMode },
    { "get_exceptions", &CORBA::_tc_ExcDescriptionSeq },
    { "put_exceptions", &CORBA::_tc_ExcDescriptionSeq }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAttributeDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ExtAttributeDescription:1.0",
    "ExtAttributeDescription",
    _tao_fields_CORBA_ExtAttributeDescription,
    8);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAttributeDescription =
    &_tao_tc_CORBA_ExtAttributeDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAttributeDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExtAttributeDef:1.0",
    "ExtAttributeDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAttributeDef =
    &_tao_tc_CORBA_ExtAttributeDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_CORBA_OperationMode[] =
  {
    "OP_NORMAL",
    "OP_ONEWAY"

  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_OperationMode (
    "IDL:omg.org/CORBA/OperationMode:1.0",
    "OperationMode",
    _tao_enumerators_CORBA_OperationMode,
    2);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_OperationMode =
    &_tao_tc_CORBA_OperationMode;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ParameterDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "type", &CORBA::_tc_TypeCode },
    { "type_def", &CORBA::_tc_IDLType },
    { "mode", &CORBA::_tc_ParameterMode }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ParameterDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ParameterDescription:1.0",
    "ParameterDescription",
    _tao_fields_CORBA_ParameterDescription,
    4);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ParameterDescription =
    &_tao_tc_CORBA_ParameterDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:925


#ifndef _TAO_TYPECODE_CORBA_ParDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_ParDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ParDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ParameterDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ParDescriptionSeq_0 =
      &CORBA_ParDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ParDescriptionSeq_GUARD */
static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ParDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ParDescriptionSeq:1.0",
    "ParDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ParDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ParDescriptionSeq =
    &_tao_tc_CORBA_ParDescriptionSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ContextIdentifier (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ContextIdentifier:1.0",
    "ContextIdentifier",
    &CORBA::_tc_Identifier);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ContextIdentifier =
    &_tao_tc_CORBA_ContextIdentifier;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:925


#ifndef _TAO_TYPECODE_CORBA_ContextIdSeq_GUARD
#define _TAO_TYPECODE_CORBA_ContextIdSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ContextIdSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ContextIdentifier,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ContextIdSeq_0 =
      &CORBA_ContextIdSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ContextIdSeq_GUARD */
static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ContextIdSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ContextIdSeq:1.0",
    "ContextIdSeq",
    &TAO::TypeCode::tc_CORBA_ContextIdSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ContextIdSeq =
    &_tao_tc_CORBA_ContextIdSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_OperationDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/OperationDef:1.0",
    "OperationDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_OperationDef =
    &_tao_tc_CORBA_OperationDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_OperationDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "result", &CORBA::_tc_TypeCode },
    { "mode", &CORBA::_tc_OperationMode },
    { "contexts", &CORBA::_tc_ContextIdSeq },
    { "parameters", &CORBA::_tc_ParDescriptionSeq },
    { "exceptions", &CORBA::_tc_ExcDescriptionSeq }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_OperationDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/OperationDescription:1.0",
    "OperationDescription",
    _tao_fields_CORBA_OperationDescription,
    9);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_OperationDescription =
    &_tao_tc_CORBA_OperationDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:925


#ifndef _TAO_TYPECODE_CORBA_RepositoryIdSeq_GUARD
#define _TAO_TYPECODE_CORBA_RepositoryIdSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_RepositoryIdSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_RepositoryId,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_RepositoryIdSeq_0 =
      &CORBA_RepositoryIdSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_RepositoryIdSeq_GUARD */
static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_RepositoryIdSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/RepositoryIdSeq:1.0",
    "RepositoryIdSeq",
    &TAO::TypeCode::tc_CORBA_RepositoryIdSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_RepositoryIdSeq =
    &_tao_tc_CORBA_RepositoryIdSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:925


#ifndef _TAO_TYPECODE_CORBA_OpDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_OpDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_OpDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_OperationDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_OpDescriptionSeq_0 =
      &CORBA_OpDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_OpDescriptionSeq_GUARD */
static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_OpDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/OpDescriptionSeq:1.0",
    "OpDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_OpDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_OpDescriptionSeq =
    &_tao_tc_CORBA_OpDescriptionSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:925


#ifndef _TAO_TYPECODE_CORBA_AttrDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_AttrDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_AttrDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_AttributeDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_AttrDescriptionSeq_0 =
      &CORBA_AttrDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_AttrDescriptionSeq_GUARD */
static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AttrDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/AttrDescriptionSeq:1.0",
    "AttrDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_AttrDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AttrDescriptionSeq =
    &_tao_tc_CORBA_AttrDescriptionSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:925


#ifndef _TAO_TYPECODE_CORBA_ExtAttrDescriptionSeq_GUARD
#define _TAO_TYPECODE_CORBA_ExtAttrDescriptionSeq_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtAttrDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtAttributeDescription,
        0U);

    ::CORBA::TypeCode_ptr const tc_CORBA_ExtAttrDescriptionSeq_0 =
      &CORBA_ExtAttrDescriptionSeq_0;

  }
}


#endif /* _TAO_TYPECODE_CORBA_ExtAttrDescriptionSeq_GUARD */
static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAttrDescriptionSeq (
    CORBA::tk_alias,
    "IDL:omg.org/CORBA/ExtAttrDescriptionSeq:1.0",
    "ExtAttrDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ExtAttrDescriptionSeq_0);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAttrDescriptionSeq =
    &_tao_tc_CORBA_ExtAttrDescriptionSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_InterfaceDef_FullInterfaceDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "operations", &CORBA::_tc_OpDescriptionSeq },
    { "attributes", &CORBA::_tc_AttrDescriptionSeq },
    { "base_interfaces", &CORBA::_tc_RepositoryIdSeq },
    { "type", &CORBA::_tc_TypeCode }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceDef_FullInterfaceDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/InterfaceDef/FullInterfaceDescription:1.0",
    "FullInterfaceDescription",
    _tao_fields_CORBA_InterfaceDef_FullInterfaceDescription,
    8);

::CORBA::TypeCode_ptr const CORBA::InterfaceDef::_tc_FullInterfaceDescription =
  &_tao_tc_CORBA_InterfaceDef_FullInterfaceDescription;

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/InterfaceDef:1.0",
    "InterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InterfaceDef =
    &_tao_tc_CORBA_InterfaceDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_InterfaceDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "base_interfaces", &CORBA::_tc_RepositoryIdSeq }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/InterfaceDescription:1.0",
    "InterfaceDescription",
    _tao_fields_CORBA_InterfaceDescription,
    5);

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InterfaceDescription =
    &_tao_tc_CORBA_InterfaceDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:74

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "operations", &CORBA::_tc_OpDescriptionSeq },
    { "attributes", &CORBA::_tc_ExtAttrDescriptionSeq },
    { "base_interfaces", &CORBA::_tc_RepositoryIdSeq },
    { "type", &CORBA::_tc_TypeCode }

  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/InterfaceAttrExtension/ExtFullInterfaceDescription:1.0",
    "ExtFullInterfaceDescription",
    _tao_fields_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription,
    8);

::CORBA::TypeCode_ptr const CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription =
  &_tao_tc_CORBA_InterfaceAttrExtension_ExtFullInterfaceDescription;

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceAttrExtension (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0",
    "InterfaceAttrExtension");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InterfaceAttrExtension =
    &_tao_tc_CORBA_InterfaceAttrExtension;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExtInterfaceDef:1.0",
    "ExtInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDef =
    &_tao_tc_CORBA_ExtInterfaceDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AbstractInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0",
    "AbstractInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDef =
    &_tao_tc_CORBA_AbstractInterfaceDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAbstractInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0",
    "ExtAbstractInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDef =
    &_tao_tc_CORBA_ExtAbstractInterfaceDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_LocalInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/LocalInterfaceDef:1.0",
    "LocalInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDef =
    &_tao_tc_CORBA_LocalInterfaceDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtLocalInterfaceDef (
    CORBA::tk_objref,
    "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0",
    "ExtLocalInterfaceDef");

namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDef =
    &_tao_tc_CORBA_ExtLocalInterfaceDef;
}



// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveKind _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::PrimitiveKind>::insert (
      _tao_any,
      CORBA::_tc_PrimitiveKind,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::PrimitiveKind &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::PrimitiveKind>::extract (
        _tao_any,
        CORBA::_tc_PrimitiveKind,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::Repository>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Repository_ptr _tao_elem
  )
{
  CORBA::Repository_ptr _tao_objptr =
    CORBA::Repository::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Repository_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::Repository>::insert (
      _tao_any,
      CORBA::Repository::_tao_any_destructor,
      CORBA::_tc_Repository,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Repository_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::Repository>::extract (
        _tao_any,
        CORBA::Repository::_tao_any_destructor,
        CORBA::_tc_Repository,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ModuleDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr _tao_elem
  )
{
  CORBA::ModuleDef_ptr _tao_objptr =
    CORBA::ModuleDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ModuleDef>::insert (
      _tao_any,
      CORBA::ModuleDef::_tao_any_destructor,
      CORBA::_tc_ModuleDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ModuleDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ModuleDef>::extract (
        _tao_any,
        CORBA::ModuleDef::_tao_any_destructor,
        CORBA::_tc_ModuleDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ModuleDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::insert_copy (
      _tao_any,
      CORBA::ModuleDescription::_tao_any_destructor,
      CORBA::_tc_ModuleDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ModuleDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::insert (
      _tao_any,
      CORBA::ModuleDescription::_tao_any_destructor,
      CORBA::_tc_ModuleDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ModuleDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ModuleDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ModuleDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ModuleDescription>::extract (
        _tao_any,
        CORBA::ModuleDescription::_tao_any_destructor,
        CORBA::_tc_ModuleDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ConstantDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr _tao_elem
  )
{
  CORBA::ConstantDef_ptr _tao_objptr =
    CORBA::ConstantDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ConstantDef>::insert (
      _tao_any,
      CORBA::ConstantDef::_tao_any_destructor,
      CORBA::_tc_ConstantDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ConstantDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ConstantDef>::extract (
        _tao_any,
        CORBA::ConstantDef::_tao_any_destructor,
        CORBA::_tc_ConstantDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ConstantDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::insert_copy (
      _tao_any,
      CORBA::ConstantDescription::_tao_any_destructor,
      CORBA::_tc_ConstantDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ConstantDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::insert (
      _tao_any,
      CORBA::ConstantDescription::_tao_any_destructor,
      CORBA::_tc_ConstantDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ConstantDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ConstantDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ConstantDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ConstantDescription>::extract (
        _tao_any,
        CORBA::ConstantDescription::_tao_any_destructor,
        CORBA::_tc_ConstantDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::StructDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructDef_ptr _tao_elem
  )
{
  CORBA::StructDef_ptr _tao_objptr =
    CORBA::StructDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::StructDef>::insert (
      _tao_any,
      CORBA::StructDef::_tao_any_destructor,
      CORBA::_tc_StructDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StructDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::StructDef>::extract (
        _tao_any,
        CORBA::StructDef::_tao_any_destructor,
        CORBA::_tc_StructDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::UnionDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr _tao_elem
  )
{
  CORBA::UnionDef_ptr _tao_objptr =
    CORBA::UnionDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::UnionDef>::insert (
      _tao_any,
      CORBA::UnionDef::_tao_any_destructor,
      CORBA::_tc_UnionDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::UnionDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::UnionDef>::extract (
        _tao_any,
        CORBA::UnionDef::_tao_any_destructor,
        CORBA::_tc_UnionDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::EnumDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr _tao_elem
  )
{
  CORBA::EnumDef_ptr _tao_objptr =
    CORBA::EnumDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::EnumDef>::insert (
      _tao_any,
      CORBA::EnumDef::_tao_any_destructor,
      CORBA::_tc_EnumDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::EnumDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::EnumDef>::extract (
        _tao_any,
        CORBA::EnumDef::_tao_any_destructor,
        CORBA::_tc_EnumDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::AliasDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr _tao_elem
  )
{
  CORBA::AliasDef_ptr _tao_objptr =
    CORBA::AliasDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AliasDef>::insert (
      _tao_any,
      CORBA::AliasDef::_tao_any_destructor,
      CORBA::_tc_AliasDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AliasDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AliasDef>::extract (
        _tao_any,
        CORBA::AliasDef::_tao_any_destructor,
        CORBA::_tc_AliasDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::NativeDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr _tao_elem
  )
{
  CORBA::NativeDef_ptr _tao_objptr =
    CORBA::NativeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::NativeDef>::insert (
      _tao_any,
      CORBA::NativeDef::_tao_any_destructor,
      CORBA::_tc_NativeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::NativeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::NativeDef>::extract (
        _tao_any,
        CORBA::NativeDef::_tao_any_destructor,
        CORBA::_tc_NativeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::PrimitiveDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr _tao_elem
  )
{
  CORBA::PrimitiveDef_ptr _tao_objptr =
    CORBA::PrimitiveDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::PrimitiveDef>::insert (
      _tao_any,
      CORBA::PrimitiveDef::_tao_any_destructor,
      CORBA::_tc_PrimitiveDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::PrimitiveDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::PrimitiveDef>::extract (
        _tao_any,
        CORBA::PrimitiveDef::_tao_any_destructor,
        CORBA::_tc_PrimitiveDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::StringDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StringDef_ptr _tao_elem
  )
{
  CORBA::StringDef_ptr _tao_objptr =
    CORBA::StringDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StringDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::StringDef>::insert (
      _tao_any,
      CORBA::StringDef::_tao_any_destructor,
      CORBA::_tc_StringDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StringDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::StringDef>::extract (
        _tao_any,
        CORBA::StringDef::_tao_any_destructor,
        CORBA::_tc_StringDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::WstringDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr _tao_elem
  )
{
  CORBA::WstringDef_ptr _tao_objptr =
    CORBA::WstringDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::WstringDef>::insert (
      _tao_any,
      CORBA::WstringDef::_tao_any_destructor,
      CORBA::_tc_WstringDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::WstringDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::WstringDef>::extract (
        _tao_any,
        CORBA::WstringDef::_tao_any_destructor,
        CORBA::_tc_WstringDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::SequenceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr _tao_elem
  )
{
  CORBA::SequenceDef_ptr _tao_objptr =
    CORBA::SequenceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::SequenceDef>::insert (
      _tao_any,
      CORBA::SequenceDef::_tao_any_destructor,
      CORBA::_tc_SequenceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::SequenceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::SequenceDef>::extract (
        _tao_any,
        CORBA::SequenceDef::_tao_any_destructor,
        CORBA::_tc_SequenceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ArrayDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr _tao_elem
  )
{
  CORBA::ArrayDef_ptr _tao_objptr =
    CORBA::ArrayDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ArrayDef>::insert (
      _tao_any,
      CORBA::ArrayDef::_tao_any_destructor,
      CORBA::_tc_ArrayDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ArrayDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ArrayDef>::extract (
        _tao_any,
        CORBA::ArrayDef::_tao_any_destructor,
        CORBA::_tc_ArrayDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExceptionDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr _tao_elem
  )
{
  CORBA::ExceptionDef_ptr _tao_objptr =
    CORBA::ExceptionDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExceptionDef>::insert (
      _tao_any,
      CORBA::ExceptionDef::_tao_any_destructor,
      CORBA::_tc_ExceptionDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExceptionDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExceptionDef>::extract (
        _tao_any,
        CORBA::ExceptionDef::_tao_any_destructor,
        CORBA::_tc_ExceptionDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExceptionDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExceptionDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExceptionDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::insert (
      _tao_any,
      CORBA::ExceptionDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExceptionDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExceptionDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExceptionDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExceptionDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExceptionDefSeq>::extract (
        _tao_any,
        CORBA::ExceptionDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExceptionDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::AttributeMode>::insert (
      _tao_any,
      CORBA::_tc_AttributeMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::AttributeMode>::extract (
        _tao_any,
        CORBA::_tc_AttributeMode,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::AttributeDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr _tao_elem
  )
{
  CORBA::AttributeDef_ptr _tao_objptr =
    CORBA::AttributeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AttributeDef>::insert (
      _tao_any,
      CORBA::AttributeDef::_tao_any_destructor,
      CORBA::_tc_AttributeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AttributeDef>::extract (
        _tao_any,
        CORBA::AttributeDef::_tao_any_destructor,
        CORBA::_tc_AttributeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::AttributeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::insert_copy (
      _tao_any,
      CORBA::AttributeDescription::_tao_any_destructor,
      CORBA::_tc_AttributeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttributeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::insert (
      _tao_any,
      CORBA::AttributeDescription::_tao_any_destructor,
      CORBA::_tc_AttributeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttributeDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::AttributeDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::AttributeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::AttributeDescription>::extract (
        _tao_any,
        CORBA::AttributeDescription::_tao_any_destructor,
        CORBA::_tc_AttributeDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtAttributeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::insert_copy (
      _tao_any,
      CORBA::ExtAttributeDescription::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::insert (
      _tao_any,
      CORBA::ExtAttributeDescription::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttributeDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtAttributeDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtAttributeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtAttributeDescription>::extract (
        _tao_any,
        CORBA::ExtAttributeDescription::_tao_any_destructor,
        CORBA::_tc_ExtAttributeDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExtAttributeDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr _tao_elem
  )
{
  CORBA::ExtAttributeDef_ptr _tao_objptr =
    CORBA::ExtAttributeDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtAttributeDef>::insert (
      _tao_any,
      CORBA::ExtAttributeDef::_tao_any_destructor,
      CORBA::_tc_ExtAttributeDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttributeDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtAttributeDef>::extract (
        _tao_any,
        CORBA::ExtAttributeDef::_tao_any_destructor,
        CORBA::_tc_ExtAttributeDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::OperationMode>::insert (
      _tao_any,
      CORBA::_tc_OperationMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::OperationMode>::extract (
        _tao_any,
        CORBA::_tc_OperationMode,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ParameterDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::insert_copy (
      _tao_any,
      CORBA::ParameterDescription::_tao_any_destructor,
      CORBA::_tc_ParameterDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ParameterDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::insert (
      _tao_any,
      CORBA::ParameterDescription::_tao_any_destructor,
      CORBA::_tc_ParameterDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ParameterDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ParameterDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ParameterDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ParameterDescription>::extract (
        _tao_any,
        CORBA::ParameterDescription::_tao_any_destructor,
        CORBA::_tc_ParameterDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ParDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ParDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ParDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ParDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::insert (
      _tao_any,
      CORBA::ParDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ParDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ParDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ParDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ParDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ParDescriptionSeq>::extract (
        _tao_any,
        CORBA::ParDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ParDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ContextIdSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::insert_copy (
      _tao_any,
      CORBA::ContextIdSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ContextIdSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ContextIdSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::insert (
      _tao_any,
      CORBA::ContextIdSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ContextIdSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ContextIdSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ContextIdSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ContextIdSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ContextIdSeq>::extract (
        _tao_any,
        CORBA::ContextIdSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ContextIdSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::OperationDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr _tao_elem
  )
{
  CORBA::OperationDef_ptr _tao_objptr =
    CORBA::OperationDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::OperationDef>::insert (
      _tao_any,
      CORBA::OperationDef::_tao_any_destructor,
      CORBA::_tc_OperationDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::OperationDef>::extract (
        _tao_any,
        CORBA::OperationDef::_tao_any_destructor,
        CORBA::_tc_OperationDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::OperationDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::insert_copy (
      _tao_any,
      CORBA::OperationDescription::_tao_any_destructor,
      CORBA::_tc_OperationDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OperationDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::insert (
      _tao_any,
      CORBA::OperationDescription::_tao_any_destructor,
      CORBA::_tc_OperationDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OperationDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::OperationDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::OperationDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::OperationDescription>::extract (
        _tao_any,
        CORBA::OperationDescription::_tao_any_destructor,
        CORBA::_tc_OperationDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::RepositoryIdSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::insert_copy (
      _tao_any,
      CORBA::RepositoryIdSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_RepositoryIdSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::RepositoryIdSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::insert (
      _tao_any,
      CORBA::RepositoryIdSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_RepositoryIdSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::RepositoryIdSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::RepositoryIdSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::RepositoryIdSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::RepositoryIdSeq>::extract (
        _tao_any,
        CORBA::RepositoryIdSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_RepositoryIdSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::OpDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::OpDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_OpDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::OpDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::insert (
      _tao_any,
      CORBA::OpDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_OpDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::OpDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::OpDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::OpDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::OpDescriptionSeq>::extract (
        _tao_any,
        CORBA::OpDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_OpDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::AttrDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::AttrDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_AttrDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AttrDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::insert (
      _tao_any,
      CORBA::AttrDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_AttrDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AttrDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::AttrDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::AttrDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::AttrDescriptionSeq>::extract (
        _tao_any,
        CORBA::AttrDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_AttrDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtAttrDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtAttrDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAttrDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::insert (
      _tao_any,
      CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtAttrDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAttrDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtAttrDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtAttrDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtAttrDescriptionSeq>::extract (
        _tao_any,
        CORBA::ExtAttrDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtAttrDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::InterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr _tao_elem
  )
{
  CORBA::InterfaceDef_ptr _tao_objptr =
    CORBA::InterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::InterfaceDef>::insert (
      _tao_any,
      CORBA::InterfaceDef::_tao_any_destructor,
      CORBA::_tc_InterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::InterfaceDef>::extract (
        _tao_any,
        CORBA::InterfaceDef::_tao_any_destructor,
        CORBA::_tc_InterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceDef::FullInterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceDef::_tc_FullInterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDef::FullInterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceDef::_tc_FullInterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDef::FullInterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InterfaceDef::FullInterfaceDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceDef::FullInterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceDef::FullInterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor,
        CORBA::InterfaceDef::_tc_FullInterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceDescription::_tao_any_destructor,
      CORBA::_tc_InterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceDescription::_tao_any_destructor,
      CORBA::_tc_InterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InterfaceDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceDescription::_tao_any_destructor,
        CORBA::_tc_InterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::InterfaceAttrExtension>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr _tao_elem
  )
{
  CORBA::InterfaceAttrExtension_ptr _tao_objptr =
    CORBA::InterfaceAttrExtension::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::InterfaceAttrExtension>::insert (
      _tao_any,
      CORBA::InterfaceAttrExtension::_tao_any_destructor,
      CORBA::_tc_InterfaceAttrExtension,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::InterfaceAttrExtension>::extract (
        _tao_any,
        CORBA::InterfaceAttrExtension::_tao_any_destructor,
        CORBA::_tc_InterfaceAttrExtension,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::insert_copy (
      _tao_any,
      CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::insert (
      _tao_any,
      CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
      CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::extract (
        _tao_any,
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor,
        CORBA::InterfaceAttrExtension::_tc_ExtFullInterfaceDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExtInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtInterfaceDef_ptr _tao_objptr =
    CORBA::ExtInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::AbstractInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr _tao_elem
  )
{
  CORBA::AbstractInterfaceDef_ptr _tao_objptr =
    CORBA::AbstractInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::AbstractInterfaceDef>::insert (
      _tao_any,
      CORBA::AbstractInterfaceDef::_tao_any_destructor,
      CORBA::_tc_AbstractInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::AbstractInterfaceDef>::extract (
        _tao_any,
        CORBA::AbstractInterfaceDef::_tao_any_destructor,
        CORBA::_tc_AbstractInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtAbstractInterfaceDef_ptr _tao_objptr =
    CORBA::ExtAbstractInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtAbstractInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtAbstractInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtAbstractInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtAbstractInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtAbstractInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::LocalInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr _tao_elem
  )
{
  CORBA::LocalInterfaceDef_ptr _tao_objptr =
    CORBA::LocalInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::LocalInterfaceDef>::insert (
      _tao_any,
      CORBA::LocalInterfaceDef::_tao_any_destructor,
      CORBA::_tc_LocalInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::LocalInterfaceDef>::extract (
        _tao_any,
        CORBA::LocalInterfaceDef::_tao_any_destructor,
        CORBA::_tc_LocalInterfaceDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

namespace TAO
{
  template<>
  CORBA::Boolean
  Any_Impl_T<CORBA::ExtLocalInterfaceDef>::to_object (
      CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr _tao_elem
  )
{
  CORBA::ExtLocalInterfaceDef_ptr _tao_objptr =
    CORBA::ExtLocalInterfaceDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::ExtLocalInterfaceDef>::insert (
      _tao_any,
      CORBA::ExtLocalInterfaceDef::_tao_any_destructor,
      CORBA::_tc_ExtLocalInterfaceDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::ExtLocalInterfaceDef>::extract (
        _tao_any,
        CORBA::ExtLocalInterfaceDef::_tao_any_destructor,
        CORBA::_tc_ExtLocalInterfaceDef,
        _tao_elem
      );
}
