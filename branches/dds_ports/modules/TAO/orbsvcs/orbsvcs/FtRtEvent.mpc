// -*- MPC -*-
// $Id$

project (FtRtEvent) : orbsvcslib, orbsvcs_output, install, ftorbutils, rtevent_serv, naming, avoids_minimum_corba, pi_server, tao_versioning_idl_defaults {
  sharedname   = TAO_FtRtEvent
  idlflags    += -Wb,export_macro=TAO_FtRtEvent_Export -Wb,export_include=orbsvcs/FtRtEvent/Utils/ftrtevent_export.h
  dynamicflags = TAO_FTRTEVENT_BUILD_DLL
  tagchecks   += FtRtEvent

  IDL_Files {
    idlflags += -GC
    FTRT.idl
    FtRtecEventComm.idl
    FTRT_GroupManager.idl
  }

  IDL_Files  {
    FtRtecEventChannelAdmin.idl
  }

  Source_Files (ORBSVCS_COMPONENTS) {
    FtRtEvent {
      FTRTC.cpp
      FTRTS.cpp
      FtRtecEventCommC.cpp
      FtRtecEventCommS.cpp
      FTRT_GroupManagerC.cpp
      FTRT_GroupManagerS.cpp
      FtRtecEventChannelAdminC.cpp
      FtRtecEventChannelAdminS.cpp
      FtRtEvent/Utils
    }
  }

  Template_Files {
  }
}

project (FTRT_ClientORB) :  messaging, orbsvcslib, orbsvcs_output, pi, install {
  sharedname   = TAO_FTRT_ClientORB
  dynamicflags = TAO_FTRT_BUILD_DLL
  tagchecks   += FTRT_ClientORB

  IDL_Files {
  }

  Source_Files  (ORBSVCS_COMPONENTS) {
    FTRT_ClientORB {
      FtRtEvent/ClientORB
    }
  }

  Inline_Files {
  }

  Template_Files {
  }
}

project (FTRT_EventChannel) :  orbsvcslib, orbsvcs_output, install, ftrtevent, rtevent_serv, utils, pi_server, corba_messaging {
  sharedname   = TAO_FTRT_EventChannel
  dynamicflags = TAO_FTRTEC_BUILD_DLL
  tagchecks   += FTRT_EventChannel
  after       += FTORB_Utils

  IDL_Files {
  }

  Source_Files  (ORBSVCS_COMPONENTS) {
    FTRT_EventChannel {
      FtRtEvent/EventChannel
    }
  }
  Template_Files {
    FtRtEvent/EventChannel/ConnectionHandler_T.cpp
    FtRtEvent/EventChannel/Fault_Detector_T.cpp
    FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp
  }

  Header_Files {
    FtRtEvent/EventChannel/ftrtec_export.h
  }
}
