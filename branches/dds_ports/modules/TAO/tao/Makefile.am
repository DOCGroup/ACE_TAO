##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

includedir = @includedir@/tao
pkgconfigdir = @libdir@/pkgconfig

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)

SUBDIRS = \
        . \
        ETCL

lib_LTLIBRARIES =
pkgconfig_DATA =
CLEANFILES =
BUILT_SOURCES =

## Makefile.TAO.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  AnyTypeCode/GIOPA.cpp \
  AnyTypeCode/GIOPA.h \
  GIOPC.cpp \
  GIOPC.h \
  GIOPC.inl \
  GIOPS.h

CLEANFILES += \
  GIOP-stamp \
  AnyTypeCode/GIOPA.cpp \
  AnyTypeCode/GIOPA.h \
  GIOPC.cpp \
  GIOPC.h \
  GIOPC.inl \
  GIOPS.h

AnyTypeCode/GIOPA.cpp AnyTypeCode/GIOPA.h GIOPC.cpp GIOPC.h GIOPC.inl GIOPS.h: GIOP-stamp

GIOP-stamp: $(srcdir)/GIOP.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h $(srcdir)/GIOP.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/CONV_FRAMEA.cpp \
  AnyTypeCode/CONV_FRAMEA.h \
  CONV_FRAMEC.cpp \
  CONV_FRAMEC.h \
  CONV_FRAMES.h

CLEANFILES += \
  CONV_FRAME-stamp \
  AnyTypeCode/CONV_FRAMEA.cpp \
  AnyTypeCode/CONV_FRAMEA.h \
  CONV_FRAMEC.cpp \
  CONV_FRAMEC.h \
  CONV_FRAMES.h

AnyTypeCode/CONV_FRAMEA.cpp AnyTypeCode/CONV_FRAMEA.h CONV_FRAMEC.cpp CONV_FRAMEC.h CONV_FRAMES.h: CONV_FRAME-stamp

CONV_FRAME-stamp: $(srcdir)/CONV_FRAME.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/CONV_FRAME.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/CurrentA.cpp \
  AnyTypeCode/CurrentA.h \
  CurrentC.cpp \
  CurrentC.h \
  CurrentS.h

CLEANFILES += \
  Current-stamp \
  AnyTypeCode/CurrentA.cpp \
  AnyTypeCode/CurrentA.h \
  CurrentC.cpp \
  CurrentC.h \
  CurrentS.h

AnyTypeCode/CurrentA.cpp AnyTypeCode/CurrentA.h CurrentC.cpp CurrentC.h CurrentS.h: Current-stamp

Current-stamp: $(srcdir)/Current.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/Current.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/IIOPA.cpp \
  AnyTypeCode/IIOPA.h \
  IIOPC.cpp \
  IIOPC.h

CLEANFILES += \
  IIOP-stamp \
  AnyTypeCode/IIOPA.cpp \
  AnyTypeCode/IIOPA.h \
  IIOPC.cpp \
  IIOPC.h

AnyTypeCode/IIOPA.cpp AnyTypeCode/IIOPA.h IIOPC.cpp IIOPC.h: IIOP-stamp

IIOP-stamp: $(srcdir)/IIOP.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/IIOP.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/IIOP_EndpointsA.cpp \
  AnyTypeCode/IIOP_EndpointsA.h \
  IIOP_EndpointsC.cpp \
  IIOP_EndpointsC.h \
  IIOP_EndpointsS.h

CLEANFILES += \
  IIOP_Endpoints-stamp \
  AnyTypeCode/IIOP_EndpointsA.cpp \
  AnyTypeCode/IIOP_EndpointsA.h \
  IIOP_EndpointsC.cpp \
  IIOP_EndpointsC.h \
  IIOP_EndpointsS.h

AnyTypeCode/IIOP_EndpointsA.cpp AnyTypeCode/IIOP_EndpointsA.h IIOP_EndpointsC.cpp IIOP_EndpointsC.h IIOP_EndpointsS.h: IIOP_Endpoints-stamp

IIOP_Endpoints-stamp: $(srcdir)/IIOP_Endpoints.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/IIOP_Endpoints.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/IOPA.cpp \
  AnyTypeCode/IOPA.h \
  IOPC.cpp \
  IOPC.h \
  IOPS.h

CLEANFILES += \
  IOP-stamp \
  AnyTypeCode/IOPA.cpp \
  AnyTypeCode/IOPA.h \
  IOPC.cpp \
  IOPC.h \
  IOPS.h

AnyTypeCode/IOPA.cpp AnyTypeCode/IOPA.h IOPC.cpp IOPC.h IOPS.h: IOP-stamp

IOP-stamp: $(srcdir)/IOP.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/IOP.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/Messaging_PolicyValueA.cpp \
  AnyTypeCode/Messaging_PolicyValueA.h \
  Messaging_PolicyValueC.cpp \
  Messaging_PolicyValueC.h

CLEANFILES += \
  Messaging_PolicyValue-stamp \
  AnyTypeCode/Messaging_PolicyValueA.cpp \
  AnyTypeCode/Messaging_PolicyValueA.h \
  Messaging_PolicyValueC.cpp \
  Messaging_PolicyValueC.h

AnyTypeCode/Messaging_PolicyValueA.cpp AnyTypeCode/Messaging_PolicyValueA.h Messaging_PolicyValueC.cpp Messaging_PolicyValueC.h: Messaging_PolicyValue-stamp

Messaging_PolicyValue-stamp: $(srcdir)/Messaging_PolicyValue.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/Messaging_PolicyValue.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/Messaging_SyncScopeA.cpp \
  AnyTypeCode/Messaging_SyncScopeA.h \
  Messaging_SyncScopeC.cpp \
  Messaging_SyncScopeC.h

CLEANFILES += \
  Messaging_SyncScope-stamp \
  AnyTypeCode/Messaging_SyncScopeA.cpp \
  AnyTypeCode/Messaging_SyncScopeA.h \
  Messaging_SyncScopeC.cpp \
  Messaging_SyncScopeC.h

AnyTypeCode/Messaging_SyncScopeA.cpp AnyTypeCode/Messaging_SyncScopeA.h Messaging_SyncScopeC.cpp Messaging_SyncScopeC.h: Messaging_SyncScope-stamp

Messaging_SyncScope-stamp: $(srcdir)/Messaging_SyncScope.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/Messaging_SyncScope.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/ObjectIdListA.cpp \
  AnyTypeCode/ObjectIdListA.h \
  ObjectIdListC.cpp \
  ObjectIdListC.h

CLEANFILES += \
  ObjectIdList-stamp \
  AnyTypeCode/ObjectIdListA.cpp \
  AnyTypeCode/ObjectIdListA.h \
  ObjectIdListC.cpp \
  ObjectIdListC.h

AnyTypeCode/ObjectIdListA.cpp AnyTypeCode/ObjectIdListA.h ObjectIdListC.cpp ObjectIdListC.h: ObjectIdList-stamp

ObjectIdList-stamp: $(srcdir)/ObjectIdList.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/ObjectIdList.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/orb_typesA.cpp \
  AnyTypeCode/orb_typesA.h \
  orb_typesC.cpp \
  orb_typesC.h \
  orb_typesS.h

CLEANFILES += \
  orb_types-stamp \
  AnyTypeCode/orb_typesA.cpp \
  AnyTypeCode/orb_typesA.h \
  orb_typesC.cpp \
  orb_typesC.h \
  orb_typesS.h

AnyTypeCode/orb_typesA.cpp AnyTypeCode/orb_typesA.h orb_typesC.cpp orb_typesC.h orb_typesS.h: orb_types-stamp

orb_types-stamp: $(srcdir)/orb_types.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/orb_types.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/ParameterModeA.cpp \
  AnyTypeCode/ParameterModeA.h \
  ParameterModeC.cpp \
  ParameterModeC.h \
  ParameterModeS.h

CLEANFILES += \
  ParameterMode-stamp \
  AnyTypeCode/ParameterModeA.cpp \
  AnyTypeCode/ParameterModeA.h \
  ParameterModeC.cpp \
  ParameterModeC.h \
  ParameterModeS.h

AnyTypeCode/ParameterModeA.cpp AnyTypeCode/ParameterModeA.h ParameterModeC.cpp ParameterModeC.h ParameterModeS.h: ParameterMode-stamp

ParameterMode-stamp: $(srcdir)/ParameterMode.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/ParameterMode.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/Policy_ForwardA.cpp \
  AnyTypeCode/Policy_ForwardA.h \
  Policy_ForwardC.cpp \
  Policy_ForwardC.h \
  Policy_ForwardS.h

CLEANFILES += \
  Policy_Forward-stamp \
  AnyTypeCode/Policy_ForwardA.cpp \
  AnyTypeCode/Policy_ForwardA.h \
  Policy_ForwardC.cpp \
  Policy_ForwardC.h \
  Policy_ForwardS.h

AnyTypeCode/Policy_ForwardA.cpp AnyTypeCode/Policy_ForwardA.h Policy_ForwardC.cpp Policy_ForwardC.h Policy_ForwardS.h: Policy_Forward-stamp

Policy_Forward-stamp: $(srcdir)/Policy_Forward.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/Policy_Forward.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/Policy_ManagerA.cpp \
  AnyTypeCode/Policy_ManagerA.h \
  Policy_ManagerC.cpp \
  Policy_ManagerC.h \
  Policy_ManagerS.h

CLEANFILES += \
  Policy_Manager-stamp \
  AnyTypeCode/Policy_ManagerA.cpp \
  AnyTypeCode/Policy_ManagerA.h \
  Policy_ManagerC.cpp \
  Policy_ManagerC.h \
  Policy_ManagerS.h

AnyTypeCode/Policy_ManagerA.cpp AnyTypeCode/Policy_ManagerA.h Policy_ManagerC.cpp Policy_ManagerC.h Policy_ManagerS.h: Policy_Manager-stamp

Policy_Manager-stamp: $(srcdir)/Policy_Manager.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/Policy_Manager.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/Policy_CurrentA.cpp \
  AnyTypeCode/Policy_CurrentA.h \
  Policy_CurrentC.cpp \
  Policy_CurrentC.h \
  Policy_CurrentS.h

CLEANFILES += \
  Policy_Current-stamp \
  AnyTypeCode/Policy_CurrentA.cpp \
  AnyTypeCode/Policy_CurrentA.h \
  Policy_CurrentC.cpp \
  Policy_CurrentC.h \
  Policy_CurrentS.h

AnyTypeCode/Policy_CurrentA.cpp AnyTypeCode/Policy_CurrentA.h Policy_CurrentC.cpp Policy_CurrentC.h Policy_CurrentS.h: Policy_Current-stamp

Policy_Current-stamp: $(srcdir)/Policy_Current.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/Policy_Current.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/PI_ForwardA.cpp \
  AnyTypeCode/PI_ForwardA.h \
  PI_ForwardC.cpp \
  PI_ForwardC.h

CLEANFILES += \
  PI_Forward-stamp \
  AnyTypeCode/PI_ForwardA.cpp \
  AnyTypeCode/PI_ForwardA.h \
  PI_ForwardC.cpp \
  PI_ForwardC.h

AnyTypeCode/PI_ForwardA.cpp AnyTypeCode/PI_ForwardA.h PI_ForwardC.cpp PI_ForwardC.h: PI_Forward-stamp

PI_Forward-stamp: $(srcdir)/PI_Forward.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/PI_Forward.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/PortableInterceptorA.cpp \
  AnyTypeCode/PortableInterceptorA.h \
  PortableInterceptorC.cpp \
  PortableInterceptorC.h \
  PortableInterceptorS.h

CLEANFILES += \
  PortableInterceptor-stamp \
  AnyTypeCode/PortableInterceptorA.cpp \
  AnyTypeCode/PortableInterceptorA.h \
  PortableInterceptorC.cpp \
  PortableInterceptorC.h \
  PortableInterceptorS.h

AnyTypeCode/PortableInterceptorA.cpp AnyTypeCode/PortableInterceptorA.h PortableInterceptorC.cpp PortableInterceptorC.h PortableInterceptorS.h: PortableInterceptor-stamp

PortableInterceptor-stamp: $(srcdir)/PortableInterceptor.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/PortableInterceptor.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/ServicesA.cpp \
  AnyTypeCode/ServicesA.h \
  ServicesC.cpp \
  ServicesC.h \
  ServicesS.h

CLEANFILES += \
  Services-stamp \
  AnyTypeCode/ServicesA.cpp \
  AnyTypeCode/ServicesA.h \
  ServicesC.cpp \
  ServicesC.h \
  ServicesS.h

AnyTypeCode/ServicesA.cpp AnyTypeCode/ServicesA.h ServicesC.cpp ServicesC.h ServicesS.h: Services-stamp

Services-stamp: $(srcdir)/Services.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/Services.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/TAOA.cpp \
  AnyTypeCode/TAOA.h \
  TAOC.cpp \
  TAOC.h \
  TAOS.h

CLEANFILES += \
  TAO-stamp \
  AnyTypeCode/TAOA.cpp \
  AnyTypeCode/TAOA.h \
  TAOC.cpp \
  TAOC.h \
  TAOS.h

AnyTypeCode/TAOA.cpp AnyTypeCode/TAOA.h TAOC.cpp TAOC.h TAOS.h: TAO-stamp

TAO-stamp: $(srcdir)/TAO.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/TAO.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/TimeBaseA.cpp \
  AnyTypeCode/TimeBaseA.h \
  TimeBaseC.cpp \
  TimeBaseC.h \
  TimeBaseS.h

CLEANFILES += \
  TimeBase-stamp \
  AnyTypeCode/TimeBaseA.cpp \
  AnyTypeCode/TimeBaseA.h \
  TimeBaseC.cpp \
  TimeBaseC.h \
  TimeBaseS.h

AnyTypeCode/TimeBaseA.cpp AnyTypeCode/TimeBaseA.h TimeBaseC.cpp TimeBaseC.h TimeBaseS.h: TimeBase-stamp

TimeBase-stamp: $(srcdir)/TimeBase.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci $(srcdir)/TimeBase.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/BooleanSeqA.cpp \
  AnyTypeCode/BooleanSeqA.h \
  BooleanSeqC.cpp \
  BooleanSeqC.h \
  BooleanSeqS.h

CLEANFILES += \
  BooleanSeq-stamp \
  AnyTypeCode/BooleanSeqA.cpp \
  AnyTypeCode/BooleanSeqA.h \
  BooleanSeqC.cpp \
  BooleanSeqC.h \
  BooleanSeqS.h

AnyTypeCode/BooleanSeqA.cpp AnyTypeCode/BooleanSeqA.h BooleanSeqC.cpp BooleanSeqC.h BooleanSeqS.h: BooleanSeq-stamp

BooleanSeq-stamp: $(srcdir)/BooleanSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/BooleanSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/CharSeqA.cpp \
  AnyTypeCode/CharSeqA.h \
  CharSeqC.cpp \
  CharSeqC.h \
  CharSeqS.h

CLEANFILES += \
  CharSeq-stamp \
  AnyTypeCode/CharSeqA.cpp \
  AnyTypeCode/CharSeqA.h \
  CharSeqC.cpp \
  CharSeqC.h \
  CharSeqS.h

AnyTypeCode/CharSeqA.cpp AnyTypeCode/CharSeqA.h CharSeqC.cpp CharSeqC.h CharSeqS.h: CharSeq-stamp

CharSeq-stamp: $(srcdir)/CharSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/CharSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/DoubleSeqA.cpp \
  AnyTypeCode/DoubleSeqA.h \
  DoubleSeqC.cpp \
  DoubleSeqC.h \
  DoubleSeqS.h

CLEANFILES += \
  DoubleSeq-stamp \
  AnyTypeCode/DoubleSeqA.cpp \
  AnyTypeCode/DoubleSeqA.h \
  DoubleSeqC.cpp \
  DoubleSeqC.h \
  DoubleSeqS.h

AnyTypeCode/DoubleSeqA.cpp AnyTypeCode/DoubleSeqA.h DoubleSeqC.cpp DoubleSeqC.h DoubleSeqS.h: DoubleSeq-stamp

DoubleSeq-stamp: $(srcdir)/DoubleSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/DoubleSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/FloatSeqA.cpp \
  AnyTypeCode/FloatSeqA.h \
  FloatSeqC.cpp \
  FloatSeqC.h \
  FloatSeqS.h

CLEANFILES += \
  FloatSeq-stamp \
  AnyTypeCode/FloatSeqA.cpp \
  AnyTypeCode/FloatSeqA.h \
  FloatSeqC.cpp \
  FloatSeqC.h \
  FloatSeqS.h

AnyTypeCode/FloatSeqA.cpp AnyTypeCode/FloatSeqA.h FloatSeqC.cpp FloatSeqC.h FloatSeqS.h: FloatSeq-stamp

FloatSeq-stamp: $(srcdir)/FloatSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/FloatSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/LongDoubleSeqA.cpp \
  AnyTypeCode/LongDoubleSeqA.h \
  LongDoubleSeqC.cpp \
  LongDoubleSeqC.h \
  LongDoubleSeqS.h

CLEANFILES += \
  LongDoubleSeq-stamp \
  AnyTypeCode/LongDoubleSeqA.cpp \
  AnyTypeCode/LongDoubleSeqA.h \
  LongDoubleSeqC.cpp \
  LongDoubleSeqC.h \
  LongDoubleSeqS.h

AnyTypeCode/LongDoubleSeqA.cpp AnyTypeCode/LongDoubleSeqA.h LongDoubleSeqC.cpp LongDoubleSeqC.h LongDoubleSeqS.h: LongDoubleSeq-stamp

LongDoubleSeq-stamp: $(srcdir)/LongDoubleSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/LongDoubleSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/LongLongSeqA.cpp \
  AnyTypeCode/LongLongSeqA.h \
  LongLongSeqC.cpp \
  LongLongSeqC.h \
  LongLongSeqS.h

CLEANFILES += \
  LongLongSeq-stamp \
  AnyTypeCode/LongLongSeqA.cpp \
  AnyTypeCode/LongLongSeqA.h \
  LongLongSeqC.cpp \
  LongLongSeqC.h \
  LongLongSeqS.h

AnyTypeCode/LongLongSeqA.cpp AnyTypeCode/LongLongSeqA.h LongLongSeqC.cpp LongLongSeqC.h LongLongSeqS.h: LongLongSeq-stamp

LongLongSeq-stamp: $(srcdir)/LongLongSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/LongLongSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/LongSeqA.cpp \
  AnyTypeCode/LongSeqA.h \
  LongSeqC.cpp \
  LongSeqC.h \
  LongSeqS.h

CLEANFILES += \
  LongSeq-stamp \
  AnyTypeCode/LongSeqA.cpp \
  AnyTypeCode/LongSeqA.h \
  LongSeqC.cpp \
  LongSeqC.h \
  LongSeqS.h

AnyTypeCode/LongSeqA.cpp AnyTypeCode/LongSeqA.h LongSeqC.cpp LongSeqC.h LongSeqS.h: LongSeq-stamp

LongSeq-stamp: $(srcdir)/LongSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/LongSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/OctetSeqA.cpp \
  AnyTypeCode/OctetSeqA.h \
  OctetSeqC.cpp \
  OctetSeqC.h \
  OctetSeqS.h

CLEANFILES += \
  OctetSeq-stamp \
  AnyTypeCode/OctetSeqA.cpp \
  AnyTypeCode/OctetSeqA.h \
  OctetSeqC.cpp \
  OctetSeqC.h \
  OctetSeqS.h

AnyTypeCode/OctetSeqA.cpp AnyTypeCode/OctetSeqA.h OctetSeqC.cpp OctetSeqC.h OctetSeqS.h: OctetSeq-stamp

OctetSeq-stamp: $(srcdir)/OctetSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/OctetSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/ShortSeqA.cpp \
  AnyTypeCode/ShortSeqA.h \
  ShortSeqC.cpp \
  ShortSeqC.h \
  ShortSeqS.h

CLEANFILES += \
  ShortSeq-stamp \
  AnyTypeCode/ShortSeqA.cpp \
  AnyTypeCode/ShortSeqA.h \
  ShortSeqC.cpp \
  ShortSeqC.h \
  ShortSeqS.h

AnyTypeCode/ShortSeqA.cpp AnyTypeCode/ShortSeqA.h ShortSeqC.cpp ShortSeqC.h ShortSeqS.h: ShortSeq-stamp

ShortSeq-stamp: $(srcdir)/ShortSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/ShortSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/StringSeqA.cpp \
  AnyTypeCode/StringSeqA.h \
  StringSeqC.cpp \
  StringSeqC.h \
  StringSeqS.h

CLEANFILES += \
  StringSeq-stamp \
  AnyTypeCode/StringSeqA.cpp \
  AnyTypeCode/StringSeqA.h \
  StringSeqC.cpp \
  StringSeqC.h \
  StringSeqS.h

AnyTypeCode/StringSeqA.cpp AnyTypeCode/StringSeqA.h StringSeqC.cpp StringSeqC.h StringSeqS.h: StringSeq-stamp

StringSeq-stamp: $(srcdir)/StringSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/StringSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/ULongLongSeqA.cpp \
  AnyTypeCode/ULongLongSeqA.h \
  ULongLongSeqC.cpp \
  ULongLongSeqC.h \
  ULongLongSeqS.h

CLEANFILES += \
  ULongLongSeq-stamp \
  AnyTypeCode/ULongLongSeqA.cpp \
  AnyTypeCode/ULongLongSeqA.h \
  ULongLongSeqC.cpp \
  ULongLongSeqC.h \
  ULongLongSeqS.h

AnyTypeCode/ULongLongSeqA.cpp AnyTypeCode/ULongLongSeqA.h ULongLongSeqC.cpp ULongLongSeqC.h ULongLongSeqS.h: ULongLongSeq-stamp

ULongLongSeq-stamp: $(srcdir)/ULongLongSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/ULongLongSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/ULongSeqA.cpp \
  AnyTypeCode/ULongSeqA.h \
  ULongSeqC.cpp \
  ULongSeqC.h \
  ULongSeqS.h

CLEANFILES += \
  ULongSeq-stamp \
  AnyTypeCode/ULongSeqA.cpp \
  AnyTypeCode/ULongSeqA.h \
  ULongSeqC.cpp \
  ULongSeqC.h \
  ULongSeqS.h

AnyTypeCode/ULongSeqA.cpp AnyTypeCode/ULongSeqA.h ULongSeqC.cpp ULongSeqC.h ULongSeqS.h: ULongSeq-stamp

ULongSeq-stamp: $(srcdir)/ULongSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/ULongSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/UShortSeqA.cpp \
  AnyTypeCode/UShortSeqA.h \
  UShortSeqC.cpp \
  UShortSeqC.h \
  UShortSeqS.h

CLEANFILES += \
  UShortSeq-stamp \
  AnyTypeCode/UShortSeqA.cpp \
  AnyTypeCode/UShortSeqA.h \
  UShortSeqC.cpp \
  UShortSeqC.h \
  UShortSeqS.h

AnyTypeCode/UShortSeqA.cpp AnyTypeCode/UShortSeqA.h UShortSeqC.cpp UShortSeqC.h UShortSeqS.h: UShortSeq-stamp

UShortSeq-stamp: $(srcdir)/UShortSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/UShortSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/WCharSeqA.cpp \
  AnyTypeCode/WCharSeqA.h \
  WCharSeqC.cpp \
  WCharSeqC.h \
  WCharSeqS.h

CLEANFILES += \
  WCharSeq-stamp \
  AnyTypeCode/WCharSeqA.cpp \
  AnyTypeCode/WCharSeqA.h \
  WCharSeqC.cpp \
  WCharSeqC.h \
  WCharSeqS.h

AnyTypeCode/WCharSeqA.cpp AnyTypeCode/WCharSeqA.h WCharSeqC.cpp WCharSeqC.h WCharSeqS.h: WCharSeq-stamp

WCharSeq-stamp: $(srcdir)/WCharSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/WCharSeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/WStringSeqA.cpp \
  AnyTypeCode/WStringSeqA.h \
  WStringSeqC.cpp \
  WStringSeqC.h \
  WStringSeqS.h

CLEANFILES += \
  WStringSeq-stamp \
  AnyTypeCode/WStringSeqA.cpp \
  AnyTypeCode/WStringSeqA.h \
  WStringSeqC.cpp \
  WStringSeqC.h \
  WStringSeqS.h

AnyTypeCode/WStringSeqA.cpp AnyTypeCode/WStringSeqA.h WStringSeqC.cpp WStringSeqC.h WStringSeqS.h: WStringSeq-stamp

WStringSeq-stamp: $(srcdir)/WStringSeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GA -Gp -Gd -oA AnyTypeCode -Wb,export_macro=TAO_Export -Wb,export_include=tao/TAO_Export.h -Wb,anyop_export_macro=TAO_AnyTypeCode_Export -Wb,anyop_export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -Sci -Gse $(srcdir)/WStringSeq.pidl
	@touch $@

lib_LTLIBRARIES += libTAO.la

libTAO_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_BUILD_DLL

libTAO_la_SOURCES = \
  Abstract_Servant_Base.cpp \
  Acceptor_Filter.cpp \
  Acceptor_Registry.cpp \
  Adapter.cpp \
  Adapter_Factory.cpp \
  Adapter_Registry.cpp \
  AnyTypeCode_Adapter.cpp \
  Argument.cpp \
  Asynch_Queued_Message.cpp \
  Asynch_Reply_Dispatcher_Base.cpp \
  Base_Transport_Property.cpp \
  BiDir_Adapter.cpp \
  Bind_Dispatcher_Guard.cpp \
  Block_Flushing_Strategy.cpp \
  Blocked_Connect_Strategy.cpp \
  BooleanSeqC.cpp \
  CDR.cpp \
  CONV_FRAMEC.cpp \
  CORBALOC_Parser.cpp \
  CORBANAME_Parser.cpp \
  CORBA_String.cpp \
  CharSeqC.cpp \
  Cleanup_Func_Registry.cpp \
  ClientRequestInterceptor_Adapter.cpp \
  ClientRequestInterceptor_Adapter_Factory.cpp \
  Client_Strategy_Factory.cpp \
  Codeset_Manager.cpp \
  Codeset_Manager_Factory_Base.cpp \
  Codeset_Translator_Base.cpp \
  Collocated_Invocation.cpp \
  Collocation_Proxy_Broker.cpp \
  Collocation_Resolver.cpp \
  Configurable_Refcount.cpp \
  Connect_Strategy.cpp \
  Connection_Handler.cpp \
  Connection_Purging_Strategy.cpp \
  Connector_Registry.cpp \
  CurrentC.cpp \
  DLL_Parser.cpp \
  Default_Collocation_Resolver.cpp \
  Default_Endpoint_Selector_Factory.cpp \
  Default_Stub_Factory.cpp \
  Default_Thread_Lane_Resources_Manager.cpp \
  DoubleSeqC.cpp \
  Dynamic_Adapter.cpp \
  Endpoint.cpp \
  Endpoint_Selector_Factory.cpp \
  Environment.cpp \
  Exception.cpp \
  Exclusive_TMS.cpp \
  FILE_Parser.cpp \
  Fault_Tolerance_Service.cpp \
  FloatSeqC.cpp \
  Flushing_Strategy.cpp \
  GIOPC.cpp \
  GIOP_Fragmentation_Strategy.cpp \
  GIOP_Message_Base.cpp \
  GIOP_Message_Generator_Parser.cpp \
  GIOP_Message_Generator_Parser_10.cpp \
  GIOP_Message_Generator_Parser_11.cpp \
  GIOP_Message_Generator_Parser_12.cpp \
  GIOP_Message_Generator_Parser_Impl.cpp \
  GIOP_Message_Locate_Header.cpp \
  GIOP_Message_State.cpp \
  GIOP_Message_Version.cpp \
  GUIResource_Factory.cpp \
  HTTP_Client.cpp \
  HTTP_Handler.cpp \
  HTTP_Parser.cpp \
  IFR_Client_Adapter.cpp \
  IIOPC.cpp \
  IIOP_Acceptor.cpp \
  IIOP_Connection_Handler.cpp \
  IIOP_Connector.cpp \
  IIOP_Endpoint.cpp \
  IIOP_EndpointsC.cpp \
  IIOP_Factory.cpp \
  IIOP_Profile.cpp \
  IIOP_Transport.cpp \
  IOPC.cpp \
  IORInterceptor_Adapter.cpp \
  IORInterceptor_Adapter_Factory.cpp \
  IOR_Parser.cpp \
  Incoming_Message_Queue.cpp \
  Incoming_Message_Stack.cpp \
  Invocation_Adapter.cpp \
  Invocation_Base.cpp \
  Invocation_Endpoint_Selectors.cpp \
  LF_CH_Event.cpp \
  LF_Connect_Strategy.cpp \
  LF_Event.cpp \
  LF_Event_Binder.cpp \
  LF_Event_Loop_Thread_Helper.cpp \
  LF_Follower.cpp \
  LF_Follower_Auto_Adder.cpp \
  LF_Follower_Auto_Ptr.cpp \
  LF_Invocation_Event.cpp \
  LF_Multi_Event.cpp \
  LF_Strategy.cpp \
  LF_Strategy_Complete.cpp \
  LRU_Connection_Purging_Strategy.cpp \
  Leader_Follower.cpp \
  Leader_Follower_Flushing_Strategy.cpp \
  LocalObject.cpp \
  LocateRequest_Invocation.cpp \
  LocateRequest_Invocation_Adapter.cpp \
  LongDoubleSeqC.cpp \
  LongLongSeqC.cpp \
  LongSeqC.cpp \
  MCAST_Parser.cpp \
  MMAP_Allocator.cpp \
  MProfile.cpp \
  Messaging_PolicyValueC.cpp \
  Messaging_SyncScopeC.cpp \
  Muxed_TMS.cpp \
  NVList_Adapter.cpp \
  Network_Priority_Protocols_Hooks.cpp \
  New_Leader_Generator.cpp \
  Null_Fragmentation_Strategy.cpp \
  ORB.cpp \
  ORBInitializer_Registry.cpp \
  ORBInitializer_Registry_Adapter.cpp \
  ORB_Core.cpp \
  ORB_Core_Auto_Ptr.cpp \
  ORB_Core_TSS_Resources.cpp \
  ORB_Table.cpp \
  Object.cpp \
  ObjectIdListC.cpp \
  ObjectKey_Table.cpp \
  Object_KeyC.cpp \
  Object_Loader.cpp \
  Object_Proxy_Broker.cpp \
  Object_Ref_Table.cpp \
  OctetSeqC.cpp \
  On_Demand_Fragmentation_Strategy.cpp \
  PI_ForwardC.cpp \
  ParameterModeC.cpp \
  Parser_Registry.cpp \
  Pluggable_Messaging_Utils.cpp \
  PolicyC.cpp \
  PolicyFactory_Registry_Adapter.cpp \
  PolicyFactory_Registry_Factory.cpp \
  Policy_Current.cpp \
  Policy_CurrentC.cpp \
  Policy_Current_Impl.cpp \
  Policy_ForwardC.cpp \
  Policy_Manager.cpp \
  Policy_ManagerC.cpp \
  Policy_Set.cpp \
  Policy_Validator.cpp \
  PortableInterceptorC.cpp \
  Principal.cpp \
  Profile.cpp \
  Profile_Transport_Resolver.cpp \
  Protocol_Factory.cpp \
  Protocols_Hooks.cpp \
  Queued_Data.cpp \
  Queued_Message.cpp \
  Reactive_Connect_Strategy.cpp \
  Reactive_Flushing_Strategy.cpp \
  Refcounted_ObjectKey.cpp \
  Remote_Invocation.cpp \
  Remote_Object_Proxy_Broker.cpp \
  Reply_Dispatcher.cpp \
  Request_Dispatcher.cpp \
  RequestInterceptor_Adapter.cpp \
  Resource_Factory.cpp \
  Resume_Handle.cpp \
  ServerRequestInterceptor_Adapter.cpp \
  ServerRequestInterceptor_Adapter_Factory.cpp \
  Server_Strategy_Factory.cpp \
  Service_Callbacks.cpp \
  Service_Context.cpp \
  Service_Context_Handler.cpp \
  Service_Context_Handler_Registry.cpp \
  ServicesC.cpp \
  Services_Activate.cpp \
  ShortSeqC.cpp \
  StringSeqC.cpp \
  String_Alloc.cpp \
  Stub.cpp \
  Stub_Factory.cpp \
  Synch_Invocation.cpp \
  Synch_Queued_Message.cpp \
  Synch_Reply_Dispatcher.cpp \
  SystemException.cpp \
  TAOC.cpp \
  TAO_Internal.cpp \
  TAO_Server_Request.cpp \
  TAO_Singleton_Manager.cpp \
  TSS_Resources.cpp \
  Tagged_Components.cpp \
  Tagged_Profile.cpp \
  Thread_Lane_Resources.cpp \
  Thread_Lane_Resources_Manager.cpp \
  Thread_Per_Connection_Handler.cpp \
  TimeBaseC.cpp \
  Transport.cpp \
  Transport_Acceptor.cpp \
  Transport_Connector.cpp \
  Transport_Descriptor_Interface.cpp \
  Transport_Mux_Strategy.cpp \
  Transport_Queueing_Strategies.cpp \
  Transport_Selection_Guard.cpp \
  Transport_Timer.cpp \
  TypeCodeFactory_Adapter.cpp \
  Typecode_typesC.cpp \
  ULongLongSeqC.cpp \
  ULongSeqC.cpp \
  UShortSeqC.cpp \
  UserException.cpp \
  Valuetype_Adapter.cpp \
  Valuetype_Adapter_Factory.cpp \
  WCharSeqC.cpp \
  WStringSeqC.cpp \
  Wait_On_LF_No_Upcall.cpp \
  Wait_On_Leader_Follower.cpp \
  Wait_On_Reactor.cpp \
  Wait_On_Read.cpp \
  Wait_Strategy.cpp \
  WrongTransactionC.cpp \
  ZIOP_Adapter.cpp \
  debug.cpp \
  default_client.cpp \
  default_resource.cpp \
  default_server.cpp \
  operation_details.cpp \
  orb_typesC.cpp \
  params.cpp \
  target_specification.cpp

libTAO_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_la_LIBADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS = \
  Abstract_Servant_Base.h \
  Abstract_Servant_Base.inl \
  Acceptor_Filter.h \
  Acceptor_Impl.cpp \
  Acceptor_Impl.h \
  Acceptor_Registry.h \
  Acceptor_Registry.inl \
  Adapter.h \
  Adapter_Factory.h \
  Adapter_Registry.h \
  Allocator.h \
  AnyTypeCode_Adapter.h \
  Any_Insert_Policy_T.h \
  Arg_Traits_T.h \
  Argument.h \
  Array_Traits_T.h \
  Array_VarOut_T.cpp \
  Array_VarOut_T.h \
  Array_VarOut_T.inl \
  Asynch_Queued_Message.h \
  Asynch_Reply_Dispatcher_Base.h \
  Asynch_Reply_Dispatcher_Base.inl \
  Auto_Functor.h \
  BD_String_Argument_T.cpp \
  BD_String_Argument_T.h \
  BD_String_Argument_T.inl \
  Base_Transport_Property.h \
  Base_Transport_Property.inl \
  Basic_Argument_T.cpp \
  Basic_Argument_T.h \
  Basic_Argument_T.inl \
  Basic_Arguments.h \
  Basic_Types.h \
  BiDir_Adapter.h \
  Bind_Dispatcher_Guard.h \
  Bind_Dispatcher_Guard.inl \
  Block_Flushing_Strategy.h \
  Blocked_Connect_Strategy.h \
  BooleanSeq.pidl \
  BooleanSeq.pidl \
  BooleanSeqC.h \
  BooleanSeqS.h \
  Bounded_Array_Allocation_Traits_T.h \
  Bounded_Array_Sequence_T.h \
  Bounded_Basic_String_Sequence_T.h \
  Bounded_Object_Reference_Sequence_T.h \
  Bounded_Reference_Allocation_Traits_T.h \
  Bounded_Sequence_CDR_T.h \
  Bounded_Value_Allocation_Traits_T.h \
  Bounded_Value_Sequence_T.h \
  Buffer_Allocator_T.cpp \
  Buffer_Allocator_T.h \
  CDR.h \
  CDR.inl \
  CONV_FRAME.pidl \
  CONV_FRAME.pidl \
  CONV_FRAMEC.h \
  CONV_FRAMES.h \
  CORBALOC_Parser.h \
  CORBALOC_Parser.inl \
  CORBANAME_Parser.h \
  CORBA_String.h \
  CORBA_String.inl \
  CORBA_methods.h \
  Cache_Entries_T.cpp \
  Cache_Entries_T.h \
  Cache_Entries_T.inl \
  CharSeq.pidl \
  CharSeq.pidl \
  CharSeqC.h \
  CharSeqS.h \
  Cleanup_Func_Registry.h \
  Cleanup_Func_Registry.inl \
  ClientRequestInterceptor_Adapter.h \
  ClientRequestInterceptor_Adapter_Factory.h \
  Client_Strategy_Factory.h \
  Codeset_Descriptor_Base.h \
  Codeset_Manager.h \
  Codeset_Manager_Factory_Base.h \
  Codeset_Translator_Base.h \
  Collocated_Invocation.h \
  Collocation_Proxy_Broker.h \
  Collocation_Resolver.h \
  Collocation_Strategy.h \
  Condition.cpp \
  Condition.h \
  Condition.inl \
  Configurable_Refcount.h \
  Configurable_Refcount.inl \
  Connect_Strategy.h \
  Connection_Handler.h \
  Connection_Handler.inl \
  Connection_Purging_Strategy.h \
  Connection_Purging_Strategy.inl \
  Connector_Impl.cpp \
  Connector_Impl.h \
  Connector_Registry.h \
  Connector_Registry.inl \
  Current.pidl \
  Current.pidl \
  CurrentC.h \
  CurrentS.h \
  DLL_Parser.h \
  Default_Collocation_Resolver.h \
  Default_Endpoint_Selector_Factory.h \
  Default_Stub_Factory.h \
  Default_Thread_Lane_Resources_Manager.h \
  DoubleSeq.pidl \
  DoubleSeq.pidl \
  DoubleSeqC.h \
  DoubleSeqS.h \
  Dynamic_Adapter.h \
  Endpoint.h \
  Endpoint.inl \
  Endpoint_Selector_Factory.h \
  Environment.h \
  Environment.inl \
  Exception.h \
  Exception.inl \
  Exception_Data.h \
  Exclusive_TMS.h \
  FILE_Parser.h \
  Fault_Tolerance_Service.h \
  Fault_Tolerance_Service.inl \
  Fixed_Array_Argument_T.cpp \
  Fixed_Array_Argument_T.h \
  Fixed_Array_Argument_T.inl \
  Fixed_Size_Argument_T.cpp \
  Fixed_Size_Argument_T.h \
  Fixed_Size_Argument_T.inl \
  FloatSeq.pidl \
  FloatSeq.pidl \
  FloatSeqC.h \
  FloatSeqS.h \
  Flushing_Strategy.h \
  GIOP.pidl \
  GIOP.pidl \
  GIOPC.h \
  GIOPC.inl \
  GIOPS.h \
  GIOP_Fragmentation_Strategy.h \
  GIOP_Message_Base.h \
  GIOP_Message_Generator_Parser.h \
  GIOP_Message_Generator_Parser_10.h \
  GIOP_Message_Generator_Parser_11.h \
  GIOP_Message_Generator_Parser_12.h \
  GIOP_Message_Generator_Parser_Impl.h \
  GIOP_Message_Generator_Parser_Impl.inl \
  GIOP_Message_Locate_Header.h \
  GIOP_Message_Locate_Header.inl \
  GIOP_Message_State.h \
  GIOP_Message_State.inl \
  GIOP_Message_Version.h \
  GIOP_Message_Version.inl \
  GIOP_Utils.h \
  GUIResource_Factory.h \
  Generic_Sequence_T.h \
  HTTP_Client.h \
  HTTP_Handler.h \
  HTTP_Parser.h \
  IFR_Client_Adapter.h \
  IIOP.pidl \
  IIOP.pidl \
  IIOPC.h \
  IIOP_Acceptor.h \
  IIOP_Acceptor.inl \
  IIOP_Connection_Handler.h \
  IIOP_Connector.h \
  IIOP_Endpoint.h \
  IIOP_Endpoint.inl \
  IIOP_Endpoints.pidl \
  IIOP_Endpoints.pidl \
  IIOP_EndpointsC.h \
  IIOP_EndpointsS.h \
  IIOP_Factory.h \
  IIOP_Profile.h \
  IIOP_Transport.h \
  IOP.pidl \
  IOP.pidl \
  IOPC.h \
  IOPS.h \
  IORInterceptor_Adapter.h \
  IORInterceptor_Adapter_Factory.h \
  IOR_Parser.h \
  Incoming_Message_Queue.h \
  Incoming_Message_Queue.inl \
  Incoming_Message_Stack.h \
  Incoming_Message_Stack.inl \
  InterfaceDef.pidl \
  Intrusive_Ref_Count_Base_T.cpp \
  Intrusive_Ref_Count_Base_T.h \
  Intrusive_Ref_Count_Base_T.inl \
  Intrusive_Ref_Count_Handle_T.cpp \
  Intrusive_Ref_Count_Handle_T.h \
  Intrusive_Ref_Count_Handle_T.inl \
  InvalidName.pidl \
  Invocation_Adapter.h \
  Invocation_Adapter.inl \
  Invocation_Base.h \
  Invocation_Base.inl \
  Invocation_Endpoint_Selectors.h \
  Invocation_Utils.h \
  LF_CH_Event.h \
  LF_Connect_Strategy.h \
  LF_Event.h \
  LF_Event.inl \
  LF_Event_Binder.h \
  LF_Event_Binder.inl \
  LF_Event_Loop_Thread_Helper.h \
  LF_Event_Loop_Thread_Helper.inl \
  LF_Follower.h \
  LF_Follower.inl \
  LF_Follower_Auto_Adder.h \
  LF_Follower_Auto_Adder.inl \
  LF_Follower_Auto_Ptr.h \
  LF_Follower_Auto_Ptr.inl \
  LF_Invocation_Event.h \
  LF_Multi_Event.h \
  LF_Strategy.h \
  LF_Strategy_Complete.h \
  LRU_Connection_Purging_Strategy.h \
  Leader_Follower.h \
  Leader_Follower.inl \
  Leader_Follower_Flushing_Strategy.h \
  Load_Protocol_Factory_T.h \
  LocalObject.h \
  LocalObject.inl \
  LocateRequest_Invocation.h \
  LocateRequest_Invocation_Adapter.h \
  LongDoubleSeq.pidl \
  LongDoubleSeq.pidl \
  LongDoubleSeqC.h \
  LongDoubleSeqS.h \
  LongLongSeq.pidl \
  LongLongSeq.pidl \
  LongLongSeqC.h \
  LongLongSeqS.h \
  LongSeq.pidl \
  LongSeq.pidl \
  LongSeqC.h \
  LongSeqS.h \
  MCAST_Parser.h \
  MCAST_Parser.inl \
  Message_Semantics.h \
  MMAP_Allocator.h \
  MM_Sequence_Iterator_T.h \
  MProfile.h \
  MProfile.inl \
  Messaging_PolicyValue.pidl \
  Messaging_PolicyValue.pidl \
  Messaging_PolicyValueC.h \
  Messaging_SyncScope.pidl \
  Messaging_SyncScope.pidl \
  Messaging_SyncScopeC.h \
  Muxed_TMS.h \
  NVList_Adapter.h \
  Network_Priority_Protocols_Hooks.h \
  New_Leader_Generator.h \
  Null_Fragmentation_Strategy.h \
  ORB.h \
  ORB.inl \
  ORBInitializer_Registry.h \
  ORBInitializer_Registry_Adapter.h \
  ORB_Constants.h \
  ORB_Core.h \
  ORB_Core.inl \
  ORB_Core_Auto_Ptr.h \
  ORB_Core_Auto_Ptr.inl \
  ORB_Core_TSS_Resources.h \
  ORB_Table.h \
  ORB_Table.inl \
  Object.h \
  Object.inl \
  ObjectIdList.pidl \
  ObjectIdList.pidl \
  ObjectIdListC.h \
  ObjectKey_Table.h \
  Object_Argument_T.cpp \
  Object_Argument_T.h \
  Object_Argument_T.inl \
  Object_Key.pidl \
  Object_KeyC.h \
  Object_Loader.h \
  Object_Proxy_Broker.h \
  Object_Ref_Table.h \
  Object_Ref_Table.inl \
  Object_Reference_Const_Sequence_Element_T.h \
  Object_Reference_Sequence_Element_T.h \
  Object_Reference_Traits_Base_T.h \
  Object_Reference_Traits_T.h \
  Object_T.cpp \
  Object_T.h \
  Objref_VarOut_T.cpp \
  Objref_VarOut_T.h \
  Objref_VarOut_T.inl \
  OctetSeq.pidl \
  OctetSeq.pidl \
  OctetSeqC.h \
  OctetSeqS.h \
  On_Demand_Fragmentation_Strategy.h \
  PI_Forward.pidl \
  PI_Forward.pidl \
  PI_ForwardC.h \
  ParameterMode.pidl \
  ParameterMode.pidl \
  ParameterModeC.h \
  ParameterModeS.h \
  Parser_Registry.h \
  Parser_Registry.inl \
  Pluggable_Messaging_Utils.h \
  Pluggable_Messaging_Utils.inl \
  Policy.pidl \
  PolicyC.h \
  PolicyC.inl \
  PolicyFactory_Registry_Adapter.h \
  PolicyFactory_Registry_Factory.h \
  PolicyS.h \
  Policy_Current.h \
  Policy_Current.inl \
  Policy_Current.pidl \
  Policy_Current.pidl \
  Policy_CurrentC.h \
  Policy_CurrentS.h \
  Policy_Current_Impl.h \
  Policy_Current_Impl.inl \
  Policy_Forward.pidl \
  Policy_Forward.pidl \
  Policy_ForwardC.h \
  Policy_ForwardS.h \
  Policy_Manager.h \
  Policy_Manager.inl \
  Policy_Manager.pidl \
  Policy_Manager.pidl \
  Policy_ManagerC.h \
  Policy_ManagerS.h \
  Policy_Set.h \
  Policy_Set.inl \
  Policy_Validator.h \
  PortableInterceptor.h \
  PortableInterceptor.pidl \
  PortableInterceptor.pidl \
  PortableInterceptorC.h \
  PortableInterceptorS.h \
  Principal.h \
  Principal.inl \
  Profile.h \
  Profile.inl \
  Profile_Transport_Resolver.h \
  Profile_Transport_Resolver.inl \
  Protocol_Factory.h \
  Protocols_Hooks.h \
  Pseudo_VarOut_T.cpp \
  Pseudo_VarOut_T.h \
  Pseudo_VarOut_T.inl \
  Queued_Data.h \
  Queued_Data.inl \
  Queued_Message.h \
  Queued_Message.inl \
  Range_Checking_T.h \
  Reactive_Connect_Strategy.h \
  Reactive_Flushing_Strategy.h \
  Refcounted_ObjectKey.h \
  Refcounted_ObjectKey.inl \
  Remote_Invocation.h \
  Remote_Object_Proxy_Broker.h \
  Reply_Dispatcher.h \
  Reply_Dispatcher.inl \
  Request_Dispatcher.h \
  RequestInterceptor_Adapter.h \
  Resource_Factory.h \
  Resume_Handle.h \
  Resume_Handle.inl \
  Seq_Out_T.cpp \
  Seq_Out_T.h \
  Seq_Out_T.inl \
  Seq_Var_T.cpp \
  Seq_Var_T.h \
  Seq_Var_T.inl \
  Sequence_T.h \
  ServerRequestInterceptor_Adapter.h \
  ServerRequestInterceptor_Adapter_Factory.h \
  Server_Strategy_Factory.h \
  Service_Callbacks.h \
  Service_Context.h \
  Service_Context.inl \
  Service_Context_Handler.h \
  Service_Context_Handler_Registry.h \
  Services.pidl \
  Services.pidl \
  ServicesC.h \
  ServicesS.h \
  Services_Activate.h \
  ShortSeq.pidl \
  ShortSeq.pidl \
  ShortSeqC.h \
  ShortSeqS.h \
  Special_Basic_Argument_T.cpp \
  Special_Basic_Argument_T.h \
  Special_Basic_Argument_T.inl \
  Special_Basic_Arguments.h \
  StringSeq.pidl \
  StringSeq.pidl \
  StringSeqC.h \
  StringSeqS.h \
  String_Alloc.h \
  String_Const_Sequence_Element_T.h \
  String_Manager_T.h \
  String_Sequence_Element_T.h \
  String_Traits_Base_T.h \
  String_Traits_T.h \
  Stub.h \
  Stub.inl \
  Stub_Factory.h \
  Synch_Invocation.h \
  Synch_Invocation.inl \
  Synch_Queued_Message.h \
  Synch_Reply_Dispatcher.h \
  SystemException.h \
  SystemException.inl \
  TAO.pidl \
  TAO.pidl \
  TAOC.h \
  TAOS.h \
  TAO_Export.h \
  TAO_Internal.h \
  TAO_Server_Request.h \
  TAO_Server_Request.inl \
  TAO_Singleton.cpp \
  TAO_Singleton.h \
  TAO_Singleton.inl \
  TAO_Singleton_Manager.h \
  TAO_Singleton_Manager.inl \
  TSS_Resources.h \
  Tagged_Components.h \
  Tagged_Components.inl \
  Tagged_Profile.h \
  Tagged_Profile.inl \
  Thread_Lane_Resources.h \
  Thread_Lane_Resources_Manager.h \
  Thread_Per_Connection_Handler.h \
  TimeBase.pidl \
  TimeBase.pidl \
  TimeBaseC.h \
  TimeBaseS.h \
  Timeprobe.h \
  Transport.h \
  Transport.inl \
  Transport_Acceptor.h \
  Transport_Acceptor.inl \
  Transport_Cache_Manager.h \
  Transport_Cache_Manager_T.cpp \
  Transport_Cache_Manager_T.h \
  Transport_Cache_Manager_T.inl \
  Transport_Connector.h \
  Transport_Connector.inl \
  Transport_Descriptor_Interface.h \
  Transport_Descriptor_Interface.inl \
  Transport_Mux_Strategy.h \
  Transport_Queueing_Strategies.h \
  Transport_Selection_Guard.h \
  Transport_Timer.h \
  TypeCodeFactory_Adapter.h \
  Typecode_types.pidl \
  Typecode_typesC.h \
  Typecode_typesS.h \
  UB_String_Argument_T.cpp \
  UB_String_Argument_T.h \
  UB_String_Argument_T.inl \
  UB_String_Arguments.h \
  Unbounded_BD_String_Sequence_T.h \
  Bounded_BD_String_Sequence_T.h \
  ULongLongSeq.pidl \
  ULongLongSeq.pidl \
  ULongLongSeqC.h \
  ULongLongSeqS.h \
  ULongSeq.pidl \
  ULongSeq.pidl \
  ULongSeqC.h \
  ULongSeqS.h \
  UShortSeq.pidl \
  UShortSeq.pidl \
  UShortSeqC.h \
  UShortSeqS.h \
  Unbounded_Array_Allocation_Traits_T.h \
  Unbounded_Array_Sequence_T.h \
  Unbounded_Basic_String_Sequence_T.h \
  Unbounded_Object_Reference_Sequence_T.h \
  Unbounded_Octet_Sequence_T.h \
  Unbounded_Reference_Allocation_Traits_T.h \
  Unbounded_Sequence_CDR_T.h \
  Unbounded_Value_Allocation_Traits_T.h \
  Unbounded_Value_Sequence_T.h \
  UserException.h \
  UserException.inl \
  Value_Traits_T.h \
  Valuetype_Adapter.h \
  Valuetype_Adapter_Factory.h \
  VarOut_T.cpp \
  VarOut_T.h \
  VarOut_T.inl \
  Var_Array_Argument_T.cpp \
  Var_Array_Argument_T.h \
  Var_Array_Argument_T.inl \
  Var_Size_Argument_T.cpp \
  Var_Size_Argument_T.h \
  Var_Size_Argument_T.inl \
  Version.h \
  Versioned_Namespace.h \
  WCharSeq.pidl \
  WCharSeq.pidl \
  WCharSeqC.h \
  WCharSeqS.h \
  WStringSeq.pidl \
  WStringSeq.pidl \
  WStringSeqC.h \
  WStringSeqS.h \
  Wait_On_LF_No_Upcall.h \
  Wait_On_Leader_Follower.h \
  Wait_On_Reactor.h \
  Wait_On_Read.h \
  Wait_Strategy.h \
  Wait_Strategy.inl \
  WrongTransaction.pidl \
  WrongTransactionC.h \
  WrongTransactionS.h \
  ZIOP_Adapter.h \
  corba.h \
  corbafwd.h \
  debug.h \
  default_client.h \
  default_environment.h \
  default_ports.h \
  default_resource.h \
  default_server.h \
  objectid.h \
  operation_details.h \
  operation_details.inl \
  orb.idl \
  orb_types.pidl \
  orb_types.pidl \
  orb_typesC.h \
  orb_typesS.h \
  orbconf.h \
  params.h \
  params.inl \
  target_specification.h \
  target_specification.inl \
  varbase.h

pkgconfig_DATA += \
  TAO.pc

CLEANFILES += \
  TAO.pc

TAO.pc: ${top_builddir}/config.status ${srcdir}/TAO.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/TAO.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST = \
  TAO.pc.in \
  tao.rc


## Makefile.Codeset.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  Codeset/CodeSetContextC.cpp \
  Codeset/CodeSetContextC.h \
  Codeset/CodeSetContextS.h

CLEANFILES += \
  Codeset/CodeSetContext-stamp \
  Codeset/CodeSetContextC.cpp \
  Codeset/CodeSetContextC.h \
  Codeset/CodeSetContextS.h

Codeset/CodeSetContextC.cpp Codeset/CodeSetContextC.h Codeset/CodeSetContextS.h: Codeset/CodeSetContext-stamp

Codeset/CodeSetContext-stamp: $(srcdir)/Codeset/CodeSetContext.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Sorb -Wb,export_macro=TAO_Codeset_Export -Wb,export_include=tao/Codeset/codeset_export.h -o Codeset $(srcdir)/Codeset/CodeSetContext.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_Codeset.la

libTAO_Codeset_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_CODESET_BUILD_DLL

libTAO_Codeset_la_SOURCES = \
  Codeset/CodeSetContextC.cpp \
  Codeset/Codeset.cpp \
  Codeset/Codeset_Descriptor.cpp \
  Codeset/Codeset_Manager_Factory.cpp \
  Codeset/Codeset_Manager_i.cpp \
  Codeset/Codeset_Service_Context_Handler.cpp \
  Codeset/Codeset_Translator_Factory.cpp \
  Codeset/UTF16_BOM_Factory.cpp \
  Codeset/UTF16_BOM_Translator.cpp \
  Codeset/UTF8_Latin1_Factory.cpp \
  Codeset/UTF8_Latin1_Translator.cpp

libTAO_Codeset_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_Codeset_la_LIBADD = \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  Codeset/CodeSetContext.pidl \
  Codeset/CodeSetContextC.h \
  Codeset/CodeSetContextS.h \
  Codeset/Codeset.h \
  Codeset/Codeset_Service_Context_Handler.h \
  Codeset/Codeset_Descriptor.h \
  Codeset/Codeset_Manager_Factory.h \
  Codeset/Codeset_Manager_i.h \
  Codeset/Codeset_Translator_Factory.h \
  Codeset/Codeset_Translator_Factory_T.cpp \
  Codeset/Codeset_Translator_Factory_T.h \
  Codeset/UTF16_BOM_Factory.h \
  Codeset/UTF16_BOM_Translator.h \
  Codeset/UTF8_Latin1_Factory.h \
  Codeset/UTF8_Latin1_Translator.h \
  Codeset/codeset_export.h

endif BUILD_EXCEPTIONS

## Makefile.AnyTypeCode.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  AnyTypeCode/AnySeqA.cpp \
  AnyTypeCode/AnySeqA.h \
  AnyTypeCode/AnySeqC.cpp \
  AnyTypeCode/AnySeqC.h

CLEANFILES += \
  AnyTypeCode/AnySeq-stamp \
  AnyTypeCode/AnySeqA.cpp \
  AnyTypeCode/AnySeqA.h \
  AnyTypeCode/AnySeqC.cpp \
  AnyTypeCode/AnySeqC.h

AnyTypeCode/AnySeqA.cpp AnyTypeCode/AnySeqA.h AnyTypeCode/AnySeqC.cpp AnyTypeCode/AnySeqC.h: AnyTypeCode/AnySeq-stamp

AnyTypeCode/AnySeq-stamp: $(srcdir)/AnyTypeCode/AnySeq.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -GA -Wb,export_macro=TAO_AnyTypeCode_Export -Wb,export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -o AnyTypeCode -Sorb $(srcdir)/AnyTypeCode/AnySeq.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/Dynamic_ParameterA.cpp \
  AnyTypeCode/Dynamic_ParameterA.h \
  AnyTypeCode/Dynamic_ParameterC.cpp \
  AnyTypeCode/Dynamic_ParameterC.h

CLEANFILES += \
  AnyTypeCode/Dynamic_Parameter-stamp \
  AnyTypeCode/Dynamic_ParameterA.cpp \
  AnyTypeCode/Dynamic_ParameterA.h \
  AnyTypeCode/Dynamic_ParameterC.cpp \
  AnyTypeCode/Dynamic_ParameterC.h

AnyTypeCode/Dynamic_ParameterA.cpp AnyTypeCode/Dynamic_ParameterA.h AnyTypeCode/Dynamic_ParameterC.cpp AnyTypeCode/Dynamic_ParameterC.h: AnyTypeCode/Dynamic_Parameter-stamp

AnyTypeCode/Dynamic_Parameter-stamp: $(srcdir)/AnyTypeCode/Dynamic_Parameter.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -GA -Wb,export_macro=TAO_AnyTypeCode_Export -Wb,export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -o AnyTypeCode -Sorb $(srcdir)/AnyTypeCode/Dynamic_Parameter.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/ValueModifierA.cpp \
  AnyTypeCode/ValueModifierA.h \
  AnyTypeCode/ValueModifierC.cpp \
  AnyTypeCode/ValueModifierC.h

CLEANFILES += \
  AnyTypeCode/ValueModifier-stamp \
  AnyTypeCode/ValueModifierA.cpp \
  AnyTypeCode/ValueModifierA.h \
  AnyTypeCode/ValueModifierC.cpp \
  AnyTypeCode/ValueModifierC.h

AnyTypeCode/ValueModifierA.cpp AnyTypeCode/ValueModifierA.h AnyTypeCode/ValueModifierC.cpp AnyTypeCode/ValueModifierC.h: AnyTypeCode/ValueModifier-stamp

AnyTypeCode/ValueModifier-stamp: $(srcdir)/AnyTypeCode/ValueModifier.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -GA -Wb,export_macro=TAO_AnyTypeCode_Export -Wb,export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -o AnyTypeCode -Sorb $(srcdir)/AnyTypeCode/ValueModifier.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/VisibilityA.cpp \
  AnyTypeCode/VisibilityA.h \
  AnyTypeCode/VisibilityC.cpp \
  AnyTypeCode/VisibilityC.h

CLEANFILES += \
  AnyTypeCode/Visibility-stamp \
  AnyTypeCode/VisibilityA.cpp \
  AnyTypeCode/VisibilityA.h \
  AnyTypeCode/VisibilityC.cpp \
  AnyTypeCode/VisibilityC.h

AnyTypeCode/VisibilityA.cpp AnyTypeCode/VisibilityA.h AnyTypeCode/VisibilityC.cpp AnyTypeCode/VisibilityC.h: AnyTypeCode/Visibility-stamp

AnyTypeCode/Visibility-stamp: $(srcdir)/AnyTypeCode/Visibility.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -GA -Wb,export_macro=TAO_AnyTypeCode_Export -Wb,export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -o AnyTypeCode -Sorb $(srcdir)/AnyTypeCode/Visibility.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/DynamicA.cpp \
  AnyTypeCode/DynamicA.h \
  AnyTypeCode/DynamicC.cpp \
  AnyTypeCode/DynamicC.h

CLEANFILES += \
  AnyTypeCode/Dynamic-stamp \
  AnyTypeCode/DynamicA.cpp \
  AnyTypeCode/DynamicA.h \
  AnyTypeCode/DynamicC.cpp \
  AnyTypeCode/DynamicC.h

AnyTypeCode/DynamicA.cpp AnyTypeCode/DynamicA.h AnyTypeCode/DynamicC.cpp AnyTypeCode/DynamicC.h: AnyTypeCode/Dynamic-stamp

AnyTypeCode/Dynamic-stamp: $(srcdir)/AnyTypeCode/Dynamic.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -GA -Wb,export_macro=TAO_AnyTypeCode_Export -Wb,export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -o AnyTypeCode -Sorb $(srcdir)/AnyTypeCode/Dynamic.pidl
	@touch $@

BUILT_SOURCES += \
  AnyTypeCode/BoundsA.cpp \
  AnyTypeCode/BoundsA.h \
  AnyTypeCode/BoundsC.cpp \
  AnyTypeCode/BoundsC.h

CLEANFILES += \
  AnyTypeCode/Bounds-stamp \
  AnyTypeCode/BoundsA.cpp \
  AnyTypeCode/BoundsA.h \
  AnyTypeCode/BoundsC.cpp \
  AnyTypeCode/BoundsC.h

AnyTypeCode/BoundsA.cpp AnyTypeCode/BoundsA.h AnyTypeCode/BoundsC.cpp AnyTypeCode/BoundsC.h: AnyTypeCode/Bounds-stamp

AnyTypeCode/Bounds-stamp: $(srcdir)/AnyTypeCode/Bounds.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -GA -Wb,export_macro=TAO_AnyTypeCode_Export -Wb,export_include=tao/AnyTypeCode/TAO_AnyTypeCode_Export.h -o AnyTypeCode $(srcdir)/AnyTypeCode/Bounds.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_AnyTypeCode.la

libTAO_AnyTypeCode_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_ANYTYPECODE_BUILD_DLL

libTAO_AnyTypeCode_la_SOURCES = \
  AnyTypeCode/Alias_TypeCode_Static.cpp \
  AnyTypeCode/Any.cpp \
  AnyTypeCode/AnySeqA.cpp \
  AnyTypeCode/AnySeqC.cpp \
  AnyTypeCode/AnyTypeCode_Adapter_Impl.cpp \
  AnyTypeCode/Any_Basic_Impl.cpp \
  AnyTypeCode/Any_Impl.cpp \
  AnyTypeCode/Any_SystemException.cpp \
  AnyTypeCode/Any_Unknown_IDL_Type.cpp \
  AnyTypeCode/BasicTypeTraits.cpp \
  AnyTypeCode/BooleanSeqA.cpp \
  AnyTypeCode/BoundsA.cpp \
  AnyTypeCode/BoundsC.cpp \
  AnyTypeCode/CONV_FRAMEA.cpp \
  AnyTypeCode/CharSeqA.cpp \
  AnyTypeCode/CurrentA.cpp \
  AnyTypeCode/DoubleSeqA.cpp \
  AnyTypeCode/DynamicA.cpp \
  AnyTypeCode/DynamicC.cpp \
  AnyTypeCode/Dynamic_ParameterA.cpp \
  AnyTypeCode/Dynamic_ParameterC.cpp \
  AnyTypeCode/Empty_Param_TypeCode.cpp \
  AnyTypeCode/Enum_TypeCode_Static.cpp \
  AnyTypeCode/ExceptionA.cpp \
  AnyTypeCode/FloatSeqA.cpp \
  AnyTypeCode/GIOPA.cpp \
  AnyTypeCode/IIOPA.cpp \
  AnyTypeCode/IIOP_EndpointsA.cpp \
  AnyTypeCode/IOPA.cpp \
  AnyTypeCode/LongDoubleSeqA.cpp \
  AnyTypeCode/LongLongSeqA.cpp \
  AnyTypeCode/LongSeqA.cpp \
  AnyTypeCode/Marshal.cpp \
  AnyTypeCode/Messaging_PolicyValueA.cpp \
  AnyTypeCode/NVList.cpp \
  AnyTypeCode/NVList_Adapter_Impl.cpp \
  AnyTypeCode/ObjectIdListA.cpp \
  AnyTypeCode/Objref_TypeCode_Static.cpp \
  AnyTypeCode/OctetSeqA.cpp \
  AnyTypeCode/PI_ForwardA.cpp \
  AnyTypeCode/ParameterModeA.cpp \
  AnyTypeCode/PolicyA.cpp \
  AnyTypeCode/Policy_CurrentA.cpp \
  AnyTypeCode/Policy_ForwardA.cpp \
  AnyTypeCode/Policy_ManagerA.cpp \
  AnyTypeCode/PortableInterceptorA.cpp \
  AnyTypeCode/Sequence_TypeCode_Static.cpp \
  AnyTypeCode/ServicesA.cpp \
  AnyTypeCode/ShortSeqA.cpp \
  AnyTypeCode/StringSeqA.cpp \
  AnyTypeCode/String_TypeCode_Static.cpp \
  AnyTypeCode/Struct_TypeCode_Static.cpp \
  AnyTypeCode/SystemExceptionA.cpp \
  AnyTypeCode/TAOA.cpp \
  AnyTypeCode/TimeBaseA.cpp \
  AnyTypeCode/True_RefCount_Policy.cpp \
  AnyTypeCode/TypeCode.cpp \
  AnyTypeCode/TypeCodeA.cpp \
  AnyTypeCode/TypeCode_CDR_Extraction.cpp \
  AnyTypeCode/TypeCode_Constants.cpp \
  AnyTypeCode/ULongLongSeqA.cpp \
  AnyTypeCode/ULongSeqA.cpp \
  AnyTypeCode/UShortSeqA.cpp \
  AnyTypeCode/Union_TypeCode_Static.cpp \
  AnyTypeCode/ValueModifierA.cpp \
  AnyTypeCode/ValueModifierC.cpp \
  AnyTypeCode/Value_TypeCode_Static.cpp \
  AnyTypeCode/VisibilityA.cpp \
  AnyTypeCode/VisibilityC.cpp \
  AnyTypeCode/WCharSeqA.cpp \
  AnyTypeCode/WStringSeqA.cpp \
  AnyTypeCode/WrongTransactionA.cpp \
  AnyTypeCode/append.cpp \
  AnyTypeCode/orb_typesA.cpp \
  AnyTypeCode/skip.cpp

libTAO_AnyTypeCode_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_AnyTypeCode_la_LIBADD = \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  AnyTypeCode/Alias_TypeCode.cpp \
  AnyTypeCode/Alias_TypeCode.h \
  AnyTypeCode/Alias_TypeCode.inl \
  AnyTypeCode/Alias_TypeCode_Static.h \
  AnyTypeCode/Alias_TypeCode_Static.inl \
  AnyTypeCode/Any.h \
  AnyTypeCode/Any.inl \
  AnyTypeCode/AnySeq.pidl \
  AnyTypeCode/AnySeqA.h \
  AnyTypeCode/AnySeqC.h \
  AnyTypeCode/AnyTypeCode_Adapter_Impl.h \
  AnyTypeCode/AnyTypeCode_methods.h \
  AnyTypeCode/Any_Arg_Traits.h \
  AnyTypeCode/Any_Array_Impl_T.cpp \
  AnyTypeCode/Any_Array_Impl_T.h \
  AnyTypeCode/Any_Array_Impl_T.inl \
  AnyTypeCode/Any_Basic_Impl.h \
  AnyTypeCode/Any_Basic_Impl_T.cpp \
  AnyTypeCode/Any_Basic_Impl_T.h \
  AnyTypeCode/Any_Basic_Impl_T.inl \
  AnyTypeCode/Any_Dual_Impl_T.cpp \
  AnyTypeCode/Any_Dual_Impl_T.h \
  AnyTypeCode/Any_Dual_Impl_T.inl \
  AnyTypeCode/Any_Impl.h \
  AnyTypeCode/Any_Impl_T.cpp \
  AnyTypeCode/Any_Impl_T.h \
  AnyTypeCode/Any_Impl_T.inl \
  AnyTypeCode/Any_Special_Impl_T.cpp \
  AnyTypeCode/Any_Special_Impl_T.h \
  AnyTypeCode/Any_Special_Impl_T.inl \
  AnyTypeCode/Any_SystemException.h \
  AnyTypeCode/Any_Unknown_IDL_Type.h \
  AnyTypeCode/BasicTypeTraits.h \
  AnyTypeCode/BasicTypeTraits_T.h \
  AnyTypeCode/BooleanSeqA.h \
  AnyTypeCode/Bounds.pidl \
  AnyTypeCode/BoundsA.h \
  AnyTypeCode/BoundsC.h \
  AnyTypeCode/CONV_FRAMEA.h \
  AnyTypeCode/CharSeqA.h \
  AnyTypeCode/CurrentA.h \
  AnyTypeCode/DoubleSeqA.h \
  AnyTypeCode/Dynamic.pidl \
  AnyTypeCode/DynamicA.h \
  AnyTypeCode/DynamicC.h \
  AnyTypeCode/Dynamic_Parameter.pidl \
  AnyTypeCode/Dynamic_ParameterA.h \
  AnyTypeCode/Dynamic_ParameterC.h \
  AnyTypeCode/Empty_Param_TypeCode.h \
  AnyTypeCode/Empty_Param_TypeCode.inl \
  AnyTypeCode/Enum_TypeCode.cpp \
  AnyTypeCode/Enum_TypeCode.h \
  AnyTypeCode/Enum_TypeCode.inl \
  AnyTypeCode/Enum_TypeCode_Static.h \
  AnyTypeCode/Enum_TypeCode_Static.inl \
  AnyTypeCode/ExceptionA.h \
  AnyTypeCode/Fixed_TypeCode.cpp \
  AnyTypeCode/Fixed_TypeCode.h \
  AnyTypeCode/Fixed_TypeCode.inl \
  AnyTypeCode/FloatSeqA.h \
  AnyTypeCode/GIOPA.h \
  AnyTypeCode/IIOPA.h \
  AnyTypeCode/IIOP_EndpointsA.h \
  AnyTypeCode/IOPA.h \
  AnyTypeCode/LongDoubleSeqA.h \
  AnyTypeCode/LongLongSeqA.h \
  AnyTypeCode/LongSeqA.h \
  AnyTypeCode/Marshal.h \
  AnyTypeCode/Marshal.inl \
  AnyTypeCode/Messaging_PolicyValueA.h \
  AnyTypeCode/Messaging_SyncScopeA.h \
  AnyTypeCode/NVList.h \
  AnyTypeCode/NVList.inl \
  AnyTypeCode/NVList_Adapter_Impl.h \
  AnyTypeCode/Null_RefCount_Policy.h \
  AnyTypeCode/ObjectIdListA.h \
  AnyTypeCode/Objref_TypeCode.cpp \
  AnyTypeCode/Objref_TypeCode.h \
  AnyTypeCode/Objref_TypeCode.inl \
  AnyTypeCode/Objref_TypeCode_Static.h \
  AnyTypeCode/Objref_TypeCode_Static.inl \
  AnyTypeCode/OctetSeqA.h \
  AnyTypeCode/PI_ForwardA.h \
  AnyTypeCode/ParameterModeA.h \
  AnyTypeCode/PolicyA.h \
  AnyTypeCode/Policy_CurrentA.h \
  AnyTypeCode/Policy_ForwardA.h \
  AnyTypeCode/Policy_ManagerA.h \
  AnyTypeCode/PortableInterceptorA.h \
  AnyTypeCode/Recursive_Type_TypeCode.cpp \
  AnyTypeCode/Recursive_Type_TypeCode.h \
  AnyTypeCode/Recursive_Type_TypeCode.inl \
  AnyTypeCode/RefCount_Policy_Traits.h \
  AnyTypeCode/Sequence_TypeCode.cpp \
  AnyTypeCode/Sequence_TypeCode.h \
  AnyTypeCode/Sequence_TypeCode.inl \
  AnyTypeCode/Sequence_TypeCode_Static.h \
  AnyTypeCode/Sequence_TypeCode_Static.inl \
  AnyTypeCode/ServicesA.h \
  AnyTypeCode/ShortSeqA.h \
  AnyTypeCode/StringSeqA.h \
  AnyTypeCode/String_TypeCode.cpp \
  AnyTypeCode/String_TypeCode.h \
  AnyTypeCode/String_TypeCode.inl \
  AnyTypeCode/String_TypeCode_Static.h \
  AnyTypeCode/String_TypeCode_Static.inl \
  AnyTypeCode/String_TypeCode_Traits.h \
  AnyTypeCode/Struct_TypeCode.cpp \
  AnyTypeCode/Struct_TypeCode.h \
  AnyTypeCode/Struct_TypeCode.inl \
  AnyTypeCode/Struct_TypeCode_Static.h \
  AnyTypeCode/Struct_TypeCode_Static.inl \
  AnyTypeCode/SystemExceptionA.h \
  AnyTypeCode/TAOA.h \
  AnyTypeCode/TAO_AnyTypeCode_Export.h \
  AnyTypeCode/TC_Constants_Forward.h \
  AnyTypeCode/TimeBaseA.h \
  AnyTypeCode/True_RefCount_Policy.h \
  AnyTypeCode/True_RefCount_Policy.inl \
  AnyTypeCode/TypeCode.h \
  AnyTypeCode/TypeCode.inl \
  AnyTypeCode/TypeCode_Base_Attributes.cpp \
  AnyTypeCode/TypeCode_Base_Attributes.h \
  AnyTypeCode/TypeCode_Base_Attributes.inl \
  AnyTypeCode/TypeCode_CDR_Extraction.h \
  AnyTypeCode/TypeCode_Case_Base_T.cpp \
  AnyTypeCode/TypeCode_Case_Base_T.h \
  AnyTypeCode/TypeCode_Case_Base_T.inl \
  AnyTypeCode/TypeCode_Case_Enum_T.cpp \
  AnyTypeCode/TypeCode_Case_Enum_T.h \
  AnyTypeCode/TypeCode_Case_Enum_T.inl \
  AnyTypeCode/TypeCode_Case_T.cpp \
  AnyTypeCode/TypeCode_Case_T.h \
  AnyTypeCode/TypeCode_Case_T.inl \
  AnyTypeCode/TypeCode_Constants.h \
  AnyTypeCode/TypeCode_Struct_Field.h \
  AnyTypeCode/TypeCode_Traits.h \
  AnyTypeCode/TypeCode_Value_Field.h \
  AnyTypeCode/Typecode_typesA.h \
  AnyTypeCode/ULongLongSeqA.h \
  AnyTypeCode/ULongSeqA.h \
  AnyTypeCode/UShortSeqA.h \
  AnyTypeCode/Union_TypeCode.cpp \
  AnyTypeCode/Union_TypeCode.h \
  AnyTypeCode/Union_TypeCode.inl \
  AnyTypeCode/Union_TypeCode_Static.h \
  AnyTypeCode/Union_TypeCode_Static.inl \
  AnyTypeCode/ValueModifier.pidl \
  AnyTypeCode/ValueModifierA.h \
  AnyTypeCode/ValueModifierC.h \
  AnyTypeCode/Value_TypeCode.cpp \
  AnyTypeCode/Value_TypeCode.h \
  AnyTypeCode/Value_TypeCode.inl \
  AnyTypeCode/Value_TypeCode_Static.h \
  AnyTypeCode/Value_TypeCode_Static.inl \
  AnyTypeCode/Visibility.pidl \
  AnyTypeCode/VisibilityA.h \
  AnyTypeCode/VisibilityC.h \
  AnyTypeCode/WCharSeqA.h \
  AnyTypeCode/WStringSeqA.h \
  AnyTypeCode/WrongTransactionA.h \
  AnyTypeCode/orb_typesA.h

pkgconfig_DATA += \
  TAO_AnyTypeCode.pc

CLEANFILES += \
  TAO_AnyTypeCode.pc

TAO_AnyTypeCode.pc: ${top_builddir}/config.status ${srcdir}/AnyTypeCode/TAO_AnyTypeCode.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/AnyTypeCode/TAO_AnyTypeCode.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  AnyTypeCode/TAO_AnyTypeCode.pc.in


## Makefile.CodecFactory.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  CodecFactory/IOP_CodecA.h \
  CodecFactory/IOP_CodecC.cpp \
  CodecFactory/IOP_CodecC.h \
  CodecFactory/IOP_CodecS.h

CLEANFILES += \
  CodecFactory/IOP_Codec-stamp \
  CodecFactory/IOP_CodecA.h \
  CodecFactory/IOP_CodecC.cpp \
  CodecFactory/IOP_CodecC.h \
  CodecFactory/IOP_CodecS.h

CodecFactory/IOP_CodecA.h CodecFactory/IOP_CodecC.cpp CodecFactory/IOP_CodecC.h CodecFactory/IOP_CodecS.h: CodecFactory/IOP_Codec-stamp

CodecFactory/IOP_Codec-stamp: $(srcdir)/CodecFactory/IOP_Codec.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Sal -GX -Wb,export_macro=TAO_CodecFactory_Export -Wb,export_include=tao/CodecFactory/codecfactory_export.h -Wb,include_guard=TAO_CODECFACTORY_SAFE_INCLUDE -Wb,safe_include=tao/CodecFactory/CodecFactory.h -o CodecFactory $(srcdir)/CodecFactory/IOP_Codec.pidl
	@touch $@

BUILT_SOURCES += \
  CodecFactory/IOP_Codec_includeA.h \
  CodecFactory/IOP_Codec_includeC.cpp \
  CodecFactory/IOP_Codec_includeC.h \
  CodecFactory/IOP_Codec_includeS.h

CLEANFILES += \
  CodecFactory/IOP_Codec_include-stamp \
  CodecFactory/IOP_Codec_includeA.h \
  CodecFactory/IOP_Codec_includeC.cpp \
  CodecFactory/IOP_Codec_includeC.h \
  CodecFactory/IOP_Codec_includeS.h

CodecFactory/IOP_Codec_includeA.h CodecFactory/IOP_Codec_includeC.cpp CodecFactory/IOP_Codec_includeC.h CodecFactory/IOP_Codec_includeS.h: CodecFactory/IOP_Codec_include-stamp

CodecFactory/IOP_Codec_include-stamp: $(srcdir)/CodecFactory/IOP_Codec_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Sorb -Sa -GX -Wb,export_macro=TAO_CodecFactory_Export -Wb,export_include=tao/CodecFactory/codecfactory_export.h -Wb,unique_include=tao/CodecFactory/CodecFactory.h -o CodecFactory $(srcdir)/CodecFactory/IOP_Codec_include.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_CodecFactory.la

libTAO_CodecFactory_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_CODECFACTORY_BUILD_DLL

libTAO_CodecFactory_la_SOURCES = \
  CodecFactory/CDR_Encaps_Codec.cpp \
  CodecFactory/CodecFactory.cpp \
  CodecFactory/CodecFactory_impl.cpp \
  CodecFactory/IOP_CodecC.cpp \
  CodecFactory/IOP_Codec_includeC.cpp

libTAO_CodecFactory_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_CodecFactory_la_LIBADD = \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  CodecFactory/CDR_Encaps_Codec.h \
  CodecFactory/CodecFactory.h \
  CodecFactory/CodecFactory_impl.h \
  CodecFactory/IOP_Codec.pidl \
  CodecFactory/IOP_Codec.pidl \
  CodecFactory/IOP_CodecA.h \
  CodecFactory/IOP_CodecC.h \
  CodecFactory/IOP_CodecS.h \
  CodecFactory/IOP_Codec_include.pidl \
  CodecFactory/IOP_Codec_include.pidl \
  CodecFactory/IOP_Codec_includeA.h \
  CodecFactory/IOP_Codec_includeC.h \
  CodecFactory/IOP_Codec_includeS.h \
  CodecFactory/codecfactory_export.h

pkgconfig_DATA += \
  TAO_CodecFactory.pc

CLEANFILES += \
  TAO_CodecFactory.pc

TAO_CodecFactory.pc: ${top_builddir}/config.status ${srcdir}/CodecFactory/TAO_CodecFactory.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/CodecFactory/TAO_CodecFactory.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  CodecFactory/TAO_CodecFactory.pc.in \
  CodecFactory/TAO_CodecFactory.rc


## Makefile.PI.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  PI/PI_includeA.h \
  PI/PI_includeC.cpp \
  PI/PI_includeC.h \
  PI/PI_includeS.h

CLEANFILES += \
  PI/PI_include-stamp \
  PI/PI_includeA.h \
  PI/PI_includeC.cpp \
  PI/PI_includeC.h \
  PI/PI_includeS.h

PI/PI_includeA.h PI/PI_includeC.cpp PI/PI_includeC.h PI/PI_includeS.h: PI/PI_include-stamp

PI/PI_include-stamp: $(srcdir)/PI/PI_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -Sorb -GX -Wb,unique_include=tao/PI/PI.h $(srcdir)/PI/PI_include.pidl
	@touch $@

BUILT_SOURCES += \
  PI/ORBInitInfoA.h \
  PI/ORBInitInfoC.cpp \
  PI/ORBInitInfoC.h \
  PI/ORBInitInfoS.h

CLEANFILES += \
  PI/ORBInitInfo-stamp \
  PI/ORBInitInfoA.h \
  PI/ORBInitInfoC.cpp \
  PI/ORBInitInfoC.h \
  PI/ORBInitInfoS.h

PI/ORBInitInfoA.h PI/ORBInitInfoC.cpp PI/ORBInitInfoC.h PI/ORBInitInfoS.h: PI/ORBInitInfo-stamp

PI/ORBInitInfo-stamp: $(srcdir)/PI/ORBInitInfo.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -Sorb -Sal -GX -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/ORBInitInfo.pidl
	@touch $@

BUILT_SOURCES += \
  PI/ORBInitializerA.cpp \
  PI/ORBInitializerA.h \
  PI/ORBInitializerC.cpp \
  PI/ORBInitializerC.h \
  PI/ORBInitializerS.h

CLEANFILES += \
  PI/ORBInitializer-stamp \
  PI/ORBInitializerA.cpp \
  PI/ORBInitializerA.h \
  PI/ORBInitializerC.cpp \
  PI/ORBInitializerC.h \
  PI/ORBInitializerS.h

PI/ORBInitializerA.cpp PI/ORBInitializerA.h PI/ORBInitializerC.cpp PI/ORBInitializerC.h PI/ORBInitializerS.h: PI/ORBInitializer-stamp

PI/ORBInitializer-stamp: $(srcdir)/PI/ORBInitializer.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sorb -Sal -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/ORBInitializer.pidl
	@touch $@

BUILT_SOURCES += \
  PI/ClientRequestInterceptorA.cpp \
  PI/ClientRequestInterceptorA.h \
  PI/ClientRequestInterceptorC.cpp \
  PI/ClientRequestInterceptorC.h \
  PI/ClientRequestInterceptorS.h

CLEANFILES += \
  PI/ClientRequestInterceptor-stamp \
  PI/ClientRequestInterceptorA.cpp \
  PI/ClientRequestInterceptorA.h \
  PI/ClientRequestInterceptorC.cpp \
  PI/ClientRequestInterceptorC.h \
  PI/ClientRequestInterceptorS.h

PI/ClientRequestInterceptorA.cpp PI/ClientRequestInterceptorA.h PI/ClientRequestInterceptorC.cpp PI/ClientRequestInterceptorC.h PI/ClientRequestInterceptorS.h: PI/ClientRequestInterceptor-stamp

PI/ClientRequestInterceptor-stamp: $(srcdir)/PI/ClientRequestInterceptor.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sorb -Sal -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/ClientRequestInterceptor.pidl
	@touch $@

BUILT_SOURCES += \
  PI/ClientRequestInfoA.cpp \
  PI/ClientRequestInfoA.h \
  PI/ClientRequestInfoC.cpp \
  PI/ClientRequestInfoC.h \
  PI/ClientRequestInfoS.h

CLEANFILES += \
  PI/ClientRequestInfo-stamp \
  PI/ClientRequestInfoA.cpp \
  PI/ClientRequestInfoA.h \
  PI/ClientRequestInfoC.cpp \
  PI/ClientRequestInfoC.h \
  PI/ClientRequestInfoS.h

PI/ClientRequestInfoA.cpp PI/ClientRequestInfoA.h PI/ClientRequestInfoC.cpp PI/ClientRequestInfoC.h PI/ClientRequestInfoS.h: PI/ClientRequestInfo-stamp

PI/ClientRequestInfo-stamp: $(srcdir)/PI/ClientRequestInfo.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sorb -Sal -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/ClientRequestInfo.pidl
	@touch $@

BUILT_SOURCES += \
  PI/RequestInfoA.cpp \
  PI/RequestInfoA.h \
  PI/RequestInfoC.cpp \
  PI/RequestInfoC.h \
  PI/RequestInfoS.h

CLEANFILES += \
  PI/RequestInfo-stamp \
  PI/RequestInfoA.cpp \
  PI/RequestInfoA.h \
  PI/RequestInfoC.cpp \
  PI/RequestInfoC.h \
  PI/RequestInfoS.h

PI/RequestInfoA.cpp PI/RequestInfoA.h PI/RequestInfoC.cpp PI/RequestInfoC.h PI/RequestInfoS.h: PI/RequestInfo-stamp

PI/RequestInfo-stamp: $(srcdir)/PI/RequestInfo.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sorb -Sal -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/RequestInfo.pidl
	@touch $@

BUILT_SOURCES += \
  PI/PIForwardRequestA.cpp \
  PI/PIForwardRequestA.h \
  PI/PIForwardRequestC.cpp \
  PI/PIForwardRequestC.h \
  PI/PIForwardRequestS.h

CLEANFILES += \
  PI/PIForwardRequest-stamp \
  PI/PIForwardRequestA.cpp \
  PI/PIForwardRequestA.h \
  PI/PIForwardRequestC.cpp \
  PI/PIForwardRequestC.h \
  PI/PIForwardRequestS.h

PI/PIForwardRequestA.cpp PI/PIForwardRequestA.h PI/PIForwardRequestC.cpp PI/PIForwardRequestC.h PI/PIForwardRequestS.h: PI/PIForwardRequest-stamp

PI/PIForwardRequest-stamp: $(srcdir)/PI/PIForwardRequest.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sorb -Sal -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/PIForwardRequest.pidl
	@touch $@

BUILT_SOURCES += \
  PI/PICurrentA.cpp \
  PI/PICurrentA.h \
  PI/PICurrentC.cpp \
  PI/PICurrentC.h \
  PI/PICurrentS.h

CLEANFILES += \
  PI/PICurrent-stamp \
  PI/PICurrentA.cpp \
  PI/PICurrentA.h \
  PI/PICurrentC.cpp \
  PI/PICurrentC.h \
  PI/PICurrentS.h

PI/PICurrentA.cpp PI/PICurrentA.h PI/PICurrentC.cpp PI/PICurrentC.h PI/PICurrentS.h: PI/PICurrent-stamp

PI/PICurrent-stamp: $(srcdir)/PI/PICurrent.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sorb -Sal -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/PICurrent.pidl
	@touch $@

BUILT_SOURCES += \
  PI/ProcessingModePolicyA.cpp \
  PI/ProcessingModePolicyA.h \
  PI/ProcessingModePolicyC.cpp \
  PI/ProcessingModePolicyC.h \
  PI/ProcessingModePolicyS.h

CLEANFILES += \
  PI/ProcessingModePolicy-stamp \
  PI/ProcessingModePolicyA.cpp \
  PI/ProcessingModePolicyA.h \
  PI/ProcessingModePolicyC.cpp \
  PI/ProcessingModePolicyC.h \
  PI/ProcessingModePolicyS.h

PI/ProcessingModePolicyA.cpp PI/ProcessingModePolicyA.h PI/ProcessingModePolicyC.cpp PI/ProcessingModePolicyC.h PI/ProcessingModePolicyS.h: PI/ProcessingModePolicy-stamp

PI/ProcessingModePolicy-stamp: $(srcdir)/PI/ProcessingModePolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sorb -Sal -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/ProcessingModePolicy.pidl
	@touch $@

BUILT_SOURCES += \
  PI/InterceptorA.cpp \
  PI/InterceptorA.h \
  PI/InterceptorC.cpp \
  PI/InterceptorC.h \
  PI/InterceptorS.h

CLEANFILES += \
  PI/Interceptor-stamp \
  PI/InterceptorA.cpp \
  PI/InterceptorA.h \
  PI/InterceptorC.cpp \
  PI/InterceptorC.h \
  PI/InterceptorS.h

PI/InterceptorA.cpp PI/InterceptorA.h PI/InterceptorC.cpp PI/InterceptorC.h PI/InterceptorS.h: PI/Interceptor-stamp

PI/Interceptor-stamp: $(srcdir)/PI/Interceptor.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sorb -Sal $(srcdir)/PI/Interceptor.pidl
	@touch $@

BUILT_SOURCES += \
  PI/InvalidSlotA.cpp \
  PI/InvalidSlotA.h \
  PI/InvalidSlotC.cpp \
  PI/InvalidSlotC.h \
  PI/InvalidSlotS.h

CLEANFILES += \
  PI/InvalidSlot-stamp \
  PI/InvalidSlotA.cpp \
  PI/InvalidSlotA.h \
  PI/InvalidSlotC.cpp \
  PI/InvalidSlotC.h \
  PI/InvalidSlotS.h

PI/InvalidSlotA.cpp PI/InvalidSlotA.h PI/InvalidSlotC.cpp PI/InvalidSlotC.h PI/InvalidSlotS.h: PI/InvalidSlot-stamp

PI/InvalidSlot-stamp: $(srcdir)/PI/InvalidSlot.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Gp -Gd -Wb,export_macro=TAO_PI_Export -Wb,export_include=tao/PI/pi_export.h -o PI -GA -Sal -Wb,include_guard=TAO_PI_SAFE_INCLUDE -Wb,safe_include=tao/PI/PI.h $(srcdir)/PI/InvalidSlot.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_PI.la

libTAO_PI_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_PI_BUILD_DLL

libTAO_PI_la_SOURCES = \
  PI/ClientRequestDetails.cpp \
  PI/ClientRequestInfo.cpp \
  PI/ClientRequestInfoA.cpp \
  PI/ClientRequestInfoC.cpp \
  PI/ClientRequestInterceptorA.cpp \
  PI/ClientRequestInterceptorC.cpp \
  PI/ClientRequestInterceptor_Adapter_Impl.cpp \
  PI/ClientRequestInterceptor_Factory_Impl.cpp \
  PI/DLL_Resident_ORB_Initializer.cpp \
  PI/InterceptorA.cpp \
  PI/InterceptorC.cpp \
  PI/InvalidSlotA.cpp \
  PI/InvalidSlotC.cpp \
  PI/ORBInitInfo.cpp \
  PI/ORBInitInfoC.cpp \
  PI/ORBInitializerA.cpp \
  PI/ORBInitializerC.cpp \
  PI/ORBInitializer_Registry_Impl.cpp \
  PI/PI.cpp \
  PI/PICurrent.cpp \
  PI/PICurrentA.cpp \
  PI/PICurrentC.cpp \
  PI/PICurrent_Impl.cpp \
  PI/PICurrent_Loader.cpp \
  PI/PIForwardRequestA.cpp \
  PI/PIForwardRequestC.cpp \
  PI/PI_ORBInitializer.cpp \
  PI/PI_PolicyFactory.cpp \
  PI/PI_includeC.cpp \
  PI/PolicyFactoryA.cpp \
  PI/PolicyFactoryC.cpp \
  PI/PolicyFactory_Loader.cpp \
  PI/PolicyFactory_Registry.cpp \
  PI/ProcessingModePolicy.cpp \
  PI/ProcessingModePolicyA.cpp \
  PI/ProcessingModePolicyC.cpp \
  PI/RequestInfoA.cpp \
  PI/RequestInfoC.cpp \
  PI/RequestInfo_Util.cpp \
  PI/RequestInterceptor_Adapter_Impl.cpp

libTAO_PI_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_PI_la_LIBADD = \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  PI/ClientRequestDetails.h \
  PI/ClientRequestDetails.inl \
  PI/ClientRequestInfo.h \
  PI/ClientRequestInfo.pidl \
  PI/ClientRequestInfo.pidl \
  PI/ClientRequestInfoA.h \
  PI/ClientRequestInfoC.h \
  PI/ClientRequestInfoS.h \
  PI/ClientRequestInterceptor.pidl \
  PI/ClientRequestInterceptor.pidl \
  PI/ClientRequestInterceptorA.h \
  PI/ClientRequestInterceptorC.h \
  PI/ClientRequestInterceptorS.h \
  PI/ClientRequestInterceptor_Adapter_Impl.h \
  PI/ClientRequestInterceptor_Adapter_Impl.inl \
  PI/ClientRequestInterceptor_Factory_Impl.h \
  PI/DLL_Resident_ORB_Initializer.h \
  PI/Interceptor.pidl \
  PI/Interceptor.pidl \
  PI/InterceptorA.h \
  PI/InterceptorC.h \
  PI/InterceptorS.h \
  PI/Interceptor_List_T.cpp \
  PI/Interceptor_List_T.h \
  PI/InvalidSlot.pidl \
  PI/InvalidSlot.pidl \
  PI/InvalidSlotA.h \
  PI/InvalidSlotC.h \
  PI/InvalidSlotS.h \
  PI/ORBInitInfo.h \
  PI/ORBInitInfo.inl \
  PI/ORBInitInfo.pidl \
  PI/ORBInitInfo.pidl \
  PI/ORBInitInfoA.h \
  PI/ORBInitInfoC.h \
  PI/ORBInitInfoS.h \
  PI/ORBInitializer.pidl \
  PI/ORBInitializer.pidl \
  PI/ORBInitializerA.h \
  PI/ORBInitializerC.h \
  PI/ORBInitializerS.h \
  PI/ORBInitializer_Registry_Impl.h \
  PI/PI.h \
  PI/PICurrent.h \
  PI/PICurrent.inl \
  PI/PICurrent.pidl \
  PI/PICurrent.pidl \
  PI/PICurrentA.h \
  PI/PICurrentC.h \
  PI/PICurrentS.h \
  PI/PICurrent_Impl.h \
  PI/PICurrent_Impl.inl \
  PI/PICurrent_Loader.h \
  PI/PIForwardRequest.pidl \
  PI/PIForwardRequest.pidl \
  PI/PIForwardRequestA.h \
  PI/PIForwardRequestC.h \
  PI/PIForwardRequestS.h \
  PI/PI_ORBInitializer.h \
  PI/PI_PolicyFactory.h \
  PI/PI_include.pidl \
  PI/PI_include.pidl \
  PI/PI_includeA.h \
  PI/PI_includeC.h \
  PI/PI_includeS.h \
  PI/PolicyFactory.pidl \
  PI/PolicyFactoryA.h \
  PI/PolicyFactoryC.h \
  PI/PolicyFactoryS.h \
  PI/PolicyFactory_Loader.h \
  PI/PolicyFactory_Registry.h \
  PI/ProcessingModePolicy.h \
  PI/ProcessingModePolicy.pidl \
  PI/ProcessingModePolicy.pidl \
  PI/ProcessingModePolicyA.h \
  PI/ProcessingModePolicyC.h \
  PI/ProcessingModePolicyS.h \
  PI/RequestInfo.pidl \
  PI/RequestInfo.pidl \
  PI/RequestInfoA.h \
  PI/RequestInfoC.h \
  PI/RequestInfoS.h \
  PI/RequestInfo_Util.h \
  PI/RequestInterceptor_Adapter_Impl.h \
  PI/pi_export.h

pkgconfig_DATA += \
  TAO_PI.pc

CLEANFILES += \
  TAO_PI.pc

TAO_PI.pc: ${top_builddir}/config.status ${srcdir}/PI/TAO_PI.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/PI/TAO_PI.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  PI/TAO_PI.pc.in


## Makefile.BiDir_GIOP.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  BiDir_GIOP/BiDirPolicyC.cpp \
  BiDir_GIOP/BiDirPolicyC.h \
  BiDir_GIOP/BiDirPolicyS.h

CLEANFILES += \
  BiDir_GIOP/BiDirPolicy-stamp \
  BiDir_GIOP/BiDirPolicyC.cpp \
  BiDir_GIOP/BiDirPolicyC.h \
  BiDir_GIOP/BiDirPolicyS.h

BiDir_GIOP/BiDirPolicyC.cpp BiDir_GIOP/BiDirPolicyC.h BiDir_GIOP/BiDirPolicyS.h: BiDir_GIOP/BiDirPolicy-stamp

BiDir_GIOP/BiDirPolicy-stamp: $(srcdir)/BiDir_GIOP/BiDirPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Sa -St -Wb,export_macro=TAO_BiDirGIOP_Export -Wb,export_include=tao/BiDir_GIOP/bidirgiop_export.h -Wb,include_guard=TAO_BIDIRGIOP_SAFE_INCLUDE -Wb,safe_include=tao/BiDir_GIOP/BiDirGIOP.h -o BiDir_GIOP $(srcdir)/BiDir_GIOP/BiDirPolicy.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_BiDirGIOP.la

libTAO_BiDirGIOP_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_BIDIRGIOP_BUILD_DLL

libTAO_BiDirGIOP_la_SOURCES = \
  BiDir_GIOP/BiDirGIOP.cpp \
  BiDir_GIOP/BiDirPolicyC.cpp \
  BiDir_GIOP/BiDirPolicy_Validator.cpp \
  BiDir_GIOP/BiDir_ORBInitializer.cpp \
  BiDir_GIOP/BiDir_PolicyFactory.cpp \
  BiDir_GIOP/BiDir_Policy_i.cpp \
  BiDir_GIOP/BiDir_Service_Context_Handler.cpp

libTAO_BiDirGIOP_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_BiDirGIOP_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  BiDir_GIOP/BiDirGIOP.h \
  BiDir_GIOP/BiDirPolicy.pidl \
  BiDir_GIOP/BiDirPolicy.pidl \
  BiDir_GIOP/BiDirPolicyC.h \
  BiDir_GIOP/BiDirPolicyS.h \
  BiDir_GIOP/BiDirPolicy_Validator.h \
  BiDir_GIOP/BiDir_ORBInitializer.h \
  BiDir_GIOP/BiDir_PolicyFactory.h \
  BiDir_GIOP/BiDir_Policy_i.h \
  BiDir_GIOP/BiDir_Service_Context_Handler.h \
  BiDir_GIOP/bidirgiop_export.h

pkgconfig_DATA += \
  TAO_BiDirGIOP.pc

CLEANFILES += \
  TAO_BiDirGIOP.pc

TAO_BiDirGIOP.pc: ${top_builddir}/config.status ${srcdir}/BiDir_GIOP/TAO_BiDirGIOP.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/BiDir_GIOP/TAO_BiDirGIOP.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  BiDir_GIOP/TAO_BiDirGIOP.pc.in \
  BiDir_GIOP/TAO_BiDir_GIOP.rc


## Makefile.Compression.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  Compression/CompressionA.cpp \
  Compression/CompressionA.h \
  Compression/CompressionC.cpp \
  Compression/CompressionC.h \
  Compression/CompressionS.h

CLEANFILES += \
  Compression/Compression-stamp \
  Compression/CompressionA.cpp \
  Compression/CompressionA.h \
  Compression/CompressionC.cpp \
  Compression/CompressionC.h \
  Compression/CompressionS.h

Compression/CompressionA.cpp Compression/CompressionA.h Compression/CompressionC.cpp Compression/CompressionC.h Compression/CompressionS.h: Compression/Compression-stamp

Compression/Compression-stamp: $(srcdir)/Compression/Compression.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -Sci -GA -Wb,export_macro=TAO_Compression_Export -o Compression -Gp -Gd -Sal -Wb,export_macro=TAO_Compression_Export -Wb,export_include=tao/Compression/compression_export.h -Wb,include_guard=TAO_COMPRESSION_SAFE_INCLUDE -Wb,safe_include=tao/Compression/Compression.h $(srcdir)/Compression/Compression.pidl
	@touch $@

BUILT_SOURCES += \
  Compression/Compression_includeA.cpp \
  Compression/Compression_includeA.h \
  Compression/Compression_includeC.cpp \
  Compression/Compression_includeC.h \
  Compression/Compression_includeS.h

CLEANFILES += \
  Compression/Compression_include-stamp \
  Compression/Compression_includeA.cpp \
  Compression/Compression_includeA.h \
  Compression/Compression_includeC.cpp \
  Compression/Compression_includeC.h \
  Compression/Compression_includeS.h

Compression/Compression_includeA.cpp Compression/Compression_includeA.h Compression/Compression_includeC.cpp Compression/Compression_includeC.h Compression/Compression_includeS.h: Compression/Compression_include-stamp

Compression/Compression_include-stamp: $(srcdir)/Compression/Compression_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -Sci -GA -Wb,export_macro=TAO_Compression_Export -o Compression -Wb,export_include=tao/Compression/compression_export.h -Wb,unique_include=tao/Compression/Compression.h $(srcdir)/Compression/Compression_include.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_Compression.la

libTAO_Compression_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_COMPRESSION_BUILD_DLL

libTAO_Compression_la_SOURCES = \
  Compression/Base_Compressor.cpp \
  Compression/Compression.cpp \
  Compression/CompressionA.cpp \
  Compression/CompressionC.cpp \
  Compression/Compression_Manager.cpp \
  Compression/Compression_includeA.cpp \
  Compression/Compression_includeC.cpp \
  Compression/Compressor_Factory.cpp

libTAO_Compression_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_Compression_la_LIBADD = \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  Compression/Base_Compressor.h \
  Compression/Compression.h \
  Compression/Compression.pidl \
  Compression/Compression.pidl \
  Compression/CompressionA.h \
  Compression/CompressionC.h \
  Compression/CompressionS.h \
  Compression/Compression_Manager.h \
  Compression/Compression_include.pidl \
  Compression/Compression_include.pidl \
  Compression/Compression_includeA.h \
  Compression/Compression_includeC.h \
  Compression/Compression_includeS.h \
  Compression/Compressor_Factory.h \
  Compression/compression_export.h

pkgconfig_DATA += \
  TAO_Compression.pc

CLEANFILES += \
  TAO_Compression.pc

TAO_Compression.pc: ${top_builddir}/config.status ${srcdir}/Compression/TAO_Compression.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/Compression/TAO_Compression.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  Compression/TAO_Compression.pc.in \
  Compression/TAO_Compression.rc


## Makefile.Bzip2Compressor.am

if BUILD_BZIP2
if BUILD_EXCEPTIONS

lib_LTLIBRARIES += libTAO_Bzip2Compressor.la

libTAO_Bzip2Compressor_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  $(ACE_BZIP2_CPPFLAGS) \
  -DTAO_BZIP2COMPRESSOR_BUILD_DLL

libTAO_Bzip2Compressor_la_SOURCES = \
  Compression/bzip2/Bzip2Compressor.cpp \
  Compression/bzip2/Bzip2Compressor_Factory.cpp

libTAO_Bzip2Compressor_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@ $(ACE_BZIP2_LDFLAGS)

libTAO_Bzip2Compressor_la_LIBADD = \
  libTAO_Compression.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la \
  $(ACE_BZIP2_LIBS)

nobase_include_HEADERS += \
  Compression/bzip2/Bzip2Compressor.h \
  Compression/bzip2/Bzip2Compressor_Factory.h \
  Compression/bzip2/Bzip2Compressor_export.h

pkgconfig_DATA += \
  TAO_Bzip2Compressor.pc

CLEANFILES += \
  TAO_Bzip2Compressor.pc

TAO_Bzip2Compressor.pc: ${top_builddir}/config.status ${srcdir}/Compression/bzip2/TAO_Bzip2Compressor.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/Compression/bzip2/TAO_Bzip2Compressor.pc.in

endif BUILD_EXCEPTIONS
endif BUILD_BZIP2

EXTRA_DIST += \
  Compression/bzip2/TAO_Bzip2Compressor.pc.in \
  Compression/bzip2/TAO_Bzip2Compressor.rc


## Makefile.PortableServer.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  PortableServer/ForwardRequestA.cpp \
  PortableServer/ForwardRequestA.h \
  PortableServer/ForwardRequestC.cpp \
  PortableServer/ForwardRequestC.h \
  PortableServer/ForwardRequestS.h

CLEANFILES += \
  PortableServer/ForwardRequest-stamp \
  PortableServer/ForwardRequestA.cpp \
  PortableServer/ForwardRequestA.h \
  PortableServer/ForwardRequestC.cpp \
  PortableServer/ForwardRequestC.h \
  PortableServer/ForwardRequestS.h

PortableServer/ForwardRequestA.cpp PortableServer/ForwardRequestA.h PortableServer/ForwardRequestC.cpp PortableServer/ForwardRequestC.h PortableServer/ForwardRequestS.h: PortableServer/ForwardRequest-stamp

PortableServer/ForwardRequest-stamp: $(srcdir)/PortableServer/ForwardRequest.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/ForwardRequest.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/AdapterActivatorA.cpp \
  PortableServer/AdapterActivatorA.h \
  PortableServer/AdapterActivatorC.cpp \
  PortableServer/AdapterActivatorC.h \
  PortableServer/AdapterActivatorS.h

CLEANFILES += \
  PortableServer/AdapterActivator-stamp \
  PortableServer/AdapterActivatorA.cpp \
  PortableServer/AdapterActivatorA.h \
  PortableServer/AdapterActivatorC.cpp \
  PortableServer/AdapterActivatorC.h \
  PortableServer/AdapterActivatorS.h

PortableServer/AdapterActivatorA.cpp PortableServer/AdapterActivatorA.h PortableServer/AdapterActivatorC.cpp PortableServer/AdapterActivatorC.h PortableServer/AdapterActivatorS.h: PortableServer/AdapterActivator-stamp

PortableServer/AdapterActivator-stamp: $(srcdir)/PortableServer/AdapterActivator.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/AdapterActivator.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/IdAssignmentPolicyA.cpp \
  PortableServer/IdAssignmentPolicyA.h \
  PortableServer/IdAssignmentPolicyC.cpp \
  PortableServer/IdAssignmentPolicyC.h \
  PortableServer/IdAssignmentPolicyS.h

CLEANFILES += \
  PortableServer/IdAssignmentPolicy-stamp \
  PortableServer/IdAssignmentPolicyA.cpp \
  PortableServer/IdAssignmentPolicyA.h \
  PortableServer/IdAssignmentPolicyC.cpp \
  PortableServer/IdAssignmentPolicyC.h \
  PortableServer/IdAssignmentPolicyS.h

PortableServer/IdAssignmentPolicyA.cpp PortableServer/IdAssignmentPolicyA.h PortableServer/IdAssignmentPolicyC.cpp PortableServer/IdAssignmentPolicyC.h PortableServer/IdAssignmentPolicyS.h: PortableServer/IdAssignmentPolicy-stamp

PortableServer/IdAssignmentPolicy-stamp: $(srcdir)/PortableServer/IdAssignmentPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/IdAssignmentPolicy.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/IdUniquenessPolicyA.cpp \
  PortableServer/IdUniquenessPolicyA.h \
  PortableServer/IdUniquenessPolicyC.cpp \
  PortableServer/IdUniquenessPolicyC.h \
  PortableServer/IdUniquenessPolicyS.h

CLEANFILES += \
  PortableServer/IdUniquenessPolicy-stamp \
  PortableServer/IdUniquenessPolicyA.cpp \
  PortableServer/IdUniquenessPolicyA.h \
  PortableServer/IdUniquenessPolicyC.cpp \
  PortableServer/IdUniquenessPolicyC.h \
  PortableServer/IdUniquenessPolicyS.h

PortableServer/IdUniquenessPolicyA.cpp PortableServer/IdUniquenessPolicyA.h PortableServer/IdUniquenessPolicyC.cpp PortableServer/IdUniquenessPolicyC.h PortableServer/IdUniquenessPolicyS.h: PortableServer/IdUniquenessPolicy-stamp

PortableServer/IdUniquenessPolicy-stamp: $(srcdir)/PortableServer/IdUniquenessPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/IdUniquenessPolicy.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/ImplicitActivationPolicyA.cpp \
  PortableServer/ImplicitActivationPolicyA.h \
  PortableServer/ImplicitActivationPolicyC.cpp \
  PortableServer/ImplicitActivationPolicyC.h \
  PortableServer/ImplicitActivationPolicyS.h

CLEANFILES += \
  PortableServer/ImplicitActivationPolicy-stamp \
  PortableServer/ImplicitActivationPolicyA.cpp \
  PortableServer/ImplicitActivationPolicyA.h \
  PortableServer/ImplicitActivationPolicyC.cpp \
  PortableServer/ImplicitActivationPolicyC.h \
  PortableServer/ImplicitActivationPolicyS.h

PortableServer/ImplicitActivationPolicyA.cpp PortableServer/ImplicitActivationPolicyA.h PortableServer/ImplicitActivationPolicyC.cpp PortableServer/ImplicitActivationPolicyC.h PortableServer/ImplicitActivationPolicyS.h: PortableServer/ImplicitActivationPolicy-stamp

PortableServer/ImplicitActivationPolicy-stamp: $(srcdir)/PortableServer/ImplicitActivationPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/ImplicitActivationPolicy.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/LifespanPolicyA.cpp \
  PortableServer/LifespanPolicyA.h \
  PortableServer/LifespanPolicyC.cpp \
  PortableServer/LifespanPolicyC.h \
  PortableServer/LifespanPolicyS.h

CLEANFILES += \
  PortableServer/LifespanPolicy-stamp \
  PortableServer/LifespanPolicyA.cpp \
  PortableServer/LifespanPolicyA.h \
  PortableServer/LifespanPolicyC.cpp \
  PortableServer/LifespanPolicyC.h \
  PortableServer/LifespanPolicyS.h

PortableServer/LifespanPolicyA.cpp PortableServer/LifespanPolicyA.h PortableServer/LifespanPolicyC.cpp PortableServer/LifespanPolicyC.h PortableServer/LifespanPolicyS.h: PortableServer/LifespanPolicy-stamp

PortableServer/LifespanPolicy-stamp: $(srcdir)/PortableServer/LifespanPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/LifespanPolicy.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/RequestProcessingPolicyA.cpp \
  PortableServer/RequestProcessingPolicyA.h \
  PortableServer/RequestProcessingPolicyC.cpp \
  PortableServer/RequestProcessingPolicyC.h \
  PortableServer/RequestProcessingPolicyS.h

CLEANFILES += \
  PortableServer/RequestProcessingPolicy-stamp \
  PortableServer/RequestProcessingPolicyA.cpp \
  PortableServer/RequestProcessingPolicyA.h \
  PortableServer/RequestProcessingPolicyC.cpp \
  PortableServer/RequestProcessingPolicyC.h \
  PortableServer/RequestProcessingPolicyS.h

PortableServer/RequestProcessingPolicyA.cpp PortableServer/RequestProcessingPolicyA.h PortableServer/RequestProcessingPolicyC.cpp PortableServer/RequestProcessingPolicyC.h PortableServer/RequestProcessingPolicyS.h: PortableServer/RequestProcessingPolicy-stamp

PortableServer/RequestProcessingPolicy-stamp: $(srcdir)/PortableServer/RequestProcessingPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/RequestProcessingPolicy.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/ServantActivatorA.cpp \
  PortableServer/ServantActivatorA.h \
  PortableServer/ServantActivatorC.cpp \
  PortableServer/ServantActivatorC.h \
  PortableServer/ServantActivatorS.h

CLEANFILES += \
  PortableServer/ServantActivator-stamp \
  PortableServer/ServantActivatorA.cpp \
  PortableServer/ServantActivatorA.h \
  PortableServer/ServantActivatorC.cpp \
  PortableServer/ServantActivatorC.h \
  PortableServer/ServantActivatorS.h

PortableServer/ServantActivatorA.cpp PortableServer/ServantActivatorA.h PortableServer/ServantActivatorC.cpp PortableServer/ServantActivatorC.h PortableServer/ServantActivatorS.h: PortableServer/ServantActivator-stamp

PortableServer/ServantActivator-stamp: $(srcdir)/PortableServer/ServantActivator.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/ServantActivator.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/ServantLocatorA.cpp \
  PortableServer/ServantLocatorA.h \
  PortableServer/ServantLocatorC.cpp \
  PortableServer/ServantLocatorC.h \
  PortableServer/ServantLocatorS.h

CLEANFILES += \
  PortableServer/ServantLocator-stamp \
  PortableServer/ServantLocatorA.cpp \
  PortableServer/ServantLocatorA.h \
  PortableServer/ServantLocatorC.cpp \
  PortableServer/ServantLocatorC.h \
  PortableServer/ServantLocatorS.h

PortableServer/ServantLocatorA.cpp PortableServer/ServantLocatorA.h PortableServer/ServantLocatorC.cpp PortableServer/ServantLocatorC.h PortableServer/ServantLocatorS.h: PortableServer/ServantLocator-stamp

PortableServer/ServantLocator-stamp: $(srcdir)/PortableServer/ServantLocator.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/ServantLocator.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/ServantManagerA.cpp \
  PortableServer/ServantManagerA.h \
  PortableServer/ServantManagerC.cpp \
  PortableServer/ServantManagerC.h \
  PortableServer/ServantManagerS.h

CLEANFILES += \
  PortableServer/ServantManager-stamp \
  PortableServer/ServantManagerA.cpp \
  PortableServer/ServantManagerA.h \
  PortableServer/ServantManagerC.cpp \
  PortableServer/ServantManagerC.h \
  PortableServer/ServantManagerS.h

PortableServer/ServantManagerA.cpp PortableServer/ServantManagerA.h PortableServer/ServantManagerC.cpp PortableServer/ServantManagerC.h PortableServer/ServantManagerS.h: PortableServer/ServantManager-stamp

PortableServer/ServantManager-stamp: $(srcdir)/PortableServer/ServantManager.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/ServantManager.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/ServantRetentionPolicyA.cpp \
  PortableServer/ServantRetentionPolicyA.h \
  PortableServer/ServantRetentionPolicyC.cpp \
  PortableServer/ServantRetentionPolicyC.h \
  PortableServer/ServantRetentionPolicyS.h

CLEANFILES += \
  PortableServer/ServantRetentionPolicy-stamp \
  PortableServer/ServantRetentionPolicyA.cpp \
  PortableServer/ServantRetentionPolicyA.h \
  PortableServer/ServantRetentionPolicyC.cpp \
  PortableServer/ServantRetentionPolicyC.h \
  PortableServer/ServantRetentionPolicyS.h

PortableServer/ServantRetentionPolicyA.cpp PortableServer/ServantRetentionPolicyA.h PortableServer/ServantRetentionPolicyC.cpp PortableServer/ServantRetentionPolicyC.h PortableServer/ServantRetentionPolicyS.h: PortableServer/ServantRetentionPolicy-stamp

PortableServer/ServantRetentionPolicy-stamp: $(srcdir)/PortableServer/ServantRetentionPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/ServantRetentionPolicy.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/ThreadPolicyA.cpp \
  PortableServer/ThreadPolicyA.h \
  PortableServer/ThreadPolicyC.cpp \
  PortableServer/ThreadPolicyC.h \
  PortableServer/ThreadPolicyS.h

CLEANFILES += \
  PortableServer/ThreadPolicy-stamp \
  PortableServer/ThreadPolicyA.cpp \
  PortableServer/ThreadPolicyA.h \
  PortableServer/ThreadPolicyC.cpp \
  PortableServer/ThreadPolicyC.h \
  PortableServer/ThreadPolicyS.h

PortableServer/ThreadPolicyA.cpp PortableServer/ThreadPolicyA.h PortableServer/ThreadPolicyC.cpp PortableServer/ThreadPolicyC.h PortableServer/ThreadPolicyS.h: PortableServer/ThreadPolicy-stamp

PortableServer/ThreadPolicy-stamp: $(srcdir)/PortableServer/ThreadPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GA -Sal -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/ThreadPolicy.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/POAManagerC.cpp \
  PortableServer/POAManagerC.h \
  PortableServer/POAManagerS.h

CLEANFILES += \
  PortableServer/POAManager-stamp \
  PortableServer/POAManagerC.cpp \
  PortableServer/POAManagerC.h \
  PortableServer/POAManagerS.h

PortableServer/POAManagerC.cpp PortableServer/POAManagerC.h PortableServer/POAManagerS.h: PortableServer/POAManager-stamp

PortableServer/POAManager-stamp: $(srcdir)/PortableServer/POAManager.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/POAManager.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/POAManagerFactoryC.cpp \
  PortableServer/POAManagerFactoryC.h \
  PortableServer/POAManagerFactoryS.h

CLEANFILES += \
  PortableServer/POAManagerFactory-stamp \
  PortableServer/POAManagerFactoryC.cpp \
  PortableServer/POAManagerFactoryC.h \
  PortableServer/POAManagerFactoryS.h

PortableServer/POAManagerFactoryC.cpp PortableServer/POAManagerFactoryC.h PortableServer/POAManagerFactoryS.h: PortableServer/POAManagerFactory-stamp

PortableServer/POAManagerFactory-stamp: $(srcdir)/PortableServer/POAManagerFactory.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/POAManagerFactory.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/POAC.cpp \
  PortableServer/POAC.h \
  PortableServer/POAS.h

CLEANFILES += \
  PortableServer/POA-stamp \
  PortableServer/POAC.cpp \
  PortableServer/POAC.h \
  PortableServer/POAS.h

PortableServer/POAC.cpp PortableServer/POAC.h PortableServer/POAS.h: PortableServer/POA-stamp

PortableServer/POA-stamp: $(srcdir)/PortableServer/POA.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/POA.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/PS_CurrentC.cpp \
  PortableServer/PS_CurrentC.h \
  PortableServer/PS_CurrentS.h

CLEANFILES += \
  PortableServer/PS_Current-stamp \
  PortableServer/PS_CurrentC.cpp \
  PortableServer/PS_CurrentC.h \
  PortableServer/PS_CurrentS.h

PortableServer/PS_CurrentC.cpp PortableServer/PS_CurrentC.h PortableServer/PS_CurrentS.h: PortableServer/PS_Current-stamp

PortableServer/PS_Current-stamp: $(srcdir)/PortableServer/PS_Current.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -o PortableServer $(srcdir)/PortableServer/PS_Current.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/PortableServer_includeA.h \
  PortableServer/PortableServer_includeC.cpp \
  PortableServer/PortableServer_includeC.h \
  PortableServer/PortableServer_includeS.h

CLEANFILES += \
  PortableServer/PortableServer_include-stamp \
  PortableServer/PortableServer_includeA.h \
  PortableServer/PortableServer_includeC.cpp \
  PortableServer/PortableServer_includeC.h \
  PortableServer/PortableServer_includeS.h

PortableServer/PortableServer_includeA.h PortableServer/PortableServer_includeC.cpp PortableServer/PortableServer_includeC.h PortableServer/PortableServer_includeS.h: PortableServer/PortableServer_include-stamp

PortableServer/PortableServer_include-stamp: $(srcdir)/PortableServer/PortableServer_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Sorb -Sa -GX -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -Wb,unique_include=tao/PortableServer/PortableServer.h -o PortableServer $(srcdir)/PortableServer/PortableServer_include.pidl
	@touch $@

BUILT_SOURCES += \
  PortableServer/PortableServerA.h \
  PortableServer/PortableServerC.cpp \
  PortableServer/PortableServerC.h \
  PortableServer/PortableServerS.h

CLEANFILES += \
  PortableServer/PortableServer-stamp \
  PortableServer/PortableServerA.h \
  PortableServer/PortableServerC.cpp \
  PortableServer/PortableServerC.h \
  PortableServer/PortableServerS.h

PortableServer/PortableServerA.h PortableServer/PortableServerC.cpp PortableServer/PortableServerC.h PortableServer/PortableServerS.h: PortableServer/PortableServer-stamp

PortableServer/PortableServer-stamp: $(srcdir)/PortableServer/PortableServer.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Sorb -Sa -GX -Wb,export_macro=TAO_PortableServer_Export -Wb,export_include=tao/PortableServer/portableserver_export.h -Wb,include_guard=TAO_PORTABLESERVER_SAFE_INCLUDE -Wb,safe_include=tao/PortableServer/PortableServer.h -o PortableServer $(srcdir)/PortableServer/PortableServer.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_PortableServer.la

libTAO_PortableServer_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_PORTABLESERVER_BUILD_DLL

libTAO_PortableServer_la_SOURCES = \
  PortableServer/Acceptor_Filter_Factory.cpp \
  PortableServer/Active_Object_Map.cpp \
  PortableServer/Active_Object_Map_Entry.cpp \
  PortableServer/Active_Policy_Strategies.cpp \
  PortableServer/AdapterActivatorA.cpp \
  PortableServer/AdapterActivatorC.cpp \
  PortableServer/Adapter_Activator.cpp \
  PortableServer/Collocated_Arguments_Converter.cpp \
  PortableServer/Collocated_Object_Proxy_Broker.cpp \
  PortableServer/Creation_Time.cpp \
  PortableServer/Default_Acceptor_Filter.cpp \
  PortableServer/Default_Policy_Validator.cpp \
  PortableServer/Default_Servant_Dispatcher.cpp \
  PortableServer/Direct_Collocation_Upcall_Wrapper.cpp \
  PortableServer/ForwardRequestA.cpp \
  PortableServer/ForwardRequestC.cpp \
  PortableServer/IdAssignmentPolicy.cpp \
  PortableServer/IdAssignmentPolicyA.cpp \
  PortableServer/IdAssignmentPolicyC.cpp \
  PortableServer/IdAssignmentStrategy.cpp \
  PortableServer/IdAssignmentStrategyFactoryImpl.cpp \
  PortableServer/IdAssignmentStrategySystem.cpp \
  PortableServer/IdAssignmentStrategyUser.cpp \
  PortableServer/IdUniquenessPolicy.cpp \
  PortableServer/IdUniquenessPolicyA.cpp \
  PortableServer/IdUniquenessPolicyC.cpp \
  PortableServer/IdUniquenessStrategyFactoryImpl.cpp \
  PortableServer/IdUniquenessStrategyMultiple.cpp \
  PortableServer/IdUniquenessStrategyUnique.cpp \
  PortableServer/IdUniquenessStrategyUniqueFactoryImpl.cpp \
  PortableServer/ImR_Client_Adapter.cpp \
  PortableServer/ImplicitActivationPolicy.cpp \
  PortableServer/ImplicitActivationPolicyA.cpp \
  PortableServer/ImplicitActivationPolicyC.cpp \
  PortableServer/ImplicitActivationStrategy.cpp \
  PortableServer/ImplicitActivationStrategyExplicit.cpp \
  PortableServer/ImplicitActivationStrategyFactoryImpl.cpp \
  PortableServer/ImplicitActivationStrategyImplicit.cpp \
  PortableServer/Key_Adapters.cpp \
  PortableServer/LifespanPolicy.cpp \
  PortableServer/LifespanPolicyA.cpp \
  PortableServer/LifespanPolicyC.cpp \
  PortableServer/LifespanStrategy.cpp \
  PortableServer/LifespanStrategyFactoryImpl.cpp \
  PortableServer/LifespanStrategyPersistent.cpp \
  PortableServer/LifespanStrategyPersistentFactoryImpl.cpp \
  PortableServer/LifespanStrategyTransient.cpp \
  PortableServer/LifespanStrategyTransientFactoryImpl.cpp \
  PortableServer/Local_Servant_Base.cpp \
  PortableServer/Network_Priority_Hook.cpp \
  PortableServer/Non_Servant_Upcall.cpp \
  PortableServer/ORT_Adapter_Factory.cpp \
  PortableServer/Object_Adapter.cpp \
  PortableServer/Object_Adapter_Factory.cpp \
  PortableServer/Operation_Table.cpp \
  PortableServer/Operation_Table_Binary_Search.cpp \
  PortableServer/Operation_Table_Dynamic_Hash.cpp \
  PortableServer/Operation_Table_Linear_Search.cpp \
  PortableServer/Operation_Table_Perfect_Hash.cpp \
  PortableServer/POAC.cpp \
  PortableServer/POAManager.cpp \
  PortableServer/POAManagerC.cpp \
  PortableServer/POAManagerFactory.cpp \
  PortableServer/POAManagerFactoryC.cpp \
  PortableServer/POA_Cached_Policies.cpp \
  PortableServer/POA_Current.cpp \
  PortableServer/POA_Current_Factory.cpp \
  PortableServer/POA_Current_Impl.cpp \
  PortableServer/POA_Guard.cpp \
  PortableServer/POA_Policy_Set.cpp \
  PortableServer/PS_CurrentC.cpp \
  PortableServer/PS_ForwardA.cpp \
  PortableServer/PS_ForwardC.cpp \
  PortableServer/PolicyS.cpp \
  PortableServer/PortableServer.cpp \
  PortableServer/PortableServerC.cpp \
  PortableServer/PortableServer_Functions.cpp \
  PortableServer/PortableServer_WFunctions.cpp \
  PortableServer/PortableServer_includeC.cpp \
  PortableServer/Regular_POA.cpp \
  PortableServer/RequestProcessingPolicy.cpp \
  PortableServer/RequestProcessingPolicyA.cpp \
  PortableServer/RequestProcessingPolicyC.cpp \
  PortableServer/RequestProcessingStrategy.cpp \
  PortableServer/RequestProcessingStrategyAOMOnly.cpp \
  PortableServer/RequestProcessingStrategyAOMOnlyFactoryImpl.cpp \
  PortableServer/RequestProcessingStrategyDefaultServant.cpp \
  PortableServer/RequestProcessingStrategyDefaultServantFI.cpp \
  PortableServer/RequestProcessingStrategyFactoryImpl.cpp \
  PortableServer/RequestProcessingStrategyServantActivator.cpp \
  PortableServer/RequestProcessingStrategyServantActivatorFI.cpp \
  PortableServer/RequestProcessingStrategyServantLocator.cpp \
  PortableServer/RequestProcessingStrategyServantLocatorFI.cpp \
  PortableServer/RequestProcessingStrategyServantManager.cpp \
  PortableServer/Root_POA.cpp \
  PortableServer/ServantActivatorA.cpp \
  PortableServer/ServantActivatorC.cpp \
  PortableServer/ServantLocatorA.cpp \
  PortableServer/ServantLocatorC.cpp \
  PortableServer/ServantManagerA.cpp \
  PortableServer/ServantManagerC.cpp \
  PortableServer/ServantRetentionPolicy.cpp \
  PortableServer/ServantRetentionPolicyA.cpp \
  PortableServer/ServantRetentionPolicyC.cpp \
  PortableServer/ServantRetentionStrategyFactoryImpl.cpp \
  PortableServer/ServantRetentionStrategyNonRetain.cpp \
  PortableServer/ServantRetentionStrategyNonRetainFactoryImpl.cpp \
  PortableServer/ServantRetentionStrategyRetain.cpp \
  PortableServer/ServantRetentionStrategyRetainFactoryImpl.cpp \
  PortableServer/Servant_Base.cpp \
  PortableServer/Servant_Dispatcher.cpp \
  PortableServer/Servant_Upcall.cpp \
  PortableServer/StrategyFactory.cpp \
  PortableServer/ThreadPolicy.cpp \
  PortableServer/ThreadPolicyA.cpp \
  PortableServer/ThreadPolicyC.cpp \
  PortableServer/ThreadStrategy.cpp \
  PortableServer/ThreadStrategyFactoryImpl.cpp \
  PortableServer/ThreadStrategyORBControl.cpp \
  PortableServer/ThreadStrategySingle.cpp \
  PortableServer/ThreadStrategySingleFactoryImpl.cpp \
  PortableServer/Upcall_Command.cpp \
  PortableServer/Upcall_Wrapper.cpp

libTAO_PortableServer_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_PortableServer_la_LIBADD = \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  PortableServer/Acceptor_Filter_Factory.h \
  PortableServer/Active_Object_Map.h \
  PortableServer/Active_Object_Map.inl \
  PortableServer/Active_Object_Map_Entry.h \
  PortableServer/Active_Policy_Strategies.h \
  PortableServer/Active_Policy_Strategies.inl \
  PortableServer/AdapterActivator.pidl \
  PortableServer/AdapterActivator.pidl \
  PortableServer/AdapterActivatorA.h \
  PortableServer/AdapterActivatorC.h \
  PortableServer/AdapterActivatorS.h \
  PortableServer/Adapter_Activator.h \
  PortableServer/Any_SArg_Traits.h \
  PortableServer/BD_String_SArgument_T.cpp \
  PortableServer/BD_String_SArgument_T.h \
  PortableServer/BD_String_SArgument_T.inl \
  PortableServer/Basic_SArgument_T.cpp \
  PortableServer/Basic_SArgument_T.h \
  PortableServer/Basic_SArgument_T.inl \
  PortableServer/Basic_SArguments.h \
  PortableServer/Collocated_Arguments_Converter.h \
  PortableServer/Collocated_Object_Proxy_Broker.h \
  PortableServer/Creation_Time.h \
  PortableServer/Creation_Time.inl \
  PortableServer/Default_Acceptor_Filter.h \
  PortableServer/Default_Policy_Validator.h \
  PortableServer/Default_Servant_Dispatcher.h \
  PortableServer/Direct_Collocation_Upcall_Wrapper.h \
  PortableServer/Fixed_Array_SArgument_T.cpp \
  PortableServer/Fixed_Array_SArgument_T.h \
  PortableServer/Fixed_Array_SArgument_T.inl \
  PortableServer/Fixed_Size_SArgument_T.cpp \
  PortableServer/Fixed_Size_SArgument_T.h \
  PortableServer/Fixed_Size_SArgument_T.inl \
  PortableServer/ForwardRequest.pidl \
  PortableServer/ForwardRequest.pidl \
  PortableServer/ForwardRequestA.h \
  PortableServer/ForwardRequestC.h \
  PortableServer/ForwardRequestS.h \
  PortableServer/IdAssignmentPolicy.h \
  PortableServer/IdAssignmentPolicy.pidl \
  PortableServer/IdAssignmentPolicy.pidl \
  PortableServer/IdAssignmentPolicyA.h \
  PortableServer/IdAssignmentPolicyC.h \
  PortableServer/IdAssignmentPolicyS.h \
  PortableServer/IdAssignmentStrategy.h \
  PortableServer/IdAssignmentStrategyFactory.h \
  PortableServer/IdAssignmentStrategyFactoryImpl.h \
  PortableServer/IdAssignmentStrategySystem.h \
  PortableServer/IdAssignmentStrategyUser.h \
  PortableServer/IdUniquenessPolicy.h \
  PortableServer/IdUniquenessPolicy.pidl \
  PortableServer/IdUniquenessPolicy.pidl \
  PortableServer/IdUniquenessPolicyA.h \
  PortableServer/IdUniquenessPolicyC.h \
  PortableServer/IdUniquenessPolicyS.h \
  PortableServer/IdUniquenessStrategy.h \
  PortableServer/IdUniquenessStrategyFactory.h \
  PortableServer/IdUniquenessStrategyFactoryImpl.h \
  PortableServer/IdUniquenessStrategyMultiple.h \
  PortableServer/IdUniquenessStrategyUnique.h \
  PortableServer/IdUniquenessStrategyUniqueFactoryImpl.h \
  PortableServer/ImR_Client_Adapter.h \
  PortableServer/ImplicitActivationPolicy.h \
  PortableServer/ImplicitActivationPolicy.pidl \
  PortableServer/ImplicitActivationPolicy.pidl \
  PortableServer/ImplicitActivationPolicyA.h \
  PortableServer/ImplicitActivationPolicyC.h \
  PortableServer/ImplicitActivationPolicyS.h \
  PortableServer/ImplicitActivationStrategy.h \
  PortableServer/ImplicitActivationStrategyExplicit.h \
  PortableServer/ImplicitActivationStrategyFactory.h \
  PortableServer/ImplicitActivationStrategyFactoryImpl.h \
  PortableServer/ImplicitActivationStrategyImplicit.h \
  PortableServer/Key_Adapters.h \
  PortableServer/LifespanPolicy.h \
  PortableServer/LifespanPolicy.pidl \
  PortableServer/LifespanPolicy.pidl \
  PortableServer/LifespanPolicyA.h \
  PortableServer/LifespanPolicyC.h \
  PortableServer/LifespanPolicyS.h \
  PortableServer/LifespanStrategy.h \
  PortableServer/LifespanStrategyFactory.h \
  PortableServer/LifespanStrategyFactoryImpl.h \
  PortableServer/LifespanStrategyPersistent.h \
  PortableServer/LifespanStrategyPersistentFactoryImpl.h \
  PortableServer/LifespanStrategyTransient.h \
  PortableServer/LifespanStrategyTransientFactoryImpl.h \
  PortableServer/Local_Servant_Base.h \
  PortableServer/Local_Servant_Base.inl \
  PortableServer/Network_Priority_Hook.h \
  PortableServer/Non_Servant_Upcall.h \
  PortableServer/Non_Servant_Upcall.inl \
  PortableServer/ORT_Adapter.h \
  PortableServer/ORT_Adapter_Factory.h \
  PortableServer/Object_Adapter.h \
  PortableServer/Object_Adapter.inl \
  PortableServer/Object_Adapter_Factory.h \
  PortableServer/Object_SArg_Traits.h \
  PortableServer/Object_SArgument_T.cpp \
  PortableServer/Object_SArgument_T.h \
  PortableServer/Object_SArgument_T.inl \
  PortableServer/Operation_Table.h \
  PortableServer/Operation_Table_Binary_Search.h \
  PortableServer/Operation_Table_Dynamic_Hash.h \
  PortableServer/Operation_Table_Linear_Search.h \
  PortableServer/Operation_Table_Perfect_Hash.h \
  PortableServer/POA.pidl \
  PortableServer/POA.pidl \
  PortableServer/POAC.h \
  PortableServer/POAManager.h \
  PortableServer/POAManager.inl \
  PortableServer/POAManager.pidl \
  PortableServer/POAManager.pidl \
  PortableServer/POAManagerC.h \
  PortableServer/POAManagerFactory.h \
  PortableServer/POAManagerFactory.pidl \
  PortableServer/POAManagerFactory.pidl \
  PortableServer/POAManagerFactoryC.h \
  PortableServer/POAManagerFactoryS.h \
  PortableServer/POAManagerS.h \
  PortableServer/POAS.h \
  PortableServer/POA_Cached_Policies.h \
  PortableServer/POA_Cached_Policies.inl \
  PortableServer/POA_Current.h \
  PortableServer/POA_Current_Factory.h \
  PortableServer/POA_Current_Impl.h \
  PortableServer/POA_Current_Impl.inl \
  PortableServer/POA_Guard.h \
  PortableServer/POA_Policy_Set.h \
  PortableServer/POA_Policy_Set.inl \
  PortableServer/PS_Current.pidl \
  PortableServer/PS_Current.pidl \
  PortableServer/PS_CurrentC.h \
  PortableServer/PS_CurrentS.h \
  PortableServer/PS_Forward.pidl \
  PortableServer/PS_ForwardA.h \
  PortableServer/PS_ForwardC.h \
  PortableServer/PolicyS.h \
  PortableServer/PolicyS_T.cpp \
  PortableServer/PolicyS_T.h \
  PortableServer/PolicyS_T.inl \
  PortableServer/Policy_Strategy.h \
  PortableServer/PortableServer.h \
  PortableServer/PortableServer.pidl \
  PortableServer/PortableServer.pidl \
  PortableServer/PortableServerA.h \
  PortableServer/PortableServerC.h \
  PortableServer/PortableServerS.h \
  PortableServer/PortableServer_Functions.h \
  PortableServer/PortableServer_WFunctions.h \
  PortableServer/PortableServer_include.pidl \
  PortableServer/PortableServer_include.pidl \
  PortableServer/PortableServer_includeA.h \
  PortableServer/PortableServer_includeC.h \
  PortableServer/PortableServer_includeS.h \
  PortableServer/Regular_POA.h \
  PortableServer/Regular_POA.inl \
  PortableServer/RequestProcessingPolicy.h \
  PortableServer/RequestProcessingPolicy.pidl \
  PortableServer/RequestProcessingPolicy.pidl \
  PortableServer/RequestProcessingPolicyA.h \
  PortableServer/RequestProcessingPolicyC.h \
  PortableServer/RequestProcessingPolicyS.h \
  PortableServer/RequestProcessingStrategy.h \
  PortableServer/RequestProcessingStrategyAOMOnly.h \
  PortableServer/RequestProcessingStrategyAOMOnlyFactoryImpl.h \
  PortableServer/RequestProcessingStrategyDefaultServant.h \
  PortableServer/RequestProcessingStrategyDefaultServantFI.h \
  PortableServer/RequestProcessingStrategyFactory.h \
  PortableServer/RequestProcessingStrategyFactoryImpl.h \
  PortableServer/RequestProcessingStrategyServantActivator.h \
  PortableServer/RequestProcessingStrategyServantActivatorFI.h \
  PortableServer/RequestProcessingStrategyServantLocator.h \
  PortableServer/RequestProcessingStrategyServantLocatorFI.h \
  PortableServer/RequestProcessingStrategyServantManager.h \
  PortableServer/Root_POA.h \
  PortableServer/Root_POA.inl \
  PortableServer/SArg_Traits_T.h \
  PortableServer/ServantActivator.pidl \
  PortableServer/ServantActivator.pidl \
  PortableServer/ServantActivatorA.h \
  PortableServer/ServantActivatorC.h \
  PortableServer/ServantActivatorS.h \
  PortableServer/ServantLocator.pidl \
  PortableServer/ServantLocator.pidl \
  PortableServer/ServantLocatorA.h \
  PortableServer/ServantLocatorC.h \
  PortableServer/ServantLocatorS.h \
  PortableServer/ServantManager.pidl \
  PortableServer/ServantManager.pidl \
  PortableServer/ServantManagerA.h \
  PortableServer/ServantManagerC.h \
  PortableServer/ServantManagerS.h \
  PortableServer/ServantRetentionPolicy.h \
  PortableServer/ServantRetentionPolicy.pidl \
  PortableServer/ServantRetentionPolicy.pidl \
  PortableServer/ServantRetentionPolicyA.h \
  PortableServer/ServantRetentionPolicyC.h \
  PortableServer/ServantRetentionPolicyS.h \
  PortableServer/ServantRetentionStrategy.h \
  PortableServer/ServantRetentionStrategyFactory.h \
  PortableServer/ServantRetentionStrategyFactoryImpl.h \
  PortableServer/ServantRetentionStrategyNonRetain.h \
  PortableServer/ServantRetentionStrategyNonRetainFactoryImpl.h \
  PortableServer/ServantRetentionStrategyRetain.h \
  PortableServer/ServantRetentionStrategyRetainFactoryImpl.h \
  PortableServer/Servant_Base.h \
  PortableServer/Servant_Base.inl \
  PortableServer/Servant_Dispatcher.h \
  PortableServer/Servant_Location.h \
  PortableServer/Servant_Upcall.h \
  PortableServer/Servant_Upcall.inl \
  PortableServer/Servant_var.cpp \
  PortableServer/Servant_var.h \
  PortableServer/Servant_var.inl \
  PortableServer/Special_Basic_SArgument_T.cpp \
  PortableServer/Special_Basic_SArgument_T.h \
  PortableServer/Special_Basic_SArgument_T.inl \
  PortableServer/Special_Basic_SArguments.h \
  PortableServer/StrategyFactory.h \
  PortableServer/ThreadPolicy.h \
  PortableServer/ThreadPolicy.pidl \
  PortableServer/ThreadPolicy.pidl \
  PortableServer/ThreadPolicyA.h \
  PortableServer/ThreadPolicyC.h \
  PortableServer/ThreadPolicyS.h \
  PortableServer/ThreadStrategy.h \
  PortableServer/ThreadStrategyFactory.h \
  PortableServer/ThreadStrategyFactoryImpl.h \
  PortableServer/ThreadStrategyORBControl.h \
  PortableServer/ThreadStrategySingle.h \
  PortableServer/ThreadStrategySingleFactoryImpl.h \
  PortableServer/TypeCode_SArg_Traits.h \
  PortableServer/UB_String_SArgument_T.cpp \
  PortableServer/UB_String_SArgument_T.h \
  PortableServer/UB_String_SArgument_T.inl \
  PortableServer/UB_String_SArguments.h \
  PortableServer/Upcall_Command.h \
  PortableServer/Upcall_Wrapper.h \
  PortableServer/Var_Array_SArgument_T.cpp \
  PortableServer/Var_Array_SArgument_T.h \
  PortableServer/Var_Array_SArgument_T.inl \
  PortableServer/Var_Size_SArgument_T.cpp \
  PortableServer/Var_Size_SArgument_T.h \
  PortableServer/Var_Size_SArgument_T.inl \
  PortableServer/get_arg.h \
  PortableServer/poa_macros.h \
  PortableServer/portableserver_export.h

pkgconfig_DATA += \
  TAO_PortableServer.pc

CLEANFILES += \
  TAO_PortableServer.pc

TAO_PortableServer.pc: ${top_builddir}/config.status ${srcdir}/PortableServer/TAO_PortableServer.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/PortableServer/TAO_PortableServer.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  PortableServer/TAO_PortableServer.pc.in \
  PortableServer/TAO_PortableServer.rc


## Makefile.CSD_Framework.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  CSD_Framework/CSD_FrameworkA.cpp \
  CSD_Framework/CSD_FrameworkA.h \
  CSD_Framework/CSD_FrameworkC.cpp \
  CSD_Framework/CSD_FrameworkC.h \
  CSD_Framework/CSD_FrameworkS.h

CLEANFILES += \
  CSD_Framework/CSD_Framework-stamp \
  CSD_Framework/CSD_FrameworkA.cpp \
  CSD_Framework/CSD_FrameworkA.h \
  CSD_Framework/CSD_FrameworkC.cpp \
  CSD_Framework/CSD_FrameworkC.h \
  CSD_Framework/CSD_FrameworkS.h

CSD_Framework/CSD_FrameworkA.cpp CSD_Framework/CSD_FrameworkA.h CSD_Framework/CSD_FrameworkC.cpp CSD_Framework/CSD_FrameworkC.h CSD_Framework/CSD_FrameworkS.h: CSD_Framework/CSD_Framework-stamp

CSD_Framework/CSD_Framework-stamp: $(srcdir)/CSD_Framework/CSD_Framework.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Gp -Gd -Sorb -GA -Sal -Wb,export_macro=TAO_CSD_FW_Export -Wb,export_include=tao/CSD_Framework/CSD_FW_Export.h -o CSD_Framework $(srcdir)/CSD_Framework/CSD_Framework.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_CSD_Framework.la

libTAO_CSD_Framework_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/tao \
  -DTAO_CSD_FW_BUILD_DLL

libTAO_CSD_Framework_la_SOURCES = \
  CSD_Framework/CSD_Default_Servant_Dispatcher.cpp \
  CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp \
  CSD_Framework/CSD_FrameworkA.cpp \
  CSD_Framework/CSD_FrameworkC.cpp \
  CSD_Framework/CSD_Framework_Loader.cpp \
  CSD_Framework/CSD_ORBInitializer.cpp \
  CSD_Framework/CSD_Object_Adapter.cpp \
  CSD_Framework/CSD_Object_Adapter_Factory.cpp \
  CSD_Framework/CSD_POA.cpp \
  CSD_Framework/CSD_Strategy_Base.cpp \
  CSD_Framework/CSD_Strategy_Proxy.cpp \
  CSD_Framework/CSD_Strategy_Repository.cpp

libTAO_CSD_Framework_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_CSD_Framework_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  CSD_Framework/CSD_Default_Servant_Dispatcher.h \
  CSD_Framework/CSD_FW_Export.h \
  CSD_Framework/CSD_FW_Server_Request_Wrapper.h \
  CSD_Framework/CSD_FW_Server_Request_Wrapper.inl \
  CSD_Framework/CSD_Framework.pidl \
  CSD_Framework/CSD_Framework.pidl \
  CSD_Framework/CSD_FrameworkA.h \
  CSD_Framework/CSD_FrameworkC.h \
  CSD_Framework/CSD_FrameworkS.h \
  CSD_Framework/CSD_Framework_Loader.h \
  CSD_Framework/CSD_ORBInitializer.h \
  CSD_Framework/CSD_Object_Adapter.h \
  CSD_Framework/CSD_Object_Adapter_Factory.h \
  CSD_Framework/CSD_POA.h \
  CSD_Framework/CSD_POA.inl \
  CSD_Framework/CSD_Strategy_Base.h \
  CSD_Framework/CSD_Strategy_Base.inl \
  CSD_Framework/CSD_Strategy_Proxy.h \
  CSD_Framework/CSD_Strategy_Proxy.inl \
  CSD_Framework/CSD_Strategy_Repository.h

pkgconfig_DATA += \
  TAO_CSD_Framework.pc

CLEANFILES += \
  TAO_CSD_Framework.pc

TAO_CSD_Framework.pc: ${top_builddir}/config.status ${srcdir}/CSD_Framework/TAO_CSD_Framework.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/CSD_Framework/TAO_CSD_Framework.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  CSD_Framework/TAO_CSD_Framework.pc.in


## Makefile.CSD_ThreadPool.am

if BUILD_EXCEPTIONS
if BUILD_THREADS

lib_LTLIBRARIES += libTAO_CSD_ThreadPool.la

libTAO_CSD_ThreadPool_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/tao \
  -DTAO_CSD_TP_BUILD_DLL

libTAO_CSD_ThreadPool_la_SOURCES = \
  CSD_ThreadPool/CSD_TP_Cancel_Visitor.cpp \
  CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.cpp \
  CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp \
  CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.cpp \
  CSD_ThreadPool/CSD_TP_Corba_Request.cpp \
  CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.cpp \
  CSD_ThreadPool/CSD_TP_Custom_Request.cpp \
  CSD_ThreadPool/CSD_TP_Custom_Request_Operation.cpp \
  CSD_ThreadPool/CSD_TP_Custom_Synch_Request.cpp \
  CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.cpp \
  CSD_ThreadPool/CSD_TP_Queue.cpp \
  CSD_ThreadPool/CSD_TP_Queue_Visitor.cpp \
  CSD_ThreadPool/CSD_TP_Remote_Request.cpp \
  CSD_ThreadPool/CSD_TP_Request.cpp \
  CSD_ThreadPool/CSD_TP_Servant_State.cpp \
  CSD_ThreadPool/CSD_TP_Servant_State_Map.cpp \
  CSD_ThreadPool/CSD_TP_Strategy.cpp \
  CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp \
  CSD_ThreadPool/CSD_TP_Synch_Helper.cpp \
  CSD_ThreadPool/CSD_TP_Task.cpp \
  CSD_ThreadPool/CSD_ThreadPool.cpp

libTAO_CSD_ThreadPool_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_CSD_ThreadPool_la_LIBADD = \
  libTAO_CSD_Framework.la \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  CSD_ThreadPool/CSD_TP_Cancel_Visitor.h \
  CSD_ThreadPool/CSD_TP_Cancel_Visitor.inl \
  CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.h \
  CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.inl \
  CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.h \
  CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.inl \
  CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.h \
  CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.inl \
  CSD_ThreadPool/CSD_TP_Corba_Request.h \
  CSD_ThreadPool/CSD_TP_Corba_Request.inl \
  CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.h \
  CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.inl \
  CSD_ThreadPool/CSD_TP_Custom_Request.h \
  CSD_ThreadPool/CSD_TP_Custom_Request.inl \
  CSD_ThreadPool/CSD_TP_Custom_Request_Operation.h \
  CSD_ThreadPool/CSD_TP_Custom_Request_Operation.inl \
  CSD_ThreadPool/CSD_TP_Custom_Synch_Request.h \
  CSD_ThreadPool/CSD_TP_Custom_Synch_Request.inl \
  CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.h \
  CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.inl \
  CSD_ThreadPool/CSD_TP_Export.h \
  CSD_ThreadPool/CSD_TP_Queue.h \
  CSD_ThreadPool/CSD_TP_Queue.inl \
  CSD_ThreadPool/CSD_TP_Queue_Visitor.h \
  CSD_ThreadPool/CSD_TP_Queue_Visitor.inl \
  CSD_ThreadPool/CSD_TP_Remote_Request.h \
  CSD_ThreadPool/CSD_TP_Remote_Request.inl \
  CSD_ThreadPool/CSD_TP_Request.h \
  CSD_ThreadPool/CSD_TP_Request.inl \
  CSD_ThreadPool/CSD_TP_Servant_State.h \
  CSD_ThreadPool/CSD_TP_Servant_State.inl \
  CSD_ThreadPool/CSD_TP_Servant_State_Map.h \
  CSD_ThreadPool/CSD_TP_Servant_State_Map.inl \
  CSD_ThreadPool/CSD_TP_Strategy.h \
  CSD_ThreadPool/CSD_TP_Strategy.inl \
  CSD_ThreadPool/CSD_TP_Strategy_Factory.h \
  CSD_ThreadPool/CSD_TP_Synch_Helper.h \
  CSD_ThreadPool/CSD_TP_Synch_Helper.inl \
  CSD_ThreadPool/CSD_TP_Task.h \
  CSD_ThreadPool/CSD_TP_Task.inl \
  CSD_ThreadPool/CSD_ThreadPool.h

pkgconfig_DATA += \
  TAO_CSD_ThreadPool.pc

CLEANFILES += \
  TAO_CSD_ThreadPool.pc

TAO_CSD_ThreadPool.pc: ${top_builddir}/config.status ${srcdir}/CSD_ThreadPool/TAO_CSD_ThreadPool.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/CSD_ThreadPool/TAO_CSD_ThreadPool.pc.in

endif BUILD_THREADS
endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  CSD_ThreadPool/TAO_CSD_ThreadPool.pc.in


## Makefile.DiffServPolicy.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  DiffServPolicy/DiffServPolicyA.cpp \
  DiffServPolicy/DiffServPolicyA.h \
  DiffServPolicy/DiffServPolicyC.cpp \
  DiffServPolicy/DiffServPolicyC.h \
  DiffServPolicy/DiffServPolicyS.h

CLEANFILES += \
  DiffServPolicy/DiffServPolicy-stamp \
  DiffServPolicy/DiffServPolicyA.cpp \
  DiffServPolicy/DiffServPolicyA.h \
  DiffServPolicy/DiffServPolicyC.cpp \
  DiffServPolicy/DiffServPolicyC.h \
  DiffServPolicy/DiffServPolicyS.h

DiffServPolicy/DiffServPolicyA.cpp DiffServPolicy/DiffServPolicyA.h DiffServPolicy/DiffServPolicyC.cpp DiffServPolicy/DiffServPolicyC.h DiffServPolicy/DiffServPolicyS.h: DiffServPolicy/DiffServPolicy-stamp

DiffServPolicy/DiffServPolicy-stamp: $(srcdir)/DiffServPolicy/DiffServPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -GA -SS -Sci -Sorb -Wb,export_macro=TAO_DiffServPolicy_Export -Wb,export_include=tao/DiffServPolicy/DiffServPolicy_Export.h -Wb,include_guard=TAO_DIFFSERVPOLICY_SAFE_INCLUDE -Wb,safe_include=tao/DiffServPolicy/DiffServPolicy.h -o DiffServPolicy $(srcdir)/DiffServPolicy/DiffServPolicy.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_DiffServPolicy.la

libTAO_DiffServPolicy_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_DIFFSERVPOLICY_BUILD_DLL

libTAO_DiffServPolicy_la_SOURCES = \
  DiffServPolicy/Client_Network_Priority_Policy.cpp \
  DiffServPolicy/DiffServPolicy.cpp \
  DiffServPolicy/DiffServPolicyA.cpp \
  DiffServPolicy/DiffServPolicyC.cpp \
  DiffServPolicy/DiffServ_Service_Context_Handler.cpp \
  DiffServPolicy/DiffServPolicy_Factory.cpp \
  DiffServPolicy/DiffServPolicy_ORBInitializer.cpp \
  DiffServPolicy/DiffServ_Network_Priority_Hook.cpp \
  DiffServPolicy/DiffServ_Protocols_Hooks.cpp \
  DiffServPolicy/Server_Network_Priority_Policy.cpp

libTAO_DiffServPolicy_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_DiffServPolicy_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  DiffServPolicy/Client_Network_Priority_Policy.h \
  DiffServPolicy/DiffServ_Service_Context_Handler.h \
  DiffServPolicy/DiffServPolicy.h \
  DiffServPolicy/DiffServPolicy.pidl \
  DiffServPolicy/DiffServPolicyA.h \
  DiffServPolicy/DiffServPolicyC.h \
  DiffServPolicy/DiffServPolicyS.h \
  DiffServPolicy/DiffServPolicy_Export.h \
  DiffServPolicy/DiffServPolicy_Factory.h \
  DiffServPolicy/DiffServPolicy_ORBInitializer.h \
  DiffServPolicy/DiffServ_Network_Priority_Hook.h \
  DiffServPolicy/DiffServ_Protocols_Hooks.h \
  DiffServPolicy/Server_Network_Priority_Policy.h

pkgconfig_DATA += \
  TAO_DiffServPolicy.pc

CLEANFILES += \
  TAO_DiffServPolicy.pc

TAO_DiffServPolicy.pc: ${top_builddir}/config.status ${srcdir}/DiffServPolicy/TAO_DiffServPolicy.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/DiffServPolicy/TAO_DiffServPolicy.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  DiffServPolicy/TAO_DiffServPolicy.pc.in


## Makefile.Valuetype.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  Valuetype/StringValueC.cpp \
  Valuetype/StringValueC.h \
  Valuetype/StringValueC.inl \
  Valuetype/StringValueS.h

CLEANFILES += \
  Valuetype/StringValue-stamp \
  Valuetype/StringValueC.cpp \
  Valuetype/StringValueC.h \
  Valuetype/StringValueC.inl \
  Valuetype/StringValueS.h

Valuetype/StringValueC.cpp Valuetype/StringValueC.h Valuetype/StringValueC.inl Valuetype/StringValueS.h: Valuetype/StringValue-stamp

Valuetype/StringValue-stamp: $(srcdir)/Valuetype/StringValue.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -Wb,export_macro=TAO_Valuetype_Export -Wb,export_include=tao/Valuetype/valuetype_export.h -o Valuetype $(srcdir)/Valuetype/StringValue.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_Valuetype.la

libTAO_Valuetype_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_VALUETYPE_BUILD_DLL

libTAO_Valuetype_la_SOURCES = \
  Valuetype/AbstractBase.cpp \
  Valuetype/AbstractBase_Invocation_Adapter.cpp \
  Valuetype/StringValueC.cpp \
  Valuetype/ValueBase.cpp \
  Valuetype/ValueFactory.cpp \
  Valuetype/ValueFactory_Map.cpp \
  Valuetype/Valuetype_Adapter_Factory_Impl.cpp \
  Valuetype/Valuetype_Adapter_Impl.cpp

libTAO_Valuetype_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_Valuetype_la_LIBADD = \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  Valuetype/AbstractBase.h \
  Valuetype/AbstractBase.inl \
  Valuetype/AbstractBase_Invocation_Adapter.h \
  Valuetype/AbstractBase_T.cpp \
  Valuetype/AbstractBase_T.h \
  Valuetype/Bounded_Valuetype_Allocation_Traits_T.h \
  Valuetype/Bounded_Valuetype_Sequence_T.h \
  Valuetype/Sequence_T.h \
  Valuetype/StringValue.pidl \
  Valuetype/StringValueC.h \
  Valuetype/StringValueC.inl \
  Valuetype/StringValueS.h \
  Valuetype/Unbounded_Valuetype_Allocation_Traits_T.h \
  Valuetype/Unbounded_Valuetype_Sequence_T.h \
  Valuetype/ValueBase.h \
  Valuetype/ValueBase.inl \
  Valuetype/ValueFactory.h \
  Valuetype/ValueFactory_Map.h \
  Valuetype/Value_CORBA_methods.h \
  Valuetype/Value_VarOut_T.cpp \
  Valuetype/Value_VarOut_T.h \
  Valuetype/Valuetype_Adapter_Factory_Impl.h \
  Valuetype/Valuetype_Adapter_Impl.h \
  Valuetype/Valuetype_Sequence_Element_T.h \
  Valuetype/Valuetype_Traits_Base_T.h \
  Valuetype/Valuetype_Traits_T.h \
  Valuetype/valuetype_export.h

pkgconfig_DATA += \
  TAO_Valuetype.pc

CLEANFILES += \
  TAO_Valuetype.pc

TAO_Valuetype.pc: ${top_builddir}/config.status ${srcdir}/Valuetype/TAO_Valuetype.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/Valuetype/TAO_Valuetype.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  Valuetype/TAO_Valuetype.pc.in \
  Valuetype/TAO_Valuetype.rc


## Makefile.DynamicAny.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  DynamicAny/DynamicAnyC.cpp \
  DynamicAny/DynamicAnyC.h \
  DynamicAny/DynamicAnyS.h

CLEANFILES += \
  DynamicAny/DynamicAny-stamp \
  DynamicAny/DynamicAnyC.cpp \
  DynamicAny/DynamicAnyC.h \
  DynamicAny/DynamicAnyS.h

DynamicAny/DynamicAnyC.cpp DynamicAny/DynamicAnyC.h DynamicAny/DynamicAnyS.h: DynamicAny/DynamicAny-stamp

DynamicAny/DynamicAny-stamp: $(srcdir)/DynamicAny/DynamicAny.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Wb,export_macro=TAO_DynamicAny_Export -Wb,export_include=tao/DynamicAny/dynamicany_export.h -Wb,include_guard=TAO_DYNAMICANY_SAFE_INCLUDE -Wb,safe_include=tao/DynamicAny/DynamicAny.h -o DynamicAny $(srcdir)/DynamicAny/DynamicAny.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_DynamicAny.la

libTAO_DynamicAny_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_DYNAMICANY_BUILD_DLL

libTAO_DynamicAny_la_SOURCES = \
  DynamicAny/DynAnyFactory.cpp \
  DynamicAny/DynAny_i.cpp \
  DynamicAny/DynArray_i.cpp \
  DynamicAny/DynCommon.cpp \
  DynamicAny/DynEnum_i.cpp \
  DynamicAny/DynSequence_i.cpp \
  DynamicAny/DynStruct_i.cpp \
  DynamicAny/DynUnion_i.cpp \
  DynamicAny/DynValueBox_i.cpp \
  DynamicAny/DynValueCommon_i.cpp \
  DynamicAny/DynValue_i.cpp \
  DynamicAny/DynamicAny.cpp \
  DynamicAny/DynamicAnyC.cpp

libTAO_DynamicAny_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_DynamicAny_la_LIBADD = \
  libTAO_Valuetype.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  DynamicAny/DynAnyFactory.h \
  DynamicAny/DynAnyUtils_T.cpp \
  DynamicAny/DynAnyUtils_T.h \
  DynamicAny/DynAny_i.h \
  DynamicAny/DynArray_i.h \
  DynamicAny/DynCommon.h \
  DynamicAny/DynEnum_i.h \
  DynamicAny/DynSequence_i.h \
  DynamicAny/DynStruct_i.h \
  DynamicAny/DynUnion_i.h \
  DynamicAny/DynValueBox_i.h \
  DynamicAny/DynValueCommon_i.h \
  DynamicAny/DynValue_i.h \
  DynamicAny/DynamicAny.h \
  DynamicAny/DynamicAny.pidl \
  DynamicAny/DynamicAny.pidl \
  DynamicAny/DynamicAnyC.h \
  DynamicAny/DynamicAnyS.h \
  DynamicAny/dynamicany_export.h

pkgconfig_DATA += \
  TAO_DynamicAny.pc

CLEANFILES += \
  TAO_DynamicAny.pc

TAO_DynamicAny.pc: ${top_builddir}/config.status ${srcdir}/DynamicAny/TAO_DynamicAny.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/DynamicAny/TAO_DynamicAny.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  DynamicAny/TAO_DynamicAny.pc.in \
  DynamicAny/TAO_DynamicAny.rc


## Makefile.Messaging.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  Messaging/ExceptionHolderA.cpp \
  Messaging/ExceptionHolderA.h \
  Messaging/ExceptionHolderC.cpp \
  Messaging/ExceptionHolderC.h \
  Messaging/ExceptionHolderC.inl \
  Messaging/ExceptionHolderS.h

CLEANFILES += \
  Messaging/ExceptionHolder-stamp \
  Messaging/ExceptionHolderA.cpp \
  Messaging/ExceptionHolderA.h \
  Messaging/ExceptionHolderC.cpp \
  Messaging/ExceptionHolderC.h \
  Messaging/ExceptionHolderC.inl \
  Messaging/ExceptionHolderS.h

Messaging/ExceptionHolderA.cpp Messaging/ExceptionHolderA.h Messaging/ExceptionHolderC.cpp Messaging/ExceptionHolderC.h Messaging/ExceptionHolderC.inl Messaging/ExceptionHolderS.h: Messaging/ExceptionHolder-stamp

Messaging/ExceptionHolder-stamp: $(srcdir)/Messaging/ExceptionHolder.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -GA -Gp -Gd -Sorb -Sal -Wb,export_macro=TAO_Messaging_Export -Wb,export_include=tao/Messaging/messaging_export.h -o Messaging $(srcdir)/Messaging/ExceptionHolder.pidl
	@touch $@

BUILT_SOURCES += \
  Messaging/PollableA.h \
  Messaging/PollableC.cpp \
  Messaging/PollableC.h \
  Messaging/PollableS.h

CLEANFILES += \
  Messaging/Pollable-stamp \
  Messaging/PollableA.h \
  Messaging/PollableC.cpp \
  Messaging/PollableC.h \
  Messaging/PollableS.h

Messaging/PollableA.h Messaging/PollableC.cpp Messaging/PollableC.h Messaging/PollableS.h: Messaging/Pollable-stamp

Messaging/Pollable-stamp: $(srcdir)/Messaging/Pollable.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Gp -Gd -Sorb -Sal -GX -Wb,export_macro=TAO_Messaging_Export -Wb,export_include=tao/Messaging/messaging_export.h -o Messaging $(srcdir)/Messaging/Pollable.pidl
	@touch $@

BUILT_SOURCES += \
  Messaging/Messaging_TypesA.h \
  Messaging/Messaging_TypesC.cpp \
  Messaging/Messaging_TypesC.h \
  Messaging/Messaging_TypesS.h

CLEANFILES += \
  Messaging/Messaging_Types-stamp \
  Messaging/Messaging_TypesA.h \
  Messaging/Messaging_TypesC.cpp \
  Messaging/Messaging_TypesC.h \
  Messaging/Messaging_TypesS.h

Messaging/Messaging_TypesA.h Messaging/Messaging_TypesC.cpp Messaging/Messaging_TypesC.h Messaging/Messaging_TypesS.h: Messaging/Messaging_Types-stamp

Messaging/Messaging_Types-stamp: $(srcdir)/Messaging/Messaging_Types.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Gp -Gd -Sorb -Sal -GX -Wb,export_macro=TAO_Messaging_Export -Wb,export_include=tao/Messaging/messaging_export.h -o Messaging $(srcdir)/Messaging/Messaging_Types.pidl
	@touch $@

BUILT_SOURCES += \
  Messaging/TAO_ExtA.cpp \
  Messaging/TAO_ExtA.h \
  Messaging/TAO_ExtC.cpp \
  Messaging/TAO_ExtC.h \
  Messaging/TAO_ExtS.h

CLEANFILES += \
  Messaging/TAO_Ext-stamp \
  Messaging/TAO_ExtA.cpp \
  Messaging/TAO_ExtA.h \
  Messaging/TAO_ExtC.cpp \
  Messaging/TAO_ExtC.h \
  Messaging/TAO_ExtS.h

Messaging/TAO_ExtA.cpp Messaging/TAO_ExtA.h Messaging/TAO_ExtC.cpp Messaging/TAO_ExtC.h Messaging/TAO_ExtS.h: Messaging/TAO_Ext-stamp

Messaging/TAO_Ext-stamp: $(srcdir)/Messaging/TAO_Ext.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -GA -Gp -Gd -Sorb -Sal -Wb,export_macro=TAO_Messaging_Export -Wb,export_include=tao/Messaging/messaging_export.h -o Messaging $(srcdir)/Messaging/TAO_Ext.pidl
	@touch $@

BUILT_SOURCES += \
  Messaging/Messaging_RT_PolicyA.cpp \
  Messaging/Messaging_RT_PolicyA.h \
  Messaging/Messaging_RT_PolicyC.cpp \
  Messaging/Messaging_RT_PolicyC.h \
  Messaging/Messaging_RT_PolicyS.h

CLEANFILES += \
  Messaging/Messaging_RT_Policy-stamp \
  Messaging/Messaging_RT_PolicyA.cpp \
  Messaging/Messaging_RT_PolicyA.h \
  Messaging/Messaging_RT_PolicyC.cpp \
  Messaging/Messaging_RT_PolicyC.h \
  Messaging/Messaging_RT_PolicyS.h

Messaging/Messaging_RT_PolicyA.cpp Messaging/Messaging_RT_PolicyA.h Messaging/Messaging_RT_PolicyC.cpp Messaging/Messaging_RT_PolicyC.h Messaging/Messaging_RT_PolicyS.h: Messaging/Messaging_RT_Policy-stamp

Messaging/Messaging_RT_Policy-stamp: $(srcdir)/Messaging/Messaging_RT_Policy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -GA -Gp -Gd -Sorb -Sal -Wb,export_macro=TAO_Messaging_Export -Wb,export_include=tao/Messaging/messaging_export.h -o Messaging $(srcdir)/Messaging/Messaging_RT_Policy.pidl
	@touch $@

BUILT_SOURCES += \
  Messaging/Messaging_SyncScope_PolicyA.cpp \
  Messaging/Messaging_SyncScope_PolicyA.h \
  Messaging/Messaging_SyncScope_PolicyC.cpp \
  Messaging/Messaging_SyncScope_PolicyC.h \
  Messaging/Messaging_SyncScope_PolicyS.h

CLEANFILES += \
  Messaging/Messaging_SyncScope_Policy-stamp \
  Messaging/Messaging_SyncScope_PolicyA.cpp \
  Messaging/Messaging_SyncScope_PolicyA.h \
  Messaging/Messaging_SyncScope_PolicyC.cpp \
  Messaging/Messaging_SyncScope_PolicyC.h \
  Messaging/Messaging_SyncScope_PolicyS.h

Messaging/Messaging_SyncScope_PolicyA.cpp Messaging/Messaging_SyncScope_PolicyA.h Messaging/Messaging_SyncScope_PolicyC.cpp Messaging/Messaging_SyncScope_PolicyC.h Messaging/Messaging_SyncScope_PolicyS.h: Messaging/Messaging_SyncScope_Policy-stamp

Messaging/Messaging_SyncScope_Policy-stamp: $(srcdir)/Messaging/Messaging_SyncScope_Policy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -GA -Gp -Gd -Sorb -Sal -Wb,export_macro=TAO_Messaging_Export -Wb,export_include=tao/Messaging/messaging_export.h -o Messaging $(srcdir)/Messaging/Messaging_SyncScope_Policy.pidl
	@touch $@

BUILT_SOURCES += \
  Messaging/Messaging_No_ImplA.cpp \
  Messaging/Messaging_No_ImplA.h \
  Messaging/Messaging_No_ImplC.cpp \
  Messaging/Messaging_No_ImplC.h \
  Messaging/Messaging_No_ImplS.h

CLEANFILES += \
  Messaging/Messaging_No_Impl-stamp \
  Messaging/Messaging_No_ImplA.cpp \
  Messaging/Messaging_No_ImplA.h \
  Messaging/Messaging_No_ImplC.cpp \
  Messaging/Messaging_No_ImplC.h \
  Messaging/Messaging_No_ImplS.h

Messaging/Messaging_No_ImplA.cpp Messaging/Messaging_No_ImplA.h Messaging/Messaging_No_ImplC.cpp Messaging/Messaging_No_ImplC.h Messaging/Messaging_No_ImplS.h: Messaging/Messaging_No_Impl-stamp

Messaging/Messaging_No_Impl-stamp: $(srcdir)/Messaging/Messaging_No_Impl.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -GA -Gp -Gd -Sorb -Sal -Wb,export_macro=TAO_Messaging_Export -Wb,export_include=tao/Messaging/messaging_export.h -Wb,include_guard=TAO_MESSAGING_SAFE_INCLUDE -Wb,safe_include=tao/Messaging/Messaging.h -o Messaging $(srcdir)/Messaging/Messaging_No_Impl.pidl
	@touch $@

BUILT_SOURCES += \
  Messaging/MessagingA.cpp \
  Messaging/MessagingA.h \
  Messaging/MessagingC.cpp \
  Messaging/MessagingC.h \
  Messaging/MessagingC.inl \
  Messaging/MessagingS.cpp \
  Messaging/MessagingS.h

CLEANFILES += \
  Messaging/Messaging-stamp \
  Messaging/MessagingA.cpp \
  Messaging/MessagingA.h \
  Messaging/MessagingC.cpp \
  Messaging/MessagingC.h \
  Messaging/MessagingC.inl \
  Messaging/MessagingS.cpp \
  Messaging/MessagingS.h

Messaging/MessagingA.cpp Messaging/MessagingA.h Messaging/MessagingC.cpp Messaging/MessagingC.h Messaging/MessagingC.inl Messaging/MessagingS.cpp Messaging/MessagingS.h: Messaging/Messaging-stamp

Messaging/Messaging-stamp: $(srcdir)/Messaging/Messaging.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Ssi -GA -Gp -Gd -Sorb -Sal -Wb,export_macro=TAO_Messaging_Export -Wb,export_include=tao/Messaging/messaging_export.h -Wb,include_guard=TAO_MESSAGING_SAFE_INCLUDE -Wb,safe_include=tao/Messaging/Messaging.h -o Messaging $(srcdir)/Messaging/Messaging.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_Messaging.la

libTAO_Messaging_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_MESSAGING_BUILD_DLL

libTAO_Messaging_la_SOURCES = \
  Messaging/AMH_Response_Handler.cpp \
  Messaging/AMI_Arguments_Converter_Impl.cpp \
  Messaging/Asynch_Invocation.cpp \
  Messaging/Asynch_Invocation_Adapter.cpp \
  Messaging/Asynch_Reply_Dispatcher.cpp \
  Messaging/Asynch_Timeout_Handler.cpp \
  Messaging/Buffering_Constraint_Policy.cpp \
  Messaging/Connection_Timeout_Policy_i.cpp \
  Messaging/ExceptionHolderA.cpp \
  Messaging/ExceptionHolderC.cpp \
  Messaging/ExceptionHolder_i.cpp \
  Messaging/Messaging.cpp \
  Messaging/MessagingA.cpp \
  Messaging/MessagingC.cpp \
  Messaging/MessagingS.cpp \
  Messaging/Messaging_Loader.cpp \
  Messaging/Messaging_No_ImplA.cpp \
  Messaging/Messaging_No_ImplC.cpp \
  Messaging/Messaging_ORBInitializer.cpp \
  Messaging/Messaging_PolicyFactory.cpp \
  Messaging/Messaging_Policy_i.cpp \
  Messaging/Messaging_Queueing_Strategies.cpp \
  Messaging/Messaging_RT_PolicyA.cpp \
  Messaging/Messaging_RT_PolicyC.cpp \
  Messaging/Messaging_SyncScope_PolicyA.cpp \
  Messaging/Messaging_SyncScope_PolicyC.cpp \
  Messaging/Messaging_TypesC.cpp \
  Messaging/PollableC.cpp \
  Messaging/TAO_ExtA.cpp \
  Messaging/TAO_ExtC.cpp

libTAO_Messaging_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_Messaging_la_LIBADD = \
  libTAO_Valuetype.la \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  Messaging/AMH_Response_Handler.h \
  Messaging/AMI_Arguments_Converter_Impl.h \
  Messaging/Asynch_Invocation.h \
  Messaging/Asynch_Invocation_Adapter.h \
  Messaging/Asynch_Reply_Dispatcher.h \
  Messaging/Asynch_Timeout_Handler.h \
  Messaging/Buffering_Constraint_Policy.h \
  Messaging/Buffering_Constraint_Policy.inl \
  Messaging/Connection_Timeout_Policy_i.h \
  Messaging/ExceptionHolder.pidl \
  Messaging/ExceptionHolderA.h \
  Messaging/ExceptionHolderC.h \
  Messaging/ExceptionHolderC.inl \
  Messaging/ExceptionHolderS.h \
  Messaging/ExceptionHolder_i.h \
  Messaging/Messaging.h \
  Messaging/Messaging.pidl \
  Messaging/MessagingA.h \
  Messaging/MessagingC.h \
  Messaging/MessagingC.inl \
  Messaging/MessagingS.h \
  Messaging/Messaging_Loader.h \
  Messaging/Messaging_No_Impl.pidl \
  Messaging/Messaging_No_ImplA.h \
  Messaging/Messaging_No_ImplC.h \
  Messaging/Messaging_No_ImplS.h \
  Messaging/Messaging_ORBInitializer.h \
  Messaging/Messaging_PolicyFactory.h \
  Messaging/Messaging_Policy_i.h \
  Messaging/Messaging_Policy_i.inl \
  Messaging/Messaging_Queueing_Strategies.h \
  Messaging/Messaging_RT_Policy.pidl \
  Messaging/Messaging_RT_PolicyA.h \
  Messaging/Messaging_RT_PolicyC.h \
  Messaging/Messaging_RT_PolicyS.h \
  Messaging/Messaging_SyncScope_Policy.pidl \
  Messaging/Messaging_SyncScope_PolicyA.h \
  Messaging/Messaging_SyncScope_PolicyC.h \
  Messaging/Messaging_SyncScope_PolicyS.h \
  Messaging/Messaging_Types.pidl \
  Messaging/Messaging_TypesA.h \
  Messaging/Messaging_TypesC.h \
  Messaging/Messaging_TypesS.h \
  Messaging/Pollable.pidl \
  Messaging/PollableA.h \
  Messaging/PollableC.h \
  Messaging/PollableS.h \
  Messaging/TAO_Ext.pidl \
  Messaging/TAO_ExtA.h \
  Messaging/TAO_ExtC.h \
  Messaging/TAO_ExtS.h \
  Messaging/messaging_export.h

pkgconfig_DATA += \
  TAO_Messaging.pc

CLEANFILES += \
  TAO_Messaging.pc

TAO_Messaging.pc: ${top_builddir}/config.status ${srcdir}/Messaging/TAO_Messaging.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/Messaging/TAO_Messaging.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  Messaging/TAO_Messaging.pc.in \
  Messaging/TAO_Messaging.rc


## Makefile.DynamicInterface.am

if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS

lib_LTLIBRARIES += libTAO_DynamicInterface.la

libTAO_DynamicInterface_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_DYNAMICINTERFACE_BUILD_DLL

libTAO_DynamicInterface_la_SOURCES = \
  DynamicInterface/AMH_DSI_Response_Handler.cpp \
  DynamicInterface/Context.cpp \
  DynamicInterface/DII_Arguments.cpp \
  DynamicInterface/DII_Arguments_Converter_Impl.cpp \
  DynamicInterface/DII_Invocation.cpp \
  DynamicInterface/DII_Invocation_Adapter.cpp \
  DynamicInterface/DII_Reply_Dispatcher.cpp \
  DynamicInterface/DII_Reply_Handler.cpp \
  DynamicInterface/Dynamic_Adapter_Impl.cpp \
  DynamicInterface/Dynamic_Implementation.cpp \
  DynamicInterface/ExceptionList.cpp \
  DynamicInterface/Request.cpp \
  DynamicInterface/Server_Request.cpp \
  DynamicInterface/Unknown_User_Exception.cpp

libTAO_DynamicInterface_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_DynamicInterface_la_LIBADD = \
  libTAO_Messaging.la \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_PortableServer.la \
  libTAO_Valuetype.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  DynamicInterface/AMH_DSI_Response_Handler.h \
  DynamicInterface/AMH_DSI_Response_Handler.inl \
  DynamicInterface/Context.h \
  DynamicInterface/Context.inl \
  DynamicInterface/DII_Arguments.h \
  DynamicInterface/DII_Arguments.inl \
  DynamicInterface/DII_Arguments_Converter_Impl.h \
  DynamicInterface/DII_CORBA_methods.h \
  DynamicInterface/DII_Invocation.h \
  DynamicInterface/DII_Invocation_Adapter.h \
  DynamicInterface/DII_Reply_Dispatcher.h \
  DynamicInterface/DII_Reply_Handler.h \
  DynamicInterface/DII_Reply_Handler.inl \
  DynamicInterface/Dynamic_Adapter_Impl.h \
  DynamicInterface/Dynamic_Implementation.h \
  DynamicInterface/ExceptionList.h \
  DynamicInterface/ExceptionList.inl \
  DynamicInterface/Request.h \
  DynamicInterface/Request.inl \
  DynamicInterface/Server_Request.h \
  DynamicInterface/Server_Request.inl \
  DynamicInterface/Unknown_User_Exception.h \
  DynamicInterface/dynamicinterface_export.h

pkgconfig_DATA += \
  TAO_DynamicInterface.pc

CLEANFILES += \
  TAO_DynamicInterface.pc

TAO_DynamicInterface.pc: ${top_builddir}/config.status ${srcdir}/DynamicInterface/TAO_DynamicInterface.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/DynamicInterface/TAO_DynamicInterface.pc.in

endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING

EXTRA_DIST += \
  DynamicInterface/TAO_DynamicInterface.pc.in \
  DynamicInterface/TAO_DynamicInterface.rc


## Makefile.EndpointPolicy.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  EndpointPolicy/EndpointPolicyA.cpp \
  EndpointPolicy/EndpointPolicyA.h \
  EndpointPolicy/EndpointPolicyC.cpp \
  EndpointPolicy/EndpointPolicyC.h \
  EndpointPolicy/EndpointPolicyS.h

CLEANFILES += \
  EndpointPolicy/EndpointPolicy-stamp \
  EndpointPolicy/EndpointPolicyA.cpp \
  EndpointPolicy/EndpointPolicyA.h \
  EndpointPolicy/EndpointPolicyC.cpp \
  EndpointPolicy/EndpointPolicyC.h \
  EndpointPolicy/EndpointPolicyS.h

EndpointPolicy/EndpointPolicyA.cpp EndpointPolicy/EndpointPolicyA.h EndpointPolicy/EndpointPolicyC.cpp EndpointPolicy/EndpointPolicyC.h EndpointPolicy/EndpointPolicyS.h: EndpointPolicy/EndpointPolicy-stamp

EndpointPolicy/EndpointPolicy-stamp: $(srcdir)/EndpointPolicy/EndpointPolicy.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -GA -SS -Sci -Sorb -Wb,export_macro=TAO_EndpointPolicy_Export -Wb,export_include=tao/EndpointPolicy/EndpointPolicy_Export.h -o EndpointPolicy $(srcdir)/EndpointPolicy/EndpointPolicy.pidl
	@touch $@

BUILT_SOURCES += \
  EndpointPolicy/IIOPEndpointValueA.cpp \
  EndpointPolicy/IIOPEndpointValueA.h \
  EndpointPolicy/IIOPEndpointValueC.cpp \
  EndpointPolicy/IIOPEndpointValueC.h \
  EndpointPolicy/IIOPEndpointValueS.h

CLEANFILES += \
  EndpointPolicy/IIOPEndpointValue-stamp \
  EndpointPolicy/IIOPEndpointValueA.cpp \
  EndpointPolicy/IIOPEndpointValueA.h \
  EndpointPolicy/IIOPEndpointValueC.cpp \
  EndpointPolicy/IIOPEndpointValueC.h \
  EndpointPolicy/IIOPEndpointValueS.h

EndpointPolicy/IIOPEndpointValueA.cpp EndpointPolicy/IIOPEndpointValueA.h EndpointPolicy/IIOPEndpointValueC.cpp EndpointPolicy/IIOPEndpointValueC.h EndpointPolicy/IIOPEndpointValueS.h: EndpointPolicy/IIOPEndpointValue-stamp

EndpointPolicy/IIOPEndpointValue-stamp: $(srcdir)/EndpointPolicy/IIOPEndpointValue.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -GA -SS -Sci -Sorb -Wb,export_macro=TAO_EndpointPolicy_Export -Wb,export_include=tao/EndpointPolicy/EndpointPolicy_Export.h -o EndpointPolicy $(srcdir)/EndpointPolicy/IIOPEndpointValue.pidl
	@touch $@

BUILT_SOURCES += \
  EndpointPolicy/EndpointPolicyTypeA.cpp \
  EndpointPolicy/EndpointPolicyTypeA.h \
  EndpointPolicy/EndpointPolicyTypeC.cpp \
  EndpointPolicy/EndpointPolicyTypeC.h \
  EndpointPolicy/EndpointPolicyTypeS.h

CLEANFILES += \
  EndpointPolicy/EndpointPolicyType-stamp \
  EndpointPolicy/EndpointPolicyTypeA.cpp \
  EndpointPolicy/EndpointPolicyTypeA.h \
  EndpointPolicy/EndpointPolicyTypeC.cpp \
  EndpointPolicy/EndpointPolicyTypeC.h \
  EndpointPolicy/EndpointPolicyTypeS.h

EndpointPolicy/EndpointPolicyTypeA.cpp EndpointPolicy/EndpointPolicyTypeA.h EndpointPolicy/EndpointPolicyTypeC.cpp EndpointPolicy/EndpointPolicyTypeC.h EndpointPolicy/EndpointPolicyTypeS.h: EndpointPolicy/EndpointPolicyType-stamp

EndpointPolicy/EndpointPolicyType-stamp: $(srcdir)/EndpointPolicy/EndpointPolicyType.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -GA -SS -Sci -Sorb -Wb,export_macro=TAO_EndpointPolicy_Export -Wb,export_include=tao/EndpointPolicy/EndpointPolicy_Export.h -o EndpointPolicy $(srcdir)/EndpointPolicy/EndpointPolicyType.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_EndpointPolicy.la

libTAO_EndpointPolicy_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_ENDPOINTPOLICY_BUILD_DLL

libTAO_EndpointPolicy_la_SOURCES = \
  EndpointPolicy/EndpointPolicy.cpp \
  EndpointPolicy/EndpointPolicyA.cpp \
  EndpointPolicy/EndpointPolicyC.cpp \
  EndpointPolicy/EndpointPolicyTypeA.cpp \
  EndpointPolicy/EndpointPolicyTypeC.cpp \
  EndpointPolicy/EndpointPolicy_Factory.cpp \
  EndpointPolicy/EndpointPolicy_ORBInitializer.cpp \
  EndpointPolicy/EndpointPolicy_i.cpp \
  EndpointPolicy/Endpoint_Acceptor_Filter.cpp \
  EndpointPolicy/Endpoint_Acceptor_Filter_Factory.cpp \
  EndpointPolicy/Endpoint_Value_Impl.cpp \
  EndpointPolicy/IIOPEndpointValueA.cpp \
  EndpointPolicy/IIOPEndpointValueC.cpp \
  EndpointPolicy/IIOPEndpointValue_i.cpp

libTAO_EndpointPolicy_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_EndpointPolicy_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  EndpointPolicy/EndpointPolicy.h \
  EndpointPolicy/EndpointPolicy.pidl \
  EndpointPolicy/EndpointPolicyA.h \
  EndpointPolicy/EndpointPolicyC.h \
  EndpointPolicy/EndpointPolicyS.h \
  EndpointPolicy/EndpointPolicyType.pidl \
  EndpointPolicy/EndpointPolicyTypeA.h \
  EndpointPolicy/EndpointPolicyTypeC.h \
  EndpointPolicy/EndpointPolicyTypeS.h \
  EndpointPolicy/EndpointPolicy_Export.h \
  EndpointPolicy/EndpointPolicy_Factory.h \
  EndpointPolicy/EndpointPolicy_ORBInitializer.h \
  EndpointPolicy/EndpointPolicy_i.h \
  EndpointPolicy/Endpoint_Acceptor_Filter.h \
  EndpointPolicy/Endpoint_Acceptor_Filter_Factory.h \
  EndpointPolicy/Endpoint_Value_Impl.h \
  EndpointPolicy/IIOPEndpointValue.pidl \
  EndpointPolicy/IIOPEndpointValueA.h \
  EndpointPolicy/IIOPEndpointValueC.h \
  EndpointPolicy/IIOPEndpointValueS.h \
  EndpointPolicy/IIOPEndpointValue_i.h

pkgconfig_DATA += \
  TAO_EndpointPolicy.pc

CLEANFILES += \
  TAO_EndpointPolicy.pc

TAO_EndpointPolicy.pc: ${top_builddir}/config.status ${srcdir}/EndpointPolicy/TAO_EndpointPolicy.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/EndpointPolicy/TAO_EndpointPolicy.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  EndpointPolicy/TAO_EndpointPolicy.pc.in


## Makefile.IFR_Client.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  IFR_Client/IFR_BaseA.h \
  IFR_Client/IFR_BaseC.cpp \
  IFR_Client/IFR_BaseC.h \
  IFR_Client/IFR_BaseC.inl \
  IFR_Client/IFR_BaseS.h

CLEANFILES += \
  IFR_Client/IFR_Base-stamp \
  IFR_Client/IFR_BaseA.h \
  IFR_Client/IFR_BaseC.cpp \
  IFR_Client/IFR_BaseC.h \
  IFR_Client/IFR_BaseC.inl \
  IFR_Client/IFR_BaseS.h

IFR_Client/IFR_BaseA.h IFR_Client/IFR_BaseC.cpp IFR_Client/IFR_BaseC.h IFR_Client/IFR_BaseC.inl IFR_Client/IFR_BaseS.h: IFR_Client/IFR_Base-stamp

IFR_Client/IFR_Base-stamp: $(srcdir)/IFR_Client/IFR_Base.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -GX -Wb,stub_export_macro=TAO_IFR_Client_Export -Wb,stub_export_include=tao/IFR_Client/ifr_client_export.h -o IFR_Client $(srcdir)/IFR_Client/IFR_Base.pidl
	@touch $@

BUILT_SOURCES += \
  IFR_Client/IFR_BasicA.h \
  IFR_Client/IFR_BasicC.cpp \
  IFR_Client/IFR_BasicC.h \
  IFR_Client/IFR_BasicC.inl \
  IFR_Client/IFR_BasicS.h

CLEANFILES += \
  IFR_Client/IFR_Basic-stamp \
  IFR_Client/IFR_BasicA.h \
  IFR_Client/IFR_BasicC.cpp \
  IFR_Client/IFR_BasicC.h \
  IFR_Client/IFR_BasicC.inl \
  IFR_Client/IFR_BasicS.h

IFR_Client/IFR_BasicA.h IFR_Client/IFR_BasicC.cpp IFR_Client/IFR_BasicC.h IFR_Client/IFR_BasicC.inl IFR_Client/IFR_BasicS.h: IFR_Client/IFR_Basic-stamp

IFR_Client/IFR_Basic-stamp: $(srcdir)/IFR_Client/IFR_Basic.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -GX -Wb,stub_export_macro=TAO_IFR_Client_Export -Wb,stub_export_include=tao/IFR_Client/ifr_client_export.h -o IFR_Client $(srcdir)/IFR_Client/IFR_Basic.pidl
	@touch $@

BUILT_SOURCES += \
  IFR_Client/IFR_ComponentsA.h \
  IFR_Client/IFR_ComponentsC.cpp \
  IFR_Client/IFR_ComponentsC.h \
  IFR_Client/IFR_ComponentsC.inl \
  IFR_Client/IFR_ComponentsS.h

CLEANFILES += \
  IFR_Client/IFR_Components-stamp \
  IFR_Client/IFR_ComponentsA.h \
  IFR_Client/IFR_ComponentsC.cpp \
  IFR_Client/IFR_ComponentsC.h \
  IFR_Client/IFR_ComponentsC.inl \
  IFR_Client/IFR_ComponentsS.h

IFR_Client/IFR_ComponentsA.h IFR_Client/IFR_ComponentsC.cpp IFR_Client/IFR_ComponentsC.h IFR_Client/IFR_ComponentsC.inl IFR_Client/IFR_ComponentsS.h: IFR_Client/IFR_Components-stamp

IFR_Client/IFR_Components-stamp: $(srcdir)/IFR_Client/IFR_Components.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -GX -Wb,stub_export_macro=TAO_IFR_Client_Export -Wb,stub_export_include=tao/IFR_Client/ifr_client_export.h -o IFR_Client $(srcdir)/IFR_Client/IFR_Components.pidl
	@touch $@

BUILT_SOURCES += \
  IFR_Client/IFR_ExtendedA.h \
  IFR_Client/IFR_ExtendedC.cpp \
  IFR_Client/IFR_ExtendedC.h \
  IFR_Client/IFR_ExtendedC.inl \
  IFR_Client/IFR_ExtendedS.h

CLEANFILES += \
  IFR_Client/IFR_Extended-stamp \
  IFR_Client/IFR_ExtendedA.h \
  IFR_Client/IFR_ExtendedC.cpp \
  IFR_Client/IFR_ExtendedC.h \
  IFR_Client/IFR_ExtendedC.inl \
  IFR_Client/IFR_ExtendedS.h

IFR_Client/IFR_ExtendedA.h IFR_Client/IFR_ExtendedC.cpp IFR_Client/IFR_ExtendedC.h IFR_Client/IFR_ExtendedC.inl IFR_Client/IFR_ExtendedS.h: IFR_Client/IFR_Extended-stamp

IFR_Client/IFR_Extended-stamp: $(srcdir)/IFR_Client/IFR_Extended.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -GX -Wb,stub_export_macro=TAO_IFR_Client_Export -Wb,stub_export_include=tao/IFR_Client/ifr_client_export.h -o IFR_Client $(srcdir)/IFR_Client/IFR_Extended.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_IFR_Client.la

libTAO_IFR_Client_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_IFR_CLIENT_BUILD_DLL

libTAO_IFR_Client_la_SOURCES = \
  IFR_Client/IFR_BaseC.cpp \
  IFR_Client/IFR_BasicC.cpp \
  IFR_Client/IFR_Client_Adapter_Impl.cpp \
  IFR_Client/IFR_ComponentsC.cpp \
  IFR_Client/IFR_ExtendedC.cpp

libTAO_IFR_Client_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_IFR_Client_la_LIBADD = \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  IFR_Client/IFR_Base.pidl \
  IFR_Client/IFR_Base.pidl \
  IFR_Client/IFR_BaseA.h \
  IFR_Client/IFR_BaseC.h \
  IFR_Client/IFR_BaseC.inl \
  IFR_Client/IFR_BaseS.h \
  IFR_Client/IFR_Basic.pidl \
  IFR_Client/IFR_Basic.pidl \
  IFR_Client/IFR_BasicA.h \
  IFR_Client/IFR_BasicC.h \
  IFR_Client/IFR_BasicC.inl \
  IFR_Client/IFR_BasicS.h \
  IFR_Client/IFR_Client_Adapter_Impl.h \
  IFR_Client/IFR_Components.pidl \
  IFR_Client/IFR_Components.pidl \
  IFR_Client/IFR_ComponentsA.h \
  IFR_Client/IFR_ComponentsC.h \
  IFR_Client/IFR_ComponentsC.inl \
  IFR_Client/IFR_ComponentsS.h \
  IFR_Client/IFR_Extended.pidl \
  IFR_Client/IFR_Extended.pidl \
  IFR_Client/IFR_ExtendedA.h \
  IFR_Client/IFR_ExtendedC.h \
  IFR_Client/IFR_ExtendedC.inl \
  IFR_Client/IFR_ExtendedS.h \
  IFR_Client/ifr_client_export.h

pkgconfig_DATA += \
  TAO_IFR_Client.pc

CLEANFILES += \
  TAO_IFR_Client.pc

TAO_IFR_Client.pc: ${top_builddir}/config.status ${srcdir}/IFR_Client/TAO_IFR_Client.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/IFR_Client/TAO_IFR_Client.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  IFR_Client/TAO_IFR_Client.pc.in \
  IFR_Client/TAO_IFR_Client.rc


## Makefile.ObjRefTemplate.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  ObjRefTemplate/ObjectReferenceTemplateA.h \
  ObjRefTemplate/ObjectReferenceTemplateC.cpp \
  ObjRefTemplate/ObjectReferenceTemplateC.h \
  ObjRefTemplate/ObjectReferenceTemplateC.inl \
  ObjRefTemplate/ObjectReferenceTemplateS.h

CLEANFILES += \
  ObjRefTemplate/ObjectReferenceTemplate-stamp \
  ObjRefTemplate/ObjectReferenceTemplateA.h \
  ObjRefTemplate/ObjectReferenceTemplateC.cpp \
  ObjRefTemplate/ObjectReferenceTemplateC.h \
  ObjRefTemplate/ObjectReferenceTemplateC.inl \
  ObjRefTemplate/ObjectReferenceTemplateS.h

ObjRefTemplate/ObjectReferenceTemplateA.h ObjRefTemplate/ObjectReferenceTemplateC.cpp ObjRefTemplate/ObjectReferenceTemplateC.h ObjRefTemplate/ObjectReferenceTemplateC.inl ObjRefTemplate/ObjectReferenceTemplateS.h: ObjRefTemplate/ObjectReferenceTemplate-stamp

ObjRefTemplate/ObjectReferenceTemplate-stamp: $(srcdir)/ObjRefTemplate/ObjectReferenceTemplate.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -SS -Sorb -GX -Wb,export_macro=TAO_ORT_Export -Wb,export_include=tao/ObjRefTemplate/ort_export.h -Wb,include_guard=TAO_OBJREF_TEMPLATE_SAFE_INCLUDE -Wb,safe_include=tao/ObjRefTemplate/ObjectReferenceTemplate.h -o ObjRefTemplate $(srcdir)/ObjRefTemplate/ObjectReferenceTemplate.pidl
	@touch $@

BUILT_SOURCES += \
  ObjRefTemplate/ObjectReferenceTemplate_includeA.h \
  ObjRefTemplate/ObjectReferenceTemplate_includeC.cpp \
  ObjRefTemplate/ObjectReferenceTemplate_includeC.h \
  ObjRefTemplate/ObjectReferenceTemplate_includeS.h

CLEANFILES += \
  ObjRefTemplate/ObjectReferenceTemplate_include-stamp \
  ObjRefTemplate/ObjectReferenceTemplate_includeA.h \
  ObjRefTemplate/ObjectReferenceTemplate_includeC.cpp \
  ObjRefTemplate/ObjectReferenceTemplate_includeC.h \
  ObjRefTemplate/ObjectReferenceTemplate_includeS.h

ObjRefTemplate/ObjectReferenceTemplate_includeA.h ObjRefTemplate/ObjectReferenceTemplate_includeC.cpp ObjRefTemplate/ObjectReferenceTemplate_includeC.h ObjRefTemplate/ObjectReferenceTemplate_includeS.h: ObjRefTemplate/ObjectReferenceTemplate_include-stamp

ObjRefTemplate/ObjectReferenceTemplate_include-stamp: $(srcdir)/ObjRefTemplate/ObjectReferenceTemplate_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GX -Sci -Wb,export_macro=TAO_ORT_Export -Wb,export_include=tao/ObjRefTemplate/ort_export.h -Wb,unique_include=tao/ObjRefTemplate/ObjectReferenceTemplate.h -o ObjRefTemplate $(srcdir)/ObjRefTemplate/ObjectReferenceTemplate_include.pidl
	@touch $@

BUILT_SOURCES += \
  ObjRefTemplate/Default_ORTA.cpp \
  ObjRefTemplate/Default_ORTA.h \
  ObjRefTemplate/Default_ORTC.cpp \
  ObjRefTemplate/Default_ORTC.h \
  ObjRefTemplate/Default_ORTC.inl \
  ObjRefTemplate/Default_ORTS.h

CLEANFILES += \
  ObjRefTemplate/Default_ORT-stamp \
  ObjRefTemplate/Default_ORTA.cpp \
  ObjRefTemplate/Default_ORTA.h \
  ObjRefTemplate/Default_ORTC.cpp \
  ObjRefTemplate/Default_ORTC.h \
  ObjRefTemplate/Default_ORTC.inl \
  ObjRefTemplate/Default_ORTS.h

ObjRefTemplate/Default_ORTA.cpp ObjRefTemplate/Default_ORTA.h ObjRefTemplate/Default_ORTC.cpp ObjRefTemplate/Default_ORTC.h ObjRefTemplate/Default_ORTC.inl ObjRefTemplate/Default_ORTS.h: ObjRefTemplate/Default_ORT-stamp

ObjRefTemplate/Default_ORT-stamp: $(srcdir)/ObjRefTemplate/Default_ORT.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -SS -GA -Sorb -Wb,export_macro=TAO_ORT_Export -Wb,export_include=tao/ObjRefTemplate/ort_export.h -o ObjRefTemplate $(srcdir)/ObjRefTemplate/Default_ORT.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_ObjRefTemplate.la

libTAO_ObjRefTemplate_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_ORT_BUILD_DLL

libTAO_ObjRefTemplate_la_SOURCES = \
  ObjRefTemplate/Default_ORTA.cpp \
  ObjRefTemplate/Default_ORTC.cpp \
  ObjRefTemplate/ORT_Adapter_Factory_Impl.cpp \
  ObjRefTemplate/ORT_Adapter_Impl.cpp \
  ObjRefTemplate/ObjectReferenceTemplateC.cpp \
  ObjRefTemplate/ObjectReferenceTemplate_i.cpp \
  ObjRefTemplate/ObjectReferenceTemplate_includeC.cpp

libTAO_ObjRefTemplate_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_ObjRefTemplate_la_LIBADD = \
  libTAO_PortableServer.la \
  libTAO_Valuetype.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  ObjRefTemplate/Default_ORT.pidl \
  ObjRefTemplate/Default_ORT.pidl \
  ObjRefTemplate/Default_ORTA.h \
  ObjRefTemplate/Default_ORTC.h \
  ObjRefTemplate/Default_ORTC.inl \
  ObjRefTemplate/Default_ORTS.h \
  ObjRefTemplate/ORT_Adapter_Factory_Impl.h \
  ObjRefTemplate/ORT_Adapter_Impl.h \
  ObjRefTemplate/ObjectReferenceTemplate.h \
  ObjRefTemplate/ObjectReferenceTemplate.pidl \
  ObjRefTemplate/ObjectReferenceTemplate.pidl \
  ObjRefTemplate/ObjectReferenceTemplateA.h \
  ObjRefTemplate/ObjectReferenceTemplateC.h \
  ObjRefTemplate/ObjectReferenceTemplateC.inl \
  ObjRefTemplate/ObjectReferenceTemplateS.h \
  ObjRefTemplate/ObjectReferenceTemplate_i.h \
  ObjRefTemplate/ObjectReferenceTemplate_include.pidl \
  ObjRefTemplate/ObjectReferenceTemplate_include.pidl \
  ObjRefTemplate/ObjectReferenceTemplate_includeA.h \
  ObjRefTemplate/ObjectReferenceTemplate_includeC.h \
  ObjRefTemplate/ObjectReferenceTemplate_includeS.h \
  ObjRefTemplate/ort_export.h

pkgconfig_DATA += \
  TAO_ObjRefTemplate.pc

CLEANFILES += \
  TAO_ObjRefTemplate.pc

TAO_ObjRefTemplate.pc: ${top_builddir}/config.status ${srcdir}/ObjRefTemplate/TAO_ObjRefTemplate.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/ObjRefTemplate/TAO_ObjRefTemplate.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  ObjRefTemplate/TAO_ObjRefTemplate.pc.in \
  ObjRefTemplate/TAO_ObjRefTemplate.rc


## Makefile.IORInterceptor.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  IORInterceptor/IORInterceptorC.cpp \
  IORInterceptor/IORInterceptorC.h \
  IORInterceptor/IORInterceptorS.h

CLEANFILES += \
  IORInterceptor/IORInterceptor-stamp \
  IORInterceptor/IORInterceptorC.cpp \
  IORInterceptor/IORInterceptorC.h \
  IORInterceptor/IORInterceptorS.h

IORInterceptor/IORInterceptorC.cpp IORInterceptor/IORInterceptorC.h IORInterceptor/IORInterceptorS.h: IORInterceptor/IORInterceptor-stamp

IORInterceptor/IORInterceptor-stamp: $(srcdir)/IORInterceptor/IORInterceptor.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Sa -St -Wb,export_macro=TAO_IORInterceptor_Export -Wb,export_include=tao/IORInterceptor/iorinterceptor_export.h -Wb,include_guard=TAO_IORINTERCEPTOR_SAFE_INCLUDE -Wb,safe_include=tao/IORInterceptor/IORInterceptor.h -o IORInterceptor $(srcdir)/IORInterceptor/IORInterceptor.pidl
	@touch $@

BUILT_SOURCES += \
  IORInterceptor/IORInfoC.cpp \
  IORInterceptor/IORInfoC.h \
  IORInterceptor/IORInfoS.h

CLEANFILES += \
  IORInterceptor/IORInfo-stamp \
  IORInterceptor/IORInfoC.cpp \
  IORInterceptor/IORInfoC.h \
  IORInterceptor/IORInfoS.h

IORInterceptor/IORInfoC.cpp IORInterceptor/IORInfoC.h IORInterceptor/IORInfoS.h: IORInterceptor/IORInfo-stamp

IORInterceptor/IORInfo-stamp: $(srcdir)/IORInterceptor/IORInfo.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Sa -St -Wb,export_macro=TAO_IORInterceptor_Export -Wb,export_include=tao/IORInterceptor/iorinterceptor_export.h -o IORInterceptor $(srcdir)/IORInterceptor/IORInfo.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_IORInterceptor.la

libTAO_IORInterceptor_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_IORINTERCEPTOR_BUILD_DLL

libTAO_IORInterceptor_la_SOURCES = \
  IORInterceptor/IORInfo.cpp \
  IORInterceptor/IORInfoC.cpp \
  IORInterceptor/IORInterceptorC.cpp \
  IORInterceptor/IORInterceptor_Adapter_Factory_Impl.cpp \
  IORInterceptor/IORInterceptor_Adapter_Impl.cpp \
  IORInterceptor/IORInterceptor_Details.cpp

libTAO_IORInterceptor_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_IORInterceptor_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_ObjRefTemplate.la \
  libTAO_Valuetype.la \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  IORInterceptor/IORInfo.h \
  IORInterceptor/IORInfo.inl \
  IORInterceptor/IORInfo.pidl \
  IORInterceptor/IORInfo.pidl \
  IORInterceptor/IORInfoC.h \
  IORInterceptor/IORInfoS.h \
  IORInterceptor/IORInterceptor.h \
  IORInterceptor/IORInterceptor.pidl \
  IORInterceptor/IORInterceptor.pidl \
  IORInterceptor/IORInterceptorC.h \
  IORInterceptor/IORInterceptorS.h \
  IORInterceptor/IORInterceptor_Adapter_Factory_Impl.h \
  IORInterceptor/IORInterceptor_Adapter_Impl.h \
  IORInterceptor/IORInterceptor_Details.h \
  IORInterceptor/iorinterceptor_export.h

pkgconfig_DATA += \
  TAO_IORInterceptor.pc

CLEANFILES += \
  TAO_IORInterceptor.pc

TAO_IORInterceptor.pc: ${top_builddir}/config.status ${srcdir}/IORInterceptor/TAO_IORInterceptor.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/IORInterceptor/TAO_IORInterceptor.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  IORInterceptor/TAO_IORInterceptor.pc.in \
  IORInterceptor/TAO_IORInterceptor.rc


## Makefile.IORManipulation.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  IORManipulation/IORA.h \
  IORManipulation/IORC.cpp \
  IORManipulation/IORC.h \
  IORManipulation/IORS.h

CLEANFILES += \
  IORManipulation/IOR-stamp \
  IORManipulation/IORA.h \
  IORManipulation/IORC.cpp \
  IORManipulation/IORC.h \
  IORManipulation/IORS.h

IORManipulation/IORA.h IORManipulation/IORC.cpp IORManipulation/IORC.h IORManipulation/IORS.h: IORManipulation/IOR-stamp

IORManipulation/IOR-stamp: $(srcdir)/IORManipulation/IOR.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GX -Wb,export_macro=TAO_IORManip_Export -Wb,export_include=tao/IORManipulation/ior_manip_export.h -Wb,include_guard=TAO_IORMANIP_SAFE_INCLUDE -Wb,safe_include=tao/IORManipulation/IORManip_Loader.h -o IORManipulation $(srcdir)/IORManipulation/IOR.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_IORManip.la

libTAO_IORManip_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_IORMANIP_BUILD_DLL

libTAO_IORManip_la_SOURCES = \
  IORManipulation/IORC.cpp \
  IORManipulation/IORManip_Filter.cpp \
  IORManipulation/IORManip_IIOP_Filter.cpp \
  IORManipulation/IORManip_Loader.cpp \
  IORManipulation/IORManipulation.cpp

libTAO_IORManip_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_IORManip_la_LIBADD = \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  IORManipulation/IOR.pidl \
  IORManipulation/IOR.pidl \
  IORManipulation/IORA.h \
  IORManipulation/IORC.h \
  IORManipulation/IORManip_Filter.h \
  IORManipulation/IORManip_IIOP_Filter.h \
  IORManipulation/IORManip_Loader.h \
  IORManipulation/IORManipulation.h \
  IORManipulation/IORS.h \
  IORManipulation/ior_manip_export.h

pkgconfig_DATA += \
  TAO_IORManip.pc

CLEANFILES += \
  TAO_IORManip.pc

TAO_IORManip.pc: ${top_builddir}/config.status ${srcdir}/IORManipulation/TAO_IORManip.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/IORManipulation/TAO_IORManip.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  IORManipulation/TAO_IORManip.pc.in \
  IORManipulation/TAO_IORManip.rc


## Makefile.IORTable.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  IORTable/IORTableC.cpp \
  IORTable/IORTableC.h \
  IORTable/IORTableS.h

CLEANFILES += \
  IORTable/IORTable-stamp \
  IORTable/IORTableC.cpp \
  IORTable/IORTableC.h \
  IORTable/IORTableS.h

IORTable/IORTableC.cpp IORTable/IORTableC.h IORTable/IORTableS.h: IORTable/IORTable-stamp

IORTable/IORTable-stamp: $(srcdir)/IORTable/IORTable.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Wb,export_macro=TAO_IORTable_Export -Wb,export_include=tao/IORTable/iortable_export.h -Wb,include_guard=TAO_IORTABLE_SAFE_INCLUDE -Wb,safe_include=tao/IORTable/IORTable.h -o IORTable $(srcdir)/IORTable/IORTable.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_IORTable.la

libTAO_IORTable_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_IORTABLE_BUILD_DLL

libTAO_IORTable_la_SOURCES = \
  IORTable/IORTable.cpp \
  IORTable/IORTableC.cpp \
  IORTable/IOR_Table_Impl.cpp \
  IORTable/Table_Adapter.cpp

libTAO_IORTable_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_IORTable_la_LIBADD = \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  IORTable/IORTable.h \
  IORTable/IORTable.pidl \
  IORTable/IORTable.pidl \
  IORTable/IORTableC.h \
  IORTable/IORTableS.h \
  IORTable/IOR_Table_Impl.h \
  IORTable/Table_Adapter.h \
  IORTable/iortable_export.h

pkgconfig_DATA += \
  TAO_IORTable.pc

CLEANFILES += \
  TAO_IORTable.pc

TAO_IORTable.pc: ${top_builddir}/config.status ${srcdir}/IORTable/TAO_IORTable.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/IORTable/TAO_IORTable.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  IORTable/TAO_IORTable.pc.in \
  IORTable/TAO_IORTable.rc


## Makefile.ImR_Client.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  ImR_Client/ServerObjectA.cpp \
  ImR_Client/ServerObjectA.h \
  ImR_Client/ServerObjectC.cpp \
  ImR_Client/ServerObjectC.h \
  ImR_Client/ServerObjectC.inl \
  ImR_Client/ServerObjectS.cpp \
  ImR_Client/ServerObjectS.h

CLEANFILES += \
  ImR_Client/ServerObject-stamp \
  ImR_Client/ServerObjectA.cpp \
  ImR_Client/ServerObjectA.h \
  ImR_Client/ServerObjectC.cpp \
  ImR_Client/ServerObjectC.h \
  ImR_Client/ServerObjectC.inl \
  ImR_Client/ServerObjectS.cpp \
  ImR_Client/ServerObjectS.h

ImR_Client/ServerObjectA.cpp ImR_Client/ServerObjectA.h ImR_Client/ServerObjectC.cpp ImR_Client/ServerObjectC.h ImR_Client/ServerObjectC.inl ImR_Client/ServerObjectS.cpp ImR_Client/ServerObjectS.h: ImR_Client/ServerObject-stamp

ImR_Client/ServerObject-stamp: $(srcdir)/ImR_Client/ServerObject.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Ssi -Gd -Sorb -GA -Wb,export_macro=TAO_IMR_Client_Export -Wb,export_include=tao/ImR_Client/imr_client_export.h -o ImR_Client $(srcdir)/ImR_Client/ServerObject.pidl
	@touch $@

BUILT_SOURCES += \
  ImR_Client/ImplRepoA.h \
  ImR_Client/ImplRepoC.cpp \
  ImR_Client/ImplRepoC.h \
  ImR_Client/ImplRepoC.inl \
  ImR_Client/ImplRepoS.cpp \
  ImR_Client/ImplRepoS.h

CLEANFILES += \
  ImR_Client/ImplRepo-stamp \
  ImR_Client/ImplRepoA.h \
  ImR_Client/ImplRepoC.cpp \
  ImR_Client/ImplRepoC.h \
  ImR_Client/ImplRepoC.inl \
  ImR_Client/ImplRepoS.cpp \
  ImR_Client/ImplRepoS.h

ImR_Client/ImplRepoA.h ImR_Client/ImplRepoC.cpp ImR_Client/ImplRepoC.h ImR_Client/ImplRepoC.inl ImR_Client/ImplRepoS.cpp ImR_Client/ImplRepoS.h: ImR_Client/ImplRepo-stamp

ImR_Client/ImplRepo-stamp: $(srcdir)/ImR_Client/ImplRepo.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Ssi -Gd -Sorb -GX -Wb,export_macro=TAO_IMR_Client_Export -Wb,export_include=tao/ImR_Client/imr_client_export.h -o ImR_Client $(srcdir)/ImR_Client/ImplRepo.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_ImR_Client.la

libTAO_ImR_Client_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_IMR_CLIENT_BUILD_DLL

libTAO_ImR_Client_la_SOURCES = \
  ImR_Client/ImR_Client.cpp \
  ImR_Client/ImplRepoC.cpp \
  ImR_Client/ImplRepoS.cpp \
  ImR_Client/ServerObjectA.cpp \
  ImR_Client/ServerObjectC.cpp \
  ImR_Client/ServerObjectS.cpp \
  ImR_Client/ServerObject_i.cpp

libTAO_ImR_Client_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_ImR_Client_la_LIBADD = \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  ImR_Client/ImR_Client.h \
  ImR_Client/ImplRepo.pidl \
  ImR_Client/ImplRepo.pidl \
  ImR_Client/ImplRepoA.h \
  ImR_Client/ImplRepoC.h \
  ImR_Client/ImplRepoC.inl \
  ImR_Client/ImplRepoS.h \
  ImR_Client/ServerObject.pidl \
  ImR_Client/ServerObject.pidl \
  ImR_Client/ServerObjectA.h \
  ImR_Client/ServerObjectC.h \
  ImR_Client/ServerObjectC.inl \
  ImR_Client/ServerObjectS.h \
  ImR_Client/ServerObject_i.h \
  ImR_Client/imr_client_export.h

pkgconfig_DATA += \
  TAO_ImR_Client.pc

CLEANFILES += \
  TAO_ImR_Client.pc

TAO_ImR_Client.pc: ${top_builddir}/config.status ${srcdir}/ImR_Client/TAO_ImR_Client.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/ImR_Client/TAO_ImR_Client.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  ImR_Client/TAO_IMR_Client.rc \
  ImR_Client/TAO_ImR_Client.pc.in


## Makefile.PI_Server.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  PI_Server/ServerRequestInfoA.cpp \
  PI_Server/ServerRequestInfoA.h \
  PI_Server/ServerRequestInfoC.cpp \
  PI_Server/ServerRequestInfoC.h \
  PI_Server/ServerRequestInfoS.h

CLEANFILES += \
  PI_Server/ServerRequestInfo-stamp \
  PI_Server/ServerRequestInfoA.cpp \
  PI_Server/ServerRequestInfoA.h \
  PI_Server/ServerRequestInfoC.cpp \
  PI_Server/ServerRequestInfoC.h \
  PI_Server/ServerRequestInfoS.h

PI_Server/ServerRequestInfoA.cpp PI_Server/ServerRequestInfoA.h PI_Server/ServerRequestInfoC.cpp PI_Server/ServerRequestInfoC.h PI_Server/ServerRequestInfoS.h: PI_Server/ServerRequestInfo-stamp

PI_Server/ServerRequestInfo-stamp: $(srcdir)/PI_Server/ServerRequestInfo.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Wb,export_macro=TAO_PI_Server_Export -Wb,export_include=tao/PI_Server/pi_server_export.h -o PI_Server -Sci -SS -GA -Gp -Gd -Sorb -Sal $(srcdir)/PI_Server/ServerRequestInfo.pidl
	@touch $@

BUILT_SOURCES += \
  PI_Server/PI_Server_includeA.h \
  PI_Server/PI_Server_includeC.cpp \
  PI_Server/PI_Server_includeC.h \
  PI_Server/PI_Server_includeS.h

CLEANFILES += \
  PI_Server/PI_Server_include-stamp \
  PI_Server/PI_Server_includeA.h \
  PI_Server/PI_Server_includeC.cpp \
  PI_Server/PI_Server_includeC.h \
  PI_Server/PI_Server_includeS.h

PI_Server/PI_Server_includeA.h PI_Server/PI_Server_includeC.cpp PI_Server/PI_Server_includeC.h PI_Server/PI_Server_includeS.h: PI_Server/PI_Server_include-stamp

PI_Server/PI_Server_include-stamp: $(srcdir)/PI_Server/PI_Server_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Wb,export_macro=TAO_PI_Server_Export -Wb,export_include=tao/PI_Server/pi_server_export.h -o PI_Server -SS -Sorb -GX -Sci -Wb,unique_include=tao/PI_Server/PI_Server.h $(srcdir)/PI_Server/PI_Server_include.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_PI_Server.la

libTAO_PI_Server_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_PI_SERVER_BUILD_DLL

libTAO_PI_Server_la_SOURCES = \
  PI_Server/PICurrent_Guard.cpp \
  PI_Server/PI_Server.cpp \
  PI_Server/PI_Server_Loader.cpp \
  PI_Server/PI_Server_includeC.cpp \
  PI_Server/PortableServer_ORBInitializer.cpp \
  PI_Server/PortableServer_PolicyFactory.cpp \
  PI_Server/ServerInterceptorAdapter.cpp \
  PI_Server/ServerRequestDetails.cpp \
  PI_Server/ServerRequestInfo.cpp \
  PI_Server/ServerRequestInfoA.cpp \
  PI_Server/ServerRequestInfoC.cpp \
  PI_Server/ServerRequestInterceptorA.cpp \
  PI_Server/ServerRequestInterceptorC.cpp \
  PI_Server/ServerRequestInterceptor_Factory_Impl.cpp

libTAO_PI_Server_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_PI_Server_la_LIBADD = \
  libTAO_PortableServer.la \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  PI_Server/PICurrent_Guard.h \
  PI_Server/PI_Server.h \
  PI_Server/PI_Server_Loader.h \
  PI_Server/PI_Server_include.pidl \
  PI_Server/PI_Server_include.pidl \
  PI_Server/PI_Server_includeA.h \
  PI_Server/PI_Server_includeC.h \
  PI_Server/PI_Server_includeS.h \
  PI_Server/Policy_Creator_T.h \
  PI_Server/PortableServer_ORBInitializer.h \
  PI_Server/PortableServer_PolicyFactory.h \
  PI_Server/ServerInterceptorAdapter.h \
  PI_Server/ServerRequestDetails.h \
  PI_Server/ServerRequestDetails.inl \
  PI_Server/ServerRequestInfo.h \
  PI_Server/ServerRequestInfo.inl \
  PI_Server/ServerRequestInfo.pidl \
  PI_Server/ServerRequestInfo.pidl \
  PI_Server/ServerRequestInfoA.h \
  PI_Server/ServerRequestInfoC.h \
  PI_Server/ServerRequestInfoS.h \
  PI_Server/ServerRequestInterceptor.pidl \
  PI_Server/ServerRequestInterceptorA.h \
  PI_Server/ServerRequestInterceptorC.h \
  PI_Server/ServerRequestInterceptorS.h \
  PI_Server/ServerRequestInterceptor_Factory_Impl.h \
  PI_Server/pi_server_export.h

pkgconfig_DATA += \
  TAO_PI_Server.pc

CLEANFILES += \
  TAO_PI_Server.pc

TAO_PI_Server.pc: ${top_builddir}/config.status ${srcdir}/PI_Server/TAO_PI_Server.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/PI_Server/TAO_PI_Server.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  PI_Server/TAO_PI_Server.pc.in


## Makefile.RTCORBA.am

if BUILD_EXCEPTIONS
if BUILD_RT_CORBA

BUILT_SOURCES += \
  RTCORBA/RTCORBA_includeA.h \
  RTCORBA/RTCORBA_includeC.cpp \
  RTCORBA/RTCORBA_includeC.h \
  RTCORBA/RTCORBA_includeS.h

CLEANFILES += \
  RTCORBA/RTCORBA_include-stamp \
  RTCORBA/RTCORBA_includeA.h \
  RTCORBA/RTCORBA_includeC.cpp \
  RTCORBA/RTCORBA_includeC.h \
  RTCORBA/RTCORBA_includeS.h

RTCORBA/RTCORBA_includeA.h RTCORBA/RTCORBA_includeC.cpp RTCORBA/RTCORBA_includeC.h RTCORBA/RTCORBA_includeS.h: RTCORBA/RTCORBA_include-stamp

RTCORBA/RTCORBA_include-stamp: $(srcdir)/RTCORBA/RTCORBA_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Sorb -GX -Wb,export_macro=TAO_RTCORBA_Export -Wb,export_include=tao/RTCORBA/rtcorba_export.h -o RTCORBA -Sa -Wb,unique_include=tao/RTCORBA/RTCORBA.h $(srcdir)/RTCORBA/RTCORBA_include.pidl
	@touch $@

BUILT_SOURCES += \
  RTCORBA/RTCORBAA.h \
  RTCORBA/RTCORBAC.cpp \
  RTCORBA/RTCORBAC.h \
  RTCORBA/RTCORBAS.h

CLEANFILES += \
  RTCORBA/RTCORBA-stamp \
  RTCORBA/RTCORBAA.h \
  RTCORBA/RTCORBAC.cpp \
  RTCORBA/RTCORBAC.h \
  RTCORBA/RTCORBAS.h

RTCORBA/RTCORBAA.h RTCORBA/RTCORBAC.cpp RTCORBA/RTCORBAC.h RTCORBA/RTCORBAS.h: RTCORBA/RTCORBA-stamp

RTCORBA/RTCORBA-stamp: $(srcdir)/RTCORBA/RTCORBA.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Sorb -GX -Wb,export_macro=TAO_RTCORBA_Export -Wb,export_include=tao/RTCORBA/rtcorba_export.h -o RTCORBA -Gp -Gd -Wb,include_guard=TAO_RTCORBA_SAFE_INCLUDE -Wb,safe_include=tao/RTCORBA/RTCORBA.h $(srcdir)/RTCORBA/RTCORBA.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_RTCORBA.la

libTAO_RTCORBA_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_RTCORBA_BUILD_DLL

libTAO_RTCORBA_la_SOURCES = \
  RTCORBA/Continuous_Priority_Mapping.cpp \
  RTCORBA/Direct_Priority_Mapping.cpp \
  RTCORBA/Linear_Network_Priority_Mapping.cpp \
  RTCORBA/Linear_Priority_Mapping.cpp \
  RTCORBA/Multi_Priority_Mapping.cpp \
  RTCORBA/Network_Priority_Mapping.cpp \
  RTCORBA/Network_Priority_Mapping_Manager.cpp \
  RTCORBA/Priority_Mapping.cpp \
  RTCORBA/Priority_Mapping_Manager.cpp \
  RTCORBA/RTCORBA.cpp \
  RTCORBA/RTCORBAC.cpp \
  RTCORBA/RTCORBA_includeC.cpp \
  RTCORBA/RT_Current.cpp \
  RTCORBA/RT_Service_Context_Handler.cpp \
  RTCORBA/RT_Endpoint_Selector_Factory.cpp \
  RTCORBA/RT_Endpoint_Utils.cpp \
  RTCORBA/RT_Invocation_Endpoint_Selectors.cpp \
  RTCORBA/RT_Mutex.cpp \
  RTCORBA/RT_ORB.cpp \
  RTCORBA/RT_ORBInitializer.cpp \
  RTCORBA/RT_ORB_Loader.cpp \
  RTCORBA/RT_PolicyFactory.cpp \
  RTCORBA/RT_Policy_i.cpp \
  RTCORBA/RT_ProtocolPropertiesA.cpp \
  RTCORBA/RT_ProtocolPropertiesC.cpp \
  RTCORBA/RT_Protocols_Hooks.cpp \
  RTCORBA/RT_Stub.cpp \
  RTCORBA/RT_Stub_Factory.cpp \
  RTCORBA/RT_Thread_Lane_Resources_Manager.cpp \
  RTCORBA/RT_Transport_Descriptor.cpp \
  RTCORBA/RT_Transport_Descriptor_Property.cpp \
  RTCORBA/Thread_Pool.cpp

libTAO_RTCORBA_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_RTCORBA_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  RTCORBA/Continuous_Priority_Mapping.h \
  RTCORBA/Direct_Priority_Mapping.h \
  RTCORBA/Linear_Network_Priority_Mapping.h \
  RTCORBA/RT_Service_Context_Handler.h \
  RTCORBA/Linear_Priority_Mapping.h \
  RTCORBA/Multi_Priority_Mapping.h \
  RTCORBA/Network_Priority_Mapping.h \
  RTCORBA/Network_Priority_Mapping_Manager.h \
  RTCORBA/Network_Priority_Mapping_Manager.inl \
  RTCORBA/Priority_Mapping.h \
  RTCORBA/Priority_Mapping_Manager.h \
  RTCORBA/Priority_Mapping_Manager.inl \
  RTCORBA/RTCORBA.h \
  RTCORBA/RTCORBA.pidl \
  RTCORBA/RTCORBA.pidl \
  RTCORBA/RTCORBAA.h \
  RTCORBA/RTCORBAC.h \
  RTCORBA/RTCORBAS.h \
  RTCORBA/RTCORBA_include.pidl \
  RTCORBA/RTCORBA_include.pidl \
  RTCORBA/RTCORBA_includeA.h \
  RTCORBA/RTCORBA_includeC.h \
  RTCORBA/RTCORBA_includeS.h \
  RTCORBA/RT_Current.h \
  RTCORBA/RT_Endpoint_Selector_Factory.h \
  RTCORBA/RT_Endpoint_Utils.h \
  RTCORBA/RT_Invocation_Endpoint_Selectors.h \
  RTCORBA/RT_Mutex.h \
  RTCORBA/RT_ORB.h \
  RTCORBA/RT_ORBInitializer.h \
  RTCORBA/RT_ORB_Loader.h \
  RTCORBA/RT_PolicyFactory.h \
  RTCORBA/RT_Policy_i.h \
  RTCORBA/RT_ProtocolProperties.pidl \
  RTCORBA/RT_ProtocolPropertiesA.h \
  RTCORBA/RT_ProtocolPropertiesC.h \
  RTCORBA/RT_ProtocolPropertiesS.h \
  RTCORBA/RT_Protocols_Hooks.h \
  RTCORBA/RT_Stub.h \
  RTCORBA/RT_Stub_Factory.h \
  RTCORBA/RT_Thread_Lane_Resources_Manager.h \
  RTCORBA/RT_Transport_Descriptor.h \
  RTCORBA/RT_Transport_Descriptor.inl \
  RTCORBA/RT_Transport_Descriptor_Property.h \
  RTCORBA/RT_Transport_Descriptor_Property.inl \
  RTCORBA/Thread_Pool.h \
  RTCORBA/Thread_Pool.inl \
  RTCORBA/rtcorba_export.h \
  RTCORBA/rtcorba_typedefs.h

pkgconfig_DATA += \
  TAO_RTCORBA.pc

CLEANFILES += \
  TAO_RTCORBA.pc

TAO_RTCORBA.pc: ${top_builddir}/config.status ${srcdir}/RTCORBA/TAO_RTCORBA.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/RTCORBA/TAO_RTCORBA.pc.in

endif BUILD_RT_CORBA
endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  RTCORBA/TAO_RTCORBA.pc.in \
  RTCORBA/TAO_RTCORBA.rc


## Makefile.RTPortableServer.am

if BUILD_EXCEPTIONS
if BUILD_RT_CORBA

BUILT_SOURCES += \
  RTPortableServer/RTPortableServerA.h \
  RTPortableServer/RTPortableServerC.cpp \
  RTPortableServer/RTPortableServerC.h \
  RTPortableServer/RTPortableServerS.h

CLEANFILES += \
  RTPortableServer/RTPortableServer-stamp \
  RTPortableServer/RTPortableServerA.h \
  RTPortableServer/RTPortableServerC.cpp \
  RTPortableServer/RTPortableServerC.h \
  RTPortableServer/RTPortableServerS.h

RTPortableServer/RTPortableServerA.h RTPortableServer/RTPortableServerC.cpp RTPortableServer/RTPortableServerC.h RTPortableServer/RTPortableServerS.h: RTPortableServer/RTPortableServer-stamp

RTPortableServer/RTPortableServer-stamp: $(srcdir)/RTPortableServer/RTPortableServer.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sci -SS -Sorb -GX -Wb,export_macro=TAO_RTPortableServer_Export -Wb,export_include=tao/RTPortableServer/rtportableserver_export.h -o RTPortableServer -Gp -Gd -Wb,include_guard=TAO_RT_PORTABLESERVER_SAFE_INCLUDE -Wb,safe_include=tao/RTPortableServer/RTPortableServer.h $(srcdir)/RTPortableServer/RTPortableServer.pidl
	@touch $@

BUILT_SOURCES += \
  RTPortableServer/RTPortableServer_includeA.h \
  RTPortableServer/RTPortableServer_includeC.cpp \
  RTPortableServer/RTPortableServer_includeC.h \
  RTPortableServer/RTPortableServer_includeS.h

CLEANFILES += \
  RTPortableServer/RTPortableServer_include-stamp \
  RTPortableServer/RTPortableServer_includeA.h \
  RTPortableServer/RTPortableServer_includeC.cpp \
  RTPortableServer/RTPortableServer_includeC.h \
  RTPortableServer/RTPortableServer_includeS.h

RTPortableServer/RTPortableServer_includeA.h RTPortableServer/RTPortableServer_includeC.cpp RTPortableServer/RTPortableServer_includeC.h RTPortableServer/RTPortableServer_includeS.h: RTPortableServer/RTPortableServer_include-stamp

RTPortableServer/RTPortableServer_include-stamp: $(srcdir)/RTPortableServer/RTPortableServer_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sci -SS -Sorb -GX -Wb,export_macro=TAO_RTPortableServer_Export -Wb,export_include=tao/RTPortableServer/rtportableserver_export.h -o RTPortableServer -Sa -Wb,unique_include=tao/RTPortableServer/RTPortableServer.h $(srcdir)/RTPortableServer/RTPortableServer_include.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_RTPortableServer.la

libTAO_RTPortableServer_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_RTPORTABLESERVER_BUILD_DLL

libTAO_RTPortableServer_la_SOURCES = \
  RTPortableServer/RTPortableServer.cpp \
  RTPortableServer/RTPortableServerC.cpp \
  RTPortableServer/RTPortableServer_includeC.cpp \
  RTPortableServer/RT_Acceptor_Filters.cpp \
  RTPortableServer/RT_Collocation_Resolver.cpp \
  RTPortableServer/RT_Object_Adapter_Factory.cpp \
  RTPortableServer/RT_POA.cpp \
  RTPortableServer/RT_Policy_Validator.cpp \
  RTPortableServer/RT_Servant_Dispatcher.cpp

libTAO_RTPortableServer_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_RTPortableServer_la_LIBADD = \
  libTAO_PortableServer.la \
  libTAO_RTCORBA.la \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  RTPortableServer/RTPortableServer.h \
  RTPortableServer/RTPortableServer.pidl \
  RTPortableServer/RTPortableServer.pidl \
  RTPortableServer/RTPortableServerA.h \
  RTPortableServer/RTPortableServerC.h \
  RTPortableServer/RTPortableServerS.h \
  RTPortableServer/RTPortableServer_include.pidl \
  RTPortableServer/RTPortableServer_include.pidl \
  RTPortableServer/RTPortableServer_includeA.h \
  RTPortableServer/RTPortableServer_includeC.h \
  RTPortableServer/RTPortableServer_includeS.h \
  RTPortableServer/RT_Acceptor_Filters.h \
  RTPortableServer/RT_Collocation_Resolver.h \
  RTPortableServer/RT_Object_Adapter_Factory.h \
  RTPortableServer/RT_POA.h \
  RTPortableServer/RT_POA.inl \
  RTPortableServer/RT_Policy_Validator.h \
  RTPortableServer/RT_Servant_Dispatcher.h \
  RTPortableServer/rtportableserver_export.h

pkgconfig_DATA += \
  TAO_RTPortableServer.pc

CLEANFILES += \
  TAO_RTPortableServer.pc

TAO_RTPortableServer.pc: ${top_builddir}/config.status ${srcdir}/RTPortableServer/TAO_RTPortableServer.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/RTPortableServer/TAO_RTPortableServer.pc.in

endif BUILD_RT_CORBA
endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  RTPortableServer/TAO_RTPortableServer.pc.in \
  RTPortableServer/TAO_RTPortableServer.rc


## Makefile.RTScheduler.am

if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if BUILD_RT_CORBA

BUILT_SOURCES += \
  RTScheduling/RTSchedulerA.h \
  RTScheduling/RTSchedulerC.cpp \
  RTScheduling/RTSchedulerC.h \
  RTScheduling/RTSchedulerS.h

CLEANFILES += \
  RTScheduling/RTScheduler-stamp \
  RTScheduling/RTSchedulerA.h \
  RTScheduling/RTSchedulerC.cpp \
  RTScheduling/RTSchedulerC.h \
  RTScheduling/RTSchedulerS.h

RTScheduling/RTSchedulerA.h RTScheduling/RTSchedulerC.cpp RTScheduling/RTSchedulerC.h RTScheduling/RTSchedulerS.h: RTScheduling/RTScheduler-stamp

RTScheduling/RTScheduler-stamp: $(srcdir)/RTScheduling/RTScheduler.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -GX -Wb,export_macro=TAO_RTScheduler_Export -Wb,export_include=tao/RTScheduling/rtscheduler_export.h -Wb,include_guard=TAO_RTSCHEDULER_SAFE_INCLUDE -Wb,safe_include=tao/RTScheduling/RTScheduler.h -o RTScheduling $(srcdir)/RTScheduling/RTScheduler.pidl
	@touch $@

BUILT_SOURCES += \
  RTScheduling/RTScheduler_includeA.h \
  RTScheduling/RTScheduler_includeC.cpp \
  RTScheduling/RTScheduler_includeC.h \
  RTScheduling/RTScheduler_includeS.h

CLEANFILES += \
  RTScheduling/RTScheduler_include-stamp \
  RTScheduling/RTScheduler_includeA.h \
  RTScheduling/RTScheduler_includeC.cpp \
  RTScheduling/RTScheduler_includeC.h \
  RTScheduling/RTScheduler_includeS.h

RTScheduling/RTScheduler_includeA.h RTScheduling/RTScheduler_includeC.cpp RTScheduling/RTScheduler_includeC.h RTScheduling/RTScheduler_includeS.h: RTScheduling/RTScheduler_include-stamp

RTScheduling/RTScheduler_include-stamp: $(srcdir)/RTScheduling/RTScheduler_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sorb -GX -Sci -Wb,export_macro=TAO_RTScheduler_Export -Wb,export_include=tao/RTScheduling/rtscheduler_export.h -Wb,unique_include=tao/RTScheduling/RTScheduler.h -o RTScheduling $(srcdir)/RTScheduling/RTScheduler_include.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_RTScheduler.la

libTAO_RTScheduler_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_RTSCHEDULER_BUILD_DLL

libTAO_RTScheduler_la_SOURCES = \
  RTScheduling/Current.cpp \
  RTScheduling/Distributable_Thread.cpp \
  RTScheduling/RTScheduler.cpp \
  RTScheduling/RTSchedulerC.cpp \
  RTScheduling/RTScheduler_Initializer.cpp \
  RTScheduling/RTScheduler_Loader.cpp \
  RTScheduling/RTScheduler_Manager.cpp \
  RTScheduling/RTScheduler_includeC.cpp \
  RTScheduling/Request_Interceptor.cpp

libTAO_RTScheduler_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_RTScheduler_la_LIBADD = \
  libTAO_PI_Server.la \
  libTAO_PortableServer.la \
  libTAO_RTCORBA.la \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  RTScheduling/Current.h \
  RTScheduling/Distributable_Thread.h \
  RTScheduling/RTScheduler.h \
  RTScheduling/RTScheduler.pidl \
  RTScheduling/RTScheduler.pidl \
  RTScheduling/RTSchedulerA.h \
  RTScheduling/RTSchedulerC.h \
  RTScheduling/RTSchedulerS.h \
  RTScheduling/RTScheduler_Initializer.h \
  RTScheduling/RTScheduler_Loader.h \
  RTScheduling/RTScheduler_Manager.h \
  RTScheduling/RTScheduler_Manager.inl \
  RTScheduling/RTScheduler_include.pidl \
  RTScheduling/RTScheduler_include.pidl \
  RTScheduling/RTScheduler_includeA.h \
  RTScheduling/RTScheduler_includeC.h \
  RTScheduling/RTScheduler_includeS.h \
  RTScheduling/Request_Interceptor.h \
  RTScheduling/ThreadAction.h \
  RTScheduling/rtscheduler_export.h

pkgconfig_DATA += \
  TAO_RTScheduler.pc

CLEANFILES += \
  TAO_RTScheduler.pc

TAO_RTScheduler.pc: ${top_builddir}/config.status ${srcdir}/RTScheduling/TAO_RTScheduler.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/RTScheduling/TAO_RTScheduler.pc.in

endif BUILD_RT_CORBA
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING

EXTRA_DIST += \
  RTScheduling/TAO_RTScheduler.pc.in \
  RTScheduling/TAO_RTScheduler.rc


## Makefile.SmartProxies.am

if BUILD_EXCEPTIONS

lib_LTLIBRARIES += libTAO_SmartProxies.la

libTAO_SmartProxies_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_SMARTPROXIES_BUILD_DLL

libTAO_SmartProxies_la_SOURCES = \
  SmartProxies/Smart_Proxies.cpp

libTAO_SmartProxies_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_SmartProxies_la_LIBADD = \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  SmartProxies/Smart_Proxies.h \
  SmartProxies/Smart_Proxies.inl \
  SmartProxies/smartproxies_export.h

pkgconfig_DATA += \
  TAO_SmartProxies.pc

CLEANFILES += \
  TAO_SmartProxies.pc

TAO_SmartProxies.pc: ${top_builddir}/config.status ${srcdir}/SmartProxies/TAO_SmartProxies.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/SmartProxies/TAO_SmartProxies.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  SmartProxies/SmartProxies.rc \
  SmartProxies/TAO_SmartProxies.pc.in


## Makefile.Strategies.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  Strategies/uiop_endpointsC.cpp \
  Strategies/uiop_endpointsC.h \
  Strategies/uiop_endpointsS.h

CLEANFILES += \
  Strategies/uiop_endpoints-stamp \
  Strategies/uiop_endpointsC.cpp \
  Strategies/uiop_endpointsC.h \
  Strategies/uiop_endpointsS.h

Strategies/uiop_endpointsC.cpp Strategies/uiop_endpointsC.h Strategies/uiop_endpointsS.h: Strategies/uiop_endpoints-stamp

Strategies/uiop_endpoints-stamp: $(srcdir)/Strategies/uiop_endpoints.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Gp -Gd -Sorb -DCORBA3 -Wb,export_macro=TAO_Strategies_Export -Wb,export_include=tao/Strategies/strategies_export.h -o Strategies $(srcdir)/Strategies/uiop_endpoints.pidl
	@touch $@

BUILT_SOURCES += \
  Strategies/sciop_endpointsC.cpp \
  Strategies/sciop_endpointsC.h \
  Strategies/sciop_endpointsS.h

CLEANFILES += \
  Strategies/sciop_endpoints-stamp \
  Strategies/sciop_endpointsC.cpp \
  Strategies/sciop_endpointsC.h \
  Strategies/sciop_endpointsS.h

Strategies/sciop_endpointsC.cpp Strategies/sciop_endpointsC.h Strategies/sciop_endpointsS.h: Strategies/sciop_endpoints-stamp

Strategies/sciop_endpoints-stamp: $(srcdir)/Strategies/sciop_endpoints.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Gp -Gd -Sorb -DCORBA3 -Wb,export_macro=TAO_Strategies_Export -Wb,export_include=tao/Strategies/strategies_export.h -o Strategies $(srcdir)/Strategies/sciop_endpoints.pidl
	@touch $@

BUILT_SOURCES += \
  Strategies/COIOP_EndpointsC.cpp \
  Strategies/COIOP_EndpointsC.h \
  Strategies/COIOP_EndpointsS.h

CLEANFILES += \
  Strategies/COIOP_Endpoints-stamp \
  Strategies/COIOP_EndpointsC.cpp \
  Strategies/COIOP_EndpointsC.h \
  Strategies/COIOP_EndpointsS.h

Strategies/COIOP_EndpointsC.cpp Strategies/COIOP_EndpointsC.h Strategies/COIOP_EndpointsS.h: Strategies/COIOP_Endpoints-stamp

Strategies/COIOP_Endpoints-stamp: $(srcdir)/Strategies/COIOP_Endpoints.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Sci -SS -Gp -Gd -Sorb -DCORBA3 -Wb,export_macro=TAO_Strategies_Export -Wb,export_include=tao/Strategies/strategies_export.h -o Strategies $(srcdir)/Strategies/COIOP_Endpoints.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_Strategies.la

libTAO_Strategies_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_STRATEGIES_BUILD_DLL

libTAO_Strategies_la_SOURCES = \
  Strategies/COIOP_Acceptor.cpp \
  Strategies/COIOP_Connection_Handler.cpp \
  Strategies/COIOP_Connector.cpp \
  Strategies/COIOP_Endpoint.cpp \
  Strategies/COIOP_EndpointsC.cpp \
  Strategies/COIOP_Factory.cpp \
  Strategies/COIOP_Profile.cpp \
  Strategies/COIOP_Transport.cpp \
  Strategies/DIOP_Acceptor.cpp \
  Strategies/DIOP_Connection_Handler.cpp \
  Strategies/DIOP_Connector.cpp \
  Strategies/DIOP_Endpoint.cpp \
  Strategies/DIOP_Factory.cpp \
  Strategies/DIOP_Profile.cpp \
  Strategies/DIOP_Transport.cpp \
  Strategies/FIFO_Connection_Purging_Strategy.cpp \
  Strategies/LFU_Connection_Purging_Strategy.cpp \
  Strategies/LF_Strategy_Null.cpp \
  Strategies/NULL_Connection_Purging_Strategy.cpp \
  Strategies/OC_Endpoint_Selector_Factory.cpp \
  Strategies/OC_Endpoint_Selector_Loader.cpp \
  Strategies/Optimized_Connection_Endpoint_Selector.cpp \
  Strategies/SCIOP_Acceptor.cpp \
  Strategies/SCIOP_Connection_Handler.cpp \
  Strategies/SCIOP_Connector.cpp \
  Strategies/SCIOP_Endpoint.cpp \
  Strategies/SCIOP_Factory.cpp \
  Strategies/SCIOP_Profile.cpp \
  Strategies/SCIOP_Transport.cpp \
  Strategies/SHMIOP_Acceptor.cpp \
  Strategies/SHMIOP_Connection_Handler.cpp \
  Strategies/SHMIOP_Connector.cpp \
  Strategies/SHMIOP_Endpoint.cpp \
  Strategies/SHMIOP_Factory.cpp \
  Strategies/SHMIOP_Profile.cpp \
  Strategies/SHMIOP_Transport.cpp \
  Strategies/Strategies_ORBInitializer.cpp \
  Strategies/UIOP_Acceptor.cpp \
  Strategies/UIOP_Connection_Handler.cpp \
  Strategies/UIOP_Connector.cpp \
  Strategies/UIOP_Endpoint.cpp \
  Strategies/UIOP_Factory.cpp \
  Strategies/UIOP_Profile.cpp \
  Strategies/UIOP_Transport.cpp \
  Strategies/advanced_resource.cpp \
  Strategies/sciop_endpointsC.cpp \
  Strategies/uiop_endpointsC.cpp

libTAO_Strategies_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_Strategies_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  Strategies/COIOP_Acceptor.h \
  Strategies/COIOP_Connection_Handler.h \
  Strategies/COIOP_Connector.h \
  Strategies/COIOP_Endpoint.h \
  Strategies/COIOP_Endpoint.inl \
  Strategies/COIOP_Endpoints.pidl \
  Strategies/COIOP_EndpointsC.h \
  Strategies/COIOP_EndpointsS.h \
  Strategies/COIOP_Factory.h \
  Strategies/COIOP_Profile.h \
  Strategies/COIOP_Transport.h \
  Strategies/DIOP_Acceptor.h \
  Strategies/DIOP_Acceptor.inl \
  Strategies/DIOP_Connection_Handler.h \
  Strategies/DIOP_Connector.h \
  Strategies/DIOP_Endpoint.h \
  Strategies/DIOP_Endpoint.inl \
  Strategies/DIOP_Factory.h \
  Strategies/DIOP_Profile.h \
  Strategies/DIOP_Transport.h \
  Strategies/FIFO_Connection_Purging_Strategy.h \
  Strategies/LFU_Connection_Purging_Strategy.h \
  Strategies/LF_Strategy_Null.h \
  Strategies/LF_Strategy_Null.inl \
  Strategies/NULL_Connection_Purging_Strategy.h \
  Strategies/OC_Endpoint_Selector_Factory.h \
  Strategies/OC_Endpoint_Selector_Loader.h \
  Strategies/Optimized_Connection_Endpoint_Selector.h \
  Strategies/SCIOP_Acceptor.h \
  Strategies/SCIOP_Acceptor.inl \
  Strategies/SCIOP_Connection_Handler.h \
  Strategies/SCIOP_Connector.h \
  Strategies/SCIOP_Endpoint.h \
  Strategies/SCIOP_Endpoint.inl \
  Strategies/SCIOP_Factory.h \
  Strategies/SCIOP_Profile.h \
  Strategies/SCIOP_Transport.h \
  Strategies/SHMIOP_Acceptor.h \
  Strategies/SHMIOP_Connection_Handler.h \
  Strategies/SHMIOP_Connector.h \
  Strategies/SHMIOP_Endpoint.h \
  Strategies/SHMIOP_Endpoint.inl \
  Strategies/SHMIOP_Factory.h \
  Strategies/SHMIOP_Profile.h \
  Strategies/SHMIOP_Transport.h \
  Strategies/Strategies_ORBInitializer.h \
  Strategies/UIOP_Acceptor.h \
  Strategies/UIOP_Connection_Handler.h \
  Strategies/UIOP_Connector.h \
  Strategies/UIOP_Endpoint.h \
  Strategies/UIOP_Endpoint.inl \
  Strategies/UIOP_Factory.h \
  Strategies/UIOP_Profile.h \
  Strategies/UIOP_Transport.h \
  Strategies/advanced_resource.h \
  Strategies/sciop_endpoints.pidl \
  Strategies/sciop_endpointsC.h \
  Strategies/sciop_endpointsS.h \
  Strategies/strategies_export.h \
  Strategies/uiop_endpoints.pidl \
  Strategies/uiop_endpointsC.h \
  Strategies/uiop_endpointsS.h

pkgconfig_DATA += \
  TAO_Strategies.pc

CLEANFILES += \
  TAO_Strategies.pc

TAO_Strategies.pc: ${top_builddir}/config.status ${srcdir}/Strategies/TAO_Strategies.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/Strategies/TAO_Strategies.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  Strategies/TAO_Strategies.pc.in \
  Strategies/TAO_Strategies.rc


## Makefile.TAO_FlResource.am

if BUILD_ACE_FLREACTOR
if BUILD_EXCEPTIONS
if BUILD_FL
if BUILD_GL
if BUILD_X11

lib_LTLIBRARIES += libTAO_FlResource.la

libTAO_FlResource_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  $(ACE_FLTK_CPPFLAGS) \
  -DTAO_FLRESOURCE_BUILD_DLL

libTAO_FlResource_la_SOURCES = \
  FlResource/FlResource_Factory.cpp \
  FlResource/FlResource_Loader.cpp

libTAO_FlResource_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@ $(ACE_FLTK_LDFLAGS)

libTAO_FlResource_la_LIBADD = \
  $(ACE_BUILDDIR)/ace/libACE_FlReactor.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la \
  $(ACE_FLTK_LIBS)

nobase_include_HEADERS += \
  FlResource/FlResource_Factory.h \
  FlResource/FlResource_Loader.h \
  FlResource/TAO_FlResource_Export.h

endif BUILD_X11
endif BUILD_GL
endif BUILD_FL
endif BUILD_EXCEPTIONS
endif BUILD_ACE_FLREACTOR

## Makefile.TAO_Monitor.am

if BUILD_EXCEPTIONS
if !BUILD_WINCE

BUILT_SOURCES += \
  Monitor/Monitor_includeA.cpp \
  Monitor/Monitor_includeA.h \
  Monitor/Monitor_includeC.cpp \
  Monitor/Monitor_includeC.h \
  Monitor/Monitor_includeS.h

CLEANFILES += \
  Monitor/Monitor_include-stamp \
  Monitor/Monitor_includeA.cpp \
  Monitor/Monitor_includeA.h \
  Monitor/Monitor_includeC.cpp \
  Monitor/Monitor_includeC.h \
  Monitor/Monitor_includeS.h

Monitor/Monitor_includeA.cpp Monitor/Monitor_includeA.h Monitor/Monitor_includeC.cpp Monitor/Monitor_includeC.h Monitor/Monitor_includeS.h: Monitor/Monitor_include-stamp

Monitor/Monitor_include-stamp: $(srcdir)/Monitor/Monitor_include.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -GA -Wb,export_macro=TAO_Monitor_Export -Wb,export_include=tao/Monitor/Monitor_export.h -o Monitor -Wb,unique_include=tao/Monitor/Monitor.h -SS -Sci $(srcdir)/Monitor/Monitor_include.pidl
	@touch $@

BUILT_SOURCES += \
  Monitor/MonitorA.cpp \
  Monitor/MonitorA.h \
  Monitor/MonitorC.cpp \
  Monitor/MonitorC.h \
  Monitor/MonitorC.inl \
  Monitor/MonitorS.cpp \
  Monitor/MonitorS.h

CLEANFILES += \
  Monitor/Monitor-stamp \
  Monitor/MonitorA.cpp \
  Monitor/MonitorA.h \
  Monitor/MonitorC.cpp \
  Monitor/MonitorC.h \
  Monitor/MonitorC.inl \
  Monitor/MonitorS.cpp \
  Monitor/MonitorS.h

Monitor/MonitorA.cpp Monitor/MonitorA.h Monitor/MonitorC.cpp Monitor/MonitorC.h Monitor/MonitorC.inl Monitor/MonitorS.cpp Monitor/MonitorS.h: Monitor/Monitor-stamp

Monitor/Monitor-stamp: $(srcdir)/Monitor/Monitor.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -GA -Wb,export_macro=TAO_Monitor_Export -Wb,export_include=tao/Monitor/Monitor_export.h -o Monitor -Wb,include_guard=TAO_MONITOR_SAFE_INCLUDE -Wb,safe_include=tao/Monitor/Monitor.h -Ssi $(srcdir)/Monitor/Monitor.pidl
	@touch $@

BUILT_SOURCES += \
  Monitor/Monitor_TypesA.cpp \
  Monitor/Monitor_TypesA.h \
  Monitor/Monitor_TypesC.cpp \
  Monitor/Monitor_TypesC.h \
  Monitor/Monitor_TypesC.inl \
  Monitor/Monitor_TypesS.h

CLEANFILES += \
  Monitor/Monitor_Types-stamp \
  Monitor/Monitor_TypesA.cpp \
  Monitor/Monitor_TypesA.h \
  Monitor/Monitor_TypesC.cpp \
  Monitor/Monitor_TypesC.h \
  Monitor/Monitor_TypesC.inl \
  Monitor/Monitor_TypesS.h

Monitor/Monitor_TypesA.cpp Monitor/Monitor_TypesA.h Monitor/Monitor_TypesC.cpp Monitor/Monitor_TypesC.h Monitor/Monitor_TypesC.inl Monitor/Monitor_TypesS.h: Monitor/Monitor_Types-stamp

Monitor/Monitor_Types-stamp: $(srcdir)/Monitor/Monitor_Types.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -GA -Wb,export_macro=TAO_Monitor_Export -Wb,export_include=tao/Monitor/Monitor_export.h -o Monitor -SS -Wb,include_guard=TAO_MONITOR_SAFE_INCLUDE -Wb,safe_include=tao/Monitor/Monitor.h $(srcdir)/Monitor/Monitor_Types.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_Monitor.la

libTAO_Monitor_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_MONITOR_BUILD_DLL

libTAO_Monitor_la_SOURCES = \
  Monitor/Monitor.cpp \
  Monitor/MonitorA.cpp \
  Monitor/MonitorC.cpp \
  Monitor/MonitorS.cpp \
  Monitor/Monitor_Impl.cpp \
  Monitor/Monitor_TypesA.cpp \
  Monitor/Monitor_TypesC.cpp \
  Monitor/Monitor_includeA.cpp \
  Monitor/Monitor_includeC.cpp

libTAO_Monitor_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_Monitor_la_LIBADD = \
  $(ACE_BUILDDIR)/ace/Monitor_Control/libACE_Monitor_Control.la \
  $(ACE_BUILDDIR)/ace/ETCL/libACE_ETCL_Parser.la \
  $(ACE_BUILDDIR)/ace/ETCL/libACE_ETCL.la \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  Monitor/Monitor.h \
  Monitor/Monitor.pidl \
  Monitor/Monitor.pidl \
  Monitor/MonitorA.h \
  Monitor/MonitorC.h \
  Monitor/MonitorC.inl \
  Monitor/MonitorS.h \
  Monitor/Monitor_Impl.h \
  Monitor/Monitor_Types.pidl \
  Monitor/Monitor_Types.pidl \
  Monitor/Monitor_TypesA.h \
  Monitor/Monitor_TypesC.h \
  Monitor/Monitor_TypesC.inl \
  Monitor/Monitor_TypesS.h \
  Monitor/Monitor_export.h \
  Monitor/Monitor_include.pidl \
  Monitor/Monitor_include.pidl \
  Monitor/Monitor_includeA.h \
  Monitor/Monitor_includeC.h \
  Monitor/Monitor_includeS.h

pkgconfig_DATA += \
  TAO_Monitor.pc

CLEANFILES += \
  TAO_Monitor.pc

TAO_Monitor.pc: ${top_builddir}/config.status ${srcdir}/Monitor/TAO_Monitor.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/Monitor/TAO_Monitor.pc.in

endif !BUILD_WINCE
endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  Monitor/TAO_Monitor.pc.in


## Makefile.TAO_QtResource.am

if BUILD_ACE_QTREACTOR
if BUILD_EXCEPTIONS
if BUILD_QT

lib_LTLIBRARIES += libTAO_QtResource.la

libTAO_QtResource_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  $(ACE_QT_CPPFLAGS) \
  -DTAO_QTRESOURCE_BUILD_DLL

libTAO_QtResource_la_SOURCES = \
  QtResource/QtResource_Factory.cpp \
  QtResource/QtResource_Loader.cpp

libTAO_QtResource_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@ $(ACE_QT_LDFLAGS)

libTAO_QtResource_la_LIBADD = \
  $(ACE_BUILDDIR)/ace/libACE_QtReactor.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la \
  $(ACE_QT_LIBS)

nobase_include_HEADERS += \
  QtResource/QtResource_Factory.h \
  QtResource/QtResource_Loader.h \
  QtResource/TAO_QtResource_Export.h

endif BUILD_QT
endif BUILD_EXCEPTIONS
endif BUILD_ACE_QTREACTOR

## Makefile.TAO_TkResource.am

if BUILD_ACE_TKREACTOR
if BUILD_EXCEPTIONS
if BUILD_TK

lib_LTLIBRARIES += libTAO_TkResource.la

libTAO_TkResource_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  $(ACE_TK_CPPFLAGS) \
  $(ACE_TCL_CPPFLAGS) \
  -DTAO_TKRESOURCE_BUILD_DLL

libTAO_TkResource_la_SOURCES = \
  TkResource/TkResource_Factory.cpp \
  TkResource/TkResource_Loader.cpp

libTAO_TkResource_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@ $(ACE_TK_LDFLAGS) $(ACE_TCL_LDFLAGS)

libTAO_TkResource_la_LIBADD = \
  $(ACE_BUILDDIR)/ace/libACE_TkReactor.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la \
  $(ACE_TK_LIBS) \
  $(ACE_TCL_LIBS)

nobase_include_HEADERS += \
  TkResource/TAO_TkResource_Export.h \
  TkResource/TkResource_Factory.h \
  TkResource/TkResource_Loader.h

endif BUILD_TK
endif BUILD_EXCEPTIONS
endif BUILD_ACE_TKREACTOR

## Makefile.TAO_Utils.am

if BUILD_EXCEPTIONS

lib_LTLIBRARIES += libTAO_Utils.la

libTAO_Utils_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_UTILS_BUILD_DLL

libTAO_Utils_la_SOURCES = \
  Utils/Encodable.cpp \
  Utils/Implicit_Deactivator.cpp \
  Utils/ORB_Destroyer.cpp \
  Utils/ORB_Manager.cpp \
  Utils/PolicyList_Destroyer.cpp \
  Utils/RIR_Narrow.cpp \
  Utils/Servant_Var.cpp \
  Utils/Server_Main.cpp \
  Utils/Synch_Refcountable.cpp

libTAO_Utils_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_Utils_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_PortableServer.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  Utils/Auto_Functor.h \
  Utils/Encodable.h \
  Utils/Implicit_Deactivator.h \
  Utils/ORB_Destroyer.h \
  Utils/ORB_Manager.h \
  Utils/PolicyList_Destroyer.h \
  Utils/PolicyList_Destroyer.inl \
  Utils/RIR_Narrow.h \
  Utils/Servant_Var.h \
  Utils/Servant_Var.inl \
  Utils/Server_Main.h \
  Utils/Synch_Refcountable.h \
  Utils/Synch_Refcountable.inl \
  Utils/utils_export.h

pkgconfig_DATA += \
  TAO_Utils.pc

CLEANFILES += \
  TAO_Utils.pc

TAO_Utils.pc: ${top_builddir}/config.status ${srcdir}/TAO_Utils.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/TAO_Utils.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  TAO_Utils.pc.in


## Makefile.TAO_XtResource.am

if BUILD_ACE_XTREACTOR
if BUILD_EXCEPTIONS
if BUILD_X11
if BUILD_XT

lib_LTLIBRARIES += libTAO_XtResource.la

libTAO_XtResource_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  $(ACE_X11_CPPFLAGS) \
  $(ACE_XT_CPPFLAGS) \
  -DTAO_XTRESOURCE_BUILD_DLL

libTAO_XtResource_la_SOURCES = \
  XtResource/XtResource_Factory.cpp \
  XtResource/XtResource_Loader.cpp

libTAO_XtResource_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@ $(ACE_X11_LDFLAGS) $(ACE_XT_LDFLAGS)

libTAO_XtResource_la_LIBADD = \
  $(ACE_BUILDDIR)/ace/libACE_XtReactor.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la \
  $(ACE_XT_LIBS) \
  $(ACE_X11_LIBS)

nobase_include_HEADERS += \
  XtResource/TAO_XtResource_Export.h \
  XtResource/XtResource_Factory.h \
  XtResource/XtResource_Loader.h

endif BUILD_XT
endif BUILD_X11
endif BUILD_EXCEPTIONS
endif BUILD_ACE_XTREACTOR

## Makefile.TC.am

if BUILD_EXCEPTIONS
if BUILD_INTERCEPTORS
if BUILD_TRANSPORT_CURRENT

BUILT_SOURCES += \
  TransportCurrent/TCC.cpp \
  TransportCurrent/TCC.h \
  TransportCurrent/TCC.inl \
  TransportCurrent/TCS.cpp \
  TransportCurrent/TCS.h \
  TransportCurrent/TCS.inl

CLEANFILES += \
  TransportCurrent/TC-stamp \
  TransportCurrent/TCC.cpp \
  TransportCurrent/TCC.h \
  TransportCurrent/TCC.inl \
  TransportCurrent/TCS.cpp \
  TransportCurrent/TCS.h \
  TransportCurrent/TCS.inl

TransportCurrent/TCC.cpp TransportCurrent/TCC.h TransportCurrent/TCC.inl TransportCurrent/TCS.cpp TransportCurrent/TCS.h TransportCurrent/TCS.inl: TransportCurrent/TC-stamp

TransportCurrent/TC-stamp: $(srcdir)/TransportCurrent/TC.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Wb,export_include=tao/TransportCurrent/Transport_Current_Export.h -Wb,export_macro=TAO_Transport_Current_Export -o TransportCurrent -I./TransportCurrent $(srcdir)/TransportCurrent/TC.idl
	@touch $@

lib_LTLIBRARIES += libTAO_TC.la

libTAO_TC_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_TRANSPORT_CURRENT_BUILD_DLL

libTAO_TC_la_SOURCES = \
  TransportCurrent/Current_Impl.cpp \
  TransportCurrent/Current_Loader.cpp \
  TransportCurrent/Current_ORBInitializer_Base.cpp \
  TransportCurrent/TCC.cpp \
  TransportCurrent/TCS.cpp

libTAO_TC_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_TC_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  TransportCurrent/Current_Impl.h \
  TransportCurrent/Current_Loader.h \
  TransportCurrent/Current_ORBInitializer.cpp \
  TransportCurrent/Current_ORBInitializer.h \
  TransportCurrent/Current_ORBInitializer_Base.h \
  TransportCurrent/TC.idl \
  TransportCurrent/TCC.h \
  TransportCurrent/TCC.inl \
  TransportCurrent/TCS.h \
  TransportCurrent/TCS.inl \
  TransportCurrent/Transport_Current.h \
  TransportCurrent/Transport_Current_Export.h

endif BUILD_TRANSPORT_CURRENT
endif BUILD_INTERCEPTORS
endif BUILD_EXCEPTIONS

## Makefile.TC_IIOP.am

if BUILD_EXCEPTIONS
if BUILD_INTERCEPTORS
if BUILD_TRANSPORT_CURRENT

BUILT_SOURCES += \
  TransportCurrent/TC_IIOPC.cpp \
  TransportCurrent/TC_IIOPC.h \
  TransportCurrent/TC_IIOPC.inl \
  TransportCurrent/TC_IIOPS.cpp \
  TransportCurrent/TC_IIOPS.h \
  TransportCurrent/TC_IIOPS.inl

CLEANFILES += \
  TransportCurrent/TC_IIOP-stamp \
  TransportCurrent/TC_IIOPC.cpp \
  TransportCurrent/TC_IIOPC.h \
  TransportCurrent/TC_IIOPC.inl \
  TransportCurrent/TC_IIOPS.cpp \
  TransportCurrent/TC_IIOPS.h \
  TransportCurrent/TC_IIOPS.inl

TransportCurrent/TC_IIOPC.cpp TransportCurrent/TC_IIOPC.h TransportCurrent/TC_IIOPC.inl TransportCurrent/TC_IIOPS.cpp TransportCurrent/TC_IIOPS.h TransportCurrent/TC_IIOPS.inl: TransportCurrent/TC_IIOP-stamp

TransportCurrent/TC_IIOP-stamp: $(srcdir)/TransportCurrent/TC_IIOP.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Wb,export_include=tao/TransportCurrent/Transport_Current_Export.h -Wb,export_macro=TAO_Transport_Current_Export -o TransportCurrent -I./TransportCurrent $(srcdir)/TransportCurrent/TC_IIOP.idl
	@touch $@

lib_LTLIBRARIES += libTAO_TC_IIOP.la

libTAO_TC_IIOP_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_TRANSPORT_CURRENT_BUILD_DLL

libTAO_TC_IIOP_la_SOURCES = \
  TransportCurrent/IIOP_Current_Impl.cpp \
  TransportCurrent/IIOP_Current_Loader.cpp \
  TransportCurrent/TC_IIOPC.cpp \
  TransportCurrent/TC_IIOPS.cpp

libTAO_TC_IIOP_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_TC_IIOP_la_LIBADD = \
  libTAO_TC.la \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  TransportCurrent/IIOP_Current_Impl.h \
  TransportCurrent/IIOP_Current_Loader.h \
  TransportCurrent/IIOP_Transport_Current.h \
  TransportCurrent/TC_IIOP.idl \
  TransportCurrent/TC_IIOPC.h \
  TransportCurrent/TC_IIOPC.inl \
  TransportCurrent/TC_IIOPS.h \
  TransportCurrent/TC_IIOPS.inl

endif BUILD_TRANSPORT_CURRENT
endif BUILD_INTERCEPTORS
endif BUILD_EXCEPTIONS

## Makefile.TypeCodeFactory.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  TypeCodeFactory/TypeCodeFactoryC.cpp \
  TypeCodeFactory/TypeCodeFactoryC.h \
  TypeCodeFactory/TypeCodeFactoryS.h

CLEANFILES += \
  TypeCodeFactory/TypeCodeFactory-stamp \
  TypeCodeFactory/TypeCodeFactoryC.cpp \
  TypeCodeFactory/TypeCodeFactoryC.h \
  TypeCodeFactory/TypeCodeFactoryS.h

TypeCodeFactory/TypeCodeFactoryC.cpp TypeCodeFactory/TypeCodeFactoryC.h TypeCodeFactory/TypeCodeFactoryS.h: TypeCodeFactory/TypeCodeFactory-stamp

TypeCodeFactory/TypeCodeFactory-stamp: $(srcdir)/TypeCodeFactory/TypeCodeFactory.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -SS -Sci -Sorb -Wb,export_macro=TAO_TypeCodeFactory_Export -Wb,export_include=tao/TypeCodeFactory/typecodefactory_export.h -o TypeCodeFactory $(srcdir)/TypeCodeFactory/TypeCodeFactory.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_TypeCodeFactory.la

libTAO_TypeCodeFactory_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_TYPECODEFACTORY_BUILD_DLL

libTAO_TypeCodeFactory_la_SOURCES = \
  TypeCodeFactory/Recursive_TypeCode.cpp \
  TypeCodeFactory/TypeCodeFactoryC.cpp \
  TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp \
  TypeCodeFactory/TypeCodeFactory_Loader.cpp \
  TypeCodeFactory/TypeCodeFactory_i.cpp

libTAO_TypeCodeFactory_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_TypeCodeFactory_la_LIBADD = \
  libTAO_IFR_Client.la \
  libTAO_AnyTypeCode.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  TypeCodeFactory/Recursive_TypeCode.h \
  TypeCodeFactory/Recursive_TypeCode.inl \
  TypeCodeFactory/TypeCodeFactory.pidl \
  TypeCodeFactory/TypeCodeFactoryC.h \
  TypeCodeFactory/TypeCodeFactoryS.h \
  TypeCodeFactory/TypeCodeFactory_Adapter_Impl.h \
  TypeCodeFactory/TypeCodeFactory_Loader.h \
  TypeCodeFactory/TypeCodeFactory_i.h \
  TypeCodeFactory/typecodefactory_export.h

pkgconfig_DATA += \
  TAO_TypeCodeFactory.pc

CLEANFILES += \
  TAO_TypeCodeFactory.pc

TAO_TypeCodeFactory.pc: ${top_builddir}/config.status ${srcdir}/TypeCodeFactory/TAO_TypeCodeFactory.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/TypeCodeFactory/TAO_TypeCodeFactory.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  TypeCodeFactory/TAO_TypeCodeFactory.pc.in \
  TypeCodeFactory/TypeCodeFactory.rc


## Makefile.ZIOP.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  ZIOP/ZIOPC.cpp \
  ZIOP/ZIOPC.h \
  ZIOP/ZIOPS.h

CLEANFILES += \
  ZIOP/ZIOP-stamp \
  ZIOP/ZIOPC.cpp \
  ZIOP/ZIOPC.h \
  ZIOP/ZIOPS.h

ZIOP/ZIOPC.cpp ZIOP/ZIOPC.h ZIOP/ZIOPS.h: ZIOP/ZIOP-stamp

ZIOP/ZIOP-stamp: $(srcdir)/ZIOP/ZIOP.pidl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Gp -Gd -Sci -SS -Sorb -Wb,export_macro=TAO_ZIOP_Export -Wb,export_include=tao/ZIOP/ziop_export.h -Wb,include_guard=TAO_ZIOP_SAFE_INCLUDE -Wb,safe_include=tao/ZIOP/ZIOP.h -o ZIOP $(srcdir)/ZIOP/ZIOP.pidl
	@touch $@

lib_LTLIBRARIES += libTAO_ZIOP.la

libTAO_ZIOP_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DTAO_ZIOP_BUILD_DLL

libTAO_ZIOP_la_SOURCES = \
  ZIOP/ZIOP.cpp \
  ZIOP/ZIOPC.cpp \
  ZIOP/ZIOP_ORBInitializer.cpp \
  ZIOP/ZIOP_PolicyFactory.cpp \
  ZIOP/ZIOP_Policy_Validator.cpp \
  ZIOP/ZIOP_Service_Context_Handler.cpp \
  ZIOP/ZIOP_Policy_i.cpp \
  ZIOP/ZIOP_Stub.cpp \
  ZIOP/ZIOP_Stub_Factory.cpp

libTAO_ZIOP_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@

libTAO_ZIOP_la_LIBADD = \
  libTAO_PI.la \
  libTAO_CodecFactory.la \
  libTAO_AnyTypeCode.la \
  libTAO_Compression.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

nobase_include_HEADERS += \
  ZIOP/ZIOP.h \
  ZIOP/ZIOP.pidl \
  ZIOP/ZIOP.pidl \
  ZIOP/ZIOPC.h \
  ZIOP/ZIOPS.h \
  ZIOP/ZIOP_ORBInitializer.h \
  ZIOP/ZIOP_PolicyFactory.h \
  ZIOP/ZIOP_Policy_Validator.h \
  ZIOP/ZIOP_Policy_i.h \
  ZIOP/ZIOP_Service_Context_Handler.h \
  ZIOP/ZIOP_Stub.h \
  ZIOP/ZIOP_Stub_Factory.h \
  ZIOP/ziop_export.h

pkgconfig_DATA += \
  TAO_ZIOP.pc

CLEANFILES += \
  TAO_ZIOP.pc

TAO_ZIOP.pc: ${top_builddir}/config.status ${srcdir}/ZIOP/TAO_ZIOP.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/ZIOP/TAO_ZIOP.pc.in

endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  ZIOP/TAO_ZIOP.pc.in


## Makefile.ZlibCompressor.am

if BUILD_EXCEPTIONS
if BUILD_ZLIB

lib_LTLIBRARIES += libTAO_ZlibCompressor.la

libTAO_ZlibCompressor_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  $(ACE_ZLIB_CPPFLAGS) \
  -DTAO_ZLIBCOMPRESSOR_BUILD_DLL

libTAO_ZlibCompressor_la_SOURCES = \
  Compression/zlib/ZlibCompressor.cpp \
  Compression/zlib/ZlibCompressor_Factory.cpp

libTAO_ZlibCompressor_la_LDFLAGS = \
 -version-number @TAO_MAJOR@:@TAO_MINOR@:@TAO_BETA@ $(ACE_ZLIB_LDFLAGS)

libTAO_ZlibCompressor_la_LIBADD = \
  libTAO_Compression.la \
  libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la \
  $(ACE_ZLIB_LIBS)

nobase_include_HEADERS += \
  Compression/zlib/ZlibCompressor.h \
  Compression/zlib/ZlibCompressor_Factory.h \
  Compression/zlib/ZlibCompressor_export.h

pkgconfig_DATA += \
  TAO_ZlibCompressor.pc

CLEANFILES += \
  TAO_ZlibCompressor.pc

TAO_ZlibCompressor.pc: ${top_builddir}/config.status ${srcdir}/Compression/zlib/TAO_ZlibCompressor.pc.in
	${top_builddir}/config.status --file $@:${srcdir}/Compression/zlib/TAO_ZlibCompressor.pc.in

endif BUILD_ZLIB
endif BUILD_EXCEPTIONS

EXTRA_DIST += \
  Compression/zlib/TAO_ZlibCompressor.pc.in \
  Compression/zlib/TAO_ZlibCompressor.rc


## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
