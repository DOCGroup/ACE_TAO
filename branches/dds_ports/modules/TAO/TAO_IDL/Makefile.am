##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_ROOT = $(top_srcdir)

## Makefile.TAO_IDL_FE.am

noinst_LTLIBRARIES = libTAO_IDL_FE.la

libTAO_IDL_FE_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(srcdir)/include \
  -I$(srcdir)/fe \
  -DTAO_IDL_FE_BUILD_DLL

libTAO_IDL_FE_la_SOURCES = \
  ast/ast_argument.cpp \
  ast/ast_array.cpp \
  ast/ast_attribute.cpp \
  ast/ast_check.cpp \
  ast/ast_component.cpp \
  ast/ast_component_fwd.cpp \
  ast/ast_concrete_type.cpp \
  ast/ast_constant.cpp \
  ast/ast_decl.cpp \
  ast/ast_enum.cpp \
  ast/ast_enum_val.cpp \
  ast/ast_eventtype.cpp \
  ast/ast_eventtype_fwd.cpp \
  ast/ast_exception.cpp \
  ast/ast_expression.cpp \
  ast/ast_factory.cpp \
  ast/ast_field.cpp \
  ast/ast_generator.cpp \
  ast/ast_home.cpp \
  ast/ast_interface.cpp \
  ast/ast_interface_fwd.cpp \
  ast/ast_module.cpp \
  ast/ast_native.cpp \
  ast/ast_operation.cpp \
  ast/ast_predefined_type.cpp \
  ast/ast_recursive.cpp \
  ast/ast_redef.cpp \
  ast/ast_root.cpp \
  ast/ast_sequence.cpp \
  ast/ast_string.cpp \
  ast/ast_structure.cpp \
  ast/ast_structure_fwd.cpp \
  ast/ast_type.cpp \
  ast/ast_typedef.cpp \
  ast/ast_union.cpp \
  ast/ast_union_branch.cpp \
  ast/ast_union_fwd.cpp \
  ast/ast_union_label.cpp \
  ast/ast_valuebox.cpp \
  ast/ast_valuetype.cpp \
  ast/ast_valuetype_fwd.cpp \
  ast/ast_visitor.cpp \
  fe/fe_declarator.cpp \
  fe/fe_extern.cpp \
  fe/fe_global.cpp \
  fe/fe_init.cpp \
  fe/fe_interface_header.cpp \
  fe/fe_lookup.cpp \
  fe/fe_private.cpp \
  fe/lex.yy.cpp \
  fe/y.tab.cpp \
  narrow/narrow.cpp \
  util/utl_decllist.cpp \
  util/utl_err.cpp \
  util/utl_exceptlist.cpp \
  util/utl_exprlist.cpp \
  util/utl_global.cpp \
  util/utl_identifier.cpp \
  util/utl_idlist.cpp \
  util/utl_indenter.cpp \
  util/utl_labellist.cpp \
  util/utl_list.cpp \
  util/utl_namelist.cpp \
  util/utl_scope.cpp \
  util/utl_stack.cpp \
  util/utl_string.cpp \
  util/utl_strlist.cpp

noinst_HEADERS = \
  fe/y.tab.h \
  include/TAO_IDL_FE_Export.h \
  include/ast.h \
  include/ast_argument.h \
  include/ast_array.h \
  include/ast_attribute.h \
  include/ast_component.h \
  include/ast_component_fwd.h \
  include/ast_concrete_type.h \
  include/ast_constant.h \
  include/ast_decl.h \
  include/ast_enum.h \
  include/ast_enum_val.h \
  include/ast_eventtype.h \
  include/ast_eventtype_fwd.h \
  include/ast_exception.h \
  include/ast_expression.h \
  include/ast_extern.h \
  include/ast_factory.h \
  include/ast_field.h \
  include/ast_generator.h \
  include/ast_home.h \
  include/ast_interface.h \
  include/ast_interface_fwd.h \
  include/ast_module.h \
  include/ast_native.h \
  include/ast_operation.h \
  include/ast_predefined_type.h \
  include/ast_root.h \
  include/ast_sequence.h \
  include/ast_string.h \
  include/ast_structure.h \
  include/ast_structure_fwd.h \
  include/ast_type.h \
  include/ast_typedef.h \
  include/ast_union.h \
  include/ast_union_branch.h \
  include/ast_union_fwd.h \
  include/ast_union_label.h \
  include/ast_valuebox.h \
  include/ast_valuetype.h \
  include/ast_valuetype_fwd.h \
  include/ast_visitor.h \
  include/drv_extern.h \
  include/fe_declarator.h \
  include/fe_extern.h \
  include/fe_interface_header.h \
  include/fe_private.h \
  include/global_extern.h \
  include/idl_defines.h \
  include/idl_global.h \
  include/idl_narrow.h \
  include/idl_uns_long.h \
  include/nr_extern.h \
  include/utl_decllist.h \
  include/utl_err.h \
  include/utl_exceptlist.h \
  include/utl_exprlist.h \
  include/utl_identifier.h \
  include/utl_idlist.h \
  include/utl_indenter.h \
  include/utl_labellist.h \
  include/utl_list.h \
  include/utl_namelist.h \
  include/utl_scope.h \
  include/utl_scoped_name.h \
  include/utl_stack.h \
  include/utl_string.h \
  include/utl_strlist.h

## Makefile.TAO_IDL_BE.am

noinst_LTLIBRARIES += libTAO_IDL_BE.la

libTAO_IDL_BE_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(srcdir)/include \
  -I$(srcdir)/be_include \
  -I$(srcdir)/fe \
  -DTAO_IDL_BE_BUILD_DLL

libTAO_IDL_BE_la_SOURCES = \
  be/be_argument.cpp \
  be/be_array.cpp \
  be/be_attribute.cpp \
  be/be_codegen.cpp \
  be/be_component.cpp \
  be/be_component_fwd.cpp \
  be/be_constant.cpp \
  be/be_decl.cpp \
  be/be_enum.cpp \
  be/be_enum_val.cpp \
  be/be_eventtype.cpp \
  be/be_eventtype_fwd.cpp \
  be/be_exception.cpp \
  be/be_expression.cpp \
  be/be_factory.cpp \
  be/be_field.cpp \
  be/be_generator.cpp \
  be/be_global.cpp \
  be/be_helper.cpp \
  be/be_home.cpp \
  be/be_identifier_helper.cpp \
  be/be_init.cpp \
  be/be_interface.cpp \
  be/be_interface_fwd.cpp \
  be/be_interface_strategy.cpp \
  be/be_module.cpp \
  be/be_native.cpp \
  be/be_null_return_emitter.cpp \
  be/be_operation.cpp \
  be/be_operation_strategy.cpp \
  be/be_predefined_type.cpp \
  be/be_produce.cpp \
  be/be_root.cpp \
  be/be_scope.cpp \
  be/be_sequence.cpp \
  be/be_string.cpp \
  be/be_structure.cpp \
  be/be_structure_fwd.cpp \
  be/be_tmplinst.cpp \
  be/be_type.cpp \
  be/be_typedef.cpp \
  be/be_union.cpp \
  be/be_union_branch.cpp \
  be/be_union_fwd.cpp \
  be/be_union_label.cpp \
  be/be_util.cpp \
  be/be_valuebox.cpp \
  be/be_valuetype.cpp \
  be/be_valuetype_fwd.cpp \
  be/be_visitor.cpp \
  be/be_visitor_amh_pre_proc.cpp \
  be/be_visitor_ami_pre_proc.cpp \
  be/be_visitor_any_extracted_type_decl.cpp \
  be/be_visitor_arg_traits.cpp \
  be/be_visitor_argument.cpp \
  be/be_visitor_array.cpp \
  be/be_visitor_attribute.cpp \
  be/be_visitor_ccm_pre_proc.cpp \
  be/be_visitor_component.cpp \
  be/be_visitor_component_fwd.cpp \
  be/be_visitor_constant.cpp \
  be/be_visitor_context.cpp \
  be/be_visitor_decl.cpp \
  be/be_visitor_enum.cpp \
  be/be_visitor_exception.cpp \
  be/be_visitor_factory.cpp \
  be/be_visitor_field.cpp \
  be/be_visitor_home.cpp \
  be/be_visitor_interface.cpp \
  be/be_visitor_interface_fwd.cpp \
  be/be_visitor_module.cpp \
  be/be_visitor_native.cpp \
  be/be_visitor_null_return_value.cpp \
  be/be_visitor_operation.cpp \
  be/be_visitor_root.cpp \
  be/be_visitor_scope.cpp \
  be/be_visitor_sequence.cpp \
  be/be_visitor_structure.cpp \
  be/be_visitor_structure_fwd.cpp \
  be/be_visitor_template_export.cpp \
  be/be_visitor_traits.cpp \
  be/be_visitor_typecode.cpp \
  be/be_visitor_typedef.cpp \
  be/be_visitor_union.cpp \
  be/be_visitor_union_branch.cpp \
  be/be_visitor_union_fwd.cpp \
  be/be_visitor_valuebox.cpp \
  be/be_visitor_valuetype.cpp \
  be/be_visitor_valuetype_fwd.cpp

noinst_HEADERS += \
  be_include/TAO_IDL_BE_Export.h \
  be_include/be_argument.h \
  be_include/be_array.h \
  be_include/be_attribute.h \
  be_include/be_codegen.h \
  be_include/be_component.h \
  be_include/be_component_fwd.h \
  be_include/be_constant.h \
  be_include/be_decl.h \
  be_include/be_enum.h \
  be_include/be_enum_val.h \
  be_include/be_eventtype.h \
  be_include/be_eventtype_fwd.h \
  be_include/be_exception.h \
  be_include/be_expression.h \
  be_include/be_extern.h \
  be_include/be_factory.h \
  be_include/be_field.h \
  be_include/be_generator.h \
  be_include/be_global.h \
  be_include/be_helper.h \
  be_include/be_home.h \
  be_include/be_identifier_helper.h \
  be_include/be_interface.h \
  be_include/be_interface_fwd.h \
  be_include/be_interface_strategy.h \
  be_include/be_module.h \
  be_include/be_native.h \
  be_include/be_null_return_emitter.h \
  be_include/be_operation.h \
  be_include/be_operation_strategy.h \
  be_include/be_predefined_type.h \
  be_include/be_root.h \
  be_include/be_scope.h \
  be_include/be_sequence.h \
  be_include/be_string.h \
  be_include/be_structure.h \
  be_include/be_structure_fwd.h \
  be_include/be_type.h \
  be_include/be_typedef.h \
  be_include/be_union.h \
  be_include/be_union_branch.h \
  be_include/be_union_fwd.h \
  be_include/be_union_label.h \
  be_include/be_util.h \
  be_include/be_valuebox.h \
  be_include/be_valuetype.h \
  be_include/be_valuetype_fwd.h \
  be_include/be_visitor.h \
  be_include/be_visitor_amh_pre_proc.h \
  be_include/be_visitor_ami_pre_proc.h \
  be_include/be_visitor_any_extracted_type_decl.h \
  be_include/be_visitor_arg_traits.h \
  be_include/be_visitor_argument.h \
  be_include/be_visitor_array.h \
  be_include/be_visitor_attribute.h \
  be_include/be_visitor_ccm_pre_proc.h \
  be_include/be_visitor_component.h \
  be_include/be_visitor_component_fwd.h \
  be_include/be_visitor_constant.h \
  be_include/be_visitor_context.h \
  be_include/be_visitor_decl.h \
  be_include/be_visitor_enum.h \
  be_include/be_visitor_exception.h \
  be_include/be_visitor_factory.h \
  be_include/be_visitor_field.h \
  be_include/be_visitor_home.h \
  be_include/be_visitor_interface.h \
  be_include/be_visitor_interface_fwd.h \
  be_include/be_visitor_module.h \
  be_include/be_visitor_native.h \
  be_include/be_visitor_null_return_value.h \
  be_include/be_visitor_operation.h \
  be_include/be_visitor_root.h \
  be_include/be_visitor_scope.h \
  be_include/be_visitor_sequence.h \
  be_include/be_visitor_structure.h \
  be_include/be_visitor_structure_fwd.h \
  be_include/be_visitor_template_export.h \
  be_include/be_visitor_traits.h \
  be_include/be_visitor_typecode.h \
  be_include/be_visitor_typedef.h \
  be_include/be_visitor_union.h \
  be_include/be_visitor_union_branch.h \
  be_include/be_visitor_union_fwd.h \
  be_include/be_visitor_valuebox.h \
  be_include/be_visitor_valuetype.h \
  be_include/be_visitor_valuetype_fwd.h

## Makefile.TAO_IDL_EXE.am

bin_PROGRAMS = tao_idl

tao_idl_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(srcdir)/include \
  -I$(srcdir)/be_include \
  -I$(srcdir)/fe \
  -I$(TAO_ROOT) \
  -DTAO_IDL_INCLUDE_DIR="\"$(includedir)/tao\""

tao_idl_SOURCES = \
  driver/drv_args.cpp \
  driver/drv_preproc.cpp \
  tao_idl.cpp \
  include/drv_extern.h

tao_idl_LDADD = \
  libTAO_IDL_BE.la \
  libTAO_IDL_FE.la \
  $(ACE_BUILDDIR)/ace/libACE.la

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
