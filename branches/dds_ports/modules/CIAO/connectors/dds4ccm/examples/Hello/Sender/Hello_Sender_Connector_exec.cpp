// $Id$
//
// ****              Code generated by the                        ****
// ****  Component Integrated ACE ORB (CIAO) CIDL Compiler v0.6.8 ****
// CIAO has been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// CIDL Compiler has been developed by:
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about CIAO is available at:
//    http://www.dre.vanderbilt.edu/CIAO

#include "Hello_Sender_Connector_exec.h"
#include "ciao/CIAO_common.h"

namespace CIDL_Sender_Connector_Impl
{
  //==================================================================
  // Facet Executor Implementation Class:   string_Writer_exec_i
  //==================================================================

  string_Writer_exec_i::string_Writer_exec_i (void)
  {
  }

  string_Writer_exec_i::~string_Writer_exec_i (void)
  {
  }

  // Operations from ::CCM_DDS::string_Writer

  void
  string_Writer_exec_i::write (
    const char * /* an_instance */)
  {
    /* Your code here. */
  }

  //==================================================================
  // Facet Executor Implementation Class:   DataWriter_exec_i
  //==================================================================

  DataWriter_exec_i::DataWriter_exec_i (void)
  {
  
/*     8     int domainId = 0;
   9     int sample_count = 100;
  10     DomainParticipant *participant = NULL;
  11     Publisher *publisher = NULL;
  12     Topic *topic = NULL;
  13     DataWriter *writer = NULL;
  14     HelloWorldDataWriter *helloWriter = NULL;
  15     HelloWorld instance;
  16     InstanceHandle_t instance_handle = HANDLE_NIL;
  17     const char *type_name = NULL;
  18     int count = 0;
  19     participant = TheParticipantFactory->create_participant(
  20         domainId, PARTICIPANT_QOS_DEFAULT, NULL /* listener */,
  21         STATUS_MASK_NONE);
  22     publisher = participant->create_publisher(
  23         PUBLISHER_QOS_DEFAULT, NULL /* listener */,
  24         STATUS_MASK_NONE);
  25     type_name = HelloWorldTypeSupport::get_type_name();
  26     HelloWorldTypeSupport::register_type(
  27         participant, type_name);
  28     topic = participant->create_topic(
  29         "Example HelloWorld",
  30         type_name, TOPIC_QOS_DEFAULT, NULL /* listener */,
  31         STATUS_MASK_NONE);
  32     writer = publisher->create_datawriter(
  33         topic, DATAWRITER_QOS_DEFAULT, NULL /* listener */,
  34         STATUS_MASK_NONE);
  35     helloWriter = HelloWorldDataWriter::narrow(writer);
  36     strcpy(instance.name, "MyName");
  37     instance_handle = HelloWorld_writer->register_instance(instance);
  38     /* Main loop */
  39     for (count=0; (sample_count == 0) || (count < sample_count); ++count) {
  40         sprintf(instance.msg,  "Hello World! (count %d)", count);
  41         printf("Writing: %s", instance.msg);
  42         helloWriter->write(*instance, instance_handle);
  43         sleep(1);
  44     }
  45     participant->delete_contained_entities();
  46     TheParticipantFactory->delete_participant(participant);
*/
  }

  DataWriter_exec_i::~DataWriter_exec_i (void)
  {
  }

  // Operations from ::DDS::DataWriter

  ::CORBA::Long
  DataWriter_exec_i::enable ()
  {
    /* Your code here. */
    return 0;
  }

  ::DDS::StatusCondition_ptr
  DataWriter_exec_i::get_statuscondition ()
  {
    /* Your code here. */
    return ::DDS::StatusCondition::_nil ();
  }

  ::CORBA::ULong
  DataWriter_exec_i::get_status_changes ()
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::get_instance_handle ()
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::set_qos (
    const ::DDS::DataWriterQos & /* qos */)
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::get_qos (
    ::DDS::DataWriterQos & /* qos */)
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::set_listener (
    ::DDS::DataWriterListener_ptr /* a_listener */,
    ::CORBA::ULong /* mask */)
  {
    /* Your code here. */
    return 0;
  }

  ::DDS::DataWriterListener_ptr
  DataWriter_exec_i::get_listener ()
  {
    /* Your code here. */
    return ::DDS::DataWriterListener::_nil ();
  }

  ::DDS::Topic_ptr
  DataWriter_exec_i::get_topic ()
  {
    /* Your code here. */
    return ::DDS::Topic::_nil ();
  }

  ::DDS::Publisher_ptr
  DataWriter_exec_i::get_publisher ()
  {
    /* Your code here. */
    return ::DDS::Publisher::_nil ();
  }

  ::CORBA::Long
  DataWriter_exec_i::wait_for_acknowledgments (
    const ::DDS::Duration_t & /* max_wait */)
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::get_liveliness_lost_status (
    ::DDS::LivelinessLostStatus & /* status */)
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::get_offered_deadline_missed_status (
    ::DDS::OfferedDeadlineMissedStatus & /* status */)
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::get_offered_incompatible_qos_status (
    ::DDS::OfferedIncompatibleQosStatus & /* status */)
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::get_publication_matched_status (
    ::DDS::PublicationMatchedStatus & /* status */)
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::assert_liveliness ()
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::get_matched_subscriptions (
    ::DDS::InstanceHandleSeq & /* subscription_handles */)
  {
    /* Your code here. */
    return 0;
  }

  ::CORBA::Long
  DataWriter_exec_i::get_matched_subscription_data (
    ::DDS::SubscriptionBuiltinTopicData & /* subscription_data */,
    ::CORBA::Long /* subscription_handle */)
  {
    /* Your code here. */
    return 0;
  }

  //==================================================================
  // Component Executor Implementation Class:   Hello_sender_Connector_exec_i
  //==================================================================

  Hello_sender_Connector_exec_i::Hello_sender_Connector_exec_i (void)
  {
  }

  Hello_sender_Connector_exec_i::~Hello_sender_Connector_exec_i (void)
  {
  }

  // Supported or inherited operations.

  // Attribute operations.

  // Port operations.

  ::CCM_DDS::CCM_string_Writer_ptr
  Hello_sender_Connector_exec_i::get_sender_data ()
  {
    /* Your code here. */
    return ::CCM_DDS::CCM_string_Writer::_nil ();
  }

  ::DDS::CCM_DataWriter_ptr
  Hello_sender_Connector_exec_i::get_sender_dds_entity ()
  {
    /* Your code here. */
    return ::DDS::CCM_DataWriter::_nil ();
  }

  // Operations from Components::SessionComponent

  void
  Hello_sender_Connector_exec_i::set_session_context (
    ::Components::SessionContext_ptr ctx)
  {
    this->context_ =
      ::Hello_DDS::CCM_Hello_sender_Connector_Context::_narrow (ctx);

    if (CORBA::is_nil (this->context_.in ()))
    {
      throw ::CORBA::INTERNAL ();
    }
  }

  void
  Hello_sender_Connector_exec_i::configuration_complete ()
  {
    /* Your code here. */
  }

  void
  Hello_sender_Connector_exec_i::ccm_activate (void)
  {
    /* Your code here. */
  }

  void
  Hello_sender_Connector_exec_i::ccm_passivate (void)
  {
    /* Your code here. */
  }

  void
  Hello_sender_Connector_exec_i::ccm_remove (void)
  {
    /* Your code here. */
  }

  extern "C" HELLO_SENDER_CONNECTOR_EXEC_Export ::Components::EnterpriseComponent_ptr
  create_Hello_DDS_Hello_sender_Connector_Impl (void)
  {
    ::Components::EnterpriseComponent_ptr retval =
      ::Components::EnterpriseComponent::_nil ();

    ACE_NEW_RETURN (
      retval,
      Hello_sender_Connector_exec_i,
      ::Components::EnterpriseComponent::_nil ());

    return retval;
  }

  //==================================================================
  // Home Executor Implementation Class:   SenderConnectorHome_exec_i
  //==================================================================

  SenderConnectorHome_exec_i::SenderConnectorHome_exec_i (void)
  {
  }

  SenderConnectorHome_exec_i::~SenderConnectorHome_exec_i (void)
  {
  }

  // Supported or inherited operations.

  // Home operations.

  // Factory and finder operations.

  // Attribute operations.

  // Implicit operations.

  ::Components::EnterpriseComponent_ptr
  SenderConnectorHome_exec_i::create ()
  {
    ::Components::EnterpriseComponent_ptr retval =
      ::Components::EnterpriseComponent::_nil ();

    ACE_NEW_THROW_EX (
      retval,
      Hello_sender_Connector_exec_i,
      ::CORBA::NO_MEMORY ());

    return retval;
  }

  extern "C" HELLO_SENDER_CONNECTOR_EXEC_Export ::Components::HomeExecutorBase_ptr
  create_Hello_DDS_SenderConnectorHome_Impl (void)
  {
    ::Components::HomeExecutorBase_ptr retval =
      ::Components::HomeExecutorBase::_nil ();

    ACE_NEW_RETURN (
      retval,
      SenderConnectorHome_exec_i,
      ::Components::HomeExecutorBase::_nil ());

    return retval;
  }
}

