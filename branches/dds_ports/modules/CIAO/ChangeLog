Fri Jun  5 19:48:15 UTC 2009  William R. Otte  <wotte@dre.vanderbilt.edu>

        * DAnCE/Logger/Logger_Service.cpp:

          Now swallows any command line arguments it finds. 
        
Tue Jun  2 03:43:30 UTC 2009  William R. Otte  <wotte@dre.vanderbilt.edu>

        * DAnCE/Deployment/Module_Main.h
        * DAnCE/DomainApplicationManager/DomainApplicationManager_Impl.cpp
        * DAnCE/Plan_Launcher/Plan_Launcher_Module.cpp

          Added \n to debug statements.

        * DAnCE/ExecutionManager/ExecutionManager_Impl.cpp

          In a DANCE_DEBUG statement, an %C was declared without an input variable.
          This results in an exception.

        * DAnCE/Plan_Launcher/Plan_Launcher.cpp
        * DAnCE/Plan_Launcher/Plan_Launcher.h

          Changed code outlining.

        * DAnCE/Plan_Launcher/Plan_Launcher_Base_Impl.cpp

          When logging the command line parameters in a logfile, every line is prefixed
          with a timestamp, hostid, ...... This results in a log line which is hard to read.
          The command line parameters are now logged using several lines.

        * examples/Hello/descriptors/run_test.pl

          Added logging regarding processes and commandline parameters

Tue Jun  2 03:43:30 UTC 2009  William R. Otte  <wotte@dre.vanderbilt.edu>

        * connectors:
        * connectors/dds4ccm:
        * connectors/dds4ccm/example:
        * connectors/dds4ccm/example/Hello:
        * connectors/dds4ccm/example/Hello/Hello_Base.idl3:
        * connectors/dds4ccm/example/Hello/Hello_Base.idl3p:
        * connectors/dds4ccm/example/Hello/Hello_Receiver.idl3:
        * connectors/dds4ccm/example/Hello/Hello_Receiver.idl3p:
        * connectors/dds4ccm/example/Hello/Hello_Sender.idl3:
        * connectors/dds4ccm/example/Hello/Hello_Sender.idl3p:

          Outline of a driving use case for phase 1.  Note that the
          idl3p files are the IDL3+ for the components/connector, and the
          idl3 files are my best guess at the implied IDL3 mapping.

        * connectors/dds4ccm/idl:
        * connectors/dds4ccm/idl/dds4ccm_Base.idl3:
        * connectors/dds4ccm/idl/dds4ccm_ConnectorStatusListener.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Connector_Base.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Connector_Event.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Connector_State.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Getter.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_ListnerControl.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_MultiListener.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_MultiUpdater.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_MultiWriter.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_PortStatusListener.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_Get.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_MultiListen.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_MultiUpdate.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_MultiWrite.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_RawListen.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_Read.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_StateListen.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_Update.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Port_Write.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_RawListener.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Reader.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_StateListener.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Updater.idl3p:
        * connectors/dds4ccm/idl/dds4ccm_Writer.idl3p:

          DDS4CCM IDL.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
