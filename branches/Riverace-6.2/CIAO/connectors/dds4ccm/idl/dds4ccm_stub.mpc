// $Id$

project (DDS4CCM_idl_gen) : install, dds4ccm, componentidldefaults {
  custom_only = 1
  idlflags += -Wb,stub_export_macro=DDS4CCM_STUB_Export \
              -Wb,stub_export_include=dds4ccm_stub_export.h \
              -Wb,skel_export_macro=DDS4CCM_SKEL_Export \
              -Wb,skel_export_include=dds4ccm_skel_export.h \
              -I$(CIAO_ROOT)/connectors

  IDL_Files {
    idlflags += -Gxhst -Gxhsk -SS -Ssvntc -Ssvntt -Sci
    dds4ccm_Base.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk -Gsv -Glem
    idlflags -= -St -Sa
    idlflags += -SS -Sci
    dds4ccm_QueryFilter.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk -Gsv -Glem
    idlflags += -Sci -SS
    dds4ccm_Entity.idl
    ccm_dds.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk
    dds4ccm_Connector.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk
    idlflags += -Ssvntc -Ssvntt -SS -Sci
    dds4ccm_ConnectorStatusListener.idl
    dds4ccm_DataListenerControl.idl
    dds4ccm_PortStatusListener.idl
    dds4ccm_StateListenerControl.idl
    dds_rtf2_dcps.idl
  }

  specific {
    install_dir = connectors/dds4ccm/idl
  }
}

project (DDS4CCM_stub) : install, dds4ccm, ccm_stub, ciaolib_with_idl, ciao_output, taolib {
  after += DDS4CCM_idl_gen
  includes += $(CIAO_ROOT)/connectors

  dynamicflags += DDS4CCM_STUB_BUILD_DLL
  IDL_Files {
  }

  Header_Files {
    dds4ccm_stub_export.h
    dds4ccm_EntityC.h
    ccm_ddsC.h
    dds4ccm_BaseC.h
    dds4ccm_QueryFilterC.h
    dds4ccm_PortStatusListenerC.h
    dds4ccm_DataListenerControlC.h
    dds4ccm_ConnectorStatusListenerC.h
    dds4ccm_StateListenerControlC.h
    dds4ccm_ConnectorC.h
    dds_rtf2_dcpsC.h
  }

  Source_Files {
    dds4ccm_BaseC.cpp
    dds4ccm_QueryFilterC.cpp
    dds4ccm_PortStatusListenerC.cpp
    dds4ccm_DataListenerControlC.cpp
    dds4ccm_ConnectorStatusListenerC.cpp
    dds4ccm_StateListenerControlC.cpp
    dds4ccm_ConnectorC.cpp
    dds_rtf2_dcpsC.cpp
  }

  Inline_Files {
    dds4ccm_ConnectorC.inl
  }

  specific {
    install_dir = connectors/dds4ccm/idl
  }
}

