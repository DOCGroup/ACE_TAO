// $Id$

project(AMI_InterMulti_idl_gen) : componentidldefaults, ami, ami4ccm_stub {
  custom_only = 1
  idlflags += -Wb,stub_export_macro=INTERMULTI_STUB_Export \
              -Wb,stub_export_include=InterMulti_stub_export.h \
              -Wb,skel_export_macro=INTERMULTI_SKEL_Export \
              -Wb,skel_export_include=InterMulti_skel_export.h \
              -Wb,conn_export_macro=INTERMULTI_CONN_Export \
              -Wb,conn_export_include=InterMulti_conn_export.h \
              -Wb,exec_export_macro=INTERMULTI_EXEC_Export \
              -Wb,exec_export_include=InterMulti_exec_export.h \
              -I.. -GM -Gxhcn
  idlflags -= -Gsv

  IDL_Files {
    InterMulti.idl
  }
}

project(AMI_InterMulti_lem_gen) : ciaoidldefaults {
  after += AMI_InterMulti_idl_gen AMI_InterMulti_lema_gen
  custom_only = 1
  idlflags += -Wb,export_macro=INTERMULTI_LEM_STUB_Export \
              -Wb,export_include=InterMulti_lem_stub_export.h \
              -I.. -SS -Gxhst

  IDL_Files {
    InterMultiE.idl
  }
}

project(AMI_InterMulti_lema_gen) : ciaoidldefaults, typecode {
  after += AMI_InterMulti_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=INTERMULTI_STUB_Export \
              -Wb,stub_export_include=InterMulti_stub_export.h \
              -Wb,conn_export_macro=INTERMULTI_CONN_Export \
              -Wb,conn_export_include=InterMulti_conn_export.h \
              -Wb,svnt_export_macro=INTERMULTI_SVNT_Export \
              -Wb,svnt_export_include=InterMulti_svnt_export.h \
              -Wb,skel_export_macro=INTERMULTI_SKEL_Export \
              -Wb,skel_export_include=InterMulti_skel_export.h \
              -I.. -Gsv -Gcn -Glem -GC -Gxhst -Gxhsv

  IDL_Files {
    InterMultiA.idl
  }
}

project(AMI_InterMulti_lemae_gen) : ciaoidldefaults {
  after += AMI_InterMulti_lema_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=INTERMULTI_LEM_STUB_Export \
              -Wb,stub_export_include=InterMulti_lem_stub_export.h \
              -I.. -SS

  IDL_Files {
    InterMultiAE.idl
  }
}

project(AMI_InterMulti_stub) : ccm_stub, ami, ami4ccm_stub {
  after += AMI_InterMulti_lem_gen
  libs  +=
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  sharedname = InterMulti_stub
  dynamicflags = INTERMULTI_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    InterMultiC.cpp
    InterMultiAC.cpp
  }

  Header_Files {
    InterMultiC.h
    InterMulti_stub_export.h
}

  Inline_Files {
    InterMultiC.inl
  }
}

project(AMI_InterMulti_lem_stub) : ccm_executor, ami, ami4ccm_lem_stub {
  after += AMI_InterMulti_lem_gen AMI_InterMulti_stub AMI_InterMulti_lemae_gen AMI_InterMulti_skel
  libs += InterMulti_stub InterMulti_skel
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  sharedname = InterMulti_lem_stub
  dynamicflags = INTERMULTI_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    InterMultiEC.cpp
    InterMultiAEC.cpp
  }

  Header_Files {
    InterMultiEC.h
    InterMulti_lem_stub_export.h
}

  Inline_Files {
    InterMultiEC.inl
  }
}

project(AMI_InterMulti_skel) : ciao_executor, ami, ami4ccm_servant {
  after      += AMI_InterMulti_stub
  sharedname  = InterMulti_skel
  libs       += InterMulti_stub
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  dynamicflags = INTERMULTI_SKEL_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    InterMultiS.cpp
    InterMultiAS.cpp
  }

  Header_Files {
    InterMultiS.h
   
    InterMulti_skel_export.h
  }

  Inline_Files {
    InterMultiS.inl
   
  }
}

project(AMI_InterMulti_conn) : ciao_executor, ami, ami4ccm_lem_stub {
  after   += AMI_InterMulti_lem_stub InterMulti_Base_AMI_stub AMI_InterMulti_skel AMI_InterMulti_lema_gen AMI_InterMulti_lemae_gen
  sharedname = InterMulti_conn
  libs += InterMulti_stub InterMulti_skel InterMulti_lem_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags = INTERMULTI_CONN_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    InterMultiA_conn.cpp
  }

  Header_Files {
    InterMultiA_conn.h
    InterMulti_conn_export.h
  }

  Inline_Files {
  }
}

project(AMI_InterMulti_svnt) : ciao_servant, ami, ami4ccm_servant {
  after   += AMI_InterMulti_lem_stub InterMulti_Base_AMI_stub AMI_InterMulti_skel AMI_InterMulti_lema_gen AMI_InterMulti_lemae_gen AMI_InterMulti_conn
  sharedname = InterMulti_svnt
  libs += InterMulti_stub InterMulti_skel InterMulti_lem_stub InterMulti_conn
  libpaths += ../lib
  libout = ../lib
  dynamicflags = INTERMULTI_SVNT_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    InterMultiA_svnt.cpp
  }

  Header_Files {
    InterMultiA_svnt.h
    InterMultiA_svnt_export.h
  }

  Inline_Files {
  }
}

