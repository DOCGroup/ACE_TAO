// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:338

#include "CONV_FRAMEC.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "CONV_FRAMEC.i"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:62

// Arg traits specializations.
namespace TAO
{
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:66

void
CONV_FRAME::CodeSetComponent::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  CodeSetComponent *_tao_tmp_pointer =
    ACE_static_cast (CodeSetComponent *, _tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CONV_FRAME_CODESETCOMPONENT__TAO_SEQ_CONV_FRAME_CODESETID__CS_)
#define _CONV_FRAME_CODESETCOMPONENT__TAO_SEQ_CONV_FRAME_CODESETID__CS_

CONV_FRAME::CodeSetComponent::_tao_seq_CONV_FRAME_CodeSetId_::_tao_seq_CONV_FRAME_CodeSetId_ (void)
{}

CONV_FRAME::CodeSetComponent::_tao_seq_CONV_FRAME_CodeSetId_::_tao_seq_CONV_FRAME_CodeSetId_ (
    CORBA::ULong max
  )
  : TAO_Unbounded_Sequence<
        CONV_FRAME::CodeSetId
      >
    (max)
{}

CONV_FRAME::CodeSetComponent::_tao_seq_CONV_FRAME_CodeSetId_::_tao_seq_CONV_FRAME_CodeSetId_ (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ULong * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_Sequence<
        CONV_FRAME::CodeSetId
      >
    (max, length, buffer, release)
{}

CONV_FRAME::CodeSetComponent::_tao_seq_CONV_FRAME_CodeSetId_::_tao_seq_CONV_FRAME_CodeSetId_ (
    const _tao_seq_CONV_FRAME_CodeSetId_ &seq
  )
  : TAO_Unbounded_Sequence<
        CONV_FRAME::CodeSetId
      >
    (seq)
{}

CONV_FRAME::CodeSetComponent::_tao_seq_CONV_FRAME_CodeSetId_::~_tao_seq_CONV_FRAME_CodeSetId_ (void)
{}

#endif /* end #if !defined */



// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:66

void
CONV_FRAME::CodeSetComponentInfo::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  CodeSetComponentInfo *_tao_tmp_pointer =
    ACE_static_cast (CodeSetComponentInfo *, _tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:66

void
CONV_FRAME::CodeSetContext::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  CodeSetContext *_tao_tmp_pointer =
    ACE_static_cast (CodeSetContext *, _tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:95

#if !defined _TAO_CDR_OP_CONV_FRAME_CodeSetComponent__tao_seq_CONV_FRAME_CodeSetId__CPP_
#define _TAO_CDR_OP_CONV_FRAME_CodeSetComponent__tao_seq_CONV_FRAME_CodeSetId__CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CONV_FRAME::CodeSetComponent::_tao_seq_CONV_FRAME_CodeSetId_ &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len = _tao_sequence.length ();

  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      return strm.write_ulong_array (_tao_sequence.get_buffer (), _tao_sequence.length ());
    }

  return 0;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CONV_FRAME::CodeSetComponent::_tao_seq_CONV_FRAME_CodeSetId_ &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;

  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return 0;
        }

      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);

      // If length is 0 we return true.
      if (0 >= _tao_seq_len)
        {
          return 1;
        }

      // Retrieve all the elements.
      return strm.read_ulong_array (_tao_sequence.get_buffer (), _tao_sequence.length ());

    }

  return 0;
}

#endif /* _TAO_CDR_OP_CONV_FRAME_CodeSetComponent__tao_seq_CONV_FRAME_CodeSetId__CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_root/root.cpp:1725

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

  template class
    TAO_Var_Var_T<
        CONV_FRAME::CodeSetComponent
      >;

  template class
    TAO_Var_Base_T<
        CONV_FRAME::CodeSetComponent
      >;

  template class
    TAO_Out_T<
        CONV_FRAME::CodeSetComponent,
        CONV_FRAME::CodeSetComponent_var
      >;

  template class
    TAO_Var_Var_T<
        CONV_FRAME::CodeSetComponentInfo
      >;

  template class
    TAO_Var_Base_T<
        CONV_FRAME::CodeSetComponentInfo
      >;

  template class
    TAO_Out_T<
        CONV_FRAME::CodeSetComponentInfo,
        CONV_FRAME::CodeSetComponentInfo_var
      >;

  template class
    TAO_Fixed_Var_T<
        CONV_FRAME::CodeSetContext
      >;

  template class
    TAO_Var_Base_T<
        CONV_FRAME::CodeSetContext
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
    TAO_Var_Var_T< \
        CONV_FRAME::CodeSetComponent \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CONV_FRAME::CodeSetComponent \
      >

# pragma instantiate \
    TAO_Out_T< \
        CONV_FRAME::CodeSetComponent, \
        CONV_FRAME::CodeSetComponent_var \
      >

# pragma instantiate \
    TAO_Var_Var_T< \
        CONV_FRAME::CodeSetComponentInfo \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CONV_FRAME::CodeSetComponentInfo \
      >

# pragma instantiate \
    TAO_Out_T< \
        CONV_FRAME::CodeSetComponentInfo, \
        CONV_FRAME::CodeSetComponentInfo_var \
      >

# pragma instantiate \
    TAO_Fixed_Var_T< \
        CONV_FRAME::CodeSetContext \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CONV_FRAME::CodeSetContext \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
