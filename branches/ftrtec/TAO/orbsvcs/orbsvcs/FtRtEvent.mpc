// -*- MPC -*-
// $Id$

project (FtRtEvent) : orbsvcslib, core, ftorbutils, rtevent, naming {

  sharedname = TAO_FtRtEvent
  idlflags   += -Wb,export_macro=TAO_FtRtEvent_Export -Wb,export_include=FtRtEvent/Utils/ftrtevent_export.h
  dynamicflags = TAO_FTRTEVENT_BUILD_DLL
  tagchecks   = FtRtEvent
  includes    += $(TAO_ROOT)/orbsvcs/orbsvcs

  IDL_Files {
    idlflags += -GC
    FTRT.idl
    FtRtecEventComm.idl
    FTRT_GroupManager.idl  
  }

  IDL_Files  {
    FtRtecEventChannelAdmin.idl
  }

  Source_Files (ORBSVCS_COMPONENTS) {
    FtRtEvent {
      FTRTC.cpp
      FTRTS.cpp
      FtRtecEventCommC.cpp
      FtRtecEventCommS.cpp
      FTRT_GroupManagerC.cpp
      FTRT_GroupManagerS.cpp
      FtRtecEventChannelAdminC.cpp
      FtRtecEventChannelAdminS.cpp
      FtRtEvent/Utils
    }
  }
}

project (FTRT_ClientORB) :  messaging, orbsvcslib, core {
  sharedname = TAO_FTRT_ClientORB
  dynamicflags = TAO_FTRT_BUILD_DLL
  tagchecks   = FTRT_ClientORB
  includes += $(TAO_ROOT)/orbsvcs/orbsvcs/FtRtEvent/ClientORB
  IDL_Files {
  }
  Source_Files  (ORBSVCS_COMPONENTS) {
    FTRT_ClientORB {
      FtRtEvent/ClientORB
    }
  }
}

project (FTRT_EventChannel) :  orbsvcslib, ftrtevent, rtsched {
  sharedname = TAO_FTRT_EventChannel
  dynamicflags = TAO_FTRTEC_BUILD_DLL
  tagchecks   = FTRT_EventChannel
  includes += $(TAO_ROOT)/orbsvcs/orbsvcs/FtRtEvent/EventChannel
  after    += Utils
  libs     += TAO_Utils
  IDL_Files {
  }

  Source_Files  (ORBSVCS_COMPONENTS) {
    FTRT_EventChannel {
      PortableGroup_Simple_DSC.cpp
      FtRtEvent/EventChannel
    }
  }
  Template_Files {
    default {
      FtRtEvent/EventChannel/ConnectionHandler_T.cpp
      FtRtEvent/EventChannel/Fault_Detector_T.cpp
      FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp
    }
  }

  Header_Files {
    ftrtec_export.h
  }
}
