Tue Jun 24 18:12:24 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Arg_Traits_T.h:

          Cosmetic changes.

        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Typecode.cpp:
        * tao/Typecode.h:

          Changed these predefined pseudo objects to use the
          specialization approach for their argument traits,
          instead of the typedef approach, as mentioned in

          Tue Jun 24 13:48:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Objref_VarOut_T.cpp:
        * tao/Objref_VarOut_T.h:

          Added template base class for the interface traits - the static
          methods used by the _var, _out and sequence classes. At the
          moment, the interface _var and _out template classes are
          using these template-wrapped static methods. The base class is
          specialized in generated code. When the existing hand-crafted
          files are regenerated, the template implementations in
          Objref_VarOut_T.cpp can be removed, as well as the T_life
          parameter from the _var and _out template classes.

        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:

          Corresponding changes for the T_cast parameter, passed to 
          sequence of objects. This struct parameter wraps methods used
          in object sequences to narrow and widen interfaces.

Tue Jun 24 13:48:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Arg_Traits_T.h:

          Added this file to the repository again, decided to go back to
          the template specialization approach to specific arg traits
          instead of the typedef approach.

        * tao/Basic_Arguments.cpp:
        * tao/Basic_Arguments.h:
        * tao/Special_Basic_Arguments.cpp:
        * tao/Special_Basic_Arguments.h:
        * tao/UB_String_Arguments.cpp:
        * tao/UB_String_Arguments.h:

          Change to support the above change in approach.

        * tao/Objref_VarOut_T.cpp:
        * tao/Objref_VarOut_T.h:

          Made a start on templatizing helper structs of interface
          traits that have been generated by the IDL compler up to now.

        * tests/Bench/wire/testC.cpp:
        * tests/Bench/wire/testS.cpp:

          Changed test code to reflect the change in approach to
          specific arg traits mentioned above.

Mon Jun 23 16:50:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Cleanup_Func_Registry.h:

          Added #include that was added in the main trunk, to avoid a
          build errorin this branch.

        * tao/Fixed_Array_Argument_T.cpp:
        * tao/Fixed_Array_Argument_T.h:
        * tao/Var_Array_Argument_T.cpp:
        * tao/Var_Array_Argument_T.h:

          New files, for handling array arguments.

        * tao/TAO.dsp:
        * tao/Makefile.tao:

          Added new files to project and makefile.

        * tao/Var_Size_Argument_T.cpp:

          Changed demarshaling and Any extraction methods to call
          .inout() on the _var member instead of .out(). The _var's
          pointer has already been allocated but not initialized,
          and calling .out() will destroy it, expecting a new
          allocation, which is not the intended behavior.

Sun Jun 22 000:31:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/BD_String_Argument_T.cpp:
        * tao/BD_String_Argument_T.h:
        * tao/UB_String_Argument_T.cpp:
        * tao/UB_String_Argument_T.h:

          Removed unnecessary template parameter.

        * tao/Var_Size_Argument_T.cpp:
        * tao/Var_Size_Argument_T.h:
        * tao/Fixed_Size_Argument_T.cpp:
        * tao/Fixed_Size_Argument_T.h:
        * tao/Makefile.tao:
        * tao/TAO.dsp:

          Added new files and classes for fixed and variable size structs,
          unions, and sequences.

Fri Jun 20 17:17:57 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Basic_Argument_T.h:
        * tao/Basic_Arguments.h:
        * tao/UB_String_Argument_T.h:
        * tao/UB_String_Arguments.h:

          Made sure at least one significant included file appears before
          the '#pragma once' directive.

        * tao/Makefile.bor:
        * tao/Makefile.tao:

          Added new files to the makefiles.

Fri Jun 20 16:09:52 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Argument.cpp:

          New file. Placing TAO::Argument's method implementations in
          the header file was causing circular dependencies.

        * tao/TAO.dsp:

          Added new file to project.

        * tao/Argument.h:
        * tao/Object_Argument_T.cpp:
        * tao/Object_Argument_T.h:
        * tao/Special_Basic_Arguments.h:

          Changes to file includes.

        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Typecode.cpp:
        * tao/Typecode.h:

          Added typedefs for TypeCode_Arg_Traits and Object_Arg_Traits,
          to be used in generated code.

        * tao/Policy_ForwardC.cpp:

          Corrected typo in #pragma instantiation.

Fri Jun 20 13:12:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Arg_Traits_T.h:

          Eliminated the need for the TAO::Arg_Traits_T<> class
          and removed this file.

        * tao/BD_String_Argument_T.h:
        * tao/Basic_Arguments.cpp:
        * tao/Basic_Arguments.h:
        * tao/Special_Basic_Arguments.cpp:
        * tao/Special_Basic_Arguments.h:
        * tao/UB_String_Argument_T.cpp:
        * tao/UB_String_Arguments.cpp:
        * tao/UB_String_Arguments.h:

          Replaced TAO::Arg_Traits_T<> subclass of the above
          basic arguments type classes with typedefs whose
          names can be easily generated by the IDL compiler.

        * tao/Object_Argument_T.cpp:
        * tao/Object_Argument_T.h:

          New files, for interface and pseudo object arguments.

        * tests/Bench/wire/testC.cpp:
        * tests/Bench/wire/testS.cpp:

          Changed these hand crafted files to use the typedefs
          mentioned above.

Thu Jun 19 22:24:47 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/BD_String_Argument_T.cpp:
        * tao/BD_String_Argument_T.h:
        * tao/Basic_Argument_T.cpp:
        * tao/Basic_Argument_T.h:
        * tao/Special_Basic_Argument_T.cpp:
        * tao/Special_Basic_Argument_T.h:

	  Updated the interface of the rest of the existing template
	  classes for IDL argument types.

Thu Jun 19 20:39:25 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/BD_String_Argument_T.cpp:
        * tao/BD_String_Argument_T.h:

          Updates to make these files correspond with the 
          unbounded version.

Thu Jun 19 17:31:11 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Bench/wire/client.cpp:
        * tests/Bench/wire/client.dsp:
        * tests/Bench/wire/server.cpp:
        * tests/Bench/wire/server.dsp:
        * tests/Bench/wire/test.idl:
        * tests/Bench/wire/testC.cpp:
        * tests/Bench/wire/testC.h:
        * tests/Bench/wire/testC.i:
        * tests/Bench/wire/testS.cpp:
        * tests/Bench/wire/testS.h:
        * tests/Bench/wire/test_i.cpp:
        * tests/Bench/wire/test_i.h:

	        New files, handcrafted example for testing
	        changes in this branch.

        * tao/Argument.h:
        * tao/BD_String_Argument_T.h:
        * tao/Basic_Argument_T.cpp:
        * tao/Basic_Argument_T.h:
        * tao/Basic_Arguments.cpp:
        * tao/Basic_Arguments.h:
        * tao/Special_Basic_Argument_T.cpp:
        * tao/Special_Basic_Argument_T.h:
        * tao/UB_String_Argument_T.cpp:
        * tao/UB_String_Argument_T.h:
        * tao/UB_String_Arguments.h:

	        Changes to the new TAO template args/traits
	        interface.

        * tao/CORBA_String.h:
        * tao/CORBA_String.inl:

	        Added ptr() method to (w)string _var classes,
	        to get a return value of T * without giving
	        up ownership of the underlying pointer.

Wed Jun 18 22:57:37 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/BD_String_Argument_T.cpp:
        * tao/BD_String_Argument_T.h:
	* tao/TAO.dsp:

	  New files, for bounded string and wstring arguments.

        * tao/Arg_Traits_T.h:
        * tao/UB_String_Argument_T.h:
        * tao/UB_String_Arguments.cpp:

	  Fixed mistakes in comments.

Wed Jun 18 19:09:55 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Arg_Traits_T.h:

          Renamed Traits_T.h as this.

        * tao/Argument.h:
        * tao/Basic_Argument_T.cpp:
        * tao/Basic_Argument_T.h:
        * tao/Basic_Arguments.cpp:
        * tao/Basic_Arguments.h:
        * tao/Special_Basic_Argument_T.cpp:
        * tao/Special_Basic_Argument_T.h:
        * tao/Special_Basic_Arguments.cpp:
        * tao/Special_Basic_Arguments.h:

          Removed string argument name member - it's never used.

        * tao/Traits_T.h:

          Renamed this as Arg_Traits_T.h.

        * tao/UB_String_Argument_T.cpp:
        * tao/UB_String_Argument_T.h:
        * tao/UB_String_Arguments.cpp:
        * tao/UB_String_Arguments.h:
        * tao/TAO.dsp:

          New files, for unbounded string and wstring arguments.

Tue Jun 17 18:27:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Argument.h:
        * tao/Basic_Argument_T.cpp:
        * tao/Basic_Argument_T.h:
        * tao/TAO.dsp:

          Changes to existing files added to this branch.

        * tao/Basic_Arguments.cpp:
        * tao/Basic_Arguments.h:
        * tao/Special_Basic_Argument_T.cpp:
        * tao/Special_Basic_Argument_T.h:
        * tao/Special_Basic_Arguments.cpp:
        * tao/Special_Basic_Arguments.h:
        * tao/Traits_T.h:

          New files, completing support for the basic IDL argument
          types.

Fri Jun 13 18:20:19 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Argument.h:
        * tao/Basic_Argument_T.cpp:
        * tao/Basic_Argument_T.h:

          New files, a start on refactoring arg handling during invocations
          and upcalls.

        * tao/TAO.dsp:

          Added new files to project.

