// $Id $

// This file was automatically generated by the Scheduler_Factory.
// Before editing the file please consider generating it again.

#include "orbsvcs/Scheduler_Factory.h"


// There were no scheduling anomalies.

// Only enabled RT_Infos were dumped to this file.



static ACE_Scheduler_Factory::POD_RT_Info infos[] = {
{    "supplierEC.ior", /* entry_point */
         1, /* handle */
      5000, /* worst_case_execution_time */,
      5000, /* typical_execution_time */,
      5000, /* cached_execution_time */,
    250000, /* period */
(RtecScheduler::Criticality_t) 4, /* [ VL_C = 0, L_C = 1, M_C = 2, H_C = 3, VH_C = 4] */
(RtecScheduler::Importance_t) 0, /* [ VL_I = 0, L_I = 1, M_I = 2, H_I = 3, VH_I = 4] */
      5000, /* quantum */
         1, /* threads */
        99, /* priority */
         1, /* preemption_subpriority */
         0, /* preemption_priority */
(RtecScheduler::Info_Type_t) 3, /* [OPERATION = 0, CONJUNCTION = 1, DISJUNCTION = 2, REMOTE_DEPENDANT = 3] */
(RtecScheduler::RT_Info_Enabled_Type_t) 1 } /* [RT_INFO_DISABLED = 0, RT_INFO_ENABLED = 1, RT_INFO_NON_VOLATILE = 2] */
,
{        "Consumer 0", /* entry_point */
         2, /* handle */
         0, /* worst_case_execution_time */,
         0, /* typical_execution_time */,
         0, /* cached_execution_time */,
    250000, /* period */
(RtecScheduler::Criticality_t) 0, /* [ VL_C = 0, L_C = 1, M_C = 2, H_C = 3, VH_C = 4] */
(RtecScheduler::Importance_t) 0, /* [ VL_I = 0, L_I = 1, M_I = 2, H_I = 3, VH_I = 4] */
         0, /* quantum */
         0, /* threads */
        99, /* priority */
         0, /* preemption_subpriority */
         0, /* preemption_priority */
(RtecScheduler::Info_Type_t) 0, /* [OPERATION = 0, CONJUNCTION = 1, DISJUNCTION = 2, REMOTE_DEPENDANT = 3] */
(RtecScheduler::RT_Info_Enabled_Type_t) 1 } /* [RT_INFO_DISABLED = 0, RT_INFO_ENABLED = 1, RT_INFO_NON_VOLATILE = 2] */

};

static int infos_size = sizeof(infos)/sizeof(infos[0]);


// Only enabled dependencies were dumped to this file.



static ACE_Scheduler_Factory::POD_Dependency_Info dependencies[] = {
  { (RtecScheduler::Dependency_Type_t) 0,          1,          1,          2,(RtecScheduler::Dispatching_Type_t) 1 }
};

static int dependencies_size = sizeof(dependencies)/sizeof(dependencies[0]);


static ACE_Scheduler_Factory::POD_Config_Info configs[] = {
  {          0,         99, (RtecScheduler::Dependency_Enabled_Type_t) 1 }
};

static int configs_size = sizeof(configs)/sizeof(configs[0]);


// This sets up Scheduler_Factory to use the runtime version.
int scheduler_factory_setup = 
  ACE_Scheduler_Factory::use_runtime (configs_size, configs, infos_size, infos);

// EOF
