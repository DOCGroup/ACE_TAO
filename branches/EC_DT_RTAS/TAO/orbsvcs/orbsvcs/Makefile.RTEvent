#----------------------------------------------------------------------------
#       GNU Makefile
#
# @file Makefile.RTEvent
#
# $Id$
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
MAKEFILE         = Makefile.RTEvent
DEPENDENCY_FILE  = .depend.Makefile.RTEvent

## LIB may be set to empty later on in this file
LIB_UNCHECKED    = libTAO_RTEvent.a
LIB              = $(LIB_UNCHECKED)

## SHLIB may be set to empty later on in this file
SHLIB_UNCHECKED  = libTAO_RTEvent.$(SOEXT)
SHLIB            = $(SHLIB_UNCHECKED)

ifndef TAO_ROOT
  TAO_ROOT = $(ACE_ROOT)/TAO
endif
ifndef CIAO_ROOT
  CIAO_ROOT = $(TAO_ROOT)/CIAO
endif

TAO_IDL = ../../../bin/tao_idl
IDL_FILES = RtecDefaultEventData RtecEventComm RtecEventChannelAdmin RtecUDPAdmin
IDL_SRC = $(foreach ext, C.cpp S.cpp, $(foreach file, $(IDL_FILES), $(file)$(ext)))

RTEvent = \
  RtecDefaultEventDataC \
  RtecDefaultEventDataS \
  RtecEventCommC \
  RtecEventCommS \
  RtecEventChannelAdminC \
  RtecEventChannelAdminS \
  RtecUDPAdminC \
  RtecUDPAdminS \
  Event_Utilities \
  Event/ECG_Adapters \
  Event/ECG_Address_Server_Base \
  Event/ECG_CDR_Message_Receiver \
  Event/ECG_CDR_Message_Sender \
  Event/ECG_Complex_Address_Server \
  Event/ECG_Mcast_EH \
  Event/ECG_Mcast_Gateway \
  Event/ECG_Simple_Address_Server \
  Event/ECG_Simple_Mcast_EH \
  Event/ECG_UDP_EH \
  Event/ECG_UDP_Out_Endpoint \
  Event/ECG_UDP_Receiver \
  Event/ECG_UDP_Sender \
  Event/ECG_ConsumerEC_Control \
  Event/ECG_Reactive_ConsumerEC_Control \
  Event/ECG_Reconnect_ConsumerEC_Control \
  Event/EC_And_Filter \
  Event/EC_Basic_Factory \
  Event/EC_Basic_Filter_Builder \
  Event/EC_Bitmask_Filter \
  Event/EC_Busy_Lock \
  Event/EC_Channel_Destroyer \
  Event/EC_Conjunction_Filter \
  Event/EC_ConsumerAdmin \
  Event/EC_ConsumerControl \
  Event/EC_Default_Factory \
  Event/EC_Default_ProxyConsumer \
  Event/EC_Default_ProxySupplier \
  Event/EC_Disjunction_Filter \
  Event/EC_Dispatching \
  Event/EC_Dispatching_Task \
  Event/EC_Event_Channel \
  Event/EC_Event_Channel_Base \
  Event/EC_Event_Limit \
  Event/EC_Factory \
  Event/EC_Filter \
  Event/EC_Filter_Builder \
  Event/EC_Gateway \
  Event/EC_Gateway_IIOP \
  Event/EC_Gateway_IIOP_Factory \
  Event/EC_Group_Scheduling \
  Event/EC_Lifetime_Utils \
  Event/EC_Lifetime_Utils_T \
  Event/EC_Masked_Type_Filter \
  Event/EC_MT_Dispatching \
  Event/EC_Negation_Filter \
  Event/EC_Null_Factory \
  Event/EC_Null_Scheduling \
  Event/EC_ObserverStrategy \
  Event/EC_Per_Supplier_Filter \
  Event/EC_Prefix_Filter_Builder \
  Event/EC_ProxyConsumer \
  Event/EC_ProxySupplier \
  Event/EC_Proxy_Disconnector \
  Event/EC_QOS_Info \
  Event/EC_Reactive_ConsumerControl \
  Event/EC_Reactive_Dispatching \
  Event/EC_Reactive_SupplierControl \
  Event/EC_Reactive_Timeout_Generator \
  Event/EC_Scheduling_Strategy \
  Event/EC_SupplierAdmin \
  Event/EC_SupplierControl \
  Event/EC_Supplier_Filter \
  Event/EC_Supplier_Filter_Builder \
  Event/EC_Timeout_Filter \
  Event/EC_Timeout_Generator \
  Event/EC_Trivial_Supplier_Filter \
  Event/EC_Type_Filter \
  Event/EC_UDP_Admin \
  Event/EC_Event_Counter \
  Event/ec_dsui_vars

FILES += \
         $(RTEvent)

RESOURCES += \
  RTEvent.rc

VPATH = .:Event

#----------------------------------------------------------------------------
#       Include macros and targets
#----------------------------------------------------------------------------
ACE_SHLIBS = -ldsui -lTAO_Messaging -lTAO_Svc_Utils -lTAO_PortableServer -lTAO_IORInterceptor -lTAO_ObjRefTemplate -lTAO_Valuetype -lTAO -lACE
include $(ACE_ROOT)/include/makeinclude/wrapper_macros.GNU
## We don't need the ACELIB setting from wrapper_macros.GNU
ACELIB =
include $(TAO_ROOT)/rules.tao.GNU

# To build multiple executables in the same directory on AIX, it works
# best to have a template directory per project.
# The compiler/linker isn't too smart about instantiating templates...
ifdef TEMPINCDIR
TEMPINCDIR := $(TEMPINCDIR)/RTEvent

all: $(TEMPINCDIR)

endif
OUTPUT_DIRECTORY = ../../../lib
all: $(OUTPUT_DIRECTORY)

$(OUTPUT_DIRECTORY):
	-@mkdir -p "$(OUTPUT_DIRECTORY)"

LIBCHECK = $(shell for lib in dsui TAO_Messaging TAO_Svc_Utils TAO_PortableServer TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype TAO ACE; do for libpath in ../../../lib $(DATASTREAM_ROOT)/lib; do full="`echo $$libpath/lib$$lib.* $$libpath/$$lib.lib | tr ' ' '\012' | grep -v \* | head -1`"; if [ -r "$$full" ]; then break; else full=; fi; done; if [ -z "$$full" ]; then echo $$lib; exit; fi; done; echo 1)
ifneq ($(LIBCHECK), 1)
  LIB   =
  SHLIB =
  all: lib_warning
endif

ifeq (,$(TAO_ORBSVCS))
else
  ifeq (RTEvent, $(findstring RTEvent, $(TAO_ORBSVCS)))
  else
    LIB   =
    SHLIB =
  endif
endif
ifneq (,$(RC))
  FILES += $(RESOURCES)
endif

LSRC   = $(addsuffix .cpp, $(FILES))

ifneq ($(SHLIB),)
all: idl_stubs

# This rule forces make to run the idl_stubs
# target before building any of the source files.
FORCED_IDL_STUBS = RtecDefaultEventDataC.cpp RtecDefaultEventDataS.cpp RtecEventCommC.cpp RtecEventCommS.cpp RtecEventChannelAdminC.cpp RtecEventChannelAdminS.cpp RtecUDPAdminC.cpp RtecUDPAdminS.cpp Event_Utilities.cpp Event/ECG_Adapters.cpp Event/ECG_Address_Server_Base.cpp Event/ECG_CDR_Message_Receiver.cpp Event/ECG_CDR_Message_Sender.cpp Event/ECG_Complex_Address_Server.cpp Event/ECG_Mcast_EH.cpp Event/ECG_Mcast_Gateway.cpp Event/ECG_Simple_Address_Server.cpp Event/ECG_Simple_Mcast_EH.cpp Event/ECG_UDP_EH.cpp Event/ECG_UDP_Out_Endpoint.cpp Event/ECG_UDP_Receiver.cpp Event/ECG_UDP_Sender.cpp Event/ECG_ConsumerEC_Control.cpp Event/ECG_Reactive_ConsumerEC_Control.cpp Event/ECG_Reconnect_ConsumerEC_Control.cpp Event/EC_And_Filter.cpp Event/EC_Basic_Factory.cpp Event/EC_Basic_Filter_Builder.cpp Event/EC_Bitmask_Filter.cpp Event/EC_Busy_Lock.cpp Event/EC_Channel_Destroyer.cpp Event/EC_Conjunction_Filter.cpp Event/EC_ConsumerAdmin.cpp Event/EC_ConsumerControl.cpp Event/EC_Default_Factory.cpp Event/EC_Default_ProxyConsumer.cpp Event/EC_Default_ProxySupplier.cpp Event/EC_Disjunction_Filter.cpp Event/EC_Dispatching.cpp Event/EC_Dispatching_Task.cpp Event/EC_Event_Channel.cpp Event/EC_Event_Channel_Base.cpp Event/EC_Event_Limit.cpp Event/EC_Factory.cpp Event/EC_Filter.cpp Event/EC_Filter_Builder.cpp Event/EC_Gateway.cpp Event/EC_Gateway_IIOP.cpp Event/EC_Gateway_IIOP_Factory.cpp Event/EC_Group_Scheduling.cpp Event/EC_Lifetime_Utils.cpp Event/EC_Lifetime_Utils_T.cpp Event/EC_Masked_Type_Filter.cpp Event/EC_MT_Dispatching.cpp Event/EC_Negation_Filter.cpp Event/EC_Null_Factory.cpp Event/EC_Null_Scheduling.cpp Event/EC_ObserverStrategy.cpp Event/EC_Per_Supplier_Filter.cpp Event/EC_Prefix_Filter_Builder.cpp Event/EC_ProxyConsumer.cpp Event/EC_ProxySupplier.cpp Event/EC_Proxy_Disconnector.cpp Event/EC_QOS_Info.cpp Event/EC_Reactive_ConsumerControl.cpp Event/EC_Reactive_Dispatching.cpp Event/EC_Reactive_SupplierControl.cpp Event/EC_Reactive_Timeout_Generator.cpp Event/EC_Scheduling_Strategy.cpp Event/EC_SupplierAdmin.cpp Event/EC_SupplierControl.cpp Event/EC_Supplier_Filter.cpp Event/EC_Supplier_Filter_Builder.cpp Event/EC_Timeout_Filter.cpp Event/EC_Timeout_Generator.cpp Event/EC_Trivial_Supplier_Filter.cpp Event/EC_Type_Filter.cpp Event/EC_UDP_Admin.cpp Event/EC_Event_Counter.cpp Event/ec_dsui_vars.cpp
endif

include $(ACE_ROOT)/include/makeinclude/macros.GNU
include $(ACE_ROOT)/include/makeinclude/rules.common.GNU
include $(ACE_ROOT)/include/makeinclude/rules.nonested.GNU

INSTALL_CHECK = ../../../lib
ifeq ($(INSTALL_CHECK),.)
  ifeq ($(PWD),)
    PWD=$(shell pwd)
  endif
  INSLIB = $(PWD)
else
  INSLIB  = $(INSTALL_CHECK)
endif

include $(ACE_ROOT)/include/makeinclude/rules.lib.GNU
include $(ACE_ROOT)/include/makeinclude/rules.local.GNU
include $(TAO_ROOT)/taoconfig.mk

CPPFLAGS     += -I../../.. -I../.. -I../../tao -I../../orbsvcs -I../../orbsvcs/orbsvcs -I$(DATASTREAM_ROOT)/include
ifeq ($(shared_libs),1)
  ifneq ($(SHLIB),)
    CPPFLAGS += -DTAO_RTEVENT_BUILD_DLL
  endif
endif
ifeq ($(static_libs),1)
  ifneq ($(LIB),)
    CPPFLAGS += -DACE_AS_STATIC_LIBS -DTAO_AS_STATIC_LIBS
  endif
endif


LDFLAGS      += -L../../../lib -L$(DATASTREAM_ROOT)/lib

TAO_IDLFLAGS += -Ge 1 -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h  -I../.. -I../../tao -I../../orbsvcs -Gv -Wb,export_macro=TAO_RTEvent_Export -Wb,export_include=Event/event_export.h
#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------
lib_warning:
	@echo This project will not be built due to the following missing library:
	@echo $(LIBCHECK)


# IDL File Directory: .
# IDL File Directory: .
# IDL File Directory: .
# IDL File Directory: .

ifneq ($(ADDITIONAL_IDL_TARGETS),)
idl_stubs: $(ADDITIONAL_IDL_TARGETS)
endif

ifneq ($(FORCED_IDL_STUBS),)
$(FORCED_IDL_STUBS): idl_stubs
endif

.PRECIOUS: $(foreach ext, $(IDL_EXT), $(foreach file, $(IDL_FILES), $(file)$(ext)))

realclean: clean
	-$(RM) $(foreach ext, $(IDL_EXT), $(foreach file, $(IDL_FILES), $(file)$(ext)))
ifneq ($(GENERATED_DIRTY),)
	-$(RM) -r $(GENERATED_DIRTY)
endif

