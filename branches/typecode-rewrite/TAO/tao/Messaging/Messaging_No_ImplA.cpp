// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

#include "Messaging_No_ImplC.h"
#include "tao/Typecode.h"
#include "tao/CDR.h"
#include "tao/Any.h"
#include "tao/Any_Impl_T.h"
#include "tao/Any_Dual_Impl_T.h"

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_Priority[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5072), 
  ACE_NTOHL (0x696f7269), 
  ACE_NTOHL (0x74793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Priority:1.0
    9,
  ACE_NTOHL (0x5072696f), 
  ACE_NTOHL (0x72697479), 
  ACE_NTOHL (0x0),  // name = Priority
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_Priority (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_Priority),
    (char *) &_oc_Messaging_Priority,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_Priority =
    &_tc_TAO_tc_Messaging_Priority;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RebindMode[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  37,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x62696e64), 
  ACE_NTOHL (0x4d6f6465), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/RebindMode:1.0
    11,
  ACE_NTOHL (0x52656269), 
  ACE_NTOHL (0x6e644d6f), 
  ACE_NTOHL (0x64650000),  // name = RebindMode
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RebindMode (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_RebindMode),
    (char *) &_oc_Messaging_RebindMode,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RebindMode =
    &_tc_TAO_tc_Messaging_RebindMode;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RoutingType[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f526f), 
  ACE_NTOHL (0x7574696e), 
  ACE_NTOHL (0x67547970), 
  ACE_NTOHL (0x653a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/RoutingType:1.0
    12,
  ACE_NTOHL (0x526f7574), 
  ACE_NTOHL (0x696e6754), 
  ACE_NTOHL (0x79706500),  // name = RoutingType
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingType (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_RoutingType),
    (char *) &_oc_Messaging_RoutingType,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RoutingType =
    &_tc_TAO_tc_Messaging_RoutingType;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_Ordering[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f4f72), 
  ACE_NTOHL (0x64657269), 
  ACE_NTOHL (0x6e673a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Ordering:1.0
    9,
  ACE_NTOHL (0x4f726465), 
  ACE_NTOHL (0x72696e67), 
  ACE_NTOHL (0x0),  // name = Ordering
    CORBA::tk_ushort,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_Ordering (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_Ordering),
    (char *) &_oc_Messaging_Ordering,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_Ordering =
    &_tc_TAO_tc_Messaging_Ordering;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RebindPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  39,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x62696e64), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RebindPolicy:1.0
    13,
  ACE_NTOHL (0x52656269), 
  ACE_NTOHL (0x6e64506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = RebindPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RebindPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RebindPolicy),
    (char *) &_oc_Messaging_RebindPolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RebindPolicy =
    &_tc_TAO_tc_Messaging_RebindPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_PriorityRange[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5072), 
  ACE_NTOHL (0x696f7269), 
  ACE_NTOHL (0x74795261), 
  ACE_NTOHL (0x6e67653a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/PriorityRange:1.0
    14,
  ACE_NTOHL (0x5072696f), 
  ACE_NTOHL (0x72697479), 
  ACE_NTOHL (0x52616e67), 
  ACE_NTOHL (0x65000000),  // name = PriorityRange
  2, // member count
    4,
  ACE_NTOHL (0x6d696e00),  // name = min
    CORBA::tk_alias, // typecode kind for typedefs
  64, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x4d657373), 
    ACE_NTOHL (0x6167696e), 
    ACE_NTOHL (0x672f5072), 
    ACE_NTOHL (0x696f7269), 
    ACE_NTOHL (0x74793a31), 
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Priority:1.0
        9,
    ACE_NTOHL (0x5072696f), 
    ACE_NTOHL (0x72697479), 
    ACE_NTOHL (0x0),  // name = Priority
        CORBA::tk_short,


  4,
  ACE_NTOHL (0x6d617800),  // name = max
    CORBA::tk_alias, // typecode kind for typedefs
  64, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x4d657373), 
    ACE_NTOHL (0x6167696e), 
    ACE_NTOHL (0x672f5072), 
    ACE_NTOHL (0x696f7269), 
    ACE_NTOHL (0x74793a31), 
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Priority:1.0
        9,
    ACE_NTOHL (0x5072696f), 
    ACE_NTOHL (0x72697479), 
    ACE_NTOHL (0x0),  // name = Priority
        CORBA::tk_short,


};

static CORBA::TypeCode _tc_TAO_tc_Messaging_PriorityRange (
    CORBA::tk_struct,
    sizeof (_oc_Messaging_PriorityRange),
    (char *) &_oc_Messaging_PriorityRange,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_PriorityRange =
    &_tc_TAO_tc_Messaging_PriorityRange;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RequestPriorityPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x71756573), 
  ACE_NTOHL (0x74507269), 
  ACE_NTOHL (0x6f726974), 
  ACE_NTOHL (0x79506f6c), 
  ACE_NTOHL (0x6963793a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/RequestPriorityPolicy:1.0
    22,
  ACE_NTOHL (0x52657175), 
  ACE_NTOHL (0x65737450), 
  ACE_NTOHL (0x72696f72), 
  ACE_NTOHL (0x69747950), 
  ACE_NTOHL (0x6f6c6963), 
  ACE_NTOHL (0x79000000),  // name = RequestPriorityPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestPriorityPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestPriorityPolicy),
    (char *) &_oc_Messaging_RequestPriorityPolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RequestPriorityPolicy =
    &_tc_TAO_tc_Messaging_RequestPriorityPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_ReplyPriorityPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  46,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x706c7950), 
  ACE_NTOHL (0x72696f72), 
  ACE_NTOHL (0x69747950), 
  ACE_NTOHL (0x6f6c6963), 
  ACE_NTOHL (0x793a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/ReplyPriorityPolicy:1.0
    20,
  ACE_NTOHL (0x5265706c), 
  ACE_NTOHL (0x79507269), 
  ACE_NTOHL (0x6f726974), 
  ACE_NTOHL (0x79506f6c), 
  ACE_NTOHL (0x69637900),  // name = ReplyPriorityPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyPriorityPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyPriorityPolicy),
    (char *) &_oc_Messaging_ReplyPriorityPolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_ReplyPriorityPolicy =
    &_tc_TAO_tc_Messaging_ReplyPriorityPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RequestStartTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  49,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x71756573), 
  ACE_NTOHL (0x74537461), 
  ACE_NTOHL (0x72745469), 
  ACE_NTOHL (0x6d65506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/RequestStartTimePolicy:1.0
    23,
  ACE_NTOHL (0x52657175), 
  ACE_NTOHL (0x65737453), 
  ACE_NTOHL (0x74617274), 
  ACE_NTOHL (0x54696d65), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63790000),  // name = RequestStartTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestStartTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestStartTimePolicy),
    (char *) &_oc_Messaging_RequestStartTimePolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RequestStartTimePolicy =
    &_tc_TAO_tc_Messaging_RequestStartTimePolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RequestEndTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  47,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x71756573), 
  ACE_NTOHL (0x74456e64), 
  ACE_NTOHL (0x54696d65), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RequestEndTimePolicy:1.0
    21,
  ACE_NTOHL (0x52657175), 
  ACE_NTOHL (0x65737445), 
  ACE_NTOHL (0x6e645469), 
  ACE_NTOHL (0x6d65506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = RequestEndTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestEndTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestEndTimePolicy),
    (char *) &_oc_Messaging_RequestEndTimePolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RequestEndTimePolicy =
    &_tc_TAO_tc_Messaging_RequestEndTimePolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_ReplyStartTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  47,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x706c7953), 
  ACE_NTOHL (0x74617274), 
  ACE_NTOHL (0x54696d65), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/ReplyStartTimePolicy:1.0
    21,
  ACE_NTOHL (0x5265706c), 
  ACE_NTOHL (0x79537461), 
  ACE_NTOHL (0x72745469), 
  ACE_NTOHL (0x6d65506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = ReplyStartTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyStartTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyStartTimePolicy),
    (char *) &_oc_Messaging_ReplyStartTimePolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_ReplyStartTimePolicy =
    &_tc_TAO_tc_Messaging_ReplyStartTimePolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_ReplyEndTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  45,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x706c7945), 
  ACE_NTOHL (0x6e645469), 
  ACE_NTOHL (0x6d65506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/ReplyEndTimePolicy:1.0
    19,
  ACE_NTOHL (0x5265706c), 
  ACE_NTOHL (0x79456e64), 
  ACE_NTOHL (0x54696d65), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63790000),  // name = ReplyEndTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyEndTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyEndTimePolicy),
    (char *) &_oc_Messaging_ReplyEndTimePolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_ReplyEndTimePolicy =
    &_tc_TAO_tc_Messaging_ReplyEndTimePolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RelativeRequestTimeoutPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  55,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x6c617469), 
  ACE_NTOHL (0x76655265), 
  ACE_NTOHL (0x71756573), 
  ACE_NTOHL (0x7454696d), 
  ACE_NTOHL (0x656f7574), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RelativeRequestTimeoutPolicy:1.0
    29,
  ACE_NTOHL (0x52656c61), 
  ACE_NTOHL (0x74697665), 
  ACE_NTOHL (0x52657175), 
  ACE_NTOHL (0x65737454), 
  ACE_NTOHL (0x696d656f), 
  ACE_NTOHL (0x7574506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = RelativeRequestTimeoutPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RelativeRequestTimeoutPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RelativeRequestTimeoutPolicy),
    (char *) &_oc_Messaging_RelativeRequestTimeoutPolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RelativeRequestTimeoutPolicy =
    &_tc_TAO_tc_Messaging_RelativeRequestTimeoutPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RoutingTypeRange[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f526f), 
  ACE_NTOHL (0x7574696e), 
  ACE_NTOHL (0x67547970), 
  ACE_NTOHL (0x6552616e), 
  ACE_NTOHL (0x67653a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RoutingTypeRange:1.0
    17,
  ACE_NTOHL (0x526f7574), 
  ACE_NTOHL (0x696e6754), 
  ACE_NTOHL (0x79706552), 
  ACE_NTOHL (0x616e6765), 
  ACE_NTOHL (0x0),  // name = RoutingTypeRange
  2, // member count
    4,
  ACE_NTOHL (0x6d696e00),  // name = min
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    38,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x4d657373), 
    ACE_NTOHL (0x6167696e), 
    ACE_NTOHL (0x672f526f), 
    ACE_NTOHL (0x7574696e), 
    ACE_NTOHL (0x67547970), 
    ACE_NTOHL (0x653a312e), 
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/RoutingType:1.0
        12,
    ACE_NTOHL (0x526f7574), 
    ACE_NTOHL (0x696e6754), 
    ACE_NTOHL (0x79706500),  // name = RoutingType
        CORBA::tk_short,


  4,
  ACE_NTOHL (0x6d617800),  // name = max
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    38,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x4d657373), 
    ACE_NTOHL (0x6167696e), 
    ACE_NTOHL (0x672f526f), 
    ACE_NTOHL (0x7574696e), 
    ACE_NTOHL (0x67547970), 
    ACE_NTOHL (0x653a312e), 
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/RoutingType:1.0
        12,
    ACE_NTOHL (0x526f7574), 
    ACE_NTOHL (0x696e6754), 
    ACE_NTOHL (0x79706500),  // name = RoutingType
        CORBA::tk_short,


};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingTypeRange (
    CORBA::tk_struct,
    sizeof (_oc_Messaging_RoutingTypeRange),
    (char *) &_oc_Messaging_RoutingTypeRange,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RoutingTypeRange =
    &_tc_TAO_tc_Messaging_RoutingTypeRange;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_RoutingPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f526f), 
  ACE_NTOHL (0x7574696e), 
  ACE_NTOHL (0x67506f6c), 
  ACE_NTOHL (0x6963793a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/RoutingPolicy:1.0
    14,
  ACE_NTOHL (0x526f7574), 
  ACE_NTOHL (0x696e6750), 
  ACE_NTOHL (0x6f6c6963), 
  ACE_NTOHL (0x79000000),  // name = RoutingPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RoutingPolicy),
    (char *) &_oc_Messaging_RoutingPolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_RoutingPolicy =
    &_tc_TAO_tc_Messaging_RoutingPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_MaxHopsPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f4d61), 
  ACE_NTOHL (0x78486f70), 
  ACE_NTOHL (0x73506f6c), 
  ACE_NTOHL (0x6963793a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/MaxHopsPolicy:1.0
    14,
  ACE_NTOHL (0x4d617848), 
  ACE_NTOHL (0x6f707350), 
  ACE_NTOHL (0x6f6c6963), 
  ACE_NTOHL (0x79000000),  // name = MaxHopsPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_MaxHopsPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_MaxHopsPolicy),
    (char *) &_oc_Messaging_MaxHopsPolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_MaxHopsPolicy =
    &_tc_TAO_tc_Messaging_MaxHopsPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_Messaging_QueueOrderPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5175), 
  ACE_NTOHL (0x6575654f), 
  ACE_NTOHL (0x72646572), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/QueueOrderPolicy:1.0
    17,
  ACE_NTOHL (0x51756575), 
  ACE_NTOHL (0x654f7264), 
  ACE_NTOHL (0x6572506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = QueueOrderPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_QueueOrderPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_QueueOrderPolicy),
    (char *) &_oc_Messaging_QueueOrderPolicy,
    0,
    0
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr const _tc_QueueOrderPolicy =
    &_tc_TAO_tc_Messaging_QueueOrderPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr _tao_elem
  )
{
  Messaging::RebindPolicy_ptr _tao_objptr =
    Messaging::RebindPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RebindPolicy>::insert (
      _tao_any,
      Messaging::RebindPolicy::_tao_any_destructor,
      Messaging::_tc_RebindPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RebindPolicy>::extract (
        _tao_any,
        Messaging::RebindPolicy::_tao_any_destructor,
        Messaging::_tc_RebindPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Messaging::PriorityRange &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::insert_copy (
      _tao_any,
      Messaging::PriorityRange::_tao_any_destructor,
      Messaging::_tc_PriorityRange,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Messaging::PriorityRange *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::insert (
      _tao_any,
      Messaging::PriorityRange::_tao_any_destructor,
      Messaging::_tc_PriorityRange,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::PriorityRange *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const Messaging::PriorityRange *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Messaging::PriorityRange *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::extract (
        _tao_any,
        Messaging::PriorityRange::_tao_any_destructor,
        Messaging::_tc_PriorityRange,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr _tao_elem
  )
{
  Messaging::RequestPriorityPolicy_ptr _tao_objptr =
    Messaging::RequestPriorityPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::insert (
      _tao_any,
      Messaging::RequestPriorityPolicy::_tao_any_destructor,
      Messaging::_tc_RequestPriorityPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::extract (
        _tao_any,
        Messaging::RequestPriorityPolicy::_tao_any_destructor,
        Messaging::_tc_RequestPriorityPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr _tao_elem
  )
{
  Messaging::ReplyPriorityPolicy_ptr _tao_objptr =
    Messaging::ReplyPriorityPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::insert (
      _tao_any,
      Messaging::ReplyPriorityPolicy::_tao_any_destructor,
      Messaging::_tc_ReplyPriorityPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::extract (
        _tao_any,
        Messaging::ReplyPriorityPolicy::_tao_any_destructor,
        Messaging::_tc_ReplyPriorityPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr _tao_elem
  )
{
  Messaging::RequestStartTimePolicy_ptr _tao_objptr =
    Messaging::RequestStartTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::insert (
      _tao_any,
      Messaging::RequestStartTimePolicy::_tao_any_destructor,
      Messaging::_tc_RequestStartTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::extract (
        _tao_any,
        Messaging::RequestStartTimePolicy::_tao_any_destructor,
        Messaging::_tc_RequestStartTimePolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr _tao_elem
  )
{
  Messaging::RequestEndTimePolicy_ptr _tao_objptr =
    Messaging::RequestEndTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::insert (
      _tao_any,
      Messaging::RequestEndTimePolicy::_tao_any_destructor,
      Messaging::_tc_RequestEndTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::extract (
        _tao_any,
        Messaging::RequestEndTimePolicy::_tao_any_destructor,
        Messaging::_tc_RequestEndTimePolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr _tao_elem
  )
{
  Messaging::ReplyStartTimePolicy_ptr _tao_objptr =
    Messaging::ReplyStartTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::insert (
      _tao_any,
      Messaging::ReplyStartTimePolicy::_tao_any_destructor,
      Messaging::_tc_ReplyStartTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::extract (
        _tao_any,
        Messaging::ReplyStartTimePolicy::_tao_any_destructor,
        Messaging::_tc_ReplyStartTimePolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr _tao_elem
  )
{
  Messaging::ReplyEndTimePolicy_ptr _tao_objptr =
    Messaging::ReplyEndTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::insert (
      _tao_any,
      Messaging::ReplyEndTimePolicy::_tao_any_destructor,
      Messaging::_tc_ReplyEndTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::extract (
        _tao_any,
        Messaging::ReplyEndTimePolicy::_tao_any_destructor,
        Messaging::_tc_ReplyEndTimePolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr _tao_elem
  )
{
  Messaging::RelativeRequestTimeoutPolicy_ptr _tao_objptr =
    Messaging::RelativeRequestTimeoutPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::insert (
      _tao_any,
      Messaging::RelativeRequestTimeoutPolicy::_tao_any_destructor,
      Messaging::_tc_RelativeRequestTimeoutPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::extract (
        _tao_any,
        Messaging::RelativeRequestTimeoutPolicy::_tao_any_destructor,
        Messaging::_tc_RelativeRequestTimeoutPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Messaging::RoutingTypeRange &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::insert_copy (
      _tao_any,
      Messaging::RoutingTypeRange::_tao_any_destructor,
      Messaging::_tc_RoutingTypeRange,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingTypeRange *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::insert (
      _tao_any,
      Messaging::RoutingTypeRange::_tao_any_destructor,
      Messaging::_tc_RoutingTypeRange,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RoutingTypeRange *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const Messaging::RoutingTypeRange *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Messaging::RoutingTypeRange *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::extract (
        _tao_any,
        Messaging::RoutingTypeRange::_tao_any_destructor,
        Messaging::_tc_RoutingTypeRange,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr _tao_elem
  )
{
  Messaging::RoutingPolicy_ptr _tao_objptr =
    Messaging::RoutingPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RoutingPolicy>::insert (
      _tao_any,
      Messaging::RoutingPolicy::_tao_any_destructor,
      Messaging::_tc_RoutingPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RoutingPolicy>::extract (
        _tao_any,
        Messaging::RoutingPolicy::_tao_any_destructor,
        Messaging::_tc_RoutingPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr _tao_elem
  )
{
  Messaging::MaxHopsPolicy_ptr _tao_objptr =
    Messaging::MaxHopsPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::insert (
      _tao_any,
      Messaging::MaxHopsPolicy::_tao_any_destructor,
      Messaging::_tc_MaxHopsPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::extract (
        _tao_any,
        Messaging::MaxHopsPolicy::_tao_any_destructor,
        Messaging::_tc_MaxHopsPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::marshal_value (TAO_OutputCDR &)
{
  return false;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::demarshal_value (TAO_InputCDR &)
{
  return false;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr _tao_elem
  )
{
  Messaging::QueueOrderPolicy_ptr _tao_objptr =
    Messaging::QueueOrderPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::insert (
      _tao_any,
      Messaging::QueueOrderPolicy::_tao_any_destructor,
      Messaging::_tc_QueueOrderPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::extract (
        _tao_any,
        Messaging::QueueOrderPolicy::_tao_any_destructor,
        Messaging::_tc_QueueOrderPolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

  template class
    TAO::Any_Impl_T<
        Messaging::RebindPolicy
      >;

  template class
    TAO::Any_Dual_Impl_T<
        Messaging::PriorityRange
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RequestPriorityPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::ReplyPriorityPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RequestStartTimePolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RequestEndTimePolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::ReplyStartTimePolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::ReplyEndTimePolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RelativeRequestTimeoutPolicy
      >;

  template class
    TAO::Any_Dual_Impl_T<
        Messaging::RoutingTypeRange
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RoutingPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::MaxHopsPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::QueueOrderPolicy
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RebindPolicy \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        Messaging::PriorityRange \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RequestPriorityPolicy \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::ReplyPriorityPolicy \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RequestStartTimePolicy \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RequestEndTimePolicy \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::ReplyStartTimePolicy \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::ReplyEndTimePolicy \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RelativeRequestTimeoutPolicy \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        Messaging::RoutingTypeRange \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RoutingPolicy \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::MaxHopsPolicy \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::QueueOrderPolicy \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */ 
