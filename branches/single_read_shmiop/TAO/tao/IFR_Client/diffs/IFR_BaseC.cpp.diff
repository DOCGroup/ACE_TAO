--- orig/IFR_BaseC.cpp	Tue Apr 24 23:25:42 2001
+++ IFR_BaseC.cpp	Tue Apr 24 22:49:23 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -20,10 +20,9 @@
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
 #include "IFR_BaseC.h"
-
-#include "tao/Stub.h"
-#include "tao/Invocation.h"
+#include "tao/corbafwd.h"
 #include "tao/ClientRequestInfo.h"
+
 #if TAO_HAS_INTERCEPTORS == 1
 #include "tao/RequestInfo_Util.h"
 #endif  /* TAO_HAS_INTERCEPTORS == 1 */
@@ -36,154 +35,6 @@
 #include "IFR_BaseC.i"
 #endif /* !defined INLINE */
 
-static const CORBA::Long _oc_CORBA_DefinitionKind[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  37,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f4465), 
-  ACE_NTOHL (0x66696e69), 
-  ACE_NTOHL (0x74696f6e), 
-  ACE_NTOHL (0x4b696e64), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/DefinitionKind:1.0
-  15,
-  ACE_NTOHL (0x44656669), 
-  ACE_NTOHL (0x6e697469), 
-  ACE_NTOHL (0x6f6e4b69), 
-  ACE_NTOHL (0x6e640000),  // name = DefinitionKind
-  26, // member count
-  8,
-  ACE_NTOHL (0x646b5f6e), 
-  ACE_NTOHL (0x6f6e6500),  // name = dk_none
-  7,
-  ACE_NTOHL (0x646b5f61), 
-  ACE_NTOHL (0x6c6c0000),  // name = dk_all
-  13,
-  ACE_NTOHL (0x646b5f41), 
-  ACE_NTOHL (0x74747269), 
-  ACE_NTOHL (0x62757465), 
-  ACE_NTOHL (0x0),  // name = dk_Attribute
-  12,
-  ACE_NTOHL (0x646b5f43), 
-  ACE_NTOHL (0x6f6e7374), 
-  ACE_NTOHL (0x616e7400),  // name = dk_Constant
-  13,
-  ACE_NTOHL (0x646b5f45), 
-  ACE_NTOHL (0x78636570), 
-  ACE_NTOHL (0x74696f6e), 
-  ACE_NTOHL (0x0),  // name = dk_Exception
-  13,
-  ACE_NTOHL (0x646b5f49), 
-  ACE_NTOHL (0x6e746572), 
-  ACE_NTOHL (0x66616365), 
-  ACE_NTOHL (0x0),  // name = dk_Interface
-  10,
-  ACE_NTOHL (0x646b5f4d), 
-  ACE_NTOHL (0x6f64756c), 
-  ACE_NTOHL (0x65000000),  // name = dk_Module
-  13,
-  ACE_NTOHL (0x646b5f4f), 
-  ACE_NTOHL (0x70657261), 
-  ACE_NTOHL (0x74696f6e), 
-  ACE_NTOHL (0x0),  // name = dk_Operation
-  11,
-  ACE_NTOHL (0x646b5f54), 
-  ACE_NTOHL (0x79706564), 
-  ACE_NTOHL (0x65660000),  // name = dk_Typedef
-  9,
-  ACE_NTOHL (0x646b5f41), 
-  ACE_NTOHL (0x6c696173), 
-  ACE_NTOHL (0x0),  // name = dk_Alias
-  10,
-  ACE_NTOHL (0x646b5f53), 
-  ACE_NTOHL (0x74727563), 
-  ACE_NTOHL (0x74000000),  // name = dk_Struct
-  9,
-  ACE_NTOHL (0x646b5f55), 
-  ACE_NTOHL (0x6e696f6e), 
-  ACE_NTOHL (0x0),  // name = dk_Union
-  8,
-  ACE_NTOHL (0x646b5f45), 
-  ACE_NTOHL (0x6e756d00),  // name = dk_Enum
-  13,
-  ACE_NTOHL (0x646b5f50), 
-  ACE_NTOHL (0x72696d69), 
-  ACE_NTOHL (0x74697665), 
-  ACE_NTOHL (0x0),  // name = dk_Primitive
-  10,
-  ACE_NTOHL (0x646b5f53), 
-  ACE_NTOHL (0x7472696e), 
-  ACE_NTOHL (0x67000000),  // name = dk_String
-  12,
-  ACE_NTOHL (0x646b5f53), 
-  ACE_NTOHL (0x65717565), 
-  ACE_NTOHL (0x6e636500),  // name = dk_Sequence
-  9,
-  ACE_NTOHL (0x646b5f41), 
-  ACE_NTOHL (0x72726179), 
-  ACE_NTOHL (0x0),  // name = dk_Array
-  14,
-  ACE_NTOHL (0x646b5f52), 
-  ACE_NTOHL (0x65706f73), 
-  ACE_NTOHL (0x69746f72), 
-  ACE_NTOHL (0x79000000),  // name = dk_Repository
-  11,
-  ACE_NTOHL (0x646b5f57), 
-  ACE_NTOHL (0x73747269), 
-  ACE_NTOHL (0x6e670000),  // name = dk_Wstring
-  9,
-  ACE_NTOHL (0x646b5f46), 
-  ACE_NTOHL (0x69786564), 
-  ACE_NTOHL (0x0),  // name = dk_Fixed
-  9,
-  ACE_NTOHL (0x646b5f56), 
-  ACE_NTOHL (0x616c7565), 
-  ACE_NTOHL (0x0),  // name = dk_Value
-  12,
-  ACE_NTOHL (0x646b5f56), 
-  ACE_NTOHL (0x616c7565), 
-  ACE_NTOHL (0x426f7800),  // name = dk_ValueBox
-  15,
-  ACE_NTOHL (0x646b5f56), 
-  ACE_NTOHL (0x616c7565), 
-  ACE_NTOHL (0x4d656d62), 
-  ACE_NTOHL (0x65720000),  // name = dk_ValueMember
-  10,
-  ACE_NTOHL (0x646b5f4e), 
-  ACE_NTOHL (0x61746976), 
-  ACE_NTOHL (0x65000000),  // name = dk_Native
-  21,
-  ACE_NTOHL (0x646b5f41), 
-  ACE_NTOHL (0x62737472), 
-  ACE_NTOHL (0x61637449), 
-  ACE_NTOHL (0x6e746572), 
-  ACE_NTOHL (0x66616365), 
-  ACE_NTOHL (0x0),  // name = dk_AbstractInterface
-  18,
-  ACE_NTOHL (0x646b5f4c), 
-  ACE_NTOHL (0x6f63616c), 
-  ACE_NTOHL (0x496e7465), 
-  ACE_NTOHL (0x72666163), 
-  ACE_NTOHL (0x65000000),  // name = dk_LocalInterface
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_DefinitionKind (
-    CORBA::tk_enum,
-    sizeof (_oc_CORBA_DefinitionKind),
-    (char *) &_oc_CORBA_DefinitionKind,
-    0,
-    sizeof (CORBA::DefinitionKind)
-  );
-
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_DefinitionKind, &_tc_TAO_tc_CORBA_DefinitionKind)
-TAO_NAMESPACE_END
-
 CORBA_IRObject_ptr
 tao_CORBA_IRObject_duplicate (
     CORBA_IRObject_ptr p
@@ -987,7 +838,7 @@
     return CORBA_IRObject::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_IRObject:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/IRObject:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_IRObject::_nil ());
       if (is_a == 0)
         return CORBA_IRObject::_nil ();
@@ -1055,7 +906,7 @@
 CORBA::Boolean CORBA_IRObject::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -1080,7 +931,7 @@
 
 const char* CORBA_IRObject::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_IRObject:1.0";
+  return "IDL:omg.org/CORBA/IRObject:1.0";
 }
 
 CORBA::DefinitionKind CORBA_IRObject::def_kind (
@@ -1117,36 +968,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_IRObject[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  31,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4952), 
-  ACE_NTOHL (0x4f626a65), 
-  ACE_NTOHL (0x63743a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_IRObject:1.0
-  15,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4952), 
-  ACE_NTOHL (0x4f626a65), 
-  ACE_NTOHL (0x63740000),  // name = CORBA_IRObject
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_IRObject (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_IRObject),
-    (char *) &_oc_CORBA_IRObject,
-    0,
-    sizeof (CORBA_IRObject)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_IRObject =
-  &_tc_TAO_tc_CORBA_IRObject;
-
 CORBA_Contained_ptr
 tao_CORBA_Contained_duplicate (
     CORBA_Contained_ptr p
@@ -4247,7 +4068,7 @@
     return CORBA_Contained::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_Contained:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/Contained:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_Contained::_nil ());
       if (is_a == 0)
         return CORBA_Contained::_nil ();
@@ -4315,8 +4136,8 @@
 CORBA::Boolean CORBA_Contained::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -4353,7 +4174,7 @@
 
 const char* CORBA_Contained::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_Contained:1.0";
+  return "IDL:omg.org/CORBA/Contained:1.0";
 }
 
 char * CORBA_Contained::id (
@@ -4523,13 +4344,13 @@
   ACE_NTOHL (0x6f6d672e), 
   ACE_NTOHL (0x6f72672f), 
   ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
+  ACE_NTOHL (0x412f436f), 
   ACE_NTOHL (0x6e746169), 
   ACE_NTOHL (0x6e65642f), 
   ACE_NTOHL (0x44657363), 
   ACE_NTOHL (0x72697074), 
   ACE_NTOHL (0x696f6e3a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_Contained/Description:1.0
+  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/Contained/Description:1.0
   12,
   ACE_NTOHL (0x44657363), 
   ACE_NTOHL (0x72697074), 
@@ -4736,37 +4557,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_Contained[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  32,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e746169), 
-  ACE_NTOHL (0x6e65643a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_Contained:1.0
-  16,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e746169), 
-  ACE_NTOHL (0x6e656400),  // name = CORBA_Contained
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_Contained (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_Contained),
-    (char *) &_oc_CORBA_Contained,
-    0,
-    sizeof (CORBA_Contained)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_Contained =
-  &_tc_TAO_tc_CORBA_Contained;
-
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
 #if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_CONTAINEDSEQ_CS_)
@@ -4907,62 +4697,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_ContainedSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e746169), 
-  ACE_NTOHL (0x6e656453), 
-  ACE_NTOHL (0x65713a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ContainedSeq:1.0
-  19,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e746169), 
-  ACE_NTOHL (0x6e656453), 
-  ACE_NTOHL (0x65710000),  // name = CORBA_ContainedSeq
-  CORBA::tk_sequence, // typecode kind
-  76, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_objref, // typecode kind
-    60, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      32,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f436f), 
-      ACE_NTOHL (0x6e746169), 
-      ACE_NTOHL (0x6e65643a), 
-      ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_Contained:1.0
-      16,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f436f), 
-      ACE_NTOHL (0x6e746169), 
-      ACE_NTOHL (0x6e656400),  // name = CORBA_Contained
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ContainedSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_ContainedSeq),
-    (char *) &_oc_CORBA_ContainedSeq,
-    0,
-    sizeof (CORBA_ContainedSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ContainedSeq =
-  &_tc_TAO_tc_CORBA_ContainedSeq;
-
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
 #if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_INTERFACEDEFSEQ_CS_)
@@ -5102,66 +4836,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_InterfaceDefSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  38,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65665365), 
-  ACE_NTOHL (0x713a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_InterfaceDefSeq:1.0
-  22,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65665365), 
-  ACE_NTOHL (0x71000000),  // name = CORBA_InterfaceDefSeq
-  CORBA::tk_sequence, // typecode kind
-  84, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_objref, // typecode kind
-    68, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      35,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f496e), 
-      ACE_NTOHL (0x74657266), 
-      ACE_NTOHL (0x61636544), 
-      ACE_NTOHL (0x65663a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_InterfaceDef:1.0
-      19,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f496e), 
-      ACE_NTOHL (0x74657266), 
-      ACE_NTOHL (0x61636544), 
-      ACE_NTOHL (0x65660000),  // name = CORBA_InterfaceDef
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_InterfaceDefSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_InterfaceDefSeq),
-    (char *) &_oc_CORBA_InterfaceDefSeq,
-    0,
-    sizeof (CORBA_InterfaceDefSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_InterfaceDefSeq =
-  &_tc_TAO_tc_CORBA_InterfaceDefSeq;
-
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
 #if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_VALUEDEFSEQ_CS_)
@@ -5301,62 +4975,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_ValueDefSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  34,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c756544), 
-  ACE_NTOHL (0x65665365), 
-  ACE_NTOHL (0x713a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_ValueDefSeq:1.0
-  18,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c756544), 
-  ACE_NTOHL (0x65665365), 
-  ACE_NTOHL (0x71000000),  // name = CORBA_ValueDefSeq
-  CORBA::tk_sequence, // typecode kind
-  76, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_objref, // typecode kind
-    60, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      31,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f5661), 
-      ACE_NTOHL (0x6c756544), 
-      ACE_NTOHL (0x65663a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ValueDef:1.0
-      15,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f5661), 
-      ACE_NTOHL (0x6c756544), 
-      ACE_NTOHL (0x65660000),  // name = CORBA_ValueDef
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ValueDefSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_ValueDefSeq),
-    (char *) &_oc_CORBA_ValueDefSeq,
-    0,
-    sizeof (CORBA_ValueDefSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ValueDefSeq =
-  &_tc_TAO_tc_CORBA_ValueDefSeq;
-
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
 #if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_ABSTRACTINTERFACEDEFSEQ_CS_)
@@ -5496,74 +5114,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_AbstractInterfaceDefSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  46,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4162), 
-  ACE_NTOHL (0x73747261), 
-  ACE_NTOHL (0x6374496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65665365), 
-  ACE_NTOHL (0x713a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_AbstractInterfaceDefSeq:1.0
-  30,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4162), 
-  ACE_NTOHL (0x73747261), 
-  ACE_NTOHL (0x6374496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65665365), 
-  ACE_NTOHL (0x71000000),  // name = CORBA_AbstractInterfaceDefSeq
-  CORBA::tk_sequence, // typecode kind
-  100, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_objref, // typecode kind
-    84, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      43,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4162), 
-      ACE_NTOHL (0x73747261), 
-      ACE_NTOHL (0x6374496e), 
-      ACE_NTOHL (0x74657266), 
-      ACE_NTOHL (0x61636544), 
-      ACE_NTOHL (0x65663a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_AbstractInterfaceDef:1.0
-      27,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4162), 
-      ACE_NTOHL (0x73747261), 
-      ACE_NTOHL (0x6374496e), 
-      ACE_NTOHL (0x74657266), 
-      ACE_NTOHL (0x61636544), 
-      ACE_NTOHL (0x65660000),  // name = CORBA_AbstractInterfaceDef
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_AbstractInterfaceDefSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_AbstractInterfaceDefSeq),
-    (char *) &_oc_CORBA_AbstractInterfaceDefSeq,
-    0,
-    sizeof (CORBA_AbstractInterfaceDefSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_AbstractInterfaceDefSeq =
-  &_tc_TAO_tc_CORBA_AbstractInterfaceDefSeq;
-
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
 #if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_LOCALINTERFACEDEFSEQ_CS_)
@@ -5703,134 +5253,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_LocalInterfaceDefSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  43,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4c6f), 
-  ACE_NTOHL (0x63616c49), 
-  ACE_NTOHL (0x6e746572), 
-  ACE_NTOHL (0x66616365), 
-  ACE_NTOHL (0x44656653), 
-  ACE_NTOHL (0x65713a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_LocalInterfaceDefSeq:1.0
-  27,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4c6f), 
-  ACE_NTOHL (0x63616c49), 
-  ACE_NTOHL (0x6e746572), 
-  ACE_NTOHL (0x66616365), 
-  ACE_NTOHL (0x44656653), 
-  ACE_NTOHL (0x65710000),  // name = CORBA_LocalInterfaceDefSeq
-  CORBA::tk_sequence, // typecode kind
-  92, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_objref, // typecode kind
-    76, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      40,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4c6f), 
-      ACE_NTOHL (0x63616c49), 
-      ACE_NTOHL (0x6e746572), 
-      ACE_NTOHL (0x66616365), 
-      ACE_NTOHL (0x4465663a), 
-      ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_LocalInterfaceDef:1.0
-      24,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4c6f), 
-      ACE_NTOHL (0x63616c49), 
-      ACE_NTOHL (0x6e746572), 
-      ACE_NTOHL (0x66616365), 
-      ACE_NTOHL (0x44656600),  // name = CORBA_LocalInterfaceDef
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_LocalInterfaceDefSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_LocalInterfaceDefSeq),
-    (char *) &_oc_CORBA_LocalInterfaceDefSeq,
-    0,
-    sizeof (CORBA_LocalInterfaceDefSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_LocalInterfaceDefSeq =
-  &_tc_TAO_tc_CORBA_LocalInterfaceDefSeq;
-
-static const CORBA::Long _oc_CORBA_StructMember[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5374), 
-  ACE_NTOHL (0x72756374), 
-  ACE_NTOHL (0x4d656d62), 
-  ACE_NTOHL (0x65723a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_StructMember:1.0
-  19,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5374), 
-  ACE_NTOHL (0x72756374), 
-  ACE_NTOHL (0x4d656d62), 
-  ACE_NTOHL (0x65720000),  // name = CORBA_StructMember
-  3, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  5,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x0),  // name = type
-  CORBA::tk_TypeCode,
-
-  9,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x5f646566), 
-  ACE_NTOHL (0x0),  // name = type_def
-  CORBA::tk_objref, // typecode kind
-  60, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    30,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4944), 
-    ACE_NTOHL (0x4c547970), 
-    ACE_NTOHL (0x653a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-    14,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4944), 
-    ACE_NTOHL (0x4c547970), 
-    ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_StructMember (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_StructMember),
-    (char *) &_oc_CORBA_StructMember,
-    0,
-    sizeof (CORBA_StructMember)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_StructMember =
-  &_tc_TAO_tc_CORBA_StructMember;
-
 void CORBA_StructMember::_tao_any_destructor (void *x)
 {
   CORBA_StructMember *tmp = ACE_static_cast (CORBA_StructMember*,x);
@@ -5928,223 +5350,10 @@
 {
   CORBA_StructMemberSeq *tmp = ACE_static_cast (CORBA_StructMemberSeq*,x);
   delete tmp;
-}
-
-
-#endif /* end #if !defined */
-
-static const CORBA::Long _oc_CORBA_StructMemberSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  38,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5374), 
-  ACE_NTOHL (0x72756374), 
-  ACE_NTOHL (0x4d656d62), 
-  ACE_NTOHL (0x65725365), 
-  ACE_NTOHL (0x713a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_StructMemberSeq:1.0
-  22,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5374), 
-  ACE_NTOHL (0x72756374), 
-  ACE_NTOHL (0x4d656d62), 
-  ACE_NTOHL (0x65725365), 
-  ACE_NTOHL (0x71000000),  // name = CORBA_StructMemberSeq
-  CORBA::tk_sequence, // typecode kind
-  208, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_struct, // typecode kind
-    192, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      35,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f5374), 
-      ACE_NTOHL (0x72756374), 
-      ACE_NTOHL (0x4d656d62), 
-      ACE_NTOHL (0x65723a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_StructMember:1.0
-      19,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f5374), 
-      ACE_NTOHL (0x72756374), 
-      ACE_NTOHL (0x4d656d62), 
-      ACE_NTOHL (0x65720000),  // name = CORBA_StructMember
-      3, // member count
-      5,
-      ACE_NTOHL (0x6e616d65), 
-      ACE_NTOHL (0x0),  // name = name
-      CORBA::tk_string, 
-      0U, // string length
-      5,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x0),  // name = type
-      CORBA::tk_TypeCode,
-
-      9,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x5f646566), 
-      ACE_NTOHL (0x0),  // name = type_def
-      CORBA::tk_objref, // typecode kind
-      60, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        30,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4944), 
-        ACE_NTOHL (0x4c547970), 
-        ACE_NTOHL (0x653a312e), 
-        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-        14,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4944), 
-        ACE_NTOHL (0x4c547970), 
-        ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_StructMemberSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_StructMemberSeq),
-    (char *) &_oc_CORBA_StructMemberSeq,
-    0,
-    sizeof (CORBA_StructMemberSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_StructMemberSeq =
-  &_tc_TAO_tc_CORBA_StructMemberSeq;
-
-static const CORBA::Long _oc_CORBA_Initializer[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  34,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x69746961), 
-  ACE_NTOHL (0x6c697a65), 
-  ACE_NTOHL (0x723a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_Initializer:1.0
-  18,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x69746961), 
-  ACE_NTOHL (0x6c697a65), 
-  ACE_NTOHL (0x72000000),  // name = CORBA_Initializer
-  2, // member count
-  8,
-  ACE_NTOHL (0x6d656d62), 
-  ACE_NTOHL (0x65727300),  // name = members
-  CORBA::tk_alias, // typecode kind for typedefs
-  292, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    38,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5374), 
-    ACE_NTOHL (0x72756374), 
-    ACE_NTOHL (0x4d656d62), 
-    ACE_NTOHL (0x65725365), 
-    ACE_NTOHL (0x713a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_StructMemberSeq:1.0
-    22,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5374), 
-    ACE_NTOHL (0x72756374), 
-    ACE_NTOHL (0x4d656d62), 
-    ACE_NTOHL (0x65725365), 
-    ACE_NTOHL (0x71000000),  // name = CORBA_StructMemberSeq
-    CORBA::tk_sequence, // typecode kind
-    208, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      CORBA::tk_struct, // typecode kind
-      192, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        35,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5374), 
-        ACE_NTOHL (0x72756374), 
-        ACE_NTOHL (0x4d656d62), 
-        ACE_NTOHL (0x65723a31), 
-        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_StructMember:1.0
-        19,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5374), 
-        ACE_NTOHL (0x72756374), 
-        ACE_NTOHL (0x4d656d62), 
-        ACE_NTOHL (0x65720000),  // name = CORBA_StructMember
-        3, // member count
-        5,
-        ACE_NTOHL (0x6e616d65), 
-        ACE_NTOHL (0x0),  // name = name
-        CORBA::tk_string, 
-        0U, // string length
-        5,
-        ACE_NTOHL (0x74797065), 
-        ACE_NTOHL (0x0),  // name = type
-        CORBA::tk_TypeCode,
-
-        9,
-        ACE_NTOHL (0x74797065), 
-        ACE_NTOHL (0x5f646566), 
-        ACE_NTOHL (0x0),  // name = type_def
-        CORBA::tk_objref, // typecode kind
-        60, // encapsulation length
-          TAO_ENCAP_BYTE_ORDER, // byte order
-          30,
-          ACE_NTOHL (0x49444c3a), 
-          ACE_NTOHL (0x6f6d672e), 
-          ACE_NTOHL (0x6f72672f), 
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4944), 
-          ACE_NTOHL (0x4c547970), 
-          ACE_NTOHL (0x653a312e), 
-          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-          14,
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4944), 
-          ACE_NTOHL (0x4c547970), 
-          ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-
-      0U,
-
-
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_Initializer (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_Initializer),
-    (char *) &_oc_CORBA_Initializer,
-    0,
-    sizeof (CORBA_Initializer)
-  );
+}
+
 
-CORBA::TypeCode_ptr _tc_CORBA_Initializer =
-  &_tc_TAO_tc_CORBA_Initializer;
+#endif /* end #if !defined */
 
 void CORBA_Initializer::_tao_any_destructor (void *x)
 {
@@ -6248,224 +5457,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_InitializerSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  37,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x69746961), 
-  ACE_NTOHL (0x6c697a65), 
-  ACE_NTOHL (0x72536571), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_InitializerSeq:1.0
-  21,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x69746961), 
-  ACE_NTOHL (0x6c697a65), 
-  ACE_NTOHL (0x72536571), 
-  ACE_NTOHL (0x0),  // name = CORBA_InitializerSeq
-  CORBA::tk_sequence, // typecode kind
-  420, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_struct, // typecode kind
-    404, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      34,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f496e), 
-      ACE_NTOHL (0x69746961), 
-      ACE_NTOHL (0x6c697a65), 
-      ACE_NTOHL (0x723a312e), 
-      ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_Initializer:1.0
-      18,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f496e), 
-      ACE_NTOHL (0x69746961), 
-      ACE_NTOHL (0x6c697a65), 
-      ACE_NTOHL (0x72000000),  // name = CORBA_Initializer
-      2, // member count
-      8,
-      ACE_NTOHL (0x6d656d62), 
-      ACE_NTOHL (0x65727300),  // name = members
-      CORBA::tk_alias, // typecode kind for typedefs
-      292, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        38,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5374), 
-        ACE_NTOHL (0x72756374), 
-        ACE_NTOHL (0x4d656d62), 
-        ACE_NTOHL (0x65725365), 
-        ACE_NTOHL (0x713a312e), 
-        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_StructMemberSeq:1.0
-        22,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5374), 
-        ACE_NTOHL (0x72756374), 
-        ACE_NTOHL (0x4d656d62), 
-        ACE_NTOHL (0x65725365), 
-        ACE_NTOHL (0x71000000),  // name = CORBA_StructMemberSeq
-        CORBA::tk_sequence, // typecode kind
-        208, // encapsulation length
-          TAO_ENCAP_BYTE_ORDER, // byte order
-          CORBA::tk_struct, // typecode kind
-          192, // encapsulation length
-            TAO_ENCAP_BYTE_ORDER, // byte order
-            35,
-            ACE_NTOHL (0x49444c3a), 
-            ACE_NTOHL (0x6f6d672e), 
-            ACE_NTOHL (0x6f72672f), 
-            ACE_NTOHL (0x434f5242), 
-            ACE_NTOHL (0x415f5374), 
-            ACE_NTOHL (0x72756374), 
-            ACE_NTOHL (0x4d656d62), 
-            ACE_NTOHL (0x65723a31), 
-            ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_StructMember:1.0
-            19,
-            ACE_NTOHL (0x434f5242), 
-            ACE_NTOHL (0x415f5374), 
-            ACE_NTOHL (0x72756374), 
-            ACE_NTOHL (0x4d656d62), 
-            ACE_NTOHL (0x65720000),  // name = CORBA_StructMember
-            3, // member count
-            5,
-            ACE_NTOHL (0x6e616d65), 
-            ACE_NTOHL (0x0),  // name = name
-            CORBA::tk_string, 
-            0U, // string length
-            5,
-            ACE_NTOHL (0x74797065), 
-            ACE_NTOHL (0x0),  // name = type
-            CORBA::tk_TypeCode,
-
-            9,
-            ACE_NTOHL (0x74797065), 
-            ACE_NTOHL (0x5f646566), 
-            ACE_NTOHL (0x0),  // name = type_def
-            CORBA::tk_objref, // typecode kind
-            60, // encapsulation length
-              TAO_ENCAP_BYTE_ORDER, // byte order
-              30,
-              ACE_NTOHL (0x49444c3a), 
-              ACE_NTOHL (0x6f6d672e), 
-              ACE_NTOHL (0x6f72672f), 
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f4944), 
-              ACE_NTOHL (0x4c547970), 
-              ACE_NTOHL (0x653a312e), 
-              ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-              14,
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f4944), 
-              ACE_NTOHL (0x4c547970), 
-              ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-
-          0U,
-
-
-      5,
-      ACE_NTOHL (0x6e616d65), 
-      ACE_NTOHL (0x0),  // name = name
-      CORBA::tk_string, 
-      0U, // string length
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_InitializerSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_InitializerSeq),
-    (char *) &_oc_CORBA_InitializerSeq,
-    0,
-    sizeof (CORBA_InitializerSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_InitializerSeq =
-  &_tc_TAO_tc_CORBA_InitializerSeq;
-
-static const CORBA::Long _oc_CORBA_UnionMember[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  34,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f556e), 
-  ACE_NTOHL (0x696f6e4d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x723a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_UnionMember:1.0
-  18,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f556e), 
-  ACE_NTOHL (0x696f6e4d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x72000000),  // name = CORBA_UnionMember
-  4, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  6,
-  ACE_NTOHL (0x6c616265), 
-  ACE_NTOHL (0x6c000000),  // name = label
-  CORBA::tk_any,
-
-  5,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x0),  // name = type
-  CORBA::tk_TypeCode,
-
-  9,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x5f646566), 
-  ACE_NTOHL (0x0),  // name = type_def
-  CORBA::tk_objref, // typecode kind
-  60, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    30,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4944), 
-    ACE_NTOHL (0x4c547970), 
-    ACE_NTOHL (0x653a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-    14,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4944), 
-    ACE_NTOHL (0x4c547970), 
-    ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_UnionMember (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_UnionMember),
-    (char *) &_oc_CORBA_UnionMember,
-    0,
-    sizeof (CORBA_UnionMember)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_UnionMember =
-  &_tc_TAO_tc_CORBA_UnionMember;
-
 void CORBA_UnionMember::_tao_any_destructor (void *x)
 {
   CORBA_UnionMember *tmp = ACE_static_cast (CORBA_UnionMember*,x);
@@ -6568,104 +5559,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_UnionMemberSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  37,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f556e), 
-  ACE_NTOHL (0x696f6e4d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x72536571), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_UnionMemberSeq:1.0
-  21,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f556e), 
-  ACE_NTOHL (0x696f6e4d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x72536571), 
-  ACE_NTOHL (0x0),  // name = CORBA_UnionMemberSeq
-  CORBA::tk_sequence, // typecode kind
-  224, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_struct, // typecode kind
-    208, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      34,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f556e), 
-      ACE_NTOHL (0x696f6e4d), 
-      ACE_NTOHL (0x656d6265), 
-      ACE_NTOHL (0x723a312e), 
-      ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_UnionMember:1.0
-      18,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f556e), 
-      ACE_NTOHL (0x696f6e4d), 
-      ACE_NTOHL (0x656d6265), 
-      ACE_NTOHL (0x72000000),  // name = CORBA_UnionMember
-      4, // member count
-      5,
-      ACE_NTOHL (0x6e616d65), 
-      ACE_NTOHL (0x0),  // name = name
-      CORBA::tk_string, 
-      0U, // string length
-      6,
-      ACE_NTOHL (0x6c616265), 
-      ACE_NTOHL (0x6c000000),  // name = label
-      CORBA::tk_any,
-
-      5,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x0),  // name = type
-      CORBA::tk_TypeCode,
-
-      9,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x5f646566), 
-      ACE_NTOHL (0x0),  // name = type_def
-      CORBA::tk_objref, // typecode kind
-      60, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        30,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4944), 
-        ACE_NTOHL (0x4c547970), 
-        ACE_NTOHL (0x653a312e), 
-        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-        14,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4944), 
-        ACE_NTOHL (0x4c547970), 
-        ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_UnionMemberSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_UnionMemberSeq),
-    (char *) &_oc_CORBA_UnionMemberSeq,
-    0,
-    sizeof (CORBA_UnionMemberSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_UnionMemberSeq =
-  &_tc_TAO_tc_CORBA_UnionMemberSeq;
-
-
 #if !defined (_CORBA_ENUMMEMBERSEQ_CS_)
 #define _CORBA_ENUMMEMBERSEQ_CS_
 
@@ -6713,45 +5606,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_EnumMemberSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  36,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f456e), 
-  ACE_NTOHL (0x756d4d65), 
-  ACE_NTOHL (0x6d626572), 
-  ACE_NTOHL (0x5365713a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_EnumMemberSeq:1.0
-  20,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f456e), 
-  ACE_NTOHL (0x756d4d65), 
-  ACE_NTOHL (0x6d626572), 
-  ACE_NTOHL (0x53657100),  // name = CORBA_EnumMemberSeq
-  CORBA::tk_sequence, // typecode kind
-  16, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_string, 
-    0U, // string length
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_EnumMemberSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_EnumMemberSeq),
-    (char *) &_oc_CORBA_EnumMemberSeq,
-    0,
-    sizeof (CORBA_EnumMemberSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_EnumMemberSeq =
-  &_tc_TAO_tc_CORBA_EnumMemberSeq;
-
 CORBA_Container_ptr
 tao_CORBA_Container_duplicate (
     CORBA_Container_ptr p
@@ -12409,7 +11263,7 @@
     return CORBA_Container::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_Container:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/Container:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_Container::_nil ());
       if (is_a == 0)
         return CORBA_Container::_nil ();
@@ -12477,8 +11331,8 @@
 CORBA::Boolean CORBA_Container::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -12515,7 +11369,7 @@
 
 const char* CORBA_Container::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_Container:1.0";
+  return "IDL:omg.org/CORBA/Container:1.0";
 }
 
 CORBA_Contained_ptr CORBA_Container::lookup (
@@ -12591,13 +11445,13 @@
   ACE_NTOHL (0x6f6d672e), 
   ACE_NTOHL (0x6f72672f), 
   ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
+  ACE_NTOHL (0x412f436f), 
   ACE_NTOHL (0x6e746169), 
   ACE_NTOHL (0x6e65722f), 
   ACE_NTOHL (0x44657363), 
   ACE_NTOHL (0x72697074), 
   ACE_NTOHL (0x696f6e3a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_Container/Description:1.0
+  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/Container/Description:1.0
   12,
   ACE_NTOHL (0x44657363), 
   ACE_NTOHL (0x72697074), 
@@ -12610,22 +11464,21 @@
   ACE_NTOHL (0x6a656374), 
   ACE_NTOHL (0x0),  // name = contained_object
   CORBA::tk_objref, // typecode kind
-  60, // encapsulation length
+  56, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     32,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f436f), 
+    ACE_NTOHL (0x412f436f), 
     ACE_NTOHL (0x6e746169), 
     ACE_NTOHL (0x6e65643a), 
-    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_Contained:1.0
-    16,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f436f), 
-    ACE_NTOHL (0x6e746169), 
-    ACE_NTOHL (0x6e656400),  // name = CORBA_Contained
+    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/Contained:1.0
+    10,
+    ACE_NTOHL (0x436f6e74), 
+    ACE_NTOHL (0x61696e65), 
+    ACE_NTOHL (0x64000000),  // name = Contained
 
   5,
   ACE_NTOHL (0x6b696e64), 
@@ -12892,37 +11745,37 @@
   ACE_NTOHL (0x6f6d672e), 
   ACE_NTOHL (0x6f72672f), 
   ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
+  ACE_NTOHL (0x412f436f), 
   ACE_NTOHL (0x6e746169), 
   ACE_NTOHL (0x6e65722f), 
   ACE_NTOHL (0x44657363), 
   ACE_NTOHL (0x72697074), 
   ACE_NTOHL (0x696f6e53), 
   ACE_NTOHL (0x65713a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_Container/DescriptionSeq:1.0
+  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/Container/DescriptionSeq:1.0
   15,
   ACE_NTOHL (0x44657363), 
   ACE_NTOHL (0x72697074), 
   ACE_NTOHL (0x696f6e53), 
   ACE_NTOHL (0x65710000),  // name = DescriptionSeq
   CORBA::tk_sequence, // typecode kind
-  740, // encapsulation length
+  736, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     CORBA::tk_struct, // typecode kind
-    724, // encapsulation length
+    720, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       44,
       ACE_NTOHL (0x49444c3a), 
       ACE_NTOHL (0x6f6d672e), 
       ACE_NTOHL (0x6f72672f), 
       ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f436f), 
+      ACE_NTOHL (0x412f436f), 
       ACE_NTOHL (0x6e746169), 
       ACE_NTOHL (0x6e65722f), 
       ACE_NTOHL (0x44657363), 
       ACE_NTOHL (0x72697074), 
       ACE_NTOHL (0x696f6e3a), 
-      ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_Container/Description:1.0
+      ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/Container/Description:1.0
       12,
       ACE_NTOHL (0x44657363), 
       ACE_NTOHL (0x72697074), 
@@ -12935,22 +11788,21 @@
       ACE_NTOHL (0x6a656374), 
       ACE_NTOHL (0x0),  // name = contained_object
       CORBA::tk_objref, // typecode kind
-      60, // encapsulation length
+      56, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         32,
         ACE_NTOHL (0x49444c3a), 
         ACE_NTOHL (0x6f6d672e), 
         ACE_NTOHL (0x6f72672f), 
         ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f436f), 
+        ACE_NTOHL (0x412f436f), 
         ACE_NTOHL (0x6e746169), 
         ACE_NTOHL (0x6e65643a), 
-        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_Contained:1.0
-        16,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f436f), 
-        ACE_NTOHL (0x6e746169), 
-        ACE_NTOHL (0x6e656400),  // name = CORBA_Contained
+        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/Contained:1.0
+        10,
+        ACE_NTOHL (0x436f6e74), 
+        ACE_NTOHL (0x61696e65), 
+        ACE_NTOHL (0x64000000),  // name = Contained
 
       5,
       ACE_NTOHL (0x6b696e64), 
@@ -13470,36 +12322,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_Container[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  32,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e746169), 
-  ACE_NTOHL (0x6e65723a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_Container:1.0
-  16,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e746169), 
-  ACE_NTOHL (0x6e657200),  // name = CORBA_Container
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_Container (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_Container),
-    (char *) &_oc_CORBA_Container,
-    0,
-    sizeof (CORBA_Container)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_Container =
-  &_tc_TAO_tc_CORBA_Container;
-
 CORBA_IDLType_ptr
 tao_CORBA_IDLType_duplicate (
     CORBA_IDLType_ptr p
@@ -14085,7 +12907,7 @@
     return CORBA_IDLType::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_IDLType:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/IDLType:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_IDLType::_nil ());
       if (is_a == 0)
         return CORBA_IDLType::_nil ();
@@ -14153,8 +12975,8 @@
 CORBA::Boolean CORBA_IDLType::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -14191,7 +13013,7 @@
 
 const char* CORBA_IDLType::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_IDLType:1.0";
+  return "IDL:omg.org/CORBA/IDLType:1.0";
 }
 
 CORBA::TypeCode_ptr CORBA_IDLType::type (
@@ -14211,36 +13033,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_IDLType[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  30,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4944), 
-  ACE_NTOHL (0x4c547970), 
-  ACE_NTOHL (0x653a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-  14,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4944), 
-  ACE_NTOHL (0x4c547970), 
-  ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_IDLType (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_IDLType),
-    (char *) &_oc_CORBA_IDLType,
-    0,
-    sizeof (CORBA_IDLType)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_IDLType =
-  &_tc_TAO_tc_CORBA_IDLType;
-
 CORBA_TypedefDef_ptr
 tao_CORBA_TypedefDef_duplicate (
     CORBA_TypedefDef_ptr p
@@ -14575,7 +13367,7 @@
     return CORBA_TypedefDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_TypedefDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/TypedefDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_TypedefDef::_nil ());
       if (is_a == 0)
         return CORBA_TypedefDef::_nil ();
@@ -14643,10 +13435,10 @@
 CORBA::Boolean CORBA_TypedefDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_TypedefDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/TypedefDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -14707,101 +13499,9 @@
 
 const char* CORBA_TypedefDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_TypedefDef:1.0";
+  return "IDL:omg.org/CORBA/TypedefDef:1.0";
 }
 
-static const CORBA::Long _oc_CORBA_TypedefDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  33,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5479), 
-  ACE_NTOHL (0x70656465), 
-  ACE_NTOHL (0x66446566), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_TypedefDef:1.0
-  17,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5479), 
-  ACE_NTOHL (0x70656465), 
-  ACE_NTOHL (0x66446566), 
-  ACE_NTOHL (0x0),  // name = CORBA_TypedefDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_TypedefDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_TypedefDef),
-    (char *) &_oc_CORBA_TypedefDef,
-    0,
-    sizeof (CORBA_TypedefDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_TypedefDef =
-  &_tc_TAO_tc_CORBA_TypedefDef;
-
-static const CORBA::Long _oc_CORBA_TypeDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  38,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5479), 
-  ACE_NTOHL (0x70654465), 
-  ACE_NTOHL (0x73637269), 
-  ACE_NTOHL (0x7074696f), 
-  ACE_NTOHL (0x6e3a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_TypeDescription:1.0
-  22,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5479), 
-  ACE_NTOHL (0x70654465), 
-  ACE_NTOHL (0x73637269), 
-  ACE_NTOHL (0x7074696f), 
-  ACE_NTOHL (0x6e000000),  // name = CORBA_TypeDescription
-  5, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-  5,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x0),  // name = type
-  CORBA::tk_TypeCode,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_TypeDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_TypeDescription),
-    (char *) &_oc_CORBA_TypeDescription,
-    0,
-    sizeof (CORBA_TypeDescription)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_TypeDescription =
-  &_tc_TAO_tc_CORBA_TypeDescription;
-
 void CORBA_TypeDescription::_tao_any_destructor (void *x)
 {
   CORBA_TypeDescription *tmp = ACE_static_cast (CORBA_TypeDescription*,x);
@@ -14854,7 +13554,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_IRObject, 
+        CORBA::_tc_IRObject, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -14871,7 +13571,7 @@
     _tao_elem = CORBA_IRObject::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_IRObject, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_IRObject, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -14884,7 +13584,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_IRObject,
+          CORBA::_tc_IRObject,
           1,
           _tao_elem,
           CORBA_IRObject::_tao_any_destructor
@@ -14915,7 +13615,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_Contained, 
+        CORBA::_tc_Contained, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -14932,7 +13632,7 @@
     _tao_elem = CORBA_Contained::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_Contained, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_Contained, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -14945,7 +13645,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_Contained,
+          CORBA::_tc_Contained,
           1,
           _tao_elem,
           CORBA_Contained::_tao_any_destructor
@@ -15062,7 +13762,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ContainedSeq,
+        CORBA::_tc_ContainedSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -15074,7 +13774,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ContainedSeq,
+      CORBA::_tc_ContainedSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15098,7 +13798,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ContainedSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ContainedSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15123,7 +13823,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ContainedSeq,
+            CORBA::_tc_ContainedSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ContainedSeq::_tao_any_destructor
@@ -15153,7 +13853,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_InterfaceDefSeq,
+        CORBA::_tc_InterfaceDefSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -15165,7 +13865,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_InterfaceDefSeq,
+      CORBA::_tc_InterfaceDefSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15189,7 +13889,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_InterfaceDefSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_InterfaceDefSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15214,7 +13914,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_InterfaceDefSeq,
+            CORBA::_tc_InterfaceDefSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_InterfaceDefSeq::_tao_any_destructor
@@ -15244,7 +13944,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ValueDefSeq,
+        CORBA::_tc_ValueDefSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -15256,7 +13956,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ValueDefSeq,
+      CORBA::_tc_ValueDefSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15280,7 +13980,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ValueDefSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ValueDefSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15305,7 +14005,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ValueDefSeq,
+            CORBA::_tc_ValueDefSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ValueDefSeq::_tao_any_destructor
@@ -15335,7 +14035,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_AbstractInterfaceDefSeq,
+        CORBA::_tc_AbstractInterfaceDefSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -15347,7 +14047,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_AbstractInterfaceDefSeq,
+      CORBA::_tc_AbstractInterfaceDefSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15371,7 +14071,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_AbstractInterfaceDefSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_AbstractInterfaceDefSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15396,7 +14096,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_AbstractInterfaceDefSeq,
+            CORBA::_tc_AbstractInterfaceDefSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_AbstractInterfaceDefSeq::_tao_any_destructor
@@ -15426,7 +14126,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_LocalInterfaceDefSeq,
+        CORBA::_tc_LocalInterfaceDefSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -15438,7 +14138,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_LocalInterfaceDefSeq,
+      CORBA::_tc_LocalInterfaceDefSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15462,7 +14162,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_LocalInterfaceDefSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_LocalInterfaceDefSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15487,7 +14187,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_LocalInterfaceDefSeq,
+            CORBA::_tc_LocalInterfaceDefSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_LocalInterfaceDefSeq::_tao_any_destructor
@@ -15513,7 +14213,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_StructMember,
+      CORBA::_tc_StructMember,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -15524,7 +14224,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_StructMember,
+      CORBA::_tc_StructMember,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15545,7 +14245,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_StructMember, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_StructMember, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15570,7 +14270,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_StructMember,
+            CORBA::_tc_StructMember,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_StructMember::_tao_any_destructor
@@ -15600,7 +14300,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_StructMemberSeq,
+        CORBA::_tc_StructMemberSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -15612,7 +14312,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_StructMemberSeq,
+      CORBA::_tc_StructMemberSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15636,7 +14336,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_StructMemberSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_StructMemberSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15661,7 +14361,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_StructMemberSeq,
+            CORBA::_tc_StructMemberSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_StructMemberSeq::_tao_any_destructor
@@ -15687,7 +14387,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_Initializer,
+      CORBA::_tc_Initializer,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -15698,7 +14398,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_Initializer,
+      CORBA::_tc_Initializer,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15719,7 +14419,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_Initializer, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_Initializer, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15744,7 +14444,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_Initializer,
+            CORBA::_tc_Initializer,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_Initializer::_tao_any_destructor
@@ -15774,7 +14474,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_InitializerSeq,
+        CORBA::_tc_InitializerSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -15786,7 +14486,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_InitializerSeq,
+      CORBA::_tc_InitializerSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15810,7 +14510,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_InitializerSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_InitializerSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15835,7 +14535,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_InitializerSeq,
+            CORBA::_tc_InitializerSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_InitializerSeq::_tao_any_destructor
@@ -15861,7 +14561,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_UnionMember,
+      CORBA::_tc_UnionMember,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -15872,7 +14572,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_UnionMember,
+      CORBA::_tc_UnionMember,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15893,7 +14593,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_UnionMember, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_UnionMember, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -15918,7 +14618,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_UnionMember,
+            CORBA::_tc_UnionMember,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_UnionMember::_tao_any_destructor
@@ -15948,7 +14648,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_UnionMemberSeq,
+        CORBA::_tc_UnionMemberSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -15960,7 +14660,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_UnionMemberSeq,
+      CORBA::_tc_UnionMemberSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -15984,7 +14684,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_UnionMemberSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_UnionMemberSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -16009,7 +14709,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_UnionMemberSeq,
+            CORBA::_tc_UnionMemberSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_UnionMemberSeq::_tao_any_destructor
@@ -16039,7 +14739,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_EnumMemberSeq,
+        CORBA::_tc_EnumMemberSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -16051,7 +14751,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_EnumMemberSeq,
+      CORBA::_tc_EnumMemberSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -16075,7 +14775,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_EnumMemberSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_EnumMemberSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -16100,7 +14800,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_EnumMemberSeq,
+            CORBA::_tc_EnumMemberSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_EnumMemberSeq::_tao_any_destructor
@@ -16127,7 +14827,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_Container, 
+        CORBA::_tc_Container, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -16144,7 +14844,7 @@
     _tao_elem = CORBA_Container::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_Container, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_Container, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -16157,7 +14857,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_Container,
+          CORBA::_tc_Container,
           1,
           _tao_elem,
           CORBA_Container::_tao_any_destructor
@@ -16362,7 +15062,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_IDLType, 
+        CORBA::_tc_IDLType, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -16379,7 +15079,7 @@
     _tao_elem = CORBA_IDLType::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_IDLType, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_IDLType, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -16392,7 +15092,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_IDLType,
+          CORBA::_tc_IDLType,
           1,
           _tao_elem,
           CORBA_IDLType::_tao_any_destructor
@@ -16423,7 +15123,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_TypedefDef, 
+        CORBA::_tc_TypedefDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -16440,7 +15140,7 @@
     _tao_elem = CORBA_TypedefDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_TypedefDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_TypedefDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -16453,7 +15153,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_TypedefDef,
+          CORBA::_tc_TypedefDef,
           1,
           _tao_elem,
           CORBA_TypedefDef::_tao_any_destructor
@@ -16483,7 +15183,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_TypeDescription,
+      CORBA::_tc_TypeDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -16494,7 +15194,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_TypeDescription,
+      CORBA::_tc_TypeDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -16515,7 +15215,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_TypeDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_TypeDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -16540,7 +15240,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_TypeDescription,
+            CORBA::_tc_TypeDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_TypeDescription::_tao_any_destructor
@@ -16664,11 +15364,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -16711,11 +15406,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -16758,11 +15448,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -16805,11 +15490,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -16852,11 +15532,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -16899,11 +15574,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -16946,11 +15616,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -16993,11 +15658,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -17040,11 +15700,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -17087,11 +15742,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
