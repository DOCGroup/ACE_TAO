Mon May 30 22:19:54 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/Transport.h (post_connect_hook):
	* tao/Transport.cpp:

	  Added post_connect_hook () method which is invoked just after
	  connection establishment (or after a connection is fetched from
	  cache). The return value signifies whether the invoker should
	  proceed with post connection establishment
	  activities or not. There are a wide range of use cases, for
	  example protocols like SSLIOP  need this to verify whether
	  connections already established have valid
	  certificates. Validation of certificates/credentials can be done
	  inside this  method. Implementations of this method can even
	  tear down the connection, and return a false to the
	  invoker. There  are no pre_connect_hooks () since the  transport
	  doesn't exist before a connection establishment. :-). A default
	  noop implementation has been provided. 

	* tao/Transport_Connector.cpp:

	  Invoke post_connect_hook () after grabbing a connection from
	  cache. 

Mon May 30 22:11:35 2005  Chris Cleeland  <cleeland@ociweb.com>

        * tests/IOR_Endpoint_Hostnames/bogus_i.cpp:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:

	  Fix ACE_RCSID macro usage that prevented compilation.

Mon May 30 18:27:22 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/ast_module.h:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/util/utl_scope.cpp:

          Fixed discrepancies in the signature of look_in_previous()
          between the no-op UTL_Scope version and the AST_Module
          version. These discrepancies were causing warnings with
          the Borland compiler.

Mon May 30 10:23:27 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (get_log_qos, set_log_qos):

          Fixed compilation on systems where new() does not throw an
          exception on failure (i.e. ACE_NEW_THROWS_EXCEPTIONS is not
          set).

Mon May 30 13:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_2088/*:
          Added a regression for bugzilla bug 2088. When an ORBInitializer
          throws an exception, this should be ignored and the next
          ORBInitializer should be called. Previously an exception was
          propagated back to the caller of ORB::init(). See also 21.7.3.1
          of the corba spec.

        * tao/ORBInitializer_Registry.cpp:
          Fixed bug 2088, catch exceptions locally.

Mon May 30 12:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Cleanup_Func_Registry.h:
          Removed not needed friend classes

Sat May 28 08:59:32 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:

          Now there is an mpb file in ACE_MPC for the boost related
          settings. Changed the mpc base project accordingly.

Fri May 27 20:14:56 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (check_grammar):

          Changed to accept TCL, ETCL, and EXTENDED_TCL like the
          Notification Service.

Fri May 27 15:19:57 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Changed class to store a single QoS property instead of list, as
          the currently specified properties are mutually exclusive.  This
          greatly simplifies the get_log_qos and set_log_qos methods.

          Changed set_log_qos to return all of the unknown/unsupported QoS
          properties when throwing the UnsupportedQoS exception.

Fri May 27 17:01:24 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.cpp:

          Corrected a problem whereby, when listen points received in a
          bidirectional context get processed, the key for the entry made
          in the transport cache was created using the receiver's notion
          of whether dotted decimal addresses (-ORBDottedDecimalAddresses)
          should be used, rather than how the listen points were sent by
          the sender.  In doing so, when, for example, a CORBA server was
          using -ORBDottedDecimalAddresses and the client was not, the
          client's listen point got cached using its IP address rather
          than its hostname.  However, all the IORs distributed by the
          client would use the hostname, and, thus, the server would not
          be able to find a match for the client's endpoint in its cache,
          and subsequently try to create a new one.

          The change now creates an entry in the cache using, for the
          hostname portion of the key, the host name however the client
          sent the hostname.  This should insure that a receiver of a
          bidirectional context will have the ability to find a match in
          the transport cache.

          This change supercedes the following changelog entry:

          Thu Sep 13 11:05:13 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

          * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
          * tao/IIOP_Connection_Handler.cpp (process_listen_point_list):

            When creating an IIOP Endpoint, passed in the value of the
            ORBDottedDecimal address value from the ORB_Core. This is a real
            stupid mistake :(. Added a debug statement. Thanks to Werner
            Buchert <w.buchert@medat.de> for reporting this problem.

        * tao/IIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Transport.cpp:

          Modified the IIOP Acceptor so that the behavior for the host
          identifier (hostname or IP address) that appears in IIOP
          profiles is consistent with the following:

          1. value from "hostname_in_ior", if specified;
          2. setting of -ORBDottedDecimalAddresses option
          3. value for <hostname> used in -ORBEndpoint iiop://<hostname>
          4. whatever TAO magically comes up with

          The significant change here is that previous to this change,
          numbers 1 and 2 were reversed, i.e., -ORBDottedDecimalAddresses
          took precedence over hostname_in_ior.

        * tests/IOR_Endpoint_Hostnames/IOR_Endpoint_Hostnames.mpc:
        * tests/IOR_Endpoint_Hostnames/bogus.idl:
        * tests/IOR_Endpoint_Hostnames/bogus_i.cpp:
        * tests/IOR_Endpoint_Hostnames/bogus_i.h:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:
        * tests/IOR_Endpoint_Hostnames/list_interfaces.cpp:
        * tests/IOR_Endpoint_Hostnames/run_test.pl:

          Added a new functionality/regression test for the change listed
          above.  The run_test.pl prints out a matrix for permutations and
          expected results, and indicates whether each permutation
          succeeds or fails.  It also depends upon a new option to catior,
          found in the next entry.

        * orbsvcs/tests/Security/BiDirectional/server.conf:

          Removed some hardcoded paths to OCI personal home directories.

        * utils/catior/catior.cpp:

          Added a "-x" option that works like "-f" except that it reads
          the IOR from standard input (stdin or cin) rather than from a
          file.  This makes catior much more like the unix "cat" command,
          and enables it to be used in a pipeline.

Fri May 27 15:54:44 2005  Justin Michel  <michel_j@ociweb.com>

        * docs/Options.html:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/params.cpp:

          Reimplemented the -ORBPreferredInterfaces option to support
	  wildcards.

Fri May 27 15:30:21 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_NT_Service.h:
        * orbsvcs/ImplRepo_Service/Locator_NT_Service.h:
        * tao/TypeCode_Base_Attributes.h:
        * tao/TypeCode_Case.h:
        * tao/TypeCode_Case_T.h:
        * tao/TypeCode_Struct_Field.h:
        * tao/TypeCode_Value_Field.h:
        * utils/wxNamingViewer/pch.h:

          These files #included config.h which isn't safe, because it
	  won't necessarilly pick up the correct symbols. For example, I
	  caught this by trying to build ACE on Windows with
	  __ACE_INLINE__ = 0. The files that #included config.h directly
	  saw that it was defined as 0, but changing them to #include
	  config-all.h instead, correctly saw that the symbol was
	  undefined. 

Fri May 27 13:12:10 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Any/Recursive/Test.idl:

          Added new user exception to be used when reporting Any
          demarshaling errors.

        * tests/Any/Recursive/client.cpp:

          Fixed unused argument warnings.

          Use the new user exception when report Any demarshaling
          failures, instead of CORBA::INV_OBJREF.

Fri May 27 08:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Default_Servant/Default_Servant.cpp:
          Slightly modified this test to test reference_to_servant with
          reference counting

        * tests/POA/Deactivate_Object/server.cpp:
          Added a call to reference_to_servant. This as a regression for
          a bug where we didn't increment the reference count on the
          servant before returning it.

        * tao/PortableServer/Root_POA.cpp (reference_to_servant_i):
          Increment the reference count on the servant before returning it.
          Thanks to Konstantinos Lykiardopoulos <klyk at intracom dot gr>
          and  Lothar Werzinger <lothar at xcerla dot com> for reporting
          this problem.

        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp:
          In system_id_to_servant() don't increment the refcount on the
          servant, this is done by the POA.

Fri May 27 08:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.cpp:
          Fixed typo in comment

Fri May 27 08:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
          Fixed conversion warnings

Fri May 27 00:36:32 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Any/Recursive/Hello.cpp:
        * tests/Any/Recursive/Hello.h:
        * tests/Any/Recursive/README:
        * tests/Any/Recursive/RecursiveHello.mpc:
        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/run_test.pl:
        * tests/Any/Recursive/server.cpp:

          New test that verifies properly functioning recursive type Any
          insertion and extraction support.  It also indirectly verifies
          that recursive TypeCode support is working.

Thu May 26 16:09:50 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Functions with two or more try blocks must use ACE_TRY_EX.

        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:

          Use getline() instead of operator>> to read in lines of
          text from a file into a std::string. Use string::c_str() with
	  operator<< instead of relying on existence of ostream extraction
	  operators for strings. A more useful solution might be to
	  provide insertion/extraction operators for platforms that are
	  missing them. 

Thu May 26 16:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
          Updated for interceptor_list changes

Thu May 26 14:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Interceptor_List.cpp:
          Fixed gnu warning

Thu May 26 10:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        Made the Interceptor_List a template which is now used instead of a
        base class with derived specific list classes. This is now in the TAO
        namespace instead of using a TAO_ prefix.

        * tao/Interceptor_List.{h,cpp}:
          The Interceptor_List is now a template

        * tao/ClientRequestInterceptor_List.{h,cpp,inl}:
        * tao/ServerRequestInterceptor_List.{h,cpp,inl}:
        * tao/IORInterceptor/IORInterceptor_List.{h,cpp,inl}:
          Removed these files, we have now template instantiations instead
          of specific classes

        * tao/ORB_Core.{h,cpp,i}:
          Update for changes above.

        * tao/IORInterceptor_Adapter.h:
          Updated for interceptor list change

        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
          Updated for interceptor_list change and also implemented
          adapter_state_changed in this class because we don't have
          a specific IORInterceptor list anymore where this was
          implemented.

        * tao/ClientRequestInterceptor_Adapter.{h,cpp,inl}:
          Updated because of ClientInterceptorList change

        * PortableServer/ServerInterceptorAdapter.h:
          Updated because of ServerRequestInterceptor List change

        * tao/tao.mpc:
        * tao/Makefile.am:
          Updated for changes above

Thu May 26 10:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        According to the latest C++ mapping, reference counting is mandatory;
        the RefCountServantBase class is now a legacy artifact. Thanks to
        Frank Pilhofer <fpilhofe at mc dot com> for reporting this.
        This fixes bugzilla [1952].

        * tao/Abstract_Servant_Base.{h,cpp}:
          Made the add_ref/remove_ref methods pure virtual and added
          _refcount_value

        * tao/PortableServer/Servant_Base.{h,cpp}:
          Added reference counting to TAO_ServantBase and removed
          TAO_RefCountServantBase

        * tao/PortableServer/PS_ForwardC.h:
          Make RefCountServantBase a noop struct

        * tao/PortableServer/diffs/PS_Forward.diff:
          Updated

Thu May 26 09:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.h:
          Removed commented out code

        * tao/QtResource_Factory.h:
          Doxygen improvement

Thu May 26 08:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Collocated/Dynamic/interceptors.cpp:
          Retrieve the object_id in the receive_request. According to
          Konstantinos Lykiardopoulos <klyk at intracom dot gr> this failed
          with the 1.4.5 release of TAO but it works now again. Added this
          as regression so that we don't have a problem in the future again

Thu May 26 07:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ImR_Client/ImplRepo.pidl:
        * tao/ImR_Client/ServerObject.pidl:
          Updated regeneration instructions

Thu May 26 07:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategyPersistent.cpp:
          Also add a process directive that uses the xml svc.conf way of
	  specifying this. This fixes bugzilla 2127. Thanks to Lothar
	  Werzinger <lothar at xcerla dot com> for reporting this.

Wed May 25 23:42:43 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:

          Changed to pass the ORB pointer to the factories' activate()
          method.

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:
          Changed to pass the ORB pointer to the factory's init() method.

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.h
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.h

          Changed to stash away ORB pointer in the activate() method, and
          to pass it to the Log servant constructors.

        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h

          Changed to stash away ORB pointer in the init() method, and to
          pass it to the RTEventLog servant constructor.

        * orbsvcs/orbsvcs/Log/Log_i.cpp
        * orbsvcs/orbsvcs/Log/Log_i.h
        * orbsvcs/orbsvcs/Log/BasicLog_i.cpp
        * orbsvcs/orbsvcs/Log/BasicLog_i.h
        * orbsvcs/orbsvcs/Log/EventLog_i.cpp
        * orbsvcs/orbsvcs/Log/EventLog_i.h
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h

          Changed constructor to take an ORB pointer instead of a Reactor
          pointer.  The latter had defaulted to use the Reactor Singleton
          instance, but using the servant ORB's reactor ensures the event
          loop will be active.  Curiously, the old reactor pointer wasn't
          being used.  That will change soon, as we'll be adding timer
          handlers for database flush and compaction.

Wed May 25 20:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/CosEC_RtEC_Based_tests_Basic.mpc:
          Use rtevent_serv as base project

Wed May 25 20:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
          Changed order of the projects.

Wed May 25 12:24:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/DynamicInterface/Unknown_User_Exception.h (_type):
        * tao/DynamicInterface/Unknown_User_Exception.h (_type):

          Renamed this method to "_tao_type" since it is meant to be an
          override for the CORBA::Exception::_tao_type() base class
          method.  Addresses CORBA::UnknownUserException Any insertion
          problems.

Tue May 24 21:13:46 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.cpp (invoke_collocated_i):

          Updated ACE_ASSERT condition to reflect new thru POA case.
          Thanks to Lothar Werzinger for reporting the assertion.

Tue May 24 19:57:43 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Event_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/EC_MT_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Multiple/Makefile.am:
        * orbsvcs/tests/EC_Throughput/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Common/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/lib/Makefile.am:
        * orbsvcs/tests/FtRtEvent/Makefile.am:

          Regenerate for removal of RTOLDEvent and split of RTEvent
          libraries.

        * orbsvcs/Time_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate for change below.

        * orbsvcs/orbsvcs/CosTime.mpc:

          Inherit from svc_utils.

        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:

          Use new ORBSVCS_Time::Time_Value_to_TimeT() method from the
          Svc_Utils library to convert timestamp to a TimeBase::TimeT.

        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.h:

          The specification requires that a structured or typed event
          should be stored as an Any as specified by the Notification
          Service, so connect to the channel as an Any consumer.

Tue May 24 14:29:14 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Tue May 24 14:15:36 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:

          Removed RTEvent MPC group.  This causes problems when project
          Makefile.am's are aggregated.

Tue May 24 11:59:37 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Time_Utilities.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.i:

          Updated comments to Doxygen format.

          Added new methods for converting absolute timestamps between
          ACE_Time_Value and TimeBase::TimeT.

Tue May 24 10:32:31 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Tue May 24 10:58:53 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:

          Add missing include.

Tue May 24 09:47:52 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:

          Disable fuzz check, because it can't detect the try/catch
        in the calling function.

Tue May 24 09:14:57 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/TestServer.h:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:

          This example was simply copied from 1.4a, and I forgot to make
        the adjustments required by the POA refactoring.

        * tao/ImR_Client/ImplRepoC.h:

          The ImplRepo.pidl had #include ServerObject.pidl, but didn't include
        ServerObjectC.h. For now, I manually added the include, but this isn't
        a final solution.

Mon May 23 14:50:27 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/Advanced.mpc:

          Changed from requires += exceptions to inheriting from exceptions. Hopefully
        this will eliminate fuzz errors.

Mon May 23 18:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/RT_Event_Service/Quoter_RT_Event_Service.mpc:
          Updated for RTEvent library split

Mon May 23 18:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:
          Updated for RTEvent library split

Mon May 23 13:24:41 2005  Justin Michel  <michel_j@ociweb.com>

        * tao/ImR_Client/ImplRepo.pidl:
        * tao/ImR_Client/ImplRepoA.cpp:
        * tao/ImR_Client/ImplRepoC.h:
        * tao/ImR_Client/ImplRepoC.inl:
        * tao/ImR_Client/ImplRepoC.cpp:
        * tao/ImR_Client/ImplRepoS.h:
        * tao/ImR_Client/ImplRepoS.cpp:

          Re-added the -GA option and updated the command in the pidl to save
        footprint for static builds.

Mon May 23 18:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.{h,cpp}:
          Fixed service config macros

Mon May 23 12:38:31 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.idl:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Options.h:
        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Repository.h:
        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:
        * orbsvcs/ImplRepo_Service/README.txt:
        * orbsvcs/ImplRepo_Service/tao_imr_i.h:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/ImR_Client/ImplRepo.pidl:
        * tao/ImR_Client/ImplRepoC.h:
        * tao/ImR_Client/ImplRepoC.inl:
        * tao/ImR_Client/ImplRepoC.cpp:
        * tao/ImR_Client/ImplRepoS.h:
        * tao/ImR_Client/ImplRepoS.cpp:

          Several bug fixes and enhancments to the ImR.
          Cleaned up the perl to use strict and compile without warnings.
          Displayed a message that the poa was being registered with the
        ImR even when -orbuseimr 0 was specified.
          Stop printing the exception details for unexpected exceptions
        that happen during a call to server->shutdown(). At least on
        windows, we often get COMM_FAILURE or TRANSIENT, because the
        socket is not shutdown gracefully by the server.
          Don't print the exception when a TRANSIENT is received while
        pinging the server. This is not an error. Not sure why we were
        getting 'No usable profile in IOR' messages though, when we
        expect a 'POA in holding state'.
          Merge in changes to support ImplRepo_Service -e, which
        will clear the repository on startup. This makes it easier to write
        persistence tests, and might be useful in general.
          Updated to automatically set the ImplRepoServiceIOR and
        TAO_USE_IMR environment variables, obviating the need to pass
        -orbuseimr or -orbinitref ImplRepoService=... when using an
        Activator to start a server.
          Add -orbuseimr 0 to the cmd line args, so that the TAO_USE_IMR=1
        environment variable can be used safely.
          Fix incorrect exception specifications in activator.
          Fix command line help descriptions.
          Combine add/update operations in the imr and imr util.
          Support clean shutdown using ctrl-c as well as the
        imr util shutdown-repo command.
          Add detection of server process death, and an option to
        notify the ImR when this happens, to the activator.
          Fix some problems with exception macros and unused vars.
          Fix bug with case-insensitive activator name and binary persistence.


        * orbsvcs/examples/ImR/Advanced/Advanced.mpc:
        * orbsvcs/examples/ImR/Advanced/Manager.idl:
        * orbsvcs/examples/ImR/Advanced/Manager_i.h:
        * orbsvcs/examples/ImR/Advanced/Manager_i.cpp:
        * orbsvcs/examples/ImR/Advanced/Messenger.idl:
        * orbsvcs/examples/ImR/Advanced/Messenger_i.h:
        * orbsvcs/examples/ImR/Advanced/Messenger_i.cpp:
        * orbsvcs/examples/ImR/Advanced/README:
        * orbsvcs/examples/ImR/Advanced/TestClient.h:
        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
        * orbsvcs/examples/ImR/Advanced/TestServer.h:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:
        * orbsvcs/examples/ImR/Advanced/client_main.cpp:
        * orbsvcs/examples/ImR/Advanced/drivers/all:
        * orbsvcs/examples/ImR/Advanced/drivers/defaults:
        * orbsvcs/examples/ImR/Advanced/drivers/environment:
        * orbsvcs/examples/ImR/Advanced/drivers/invocation:
        * orbsvcs/examples/ImR/Advanced/drivers/persistence:
        * orbsvcs/examples/ImR/Advanced/drivers/retry:
        * orbsvcs/examples/ImR/Advanced/drivers/use_environment:
        * orbsvcs/examples/ImR/Advanced/drivers/use_invocation:
        * orbsvcs/examples/ImR/Advanced/drivers/use_persistence:
        * orbsvcs/examples/ImR/Advanced/manager_main.cpp:
        * orbsvcs/examples/ImR/Advanced/run_test.pl:
        * orbsvcs/examples/ImR/Advanced/server_main.cpp:

          Dave Giovannini's new test which provides greater
        coverage of ImR features. Some tests are still failing, so
        this is not ready to be enabled for nightly builds.

        * orbsvcs/orbsvcs/IOR_Multicast.cpp:

          Fixed bug in unregistration, and updated log messages
        to show the name of the class and method being logged.

        * orbsvcs/orbsvcs/Notify/XML_Saver.h:
        * orbsvcs/orbsvcs/Notify/XML_Saver.cpp:

          Updated to use the new ACEXML_escape_string() function.

        * orbsvcs/orbsvcs/Shutdown_Utilities.h:
        * orbsvcs/orbsvcs/Shutdown_Utilities.cpp:

          Updated to work on Windows.

        * orbsvcs/tests/ImplRepo/airplane_server_i.h:
        * orbsvcs/tests/ImplRepo/airplane_server_i.cpp:
        * orbsvcs/tests/ImplRepo/locked/run_test.pl:
        * orbsvcs/tests/ImplRepo/nestea_server_i.h:
        * orbsvcs/tests/ImplRepo/nestea_server_i.cpp:
        * orbsvcs/tests/ImplRepo/run_test.pl:
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp:

          Basic code cleanup to match latest 1.4a.
          Some tests were not shutting down correctly, and were
        activating the poa manager too soon.
          Nestea test prints the contents of ImplRepoServiceIOR and TAO_USE_IMR.
          Stop passing -orbuseimr 1 and imr_init_ref in the command lines
        registered with the ImR.


        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:

          Use -ORBObjRefStyle URL so that the XML file has consistent
        contents, and can be compared for equality. This should let this
        test pass on more (all?) platforms.

        * tao/ORB_Core.cpp:

          Add missing support for -ORBObjRefStyle IOR.

        * tao/ImR_Client/ImplRepoA.cpp:

          Removed this file, because the idl command line wasn't set to generate it.


Mon May 23 06:12:01 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::remove_old_records):

          Fixed typo introduced in last change.

Mon May 23 12:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2119_Regression/test.mpc:
          Simplified this mpc file

Mon May 23 11:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Protocol.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/EC_And_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.h:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_Disjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h:
        * orbsvcs/orbsvcs/Event/EC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Group_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h:
        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Masked_Type_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Null_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.h:
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Timeout_Generator.h:
        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.h:
        * orbsvcs/orbsvcs/Event/EC_Trivial_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Type_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.h:
        * orbsvcs/orbsvcs/Event/event_export.h:
          Include the RTEvent_Serv file and updated export macro

        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/RTEvent_Serv.rc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.rc:
        * orbsvcs/orbsvcs/Event/event_serv_export.h:
        * orbsvcs/orbsvcs/Event/event_skel_export.h:
          New files for the new RTEvent Serv and Skel libraries

        * orbsvcs/Event_Service/Event_Service.mpc:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/CosEC_RtEC_Based_bin.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEC_RtEC_Based_lib.mpc:
        * orbsvcs/examples/Log/RTEvent/Log_RTEvent.mpc:
        * orbsvcs/examples/RtEC/IIOPGateway/RtEC_IIOPGateway.mpc:
        * orbsvcs/examples/RtEC/Kokyu/RtECKokyu.mpc:
        * orbsvcs/examples/RtEC/MCast/RtEC_MCast.mpc:
        * orbsvcs/examples/RtEC/Schedule/RtEC_Schedule.mpc:
        * orbsvcs/examples/RtEC/Simple/RtEC_Simple.mpc:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTKokyuEvent.mpc:
        * orbsvcs/orbsvcs/RTSchedEvent.mpc:
        * orbsvcs/performance-tests/RTEvent/lib/RTEC_Perf.mpc:
        * orbsvcs/tests/EC_MT_Mcast/EC_MT_Mcast.mpc:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.mpc:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.mpc:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * orbsvcs/tests/Event/Basic/rteventtestexe.mpb
        * orbsvcs/tests/Event/Mcast/Common/ECMcastTests_lib.mpc:
        * orbsvcs/tests/Event/Mcast/Complex/Complex.mpc:
        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc:
        * orbsvcs/tests/Event/Mcast/Two_Way/Two_Way.mpc:
        * orbsvcs/tests/Event/Performance/Event_Performance.mpc:
        * orbsvcs/tests/Event/lib/Event_lib.mpc:
          Updated because of splitted RTEvent library

Mon May 23 09:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Custom_Marshal/run_test.pl:
          No need to specify the type of the event service anymore

Mon May 23 05:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/BCU.cpp BCU.h:
        * orbsvcs/orbsvcs/Event/Debug_Macros.h:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Event_Channel.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Event_Manip.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Fast_Reactor.h
        * orbsvcs/orbsvcs/Event/GPlot_File.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Local_ESTypes.{h,cpp}:
        * orbsvcs/orbsvcs/Event/Memory_Pools.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Module_Factory.{h,cpp}:
        * orbsvcs/orbsvcs/Event/old_event_export.h:
        * orbsvcs/orbsvcs/Event/ReactorTask.{h,cpp}:
        * orbsvcs/orbsvcs/Event/RT_Task.{cpp,h,i}:
        * orbsvcs/orbsvcs/Event/Timer_Module.{h,cpp,i}:
          Removed the old RTEvent implementation. This is already deprecated
          for years. This fixes bugzilla bug 2047

        * orbsvcs/orbsvcs/Event_Service_Constants.h:
          Removed the constants that are for the old ec

Mon May 23 05:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.{h,cpp}:
          Removed module_factory_, it was for the old ec

Mon May 23 05:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp:
          Fixed casing of include

Sun May 22 22:10:00 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Log/Basic_Log_Test/Basic_Log_Test.cpp (display_records)
        (delete_records):

        Changed query language parameter from "TCL" to "EXTENDED_TCL".

        * orbsvcs/orbsvcs/Log/Log_i.cpp (QUERY_LANG_SUPPORTED_BY_LOG):

        Changed from "TCL" to "EXTENDED_TCL".

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::delete_records_by_id)
        (TAO_Log_i::delete_records, TAO_Log_i::remove_old_records):

        Don't bother checking whether current_size is less than max_size
        if not log_full.  Avoids potentially costly calls into log store
        (if/when we support strategized stores).

Sun May 22 18:02:07 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::delete_records)
        (TAO_Log_i::remove_old_records):

        Like delete_records_by_id(), reset "log_full" if "current_size"
        is less than "max_size".

Sun May 22 17:01:56 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::scheduled):

        Removed duplicate fetch of current time.

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::remove_old_records):

        Corrected calculation of purge time.  Arithmetic was being done on
        time values without normalizing units first.

Sun May 22 16:37:39 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Sun May 22 20:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.{cpp,h}:
        * orbsvcs/Event_Service/Event_Service.{h,cpp}:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.{h,cpp}:
        * examples/Simulator/Event_Supplier/DualEC_Sup.{h,cpp}:
        * orbsvcs/tests/Event/lib/Driver.{h,cpp}:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
          Removed support for the old rt event service, this will be removed
          soon.

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
          Removed not needed includes

        * orbsvcs/Event_Service/Event_Service.mpc:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * orbsvcs/examples/RtEC/Schedule/RtEC_Schedule.mpc:
        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
          Removed rtoldevent as base project

        * orbsvcs/tests/EC_Throughput/run_test.pl:
          Updated because we just only have one RTEvent implementation

        * orbsvcs/tests/Sched_Conf/Sched_Conf_Anomalies.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp:
        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:
          Removed workaround for very old Sun compiler

        * orbsvcs/examples/RtEC/Schedule/Consumer.cpp:
        * orbsvcs/examples/RtEC/Schedule/Supplier.cpp:
          Removed empty explicit instantiation block

        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
          Removed not needed includes of old rtevent files

Sun May 22 10:33:34 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/Root_POA.cpp (create_POA_i):

          Increment the reference count immediately after binding the
          child POA to children map.  Addresses a seg fault introduced by
          the leak fix described in ChangeLog entry "Sun May 22 00:00:31
          2005  Ossama Othman  <ossama@dre.vanderbilt.edu>".

        * tao/PortableServer/Root_POA.h (create_POA_i):

          No need to return a pointer to TAO_Root_POA.  Return a
          PortableServer::POA_ptr instead.  Allows implementation to be
          slightly simplified.

Sun May 22 14:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Multiple/EC_Multiple.mpc:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
          Converted this test to use the new RTEC instead of the old one
          which will be removed soon. Also removed a workaround for the Sun 4.2
          compiler which we don't support already for a long time

Sun May 22 14:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PICurrent.h:
          Fixed warning

Sun May 22 11:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ClientRequestInfo_i.h:
        * tao/ClientRequestInterceptor_Adapter.h:
        * tao/ClientRequestInterceptor_List.cpp:
        * tao/ClientRequestInterceptor_List.h:
        * tao/ClientRequestInterceptor_List.inl:
        * tao/Interceptor_List.cpp:
        * tao/Interceptor_List.h:
        * tao/Interceptor_List.inl:
        * tao/ORB_Core.h:
        * tao/PICurrent.h:
        * tao/PICurrent_Copy_Callback.h:
        * tao/PICurrent_ORBInitializer.h:
        * tao/ServerRequestInterceptor_List.cpp:
        * tao/ServerRequestInterceptor_List.h:
        * tao/ServerRequestInterceptor_List.inl:
        * tao/tao.mpc:
        * tao/PortableServer/ServerInterceptorAdapter.h:
          Moved ClientRequestInterceptor_List and
          ServerRequestInterceptor_List to their own files and updated
          includes.

Sun May 22 11:54:16 2005  Olli Savia  <ops@iki.fi>

        * tao/Collocated_Invocation.cpp:

          Fixed a typo in comment.

Sun May 22 00:00:31 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>


        * tao/Any.h (to_object, to_abstract_base, to_value):

          Made these constructors explicit, in keeping with the CORBA spec
          since it requires that the other "to_" helper structs have
          explicit single argument constructors if supported by the C++
          compiler.

        * tao/PortableServer/Root_POA.cpp (create_POA_i):

          Do not duplicate POA returned from the other create_POA_i()
          override called in this method since we are returning it
          directly to the caller and do not need to retain ownership.
          Fixes a number of memory leaks.

        * tests/ORT/ObjectReferenceFactory.h:

          CORBA::DefaultValueRefCountBase mix-in class should be the last
          in the inheritance chain.  Addresses potential memory leaks.

        * tests/Param_Test/options.cpp:
        * tests/Param_Test/options.h:

          Store the test IOR in a CORBA::String_var and drop the explicit
          calls to CORBA::string_free().  Simplifies memory management and
          fixes a memory leak.

Sat May 21 18:38:12 UTC 2005   Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.cpp:
          Fixed unused argument warning when messaging is disabled.

Sat May 21 18:34:12 UTC 2005   Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2124_Regression/Bug_2124_Regression.mpc:
          Use taoserver as base project to fix unresolved link errors

Fri May 20 20:47:00 2005    Huang-Ming Huang <hh1@cse.wustl.edu>

        * tao/MProfile.cpp:
        * tao/Profile.h:
        * tao/Profile.cpp
        * tao/Stub.cpp:

          Removed the association of TAO_Profile to TAO_Stub. This allows an
          instance of TAO_Profile to be shared between different TAO_MProfile
          objects.

Fri May 20 16:51:35 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp (TAO_LogRecoreStore::log):
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.cpp:

          Use "%d" instead of "%Q" log format directive for ACE_UINT64_TO_U32
          parameter.

        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp (TAO_LogRecordStore::update):
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.cpp:

          Subtract size of existing record and Add size of new record to
          current size.

Fri May 20 16:44:54 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Fri May 20 17:10:00 2005    Huang-Ming Huang <hh1@cse.wustl.edu>

        * tao/IIOP_Endpoint:

          Fixed problem in TAO_IIOP_Endpoint::is_preferred_network()
          which should check for empty string rather than null pointer.

Fri May 20 17:00:00 2005    Huang-Ming Huang <hh1@cse.wustl.edu>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Fixed problem in ServantRetentionStrategyRetain::find_servant()
          where servant_upcall.user_id is assigned to a local variable which
          causes memory access violation when ServerReqeustInfo::object_id()
          is accessed inside interceptors.

Fri May 20 18:30:23 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_ss.cpp:

          Added global '::' qualifier to several instances of code
          generation of a scoped name used as a template argument,
          to avoid ambiguity if there are two modules with the same
          name at different levels of nesting. This fix closes
          [BUGID:2125].

        * tests/IDL_Test/array.idl:
        * tests/IDL_Test/nested_scope.idl:
        * tests/IDL_Test/typedef.idl:

          Added various IDL snips provided by Simon McQueen
          <sm@prismtech.com> in various (now closed) Bugzilla entries.

Fri May 20 12:13:13 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/Naming_Service/NT_Naming_Service.h:
        * orbsvcs/Naming_Service/NT_Naming_Service.cpp:

          Fixed build problems with Visual C++ 6 on Windows

Fri May 20 15:22:42 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_sh.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp:

          Changed the copy constructor for generated skeleton-side
          valuetype classes private and unimplemented. Skeleton
          code is generated for valuetypes only if they support a
          concrete interface. However, these valuetypes also inherit
          from the stub-side valuetype class, which has a private
          unimplemented copy constructor. This fact makes it
          problematic to generate a valid copy constructor for the
          skeleton-side class, since C++ (and many compilers) require each
          base class copy constructor to be called in the
          initialization list.

Fri May 20 15:40:17 2005  Simon McQueen  <sm@prismtech.com>

        * tao/ORB_Core.i:

          Further to Fri May 20 11:27:02 2005  Simon McQueen:
          I forgot to commit the accessor implementation. Not
          my finest hour.

Fri May 20 14:19:08 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/ast/ast_array.cpp:

          Arrays need to take on the "constructed ?" status of the
          type they are an array of as they do with the size type.

          This fixes bug #2126.

        * tests/Bug_2126_Regression/Bug_2126_Regression.mpc:
        * tests/Bug_2126_Regression/README:
        * tests/Bug_2126_Regression/test.cpp:
        * tests/Bug_2126_Regression/Test.idl:

          A regression test for the above fix.

Fri May 20 12:38:34 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:

          Check for alias before bailing out of ::visit_string.

          This fixes bug #2124.

        * tests/Bug_2124_Regression/Bug_2124_Regression.mpc:
        * tests/Bug_2124_Regression/README:
        * tests/Bug_2124_Regression/test.cpp:
        * tests/Bug_2124_Regression/Test.idl:

          A regression test for the above fix.

Fri May 20 10:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Current.pidl:
          Updated header to doxygen style and removed remark about patching
          generated files, this is not needed anymore

Fri May 20 11:27:02 2005  Simon McQueen  <sm@prismtech.com>

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:

          Add orb init option -ORBIMREndpointsInIMR to allow control over
          whether the ImR enpoint is encoded into persistent policy object
          refs whhen the POA has been registered with the ImR. Default is true.

        * tao/PortableServer/Root_POA.cpp:

          Check whether the above property is set before encoding ImR location
          in preference to the local listener address into object references.

        * docs/Options.html:

          Document the above new option.

          This fixes bug #2123.

Fri May 20 08:55:03 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:

          Generate a guard macro definition based upon the bound length
          and local name of bound strings to prevent duplicate definitions
          when a string of the same length is defined with the same name
          in two different scopes.

          This fixes bug #2122.

        * tests/Bug_2122_Regression/Bug_2122_Regression.mpc:
        * tests/Bug_2122_Regression/README:
        * tests/Bug_2122_Regression/test.cpp:
        * tests/Bug_2122_Regression/Test.idl:

          A regression test for the above.

Thu May 19 11:52:39 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/examples/CosEC/TypedSimple/Country_i.cpp:

          Fixed emulated exception usage.

Thu May 19 15:03:45 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/include/ast_module.h:

          Modified look_in_previous() by adding a boolean parameter to
          optionally ignore forward declared types when iterating
          over the declarations in previous openings of a module. This
          new parameter is false by default, so that ordinary lookups
          will behave as always. In AST_Module::referenced() however,
          the argument is passed as true explicitly, to avoid
          redefinition errors for forward delcared types that appear
          in an opening of a module previous to the one in which they
          are fully defined, and also referenced before the full
          definition appears. Thanks to Aaron <crackajaxx@gmail.com>
          for reporting the problem and sending example IDL files>.

        * tests/IDL_Test/full.idl:

          Cosmetic changes.

Thu May 19 09:42:22 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Trading/Trading.mpc:

          I accidentally removed the utils base project from 3 of the
          projects in this mpc file.

Thu May 19 08:55:36 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Security/BiDirectional/server.cpp:

          Added an include file for ACE_OS::fopen() to fix VC6 build
          errors.

        * orbsvcs/tests/Security/BiDirectional/test_i.cpp:

          Changed reference to a non-existent test_i.i file to fix
          problems with builds that do not have inline.

Thu May 19 00:55:20 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Valuetype/ValueFactory_Map.cpp (instance):
        * tao/Valuetype/ValueFactory_Map.h (instance):

          Avoid multiple singleton instances by hiding singleton
          template instance behind this new static method.  See
          TSS_Resources.* changes below for additional details.

Thu May 19 00:29:35 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/TSS_Resources.cpp (instance):
        * tao/TSS_Resources.h (instance):

          Hide TAO_TSS_Singleton behind new TAO_TSS_Resources::instance()
          method.  Addresses multiple TAO_TSS_Singleton instances on
          platforms/compilers that support symbol hiding, but for which we
          do not yet have an appropriate *_SINGLETON_DECLARATION() macro,
          such as g++ 4.0.  Fixes problems where an incorrect singleton
          instance is returned to the caller.

          Removed unnecessary zero pointer check before operator delete()
          call.  Calling operator delete() on a zero pointer is perfectly
          valid.

Wed May 18 16:23:01 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Moved generated virtual methods out of line.  Inlining them
          causes RTTI problems when the stubs are compiled with g++ 4.0's
          "-fvisibility-inlines-hidden" command line option, and the
          classes in the stubs are exported from a DSO/DLL.

        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/MessagingC.inl:
        * tao/ObjRefTemplate/Default_ORTC.cpp:
        * tao/ObjRefTemplate/Default_ORTC.inl:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.inl:
        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/AbstractBase.inl:
        * tao/Valuetype/Sequence_T.cpp:
        * tao/Valuetype/Sequence_T.inl:

          Moved virtual methods out of line.  See above for the motivation
          behind these changes.

        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.h:

          Moved preprocessor "#else" to the first column for portability
          reasons.

        * tao/PortableServer/ORT_Adapter_Factory.cpp:
        * tao/PortableServer/ORT_Adapter_Factory.h (ORT_Adapter_Factory):

          Added a virtual destructor.  Even though this class only defines
          an interface, an out-of-line virtual destructor is necessary to
          avoid dynamic_cast<> failures when using g++ 4.0's
          -fvisibility-inlines-hidden command line option.  Apparently the
          compiler generated destructor is inlined.

Wed May 18 14:56:37 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

Wed May 18 15:03:15 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Security/BiDirectional/Secure_BiDir.mpc:

          Renamed the BiDirectional.mpc to avoid build problems on Windows
          platforms, caused by duplicate (case-insensitive) project names.
          It conflicts with tests/BiDirectional/BiDirectional.mpc

        * orbsvcs/tests/Security/BiDirectional/BiDirectional.mpc:

          Removed this file.

Wed May 18 14:38:15 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/Naming_Service/NT_Naming_Service.h:

        Fixing a build problem with Borland on Windows.

Wed May 18 13:05:48 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * tao/Transport_Cache_Manager.cpp:

          Reverted changes that added printing of the stringified
          endpoint address, because it is not possible to pre-determine
          the lenght of the character representation for all protocols'
          endpoints. Thanks Johny and Ossama.

Wed May 18 17:13:53 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/be_include/be_visitor_valuetype/field_ch.h:

          Make valuetype anonymous private sequence member definitions
          public rather than private.

          This fixes Bugzilla #2119.

        * tests/Bug_2119_Regression/README:
        * tests/Bug_2119_Regression/test.idl:
        * tests/Bug_2119_Regression/test.mpc:

          Regression test for the above.

        * tao/Synch_Invocation.cpp:

          Add COMM_FAILURE to the list of SystemExceptions that can be
          retried in a fault tolerant configuration.

          This fixes Bugzilla #2118.

Wed May 18 10:29:33 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * tao/Transport_Cache_Manager.cpp:
          Fixed Borland build problems and some stylistic improvements
          to logging.

Wed May 18 15:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PIForwardRequest.pidl:
          Fixed fuzz error

Wed May 18 13:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.h:
          Doxygen improvement

Wed May 18 12:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/corba.h:
          Removed duplicate includes

Wed May 18 12:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableInterceptor.pidl:
          Moved several interfaces to their own file

        * tao/ClientRequestInterceptor.pidl:
        * tao/Interceptor.pidl:
        * tao/PIForwardRequest.pidl:
        * tao/ServerRequestInterceptor.pidl:
          New files, contains parts of the original PortableInterceptor.pidl

        * tao/ClientRequestInterceptorA.cpp:
        * tao/ClientRequestInterceptorC.cpp:
        * tao/ClientRequestInterceptorC.h:
        * tao/ClientRequestInterceptorS.h:
        * tao/InterceptorA.cpp:
        * tao/InterceptorC.cpp:
        * tao/InterceptorC.h:
        * tao/InterceptorS.h:
        * tao/PIForwardRequestA.cpp:
        * tao/PIForwardRequestC.cpp:
        * tao/PIForwardRequestC.h:
        * tao/PIForwardRequestS.h:
        * tao/PortableInterceptorA.cpp:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.h:
        * tao/PortableInterceptorS.h:
        * tao/ServerRequestInterceptorA.cpp:
        * tao/ServerRequestInterceptorC.cpp:
        * tao/ServerRequestInterceptorC.h:
        * tao/ServerRequestInterceptorS.h:
          Mew generated files

        * tao/tao.mpc:
          Added new files

        * tao/diffs/PortableInterceptor.diff:
          Removed, not needed anymore

        * tao/diffs/ServerRequestInterceptor.diff:
          New diff file

Wed May 18 06:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Security/BiDirectional/BiDirectional.mpc:
          Give this project an unique name so that MPC doesn't complain about
          duplicate names

        * orbsvcs/tests/Security/BiDirectional/test.idl:
          Converted documentation to doxygen style

Tue May 17 15:55:35 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/Naming_Service/NT_Naming_Service.{h,cpp}:

          For Windows platforms, changed how the handle_control() stops
          the ORB. Instead of having to explicitly stop the reactor loop
          it only needs to call ORB::shutdown(). This also avoids a
          potential race condition that may occur as the ORB gets
          destroy()-ed between the two calls. Added an AutoFinalizer
          class, whose destructor notifies the Windows SCM by calling
          ACE_NT_Service::report_status() when an instance goes out of
          scope. This is helpful in the presence of unexpected
          exceptions.  This patch was forward-ported from 1.3a_p9, based
          upon RT4982.

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:

          Added ACE_TEXT_ALWAYS_CHAR ()

Tue May 17 15:14:55 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

          This change allows bi-directional policy to work with SSLIOP
          endpoints.  When a server accepts a client-initiated
          connection or a listen point list, there is no data available
          about the IIOP endpoints, underlying the SSLIOP endpoints.
          There is also no data for most of the attributes of the secure
          connection.  Therefore the "server" must synthesize those,
          however this can not be done correctly. The problem becomes
          evident when bi-directional policy is in effect for both
          peers: a "server" during callback, needs to use the same
          connection the "client" has initiated, but the secure endpoint
          obtained from an IOR can not yield the same hash value as the
          synthesized endpoint (from an LPL), used to cache the
          connection.  Also, such endpoints can not be equivalent, in
          terms of the is_equivalent () method. The IOR from the client
          contains the real (non-synthetic) port number for the IIOP
          endpoint underlying the SSL endpoint.  This causes the server
          to decide that it deals with a different endpoint and try to
          open a new connection. When the ORBs are using bi-directional
          policies and are behind a firewall, this will fail

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:

          Creates an instance of the new SSLIOP_Synthetic_Endpoint,
          which it then uses to re-cache the transport.
          TAO_SSLIOP_Connection_Handler::add_transport_to_cache()
          ultimately uses the is_equivalent () method to compare
          endpoints. That method must not compare the underlying IIOP
          port numbers, because in some cases SSLIOP endpoints are
          instantiated with limited amount of information available. For
          example, when accepting a connections in server role, the
          underlying IIOP endpoint's port is unknown an is merely
          assigned to be the same as the secure port, effectively
          precludes the ability of the server to find a connection
          cached with these parameters later.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.{h,cpp):

          Introduced a new SSLIOP_Synthetic_Endpoint, which relaxes the
          equivalence comparison with another SSLIOP_Endpoint to limit
          it to only hostname, SSL port and QoP.
          Changed the hash() implementation in SSLIOP_Endpoint to
          eliminate any influence the embedded IIOP endpoint has on the
          hash value. This allows the SSLIOP_Synthetic_Endpoint to hash
          just like an SSLIOP_Endpoint and makes possible that synthetic
          endpoints to be used to find previously cached transports.

        * orbsvcs/tests/Security/BiDirectional/BiDirectional.mpc:
        * orbsvcs/tests/Security/BiDirectional/README:
        * orbsvcs/tests/Security/BiDirectional/client.conf:
        * orbsvcs/tests/Security/BiDirectional/client.cpp:
        * orbsvcs/tests/Security/BiDirectional/run_test.pl:
        * orbsvcs/tests/Security/BiDirectional/server.conf:
        * orbsvcs/tests/Security/BiDirectional/server.cpp:
        * orbsvcs/tests/Security/BiDirectional/test.idl:
        * orbsvcs/tests/Security/BiDirectional/test_i.h:
        * orbsvcs/tests/Security/BiDirectional/test_i.i:
        * orbsvcs/tests/Security/BiDirectional/test_i.cpp:

          A test that demonstrates the problem. Uses TAO-specific
          interfaces to the ORB core to obtain the number of currently
          open connections before and after an invocation. This is done
          both in the servant and in the client.

        * orbsvcs/tests/Security/BiDirectional/ssl/ca.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/client-cert.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/client-key.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/make-client-keys:
        * orbsvcs/tests/Security/BiDirectional/ssl/server-cert.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/server-key.pem:

          Client and server certificates and keys. Also, a script to
          regenerate them all.


        * tao/Transport_Cache_Manager.cpp:

          Added more informative logging.

Tue May 17 09:18:15 2005  Chad Elliott  <elliott_c@ociweb.com>

        * utils/NamingViewer/NamingViewer.mpc:

          Removed unnecessary Resource_Files section.

        * utils/utils.mwc:

          Added the NamingViewer directory.

Tue May 17 05:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.cpp:
          Use ACE_SIZE_T_FORMAT_SPECIFIER to print out an size_t variable
          with ACE_OS::sprintf

Tue May 17 05:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.h:
        * orbsvcs/tests/Event/Basic/Control.h:
          Removed not needed include of Channel_Clients.h. This file has
          been removed and the include was not needed.

Mon May 16 19:22:39 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp:

          #include "orbsvcs/PortableGroup/PG_Operators.h" and remove the
          "bool operator==(const FTRT::Location&, const FTRT::Location&)"
          implementation.  FTRT::Location is typedef for CosNaming::Name,
          and the operator== implementation for that in the PortableGroup
          library conflict on MacOSX.

Mon May 16 12:15:11 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/include/ast_component.h
          (AST_Component::port_descriptor):

          Added an inlined constructor to this structure to make sure all
          fields are initialized prior to use.  Fixes a g++ 4.0 "variable
          is used initialized" warning.

Mon May 16 14:08:35 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.ll (idl_store_pragma):
        * TAO_IDL/fe/lex.yy.cpp (idl_store_pragma):

          Added code to eat extra whitespace in a #pragma directive,
          need when using preprocessors that don't do it automatically.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          discovering this quirk about the preprocessor used with the
          Intel C++ compiler. This fixes bugzilla bug [2110]

Mon May 16 18:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CDR.h:
        * tao/Codeset_Manager.h:
        * tao/Codeset_Translator_Factory_T.h:
        * tao/Reply_Dispatcher.h:
        * tao/Sequence.h:
        * tao/Transport_Acceptor.h:
        * tao/SmartProxies/Smart_Proxies.h:
          Doxygen improvements

Mon May 16 10:09:45 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_arg_traits.cpp (visit_operation):

          Added check for imported node, skipping code generation if the
          node is imported. For all other node types in this visitor, arg
          traits specializations must be generated, since an IDL type
          declared in an included file could be used as a parameter in
          an operation in the main file. But when visiting an operation
          itself, the only thing that triggers an arg traits specialization
          is an anonymous bounded string parameter (deprecated but still
          legal). Since this type of declaration is not visible outside
          the operation's scope, it should not trigger code generation
          if the node is imported. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing out that this code generation
          for an imported operation causes a C++ compilation failure, due
          to the lack of a proper #include of tao/BD_String_Arg_Traits.h.

Mon May 16 15:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/DII_Arguments.h:
        * tao/DynamicInterface/DII_Invocation.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Reply_Dispatcher.h:
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h:
        * tao/DynamicInterface/Dynamic_Implementation.h:
        * tao/DynamicInterface/ExceptionList.h:
        * tao/DynamicInterface/Server_Request.h:
          Doxygen improvements

Mon May 16 14:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Channel_Clients.{h,cpp}:
          Removed, not needed anymore

        * orbsvcs/orbsvcs/Channel_Clients_T.h:
        * orbsvcs/orbsvcs/Scheduler_Utilities.h:
          Doxygen fixes

        * orbsvcs/orbsvcs/Makefile.am:
          Removed Channel_Clients files

        * orbsvcs/orbsvcs/Scheduler_Utilities.cpp:
          Removed not needed include of OS.h

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.h:
          Doxygen improvement

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/tests/Event/lib/Counting_Supplier.h:
          Include Channel_Clients_T.h instead of Channel_Clients.h

Mon May 16 14:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTEvent.mpc:
          Added Channel_Clients_T.cpp, it belongs to this project

        * orbsvcs/orbsvcs/AV.mpc:
          Removed Channel_Clients_T files, they don't belong to the AV service

Mon May 16 14:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/Thread_Task.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.cpp:
          Use ACE_SIZE_T_FORMAT_SPECIFIER to print out an size_t variable
          with ACE_OS::sprintf

        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:
        * orbsvcs/orbsvcs/CosNaming_Skel.mpc:
          Moved the Serv and Skel projects to their own file. This makes it
          possible to create a workspace with just one of the projects

Mon May 16 09:18:26 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEC_RtEC_Based_lib.mpc:
        * orbsvcs/performance-tests/RTEvent/lib/RTEC_Perf.mpc:
        * orbsvcs/tests/Event/Mcast/Common/ECMcastTests_lib.mpc:
        * orbsvcs/tests/Event/lib/Event_lib.mpc:
        * orbsvcs/tests/Trading/Trading.mpc:

          Removed redundant base projects.

        * orbsvcs/examples/ImR/Combined_Service/test.cpp:

          Modified the assertTrue macro so that it would build on LynxOS.

        * orbsvcs/tests/EC_MT_Mcast/run_test.pl:

          Generate a unique multicast address and port to avoid collisions
          on the same network.

        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/windows.conf:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/windows.conf.xml:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/windows.conf:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/windows.conf.xml:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/windows.conf:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/windows.conf.xml:

          On Windows, we use a configurator file to switch from the default
          reactor (TP) to Select MT.  The LoadManager, on Windows only,
          requires a reactor that supports registering signal handlers and
          the TP Reactor no longer supports that sort of thing.

        * orbsvcs/tests/Notify/MT_Dispatching/run_test.pl:

          Committing a change from Dale Wilson <wilson_d@ociweb.com>.

          Change shut down timeout from hard coded 1 to symbolic 10
          to eliminate intermittent timeouts on various platforms.

        * orbsvcs/tests/Notify/Structured_Multi_Filter/run_test.pl:

          Committing a change from Trevor Fields <fields_t@ociweb.com>.

          Added delay between iterations of the test to allow
          complete shutdown of Naming service.  The problem showed
          up on dual processor machines.

        * orbsvcs/tests/Notify/XML_Persistence/main.cpp:

          Added an include of the CosNotification library initializer header
          to work around static construction issues on SunOS and MacOS X.

        * orbsvcs/tests/Redundant_Naming/run_test.pl:
        * orbsvcs/tests/Simple_Naming/run_test.pl:

          Allow the user to determine the location of the persistence file
          by the TMPDIR, TEMP and TMP environment variables.  This will work
          around NFS locking issues.

        * orbsvcs/tests/Simple_Naming/process-m-output.pl:

          Committing a change from Yan Dai <dai_y@ociweb.com>.

          Modified the test scripts to accept the empty line, the
          "CommandLine" line and the "WARNING" lines from
          orbsvcs/orbsvcs/Shutdown_Utilities.cpp.

Mon May 16 08:25:53 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:

          Set the default name to "ScheduleService".

        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:

          Allocate an RtecScheduler::Dependency_Set into the out parameter
          if it doesn't contain one yet.

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:

          Switched the types for the generated code to match up with actual
          types for the POD_Dependency_Info and POD_Config_Info structures.

Mon May 16 08:21:34 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/ORB_Core.cpp:

          Warn the user if the parameter to -ORBCollocation is not
          recognized.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.h:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Endpoint.h:
        * tao/Strategies/SCIOP_Endpoint.cpp:

          Corrected many build issues dealing with SCTP.

Sat May 14 06:09:23 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.4.5 released.

Local Variables:
add-log-time-format: current-time-string
End:
