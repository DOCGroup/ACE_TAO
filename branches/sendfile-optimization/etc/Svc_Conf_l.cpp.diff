--- Svc_Conf_l.cpp.old	Tue Mar  1 10:03:28 2005
+++ Svc_Conf_l.cpp	Tue Mar  1 10:18:29 2005
@@ -625,9 +625,21 @@
                         ACE_YY_FATAL_ERROR( "input in flex scanner failed" ); \
                 result = n; \
                 } \
-        else if ( ((result = fread( buf, 1, max_size, ace_yyin )) == 0) \
+        else \
+                { \
+                errno = 0; \
+                while ( ((result = fread( buf, sizeof (ACE_TCHAR), max_size, ace_yyin )) == 0) \
                   && ferror( ace_yyin ) ) \
-                ACE_YY_FATAL_ERROR( "input in flex scanner failed" );
+                        { \
+                        if (errno != EINTR) \
+                                { \
+                                ACE_YY_FATAL_ERROR( "input in flex scanner failed" ); \
+                                break; \
+                                } \
+                        errno = 0; \
+                        clearerr(ace_yyin); \
+                        } \
+                }
 #endif
 
 /* No semi-colon after return; correct usage is to write "ace_yyterminate();" -
@@ -679,8 +691,12 @@
         register ACE_TCHAR *ace_yy_cp = 0, *ace_yy_bp = 0;
         register int ace_yy_act;
 
+        ACE_MT (ACE_GUARD_RETURN (ACE_SYNCH_RECURSIVE_MUTEX,
+                                  ace_mon,
+                                  *ACE_Static_Object_Lock::instance (),
+                                  -1));
 
-
+        ACE_Svc_Conf_Lexer_Guard ace_lexer_guard (ACE_SVC_CONF_PARAM);
 
         if ( ace_yy_init )
                 {
@@ -774,71 +790,71 @@
 case 2:
 ACE_YY_RULE_SETUP
 { return token (ACE_DYNAMIC); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 3:
 ACE_YY_RULE_SETUP
 { return token (ACE_STATIC); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 4:
 ACE_YY_RULE_SETUP
 { return token (ACE_SUSPEND); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 5:
 ACE_YY_RULE_SETUP
 { return token (ACE_RESUME); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 6:
 ACE_YY_RULE_SETUP
 { return token (ACE_REMOVE); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 7:
 ACE_YY_RULE_SETUP
 { return token (ACE_USTREAM); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 8:
 ACE_YY_RULE_SETUP
 { return token (ACE_MODULE_T); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 9:
 ACE_YY_RULE_SETUP
 { return token (ACE_SVC_OBJ_T); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 10:
 ACE_YY_RULE_SETUP
 { return token (ACE_STREAM_T); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 11:
 ACE_YY_RULE_SETUP
 { return token (ACE_ACTIVE); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 12:
 ACE_YY_RULE_SETUP
 { return token (ACE_INACTIVE); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 13:
 ACE_YY_RULE_SETUP
 { return token (':'); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 14:
 ACE_YY_RULE_SETUP
 { return token ('*'); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 15:
 ACE_YY_RULE_SETUP
 { return token ('('); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 16:
 ACE_YY_RULE_SETUP
 { return token (')'); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 17:
 ACE_YY_RULE_SETUP
 { return token ('{'); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 18:
 ACE_YY_RULE_SETUP
 { return token ('}'); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 19:
 ACE_YY_RULE_SETUP
 {
@@ -852,21 +868,21 @@
                         ace_yyleng -= 1;
                         ace_yylval->ident_ = ACE_SVC_CONF_PARAM->obstack.copy (ace_yytext + 1, ace_yyleng);
                         return token (ACE_STRING); }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 20:
 ACE_YY_RULE_SETUP
 {
                         ace_yylval->ident_ = ACE_SVC_CONF_PARAM->obstack.copy (ace_yytext, ace_yyleng);
                         return token (ACE_IDENT);
                       }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 21:
 ACE_YY_RULE_SETUP
 {
                         ace_yylval->ident_ = ACE_SVC_CONF_PARAM->obstack.copy (ace_yytext, ace_yyleng);
                         return token (ACE_PATHNAME);
                       }
-        ACE_YY_BREAK
+        //ACE_YY_BREAK
 case 22:
 ACE_YY_RULE_SETUP
 ; /* EMPTY */
