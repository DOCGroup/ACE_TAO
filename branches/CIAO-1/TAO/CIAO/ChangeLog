Tue Mar 04 20:40:21 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* examples/handcrafted/Display/RateGen/RateGenE.idl: Fixed a typo.
	  Thanks to Jeff Gray <gray@cis.uab.edu> for pointing it out.

Thu Feb 27 22:15:48 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/ComponentServer_Impl.h: Fixed a cut-n-paste error in a comment.

	* ciao/ServerActivator_Impl.cpp:
	* ciao/ServerActivator_Impl.h:  Changed to cache an IOR to
	  the ComponentInstallation interface and pass the IOR with
	  -ORBInitRef option to the ComponentServer.  We will need it when
	  installing a component home in the container.

	* examples/handcrafted/Hello/hello_servants.cpp:
	* examples/handcrafted/Hello/hello_servants.h: Removed inheriting
	  the component specific context from the SessionContext local
	  interface.  This component example should be run as Service
	  component, not Session component.

	* tools/ServerActivator/README:
	* tools/Daemon/CIAO_Daemon.cpp:
	* tools/ServerActivator/ServerActivator.cpp: Changed to propagate
	  the ComponentInstallation somehow.

	* tools/ServerActivator/ServerActivator_test_client.cpp: Removed a
	  redundant $Id$ tag.

Sat Feb 22 23:45:52 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/releasenotes.html:
	* docs/todo.html: Updated information regarding different
	  component deployment schemes.

	* examples/handcrafted/Hello/hello.csd:
	* examples/handcrafted/Hello/hello.ssd: Fixed syntax errors.

	* tools/XML_Helpers/Softpkg_Handlers.cpp:
	* tools/XML_Helpers/Softpkg_Handlers.h:
	* tools/XML_Helpers/Softpkg_Handlers.inl:
	* tools/XML_Helpers/XML_Utils.cpp:
	* tools/XML_Helpers/XML_Utils.h:
	* tools/XML_Helpers/XML_Utils.inl: Added these new file to extract
	  necessary information to install the component specified in a
	  .csd (component softpkg descriptor) file.  The
	  Softpkg_Handlers.* contain the XML Handler(s) for parsing the
	  csd document and XML_Utils.* contain the file Assembly tools can
	  use to extract the needed info.  Notice that the XML handler
	  currently don't do a lot of validation.

	* tools/XML_Helpers/Cascadable_DocHandler.cpp:
	* tools/XML_Helpers/Cascadable_DocHandler.h:
	* tools/XML_Helpers/Cascadable_DocHandler.i: Added error handling
	  functions and allows it to accept a Locator from the parser to
	  show error location.

	* tools/XML_Helpers/Svcconf.dsp:
	* tools/XML_Helpers/Svcconf.dsw: Renamed these files to the
	  following:

	* tools/XML_Helpers/XMLHelpers.dsp:
	* tools/XML_Helpers/Helper_Test.dsw:
	* tools/XML_Helpers/main.cpp: Added new files into the project
	  file and changed the project and workspace name.


Thu Feb 20 22:15:08 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	  Manually generated the following XML descriptors.  These are the
	  minimum to install a component.  Currently, I just get the UUID
	  using win32's UUIDGEN or GUIDGEN.

	* examples/handcrafted/Hello/hello.csd: Component softpkg descriptor.

	* examples/handcrafted/Hello/hello.ssd: CIAO's servant softpkg
	  descriptor.

	* examples/handcrafted/Hello/hello.ccd: CORBA component descriptor.

Wed Feb 19 13:30:19 2003  Boris Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

	* CIDLC/DesignNotes: Reorganized stuff a bit again and added some
	  comments on Jeff's comments.

Mon Feb 17 17:47:55 2003  Boris Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

	* CIDLC/DesignNotes: Reorganized stuff a bit and added some new
	  ideas/notes.

Sun Feb 16 21:30:42 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/releasenotes.html: Updated release info with the following.

	* ciao/ComponentInstallation_Impl.cpp:
	* ciao/ComponentInstallation_Impl.h: Fixed a problem of empty
	  persistent backing store file.  I need to store the
	  configuration data under a subsection (as oppose to the root
	  section.)

	* ciao/CIAO_Server.dsp:
	* ciao/Daemon.idl:
	* ciao/Daemon_Impl.cpp:
	* ciao/Daemon_Impl.h:
	* ciao/Daemon_Impl.inl: Added a generic server process control
	  interface that provides operations to query available service
	  interfaces and to shutdown the server process.

	* tools/Daemon/CIAO_Daemon.cpp:
	* tools/Daemon/CIAO_Daemon.dsp:
	* tools/Daemon/CIAO_Installation_Data.ini:
	* tools/Daemon/Daemon.dsw:
	* tools/Daemon/README:
	* tools/Daemon/DaemonController.cpp:
	* tools/Daemon/DaemonController.dsp:
	* tools/Daemon/controller_i.cpp:
	* tools/Daemon/controller_i.h:
	* tools/Daemon/controller_i.inl: Added new per-host CIAO_Daemon
	  implementaion which offer both ComponentInstallation interface
	  which manages the local component implementation cache, and
	  ServerActivator interface which the Assembly framework interacts
	  with to spawn new ComponentServer processes.  See the README
	  file in this directory and releasenotes.html for more details.

	  There's also a DaemonController tool which provides a command
	  line interface to control the daemon process and to interact
	  with ComponentInstallation and ServerActivation interfaces.

Sat Feb 15 22:54:11 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/CIAO_Server.dsp:
	* ciao/ComponentInstallation_Impl.cpp:
	* ciao/ComponentInstallation_Impl.h:
	* ciao/ComponentInstallation_Impl.inl: Filled in the
	  implementation for ComponentInstallation interface.  We
	  currently only provide a naive implemntation for this
	  interface.  It currently manages the pathnames to various
	  component implementations so a Container can fetch a
	  implementation from its UUID.

	* examples/handcrafted/Hello/hello_servants.dsp: Added CIAO_server
	  to the list of link libraries.   I need to move the base
	  container implementation from the CIAO_Server library to
	  CIAO_Container library.

Fri Feb 14 23:15:39 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/todo.html:  Added info on why the Assembly tools should
	  be responsible of the act of home registration.

	* ciao/Container_Impl.cpp:
	* ciao/ServerActivator_Impl.cpp:
	* ciao/ComponentServer_Impl.cpp: Changed the use of ACE_NEW_RETURN
	  to ACE_NEW_THROW_EX.

	* ciao/ComponentServer_Impl.h: Cosmetic changes.

	* examples/handcrafted/Hello/hello_servants.cpp:
	* examples/handcrafted/Hello/hello_servants.h: Fixed <unsubscribe>
	  signature based on RTF 1.1.

	* tools/ComponentServer/ComponentServer.cpp: Added comments
	  explaining why we are not init'ing the component server right
	  now.

	* tools/ServerActivator/README:
	* examples/handcrafted/Hello/client.cpp:
	* tools/ServerActivator/ServerActivator_test_client.cpp: Forced in
	  hack to test out installing the HelloWorldHome using the new
	  ServerActivator -> ComponentServer -> Container interfaces.

	* tools/Simple_Component_Server/Simple_Component_Server.cpp: Fix

Fri Feb 14 17:10:50 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/ConfigValues.html: Updated more supported ConfigValues types.

	* docs/releasenotes.html:
	* docs/todo.html:

	* ciao/Client_init.cpp:
	* ciao/Server_init.cpp:
	* ciao/Client_init.h:
	* ciao/Server_init.h: Removed "ciao/" from the include paths.  We
	  now always include ciao core files as they are specified in the
	  include path directly.

	* ciao/CIAO_Server.dsp:
	* ciao/CIAO_Servers.idl:
	* ciao/ComponentServer_Impl.cpp:
	* ciao/ComponentServer_Impl.h:
	* ciao/ComponentServer_Impl.inl:
	* ciao/Container_Base.cpp:
	* ciao/Container_Base.h:
	* ciao/Container_Impl.cpp:
	* ciao/Container_Impl.h:
	* ciao/Container_Impl.inl:
	* ciao/Object_Set_T.cpp:
	* ciao/Object_Set_T.h:
	* ciao/Object_Set_T.inl:
	* ciao/ServerActivator_Impl.cpp:
	* ciao/ServerActivator_Impl.h:
	* ciao/ServerActivator_Impl.inl: Filled in more implementations.

	* tools/ServerActivator/README:
	* tools/ServerActivator/ServerActivator.cpp:
	* tools/ServerActivator/ServerActivator.dsp:
	* tools/ServerActivator/ServerActivator.dsw:
	* tools/ServerActivator/ServerActivator_test_client.cpp:
	* tools/ServerActivator/ServerActivator_test_client.dsp: Added a
	  ServerActivator implementation.

	* tools/ComponentServer/ComponentServer.cpp:
	* tools/ComponentServer/ComponentServer.dsp:
	* tools/ComponentServer/ComponentServer.dsw:
	* tools/ComponentServer/ComponentServer_test_client.cpp:
	* tools/ComponentServer/ComponentServer_test_client.dsp:
	* tools/ComponentServer/README: Added a more comprehensive
	  ComponentServer implementation.

Sun Feb 09 20:39:05 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/todo.html: Added more todo items as we go along. :)

	* ciao/Component_Base.idl:
	* ciao/CCM_Deployment.idl: Changed the create method in
	  ::Components::Deployment::AssemblyFactory to create_assembly per
	  CCM RTF 1.1.

	* ciao/Assembly_Impl.cpp:
	* ciao/Assembly_Impl.h:
	* ciao/Assembly_Impl.inl: CCM RTF 1.1 changes.  Also added other
	  test code in the file and explained how to create an Assembly
	  object.

	* ciao/CIAO_Core.mpc:
	* ciao/CIAO_Client.dsp:
	* ciao/CIAO_Server.dsp:
	* ciao/CIAO_Value.idl: Added a CIAO internal cookie valuetype so
	  we can downcast the incoming ::Components::Cookie back to CIAO's
	  internal implementation type CIAO::Cookie easily.  The original
	  "brute force cast" didn't work and CIAO::Cookie also provides a
	  way to fish out the internal octetseq we need internally.

	* ciao/Cookies.cpp:
	* ciao/Cookies.h:
	* ciao/Cookies.inl: Changed to inherit the internal cookie
	  implementation from OBV_CIAO::Cookie instead of
	  OBV_Components::Cookie.  Also changed the extract method to be
	  static.

	* ciao/Client_init.cpp: Added a new valuefactory to create
	  ::Components::Cookie valuetype when receiving CIAO::Cookie from
	  the server.  This should really be handled by supporting
	  truncatable valuetype in TAO.

	* docs/templates/CIAO_Glue_Session_Template.inl: Applied some of
	  the bug fixes from using Active Map and Cookie.  These template
	  files need to be reviewed further.

	* tests/temp/README:
	* tests/temp/assembly/README:
	* tests/temp/assembly/assembly.dsw:
	* tests/temp/assembly/client.cpp:
	* tests/temp/assembly/client.dsp:
	* tests/temp/assembly/control.idl:
	* tests/temp/assembly/control.mpc:
	* tests/temp/assembly/run_test.pl:
	* tests/temp/assembly/server.cpp:
	* tests/temp/assembly/server.dsp: Added this test to make sure the
	  demonstrate how to use AssemblyFactory and Assembly interface,
	  and the Assembly's are being managed properly.  More
	  importantly, I used this test to make sure the internal
	  implementation for Cookie and Active_Object_Map are working
	  correctly.

	* tools/XML_Helpers/Svcconf.dsp:
	* tools/XML_Helpers/Svcconf.dsw:
	* tools/XML_Helpers/Svcconf_Handler.cpp:
	* tools/XML_Helpers/Svcconf_Handler.h:
	* tools/XML_Helpers/Svcconf_Handler.i:
	* tools/XML_Helpers/main.cpp:
	* tools/XML_Helpers/svc.conf.xml: Added an example to demonstrate
	  how to write a subclass of Cascadable_DocHandler and how to use
	  the Skip_DocHandler.  Just so I won't forget how to use them.

Sat Feb 08 20:45:20 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/*: WiP intermediate checkins.

	* ciao/Object_Set_T.h:
	* ciao/Object_Set_T.cpp (object_in_set): Added a new method to
	  check if an object is already in the set or not.

Fri Feb 07 23:35:35 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/Object_Set_T.h:
	* ciao/Object_Set_T.i:
	* ciao/Object_Set_T.cpp: Added a naive implementation of an object
	  reference set.  It is naive because it simply keeps object
	  references in an objref_var array without checking for
	  duplication.  More importantly, it takes O(n) to to look for an
	  object reference and return it.  What we really need is a
	  thread-safe hash_set<> like class here.  Since this is mostly
	  used only during setup/assemble time for a CIAO application,
	  i.e., not on critical path, this class serves as a place holder
	  for later, more efficient implementation.

	  This new class is needed to support ServerActivator,
	  ComponentServer, and Container interface in
	  Components::Deployment module.

	* docs/ConfigVAlues.html: Added this new document page to record
	  what configuration values can be used to initialize
	  ComponentServer's and Container's.

	* docs/todo.html: Documented more future todo tasks and ideas.

Tue Feb 04 23:10:56 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/todo.html: Added a new item descirbing things that need to
	  be done for component/home configuration using CCM's XML
	  property files.

	* tools/XML_Helpers/Handler-Interaction.png:
	* tools/XML_Helpers/Handler-Interaction.vsd:
	* tools/XML_Helpers/README: Files that document how to use
	  Cascadable_DocHandler and interactions among handlers of
	  different layers.

	* tools/XML_Helpers/Cascadable_DocHandler.cpp:
	* tools/XML_Helpers/Cascadable_DocHandler.h:
	* tools/XML_Helpers/Cascadable_DocHandler.i: A
	  ACEXML_DefaultHandler subclass which can be easily cascaded
	  together to handle hierarchical XML document structure.  There
	  is also a Skip_DocHandler class which subclasses from
	  Cascadable_DocHandler and can be used to skip over some certain
	  XML tags completely.  These helper classes should probably be
	  collected under ACEXML in the future.

Sun Feb 02 21:05:39 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/Cookies.cpp (insert): Fixed a warning.

	* ciao/CCM_Base.idl: Changed to include <orb.idl> instead of <corba.pidl>.

	* ciao/CCM_Event.idl: Fixed a typo I put in last.

Sun Feb 02 15:23:26 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/XML/componentassembly.dtd:
	* docs/XML/corbacomponent.dtd:
	* docs/XML/properties.dtd:
	* docs/XML/softpkg.dtd: Updated these files with the ones from my
	  web page.  They are now in-sync with the latest RTF.

Wed Jan 29 13:27:01 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/DesignNotes:

          Added a list of items from the IDL compiler that need redesign and
          can perhaps be done incrementally in the CIDL compiler, and
          eventually integrated back into the IDL compiler.

Wed Jan 22 16:05:18 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

	* CIDLC/DesignNotes: added some more ideas.

Wed Jan 22 13:54:12 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

	* CIDLC/DesignNotes: added this file to capture and document CIDL
	  complier design ideas/decisions.

Tue Jan 21 16:20:44 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

	* tools/CIDLC:
	* CIDLC: moved CIDLC directory one level up.

Mon Jan 13 15:23:09 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/templates/Executor.idl: Added meta-code for user-defined
	  oeprations, factory operations, and finder operations.

	* docs/templates/CIAO_Glue_Session_Template.cpp:
	* docs/templates/CIAO_Glue_Session_Template.h:
	* docs/templates/CIAO_Glue_Session_Template.inl: Filled in the
	  rest of the CIDL generated Servant Glue code templates.

Mon Jan 13 11:18:37 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/Component_Base.idl:
	* ciao/CCM_Base.idl: Based on Components 1.1 RTF
	  Events::unsubscribe operations now return the unsubscribed
	  consumber object reference instead of void.

	* docs/templates/CIAO_Glue_Session_Template.cpp:
	* docs/templates/CIAO_Glue_Session_Template.h:
	* docs/templates/CIAO_Glue_Session_Template.inl: Filled in most of
	  the operations for component servant.  Only opeations left
	  unimplemented include Events::get_*_publishers which I will
	  implement in the *_Context class later.

	  There are several other oeprations that throw NO_IMPLEMENT
	  exception or are no-op currently.  Missing them probably is okay
	  for now.  Next up, Home Servant template.

Mon Jan 13 00:27:03 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/templates/CIAO_Glue_Session_Template.cpp:
	* docs/templates/CIAO_Glue_Session_Template.h:
	* docs/templates/CIAO_Glue_Session_Template.inl: Filled in a great
	  more generated code.  This is almost done, finally.

	* docs/templates/CIAO_Glue_Session_Template.cpp:
	* docs/templates/CIAO_Glue_Session_Template.h:
	* docs/templates/CIAO_Glue_Session_Template.inl:
	* docs/templates/Executor.idl: Changed to lead template comments
	  with '##' instead of # to diffentiate them from preprocessor
	  directives that we should generate.

	* ciao/HomeRegistrar_i.inl:
	* ciao/HomeRegistrar_i.cpp: Fixed incorrect uses of exception macros.

	* ciao/Cookies.h:
	* ciao/Cookies.cpp: Added a new insert method which "encode" an
	  Active_Objref_Map key into the Cookie.

	* ciao/Container_Base.inl:
	* ciao/Container_Base.cpp:
	* ciao/Container_Base.h: Added a new get_objref method which
	  basically allow us to get the component reference using POA's
	  servant_to_reference operation.  Added a new inline file and
	  fixed some incorrect uses of exception macros.

	* ciao/Component_Base.idl:
	* ciao/CCM_Base.idl: Based on Components 1.1 RTF
	  Receptacles::disconnect operations now return the disconnected
	  object reference instead of void.

Fri Jan 10 12:03:00 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

	* tools/CCIDL:
	* tools/CIDLC:
	* tools/CIDLC/README: Renamed CCIDL to CIDLC. Added some
	explanations about naming convention choosen for CIDL compiler.

Thu Jan 09 00:57:37 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/templates/cidl_template.cidl: Added an example CIDL file.

	* docs/templates/CIAO_Glue_Session_Template.h:
	* docs/templates/CIAO_Glue_Session_Template.inl:
	* docs/templates/CIAO_Glue_Session_Template.cpp: Added more
	  implementation code.

Wed Jan 08 16:48:28 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/templates/CIAO_Glue_Session_Template.h: Added the complete
	  list of operations that needs to be supported.  Next up, the
	  implementation templates.

	* ciao/Active_Objref_Map.cpp:
	* ciao/Active_Objref_Map.h: Defined a typedef called
	  CIAO::Active_Objref_Map for managing CORBA::Object_var's using
	  the ACE_Active_Map_Manager and instantiate the template.

	* ciao/Cookies.cpp:
	* ciao/Cookies.h: Added insertion/extraction of
	  ACE_Active_Map_Manager_Key operations.

Tue Jan 07 23:28:28 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/CIAO_common.h: Added a new file to collect common CIAO
	  macros.

	* ciao/CIAO_Component_i.cpp:
	* ciao/CIAO_Component_i.h: Removed.
	* ciao/Client_init.cpp:
	* ciao/Client_init.h:  The old CIAO_client_init in
	  CIAO_Component_i is now called Client_init under CIAO namespace.
	  This function initlializes the value factories for client side ORB.

	* ciao/Server_init.cpp:
	* ciao/Server_init.h: Added new function Server_init under CIAO
	  namespace to initialize server side value factories for server
	  side ORB.

	* ciao/Cookies.cpp:
	* ciao/Cookies.h:
	* ciao/Cookies.inl: Added server-side implementation of
	  Components::Cookie called CIAO::Map_Key_Cookie.  This
	  implementation is only used within the containers (i.e., server
	  side).  Client doesn't need to know how to interpret a Cookie.

	* ciao/Container_Base.h:
	* ciao/HomeRegistrar_i.h: Fixed various ACE-guideline conformity
	  problems.

	* ciao/CCM_Core.mpc:
	* ciao/CIAO_Client.dsp:
	* ciao/CIAO_Container.dsp:
	* ciao/CIAO_Server.dsp:
	* ciao/Makefile.client:
	* ciao/Makefile.container:
	* ciao/Makefile.server: Updated various makefiles/projects.

Tue Jan 07 07:48:02 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/Container_Base.cpp (install_servant): Changed to decrease
	  the refcount of servant by one to make sure servants get
	  "released" properly.

Fri Jan 03 11:27:12 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/templates/Executor.idl: This pseudo-meta IDL template file
	  summarizes the standard executor mapping and serves as a
	  template for CCIDL compiler.

Sun Dec 22 23:12:49 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* examples/handcrafted/Display/RateGen/RateGen.idl:
	* examples/handcrafted/Display/GPS/GPS.idl:
	* examples/handcrafted/Display/NavDisplay/NavDisplay.idl:
	* examples/handcrafted/Display/HUDisplay.idl:
	* examples/handcrafted/Display/Display.mpc: Added more files for
	  this multi-component example.

	The followings should go to the ChangeLog under $(ACE_ROOT)

	* bin/MakeProjectCreator/configs/ciao_client.mpc:
	* bin/MakeProjectCreator/configs/ciao_component.mpc:
	* bin/MakeProjectCreator/configs/ciao_server.mpc: Added libpaths
	  defintions.

Sat Dec 21 15:09:55 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* tools/Simple_Component_Server/Simple_Component_Server.dsp:
	* examples/handcrafted/Hello/run_test.pl: Changed to generate
	  Simple_Component_Server executable in the project directory.

	* examples/handcrafted/Hello/hello.mpc:
	* ciao/CCM_Core.mpc:
	* tools/Simple_Component_Server/Simple_Component_Server.mpc:
	  Created MPC specifications.

	The followings should go to the ChangeLog under $(ACE_ROOT)

	* bin/MakeProjectCreator/configs/ciao_client.mpc:
	* bin/MakeProjectCreator/configs/ciao_component.mpc:
	* bin/MakeProjectCreator/configs/ciao_server.mpc: Created MPC
	  templates for CIAO client, component implmentation, and server
	  tools.

Fri Dec 20 23:09:53 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/Makefile.server: Added HomeRegistrar.idl and
	  HomeRegistrar_i to the makefile.

	* tools/Simple_Component_Server/Makefile: Added a new makefile.

Fri Dec 20 20:32:53 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/CCM_Component.idl:
	* ciao/CCM_Container.idl:
	* ciao/Container_Base.cpp:
	* ciao/Makefile.client:
	* ciao/Makefile.container:
	* ciao/Makefile.server: Fixed compilation erros and Makefiles on
	  Linux.

Thu Dec 19 20:44:39 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* examples/handcrafted/Display/README:
	* examples/handcrafted/Display/Configuration-0.png: Added new
	  files explaining the purpose of the the new example and what it
	  will do.

Wed Dec 18 20:37:06 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* examples/handcrafted/Hello/run_test.pl: Added a script to
	  automate running this stuff.

	* examples/handcrafted/Hello/README: Replaced the reference to
	  CIAO_single_com_server to Simple_Component_Server.

Tue Dec 17 23:30:59 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* tools/CIAO_single_com_server/*:
	* tools/Simple_Component_Server/*: Changed the name of the simple
	  server from CIAO_single_com_server to Simple_Component_Server.
	  The original name didn't make too much sense at all.

Tue Dec 17 22:49:32 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/CIAO_Server.dsp:
	* ciao/HomeRegistrar.idl:
	* ciao/HomeRegistrar_i.{h,inl,cpp}: Added a NameService based
	  HomeFinder extension.  This interface defines the registration
	  operation, which is not defined in the CCM specification.  This
	  is part of the CIAO_Server library.

	* tools/CIAO_single_com_server/CIAO_single_com_server.cpp: Changed
	  to register installed components with the HomeRegistrar instead
	  of dumping the IOR into a file.  The only thing that gets dumped
	  into a file now is the IOR for the HomeFinder interface which
	  HomeRegistrar inherits.

	* examples/handecrafted/Hello/README: Added information on the
	  procedures one should follow to run this test.

	* examples/handcrafted/Hello/config: Updated the component server
	  config file to include the repo ids and canonical name for the
	  home.

	* examples/handcrafted/Hello/client.dsp:
	* examples/handcrafted/Hello/client.cpp: Changed to use acquire
	  the home object reference thru the HomeFinder interface, instead
	  of passing it in explicitly.

	* examples/handcrafted/Hello/hello.dsw:
	* examples/handcrafted/Hello/server.cpp:
	* examples/handcrafted/Hello/server.dsp: Removed server from the
	  workspace.  As we now have a true component server, we no longer
	  need a server process for this example.


Mon Dec 16 10:56:46 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* tools/CIAO_single_com_server/CIAO_single_com_server.cpp: Fixed
	  command line argument parsing problem.  We now process the
	  command line argument for ORB correctly.

Sun Dec 15 23:54:16 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* tools/CIAO_single_com_server/*: Added a new prototype component
	  server.  We can now run session components on a generic server
	  using a proprietary config file for component installation.

	* ciao/Container_Base.{h,cpp}: Fixed incorrect usage of ACE_DLL
	  where executor and servant Dlls got unloaded prematurely.

Wed Dec 11 14:39:08 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	  A lot have changed since last ChangeLog entry.  Most of the
	  changes are intermediate so I didn't even try to record them.

	* ciao/CCMCore.dsw:
	* ciao/CIAO_Container.dsp:
	* ciao/CIAO_Server.dsp: Moved Container_Base.* from CIAO_Container
	  library to CIAO_Server library.  These classes in Container_Base
	  are really run-time container management interfaces than
	  container interfaces themselves.

	* ciao/Container_Base.cpp:
	* ciao/Container_Base.h: Added _ciao_install_home which enable
	  installing a component home from relevant DLL named and entry
	  points.  We are not managing the lifecycle of DLL objects in the
	  implementation yet (we just never unlink DLL. :)  This will have
	  to be changed in the future.

	* examples/handcrafted/Hello/hello_servants.cpp:
	* examples/handcrafted/Hello/hello_servants.h: Added an entry
	  point "create_HelloWorld_Servant" so we can use the glue code
	  with the new "generic server."

	* examples/handcrafted/Hello/server.cpp:
	* examples/handcrafted/Hello/server.dsp: Reworked the server
	  implementation so that it is no longer tied to a specific
	  component implementation.  I.e., we can use the same server to
	  host any *one* component now.

	* examples/handcrafted/Hello/client.dsp: Added a missing link
	  directory.

Tue Nov 05 23:42:04 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* CCMCore.dsp:
	* CIAO_BaseC.cpp:
	* CIAO_BaseC.h:
	* CIAO_BaseC.i:
	* CIAO_ComponentC.cpp:
	* CIAO_ComponentC.h:
	* CIAO_ComponentC.i:
	* CIAO_ContainerC.cpp:
	* CIAO_ContainerC.h:
	* CIAO_ContainerC.i:
	* CIAO_Container_ExC.cpp:
	* CIAO_Container_ExC.h:
	* CIAO_Container_ExC.i:
	* CIAO_DeploymentC.cpp:
	* CIAO_DeploymentC.h:
	* CIAO_DeploymentC.i:
	* CIAO_EventC.cpp:
	* CIAO_EventC.h:
	* CIAO_EventC.i:
	* CIAO_TransactionC.cpp:
	* CIAO_TransactionC.h:
	* CIAO_TransactionC.i:
	* Component_BaseC.cpp:
	* Component_BaseC.h:
	* Component_BaseC.i:
	* Component_BaseS.cpp:
	* Component_BaseS.h:
	* Component_BaseS.i:
	* Component_BaseS_T.cpp:
	* Component_BaseS_T.h:
	* Component_BaseS_T.i:
	* CosPersistentStateC.cpp:
	* CosPersistentStateC.h:
	* CosPersistentStateC.i:
	* CosPersistentStateS.cpp:
	* CosPersistentStateS.h:
	* CosPersistentStateS.i:
	* CosPersistentStateS_T.cpp:
	* CosPersistentStateS_T.h:
	* CosPersistentStateS_T.i: Removed generated files.

	* CCMCore.dsw:
	* CIAO_CLIENT_Export.h:
	* CIAO_Client.dsp:
	* CIAO_Component.pidl:
	* CIAO_Container.dsp:
	* CIAO_Container_Export.h:
	* CIAO_SERVER_Export.h:
	* CIAO_Server.dsp:
	* README: Split up the CCM Core library into 3 libraries for clients,
	  component implementations, and component servers.

Thu Sep 26 15:20:13 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ciao/CCMCore.dsp:
	* ciao/CIAO_Base.pidl:
	* ciao/CIAO_BaseC.cpp:
	* ciao/CIAO_BaseC.h:
	* ciao/CIAO_BaseC.i:
	* ciao/CIAO_Component.pidl:
	* ciao/CIAO_ComponentC.cpp:
	* ciao/CIAO_ComponentC.h:
	* ciao/CIAO_ComponentC.i:
	* ciao/CIAO_Container.pidl:
	* ciao/CIAO_ContainerC.cpp:
	* ciao/CIAO_ContainerC.h:
	* ciao/CIAO_ContainerC.i:
	* ciao/CIAO_Container_Ex.pidl:
	* ciao/CIAO_Container_ExC.cpp:
	* ciao/CIAO_Container_ExC.h:
	* ciao/CIAO_Container_ExC.i:
	* ciao/CIAO_Deployment.pidl:
	* ciao/CIAO_DeploymentC.cpp:
	* ciao/CIAO_DeploymentC.h:
	* ciao/CIAO_DeploymentC.i:
	* ciao/CIAO_Event.pidl:
	* ciao/CIAO_EventC.cpp:
	* ciao/CIAO_EventC.h:
	* ciao/CIAO_EventC.i:
	* ciao/CIAO_Transaction.pidl:
	* ciao/CIAO_TransactionC.cpp:
	* ciao/CIAO_TransactionC.h:
	* ciao/CIAO_TransactionC.i: Changed to split the component idl
	  file into severl smaller idl files.

	* ciao/Makefile: An empty place holder for now.

	* ciao/Version.h:
	* ciao/ciao.rc: Added version information files.

Thu Jul 18 22:14:59 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* examples/handcrafted/Philosophers/Philosophers.idl (Example):

Mon Jun 17 17:35:31 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* docs/index.html:
	* docs/imgs/CCM.vsd:
	* docs/imgs/basic-container.png:
	* docs/imgs/component-basic.png:
	* docs/imgs/deployment.png:
	* docs/imgs/extended-container.png:
	* docs/imgs/home-config.png: Added CIAO documentation.
