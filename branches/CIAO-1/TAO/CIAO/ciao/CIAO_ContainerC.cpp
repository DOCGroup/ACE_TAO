// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:320

#include "CIAO_ContainerC.h"

#include "tao/Stub.h"
#include "tao/Invocation.h"
#include "tao/PortableInterceptor.h"

#if TAO_HAS_INTERCEPTORS == 1
#include "tao/RequestInfo_Util.h"
#include "tao/ClientRequestInfo_i.h"
#include "tao/ClientInterceptorAdapter.h"
#endif  /* TAO_HAS_INTERCEPTORS == 1 */

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "CIAO_ContainerC.i"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_Principal[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  37,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f50), 
  ACE_NTOHL (0x72696e63), 
  ACE_NTOHL (0x6970616c), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Components/Principal:1.0
  10,
  ACE_NTOHL (0x5072696e), 
  ACE_NTOHL (0x63697061), 
  ACE_NTOHL (0x6c000000),  // name = Principal
  CORBA::tk_objref, // typecode kind
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    43,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x53656375), 
    ACE_NTOHL (0x72697479), 
    ACE_NTOHL (0x4c657665), 
    ACE_NTOHL (0x6c322f43), 
    ACE_NTOHL (0x72656465), 
    ACE_NTOHL (0x6e746961), 
    ACE_NTOHL (0x6c733a31), 
    ACE_NTOHL (0x2e380000),  // repository ID = IDL:omg.org/SecurityLevel2/Credentials:1.8
    12,
    ACE_NTOHL (0x43726564), 
    ACE_NTOHL (0x656e7469), 
    ACE_NTOHL (0x616c7300),  // name = Credentials

};

static CORBA::TypeCode _tc_TAO_tc_Components_Principal (
    CORBA::tk_alias,
    sizeof (_oc_Components_Principal),
    (char *) &_oc_Components_Principal,
    0,
    sizeof (Components::Principal)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_Principal,
    &_tc_TAO_tc_Components_Principal
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Components::CCMContext::_tao_class_id = 0;

Components::CCMContext_ptr
tao_Components_CCMContext_duplicate (
    Components::CCMContext_ptr p
  )
{
  return Components::CCMContext::_duplicate (p);
}

void
tao_Components_CCMContext_release (
    Components::CCMContext_ptr p
  )
{
  CORBA::release (p);
}

Components::CCMContext_ptr
tao_Components_CCMContext_nil (
    void
  )
{
  return Components::CCMContext::_nil ();
}

Components::CCMContext_ptr
tao_Components_CCMContext_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Components::CCMContext::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
tao_Components_CCMContext_upcast (
    void *src
  )
{
  Components::CCMContext **tmp =
    ACE_static_cast (Components::CCMContext **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:721

// *************************************************************
// Components::CCMContext_var
// *************************************************************

Components::CCMContext_var::CCMContext_var (void)
  : ptr_ (CCMContext::_nil ())
{}

::Components::CCMContext_ptr
Components::CCMContext_var::ptr (void) const
{
  return this->ptr_;
}

Components::CCMContext_var::CCMContext_var (const ::Components::CCMContext_var &p)
  : TAO_Base_var (),
    ptr_ (CCMContext::_duplicate (p.ptr ()))
{}

Components::CCMContext_var::~CCMContext_var (void)
{
  CORBA::release (this->ptr_);
}

Components::CCMContext_var &
Components::CCMContext_var::operator= (CCMContext_ptr p)
{
  CORBA::release (this->ptr_);
  this->ptr_ = p;
  return *this;
}

Components::CCMContext_var &
Components::CCMContext_var::operator= (const ::Components::CCMContext_var &p)
{
  if (this != &p)
  {
    CORBA::release (this->ptr_);
    this->ptr_ = ::Components::CCMContext::_duplicate (p.ptr ());
  }
  return *this;
}

Components::CCMContext_var::operator const ::Components::CCMContext_ptr &() const // cast
{
  return this->ptr_;
}

Components::CCMContext_var::operator ::Components::CCMContext_ptr &() // cast 
{
  return this->ptr_;
}

::Components::CCMContext_ptr
Components::CCMContext_var::operator-> (void) const
{
  return this->ptr_;
}

::Components::CCMContext_ptr
Components::CCMContext_var::in (void) const
{
  return this->ptr_;
}

::Components::CCMContext_ptr &
Components::CCMContext_var::inout (void)
{
  return this->ptr_;
}

::Components::CCMContext_ptr &
Components::CCMContext_var::out (void)
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::CCMContext::_nil ();
  return this->ptr_;
}

::Components::CCMContext_ptr
Components::CCMContext_var::_retn (void)
{
  // yield ownership of managed obj reference
  ::Components::CCMContext_ptr val = this->ptr_;
  this->ptr_ = ::Components::CCMContext::_nil ();
  return val;
}

::Components::CCMContext_ptr
Components::CCMContext_var::tao_duplicate (CCMContext_ptr p)
{
  return ::Components::CCMContext::_duplicate (p);
}

void
Components::CCMContext_var::tao_release (CCMContext_ptr p)
{
  CORBA::release (p);
}

::Components::CCMContext_ptr
Components::CCMContext_var::tao_nil (void)
{
  return ::Components::CCMContext::_nil ();
}

::Components::CCMContext_ptr
Components::CCMContext_var::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return ::Components::CCMContext::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Components::CCMContext_var::tao_upcast (void *src)
{
  CCMContext **tmp =
    ACE_static_cast (CCMContext **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:1030

// *************************************************************
// Components::CCMContext_out
// *************************************************************

Components::CCMContext_out::CCMContext_out (CCMContext_ptr &p)
  : ptr_ (p)
{
  this->ptr_ = ::Components::CCMContext::_nil ();
}

Components::CCMContext_out::CCMContext_out (CCMContext_var &p)
  : ptr_ (p.out ())
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::CCMContext::_nil ();
}

Components::CCMContext_out::CCMContext_out (const ::Components::CCMContext_out &p)
  : ptr_ (ACE_const_cast (CCMContext_out &, p).ptr_)
{}

::Components::CCMContext_out &
Components::CCMContext_out::operator= (const ::Components::CCMContext_out &p)
{
  this->ptr_ = ACE_const_cast (CCMContext_out&, p).ptr_;
  return *this;
}

Components::CCMContext_out &
Components::CCMContext_out::operator= (const ::Components::CCMContext_var &p)
{
  this->ptr_ = ::Components::CCMContext::_duplicate (p.ptr ());
  return *this;
}

Components::CCMContext_out &
Components::CCMContext_out::operator= (CCMContext_ptr p)
{
  this->ptr_ = p;
  return *this;
}

Components::CCMContext_out::operator ::Components::CCMContext_ptr &() // cast
{
  return this->ptr_;
}

::Components::CCMContext_ptr &
Components::CCMContext_out::ptr (void)
{
  return this->ptr_;
}

::Components::CCMContext_ptr
Components::CCMContext_out::operator-> (void)
{
  return this->ptr_;
}

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:225

Components::CCMContext::CCMContext (void)
{}

Components::CCMContext::~CCMContext (void)
{}

void 
Components::CCMContext::_tao_any_destructor (void *_tao_void_pointer)
{
  CCMContext *tmp = ACE_static_cast (CCMContext *, _tao_void_pointer);
  CORBA::release (tmp);
}

Components::CCMContext_ptr
Components::CCMContext::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return CCMContext::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Components::CCMContext_ptr 
Components::CCMContext::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return CCMContext::_nil ();
    }
  
  return
      ACE_reinterpret_cast (
          CCMContext_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &CCMContext::_tao_class_id
                )
            )
        );
}

Components::CCMContext_ptr
Components::CCMContext::_duplicate (CCMContext_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void *Components::CCMContext::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;
  
  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, CCMContext)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }
  
  if (retv != 0)
    {
      this->_add_ref ();
    }
  
  return retv;
}

const char* Components::CCMContext::_interface_repository_id (void) const
{
  return "IDL:omg.org/Components/CCMContext:1.0";
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_CCMContext[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f43), 
  ACE_NTOHL (0x434d436f), 
  ACE_NTOHL (0x6e746578), 
  ACE_NTOHL (0x743a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Components/CCMContext:1.0
  11,
  ACE_NTOHL (0x43434d43), 
  ACE_NTOHL (0x6f6e7465), 
  ACE_NTOHL (0x78740000),  // name = CCMContext
};

static CORBA::TypeCode _tc_TAO_tc_Components_CCMContext (
    CORBA::tk_objref,
    sizeof (_oc_Components_CCMContext),
    (char *) &_oc_Components_CCMContext,
    0,
    sizeof (Components::CCMContext)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_CCMContext,
    &_tc_TAO_tc_Components_CCMContext
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_CCMExceptionReason[] =
{
  TAO_ENCAP_BYTE_ORDER, // byte order
  46,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f43), 
  ACE_NTOHL (0x434d4578), 
  ACE_NTOHL (0x63657074), 
  ACE_NTOHL (0x696f6e52), 
  ACE_NTOHL (0x6561736f), 
  ACE_NTOHL (0x6e3a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Components/CCMExceptionReason:1.0
19,
  ACE_NTOHL (0x43434d45), 
  ACE_NTOHL (0x78636570), 
  ACE_NTOHL (0x74696f6e), 
  ACE_NTOHL (0x52656173), 
  ACE_NTOHL (0x6f6e0000),  // name = CCMExceptionReason
  7, // member count
13,
  ACE_NTOHL (0x53595354), 
  ACE_NTOHL (0x454d5f45), 
  ACE_NTOHL (0x52524f52), 
  ACE_NTOHL (0x0),  // name = SYSTEM_ERROR
13,
  ACE_NTOHL (0x43524541), 
  ACE_NTOHL (0x54455f45), 
  ACE_NTOHL (0x52524f52), 
  ACE_NTOHL (0x0),  // name = CREATE_ERROR
13,
  ACE_NTOHL (0x52454d4f), 
  ACE_NTOHL (0x56455f45), 
  ACE_NTOHL (0x52524f52), 
  ACE_NTOHL (0x0),  // name = REMOVE_ERROR
14,
  ACE_NTOHL (0x4455504c), 
  ACE_NTOHL (0x49434154), 
  ACE_NTOHL (0x455f4b45), 
  ACE_NTOHL (0x59000000),  // name = DUPLICATE_KEY
11,
  ACE_NTOHL (0x46494e44), 
  ACE_NTOHL (0x5f455252), 
  ACE_NTOHL (0x4f520000),  // name = FIND_ERROR
17,
  ACE_NTOHL (0x4f424a45), 
  ACE_NTOHL (0x43545f4e), 
  ACE_NTOHL (0x4f545f46), 
  ACE_NTOHL (0x4f554e44), 
  ACE_NTOHL (0x0),  // name = OBJECT_NOT_FOUND
15,
  ACE_NTOHL (0x4e4f5f53), 
  ACE_NTOHL (0x5543485f), 
  ACE_NTOHL (0x454e5449), 
  ACE_NTOHL (0x54590000),  // name = NO_SUCH_ENTITY
};

static CORBA::TypeCode _tc_TAO_tc_Components_CCMExceptionReason (
    CORBA::tk_enum,
    sizeof (_oc_Components_CCMExceptionReason),
    (char *) &_oc_Components_CCMExceptionReason,
    0,
    sizeof (Components::CCMExceptionReason)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_CCMExceptionReason,
    &_tc_TAO_tc_Components_CCMExceptionReason
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_cs.cpp:63

Components::CCMException::CCMException (void)
  : CORBA_UserException (
        "IDL:omg.org/Components/CCMException:1.0",
        "CCMException"
      )
{
}

Components::CCMException::~CCMException (void)
{
}

Components::CCMException::CCMException (const ::Components::CCMException &_tao_excp)
  : CORBA_UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
  this->reason = _tao_excp.reason;
}

Components::CCMException&
Components::CCMException::operator= (const ::Components::CCMException &_tao_excp)
{
  this->CORBA_UserException::operator= (_tao_excp);
  this->reason = _tao_excp.reason;
  return *this;
}

void Components::CCMException::_tao_any_destructor (void *_tao_void_pointer)
{
  CCMException *tmp = ACE_static_cast (CCMException*, _tao_void_pointer);
  delete tmp;
}

Components::CCMException *
Components::CCMException::_downcast (CORBA::Exception *exc)
{
  if (!ACE_OS::strcmp ("IDL:omg.org/Components/CCMException:1.0", exc->_rep_id ()))
    {
      return ACE_dynamic_cast (CCMException *, exc);
    }
  else
    {
      return 0;
    }
}

CORBA::Exception *Components::CCMException::_alloc (void)
{
  CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::Components::CCMException, 0);
  return retval;
}

CORBA::Exception *
Components::CCMException::_tao_duplicate (void) const
{
  CORBA::Exception *result;
  ACE_NEW_RETURN (
      result,
      ::Components::CCMException (*this),
      0
    );
  return result;
}

void Components::CCMException::_raise (void)
{
  TAO_RAISE (*this);
}

void Components::CCMException::_tao_encode (
    TAO_OutputCDR &cdr
    ACE_ENV_ARG_DECL
  ) const
{
  if (cdr << *this)
    {
      return;
    }
  
  ACE_THROW (CORBA::MARSHAL ());
}

void Components::CCMException::_tao_decode (
    TAO_InputCDR &cdr
    ACE_ENV_ARG_DECL
  )
{
  if (cdr >> *this)
    {
      return;
    }
  
  ACE_THROW (CORBA::MARSHAL ());
}



// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66

Components::CCMException::CCMException (
    Components::CCMExceptionReason _tao_reason
  )  : CORBA_UserException (
        "IDL:omg.org/Components/CCMException:1.0",
        "CCMException"
      )
{
  this->reason = _tao_reason;
}

// TAO extension - the virtual _type method.
CORBA::TypeCode_ptr Components::CCMException::_type (void) const
{
  return ::Components::_tc_CCMException;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_CCMException[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f43), 
  ACE_NTOHL (0x434d4578), 
  ACE_NTOHL (0x63657074), 
  ACE_NTOHL (0x696f6e3a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Components/CCMException:1.0
  13,
  ACE_NTOHL (0x43434d45), 
  ACE_NTOHL (0x78636570), 
  ACE_NTOHL (0x74696f6e), 
  ACE_NTOHL (0x0),  // name = CCMException
  1, // member count
  7,
  ACE_NTOHL (0x72656173), 
  ACE_NTOHL (0x6f6e0000),  // name = reason
  CORBA::tk_enum, // typecode kind
  224, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
    46,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x436f6d70), 
    ACE_NTOHL (0x6f6e656e), 
    ACE_NTOHL (0x74732f43), 
    ACE_NTOHL (0x434d4578), 
    ACE_NTOHL (0x63657074), 
    ACE_NTOHL (0x696f6e52), 
    ACE_NTOHL (0x6561736f), 
    ACE_NTOHL (0x6e3a312e), 
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Components/CCMExceptionReason:1.0
19,
    ACE_NTOHL (0x43434d45), 
    ACE_NTOHL (0x78636570), 
    ACE_NTOHL (0x74696f6e), 
    ACE_NTOHL (0x52656173), 
    ACE_NTOHL (0x6f6e0000),  // name = CCMExceptionReason
    7, // member count
13,
    ACE_NTOHL (0x53595354), 
    ACE_NTOHL (0x454d5f45), 
    ACE_NTOHL (0x52524f52), 
    ACE_NTOHL (0x0),  // name = SYSTEM_ERROR
13,
    ACE_NTOHL (0x43524541), 
    ACE_NTOHL (0x54455f45), 
    ACE_NTOHL (0x52524f52), 
    ACE_NTOHL (0x0),  // name = CREATE_ERROR
13,
    ACE_NTOHL (0x52454d4f), 
    ACE_NTOHL (0x56455f45), 
    ACE_NTOHL (0x52524f52), 
    ACE_NTOHL (0x0),  // name = REMOVE_ERROR
14,
    ACE_NTOHL (0x4455504c), 
    ACE_NTOHL (0x49434154), 
    ACE_NTOHL (0x455f4b45), 
    ACE_NTOHL (0x59000000),  // name = DUPLICATE_KEY
11,
    ACE_NTOHL (0x46494e44), 
    ACE_NTOHL (0x5f455252), 
    ACE_NTOHL (0x4f520000),  // name = FIND_ERROR
17,
    ACE_NTOHL (0x4f424a45), 
    ACE_NTOHL (0x43545f4e), 
    ACE_NTOHL (0x4f545f46), 
    ACE_NTOHL (0x4f554e44), 
    ACE_NTOHL (0x0),  // name = OBJECT_NOT_FOUND
15,
    ACE_NTOHL (0x4e4f5f53), 
    ACE_NTOHL (0x5543485f), 
    ACE_NTOHL (0x454e5449), 
    ACE_NTOHL (0x54590000),  // name = NO_SUCH_ENTITY

};

static CORBA::TypeCode _tc_TAO_tc_Components_CCMException (
    CORBA::tk_except,
    sizeof (_oc_Components_CCMException),
    (char *) &_oc_Components_CCMException,
    0,
    sizeof (Components::CCMException)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_CCMException,
    &_tc_TAO_tc_Components_CCMException
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Components::EnterpriseComponent::_tao_class_id = 0;

Components::EnterpriseComponent_ptr
tao_Components_EnterpriseComponent_duplicate (
    Components::EnterpriseComponent_ptr p
  )
{
  return Components::EnterpriseComponent::_duplicate (p);
}

void
tao_Components_EnterpriseComponent_release (
    Components::EnterpriseComponent_ptr p
  )
{
  CORBA::release (p);
}

Components::EnterpriseComponent_ptr
tao_Components_EnterpriseComponent_nil (
    void
  )
{
  return Components::EnterpriseComponent::_nil ();
}

Components::EnterpriseComponent_ptr
tao_Components_EnterpriseComponent_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Components::EnterpriseComponent::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
tao_Components_EnterpriseComponent_upcast (
    void *src
  )
{
  Components::EnterpriseComponent **tmp =
    ACE_static_cast (Components::EnterpriseComponent **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:721

// *************************************************************
// Components::EnterpriseComponent_var
// *************************************************************

Components::EnterpriseComponent_var::EnterpriseComponent_var (void)
  : ptr_ (EnterpriseComponent::_nil ())
{}

::Components::EnterpriseComponent_ptr
Components::EnterpriseComponent_var::ptr (void) const
{
  return this->ptr_;
}

Components::EnterpriseComponent_var::EnterpriseComponent_var (const ::Components::EnterpriseComponent_var &p)
  : TAO_Base_var (),
    ptr_ (EnterpriseComponent::_duplicate (p.ptr ()))
{}

Components::EnterpriseComponent_var::~EnterpriseComponent_var (void)
{
  CORBA::release (this->ptr_);
}

Components::EnterpriseComponent_var &
Components::EnterpriseComponent_var::operator= (EnterpriseComponent_ptr p)
{
  CORBA::release (this->ptr_);
  this->ptr_ = p;
  return *this;
}

Components::EnterpriseComponent_var &
Components::EnterpriseComponent_var::operator= (const ::Components::EnterpriseComponent_var &p)
{
  if (this != &p)
  {
    CORBA::release (this->ptr_);
    this->ptr_ = ::Components::EnterpriseComponent::_duplicate (p.ptr ());
  }
  return *this;
}

Components::EnterpriseComponent_var::operator const ::Components::EnterpriseComponent_ptr &() const // cast
{
  return this->ptr_;
}

Components::EnterpriseComponent_var::operator ::Components::EnterpriseComponent_ptr &() // cast 
{
  return this->ptr_;
}

::Components::EnterpriseComponent_ptr
Components::EnterpriseComponent_var::operator-> (void) const
{
  return this->ptr_;
}

::Components::EnterpriseComponent_ptr
Components::EnterpriseComponent_var::in (void) const
{
  return this->ptr_;
}

::Components::EnterpriseComponent_ptr &
Components::EnterpriseComponent_var::inout (void)
{
  return this->ptr_;
}

::Components::EnterpriseComponent_ptr &
Components::EnterpriseComponent_var::out (void)
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::EnterpriseComponent::_nil ();
  return this->ptr_;
}

::Components::EnterpriseComponent_ptr
Components::EnterpriseComponent_var::_retn (void)
{
  // yield ownership of managed obj reference
  ::Components::EnterpriseComponent_ptr val = this->ptr_;
  this->ptr_ = ::Components::EnterpriseComponent::_nil ();
  return val;
}

::Components::EnterpriseComponent_ptr
Components::EnterpriseComponent_var::tao_duplicate (EnterpriseComponent_ptr p)
{
  return ::Components::EnterpriseComponent::_duplicate (p);
}

void
Components::EnterpriseComponent_var::tao_release (EnterpriseComponent_ptr p)
{
  CORBA::release (p);
}

::Components::EnterpriseComponent_ptr
Components::EnterpriseComponent_var::tao_nil (void)
{
  return ::Components::EnterpriseComponent::_nil ();
}

::Components::EnterpriseComponent_ptr
Components::EnterpriseComponent_var::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return ::Components::EnterpriseComponent::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Components::EnterpriseComponent_var::tao_upcast (void *src)
{
  EnterpriseComponent **tmp =
    ACE_static_cast (EnterpriseComponent **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:1030

// *************************************************************
// Components::EnterpriseComponent_out
// *************************************************************

Components::EnterpriseComponent_out::EnterpriseComponent_out (EnterpriseComponent_ptr &p)
  : ptr_ (p)
{
  this->ptr_ = ::Components::EnterpriseComponent::_nil ();
}

Components::EnterpriseComponent_out::EnterpriseComponent_out (EnterpriseComponent_var &p)
  : ptr_ (p.out ())
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::EnterpriseComponent::_nil ();
}

Components::EnterpriseComponent_out::EnterpriseComponent_out (const ::Components::EnterpriseComponent_out &p)
  : ptr_ (ACE_const_cast (EnterpriseComponent_out &, p).ptr_)
{}

::Components::EnterpriseComponent_out &
Components::EnterpriseComponent_out::operator= (const ::Components::EnterpriseComponent_out &p)
{
  this->ptr_ = ACE_const_cast (EnterpriseComponent_out&, p).ptr_;
  return *this;
}

Components::EnterpriseComponent_out &
Components::EnterpriseComponent_out::operator= (const ::Components::EnterpriseComponent_var &p)
{
  this->ptr_ = ::Components::EnterpriseComponent::_duplicate (p.ptr ());
  return *this;
}

Components::EnterpriseComponent_out &
Components::EnterpriseComponent_out::operator= (EnterpriseComponent_ptr p)
{
  this->ptr_ = p;
  return *this;
}

Components::EnterpriseComponent_out::operator ::Components::EnterpriseComponent_ptr &() // cast
{
  return this->ptr_;
}

::Components::EnterpriseComponent_ptr &
Components::EnterpriseComponent_out::ptr (void)
{
  return this->ptr_;
}

::Components::EnterpriseComponent_ptr
Components::EnterpriseComponent_out::operator-> (void)
{
  return this->ptr_;
}

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:225

Components::EnterpriseComponent::EnterpriseComponent (void)
{}

Components::EnterpriseComponent::~EnterpriseComponent (void)
{}

void 
Components::EnterpriseComponent::_tao_any_destructor (void *_tao_void_pointer)
{
  EnterpriseComponent *tmp = ACE_static_cast (EnterpriseComponent *, _tao_void_pointer);
  CORBA::release (tmp);
}

Components::EnterpriseComponent_ptr
Components::EnterpriseComponent::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return EnterpriseComponent::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Components::EnterpriseComponent_ptr 
Components::EnterpriseComponent::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return EnterpriseComponent::_nil ();
    }
  
  return
      ACE_reinterpret_cast (
          EnterpriseComponent_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &EnterpriseComponent::_tao_class_id
                )
            )
        );
}

Components::EnterpriseComponent_ptr
Components::EnterpriseComponent::_duplicate (EnterpriseComponent_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void *Components::EnterpriseComponent::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;
  
  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, EnterpriseComponent)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }
  
  if (retv != 0)
    {
      this->_add_ref ();
    }
  
  return retv;
}

const char* Components::EnterpriseComponent::_interface_repository_id (void) const
{
  return "IDL:omg.org/Components/EnterpriseComponent:1.0";
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_EnterpriseComponent[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  47,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f45), 
  ACE_NTOHL (0x6e746572), 
  ACE_NTOHL (0x70726973), 
  ACE_NTOHL (0x65436f6d), 
  ACE_NTOHL (0x706f6e65), 
  ACE_NTOHL (0x6e743a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Components/EnterpriseComponent:1.0
  20,
  ACE_NTOHL (0x456e7465), 
  ACE_NTOHL (0x72707269), 
  ACE_NTOHL (0x7365436f), 
  ACE_NTOHL (0x6d706f6e), 
  ACE_NTOHL (0x656e7400),  // name = EnterpriseComponent
};

static CORBA::TypeCode _tc_TAO_tc_Components_EnterpriseComponent (
    CORBA::tk_objref,
    sizeof (_oc_Components_EnterpriseComponent),
    (char *) &_oc_Components_EnterpriseComponent,
    0,
    sizeof (Components::EnterpriseComponent)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_EnterpriseComponent,
    &_tc_TAO_tc_Components_EnterpriseComponent
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Components::SessionContext::_tao_class_id = 0;

Components::SessionContext_ptr
tao_Components_SessionContext_duplicate (
    Components::SessionContext_ptr p
  )
{
  return Components::SessionContext::_duplicate (p);
}

void
tao_Components_SessionContext_release (
    Components::SessionContext_ptr p
  )
{
  CORBA::release (p);
}

Components::SessionContext_ptr
tao_Components_SessionContext_nil (
    void
  )
{
  return Components::SessionContext::_nil ();
}

Components::SessionContext_ptr
tao_Components_SessionContext_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Components::SessionContext::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
tao_Components_SessionContext_upcast (
    void *src
  )
{
  Components::SessionContext **tmp =
    ACE_static_cast (Components::SessionContext **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:721

// *************************************************************
// Components::SessionContext_var
// *************************************************************

Components::SessionContext_var::SessionContext_var (void)
  : ptr_ (SessionContext::_nil ())
{}

::Components::SessionContext_ptr
Components::SessionContext_var::ptr (void) const
{
  return this->ptr_;
}

Components::SessionContext_var::SessionContext_var (const ::Components::SessionContext_var &p)
  : TAO_Base_var (),
    ptr_ (SessionContext::_duplicate (p.ptr ()))
{}

Components::SessionContext_var::~SessionContext_var (void)
{
  CORBA::release (this->ptr_);
}

Components::SessionContext_var &
Components::SessionContext_var::operator= (SessionContext_ptr p)
{
  CORBA::release (this->ptr_);
  this->ptr_ = p;
  return *this;
}

Components::SessionContext_var &
Components::SessionContext_var::operator= (const ::Components::SessionContext_var &p)
{
  if (this != &p)
  {
    CORBA::release (this->ptr_);
    this->ptr_ = ::Components::SessionContext::_duplicate (p.ptr ());
  }
  return *this;
}

Components::SessionContext_var::operator const ::Components::SessionContext_ptr &() const // cast
{
  return this->ptr_;
}

Components::SessionContext_var::operator ::Components::SessionContext_ptr &() // cast 
{
  return this->ptr_;
}

::Components::SessionContext_ptr
Components::SessionContext_var::operator-> (void) const
{
  return this->ptr_;
}

::Components::SessionContext_ptr
Components::SessionContext_var::in (void) const
{
  return this->ptr_;
}

::Components::SessionContext_ptr &
Components::SessionContext_var::inout (void)
{
  return this->ptr_;
}

::Components::SessionContext_ptr &
Components::SessionContext_var::out (void)
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::SessionContext::_nil ();
  return this->ptr_;
}

::Components::SessionContext_ptr
Components::SessionContext_var::_retn (void)
{
  // yield ownership of managed obj reference
  ::Components::SessionContext_ptr val = this->ptr_;
  this->ptr_ = ::Components::SessionContext::_nil ();
  return val;
}

::Components::SessionContext_ptr
Components::SessionContext_var::tao_duplicate (SessionContext_ptr p)
{
  return ::Components::SessionContext::_duplicate (p);
}

void
Components::SessionContext_var::tao_release (SessionContext_ptr p)
{
  CORBA::release (p);
}

::Components::SessionContext_ptr
Components::SessionContext_var::tao_nil (void)
{
  return ::Components::SessionContext::_nil ();
}

::Components::SessionContext_ptr
Components::SessionContext_var::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return ::Components::SessionContext::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Components::SessionContext_var::tao_upcast (void *src)
{
  SessionContext **tmp =
    ACE_static_cast (SessionContext **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:1030

// *************************************************************
// Components::SessionContext_out
// *************************************************************

Components::SessionContext_out::SessionContext_out (SessionContext_ptr &p)
  : ptr_ (p)
{
  this->ptr_ = ::Components::SessionContext::_nil ();
}

Components::SessionContext_out::SessionContext_out (SessionContext_var &p)
  : ptr_ (p.out ())
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::SessionContext::_nil ();
}

Components::SessionContext_out::SessionContext_out (const ::Components::SessionContext_out &p)
  : ptr_ (ACE_const_cast (SessionContext_out &, p).ptr_)
{}

::Components::SessionContext_out &
Components::SessionContext_out::operator= (const ::Components::SessionContext_out &p)
{
  this->ptr_ = ACE_const_cast (SessionContext_out&, p).ptr_;
  return *this;
}

Components::SessionContext_out &
Components::SessionContext_out::operator= (const ::Components::SessionContext_var &p)
{
  this->ptr_ = ::Components::SessionContext::_duplicate (p.ptr ());
  return *this;
}

Components::SessionContext_out &
Components::SessionContext_out::operator= (SessionContext_ptr p)
{
  this->ptr_ = p;
  return *this;
}

Components::SessionContext_out::operator ::Components::SessionContext_ptr &() // cast
{
  return this->ptr_;
}

::Components::SessionContext_ptr &
Components::SessionContext_out::ptr (void)
{
  return this->ptr_;
}

::Components::SessionContext_ptr
Components::SessionContext_out::operator-> (void)
{
  return this->ptr_;
}

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:225

Components::SessionContext::SessionContext (void)
{}

Components::SessionContext::~SessionContext (void)
{}

void 
Components::SessionContext::_tao_any_destructor (void *_tao_void_pointer)
{
  SessionContext *tmp = ACE_static_cast (SessionContext *, _tao_void_pointer);
  CORBA::release (tmp);
}

Components::SessionContext_ptr
Components::SessionContext::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return SessionContext::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Components::SessionContext_ptr 
Components::SessionContext::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return SessionContext::_nil ();
    }
  
  return
      ACE_reinterpret_cast (
          SessionContext_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &SessionContext::_tao_class_id
                )
            )
        );
}

Components::SessionContext_ptr
Components::SessionContext::_duplicate (SessionContext_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void *Components::SessionContext::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;
  
  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, SessionContext)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, CCMContext)::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                Components::CCMContext_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }
  
  if (retv != 0)
    {
      this->_add_ref ();
    }
  
  return retv;
}

const char* Components::SessionContext::_interface_repository_id (void) const
{
  return "IDL:omg.org/Components/SessionContext:1.0";
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_SessionContext[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  42,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f53), 
  ACE_NTOHL (0x65737369), 
  ACE_NTOHL (0x6f6e436f), 
  ACE_NTOHL (0x6e746578), 
  ACE_NTOHL (0x743a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Components/SessionContext:1.0
  15,
  ACE_NTOHL (0x53657373), 
  ACE_NTOHL (0x696f6e43), 
  ACE_NTOHL (0x6f6e7465), 
  ACE_NTOHL (0x78740000),  // name = SessionContext
};

static CORBA::TypeCode _tc_TAO_tc_Components_SessionContext (
    CORBA::tk_objref,
    sizeof (_oc_Components_SessionContext),
    (char *) &_oc_Components_SessionContext,
    0,
    sizeof (Components::SessionContext)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_SessionContext,
    &_tc_TAO_tc_Components_SessionContext
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Components::SessionComponent::_tao_class_id = 0;

Components::SessionComponent_ptr
tao_Components_SessionComponent_duplicate (
    Components::SessionComponent_ptr p
  )
{
  return Components::SessionComponent::_duplicate (p);
}

void
tao_Components_SessionComponent_release (
    Components::SessionComponent_ptr p
  )
{
  CORBA::release (p);
}

Components::SessionComponent_ptr
tao_Components_SessionComponent_nil (
    void
  )
{
  return Components::SessionComponent::_nil ();
}

Components::SessionComponent_ptr
tao_Components_SessionComponent_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Components::SessionComponent::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
tao_Components_SessionComponent_upcast (
    void *src
  )
{
  Components::SessionComponent **tmp =
    ACE_static_cast (Components::SessionComponent **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:721

// *************************************************************
// Components::SessionComponent_var
// *************************************************************

Components::SessionComponent_var::SessionComponent_var (void)
  : ptr_ (SessionComponent::_nil ())
{}

::Components::SessionComponent_ptr
Components::SessionComponent_var::ptr (void) const
{
  return this->ptr_;
}

Components::SessionComponent_var::SessionComponent_var (const ::Components::SessionComponent_var &p)
  : TAO_Base_var (),
    ptr_ (SessionComponent::_duplicate (p.ptr ()))
{}

Components::SessionComponent_var::~SessionComponent_var (void)
{
  CORBA::release (this->ptr_);
}

Components::SessionComponent_var &
Components::SessionComponent_var::operator= (SessionComponent_ptr p)
{
  CORBA::release (this->ptr_);
  this->ptr_ = p;
  return *this;
}

Components::SessionComponent_var &
Components::SessionComponent_var::operator= (const ::Components::SessionComponent_var &p)
{
  if (this != &p)
  {
    CORBA::release (this->ptr_);
    this->ptr_ = ::Components::SessionComponent::_duplicate (p.ptr ());
  }
  return *this;
}

Components::SessionComponent_var::operator const ::Components::SessionComponent_ptr &() const // cast
{
  return this->ptr_;
}

Components::SessionComponent_var::operator ::Components::SessionComponent_ptr &() // cast 
{
  return this->ptr_;
}

::Components::SessionComponent_ptr
Components::SessionComponent_var::operator-> (void) const
{
  return this->ptr_;
}

::Components::SessionComponent_ptr
Components::SessionComponent_var::in (void) const
{
  return this->ptr_;
}

::Components::SessionComponent_ptr &
Components::SessionComponent_var::inout (void)
{
  return this->ptr_;
}

::Components::SessionComponent_ptr &
Components::SessionComponent_var::out (void)
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::SessionComponent::_nil ();
  return this->ptr_;
}

::Components::SessionComponent_ptr
Components::SessionComponent_var::_retn (void)
{
  // yield ownership of managed obj reference
  ::Components::SessionComponent_ptr val = this->ptr_;
  this->ptr_ = ::Components::SessionComponent::_nil ();
  return val;
}

::Components::SessionComponent_ptr
Components::SessionComponent_var::tao_duplicate (SessionComponent_ptr p)
{
  return ::Components::SessionComponent::_duplicate (p);
}

void
Components::SessionComponent_var::tao_release (SessionComponent_ptr p)
{
  CORBA::release (p);
}

::Components::SessionComponent_ptr
Components::SessionComponent_var::tao_nil (void)
{
  return ::Components::SessionComponent::_nil ();
}

::Components::SessionComponent_ptr
Components::SessionComponent_var::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return ::Components::SessionComponent::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Components::SessionComponent_var::tao_upcast (void *src)
{
  SessionComponent **tmp =
    ACE_static_cast (SessionComponent **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:1030

// *************************************************************
// Components::SessionComponent_out
// *************************************************************

Components::SessionComponent_out::SessionComponent_out (SessionComponent_ptr &p)
  : ptr_ (p)
{
  this->ptr_ = ::Components::SessionComponent::_nil ();
}

Components::SessionComponent_out::SessionComponent_out (SessionComponent_var &p)
  : ptr_ (p.out ())
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::SessionComponent::_nil ();
}

Components::SessionComponent_out::SessionComponent_out (const ::Components::SessionComponent_out &p)
  : ptr_ (ACE_const_cast (SessionComponent_out &, p).ptr_)
{}

::Components::SessionComponent_out &
Components::SessionComponent_out::operator= (const ::Components::SessionComponent_out &p)
{
  this->ptr_ = ACE_const_cast (SessionComponent_out&, p).ptr_;
  return *this;
}

Components::SessionComponent_out &
Components::SessionComponent_out::operator= (const ::Components::SessionComponent_var &p)
{
  this->ptr_ = ::Components::SessionComponent::_duplicate (p.ptr ());
  return *this;
}

Components::SessionComponent_out &
Components::SessionComponent_out::operator= (SessionComponent_ptr p)
{
  this->ptr_ = p;
  return *this;
}

Components::SessionComponent_out::operator ::Components::SessionComponent_ptr &() // cast
{
  return this->ptr_;
}

::Components::SessionComponent_ptr &
Components::SessionComponent_out::ptr (void)
{
  return this->ptr_;
}

::Components::SessionComponent_ptr
Components::SessionComponent_out::operator-> (void)
{
  return this->ptr_;
}

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:225

Components::SessionComponent::SessionComponent (void)
{}

Components::SessionComponent::~SessionComponent (void)
{}

void 
Components::SessionComponent::_tao_any_destructor (void *_tao_void_pointer)
{
  SessionComponent *tmp = ACE_static_cast (SessionComponent *, _tao_void_pointer);
  CORBA::release (tmp);
}

Components::SessionComponent_ptr
Components::SessionComponent::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return SessionComponent::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Components::SessionComponent_ptr 
Components::SessionComponent::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return SessionComponent::_nil ();
    }
  
  return
      ACE_reinterpret_cast (
          SessionComponent_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &SessionComponent::_tao_class_id
                )
            )
        );
}

Components::SessionComponent_ptr
Components::SessionComponent::_duplicate (SessionComponent_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void *Components::SessionComponent::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;
  
  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, SessionComponent)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, EnterpriseComponent)::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                Components::EnterpriseComponent_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }
  
  if (retv != 0)
    {
      this->_add_ref ();
    }
  
  return retv;
}

const char* Components::SessionComponent::_interface_repository_id (void) const
{
  return "IDL:omg.org/Components/SessionComponent:1.0";
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_SessionComponent[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  44,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f53), 
  ACE_NTOHL (0x65737369), 
  ACE_NTOHL (0x6f6e436f), 
  ACE_NTOHL (0x6d706f6e), 
  ACE_NTOHL (0x656e743a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Components/SessionComponent:1.0
  17,
  ACE_NTOHL (0x53657373), 
  ACE_NTOHL (0x696f6e43), 
  ACE_NTOHL (0x6f6d706f), 
  ACE_NTOHL (0x6e656e74), 
  ACE_NTOHL (0x0),  // name = SessionComponent
};

static CORBA::TypeCode _tc_TAO_tc_Components_SessionComponent (
    CORBA::tk_objref,
    sizeof (_oc_Components_SessionComponent),
    (char *) &_oc_Components_SessionComponent,
    0,
    sizeof (Components::SessionComponent)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_SessionComponent,
    &_tc_TAO_tc_Components_SessionComponent
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Components::SessionSynchronization::_tao_class_id = 0;

Components::SessionSynchronization_ptr
tao_Components_SessionSynchronization_duplicate (
    Components::SessionSynchronization_ptr p
  )
{
  return Components::SessionSynchronization::_duplicate (p);
}

void
tao_Components_SessionSynchronization_release (
    Components::SessionSynchronization_ptr p
  )
{
  CORBA::release (p);
}

Components::SessionSynchronization_ptr
tao_Components_SessionSynchronization_nil (
    void
  )
{
  return Components::SessionSynchronization::_nil ();
}

Components::SessionSynchronization_ptr
tao_Components_SessionSynchronization_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Components::SessionSynchronization::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
tao_Components_SessionSynchronization_upcast (
    void *src
  )
{
  Components::SessionSynchronization **tmp =
    ACE_static_cast (Components::SessionSynchronization **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:721

// *************************************************************
// Components::SessionSynchronization_var
// *************************************************************

Components::SessionSynchronization_var::SessionSynchronization_var (void)
  : ptr_ (SessionSynchronization::_nil ())
{}

::Components::SessionSynchronization_ptr
Components::SessionSynchronization_var::ptr (void) const
{
  return this->ptr_;
}

Components::SessionSynchronization_var::SessionSynchronization_var (const ::Components::SessionSynchronization_var &p)
  : TAO_Base_var (),
    ptr_ (SessionSynchronization::_duplicate (p.ptr ()))
{}

Components::SessionSynchronization_var::~SessionSynchronization_var (void)
{
  CORBA::release (this->ptr_);
}

Components::SessionSynchronization_var &
Components::SessionSynchronization_var::operator= (SessionSynchronization_ptr p)
{
  CORBA::release (this->ptr_);
  this->ptr_ = p;
  return *this;
}

Components::SessionSynchronization_var &
Components::SessionSynchronization_var::operator= (const ::Components::SessionSynchronization_var &p)
{
  if (this != &p)
  {
    CORBA::release (this->ptr_);
    this->ptr_ = ::Components::SessionSynchronization::_duplicate (p.ptr ());
  }
  return *this;
}

Components::SessionSynchronization_var::operator const ::Components::SessionSynchronization_ptr &() const // cast
{
  return this->ptr_;
}

Components::SessionSynchronization_var::operator ::Components::SessionSynchronization_ptr &() // cast 
{
  return this->ptr_;
}

::Components::SessionSynchronization_ptr
Components::SessionSynchronization_var::operator-> (void) const
{
  return this->ptr_;
}

::Components::SessionSynchronization_ptr
Components::SessionSynchronization_var::in (void) const
{
  return this->ptr_;
}

::Components::SessionSynchronization_ptr &
Components::SessionSynchronization_var::inout (void)
{
  return this->ptr_;
}

::Components::SessionSynchronization_ptr &
Components::SessionSynchronization_var::out (void)
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::SessionSynchronization::_nil ();
  return this->ptr_;
}

::Components::SessionSynchronization_ptr
Components::SessionSynchronization_var::_retn (void)
{
  // yield ownership of managed obj reference
  ::Components::SessionSynchronization_ptr val = this->ptr_;
  this->ptr_ = ::Components::SessionSynchronization::_nil ();
  return val;
}

::Components::SessionSynchronization_ptr
Components::SessionSynchronization_var::tao_duplicate (SessionSynchronization_ptr p)
{
  return ::Components::SessionSynchronization::_duplicate (p);
}

void
Components::SessionSynchronization_var::tao_release (SessionSynchronization_ptr p)
{
  CORBA::release (p);
}

::Components::SessionSynchronization_ptr
Components::SessionSynchronization_var::tao_nil (void)
{
  return ::Components::SessionSynchronization::_nil ();
}

::Components::SessionSynchronization_ptr
Components::SessionSynchronization_var::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return ::Components::SessionSynchronization::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Components::SessionSynchronization_var::tao_upcast (void *src)
{
  SessionSynchronization **tmp =
    ACE_static_cast (SessionSynchronization **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:1030

// *************************************************************
// Components::SessionSynchronization_out
// *************************************************************

Components::SessionSynchronization_out::SessionSynchronization_out (SessionSynchronization_ptr &p)
  : ptr_ (p)
{
  this->ptr_ = ::Components::SessionSynchronization::_nil ();
}

Components::SessionSynchronization_out::SessionSynchronization_out (SessionSynchronization_var &p)
  : ptr_ (p.out ())
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::SessionSynchronization::_nil ();
}

Components::SessionSynchronization_out::SessionSynchronization_out (const ::Components::SessionSynchronization_out &p)
  : ptr_ (ACE_const_cast (SessionSynchronization_out &, p).ptr_)
{}

::Components::SessionSynchronization_out &
Components::SessionSynchronization_out::operator= (const ::Components::SessionSynchronization_out &p)
{
  this->ptr_ = ACE_const_cast (SessionSynchronization_out&, p).ptr_;
  return *this;
}

Components::SessionSynchronization_out &
Components::SessionSynchronization_out::operator= (const ::Components::SessionSynchronization_var &p)
{
  this->ptr_ = ::Components::SessionSynchronization::_duplicate (p.ptr ());
  return *this;
}

Components::SessionSynchronization_out &
Components::SessionSynchronization_out::operator= (SessionSynchronization_ptr p)
{
  this->ptr_ = p;
  return *this;
}

Components::SessionSynchronization_out::operator ::Components::SessionSynchronization_ptr &() // cast
{
  return this->ptr_;
}

::Components::SessionSynchronization_ptr &
Components::SessionSynchronization_out::ptr (void)
{
  return this->ptr_;
}

::Components::SessionSynchronization_ptr
Components::SessionSynchronization_out::operator-> (void)
{
  return this->ptr_;
}

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:225

Components::SessionSynchronization::SessionSynchronization (void)
{}

Components::SessionSynchronization::~SessionSynchronization (void)
{}

void 
Components::SessionSynchronization::_tao_any_destructor (void *_tao_void_pointer)
{
  SessionSynchronization *tmp = ACE_static_cast (SessionSynchronization *, _tao_void_pointer);
  CORBA::release (tmp);
}

Components::SessionSynchronization_ptr
Components::SessionSynchronization::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return SessionSynchronization::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Components::SessionSynchronization_ptr 
Components::SessionSynchronization::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return SessionSynchronization::_nil ();
    }
  
  return
      ACE_reinterpret_cast (
          SessionSynchronization_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &SessionSynchronization::_tao_class_id
                )
            )
        );
}

Components::SessionSynchronization_ptr
Components::SessionSynchronization::_duplicate (SessionSynchronization_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void *Components::SessionSynchronization::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;
  
  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, SessionSynchronization)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }
  
  if (retv != 0)
    {
      this->_add_ref ();
    }
  
  return retv;
}

const char* Components::SessionSynchronization::_interface_repository_id (void) const
{
  return "IDL:omg.org/Components/SessionSynchronization:1.0";
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_SessionSynchronization[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  50,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f53), 
  ACE_NTOHL (0x65737369), 
  ACE_NTOHL (0x6f6e5379), 
  ACE_NTOHL (0x6e636872), 
  ACE_NTOHL (0x6f6e697a), 
  ACE_NTOHL (0x6174696f), 
  ACE_NTOHL (0x6e3a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Components/SessionSynchronization:1.0
  23,
  ACE_NTOHL (0x53657373), 
  ACE_NTOHL (0x696f6e53), 
  ACE_NTOHL (0x796e6368), 
  ACE_NTOHL (0x726f6e69), 
  ACE_NTOHL (0x7a617469), 
  ACE_NTOHL (0x6f6e0000),  // name = SessionSynchronization
};

static CORBA::TypeCode _tc_TAO_tc_Components_SessionSynchronization (
    CORBA::tk_objref,
    sizeof (_oc_Components_SessionSynchronization),
    (char *) &_oc_Components_SessionSynchronization,
    0,
    sizeof (Components::SessionSynchronization)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_SessionSynchronization,
    &_tc_TAO_tc_Components_SessionSynchronization
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Components::EntityContext::_tao_class_id = 0;

Components::EntityContext_ptr
tao_Components_EntityContext_duplicate (
    Components::EntityContext_ptr p
  )
{
  return Components::EntityContext::_duplicate (p);
}

void
tao_Components_EntityContext_release (
    Components::EntityContext_ptr p
  )
{
  CORBA::release (p);
}

Components::EntityContext_ptr
tao_Components_EntityContext_nil (
    void
  )
{
  return Components::EntityContext::_nil ();
}

Components::EntityContext_ptr
tao_Components_EntityContext_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Components::EntityContext::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
tao_Components_EntityContext_upcast (
    void *src
  )
{
  Components::EntityContext **tmp =
    ACE_static_cast (Components::EntityContext **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:721

// *************************************************************
// Components::EntityContext_var
// *************************************************************

Components::EntityContext_var::EntityContext_var (void)
  : ptr_ (EntityContext::_nil ())
{}

::Components::EntityContext_ptr
Components::EntityContext_var::ptr (void) const
{
  return this->ptr_;
}

Components::EntityContext_var::EntityContext_var (const ::Components::EntityContext_var &p)
  : TAO_Base_var (),
    ptr_ (EntityContext::_duplicate (p.ptr ()))
{}

Components::EntityContext_var::~EntityContext_var (void)
{
  CORBA::release (this->ptr_);
}

Components::EntityContext_var &
Components::EntityContext_var::operator= (EntityContext_ptr p)
{
  CORBA::release (this->ptr_);
  this->ptr_ = p;
  return *this;
}

Components::EntityContext_var &
Components::EntityContext_var::operator= (const ::Components::EntityContext_var &p)
{
  if (this != &p)
  {
    CORBA::release (this->ptr_);
    this->ptr_ = ::Components::EntityContext::_duplicate (p.ptr ());
  }
  return *this;
}

Components::EntityContext_var::operator const ::Components::EntityContext_ptr &() const // cast
{
  return this->ptr_;
}

Components::EntityContext_var::operator ::Components::EntityContext_ptr &() // cast 
{
  return this->ptr_;
}

::Components::EntityContext_ptr
Components::EntityContext_var::operator-> (void) const
{
  return this->ptr_;
}

::Components::EntityContext_ptr
Components::EntityContext_var::in (void) const
{
  return this->ptr_;
}

::Components::EntityContext_ptr &
Components::EntityContext_var::inout (void)
{
  return this->ptr_;
}

::Components::EntityContext_ptr &
Components::EntityContext_var::out (void)
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::EntityContext::_nil ();
  return this->ptr_;
}

::Components::EntityContext_ptr
Components::EntityContext_var::_retn (void)
{
  // yield ownership of managed obj reference
  ::Components::EntityContext_ptr val = this->ptr_;
  this->ptr_ = ::Components::EntityContext::_nil ();
  return val;
}

::Components::EntityContext_ptr
Components::EntityContext_var::tao_duplicate (EntityContext_ptr p)
{
  return ::Components::EntityContext::_duplicate (p);
}

void
Components::EntityContext_var::tao_release (EntityContext_ptr p)
{
  CORBA::release (p);
}

::Components::EntityContext_ptr
Components::EntityContext_var::tao_nil (void)
{
  return ::Components::EntityContext::_nil ();
}

::Components::EntityContext_ptr
Components::EntityContext_var::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return ::Components::EntityContext::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Components::EntityContext_var::tao_upcast (void *src)
{
  EntityContext **tmp =
    ACE_static_cast (EntityContext **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:1030

// *************************************************************
// Components::EntityContext_out
// *************************************************************

Components::EntityContext_out::EntityContext_out (EntityContext_ptr &p)
  : ptr_ (p)
{
  this->ptr_ = ::Components::EntityContext::_nil ();
}

Components::EntityContext_out::EntityContext_out (EntityContext_var &p)
  : ptr_ (p.out ())
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::EntityContext::_nil ();
}

Components::EntityContext_out::EntityContext_out (const ::Components::EntityContext_out &p)
  : ptr_ (ACE_const_cast (EntityContext_out &, p).ptr_)
{}

::Components::EntityContext_out &
Components::EntityContext_out::operator= (const ::Components::EntityContext_out &p)
{
  this->ptr_ = ACE_const_cast (EntityContext_out&, p).ptr_;
  return *this;
}

Components::EntityContext_out &
Components::EntityContext_out::operator= (const ::Components::EntityContext_var &p)
{
  this->ptr_ = ::Components::EntityContext::_duplicate (p.ptr ());
  return *this;
}

Components::EntityContext_out &
Components::EntityContext_out::operator= (EntityContext_ptr p)
{
  this->ptr_ = p;
  return *this;
}

Components::EntityContext_out::operator ::Components::EntityContext_ptr &() // cast
{
  return this->ptr_;
}

::Components::EntityContext_ptr &
Components::EntityContext_out::ptr (void)
{
  return this->ptr_;
}

::Components::EntityContext_ptr
Components::EntityContext_out::operator-> (void)
{
  return this->ptr_;
}

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:225

Components::EntityContext::EntityContext (void)
{}

Components::EntityContext::~EntityContext (void)
{}

void 
Components::EntityContext::_tao_any_destructor (void *_tao_void_pointer)
{
  EntityContext *tmp = ACE_static_cast (EntityContext *, _tao_void_pointer);
  CORBA::release (tmp);
}

Components::EntityContext_ptr
Components::EntityContext::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return EntityContext::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Components::EntityContext_ptr 
Components::EntityContext::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return EntityContext::_nil ();
    }
  
  return
      ACE_reinterpret_cast (
          EntityContext_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &EntityContext::_tao_class_id
                )
            )
        );
}

Components::EntityContext_ptr
Components::EntityContext::_duplicate (EntityContext_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void *Components::EntityContext::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;
  
  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, EntityContext)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, CCMContext)::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                Components::CCMContext_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }
  
  if (retv != 0)
    {
      this->_add_ref ();
    }
  
  return retv;
}

const char* Components::EntityContext::_interface_repository_id (void) const
{
  return "IDL:omg.org/Components/EntityContext:1.0";
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_EntityContext[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  41,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f45), 
  ACE_NTOHL (0x6e746974), 
  ACE_NTOHL (0x79436f6e), 
  ACE_NTOHL (0x74657874), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Components/EntityContext:1.0
  14,
  ACE_NTOHL (0x456e7469), 
  ACE_NTOHL (0x7479436f), 
  ACE_NTOHL (0x6e746578), 
  ACE_NTOHL (0x74000000),  // name = EntityContext
};

static CORBA::TypeCode _tc_TAO_tc_Components_EntityContext (
    CORBA::tk_objref,
    sizeof (_oc_Components_EntityContext),
    (char *) &_oc_Components_EntityContext,
    0,
    sizeof (Components::EntityContext)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_EntityContext,
    &_tc_TAO_tc_Components_EntityContext
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Components::EntityComponent::_tao_class_id = 0;

Components::EntityComponent_ptr
tao_Components_EntityComponent_duplicate (
    Components::EntityComponent_ptr p
  )
{
  return Components::EntityComponent::_duplicate (p);
}

void
tao_Components_EntityComponent_release (
    Components::EntityComponent_ptr p
  )
{
  CORBA::release (p);
}

Components::EntityComponent_ptr
tao_Components_EntityComponent_nil (
    void
  )
{
  return Components::EntityComponent::_nil ();
}

Components::EntityComponent_ptr
tao_Components_EntityComponent_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Components::EntityComponent::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
tao_Components_EntityComponent_upcast (
    void *src
  )
{
  Components::EntityComponent **tmp =
    ACE_static_cast (Components::EntityComponent **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:721

// *************************************************************
// Components::EntityComponent_var
// *************************************************************

Components::EntityComponent_var::EntityComponent_var (void)
  : ptr_ (EntityComponent::_nil ())
{}

::Components::EntityComponent_ptr
Components::EntityComponent_var::ptr (void) const
{
  return this->ptr_;
}

Components::EntityComponent_var::EntityComponent_var (const ::Components::EntityComponent_var &p)
  : TAO_Base_var (),
    ptr_ (EntityComponent::_duplicate (p.ptr ()))
{}

Components::EntityComponent_var::~EntityComponent_var (void)
{
  CORBA::release (this->ptr_);
}

Components::EntityComponent_var &
Components::EntityComponent_var::operator= (EntityComponent_ptr p)
{
  CORBA::release (this->ptr_);
  this->ptr_ = p;
  return *this;
}

Components::EntityComponent_var &
Components::EntityComponent_var::operator= (const ::Components::EntityComponent_var &p)
{
  if (this != &p)
  {
    CORBA::release (this->ptr_);
    this->ptr_ = ::Components::EntityComponent::_duplicate (p.ptr ());
  }
  return *this;
}

Components::EntityComponent_var::operator const ::Components::EntityComponent_ptr &() const // cast
{
  return this->ptr_;
}

Components::EntityComponent_var::operator ::Components::EntityComponent_ptr &() // cast 
{
  return this->ptr_;
}

::Components::EntityComponent_ptr
Components::EntityComponent_var::operator-> (void) const
{
  return this->ptr_;
}

::Components::EntityComponent_ptr
Components::EntityComponent_var::in (void) const
{
  return this->ptr_;
}

::Components::EntityComponent_ptr &
Components::EntityComponent_var::inout (void)
{
  return this->ptr_;
}

::Components::EntityComponent_ptr &
Components::EntityComponent_var::out (void)
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::EntityComponent::_nil ();
  return this->ptr_;
}

::Components::EntityComponent_ptr
Components::EntityComponent_var::_retn (void)
{
  // yield ownership of managed obj reference
  ::Components::EntityComponent_ptr val = this->ptr_;
  this->ptr_ = ::Components::EntityComponent::_nil ();
  return val;
}

::Components::EntityComponent_ptr
Components::EntityComponent_var::tao_duplicate (EntityComponent_ptr p)
{
  return ::Components::EntityComponent::_duplicate (p);
}

void
Components::EntityComponent_var::tao_release (EntityComponent_ptr p)
{
  CORBA::release (p);
}

::Components::EntityComponent_ptr
Components::EntityComponent_var::tao_nil (void)
{
  return ::Components::EntityComponent::_nil ();
}

::Components::EntityComponent_ptr
Components::EntityComponent_var::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return ::Components::EntityComponent::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Components::EntityComponent_var::tao_upcast (void *src)
{
  EntityComponent **tmp =
    ACE_static_cast (EntityComponent **, src);
  return *tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:1030

// *************************************************************
// Components::EntityComponent_out
// *************************************************************

Components::EntityComponent_out::EntityComponent_out (EntityComponent_ptr &p)
  : ptr_ (p)
{
  this->ptr_ = ::Components::EntityComponent::_nil ();
}

Components::EntityComponent_out::EntityComponent_out (EntityComponent_var &p)
  : ptr_ (p.out ())
{
  CORBA::release (this->ptr_);
  this->ptr_ = ::Components::EntityComponent::_nil ();
}

Components::EntityComponent_out::EntityComponent_out (const ::Components::EntityComponent_out &p)
  : ptr_ (ACE_const_cast (EntityComponent_out &, p).ptr_)
{}

::Components::EntityComponent_out &
Components::EntityComponent_out::operator= (const ::Components::EntityComponent_out &p)
{
  this->ptr_ = ACE_const_cast (EntityComponent_out&, p).ptr_;
  return *this;
}

Components::EntityComponent_out &
Components::EntityComponent_out::operator= (const ::Components::EntityComponent_var &p)
{
  this->ptr_ = ::Components::EntityComponent::_duplicate (p.ptr ());
  return *this;
}

Components::EntityComponent_out &
Components::EntityComponent_out::operator= (EntityComponent_ptr p)
{
  this->ptr_ = p;
  return *this;
}

Components::EntityComponent_out::operator ::Components::EntityComponent_ptr &() // cast
{
  return this->ptr_;
}

::Components::EntityComponent_ptr &
Components::EntityComponent_out::ptr (void)
{
  return this->ptr_;
}

::Components::EntityComponent_ptr
Components::EntityComponent_out::operator-> (void)
{
  return this->ptr_;
}

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:225

Components::EntityComponent::EntityComponent (void)
{}

Components::EntityComponent::~EntityComponent (void)
{}

void 
Components::EntityComponent::_tao_any_destructor (void *_tao_void_pointer)
{
  EntityComponent *tmp = ACE_static_cast (EntityComponent *, _tao_void_pointer);
  CORBA::release (tmp);
}

Components::EntityComponent_ptr
Components::EntityComponent::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return EntityComponent::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Components::EntityComponent_ptr 
Components::EntityComponent::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return EntityComponent::_nil ();
    }
  
  return
      ACE_reinterpret_cast (
          EntityComponent_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &EntityComponent::_tao_class_id
                )
            )
        );
}

Components::EntityComponent_ptr
Components::EntityComponent::_duplicate (EntityComponent_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void *Components::EntityComponent::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;
  
  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, EntityComponent)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Components, EnterpriseComponent)::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                Components::EnterpriseComponent_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }
  
  if (retv != 0)
    {
      this->_add_ref ();
    }
  
  return retv;
}

const char* Components::EntityComponent::_interface_repository_id (void) const
{
  return "IDL:omg.org/Components/EntityComponent:1.0";
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Components_EntityComponent[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x436f6d70), 
  ACE_NTOHL (0x6f6e656e), 
  ACE_NTOHL (0x74732f45), 
  ACE_NTOHL (0x6e746974), 
  ACE_NTOHL (0x79436f6d), 
  ACE_NTOHL (0x706f6e65), 
  ACE_NTOHL (0x6e743a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Components/EntityComponent:1.0
  16,
  ACE_NTOHL (0x456e7469), 
  ACE_NTOHL (0x7479436f), 
  ACE_NTOHL (0x6d706f6e), 
  ACE_NTOHL (0x656e7400),  // name = EntityComponent
};

static CORBA::TypeCode _tc_TAO_tc_Components_EntityComponent (
    CORBA::tk_objref,
    sizeof (_oc_Components_EntityComponent),
    (char *) &_oc_Components_EntityComponent,
    0,
    sizeof (Components::EntityComponent)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Components)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_EntityComponent,
    &_tc_TAO_tc_Components_EntityComponent
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::CCMContext_ptr _tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_CCMContext,
      1,
      Components::CCMContext::_duplicate (_tao_elem),
      Components::CCMContext::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

// Non-copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::CCMContext_ptr *_tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_CCMContext,
      1,
      *_tao_elem,
      Components::CCMContext::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Components::CCMContext_ptr &_tao_elem
  )
{
  ACE_TRY_NEW_ENV
  {
    _tao_elem = Components::CCMContext::_nil ();
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result =
      type->equivalent (
          Components::_tc_CCMContext
          ACE_ENV_ARG_PARAMETER
        );
    ACE_TRY_CHECK;
    
    if (!result)
      {
        return 0; // not equivalent
      }
    
    _tao_elem =
      ACE_reinterpret_cast (
          Components::CCMContext_ptr,
          ACE_const_cast (void *, _tao_any.value ())
        );
      
    return 1;
  }
  ACE_CATCHANY
  {
  }
  ACE_ENDTRY;
  
  _tao_elem = Components::CCMContext::_nil ();
  return 0;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Components::CCMContext,Components::CCMContext_var>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Components::CCMContext,Components::CCMContext_var>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (CORBA::Any &_tao_any, Components::CCMExceptionReason _tao_elem)
{
  TAO_OutputCDR stream;
  stream << _tao_elem;
  _tao_any._tao_replace (
      Components::_tc_CCMExceptionReason,
      TAO_ENCAP_BYTE_ORDER,
      stream.begin ()
    );
}

CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, Components::CCMExceptionReason &_tao_elem)
{
  ACE_TRY_NEW_ENV
  {
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result = type->equivalent (Components::_tc_CCMExceptionReason ACE_ENV_ARG_PARAMETER);
    ACE_TRY_CHECK;
    
    if (!result)
      return 0; // not equivalent
    
    TAO_InputCDR stream (
        _tao_any._tao_get_cdr (),
        _tao_any._tao_byte_order ()
      );
    if (stream >> _tao_elem)
    {
      return 1;
    }
  }
  ACE_CATCHANY
  {
    return 0;
  }
  ACE_ENDTRY;
  return 0;
}

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Components::CCMException &_tao_elem
  )
{
  TAO_OutputCDR stream;
  
  if (stream << _tao_elem)
    {
      _tao_any._tao_replace (
          Components::_tc_CCMException,
          TAO_ENCAP_BYTE_ORDER,
          stream.begin ()
        );
    }
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Components::CCMException *_tao_elem
  )
{
  TAO_OutputCDR stream;
  
  if (stream << *_tao_elem)
    {
      _tao_any._tao_replace (
          Components::_tc_CCMException,
          TAO_ENCAP_BYTE_ORDER,
          stream.begin (),
          1,
          _tao_elem,
          Components::CCMException::_tao_any_destructor
        );
    }
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,Components::CCMException *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast(
      const Components::CCMException*&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Components::CCMException *&_tao_elem
  )
{
  _tao_elem = 0;
  ACE_TRY_NEW_ENV
  {
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result =
      type->equivalent (
          Components::_tc_CCMException
          ACE_ENV_ARG_PARAMETER
        );
    ACE_TRY_CHECK;
    
    if (result == 0)
      {
        return 0; // not equivalent
      }
    
    if (_tao_any.any_owns_data ())
      {
        _tao_elem = (Components::CCMException *)_tao_any.value ();
        return 1;
      }
    else
      {
        Components::CCMException *tmp = 0;
        ACE_NEW_RETURN (
            tmp,
            Components::CCMException,
            0
          );
        
        TAO_InputCDR stream (
            _tao_any._tao_get_cdr (),
            _tao_any._tao_byte_order ()
          );
        
        CORBA::String_var interface_repository_id;
        
        if (!(stream >> interface_repository_id.out ()))
          {
            return 0;
          }
        
        if (ACE_OS::strcmp (
                interface_repository_id.in (),
                "IDL:omg.org/Components/CCMException:1.0")
              )
          {
            return 0;
          }
        
        if (stream >> *tmp)
          {
            ((CORBA::Any *)&_tao_any)->_tao_replace (
                Components::_tc_CCMException,
                1,
                tmp,
                Components::CCMException::_tao_any_destructor
              );
            
            _tao_elem = tmp;
            return 1;
          }
        else
          {
            delete tmp;
          }
      }
  }
  ACE_CATCHANY
  {
  }
  ACE_ENDTRY;
  
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::EnterpriseComponent_ptr _tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_EnterpriseComponent,
      1,
      Components::EnterpriseComponent::_duplicate (_tao_elem),
      Components::EnterpriseComponent::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

// Non-copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::EnterpriseComponent_ptr *_tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_EnterpriseComponent,
      1,
      *_tao_elem,
      Components::EnterpriseComponent::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Components::EnterpriseComponent_ptr &_tao_elem
  )
{
  ACE_TRY_NEW_ENV
  {
    _tao_elem = Components::EnterpriseComponent::_nil ();
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result =
      type->equivalent (
          Components::_tc_EnterpriseComponent
          ACE_ENV_ARG_PARAMETER
        );
    ACE_TRY_CHECK;
    
    if (!result)
      {
        return 0; // not equivalent
      }
    
    _tao_elem =
      ACE_reinterpret_cast (
          Components::EnterpriseComponent_ptr,
          ACE_const_cast (void *, _tao_any.value ())
        );
      
    return 1;
  }
  ACE_CATCHANY
  {
  }
  ACE_ENDTRY;
  
  _tao_elem = Components::EnterpriseComponent::_nil ();
  return 0;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Components::EnterpriseComponent,Components::EnterpriseComponent_var>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Components::EnterpriseComponent,Components::EnterpriseComponent_var>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::SessionContext_ptr _tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_SessionContext,
      1,
      Components::SessionContext::_duplicate (_tao_elem),
      Components::SessionContext::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

// Non-copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::SessionContext_ptr *_tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_SessionContext,
      1,
      *_tao_elem,
      Components::SessionContext::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Components::SessionContext_ptr &_tao_elem
  )
{
  ACE_TRY_NEW_ENV
  {
    _tao_elem = Components::SessionContext::_nil ();
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result =
      type->equivalent (
          Components::_tc_SessionContext
          ACE_ENV_ARG_PARAMETER
        );
    ACE_TRY_CHECK;
    
    if (!result)
      {
        return 0; // not equivalent
      }
    
    _tao_elem =
      ACE_reinterpret_cast (
          Components::SessionContext_ptr,
          ACE_const_cast (void *, _tao_any.value ())
        );
      
    return 1;
  }
  ACE_CATCHANY
  {
  }
  ACE_ENDTRY;
  
  _tao_elem = Components::SessionContext::_nil ();
  return 0;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Components::SessionContext,Components::SessionContext_var>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Components::SessionContext,Components::SessionContext_var>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::SessionComponent_ptr _tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_SessionComponent,
      1,
      Components::SessionComponent::_duplicate (_tao_elem),
      Components::SessionComponent::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

// Non-copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::SessionComponent_ptr *_tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_SessionComponent,
      1,
      *_tao_elem,
      Components::SessionComponent::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Components::SessionComponent_ptr &_tao_elem
  )
{
  ACE_TRY_NEW_ENV
  {
    _tao_elem = Components::SessionComponent::_nil ();
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result =
      type->equivalent (
          Components::_tc_SessionComponent
          ACE_ENV_ARG_PARAMETER
        );
    ACE_TRY_CHECK;
    
    if (!result)
      {
        return 0; // not equivalent
      }
    
    _tao_elem =
      ACE_reinterpret_cast (
          Components::SessionComponent_ptr,
          ACE_const_cast (void *, _tao_any.value ())
        );
      
    return 1;
  }
  ACE_CATCHANY
  {
  }
  ACE_ENDTRY;
  
  _tao_elem = Components::SessionComponent::_nil ();
  return 0;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Components::SessionComponent,Components::SessionComponent_var>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Components::SessionComponent,Components::SessionComponent_var>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::SessionSynchronization_ptr _tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_SessionSynchronization,
      1,
      Components::SessionSynchronization::_duplicate (_tao_elem),
      Components::SessionSynchronization::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

// Non-copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::SessionSynchronization_ptr *_tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_SessionSynchronization,
      1,
      *_tao_elem,
      Components::SessionSynchronization::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Components::SessionSynchronization_ptr &_tao_elem
  )
{
  ACE_TRY_NEW_ENV
  {
    _tao_elem = Components::SessionSynchronization::_nil ();
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result =
      type->equivalent (
          Components::_tc_SessionSynchronization
          ACE_ENV_ARG_PARAMETER
        );
    ACE_TRY_CHECK;
    
    if (!result)
      {
        return 0; // not equivalent
      }
    
    _tao_elem =
      ACE_reinterpret_cast (
          Components::SessionSynchronization_ptr,
          ACE_const_cast (void *, _tao_any.value ())
        );
      
    return 1;
  }
  ACE_CATCHANY
  {
  }
  ACE_ENDTRY;
  
  _tao_elem = Components::SessionSynchronization::_nil ();
  return 0;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Components::SessionSynchronization,Components::SessionSynchronization_var>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Components::SessionSynchronization,Components::SessionSynchronization_var>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::EntityContext_ptr _tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_EntityContext,
      1,
      Components::EntityContext::_duplicate (_tao_elem),
      Components::EntityContext::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

// Non-copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::EntityContext_ptr *_tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_EntityContext,
      1,
      *_tao_elem,
      Components::EntityContext::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Components::EntityContext_ptr &_tao_elem
  )
{
  ACE_TRY_NEW_ENV
  {
    _tao_elem = Components::EntityContext::_nil ();
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result =
      type->equivalent (
          Components::_tc_EntityContext
          ACE_ENV_ARG_PARAMETER
        );
    ACE_TRY_CHECK;
    
    if (!result)
      {
        return 0; // not equivalent
      }
    
    _tao_elem =
      ACE_reinterpret_cast (
          Components::EntityContext_ptr,
          ACE_const_cast (void *, _tao_any.value ())
        );
      
    return 1;
  }
  ACE_CATCHANY
  {
  }
  ACE_ENDTRY;
  
  _tao_elem = Components::EntityContext::_nil ();
  return 0;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Components::EntityContext,Components::EntityContext_var>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Components::EntityContext,Components::EntityContext_var>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::EntityComponent_ptr _tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_EntityComponent,
      1,
      Components::EntityComponent::_duplicate (_tao_elem),
      Components::EntityComponent::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

// Non-copying version.
void
operator<<= (
    CORBA::Any &_tao_any,
    Components::EntityComponent_ptr *_tao_elem
  )
{
  _tao_any._tao_replace (
      Components::_tc_EntityComponent,
      1,
      *_tao_elem,
      Components::EntityComponent::_tao_any_destructor
    );
  
  _tao_any.contains_local (1);
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Components::EntityComponent_ptr &_tao_elem
  )
{
  ACE_TRY_NEW_ENV
  {
    _tao_elem = Components::EntityComponent::_nil ();
    CORBA::TypeCode_var type = _tao_any.type ();
    
    CORBA::Boolean result =
      type->equivalent (
          Components::_tc_EntityComponent
          ACE_ENV_ARG_PARAMETER
        );
    ACE_TRY_CHECK;
    
    if (!result)
      {
        return 0; // not equivalent
      }
    
    _tao_elem =
      ACE_reinterpret_cast (
          Components::EntityComponent_ptr,
          ACE_const_cast (void *, _tao_any.value ())
        );
      
    return 1;
  }
  ACE_CATCHANY
  {
  }
  ACE_ENDTRY;
  
  _tao_elem = Components::EntityComponent::_nil ();
  return 0;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Components::EntityComponent,Components::EntityComponent_var>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Components::EntityComponent,Components::EntityComponent_var>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

