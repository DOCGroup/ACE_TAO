// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_CIAO_DEPLOYMENTC_H_
#define _TAO_IDL_CIAO_DEPLOYMENTC_H_

#include "ace/pre.h"
#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "CIAO_export.h"

#include "CIAO_ComponentC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CIAO_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO CIAO_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48

TAO_NAMESPACE  Components
{
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48
  
  TAO_NAMESPACE  Deployment
  {
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:368
    
    typedef char * UUID;
    typedef CORBA::String_var UUID_var;
    typedef CORBA::String_out UUID_out;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UUID;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:368
    
    typedef char * Location;
    typedef CORBA::String_var Location_var;
    typedef CORBA::String_out Location_out;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Location;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/enum_ch.cpp:57
    
    enum AssemblyState
    {
      INACTIVE,
      INSERVICE
    };
    
    typedef AssemblyState &AssemblyState_out;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AssemblyState;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_DEPLOYMENT_UNKNOWNIMPLID_CH_)
#define _COMPONENTS_DEPLOYMENT_UNKNOWNIMPLID_CH_
    
    class CIAO_Export UnknownImplId : public CORBA::UserException
    {
    public:
      
      UnknownImplId (void);
      UnknownImplId (const UnknownImplId &);
      ~UnknownImplId (void);

      UnknownImplId &operator= (const UnknownImplId &);
      
      static void _tao_any_destructor (void *);
      
      static UnknownImplId *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UnknownImplId;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_DEPLOYMENT_INVALIDLOCATION_CH_)
#define _COMPONENTS_DEPLOYMENT_INVALIDLOCATION_CH_
    
    class CIAO_Export InvalidLocation : public CORBA::UserException
    {
    public:
      
      InvalidLocation (void);
      InvalidLocation (const InvalidLocation &);
      ~InvalidLocation (void);

      InvalidLocation &operator= (const InvalidLocation &);
      
      static void _tao_any_destructor (void *);
      
      static InvalidLocation *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidLocation;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_DEPLOYMENT_INSTALLATIONFAILURE_CH_)
#define _COMPONENTS_DEPLOYMENT_INSTALLATIONFAILURE_CH_
    
    class CIAO_Export InstallationFailure : public CORBA::UserException
    {
    public:
      
      Components::FailureReason reason;
      InstallationFailure (void);
      InstallationFailure (const InstallationFailure &);
      ~InstallationFailure (void);

      InstallationFailure &operator= (const InstallationFailure &);
      
      static void _tao_any_destructor (void *);
      
      static InstallationFailure *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66
      
      InstallationFailure (
          ACE_NESTED_CLASS (Components, FailureReason) _tao_reason
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InstallationFailure;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_DEPLOYMENT_INVALIDASSEMBLY_CH_)
#define _COMPONENTS_DEPLOYMENT_INVALIDASSEMBLY_CH_
    
    class CIAO_Export InvalidAssembly : public CORBA::UserException
    {
    public:
      
      InvalidAssembly (void);
      InvalidAssembly (const InvalidAssembly &);
      ~InvalidAssembly (void);

      InvalidAssembly &operator= (const InvalidAssembly &);
      
      static void _tao_any_destructor (void *);
      
      static InvalidAssembly *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidAssembly;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTINSTALLATION___PTR_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTINSTALLATION___PTR_CH_
    
    class ComponentInstallation;
    typedef ComponentInstallation *ComponentInstallation_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTINSTALLATION___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTINSTALLATION___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export ComponentInstallation_var : public TAO_Base_var
    {
    public:
      ComponentInstallation_var (void); // default constructor
      ComponentInstallation_var (ComponentInstallation_ptr p) : ptr_ (p) {} 
      ComponentInstallation_var (const ComponentInstallation_var &); // copy constructor
      ~ComponentInstallation_var (void); // destructor
      
      ComponentInstallation_var &operator= (ComponentInstallation_ptr);
      ComponentInstallation_var &operator= (const ComponentInstallation_var &);
      ComponentInstallation_ptr operator-> (void) const;
      
      operator const ComponentInstallation_ptr &() const;
      operator ComponentInstallation_ptr &();
      // in, inout, out, _retn 
      ComponentInstallation_ptr in (void) const;
      ComponentInstallation_ptr &inout (void);
      ComponentInstallation_ptr &out (void);
      ComponentInstallation_ptr _retn (void);
      ComponentInstallation_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static ComponentInstallation_ptr tao_duplicate (ComponentInstallation_ptr);
      static void tao_release (ComponentInstallation_ptr);
      static ComponentInstallation_ptr tao_nil (void);
      static ComponentInstallation_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      ComponentInstallation_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      ComponentInstallation_var (const TAO_Base_var &rhs);
      ComponentInstallation_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTINSTALLATION___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTINSTALLATION___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export ComponentInstallation_out
    {
    public:
      ComponentInstallation_out (ComponentInstallation_ptr &);
      ComponentInstallation_out (ComponentInstallation_var &);
      ComponentInstallation_out (const ComponentInstallation_out &);
      ComponentInstallation_out &operator= (const ComponentInstallation_out &);
      ComponentInstallation_out &operator= (const ComponentInstallation_var &);
      ComponentInstallation_out &operator= (ComponentInstallation_ptr);
      operator ComponentInstallation_ptr &();
      ComponentInstallation_ptr &ptr (void);
      ComponentInstallation_ptr operator-> (void);
    
    private:
      ComponentInstallation_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTINSTALLATION_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTINSTALLATION_CH_
    
    class _TAO_ComponentInstallation_Proxy_Impl;
    class _TAO_ComponentInstallation_Remote_Proxy_Impl;
    class _TAO_ComponentInstallation_Proxy_Broker;
    class _TAO_ComponentInstallation_Remote_Proxy_Broker;
    
    class CIAO_Export ComponentInstallation
      : public virtual CORBA::Object
    {
    public:
      typedef ComponentInstallation_ptr _ptr_type;
      typedef ComponentInstallation_var _var_type;
      static int _tao_class_id;
      
      // The static operations.
      static ComponentInstallation_ptr _duplicate (ComponentInstallation_ptr obj);
      
      static ComponentInstallation_ptr _narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static ComponentInstallation_ptr _unchecked_narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static ComponentInstallation_ptr _nil (void)
        {
          return (ComponentInstallation_ptr)0;
        }
      
      static void _tao_any_destructor (void *);
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void install (
          const char * implUUID,
          const char * component_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::Deployment::InstallationFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void replace (
          const char * implUUID,
          const char * component_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::Deployment::InstallationFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void remove (
          const char * implUUID
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual char * get_implementation (
          const char * implUUID
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::Deployment::InstallationFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
      
      virtual CORBA::Boolean _is_a (
          const char *type_id
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      virtual void *_tao_QueryInterface (ptr_arith_t type);
      
      virtual const char* _interface_repository_id (void) const;
    private:
      _TAO_ComponentInstallation_Proxy_Broker *the_TAO_ComponentInstallation_Proxy_Broker_;
    
    protected:
      ComponentInstallation (int collocated = 0);
      
      // These methods travese the inheritance tree and set the
      // parents piece of the given class in the right mode.
      virtual void Components_Deployment_ComponentInstallation_setup_collocation (int collocated);
      
      ComponentInstallation (
          TAO_Stub *objref, 
          CORBA::Boolean _tao_collocated = 0,
          TAO_Abstract_ServantBase *servant = 0
        );
      virtual ~ComponentInstallation (void);
      
      friend class _TAO_ComponentInstallation_Remote_Proxy_Impl;
      friend class _TAO_ComponentInstallation_ThruPOA_Proxy_Impl;
      friend class _TAO_ComponentInstallation_Direct_Proxy_Impl;
    
    private:
      ComponentInstallation (const ComponentInstallation &);
      void operator= (const ComponentInstallation &);
    };
    
    // The Proxy Implementations are used by each interface to
    // perform a call. Each different implementation encapsulates
    // an invocation logic.
    
    
    ///////////////////////////////////////////////////////////////////////
    //                    Base Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
    
    class CIAO_Export _TAO_ComponentInstallation_Proxy_Impl
      : public virtual TAO_Object_Proxy_Impl
    {
    public:
      virtual ~_TAO_ComponentInstallation_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void install (
          CORBA_Object *_collocated_tao_target_,
          const char * implUUID,
          const char * component_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::Deployment::InstallationFailure
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void replace (
          CORBA_Object *_collocated_tao_target_,
          const char * implUUID,
          const char * component_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::Deployment::InstallationFailure
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void remove (
          CORBA_Object *_collocated_tao_target_,
          const char * implUUID
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::RemoveFailure
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual char * get_implementation (
          CORBA_Object *_collocated_tao_target_,
          const char * implUUID
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::Deployment::InstallationFailure
        )) = 0;
    
    protected:
      _TAO_ComponentInstallation_Proxy_Impl (void);
    };
    
    //
    //               End Base Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    
    ///////////////////////////////////////////////////////////////////////
    //                Remote Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
    
    class CIAO_Export _TAO_ComponentInstallation_Remote_Proxy_Impl
      : public virtual _TAO_ComponentInstallation_Proxy_Impl,
        public virtual TAO_Remote_Object_Proxy_Impl
    {
    public:
      _TAO_ComponentInstallation_Remote_Proxy_Impl (void);
      
      virtual ~_TAO_ComponentInstallation_Remote_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void install (
          CORBA_Object *_collocated_tao_target_,
          const char * implUUID,
          const char * component_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::Deployment::InstallationFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void replace (
          CORBA_Object *_collocated_tao_target_,
          const char * implUUID,
          const char * component_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::Deployment::InstallationFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void remove (
          CORBA_Object *_collocated_tao_target_,
          const char * implUUID
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual char * get_implementation (
          CORBA_Object *_collocated_tao_target_,
          const char * implUUID
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::Deployment::InstallationFailure
        ));
    };
    
    //
    //             End Remote Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    // The Proxy Brokers are used by each interface to get
    // the right proxy for performing a call. In the new 
    // collocation scheme, the proxy to be used can vary on
    // a call by call basis.
    
    ///////////////////////////////////////////////////////////////////////
    //                 Base Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
    
    class CIAO_Export _TAO_ComponentInstallation_Proxy_Broker
    {
    public:
      virtual ~_TAO_ComponentInstallation_Proxy_Broker (void);
      virtual _TAO_ComponentInstallation_Proxy_Impl &select_proxy (
          ComponentInstallation *object
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        ) = 0;
      
    protected:
      _TAO_ComponentInstallation_Proxy_Broker (void);
      
    };
    
    //
    //              End Base Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////
    
        
    ///////////////////////////////////////////////////////////////////////
    //                 Remote Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
    
    class CIAO_Export _TAO_ComponentInstallation_Remote_Proxy_Broker
      : public virtual _TAO_ComponentInstallation_Proxy_Broker
    {
    public: 
      _TAO_ComponentInstallation_Remote_Proxy_Broker (void);
      
      virtual ~_TAO_ComponentInstallation_Remote_Proxy_Broker (void);
      
      virtual _TAO_ComponentInstallation_Proxy_Impl &select_proxy (
          ComponentInstallation *object
          ACE_ENV_ARG_DECL
        );
      
    private:
      _TAO_ComponentInstallation_Remote_Proxy_Impl remote_proxy_impl_;
    
    public:
      // This member function is used to get an handle to the unique instance
      // of the Remote Proxy Broker that is available for a given
      // interface.
      static _TAO_ComponentInstallation_Remote_Proxy_Broker *the_TAO_ComponentInstallation_Remote_Proxy_Broker (void);
    };
    
    //
    //              End Remote Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ComponentInstallation;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_DEPLOYMENT_ASSEMBLY___PTR_CH_)
#define _COMPONENTS_DEPLOYMENT_ASSEMBLY___PTR_CH_
    
    class Assembly;
    typedef Assembly *Assembly_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_ASSEMBLY___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_ASSEMBLY___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export Assembly_var : public TAO_Base_var
    {
    public:
      Assembly_var (void); // default constructor
      Assembly_var (Assembly_ptr p) : ptr_ (p) {} 
      Assembly_var (const Assembly_var &); // copy constructor
      ~Assembly_var (void); // destructor
      
      Assembly_var &operator= (Assembly_ptr);
      Assembly_var &operator= (const Assembly_var &);
      Assembly_ptr operator-> (void) const;
      
      operator const Assembly_ptr &() const;
      operator Assembly_ptr &();
      // in, inout, out, _retn 
      Assembly_ptr in (void) const;
      Assembly_ptr &inout (void);
      Assembly_ptr &out (void);
      Assembly_ptr _retn (void);
      Assembly_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static Assembly_ptr tao_duplicate (Assembly_ptr);
      static void tao_release (Assembly_ptr);
      static Assembly_ptr tao_nil (void);
      static Assembly_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      Assembly_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      Assembly_var (const TAO_Base_var &rhs);
      Assembly_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_ASSEMBLY___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_ASSEMBLY___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export Assembly_out
    {
    public:
      Assembly_out (Assembly_ptr &);
      Assembly_out (Assembly_var &);
      Assembly_out (const Assembly_out &);
      Assembly_out &operator= (const Assembly_out &);
      Assembly_out &operator= (const Assembly_var &);
      Assembly_out &operator= (Assembly_ptr);
      operator Assembly_ptr &();
      Assembly_ptr &ptr (void);
      Assembly_ptr operator-> (void);
    
    private:
      Assembly_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_DEPLOYMENT_ASSEMBLY_CH_)
#define _COMPONENTS_DEPLOYMENT_ASSEMBLY_CH_
    
    class _TAO_Assembly_Proxy_Impl;
    class _TAO_Assembly_Remote_Proxy_Impl;
    class _TAO_Assembly_Proxy_Broker;
    class _TAO_Assembly_Remote_Proxy_Broker;
    
    class CIAO_Export Assembly
      : public virtual CORBA::Object
    {
    public:
      typedef Assembly_ptr _ptr_type;
      typedef Assembly_var _var_type;
      static int _tao_class_id;
      
      // The static operations.
      static Assembly_ptr _duplicate (Assembly_ptr obj);
      
      static Assembly_ptr _narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static Assembly_ptr _unchecked_narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static Assembly_ptr _nil (void)
        {
          return (Assembly_ptr)0;
        }
      
      static void _tao_any_destructor (void *);
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void build (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void tear_down (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Deployment::AssemblyState get_state (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
      
      virtual CORBA::Boolean _is_a (
          const char *type_id
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      virtual void *_tao_QueryInterface (ptr_arith_t type);
      
      virtual const char* _interface_repository_id (void) const;
    private:
      _TAO_Assembly_Proxy_Broker *the_TAO_Assembly_Proxy_Broker_;
    
    protected:
      Assembly (int collocated = 0);
      
      // These methods travese the inheritance tree and set the
      // parents piece of the given class in the right mode.
      virtual void Components_Deployment_Assembly_setup_collocation (int collocated);
      
      Assembly (
          TAO_Stub *objref, 
          CORBA::Boolean _tao_collocated = 0,
          TAO_Abstract_ServantBase *servant = 0
        );
      virtual ~Assembly (void);
      
      friend class _TAO_Assembly_Remote_Proxy_Impl;
      friend class _TAO_Assembly_ThruPOA_Proxy_Impl;
      friend class _TAO_Assembly_Direct_Proxy_Impl;
    
    private:
      Assembly (const Assembly &);
      void operator= (const Assembly &);
    };
    
    // The Proxy Implementations are used by each interface to
    // perform a call. Each different implementation encapsulates
    // an invocation logic.
    
    
    ///////////////////////////////////////////////////////////////////////
    //                    Base Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
    
    class CIAO_Export _TAO_Assembly_Proxy_Impl
      : public virtual TAO_Object_Proxy_Impl
    {
    public:
      virtual ~_TAO_Assembly_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void build (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void tear_down (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Deployment::AssemblyState get_state (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
    
    protected:
      _TAO_Assembly_Proxy_Impl (void);
    };
    
    //
    //               End Base Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    
    ///////////////////////////////////////////////////////////////////////
    //                Remote Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
    
    class CIAO_Export _TAO_Assembly_Remote_Proxy_Impl
      : public virtual _TAO_Assembly_Proxy_Impl,
        public virtual TAO_Remote_Object_Proxy_Impl
    {
    public:
      _TAO_Assembly_Remote_Proxy_Impl (void);
      
      virtual ~_TAO_Assembly_Remote_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void build (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void tear_down (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Deployment::AssemblyState get_state (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
    };
    
    //
    //             End Remote Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    // The Proxy Brokers are used by each interface to get
    // the right proxy for performing a call. In the new 
    // collocation scheme, the proxy to be used can vary on
    // a call by call basis.
    
    ///////////////////////////////////////////////////////////////////////
    //                 Base Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
    
    class CIAO_Export _TAO_Assembly_Proxy_Broker
    {
    public:
      virtual ~_TAO_Assembly_Proxy_Broker (void);
      virtual _TAO_Assembly_Proxy_Impl &select_proxy (
          Assembly *object
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        ) = 0;
      
    protected:
      _TAO_Assembly_Proxy_Broker (void);
      
    };
    
    //
    //              End Base Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////
    
        
    ///////////////////////////////////////////////////////////////////////
    //                 Remote Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
    
    class CIAO_Export _TAO_Assembly_Remote_Proxy_Broker
      : public virtual _TAO_Assembly_Proxy_Broker
    {
    public: 
      _TAO_Assembly_Remote_Proxy_Broker (void);
      
      virtual ~_TAO_Assembly_Remote_Proxy_Broker (void);
      
      virtual _TAO_Assembly_Proxy_Impl &select_proxy (
          Assembly *object
          ACE_ENV_ARG_DECL
        );
      
    private:
      _TAO_Assembly_Remote_Proxy_Impl remote_proxy_impl_;
    
    public:
      // This member function is used to get an handle to the unique instance
      // of the Remote Proxy Broker that is available for a given
      // interface.
      static _TAO_Assembly_Remote_Proxy_Broker *the_TAO_Assembly_Remote_Proxy_Broker (void);
    };
    
    //
    //              End Remote Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Assembly;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_DEPLOYMENT_ASSEMBLYFACTORY___PTR_CH_)
#define _COMPONENTS_DEPLOYMENT_ASSEMBLYFACTORY___PTR_CH_
    
    class AssemblyFactory;
    typedef AssemblyFactory *AssemblyFactory_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_ASSEMBLYFACTORY___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_ASSEMBLYFACTORY___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export AssemblyFactory_var : public TAO_Base_var
    {
    public:
      AssemblyFactory_var (void); // default constructor
      AssemblyFactory_var (AssemblyFactory_ptr p) : ptr_ (p) {} 
      AssemblyFactory_var (const AssemblyFactory_var &); // copy constructor
      ~AssemblyFactory_var (void); // destructor
      
      AssemblyFactory_var &operator= (AssemblyFactory_ptr);
      AssemblyFactory_var &operator= (const AssemblyFactory_var &);
      AssemblyFactory_ptr operator-> (void) const;
      
      operator const AssemblyFactory_ptr &() const;
      operator AssemblyFactory_ptr &();
      // in, inout, out, _retn 
      AssemblyFactory_ptr in (void) const;
      AssemblyFactory_ptr &inout (void);
      AssemblyFactory_ptr &out (void);
      AssemblyFactory_ptr _retn (void);
      AssemblyFactory_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static AssemblyFactory_ptr tao_duplicate (AssemblyFactory_ptr);
      static void tao_release (AssemblyFactory_ptr);
      static AssemblyFactory_ptr tao_nil (void);
      static AssemblyFactory_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      AssemblyFactory_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      AssemblyFactory_var (const TAO_Base_var &rhs);
      AssemblyFactory_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_ASSEMBLYFACTORY___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_ASSEMBLYFACTORY___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export AssemblyFactory_out
    {
    public:
      AssemblyFactory_out (AssemblyFactory_ptr &);
      AssemblyFactory_out (AssemblyFactory_var &);
      AssemblyFactory_out (const AssemblyFactory_out &);
      AssemblyFactory_out &operator= (const AssemblyFactory_out &);
      AssemblyFactory_out &operator= (const AssemblyFactory_var &);
      AssemblyFactory_out &operator= (AssemblyFactory_ptr);
      operator AssemblyFactory_ptr &();
      AssemblyFactory_ptr &ptr (void);
      AssemblyFactory_ptr operator-> (void);
    
    private:
      AssemblyFactory_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_DEPLOYMENT_ASSEMBLYFACTORY_CH_)
#define _COMPONENTS_DEPLOYMENT_ASSEMBLYFACTORY_CH_
    
    class _TAO_AssemblyFactory_Proxy_Impl;
    class _TAO_AssemblyFactory_Remote_Proxy_Impl;
    class _TAO_AssemblyFactory_Proxy_Broker;
    class _TAO_AssemblyFactory_Remote_Proxy_Broker;
    
    class CIAO_Export AssemblyFactory
      : public virtual CORBA::Object
    {
    public:
      typedef AssemblyFactory_ptr _ptr_type;
      typedef AssemblyFactory_var _var_type;
      static int _tao_class_id;
      
      // The static operations.
      static AssemblyFactory_ptr _duplicate (AssemblyFactory_ptr obj);
      
      static AssemblyFactory_ptr _narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static AssemblyFactory_ptr _unchecked_narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static AssemblyFactory_ptr _nil (void)
        {
          return (AssemblyFactory_ptr)0;
        }
      
      static void _tao_any_destructor (void *);
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Cookie * create (
          const char * assembly_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::CreateFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Deployment::Assembly_ptr lookup (
          Components::Cookie * c
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidAssembly
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void destroy (
          Components::Cookie * c
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidAssembly
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
      
      virtual CORBA::Boolean _is_a (
          const char *type_id
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      virtual void *_tao_QueryInterface (ptr_arith_t type);
      
      virtual const char* _interface_repository_id (void) const;
    private:
      _TAO_AssemblyFactory_Proxy_Broker *the_TAO_AssemblyFactory_Proxy_Broker_;
    
    protected:
      AssemblyFactory (int collocated = 0);
      
      // These methods travese the inheritance tree and set the
      // parents piece of the given class in the right mode.
      virtual void Components_Deployment_AssemblyFactory_setup_collocation (int collocated);
      
      AssemblyFactory (
          TAO_Stub *objref, 
          CORBA::Boolean _tao_collocated = 0,
          TAO_Abstract_ServantBase *servant = 0
        );
      virtual ~AssemblyFactory (void);
      
      friend class _TAO_AssemblyFactory_Remote_Proxy_Impl;
      friend class _TAO_AssemblyFactory_ThruPOA_Proxy_Impl;
      friend class _TAO_AssemblyFactory_Direct_Proxy_Impl;
    
    private:
      AssemblyFactory (const AssemblyFactory &);
      void operator= (const AssemblyFactory &);
    };
    
    // The Proxy Implementations are used by each interface to
    // perform a call. Each different implementation encapsulates
    // an invocation logic.
    
    
    ///////////////////////////////////////////////////////////////////////
    //                    Base Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
    
    class CIAO_Export _TAO_AssemblyFactory_Proxy_Impl
      : public virtual TAO_Object_Proxy_Impl
    {
    public:
      virtual ~_TAO_AssemblyFactory_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Cookie * create (
          CORBA_Object *_collocated_tao_target_,
          const char * assembly_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::CreateFailure
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Deployment::Assembly_ptr lookup (
          CORBA_Object *_collocated_tao_target_,
          Components::Cookie * c
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidAssembly
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void destroy (
          CORBA_Object *_collocated_tao_target_,
          Components::Cookie * c
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidAssembly
          , Components::RemoveFailure
        )) = 0;
    
    protected:
      _TAO_AssemblyFactory_Proxy_Impl (void);
    };
    
    //
    //               End Base Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    
    ///////////////////////////////////////////////////////////////////////
    //                Remote Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
    
    class CIAO_Export _TAO_AssemblyFactory_Remote_Proxy_Impl
      : public virtual _TAO_AssemblyFactory_Proxy_Impl,
        public virtual TAO_Remote_Object_Proxy_Impl
    {
    public:
      _TAO_AssemblyFactory_Remote_Proxy_Impl (void);
      
      virtual ~_TAO_AssemblyFactory_Remote_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Cookie * create (
          CORBA_Object *_collocated_tao_target_,
          const char * assembly_loc
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidLocation
          , Components::CreateFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Deployment::Assembly_ptr lookup (
          CORBA_Object *_collocated_tao_target_,
          Components::Cookie * c
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidAssembly
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void destroy (
          CORBA_Object *_collocated_tao_target_,
          Components::Cookie * c
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::InvalidAssembly
          , Components::RemoveFailure
        ));
    };
    
    //
    //             End Remote Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    // The Proxy Brokers are used by each interface to get
    // the right proxy for performing a call. In the new 
    // collocation scheme, the proxy to be used can vary on
    // a call by call basis.
    
    ///////////////////////////////////////////////////////////////////////
    //                 Base Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
    
    class CIAO_Export _TAO_AssemblyFactory_Proxy_Broker
    {
    public:
      virtual ~_TAO_AssemblyFactory_Proxy_Broker (void);
      virtual _TAO_AssemblyFactory_Proxy_Impl &select_proxy (
          AssemblyFactory *object
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        ) = 0;
      
    protected:
      _TAO_AssemblyFactory_Proxy_Broker (void);
      
    };
    
    //
    //              End Base Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////
    
        
    ///////////////////////////////////////////////////////////////////////
    //                 Remote Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
    
    class CIAO_Export _TAO_AssemblyFactory_Remote_Proxy_Broker
      : public virtual _TAO_AssemblyFactory_Proxy_Broker
    {
    public: 
      _TAO_AssemblyFactory_Remote_Proxy_Broker (void);
      
      virtual ~_TAO_AssemblyFactory_Remote_Proxy_Broker (void);
      
      virtual _TAO_AssemblyFactory_Proxy_Impl &select_proxy (
          AssemblyFactory *object
          ACE_ENV_ARG_DECL
        );
      
    private:
      _TAO_AssemblyFactory_Remote_Proxy_Impl remote_proxy_impl_;
    
    public:
      // This member function is used to get an handle to the unique instance
      // of the Remote Proxy Broker that is available for a given
      // interface.
      static _TAO_AssemblyFactory_Remote_Proxy_Broker *the_TAO_AssemblyFactory_Remote_Proxy_Broker (void);
    };
    
    //
    //              End Remote Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AssemblyFactory;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface_fwd/interface_fwd_ch.cpp:53
    
    class ComponentServer;

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVER___PTR_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVER___PTR_CH_
    
    typedef ComponentServer *ComponentServer_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVER___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVER___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export ComponentServer_var : public TAO_Base_var
    {
    public:
      ComponentServer_var (void); // default constructor
      ComponentServer_var (ComponentServer_ptr p) : ptr_ (p) {} 
      ComponentServer_var (const ComponentServer_var &); // copy constructor
      ~ComponentServer_var (void); // destructor
      
      ComponentServer_var &operator= (ComponentServer_ptr);
      ComponentServer_var &operator= (const ComponentServer_var &);
      ComponentServer_ptr operator-> (void) const;
      
      operator const ComponentServer_ptr &() const;
      operator ComponentServer_ptr &();
      // in, inout, out, _retn 
      ComponentServer_ptr in (void) const;
      ComponentServer_ptr &inout (void);
      ComponentServer_ptr &out (void);
      ComponentServer_ptr _retn (void);
      ComponentServer_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static ComponentServer_ptr tao_duplicate (ComponentServer_ptr);
      static void tao_release (ComponentServer_ptr);
      static ComponentServer_ptr tao_nil (void);
      static ComponentServer_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      ComponentServer_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      ComponentServer_var (const TAO_Base_var &rhs);
      ComponentServer_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVER___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVER___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export ComponentServer_out
    {
    public:
      ComponentServer_out (ComponentServer_ptr &);
      ComponentServer_out (ComponentServer_var &);
      ComponentServer_out (const ComponentServer_out &);
      ComponentServer_out &operator= (const ComponentServer_out &);
      ComponentServer_out &operator= (const ComponentServer_var &);
      ComponentServer_out &operator= (ComponentServer_ptr);
      operator ComponentServer_ptr &();
      ComponentServer_ptr &ptr (void);
      ComponentServer_ptr operator-> (void);
    
    private:
      ComponentServer_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_COMPONENTS_DEPLOYMENT_COMPONENTSERVERS_CH_)
#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_COMPONENTS_DEPLOYMENT_COMPONENTSERVERS_CH_
    
    class CIAO_Export _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers
      : public TAO_Unbounded_Base_Sequence
    {
    public:
      _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers (void);
      _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers (CORBA::ULong maximum);
      _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers (
          CORBA::ULong maximum,
          CORBA::ULong length,
          ComponentServer* *value,
          CORBA::Boolean release = 0
        );
      _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers (
          const _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers &rhs
        );
      _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers &operator= (
          const _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers &rhs
        );
      virtual ~_TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers (void);
      
      // = Accessors.
      TAO_Object_Manager<Components::Deployment::ComponentServer,Components::Deployment::ComponentServer_var> operator[] (CORBA::ULong index) const;
      
      // = Static operations.
      static ComponentServer **allocbuf (CORBA::ULong nelems);
      static void freebuf (ComponentServer **buffer);
      
      // Implement the TAO_Base_Sequence methods (see Sequence.h)
      virtual void _allocate_buffer (CORBA::ULong length);
      virtual void _deallocate_buffer (void);
      ComponentServer* *get_buffer (CORBA::Boolean orphan = 0);
      const ComponentServer* *get_buffer (void) const;
      virtual void _shrink_buffer (
          CORBA::ULong nl,
          CORBA::ULong ol
        );
      
      virtual void _downcast (
          void* target,
          CORBA_Object *src
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      virtual CORBA_Object* _upcast (void *src) const;
    };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVERS_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVERS_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
    
    class ComponentServers;
    class ComponentServers_var;
    
    // *************************************************************
    // Components::Deployment::ComponentServers
    // *************************************************************
    
    class CIAO_Export ComponentServers : public 
    
    // TAO_IDL - Generated from 
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
    _TAO_Unbounded_Object_Sequence_Components_Deployment_ComponentServers
#else /* TAO_USE_SEQUENCE_TEMPLATES */
    TAO_Unbounded_Object_Sequence<ComponentServer,ComponentServer_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
    {
    public:
      ComponentServers (void);
      ComponentServers (CORBA::ULong max);
      ComponentServers (
          CORBA::ULong max, 
          CORBA::ULong length, 
          ComponentServer_ptr *buffer, 
          CORBA::Boolean release = 0
        );
      ComponentServers (const ComponentServers &);
      ~ComponentServers (void);
      
      static void _tao_any_destructor (void*);
      
      typedef ComponentServers_var _var_type;
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVERS___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVERS___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
    
    // *************************************************************
    // class Components::Deployment::ComponentServers_var
    // *************************************************************
    
    class CIAO_Export ComponentServers_var
    {
    public:
      ComponentServers_var (void);
      ComponentServers_var (ComponentServers *);
      ComponentServers_var (const ComponentServers_var &);
      ~ComponentServers_var (void);
      
      ComponentServers_var &operator= (ComponentServers *);
      ComponentServers_var &operator= (const ComponentServers_var &);
      ComponentServers *operator-> (void);
      const ComponentServers *operator-> (void) const;
      
      operator const ComponentServers &() const;
      operator ComponentServers &();
      operator ComponentServers &() const;
      
      // Variable-size base types only.
      operator ComponentServers *&();
      
      TAO_Object_Manager<ComponentServer, ComponentServer_var> operator[] (CORBA::ULong index);
      
      // in, inout, out, _retn 
      const ComponentServers &in (void) const;
      ComponentServers &inout (void);
      ComponentServers *&out (void);
      ComponentServers *_retn (void);
      ComponentServers *ptr (void) const;
    
    private:
      ComponentServers *ptr_;
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVERS___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVERS___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
    
    class CIAO_Export ComponentServers_out
    {
    public:
      ComponentServers_out (ComponentServers *&);
      ComponentServers_out (ComponentServers_var &);
      ComponentServers_out (const ComponentServers_out &);
      ComponentServers_out &operator= (const ComponentServers_out &);
      ComponentServers_out &operator= (ComponentServers *);
      operator ComponentServers *&();
      ComponentServers *&ptr (void);
      ComponentServers *operator-> (void);
      TAO_Object_Manager<ComponentServer, ComponentServer_var> operator[] (CORBA::ULong index);
    
    private:
      ComponentServers *&ptr_;
      // Assignment from T_var not allowed.
      void operator= (const ComponentServers_var &);
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ComponentServers;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_DEPLOYMENT_SERVERACTIVATOR___PTR_CH_)
#define _COMPONENTS_DEPLOYMENT_SERVERACTIVATOR___PTR_CH_
    
    class ServerActivator;
    typedef ServerActivator *ServerActivator_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_SERVERACTIVATOR___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_SERVERACTIVATOR___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export ServerActivator_var : public TAO_Base_var
    {
    public:
      ServerActivator_var (void); // default constructor
      ServerActivator_var (ServerActivator_ptr p) : ptr_ (p) {} 
      ServerActivator_var (const ServerActivator_var &); // copy constructor
      ~ServerActivator_var (void); // destructor
      
      ServerActivator_var &operator= (ServerActivator_ptr);
      ServerActivator_var &operator= (const ServerActivator_var &);
      ServerActivator_ptr operator-> (void) const;
      
      operator const ServerActivator_ptr &() const;
      operator ServerActivator_ptr &();
      // in, inout, out, _retn 
      ServerActivator_ptr in (void) const;
      ServerActivator_ptr &inout (void);
      ServerActivator_ptr &out (void);
      ServerActivator_ptr _retn (void);
      ServerActivator_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static ServerActivator_ptr tao_duplicate (ServerActivator_ptr);
      static void tao_release (ServerActivator_ptr);
      static ServerActivator_ptr tao_nil (void);
      static ServerActivator_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      ServerActivator_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      ServerActivator_var (const TAO_Base_var &rhs);
      ServerActivator_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_SERVERACTIVATOR___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_SERVERACTIVATOR___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export ServerActivator_out
    {
    public:
      ServerActivator_out (ServerActivator_ptr &);
      ServerActivator_out (ServerActivator_var &);
      ServerActivator_out (const ServerActivator_out &);
      ServerActivator_out &operator= (const ServerActivator_out &);
      ServerActivator_out &operator= (const ServerActivator_var &);
      ServerActivator_out &operator= (ServerActivator_ptr);
      operator ServerActivator_ptr &();
      ServerActivator_ptr &ptr (void);
      ServerActivator_ptr operator-> (void);
    
    private:
      ServerActivator_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_DEPLOYMENT_SERVERACTIVATOR_CH_)
#define _COMPONENTS_DEPLOYMENT_SERVERACTIVATOR_CH_
    
    class _TAO_ServerActivator_Proxy_Impl;
    class _TAO_ServerActivator_Remote_Proxy_Impl;
    class _TAO_ServerActivator_Proxy_Broker;
    class _TAO_ServerActivator_Remote_Proxy_Broker;
    
    class CIAO_Export ServerActivator
      : public virtual CORBA::Object
    {
    public:
      typedef ServerActivator_ptr _ptr_type;
      typedef ServerActivator_var _var_type;
      static int _tao_class_id;
      
      // The static operations.
      static ServerActivator_ptr _duplicate (ServerActivator_ptr obj);
      
      static ServerActivator_ptr _narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static ServerActivator_ptr _unchecked_narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static ServerActivator_ptr _nil (void)
        {
          return (ServerActivator_ptr)0;
        }
      
      static void _tao_any_destructor (void *);
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Deployment::ComponentServer_ptr create_component_server (
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::CreateFailure
          , Components::InvalidConfiguration
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void remove_component_server (
          Components::Deployment::ComponentServer_ptr server
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Deployment::ComponentServers * get_component_servers (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
      
      virtual CORBA::Boolean _is_a (
          const char *type_id
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      virtual void *_tao_QueryInterface (ptr_arith_t type);
      
      virtual const char* _interface_repository_id (void) const;
    private:
      _TAO_ServerActivator_Proxy_Broker *the_TAO_ServerActivator_Proxy_Broker_;
    
    protected:
      ServerActivator (int collocated = 0);
      
      // These methods travese the inheritance tree and set the
      // parents piece of the given class in the right mode.
      virtual void Components_Deployment_ServerActivator_setup_collocation (int collocated);
      
      ServerActivator (
          TAO_Stub *objref, 
          CORBA::Boolean _tao_collocated = 0,
          TAO_Abstract_ServantBase *servant = 0
        );
      virtual ~ServerActivator (void);
      
      friend class _TAO_ServerActivator_Remote_Proxy_Impl;
      friend class _TAO_ServerActivator_ThruPOA_Proxy_Impl;
      friend class _TAO_ServerActivator_Direct_Proxy_Impl;
    
    private:
      ServerActivator (const ServerActivator &);
      void operator= (const ServerActivator &);
    };
    
    // The Proxy Implementations are used by each interface to
    // perform a call. Each different implementation encapsulates
    // an invocation logic.
    
    
    ///////////////////////////////////////////////////////////////////////
    //                    Base Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
    
    class CIAO_Export _TAO_ServerActivator_Proxy_Impl
      : public virtual TAO_Object_Proxy_Impl
    {
    public:
      virtual ~_TAO_ServerActivator_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Deployment::ComponentServer_ptr create_component_server (
          CORBA_Object *_collocated_tao_target_,
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::CreateFailure
          , Components::InvalidConfiguration
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void remove_component_server (
          CORBA_Object *_collocated_tao_target_,
          Components::Deployment::ComponentServer_ptr server
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Deployment::ComponentServers * get_component_servers (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
    
    protected:
      _TAO_ServerActivator_Proxy_Impl (void);
    };
    
    //
    //               End Base Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    
    ///////////////////////////////////////////////////////////////////////
    //                Remote Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
    
    class CIAO_Export _TAO_ServerActivator_Remote_Proxy_Impl
      : public virtual _TAO_ServerActivator_Proxy_Impl,
        public virtual TAO_Remote_Object_Proxy_Impl
    {
    public:
      _TAO_ServerActivator_Remote_Proxy_Impl (void);
      
      virtual ~_TAO_ServerActivator_Remote_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Deployment::ComponentServer_ptr create_component_server (
          CORBA_Object *_collocated_tao_target_,
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::CreateFailure
          , Components::InvalidConfiguration
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void remove_component_server (
          CORBA_Object *_collocated_tao_target_,
          Components::Deployment::ComponentServer_ptr server
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Deployment::ComponentServers * get_component_servers (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
    };
    
    //
    //             End Remote Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    // The Proxy Brokers are used by each interface to get
    // the right proxy for performing a call. In the new 
    // collocation scheme, the proxy to be used can vary on
    // a call by call basis.
    
    ///////////////////////////////////////////////////////////////////////
    //                 Base Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
    
    class CIAO_Export _TAO_ServerActivator_Proxy_Broker
    {
    public:
      virtual ~_TAO_ServerActivator_Proxy_Broker (void);
      virtual _TAO_ServerActivator_Proxy_Impl &select_proxy (
          ServerActivator *object
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        ) = 0;
      
    protected:
      _TAO_ServerActivator_Proxy_Broker (void);
      
    };
    
    //
    //              End Base Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////
    
        
    ///////////////////////////////////////////////////////////////////////
    //                 Remote Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
    
    class CIAO_Export _TAO_ServerActivator_Remote_Proxy_Broker
      : public virtual _TAO_ServerActivator_Proxy_Broker
    {
    public: 
      _TAO_ServerActivator_Remote_Proxy_Broker (void);
      
      virtual ~_TAO_ServerActivator_Remote_Proxy_Broker (void);
      
      virtual _TAO_ServerActivator_Proxy_Impl &select_proxy (
          ServerActivator *object
          ACE_ENV_ARG_DECL
        );
      
    private:
      _TAO_ServerActivator_Remote_Proxy_Impl remote_proxy_impl_;
    
    public:
      // This member function is used to get an handle to the unique instance
      // of the Remote Proxy Broker that is available for a given
      // interface.
      static _TAO_ServerActivator_Remote_Proxy_Broker *the_TAO_ServerActivator_Remote_Proxy_Broker (void);
    };
    
    //
    //              End Remote Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ServerActivator;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface_fwd/interface_fwd_ch.cpp:53
    
    class Container;

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINER___PTR_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINER___PTR_CH_
    
    typedef Container *Container_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINER___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINER___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export Container_var : public TAO_Base_var
    {
    public:
      Container_var (void); // default constructor
      Container_var (Container_ptr p) : ptr_ (p) {} 
      Container_var (const Container_var &); // copy constructor
      ~Container_var (void); // destructor
      
      Container_var &operator= (Container_ptr);
      Container_var &operator= (const Container_var &);
      Container_ptr operator-> (void) const;
      
      operator const Container_ptr &() const;
      operator Container_ptr &();
      // in, inout, out, _retn 
      Container_ptr in (void) const;
      Container_ptr &inout (void);
      Container_ptr &out (void);
      Container_ptr _retn (void);
      Container_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static Container_ptr tao_duplicate (Container_ptr);
      static void tao_release (Container_ptr);
      static Container_ptr tao_nil (void);
      static Container_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      Container_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      Container_var (const TAO_Base_var &rhs);
      Container_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINER___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINER___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export Container_out
    {
    public:
      Container_out (Container_ptr &);
      Container_out (Container_var &);
      Container_out (const Container_out &);
      Container_out &operator= (const Container_out &);
      Container_out &operator= (const Container_var &);
      Container_out &operator= (Container_ptr);
      operator Container_ptr &();
      Container_ptr &ptr (void);
      Container_ptr operator-> (void);
    
    private:
      Container_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_COMPONENTS_DEPLOYMENT_CONTAINERS_CH_)
#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_COMPONENTS_DEPLOYMENT_CONTAINERS_CH_
    
    class CIAO_Export _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers
      : public TAO_Unbounded_Base_Sequence
    {
    public:
      _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers (void);
      _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers (CORBA::ULong maximum);
      _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers (
          CORBA::ULong maximum,
          CORBA::ULong length,
          Container* *value,
          CORBA::Boolean release = 0
        );
      _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers (
          const _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers &rhs
        );
      _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers &operator= (
          const _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers &rhs
        );
      virtual ~_TAO_Unbounded_Object_Sequence_Components_Deployment_Containers (void);
      
      // = Accessors.
      TAO_Object_Manager<Components::Deployment::Container,Components::Deployment::Container_var> operator[] (CORBA::ULong index) const;
      
      // = Static operations.
      static Container **allocbuf (CORBA::ULong nelems);
      static void freebuf (Container **buffer);
      
      // Implement the TAO_Base_Sequence methods (see Sequence.h)
      virtual void _allocate_buffer (CORBA::ULong length);
      virtual void _deallocate_buffer (void);
      Container* *get_buffer (CORBA::Boolean orphan = 0);
      const Container* *get_buffer (void) const;
      virtual void _shrink_buffer (
          CORBA::ULong nl,
          CORBA::ULong ol
        );
      
      virtual void _downcast (
          void* target,
          CORBA_Object *src
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      virtual CORBA_Object* _upcast (void *src) const;
    };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINERS_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINERS_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
    
    class Containers;
    class Containers_var;
    
    // *************************************************************
    // Components::Deployment::Containers
    // *************************************************************
    
    class CIAO_Export Containers : public 
    
    // TAO_IDL - Generated from 
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
    _TAO_Unbounded_Object_Sequence_Components_Deployment_Containers
#else /* TAO_USE_SEQUENCE_TEMPLATES */
    TAO_Unbounded_Object_Sequence<Container,Container_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
    {
    public:
      Containers (void);
      Containers (CORBA::ULong max);
      Containers (
          CORBA::ULong max, 
          CORBA::ULong length, 
          Container_ptr *buffer, 
          CORBA::Boolean release = 0
        );
      Containers (const Containers &);
      ~Containers (void);
      
      static void _tao_any_destructor (void*);
      
      typedef Containers_var _var_type;
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINERS___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINERS___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
    
    // *************************************************************
    // class Components::Deployment::Containers_var
    // *************************************************************
    
    class CIAO_Export Containers_var
    {
    public:
      Containers_var (void);
      Containers_var (Containers *);
      Containers_var (const Containers_var &);
      ~Containers_var (void);
      
      Containers_var &operator= (Containers *);
      Containers_var &operator= (const Containers_var &);
      Containers *operator-> (void);
      const Containers *operator-> (void) const;
      
      operator const Containers &() const;
      operator Containers &();
      operator Containers &() const;
      
      // Variable-size base types only.
      operator Containers *&();
      
      TAO_Object_Manager<Container, Container_var> operator[] (CORBA::ULong index);
      
      // in, inout, out, _retn 
      const Containers &in (void) const;
      Containers &inout (void);
      Containers *&out (void);
      Containers *_retn (void);
      Containers *ptr (void) const;
    
    private:
      Containers *ptr_;
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINERS___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINERS___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
    
    class CIAO_Export Containers_out
    {
    public:
      Containers_out (Containers *&);
      Containers_out (Containers_var &);
      Containers_out (const Containers_out &);
      Containers_out &operator= (const Containers_out &);
      Containers_out &operator= (Containers *);
      operator Containers *&();
      Containers *&ptr (void);
      Containers *operator-> (void);
      TAO_Object_Manager<Container, Container_var> operator[] (CORBA::ULong index);
    
    private:
      Containers *&ptr_;
      // Assignment from T_var not allowed.
      void operator= (const Containers_var &);
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Containers;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVER___PTR_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVER___PTR_CH_
    
    class ComponentServer;
    typedef ComponentServer *ComponentServer_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVER___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVER___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export ComponentServer_var : public TAO_Base_var
    {
    public:
      ComponentServer_var (void); // default constructor
      ComponentServer_var (ComponentServer_ptr p) : ptr_ (p) {} 
      ComponentServer_var (const ComponentServer_var &); // copy constructor
      ~ComponentServer_var (void); // destructor
      
      ComponentServer_var &operator= (ComponentServer_ptr);
      ComponentServer_var &operator= (const ComponentServer_var &);
      ComponentServer_ptr operator-> (void) const;
      
      operator const ComponentServer_ptr &() const;
      operator ComponentServer_ptr &();
      // in, inout, out, _retn 
      ComponentServer_ptr in (void) const;
      ComponentServer_ptr &inout (void);
      ComponentServer_ptr &out (void);
      ComponentServer_ptr _retn (void);
      ComponentServer_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static ComponentServer_ptr tao_duplicate (ComponentServer_ptr);
      static void tao_release (ComponentServer_ptr);
      static ComponentServer_ptr tao_nil (void);
      static ComponentServer_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      ComponentServer_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      ComponentServer_var (const TAO_Base_var &rhs);
      ComponentServer_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVER___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVER___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export ComponentServer_out
    {
    public:
      ComponentServer_out (ComponentServer_ptr &);
      ComponentServer_out (ComponentServer_var &);
      ComponentServer_out (const ComponentServer_out &);
      ComponentServer_out &operator= (const ComponentServer_out &);
      ComponentServer_out &operator= (const ComponentServer_var &);
      ComponentServer_out &operator= (ComponentServer_ptr);
      operator ComponentServer_ptr &();
      ComponentServer_ptr &ptr (void);
      ComponentServer_ptr operator-> (void);
    
    private:
      ComponentServer_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_DEPLOYMENT_COMPONENTSERVER_CH_)
#define _COMPONENTS_DEPLOYMENT_COMPONENTSERVER_CH_
    
    class _TAO_ComponentServer_Proxy_Impl;
    class _TAO_ComponentServer_Remote_Proxy_Impl;
    class _TAO_ComponentServer_Proxy_Broker;
    class _TAO_ComponentServer_Remote_Proxy_Broker;
    
    class CIAO_Export ComponentServer
      : public virtual CORBA::Object
    {
    public:
      typedef ComponentServer_ptr _ptr_type;
      typedef ComponentServer_var _var_type;
      static int _tao_class_id;
      
      // The static operations.
      static ComponentServer_ptr _duplicate (ComponentServer_ptr obj);
      
      static ComponentServer_ptr _narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static ComponentServer_ptr _unchecked_narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static ComponentServer_ptr _nil (void)
        {
          return (ComponentServer_ptr)0;
        }
      
      static void _tao_any_destructor (void *);
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::ConfigValues * configuration (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Deployment::ServerActivator_ptr get_server_activator (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Deployment::Container_ptr create_container (
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::CreateFailure
          , Components::InvalidConfiguration
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void remove_container (
          Components::Deployment::Container_ptr cref
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Deployment::Containers * get_containers (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void remove (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
      
      virtual CORBA::Boolean _is_a (
          const char *type_id
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      virtual void *_tao_QueryInterface (ptr_arith_t type);
      
      virtual const char* _interface_repository_id (void) const;
    private:
      _TAO_ComponentServer_Proxy_Broker *the_TAO_ComponentServer_Proxy_Broker_;
    
    protected:
      ComponentServer (int collocated = 0);
      
      // These methods travese the inheritance tree and set the
      // parents piece of the given class in the right mode.
      virtual void Components_Deployment_ComponentServer_setup_collocation (int collocated);
      
      ComponentServer (
          TAO_Stub *objref, 
          CORBA::Boolean _tao_collocated = 0,
          TAO_Abstract_ServantBase *servant = 0
        );
      virtual ~ComponentServer (void);
      
      friend class _TAO_ComponentServer_Remote_Proxy_Impl;
      friend class _TAO_ComponentServer_ThruPOA_Proxy_Impl;
      friend class _TAO_ComponentServer_Direct_Proxy_Impl;
    
    private:
      ComponentServer (const ComponentServer &);
      void operator= (const ComponentServer &);
    };
    
    // The Proxy Implementations are used by each interface to
    // perform a call. Each different implementation encapsulates
    // an invocation logic.
    
    
    ///////////////////////////////////////////////////////////////////////
    //                    Base Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
    
    class CIAO_Export _TAO_ComponentServer_Proxy_Impl
      : public virtual TAO_Object_Proxy_Impl
    {
    public:
      virtual ~_TAO_ComponentServer_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::ConfigValues * configuration (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Deployment::ServerActivator_ptr get_server_activator (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Deployment::Container_ptr create_container (
          CORBA_Object *_collocated_tao_target_,
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::CreateFailure
          , Components::InvalidConfiguration
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void remove_container (
          CORBA_Object *_collocated_tao_target_,
          Components::Deployment::Container_ptr cref
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Deployment::Containers * get_containers (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void remove (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        )) = 0;
    
    protected:
      _TAO_ComponentServer_Proxy_Impl (void);
    };
    
    //
    //               End Base Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    
    ///////////////////////////////////////////////////////////////////////
    //                Remote Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
    
    class CIAO_Export _TAO_ComponentServer_Remote_Proxy_Impl
      : public virtual _TAO_ComponentServer_Proxy_Impl,
        public virtual TAO_Remote_Object_Proxy_Impl
    {
    public:
      _TAO_ComponentServer_Remote_Proxy_Impl (void);
      
      virtual ~_TAO_ComponentServer_Remote_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::ConfigValues * configuration (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Deployment::ServerActivator_ptr get_server_activator (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Deployment::Container_ptr create_container (
          CORBA_Object *_collocated_tao_target_,
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::CreateFailure
          , Components::InvalidConfiguration
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void remove_container (
          CORBA_Object *_collocated_tao_target_,
          Components::Deployment::Container_ptr cref
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Deployment::Containers * get_containers (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void remove (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
    };
    
    //
    //             End Remote Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    // The Proxy Brokers are used by each interface to get
    // the right proxy for performing a call. In the new 
    // collocation scheme, the proxy to be used can vary on
    // a call by call basis.
    
    ///////////////////////////////////////////////////////////////////////
    //                 Base Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
    
    class CIAO_Export _TAO_ComponentServer_Proxy_Broker
    {
    public:
      virtual ~_TAO_ComponentServer_Proxy_Broker (void);
      virtual _TAO_ComponentServer_Proxy_Impl &select_proxy (
          ComponentServer *object
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        ) = 0;
      
    protected:
      _TAO_ComponentServer_Proxy_Broker (void);
      
    };
    
    //
    //              End Base Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////
    
        
    ///////////////////////////////////////////////////////////////////////
    //                 Remote Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
    
    class CIAO_Export _TAO_ComponentServer_Remote_Proxy_Broker
      : public virtual _TAO_ComponentServer_Proxy_Broker
    {
    public: 
      _TAO_ComponentServer_Remote_Proxy_Broker (void);
      
      virtual ~_TAO_ComponentServer_Remote_Proxy_Broker (void);
      
      virtual _TAO_ComponentServer_Proxy_Impl &select_proxy (
          ComponentServer *object
          ACE_ENV_ARG_DECL
        );
      
    private:
      _TAO_ComponentServer_Remote_Proxy_Impl remote_proxy_impl_;
    
    public:
      // This member function is used to get an handle to the unique instance
      // of the Remote Proxy Broker that is available for a given
      // interface.
      static _TAO_ComponentServer_Remote_Proxy_Broker *the_TAO_ComponentServer_Remote_Proxy_Broker (void);
    };
    
    //
    //              End Remote Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ComponentServer;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_DEPLOYMENT_IMPLENTRYPOINTNOTFOUND_CH_)
#define _COMPONENTS_DEPLOYMENT_IMPLENTRYPOINTNOTFOUND_CH_
    
    class CIAO_Export ImplEntryPointNotFound : public CORBA::UserException
    {
    public:
      
      ImplEntryPointNotFound (void);
      ImplEntryPointNotFound (const ImplEntryPointNotFound &);
      ~ImplEntryPointNotFound (void);

      ImplEntryPointNotFound &operator= (const ImplEntryPointNotFound &);
      
      static void _tao_any_destructor (void *);
      
      static ImplEntryPointNotFound *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ImplEntryPointNotFound;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINER___PTR_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINER___PTR_CH_
    
    class Container;
    typedef Container *Container_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINER___VAR_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINER___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export Container_var : public TAO_Base_var
    {
    public:
      Container_var (void); // default constructor
      Container_var (Container_ptr p) : ptr_ (p) {} 
      Container_var (const Container_var &); // copy constructor
      ~Container_var (void); // destructor
      
      Container_var &operator= (Container_ptr);
      Container_var &operator= (const Container_var &);
      Container_ptr operator-> (void) const;
      
      operator const Container_ptr &() const;
      operator Container_ptr &();
      // in, inout, out, _retn 
      Container_ptr in (void) const;
      Container_ptr &inout (void);
      Container_ptr &out (void);
      Container_ptr _retn (void);
      Container_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static Container_ptr tao_duplicate (Container_ptr);
      static void tao_release (Container_ptr);
      static Container_ptr tao_nil (void);
      static Container_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      Container_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      Container_var (const TAO_Base_var &rhs);
      Container_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINER___OUT_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINER___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export Container_out
    {
    public:
      Container_out (Container_ptr &);
      Container_out (Container_var &);
      Container_out (const Container_out &);
      Container_out &operator= (const Container_out &);
      Container_out &operator= (const Container_var &);
      Container_out &operator= (Container_ptr);
      operator Container_ptr &();
      Container_ptr &ptr (void);
      Container_ptr operator-> (void);
    
    private:
      Container_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_DEPLOYMENT_CONTAINER_CH_)
#define _COMPONENTS_DEPLOYMENT_CONTAINER_CH_
    
    class _TAO_Container_Proxy_Impl;
    class _TAO_Container_Remote_Proxy_Impl;
    class _TAO_Container_Proxy_Broker;
    class _TAO_Container_Remote_Proxy_Broker;
    
    class CIAO_Export Container
      : public virtual CORBA::Object
    {
    public:
      typedef Container_ptr _ptr_type;
      typedef Container_var _var_type;
      static int _tao_class_id;
      
      // The static operations.
      static Container_ptr _duplicate (Container_ptr obj);
      
      static Container_ptr _narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static Container_ptr _unchecked_narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static Container_ptr _nil (void)
        {
          return (Container_ptr)0;
        }
      
      static void _tao_any_destructor (void *);
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::ConfigValues * configuration (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Deployment::ComponentServer_ptr get_component_server (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::CCMHome_ptr install_home (
          const char * id,
          const char * entrypt,
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::Deployment::ImplEntryPointNotFound
          , Components::Deployment::InstallationFailure
          , Components::InvalidConfiguration
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void remove_home (
          Components::CCMHome_ptr href
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::CCMHomes * get_homes (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void remove (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
      
      virtual CORBA::Boolean _is_a (
          const char *type_id
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      virtual void *_tao_QueryInterface (ptr_arith_t type);
      
      virtual const char* _interface_repository_id (void) const;
    private:
      _TAO_Container_Proxy_Broker *the_TAO_Container_Proxy_Broker_;
    
    protected:
      Container (int collocated = 0);
      
      // These methods travese the inheritance tree and set the
      // parents piece of the given class in the right mode.
      virtual void Components_Deployment_Container_setup_collocation (int collocated);
      
      Container (
          TAO_Stub *objref, 
          CORBA::Boolean _tao_collocated = 0,
          TAO_Abstract_ServantBase *servant = 0
        );
      virtual ~Container (void);
      
      friend class _TAO_Container_Remote_Proxy_Impl;
      friend class _TAO_Container_ThruPOA_Proxy_Impl;
      friend class _TAO_Container_Direct_Proxy_Impl;
    
    private:
      Container (const Container &);
      void operator= (const Container &);
    };
    
    // The Proxy Implementations are used by each interface to
    // perform a call. Each different implementation encapsulates
    // an invocation logic.
    
    
    ///////////////////////////////////////////////////////////////////////
    //                    Base Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
    
    class CIAO_Export _TAO_Container_Proxy_Impl
      : public virtual TAO_Object_Proxy_Impl
    {
    public:
      virtual ~_TAO_Container_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::ConfigValues * configuration (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::Deployment::ComponentServer_ptr get_component_server (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::CCMHome_ptr install_home (
          CORBA_Object *_collocated_tao_target_,
          const char * id,
          const char * entrypt,
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::Deployment::ImplEntryPointNotFound
          , Components::Deployment::InstallationFailure
          , Components::InvalidConfiguration
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void remove_home (
          CORBA_Object *_collocated_tao_target_,
          Components::CCMHome_ptr href
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual ::Components::CCMHomes * get_homes (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
      
      virtual void remove (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        )) = 0;
    
    protected:
      _TAO_Container_Proxy_Impl (void);
    };
    
    //
    //               End Base Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    
    ///////////////////////////////////////////////////////////////////////
    //                Remote Proxy Impl. Declaration
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
    
    class CIAO_Export _TAO_Container_Remote_Proxy_Impl
      : public virtual _TAO_Container_Proxy_Impl,
        public virtual TAO_Remote_Object_Proxy_Impl
    {
    public:
      _TAO_Container_Remote_Proxy_Impl (void);
      
      virtual ~_TAO_Container_Remote_Proxy_Impl (void) {}
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::ConfigValues * configuration (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::Deployment::ComponentServer_ptr get_component_server (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::CCMHome_ptr install_home (
          CORBA_Object *_collocated_tao_target_,
          const char * id,
          const char * entrypt,
          const Components::ConfigValues & config
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Deployment::UnknownImplId
          , Components::Deployment::ImplEntryPointNotFound
          , Components::Deployment::InstallationFailure
          , Components::InvalidConfiguration
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void remove_home (
          CORBA_Object *_collocated_tao_target_,
          Components::CCMHome_ptr href
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual ::Components::CCMHomes * get_homes (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
        ));
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
      
      virtual void remove (
          CORBA_Object *_collocated_tao_target_
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::RemoveFailure
        ));
    };
    
    //
    //             End Remote Proxy Impl. Declaration
    ///////////////////////////////////////////////////////////////////////
    
    // The Proxy Brokers are used by each interface to get
    // the right proxy for performing a call. In the new 
    // collocation scheme, the proxy to be used can vary on
    // a call by call basis.
    
    ///////////////////////////////////////////////////////////////////////
    //                 Base Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
    
    class CIAO_Export _TAO_Container_Proxy_Broker
    {
    public:
      virtual ~_TAO_Container_Proxy_Broker (void);
      virtual _TAO_Container_Proxy_Impl &select_proxy (
          Container *object
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        ) = 0;
      
    protected:
      _TAO_Container_Proxy_Broker (void);
      
    };
    
    //
    //              End Base Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////
    
        
    ///////////////////////////////////////////////////////////////////////
    //                 Remote Proxy Broker Declaration 
    //
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
    
    class CIAO_Export _TAO_Container_Remote_Proxy_Broker
      : public virtual _TAO_Container_Proxy_Broker
    {
    public: 
      _TAO_Container_Remote_Proxy_Broker (void);
      
      virtual ~_TAO_Container_Remote_Proxy_Broker (void);
      
      virtual _TAO_Container_Proxy_Impl &select_proxy (
          Container *object
          ACE_ENV_ARG_DECL
        );
      
    private:
      _TAO_Container_Remote_Proxy_Impl remote_proxy_impl_;
    
    public:
      // This member function is used to get an handle to the unique instance
      // of the Remote Proxy Broker that is available for a given
      // interface.
      static _TAO_Container_Remote_Proxy_Broker *the_TAO_Container_Remote_Proxy_Broker (void);
    };
    
    //
    //              End Remote Proxy Broker Declaration 
    ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Container;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67
  
  }
TAO_NAMESPACE_CLOSE // module Components::Deployment

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67

}
TAO_NAMESPACE_CLOSE // module Components

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/root.cpp:80

extern CIAO_Export
Components::Deployment::_TAO_ComponentInstallation_Proxy_Broker *
(*Components_Deployment__TAO_ComponentInstallation_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::Deployment::_TAO_Assembly_Proxy_Broker *
(*Components_Deployment__TAO_Assembly_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::Deployment::_TAO_AssemblyFactory_Proxy_Broker *
(*Components_Deployment__TAO_AssemblyFactory_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::Deployment::_TAO_ServerActivator_Proxy_Broker *
(*Components_Deployment__TAO_ServerActivator_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::Deployment::_TAO_ComponentServer_Proxy_Broker *
(*Components_Deployment__TAO_ComponentServer_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::Deployment::_TAO_Container_Proxy_Broker *
(*Components_Deployment__TAO_Container_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_ch.cpp:51

CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::AssemblyState);
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::AssemblyState &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Deployment::UnknownImplId &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::UnknownImplId*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::UnknownImplId *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Deployment::UnknownImplId *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Deployment::InvalidLocation &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::InvalidLocation*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::InvalidLocation *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Deployment::InvalidLocation *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Deployment::InstallationFailure &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::InstallationFailure*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::InstallationFailure *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Deployment::InstallationFailure *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Deployment::InvalidAssembly &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::InvalidAssembly*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::InvalidAssembly *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Deployment::InvalidAssembly *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::ComponentInstallation_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::ComponentInstallation_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::ComponentInstallation_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::Assembly_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::Assembly_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::Assembly_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::AssemblyFactory_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::AssemblyFactory_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::AssemblyFactory_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Deployment::ComponentServers &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::ComponentServers*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::ComponentServers *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Deployment::ComponentServers *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::ServerActivator_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::ServerActivator_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::ServerActivator_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Deployment::Containers &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::Containers*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::Containers *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Deployment::Containers *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::ComponentServer_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::ComponentServer_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::ComponentServer_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Deployment::ImplEntryPointNotFound &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::ImplEntryPointNotFound*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::ImplEntryPointNotFound *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Deployment::ImplEntryPointNotFound *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::Container_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Deployment::Container_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Deployment::Container_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/cdr_op_ch.cpp:50

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::AssemblyState &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::AssemblyState &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::UnknownImplId &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::UnknownImplId &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::InvalidLocation &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::InvalidLocation &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::InstallationFailure &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::InstallationFailure &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::InvalidAssembly &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::InvalidAssembly &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::ComponentInstallation_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::ComponentInstallation_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::Assembly_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::Assembly_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::AssemblyFactory_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::AssemblyFactory_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_Deployment_ComponentServers_H_
#define _TAO_CDR_OP_Components_Deployment_ComponentServers_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::Deployment::ComponentServers &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::Deployment::ComponentServers &
  );

#endif /* _TAO_CDR_OP_Components_Deployment_ComponentServers_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::ServerActivator_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::ServerActivator_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_Deployment_Containers_H_
#define _TAO_CDR_OP_Components_Deployment_Containers_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::Deployment::Containers &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::Deployment::Containers &
  );

#endif /* _TAO_CDR_OP_Components_Deployment_Containers_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::ComponentServer_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::ComponentServer_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::ImplEntryPointNotFound &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::ImplEntryPointNotFound &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Deployment::Container_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Deployment::Container_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1007

#if defined (__ACE_INLINE__)
#include "CIAO_DeploymentC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

