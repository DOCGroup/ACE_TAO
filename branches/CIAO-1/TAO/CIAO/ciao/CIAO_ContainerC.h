// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_CIAO_CONTAINERC_H_
#define _TAO_IDL_CIAO_CONTAINERC_H_

#include "ace/pre.h"
#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "CIAO_export.h"

#include "CIAO_ComponentC.h"
#include "SecurityLevel2C.h"
#include "CIAO_TransactionC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CIAO_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO CIAO_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:45

TAO_NAMESPACE  Components
{
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:294
  
  typedef SecurityLevel2::Credentials Principal;
  typedef SecurityLevel2::Credentials_ptr Principal_ptr;
  typedef SecurityLevel2::Credentials_var Principal_var;
  typedef SecurityLevel2::Credentials_out Principal_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Principal;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_CCMCONTEXT___PTR_CH_)
#define _COMPONENTS_CCMCONTEXT___PTR_CH_
  
  class CCMContext;
  typedef CCMContext *CCMContext_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMCONTEXT___VAR_CH_)
#define _COMPONENTS_CCMCONTEXT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export CCMContext_var : public TAO_Base_var
  {
  public:
    CCMContext_var (void); // default constructor
    CCMContext_var (CCMContext_ptr p) : ptr_ (p) {} 
    CCMContext_var (const CCMContext_var &); // copy constructor
    ~CCMContext_var (void); // destructor
    
    CCMContext_var &operator= (CCMContext_ptr);
    CCMContext_var &operator= (const CCMContext_var &);
    CCMContext_ptr operator-> (void) const;
    
    operator const CCMContext_ptr &() const;
    operator CCMContext_ptr &();
    // in, inout, out, _retn 
    CCMContext_ptr in (void) const;
    CCMContext_ptr &inout (void);
    CCMContext_ptr &out (void);
    CCMContext_ptr _retn (void);
    CCMContext_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static CCMContext_ptr tao_duplicate (CCMContext_ptr);
    static void tao_release (CCMContext_ptr);
    static CCMContext_ptr tao_nil (void);
    static CCMContext_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    CCMContext_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    CCMContext_var (const TAO_Base_var &rhs);
    CCMContext_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMCONTEXT___OUT_CH_)
#define _COMPONENTS_CCMCONTEXT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export CCMContext_out
  {
  public:
    CCMContext_out (CCMContext_ptr &);
    CCMContext_out (CCMContext_var &);
    CCMContext_out (const CCMContext_out &);
    CCMContext_out &operator= (const CCMContext_out &);
    CCMContext_out &operator= (const CCMContext_var &);
    CCMContext_out &operator= (CCMContext_ptr);
    operator CCMContext_ptr &();
    CCMContext_ptr &ptr (void);
    CCMContext_ptr operator-> (void);
  
  private:
    CCMContext_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_CCMCONTEXT_CH_)
#define _COMPONENTS_CCMCONTEXT_CH_
  
  class CIAO_Export CCMContext
    : public virtual CORBA::Object
  {
  public:
    typedef CCMContext_ptr _ptr_type;
    typedef CCMContext_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static CCMContext_ptr _duplicate (CCMContext_ptr obj);
    
    static CCMContext_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static CCMContext_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static CCMContext_ptr _nil (void)
      {
        return (CCMContext_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::Principal_ptr get_caller_principal (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::CCMHome_ptr get_CCM_home (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean get_rollback_only (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::IllegalState
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::Transaction::UserTransaction_ptr get_user_transaction (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::IllegalState
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean is_caller_in_role (
        const char * role
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void set_rollback_only (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::IllegalState
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    CCMContext (void);
    virtual ~CCMContext (void);
    
    friend class _TAO_CCMContext_Remote_Proxy_Impl;
    friend class _TAO_CCMContext_ThruPOA_Proxy_Impl;
    friend class _TAO_CCMContext_Direct_Proxy_Impl;
  
  private:
    CCMContext (const CCMContext &);
    void operator= (const CCMContext &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CCMContext;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/enum_ch.cpp:57
  
  enum CCMExceptionReason
  {
    SYSTEM_ERROR,
    CREATE_ERROR,
    REMOVE_ERROR,
    DUPLICATE_KEY,
    FIND_ERROR,
    OBJECT_NOT_FOUND,
    NO_SUCH_ENTITY
  };
  
  typedef CCMExceptionReason &CCMExceptionReason_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CCMExceptionReason;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_CCMEXCEPTION_CH_)
#define _COMPONENTS_CCMEXCEPTION_CH_
  
  class CIAO_Export CCMException : public CORBA::UserException
  {
  public:
    
    Components::CCMExceptionReason reason;
    CCMException (void);
    CCMException (const CCMException &);
    ~CCMException (void);

    CCMException &operator= (const CCMException &);
    
    static void _tao_any_destructor (void *);
    
    static CCMException *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66
    
    CCMException (
        ACE_NESTED_CLASS (Components, CCMExceptionReason) _tao_reason
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CCMException;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_ENTERPRISECOMPONENT___PTR_CH_)
#define _COMPONENTS_ENTERPRISECOMPONENT___PTR_CH_
  
  class EnterpriseComponent;
  typedef EnterpriseComponent *EnterpriseComponent_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENTERPRISECOMPONENT___VAR_CH_)
#define _COMPONENTS_ENTERPRISECOMPONENT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export EnterpriseComponent_var : public TAO_Base_var
  {
  public:
    EnterpriseComponent_var (void); // default constructor
    EnterpriseComponent_var (EnterpriseComponent_ptr p) : ptr_ (p) {} 
    EnterpriseComponent_var (const EnterpriseComponent_var &); // copy constructor
    ~EnterpriseComponent_var (void); // destructor
    
    EnterpriseComponent_var &operator= (EnterpriseComponent_ptr);
    EnterpriseComponent_var &operator= (const EnterpriseComponent_var &);
    EnterpriseComponent_ptr operator-> (void) const;
    
    operator const EnterpriseComponent_ptr &() const;
    operator EnterpriseComponent_ptr &();
    // in, inout, out, _retn 
    EnterpriseComponent_ptr in (void) const;
    EnterpriseComponent_ptr &inout (void);
    EnterpriseComponent_ptr &out (void);
    EnterpriseComponent_ptr _retn (void);
    EnterpriseComponent_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static EnterpriseComponent_ptr tao_duplicate (EnterpriseComponent_ptr);
    static void tao_release (EnterpriseComponent_ptr);
    static EnterpriseComponent_ptr tao_nil (void);
    static EnterpriseComponent_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    EnterpriseComponent_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    EnterpriseComponent_var (const TAO_Base_var &rhs);
    EnterpriseComponent_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENTERPRISECOMPONENT___OUT_CH_)
#define _COMPONENTS_ENTERPRISECOMPONENT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export EnterpriseComponent_out
  {
  public:
    EnterpriseComponent_out (EnterpriseComponent_ptr &);
    EnterpriseComponent_out (EnterpriseComponent_var &);
    EnterpriseComponent_out (const EnterpriseComponent_out &);
    EnterpriseComponent_out &operator= (const EnterpriseComponent_out &);
    EnterpriseComponent_out &operator= (const EnterpriseComponent_var &);
    EnterpriseComponent_out &operator= (EnterpriseComponent_ptr);
    operator EnterpriseComponent_ptr &();
    EnterpriseComponent_ptr &ptr (void);
    EnterpriseComponent_ptr operator-> (void);
  
  private:
    EnterpriseComponent_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_ENTERPRISECOMPONENT_CH_)
#define _COMPONENTS_ENTERPRISECOMPONENT_CH_
  
  class CIAO_Export EnterpriseComponent
    : public virtual CORBA::Object
  {
  public:
    typedef EnterpriseComponent_ptr _ptr_type;
    typedef EnterpriseComponent_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static EnterpriseComponent_ptr _duplicate (EnterpriseComponent_ptr obj);
    
    static EnterpriseComponent_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static EnterpriseComponent_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static EnterpriseComponent_ptr _nil (void)
      {
        return (EnterpriseComponent_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    EnterpriseComponent (void);
    virtual ~EnterpriseComponent (void);
    
    friend class _TAO_EnterpriseComponent_Remote_Proxy_Impl;
    friend class _TAO_EnterpriseComponent_ThruPOA_Proxy_Impl;
    friend class _TAO_EnterpriseComponent_Direct_Proxy_Impl;
  
  private:
    EnterpriseComponent (const EnterpriseComponent &);
    void operator= (const EnterpriseComponent &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_EnterpriseComponent;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_SESSIONCONTEXT___PTR_CH_)
#define _COMPONENTS_SESSIONCONTEXT___PTR_CH_
  
  class SessionContext;
  typedef SessionContext *SessionContext_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SESSIONCONTEXT___VAR_CH_)
#define _COMPONENTS_SESSIONCONTEXT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export SessionContext_var : public TAO_Base_var
  {
  public:
    SessionContext_var (void); // default constructor
    SessionContext_var (SessionContext_ptr p) : ptr_ (p) {} 
    SessionContext_var (const SessionContext_var &); // copy constructor
    ~SessionContext_var (void); // destructor
    
    SessionContext_var &operator= (SessionContext_ptr);
    SessionContext_var &operator= (const SessionContext_var &);
    SessionContext_ptr operator-> (void) const;
    
    operator const SessionContext_ptr &() const;
    operator SessionContext_ptr &();
    // in, inout, out, _retn 
    SessionContext_ptr in (void) const;
    SessionContext_ptr &inout (void);
    SessionContext_ptr &out (void);
    SessionContext_ptr _retn (void);
    SessionContext_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static SessionContext_ptr tao_duplicate (SessionContext_ptr);
    static void tao_release (SessionContext_ptr);
    static SessionContext_ptr tao_nil (void);
    static SessionContext_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    SessionContext_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    SessionContext_var (const TAO_Base_var &rhs);
    SessionContext_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SESSIONCONTEXT___OUT_CH_)
#define _COMPONENTS_SESSIONCONTEXT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export SessionContext_out
  {
  public:
    SessionContext_out (SessionContext_ptr &);
    SessionContext_out (SessionContext_var &);
    SessionContext_out (const SessionContext_out &);
    SessionContext_out &operator= (const SessionContext_out &);
    SessionContext_out &operator= (const SessionContext_var &);
    SessionContext_out &operator= (SessionContext_ptr);
    operator SessionContext_ptr &();
    SessionContext_ptr &ptr (void);
    SessionContext_ptr operator-> (void);
  
  private:
    SessionContext_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_SESSIONCONTEXT_CH_)
#define _COMPONENTS_SESSIONCONTEXT_CH_
  
  class CIAO_Export SessionContext
    : public virtual Components::CCMContext
  {
  public:
    typedef SessionContext_ptr _ptr_type;
    typedef SessionContext_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static SessionContext_ptr _duplicate (SessionContext_ptr obj);
    
    static SessionContext_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SessionContext_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SessionContext_ptr _nil (void)
      {
        return (SessionContext_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Object_ptr get_CCM_object (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::IllegalState
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    SessionContext (void);
    virtual ~SessionContext (void);
    
    friend class _TAO_SessionContext_Remote_Proxy_Impl;
    friend class _TAO_SessionContext_ThruPOA_Proxy_Impl;
    friend class _TAO_SessionContext_Direct_Proxy_Impl;
  
  private:
    SessionContext (const SessionContext &);
    void operator= (const SessionContext &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SessionContext;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_SESSIONCOMPONENT___PTR_CH_)
#define _COMPONENTS_SESSIONCOMPONENT___PTR_CH_
  
  class SessionComponent;
  typedef SessionComponent *SessionComponent_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SESSIONCOMPONENT___VAR_CH_)
#define _COMPONENTS_SESSIONCOMPONENT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export SessionComponent_var : public TAO_Base_var
  {
  public:
    SessionComponent_var (void); // default constructor
    SessionComponent_var (SessionComponent_ptr p) : ptr_ (p) {} 
    SessionComponent_var (const SessionComponent_var &); // copy constructor
    ~SessionComponent_var (void); // destructor
    
    SessionComponent_var &operator= (SessionComponent_ptr);
    SessionComponent_var &operator= (const SessionComponent_var &);
    SessionComponent_ptr operator-> (void) const;
    
    operator const SessionComponent_ptr &() const;
    operator SessionComponent_ptr &();
    // in, inout, out, _retn 
    SessionComponent_ptr in (void) const;
    SessionComponent_ptr &inout (void);
    SessionComponent_ptr &out (void);
    SessionComponent_ptr _retn (void);
    SessionComponent_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static SessionComponent_ptr tao_duplicate (SessionComponent_ptr);
    static void tao_release (SessionComponent_ptr);
    static SessionComponent_ptr tao_nil (void);
    static SessionComponent_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    SessionComponent_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    SessionComponent_var (const TAO_Base_var &rhs);
    SessionComponent_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SESSIONCOMPONENT___OUT_CH_)
#define _COMPONENTS_SESSIONCOMPONENT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export SessionComponent_out
  {
  public:
    SessionComponent_out (SessionComponent_ptr &);
    SessionComponent_out (SessionComponent_var &);
    SessionComponent_out (const SessionComponent_out &);
    SessionComponent_out &operator= (const SessionComponent_out &);
    SessionComponent_out &operator= (const SessionComponent_var &);
    SessionComponent_out &operator= (SessionComponent_ptr);
    operator SessionComponent_ptr &();
    SessionComponent_ptr &ptr (void);
    SessionComponent_ptr operator-> (void);
  
  private:
    SessionComponent_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_SESSIONCOMPONENT_CH_)
#define _COMPONENTS_SESSIONCOMPONENT_CH_
  
  class CIAO_Export SessionComponent
    : public virtual Components::EnterpriseComponent
  {
  public:
    typedef SessionComponent_ptr _ptr_type;
    typedef SessionComponent_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static SessionComponent_ptr _duplicate (SessionComponent_ptr obj);
    
    static SessionComponent_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SessionComponent_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SessionComponent_ptr _nil (void)
      {
        return (SessionComponent_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void set_session_context (
        Components::SessionContext_ptr ctx
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void ccm_activate (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void ccm_passivate (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void ccm_remove (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    SessionComponent (void);
    virtual ~SessionComponent (void);
    
    friend class _TAO_SessionComponent_Remote_Proxy_Impl;
    friend class _TAO_SessionComponent_ThruPOA_Proxy_Impl;
    friend class _TAO_SessionComponent_Direct_Proxy_Impl;
  
  private:
    SessionComponent (const SessionComponent &);
    void operator= (const SessionComponent &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SessionComponent;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_SESSIONSYNCHRONIZATION___PTR_CH_)
#define _COMPONENTS_SESSIONSYNCHRONIZATION___PTR_CH_
  
  class SessionSynchronization;
  typedef SessionSynchronization *SessionSynchronization_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SESSIONSYNCHRONIZATION___VAR_CH_)
#define _COMPONENTS_SESSIONSYNCHRONIZATION___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export SessionSynchronization_var : public TAO_Base_var
  {
  public:
    SessionSynchronization_var (void); // default constructor
    SessionSynchronization_var (SessionSynchronization_ptr p) : ptr_ (p) {} 
    SessionSynchronization_var (const SessionSynchronization_var &); // copy constructor
    ~SessionSynchronization_var (void); // destructor
    
    SessionSynchronization_var &operator= (SessionSynchronization_ptr);
    SessionSynchronization_var &operator= (const SessionSynchronization_var &);
    SessionSynchronization_ptr operator-> (void) const;
    
    operator const SessionSynchronization_ptr &() const;
    operator SessionSynchronization_ptr &();
    // in, inout, out, _retn 
    SessionSynchronization_ptr in (void) const;
    SessionSynchronization_ptr &inout (void);
    SessionSynchronization_ptr &out (void);
    SessionSynchronization_ptr _retn (void);
    SessionSynchronization_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static SessionSynchronization_ptr tao_duplicate (SessionSynchronization_ptr);
    static void tao_release (SessionSynchronization_ptr);
    static SessionSynchronization_ptr tao_nil (void);
    static SessionSynchronization_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    SessionSynchronization_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    SessionSynchronization_var (const TAO_Base_var &rhs);
    SessionSynchronization_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SESSIONSYNCHRONIZATION___OUT_CH_)
#define _COMPONENTS_SESSIONSYNCHRONIZATION___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export SessionSynchronization_out
  {
  public:
    SessionSynchronization_out (SessionSynchronization_ptr &);
    SessionSynchronization_out (SessionSynchronization_var &);
    SessionSynchronization_out (const SessionSynchronization_out &);
    SessionSynchronization_out &operator= (const SessionSynchronization_out &);
    SessionSynchronization_out &operator= (const SessionSynchronization_var &);
    SessionSynchronization_out &operator= (SessionSynchronization_ptr);
    operator SessionSynchronization_ptr &();
    SessionSynchronization_ptr &ptr (void);
    SessionSynchronization_ptr operator-> (void);
  
  private:
    SessionSynchronization_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_SESSIONSYNCHRONIZATION_CH_)
#define _COMPONENTS_SESSIONSYNCHRONIZATION_CH_
  
  class CIAO_Export SessionSynchronization
    : public virtual CORBA::Object
  {
  public:
    typedef SessionSynchronization_ptr _ptr_type;
    typedef SessionSynchronization_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static SessionSynchronization_ptr _duplicate (SessionSynchronization_ptr obj);
    
    static SessionSynchronization_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SessionSynchronization_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SessionSynchronization_ptr _nil (void)
      {
        return (SessionSynchronization_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void after_begin (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void before_completion (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void after_completion (
        CORBA::Boolean committed
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    SessionSynchronization (void);
    virtual ~SessionSynchronization (void);
    
    friend class _TAO_SessionSynchronization_Remote_Proxy_Impl;
    friend class _TAO_SessionSynchronization_ThruPOA_Proxy_Impl;
    friend class _TAO_SessionSynchronization_Direct_Proxy_Impl;
  
  private:
    SessionSynchronization (const SessionSynchronization &);
    void operator= (const SessionSynchronization &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SessionSynchronization;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_ENTITYCONTEXT___PTR_CH_)
#define _COMPONENTS_ENTITYCONTEXT___PTR_CH_
  
  class EntityContext;
  typedef EntityContext *EntityContext_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENTITYCONTEXT___VAR_CH_)
#define _COMPONENTS_ENTITYCONTEXT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export EntityContext_var : public TAO_Base_var
  {
  public:
    EntityContext_var (void); // default constructor
    EntityContext_var (EntityContext_ptr p) : ptr_ (p) {} 
    EntityContext_var (const EntityContext_var &); // copy constructor
    ~EntityContext_var (void); // destructor
    
    EntityContext_var &operator= (EntityContext_ptr);
    EntityContext_var &operator= (const EntityContext_var &);
    EntityContext_ptr operator-> (void) const;
    
    operator const EntityContext_ptr &() const;
    operator EntityContext_ptr &();
    // in, inout, out, _retn 
    EntityContext_ptr in (void) const;
    EntityContext_ptr &inout (void);
    EntityContext_ptr &out (void);
    EntityContext_ptr _retn (void);
    EntityContext_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static EntityContext_ptr tao_duplicate (EntityContext_ptr);
    static void tao_release (EntityContext_ptr);
    static EntityContext_ptr tao_nil (void);
    static EntityContext_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    EntityContext_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    EntityContext_var (const TAO_Base_var &rhs);
    EntityContext_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENTITYCONTEXT___OUT_CH_)
#define _COMPONENTS_ENTITYCONTEXT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export EntityContext_out
  {
  public:
    EntityContext_out (EntityContext_ptr &);
    EntityContext_out (EntityContext_var &);
    EntityContext_out (const EntityContext_out &);
    EntityContext_out &operator= (const EntityContext_out &);
    EntityContext_out &operator= (const EntityContext_var &);
    EntityContext_out &operator= (EntityContext_ptr);
    operator EntityContext_ptr &();
    EntityContext_ptr &ptr (void);
    EntityContext_ptr operator-> (void);
  
  private:
    EntityContext_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_ENTITYCONTEXT_CH_)
#define _COMPONENTS_ENTITYCONTEXT_CH_
  
  class CIAO_Export EntityContext
    : public virtual Components::CCMContext
  {
  public:
    typedef EntityContext_ptr _ptr_type;
    typedef EntityContext_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static EntityContext_ptr _duplicate (EntityContext_ptr obj);
    
    static EntityContext_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static EntityContext_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static EntityContext_ptr _nil (void)
      {
        return (EntityContext_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Object_ptr get_CCM_object (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::IllegalState
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::PrimaryKeyBase * get_primary_key (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::IllegalState
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    EntityContext (void);
    virtual ~EntityContext (void);
    
    friend class _TAO_EntityContext_Remote_Proxy_Impl;
    friend class _TAO_EntityContext_ThruPOA_Proxy_Impl;
    friend class _TAO_EntityContext_Direct_Proxy_Impl;
  
  private:
    EntityContext (const EntityContext &);
    void operator= (const EntityContext &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_EntityContext;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_ENTITYCOMPONENT___PTR_CH_)
#define _COMPONENTS_ENTITYCOMPONENT___PTR_CH_
  
  class EntityComponent;
  typedef EntityComponent *EntityComponent_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENTITYCOMPONENT___VAR_CH_)
#define _COMPONENTS_ENTITYCOMPONENT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export EntityComponent_var : public TAO_Base_var
  {
  public:
    EntityComponent_var (void); // default constructor
    EntityComponent_var (EntityComponent_ptr p) : ptr_ (p) {} 
    EntityComponent_var (const EntityComponent_var &); // copy constructor
    ~EntityComponent_var (void); // destructor
    
    EntityComponent_var &operator= (EntityComponent_ptr);
    EntityComponent_var &operator= (const EntityComponent_var &);
    EntityComponent_ptr operator-> (void) const;
    
    operator const EntityComponent_ptr &() const;
    operator EntityComponent_ptr &();
    // in, inout, out, _retn 
    EntityComponent_ptr in (void) const;
    EntityComponent_ptr &inout (void);
    EntityComponent_ptr &out (void);
    EntityComponent_ptr _retn (void);
    EntityComponent_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static EntityComponent_ptr tao_duplicate (EntityComponent_ptr);
    static void tao_release (EntityComponent_ptr);
    static EntityComponent_ptr tao_nil (void);
    static EntityComponent_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    EntityComponent_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    EntityComponent_var (const TAO_Base_var &rhs);
    EntityComponent_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENTITYCOMPONENT___OUT_CH_)
#define _COMPONENTS_ENTITYCOMPONENT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export EntityComponent_out
  {
  public:
    EntityComponent_out (EntityComponent_ptr &);
    EntityComponent_out (EntityComponent_var &);
    EntityComponent_out (const EntityComponent_out &);
    EntityComponent_out &operator= (const EntityComponent_out &);
    EntityComponent_out &operator= (const EntityComponent_var &);
    EntityComponent_out &operator= (EntityComponent_ptr);
    operator EntityComponent_ptr &();
    EntityComponent_ptr &ptr (void);
    EntityComponent_ptr operator-> (void);
  
  private:
    EntityComponent_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_ENTITYCOMPONENT_CH_)
#define _COMPONENTS_ENTITYCOMPONENT_CH_
  
  class CIAO_Export EntityComponent
    : public virtual Components::EnterpriseComponent
  {
  public:
    typedef EntityComponent_ptr _ptr_type;
    typedef EntityComponent_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static EntityComponent_ptr _duplicate (EntityComponent_ptr obj);
    
    static EntityComponent_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static EntityComponent_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static EntityComponent_ptr _nil (void)
      {
        return (EntityComponent_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void set_entity_context (
        Components::EntityContext_ptr ctx
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void unset_entity_context (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void ccm_activate (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void ccm_load (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void ccm_store (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void ccm_passivate (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void ccm_remove (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    EntityComponent (void);
    virtual ~EntityComponent (void);
    
    friend class _TAO_EntityComponent_Remote_Proxy_Impl;
    friend class _TAO_EntityComponent_ThruPOA_Proxy_Impl;
    friend class _TAO_EntityComponent_Direct_Proxy_Impl;
  
  private:
    EntityComponent (const EntityComponent &);
    void operator= (const EntityComponent &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_EntityComponent;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:64

}
TAO_NAMESPACE_CLOSE // module Components

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::CCMContext_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::CCMContext_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CCMContext_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_ch.cpp:51

CIAO_Export void operator<<= (CORBA::Any &, Components::CCMExceptionReason);
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CCMExceptionReason &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::CCMException &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::CCMException*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CCMException *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::CCMException *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::EnterpriseComponent_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::EnterpriseComponent_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::EnterpriseComponent_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::SessionContext_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::SessionContext_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::SessionContext_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::SessionComponent_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::SessionComponent_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::SessionComponent_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::SessionSynchronization_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::SessionSynchronization_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::SessionSynchronization_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::EntityContext_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::EntityContext_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::EntityContext_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::EntityComponent_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::EntityComponent_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::EntityComponent_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/cdr_op_ch.cpp:50

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::CCMExceptionReason &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::CCMExceptionReason &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::CCMException &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::CCMException &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1007

#if defined (__ACE_INLINE__)
#include "CIAO_ContainerC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

