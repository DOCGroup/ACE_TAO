// $Id$

/**
 * @@ Compile this file with:
 *
 *     tao_idl -Gv -I ../.. -I ../../orbsvcs/orbsvcs \
 *          -Wb,export_macro=CIAO_Export \
 *          -Wb,export_include=CIAO_export.h \
 *          -Wb,pre_include="ace/pre.h" \
 *          -Wb,post_include="ace/post.h" \
 *          CIAO_Event.pidl
 */

//#define CIAO_HAS_TYPEPREFIX_KEYWORD
//#define CIAO_HAS_IMPORT_KEYWORD

#if defined (CIAO_HAS_TYPEPREFIX_KEYWORD)
typeprefix Components "omg.org"
#else
#pragma prefix "omg.org"
#endif /* CIAO_HAS_TYPEPREFIX */

module Components
{
  // @@ Components::Transaction is still there.
  module Transaction
  {

    typedef sequence<octet> TranToken;

    exception NoTransaction {};
    exception NotSupported {};
    exception SystemError {};
    exception RollbackError {};
    exception HeuristicMixed {};
    exception HeuristicRollback {};
    exception Security {};
    exception InvalidToken {};

    enum Status
    {
      ACTIVE,
      MARKED_ROLLBACK,
      PREPARED,
      COMMITTED,
      ROLLED_BACK,
      NO_TRANSACTION,
      PREPARING,
      COMMITTING,
      ROLLING_BACK
    };

    local interface UserTransaction {
      void begin ()
        raises (NotSupported,
                SystemError);

      void commit ()
        raises (RollbackError,
                NoTransaction,
                HeuristicMixed,
                HeuristicRollback,
                Security,
                SystemError);

      void rollback ()
        raises (NoTransaction,
                Security,
                SystemError);

      void set_rollback_only ()
        raises (NoTransaction,
                SystemError);

      Status get_status()
        raises (SystemError);

      void set_timeout (in long to)
        raises (SystemError);

      TranToken suspend ()
        raises (NoTransaction,
                SystemError);

      void resume (in TranToken txtoken)
        raises (InvalidToken,
                SystemError);
    };
  };
};
