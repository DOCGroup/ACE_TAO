// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_CIAO_BASEC_H_
#define _TAO_IDL_CIAO_BASEC_H_

#include "ace/pre.h"
#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "CIAO_export.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CIAO_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO CIAO_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:45

TAO_NAMESPACE  Components
{
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:368
  
  typedef char * FeatureName;
  typedef CORBA::String_var FeatureName_var;
  typedef CORBA::String_out FeatureName_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_FeatureName;

#if !defined (_COMPONENTS_NAMELIST_CH_)
#define _COMPONENTS_NAMELIST_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
  
  class NameList;
  class NameList_var;
  
  // *************************************************************
  // Components::NameList
  // *************************************************************
  
  class CIAO_Export NameList : public 
  
  // TAO_IDL - Generated from 
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  TAO_Unbounded_String_Sequence
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_String_Sequence

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  {
  public:
    NameList (void);
    NameList (CORBA::ULong max);
    NameList (
        CORBA::ULong max, 
        CORBA::ULong length, 
        char * *buffer, 
        CORBA::Boolean release = 0
      );
    NameList (const NameList &);
    ~NameList (void);
    
    static void _tao_any_destructor (void*);
    
    typedef NameList_var _var_type;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_NAMELIST___VAR_CH_)
#define _COMPONENTS_NAMELIST___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
  
  // *************************************************************
  // class Components::NameList_var
  // *************************************************************
  
  class CIAO_Export NameList_var
  {
  public:
    NameList_var (void);
    NameList_var (NameList *);
    NameList_var (const NameList_var &);
    ~NameList_var (void);
    
    NameList_var &operator= (NameList *);
    NameList_var &operator= (const NameList_var &);
    NameList *operator-> (void);
    const NameList *operator-> (void) const;
    
    operator const NameList &() const;
    operator NameList &();
    operator NameList &() const;
    
    // Variable-size base types only.
    operator NameList *&();
    
    TAO_SeqElem_String_Manager operator[] (CORBA::ULong index);
    
    // in, inout, out, _retn 
    const NameList &in (void) const;
    NameList &inout (void);
    NameList *&out (void);
    NameList *_retn (void);
    NameList *ptr (void) const;
  
  private:
    NameList *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_NAMELIST___OUT_CH_)
#define _COMPONENTS_NAMELIST___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
  
  class CIAO_Export NameList_out
  {
  public:
    NameList_out (NameList *&);
    NameList_out (NameList_var &);
    NameList_out (const NameList_out &);
    NameList_out &operator= (const NameList_out &);
    NameList_out &operator= (NameList *);
    operator NameList *&();
    NameList *&ptr (void);
    NameList *operator-> (void);
    TAO_SeqElem_String_Manager operator[] (CORBA::ULong index);
  
  private:
    NameList *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const NameList_var &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NameList;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52
  
  class Cookie;

#if !defined (_COMPONENTS_COOKIE___PTR_CH_)
#define _COMPONENTS_COOKIE___PTR_CH_
  
  typedef Cookie *Cookie_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COOKIE___VAR_CH_)
#define _COMPONENTS_COOKIE___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181
  
  class CIAO_Export Cookie_var
  {
  public:
    Cookie_var (void);
    Cookie_var (Cookie*);
    Cookie_var (const Cookie*); // (TAO extension)
    Cookie_var (const Cookie_var &);
    ~Cookie_var (void);
    
    Cookie_var &operator= (Cookie*);
    Cookie_var &operator= (const Cookie_var &);
    Cookie* operator-> (void) const;
    
    operator const Cookie* () const;
    operator Cookie* ();
    // in, inout, out, _retn 
    Cookie* in (void) const;
    Cookie*& inout (void);
    Cookie*& out (void);
    Cookie* _retn (void);
    Cookie* ptr (void) const;
    
    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (Cookie *);
    static void tao_remove_ref (Cookie *);
  
  private:
    Cookie* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COOKIE___OUT_CH_)
#define _COMPONENTS_COOKIE___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490
  
  class CIAO_Export Cookie_out
  {
  public:
    Cookie_out (Cookie* &);
    Cookie_out (Cookie_var &);
    Cookie_out (const Cookie_out &);
    Cookie_out &operator= (const Cookie_out &);
    Cookie_out &operator= (const Cookie_var &);
    Cookie_out &operator= (Cookie*);
    operator Cookie*& ();
    Cookie*& ptr (void);
    Cookie* operator-> (void);
    
  private:
    Cookie* &ptr_;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COOKIE_CH_)
#define _COMPONENTS_COOKIE_CH_
  
  class CIAO_Export Cookie
    : public virtual CORBA_ValueBase
  {
  public:
    typedef Cookie_var _var_type;
    static Cookie* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        Cookie *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
  
  protected:virtual void cookieValue (const CORBA::OctetSeq &) = 0;
    virtual const CORBA::OctetSeq &cookieValue (void) const = 0;
    virtual CORBA::OctetSeq &cookieValue (void) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315
  
  protected:
    Cookie (void);
    virtual ~Cookie (void);
    
    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    
  private:
    Cookie (const Cookie &);
    void operator= (const Cookie &);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_Cookie (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_Cookie (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COOKIE___INIT_CH_)
#define _COMPONENTS_COOKIE___INIT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71
  
  class CIAO_Export Cookie_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    Cookie_init (void);
    virtual ~Cookie_init (void);
    
    static Cookie_init* _downcast (CORBA_ValueFactoryBase* );
    
    virtual CORBA::ValueBase *create_for_unmarshal (void);
    
    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Cookie;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52
  
  class PortDescription;

#if !defined (_COMPONENTS_PORTDESCRIPTION___PTR_CH_)
#define _COMPONENTS_PORTDESCRIPTION___PTR_CH_
  
  typedef PortDescription *PortDescription_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PORTDESCRIPTION___VAR_CH_)
#define _COMPONENTS_PORTDESCRIPTION___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181
  
  class CIAO_Export PortDescription_var
  {
  public:
    PortDescription_var (void);
    PortDescription_var (PortDescription*);
    PortDescription_var (const PortDescription*); // (TAO extension)
    PortDescription_var (const PortDescription_var &);
    ~PortDescription_var (void);
    
    PortDescription_var &operator= (PortDescription*);
    PortDescription_var &operator= (const PortDescription_var &);
    PortDescription* operator-> (void) const;
    
    operator const PortDescription* () const;
    operator PortDescription* ();
    // in, inout, out, _retn 
    PortDescription* in (void) const;
    PortDescription*& inout (void);
    PortDescription*& out (void);
    PortDescription* _retn (void);
    PortDescription* ptr (void) const;
    
    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (PortDescription *);
    static void tao_remove_ref (PortDescription *);
  
  private:
    PortDescription* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PORTDESCRIPTION___OUT_CH_)
#define _COMPONENTS_PORTDESCRIPTION___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490
  
  class CIAO_Export PortDescription_out
  {
  public:
    PortDescription_out (PortDescription* &);
    PortDescription_out (PortDescription_var &);
    PortDescription_out (const PortDescription_out &);
    PortDescription_out &operator= (const PortDescription_out &);
    PortDescription_out &operator= (const PortDescription_var &);
    PortDescription_out &operator= (PortDescription*);
    operator PortDescription*& ();
    PortDescription*& ptr (void);
    PortDescription* operator-> (void);
    
  private:
    PortDescription* &ptr_;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PORTDESCRIPTION_CH_)
#define _COMPONENTS_PORTDESCRIPTION_CH_
  
  class CIAO_Export PortDescription
    : public virtual CORBA_ValueBase
  {
  public:
    typedef PortDescription_var _var_type;
    static PortDescription* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        PortDescription *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:542
    
    virtual void Name (char *) = 0;
    virtual void Name (const char *) = 0;
    virtual void Name (const CORBA::String_var&) = 0;
    virtual const char *Name (void) const = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:542
    
    virtual void type_id (char *) = 0;
    virtual void type_id (const char *) = 0;
    virtual void type_id (const CORBA::String_var&) = 0;
    virtual const char *type_id (void) const = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315
  
  protected:
    PortDescription (void);
    virtual ~PortDescription (void);
    
    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    
  private:
    PortDescription (const PortDescription &);
    void operator= (const PortDescription &);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_PortDescription (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_PortDescription (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PORTDESCRIPTION___INIT_CH_)
#define _COMPONENTS_PORTDESCRIPTION___INIT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71
  
  class CIAO_Export PortDescription_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    PortDescription_init (void);
    virtual ~PortDescription_init (void);
    
    static PortDescription_init* _downcast (CORBA_ValueFactoryBase* );
    
    virtual CORBA::ValueBase *create_for_unmarshal (void);
    
    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PortDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52
  
  class FacetDescription;

#if !defined (_COMPONENTS_FACETDESCRIPTION___PTR_CH_)
#define _COMPONENTS_FACETDESCRIPTION___PTR_CH_
  
  typedef FacetDescription *FacetDescription_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_FACETDESCRIPTION___VAR_CH_)
#define _COMPONENTS_FACETDESCRIPTION___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181
  
  class CIAO_Export FacetDescription_var
  {
  public:
    FacetDescription_var (void);
    FacetDescription_var (FacetDescription*);
    FacetDescription_var (const FacetDescription*); // (TAO extension)
    FacetDescription_var (const FacetDescription_var &);
    ~FacetDescription_var (void);
    
    FacetDescription_var &operator= (FacetDescription*);
    FacetDescription_var &operator= (const FacetDescription_var &);
    FacetDescription* operator-> (void) const;
    
    operator const FacetDescription* () const;
    operator FacetDescription* ();
    // in, inout, out, _retn 
    FacetDescription* in (void) const;
    FacetDescription*& inout (void);
    FacetDescription*& out (void);
    FacetDescription* _retn (void);
    FacetDescription* ptr (void) const;
    
    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (FacetDescription *);
    static void tao_remove_ref (FacetDescription *);
  
  private:
    FacetDescription* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_FACETDESCRIPTION___OUT_CH_)
#define _COMPONENTS_FACETDESCRIPTION___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490
  
  class CIAO_Export FacetDescription_out
  {
  public:
    FacetDescription_out (FacetDescription* &);
    FacetDescription_out (FacetDescription_var &);
    FacetDescription_out (const FacetDescription_out &);
    FacetDescription_out &operator= (const FacetDescription_out &);
    FacetDescription_out &operator= (const FacetDescription_var &);
    FacetDescription_out &operator= (FacetDescription*);
    operator FacetDescription*& ();
    FacetDescription*& ptr (void);
    FacetDescription* operator-> (void);
    
  private:
    FacetDescription* &ptr_;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_FACETDESCRIPTION_CH_)
#define _COMPONENTS_FACETDESCRIPTION_CH_
  
  class CIAO_Export FacetDescription
    : public virtual PortDescription
  {
  public:
    typedef FacetDescription_var _var_type;
    static FacetDescription* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        FacetDescription *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411
    
    virtual void facet_ref (CORBA::Object_ptr) = 0;
    virtual CORBA::Object_ptr facet_ref (void) const = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315
  
  protected:
    FacetDescription (void);
    virtual ~FacetDescription (void);
    
    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    
  private:
    FacetDescription (const FacetDescription &);
    void operator= (const FacetDescription &);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_FacetDescription (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_FacetDescription (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_FACETDESCRIPTION___INIT_CH_)
#define _COMPONENTS_FACETDESCRIPTION___INIT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71
  
  class CIAO_Export FacetDescription_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    FacetDescription_init (void);
    virtual ~FacetDescription_init (void);
    
    static FacetDescription_init* _downcast (CORBA_ValueFactoryBase* );
    
    virtual CORBA::ValueBase *create_for_unmarshal (void);
    
    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_FacetDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_FACETDESCRIPTIONS_CH_)
#define __TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_FACETDESCRIPTIONS_CH_
  
  class CIAO_Export _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions
    : public TAO_Unbounded_Base_Sequence
  {
  public:
    _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions (void);
    _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions (CORBA::ULong maximum);
    _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions (
        CORBA::ULong maximum,
        CORBA::ULong length,
        FacetDescription* *value,
        CORBA::Boolean release = 0
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions (
        const _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions &rhs
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions &operator= (
        const _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions &rhs
      );
    virtual ~_TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions (void);
    
    // = Accessors.
    TAO_Valuetype_Manager<Components::FacetDescription,Components::FacetDescription_var> operator[] (CORBA::ULong index) const;
    
    // = Static operations.
    static FacetDescription **allocbuf (CORBA::ULong nelems);
    static void freebuf (FacetDescription **buffer);
    
    // Implement the TAO_Base_Sequence methods (see Sequence.h)
    virtual void _allocate_buffer (CORBA::ULong length);
    virtual void _deallocate_buffer (void);
    FacetDescription* *get_buffer (CORBA::Boolean orphan = 0);
    const FacetDescription* *get_buffer (void) const;
    virtual void _shrink_buffer (
        CORBA::ULong nl,
        CORBA::ULong ol
      );
  };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 

#if !defined (_COMPONENTS_FACETDESCRIPTIONS_CH_)
#define _COMPONENTS_FACETDESCRIPTIONS_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
  
  class FacetDescriptions;
  class FacetDescriptions_var;
  
  // *************************************************************
  // Components::FacetDescriptions
  // *************************************************************
  
  class CIAO_Export FacetDescriptions : public 
  
  // TAO_IDL - Generated from 
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  _TAO_Unbounded_Valuetype_Sequence_Components_FacetDescriptions
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Valuetype_Sequence<FacetDescription,FacetDescription_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  {
  public:
    FacetDescriptions (void);
    FacetDescriptions (CORBA::ULong max);
    FacetDescriptions (
        CORBA::ULong max, 
        CORBA::ULong length, 
        FacetDescription_ptr *buffer, 
        CORBA::Boolean release = 0
      );
    FacetDescriptions (const FacetDescriptions &);
    ~FacetDescriptions (void);
    
    static void _tao_any_destructor (void*);
    
    typedef FacetDescriptions_var _var_type;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_FACETDESCRIPTIONS___VAR_CH_)
#define _COMPONENTS_FACETDESCRIPTIONS___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
  
  // *************************************************************
  // class Components::FacetDescriptions_var
  // *************************************************************
  
  class CIAO_Export FacetDescriptions_var
  {
  public:
    FacetDescriptions_var (void);
    FacetDescriptions_var (FacetDescriptions *);
    FacetDescriptions_var (const FacetDescriptions_var &);
    ~FacetDescriptions_var (void);
    
    FacetDescriptions_var &operator= (FacetDescriptions *);
    FacetDescriptions_var &operator= (const FacetDescriptions_var &);
    FacetDescriptions *operator-> (void);
    const FacetDescriptions *operator-> (void) const;
    
    operator const FacetDescriptions &() const;
    operator FacetDescriptions &();
    operator FacetDescriptions &() const;
    
    // Variable-size base types only.
    operator FacetDescriptions *&();
    
    TAO_Valuetype_Manager<FacetDescription, FacetDescription_var> operator[] (CORBA::ULong index);
    
    // in, inout, out, _retn 
    const FacetDescriptions &in (void) const;
    FacetDescriptions &inout (void);
    FacetDescriptions *&out (void);
    FacetDescriptions *_retn (void);
    FacetDescriptions *ptr (void) const;
  
  private:
    FacetDescriptions *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_FACETDESCRIPTIONS___OUT_CH_)
#define _COMPONENTS_FACETDESCRIPTIONS___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
  
  class CIAO_Export FacetDescriptions_out
  {
  public:
    FacetDescriptions_out (FacetDescriptions *&);
    FacetDescriptions_out (FacetDescriptions_var &);
    FacetDescriptions_out (const FacetDescriptions_out &);
    FacetDescriptions_out &operator= (const FacetDescriptions_out &);
    FacetDescriptions_out &operator= (FacetDescriptions *);
    operator FacetDescriptions *&();
    FacetDescriptions *&ptr (void);
    FacetDescriptions *operator-> (void);
    TAO_Valuetype_Manager<FacetDescription, FacetDescription_var> operator[] (CORBA::ULong index);
  
  private:
    FacetDescriptions *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const FacetDescriptions_var &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_FacetDescriptions;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:334
  
  typedef CORBA::ULong FailureReason;
  typedef CORBA::ULong_out FailureReason_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_FailureReason;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_INVALIDNAME_CH_)
#define _COMPONENTS_INVALIDNAME_CH_
  
  class CIAO_Export InvalidName : public CORBA::UserException
  {
  public:
    
    InvalidName (void);
    InvalidName (const InvalidName &);
    ~InvalidName (void);

    InvalidName &operator= (const InvalidName &);
    
    static void _tao_any_destructor (void *);
    
    static InvalidName *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidName;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_INVALIDCONNECTION_CH_)
#define _COMPONENTS_INVALIDCONNECTION_CH_
  
  class CIAO_Export InvalidConnection : public CORBA::UserException
  {
  public:
    
    InvalidConnection (void);
    InvalidConnection (const InvalidConnection &);
    ~InvalidConnection (void);

    InvalidConnection &operator= (const InvalidConnection &);
    
    static void _tao_any_destructor (void *);
    
    static InvalidConnection *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidConnection;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_EXCEEDEDCONNECTIONLIMIT_CH_)
#define _COMPONENTS_EXCEEDEDCONNECTIONLIMIT_CH_
  
  class CIAO_Export ExceededConnectionLimit : public CORBA::UserException
  {
  public:
    
    ExceededConnectionLimit (void);
    ExceededConnectionLimit (const ExceededConnectionLimit &);
    ~ExceededConnectionLimit (void);

    ExceededConnectionLimit &operator= (const ExceededConnectionLimit &);
    
    static void _tao_any_destructor (void *);
    
    static ExceededConnectionLimit *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExceededConnectionLimit;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_ALREADYCONNECTED_CH_)
#define _COMPONENTS_ALREADYCONNECTED_CH_
  
  class CIAO_Export AlreadyConnected : public CORBA::UserException
  {
  public:
    
    AlreadyConnected (void);
    AlreadyConnected (const AlreadyConnected &);
    ~AlreadyConnected (void);

    AlreadyConnected &operator= (const AlreadyConnected &);
    
    static void _tao_any_destructor (void *);
    
    static AlreadyConnected *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AlreadyConnected;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_NOCONNECTION_CH_)
#define _COMPONENTS_NOCONNECTION_CH_
  
  class CIAO_Export NoConnection : public CORBA::UserException
  {
  public:
    
    NoConnection (void);
    NoConnection (const NoConnection &);
    ~NoConnection (void);

    NoConnection &operator= (const NoConnection &);
    
    static void _tao_any_destructor (void *);
    
    static NoConnection *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NoConnection;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_COOKIEREQUIRED_CH_)
#define _COMPONENTS_COOKIEREQUIRED_CH_
  
  class CIAO_Export CookieRequired : public CORBA::UserException
  {
  public:
    
    CookieRequired (void);
    CookieRequired (const CookieRequired &);
    ~CookieRequired (void);

    CookieRequired &operator= (const CookieRequired &);
    
    static void _tao_any_destructor (void *);
    
    static CookieRequired *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CookieRequired;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_CREATEFAILURE_CH_)
#define _COMPONENTS_CREATEFAILURE_CH_
  
  class CIAO_Export CreateFailure : public CORBA::UserException
  {
  public:
    
    Components::FailureReason reason;
    CreateFailure (void);
    CreateFailure (const CreateFailure &);
    ~CreateFailure (void);

    CreateFailure &operator= (const CreateFailure &);
    
    static void _tao_any_destructor (void *);
    
    static CreateFailure *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66
    
    CreateFailure (
        ACE_NESTED_CLASS (Components, FailureReason) _tao_reason
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CreateFailure;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_FINDERFAILURE_CH_)
#define _COMPONENTS_FINDERFAILURE_CH_
  
  class CIAO_Export FinderFailure : public CORBA::UserException
  {
  public:
    
    Components::FailureReason reason;
    FinderFailure (void);
    FinderFailure (const FinderFailure &);
    ~FinderFailure (void);

    FinderFailure &operator= (const FinderFailure &);
    
    static void _tao_any_destructor (void *);
    
    static FinderFailure *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66
    
    FinderFailure (
        ACE_NESTED_CLASS (Components, FailureReason) _tao_reason
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_FinderFailure;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_REMOVEFAILURE_CH_)
#define _COMPONENTS_REMOVEFAILURE_CH_
  
  class CIAO_Export RemoveFailure : public CORBA::UserException
  {
  public:
    
    Components::FailureReason reason;
    RemoveFailure (void);
    RemoveFailure (const RemoveFailure &);
    ~RemoveFailure (void);

    RemoveFailure &operator= (const RemoveFailure &);
    
    static void _tao_any_destructor (void *);
    
    static RemoveFailure *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66
    
    RemoveFailure (
        ACE_NESTED_CLASS (Components, FailureReason) _tao_reason
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RemoveFailure;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_DUPLICATEKEYVALUE_CH_)
#define _COMPONENTS_DUPLICATEKEYVALUE_CH_
  
  class CIAO_Export DuplicateKeyValue : public CORBA::UserException
  {
  public:
    
    DuplicateKeyValue (void);
    DuplicateKeyValue (const DuplicateKeyValue &);
    ~DuplicateKeyValue (void);

    DuplicateKeyValue &operator= (const DuplicateKeyValue &);
    
    static void _tao_any_destructor (void *);
    
    static DuplicateKeyValue *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_DuplicateKeyValue;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_INVALIDKEY_CH_)
#define _COMPONENTS_INVALIDKEY_CH_
  
  class CIAO_Export InvalidKey : public CORBA::UserException
  {
  public:
    
    InvalidKey (void);
    InvalidKey (const InvalidKey &);
    ~InvalidKey (void);

    InvalidKey &operator= (const InvalidKey &);
    
    static void _tao_any_destructor (void *);
    
    static InvalidKey *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidKey;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_UNKNOWNKEYVALUE_CH_)
#define _COMPONENTS_UNKNOWNKEYVALUE_CH_
  
  class CIAO_Export UnknownKeyValue : public CORBA::UserException
  {
  public:
    
    UnknownKeyValue (void);
    UnknownKeyValue (const UnknownKeyValue &);
    ~UnknownKeyValue (void);

    UnknownKeyValue &operator= (const UnknownKeyValue &);
    
    static void _tao_any_destructor (void *);
    
    static UnknownKeyValue *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UnknownKeyValue;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_NOKEYAVAILABLE_CH_)
#define _COMPONENTS_NOKEYAVAILABLE_CH_
  
  class CIAO_Export NoKeyAvailable : public CORBA::UserException
  {
  public:
    
    NoKeyAvailable (void);
    NoKeyAvailable (const NoKeyAvailable &);
    ~NoKeyAvailable (void);

    NoKeyAvailable &operator= (const NoKeyAvailable &);
    
    static void _tao_any_destructor (void *);
    
    static NoKeyAvailable *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NoKeyAvailable;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_BADEVENTTYPE_CH_)
#define _COMPONENTS_BADEVENTTYPE_CH_
  
  class CIAO_Export BadEventType : public CORBA::UserException
  {
  public:
    
    TAO_String_Manager expected_event_type;
    BadEventType (void);
    BadEventType (const BadEventType &);
    ~BadEventType (void);

    BadEventType &operator= (const BadEventType &);
    
    static void _tao_any_destructor (void *);
    
    static BadEventType *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66
    
    BadEventType (
        const char * _tao_expected_event_type
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_BadEventType;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_HOMENOTFOUND_CH_)
#define _COMPONENTS_HOMENOTFOUND_CH_
  
  class CIAO_Export HomeNotFound : public CORBA::UserException
  {
  public:
    
    HomeNotFound (void);
    HomeNotFound (const HomeNotFound &);
    ~HomeNotFound (void);

    HomeNotFound &operator= (const HomeNotFound &);
    
    static void _tao_any_destructor (void *);
    
    static HomeNotFound *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_HomeNotFound;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_WRONGCOMPONENTTYPE_CH_)
#define _COMPONENTS_WRONGCOMPONENTTYPE_CH_
  
  class CIAO_Export WrongComponentType : public CORBA::UserException
  {
  public:
    
    WrongComponentType (void);
    WrongComponentType (const WrongComponentType &);
    ~WrongComponentType (void);

    WrongComponentType &operator= (const WrongComponentType &);
    
    static void _tao_any_destructor (void *);
    
    static WrongComponentType *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_WrongComponentType;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:334
  
  typedef FailureReason InvalidConfigurationReason;
  typedef FailureReason_out InvalidConfigurationReason_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidConfigurationReason;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::ULong UnknownConfigValueName = 0U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::ULong InvalidConfigValueType = 1U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::ULong ConfigValueRequired = 2U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::ULong ConfigValueNotExpected = 3U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_INVALIDCONFIGURATION_CH_)
#define _COMPONENTS_INVALIDCONFIGURATION_CH_
  
  class CIAO_Export InvalidConfiguration : public CORBA::UserException
  {
  public:
    
    Components::InvalidConfigurationReason reason;
    TAO_String_Manager name;
    InvalidConfiguration (void);
    InvalidConfiguration (const InvalidConfiguration &);
    ~InvalidConfiguration (void);

    InvalidConfiguration &operator= (const InvalidConfiguration &);
    
    static void _tao_any_destructor (void *);
    
    static InvalidConfiguration *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66
    
    InvalidConfiguration (
        ACE_NESTED_CLASS (Components, InvalidConfigurationReason) _tao_reason,
        const char * _tao_name
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidConfiguration;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_ILLEGALSTATE_CH_)
#define _COMPONENTS_ILLEGALSTATE_CH_
  
  class CIAO_Export IllegalState : public CORBA::UserException
  {
  public:
    
    IllegalState (void);
    IllegalState (const IllegalState &);
    ~IllegalState (void);

    IllegalState &operator= (const IllegalState &);
    
    static void _tao_any_destructor (void *);
    
    static IllegalState *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_IllegalState;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_NAVIGATION___PTR_CH_)
#define _COMPONENTS_NAVIGATION___PTR_CH_
  
  class Navigation;
  typedef Navigation *Navigation_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_NAVIGATION___VAR_CH_)
#define _COMPONENTS_NAVIGATION___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export Navigation_var : public TAO_Base_var
  {
  public:
    Navigation_var (void); // default constructor
    Navigation_var (Navigation_ptr p) : ptr_ (p) {} 
    Navigation_var (const Navigation_var &); // copy constructor
    ~Navigation_var (void); // destructor
    
    Navigation_var &operator= (Navigation_ptr);
    Navigation_var &operator= (const Navigation_var &);
    Navigation_ptr operator-> (void) const;
    
    operator const Navigation_ptr &() const;
    operator Navigation_ptr &();
    // in, inout, out, _retn 
    Navigation_ptr in (void) const;
    Navigation_ptr &inout (void);
    Navigation_ptr &out (void);
    Navigation_ptr _retn (void);
    Navigation_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static Navigation_ptr tao_duplicate (Navigation_ptr);
    static void tao_release (Navigation_ptr);
    static Navigation_ptr tao_nil (void);
    static Navigation_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    Navigation_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    Navigation_var (const TAO_Base_var &rhs);
    Navigation_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_NAVIGATION___OUT_CH_)
#define _COMPONENTS_NAVIGATION___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export Navigation_out
  {
  public:
    Navigation_out (Navigation_ptr &);
    Navigation_out (Navigation_var &);
    Navigation_out (const Navigation_out &);
    Navigation_out &operator= (const Navigation_out &);
    Navigation_out &operator= (const Navigation_var &);
    Navigation_out &operator= (Navigation_ptr);
    operator Navigation_ptr &();
    Navigation_ptr &ptr (void);
    Navigation_ptr operator-> (void);
  
  private:
    Navigation_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_NAVIGATION_CH_)
#define _COMPONENTS_NAVIGATION_CH_
  
  class _TAO_Navigation_Proxy_Impl;
  class _TAO_Navigation_Remote_Proxy_Impl;
  class _TAO_Navigation_Proxy_Broker;
  class _TAO_Navigation_Remote_Proxy_Broker;
  
  class CIAO_Export Navigation
    : public virtual CORBA::Object
  {
  public:
    typedef Navigation_ptr _ptr_type;
    typedef Navigation_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static Navigation_ptr _duplicate (Navigation_ptr obj);
    
    static Navigation_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Navigation_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Navigation_ptr _nil (void)
      {
        return (Navigation_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Object_ptr provide_facet (
        const char * name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::FacetDescriptions * get_all_facets (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::FacetDescriptions * get_named_facets (
        const Components::NameList & names
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean same_component (
        CORBA::Object_ptr object_ref
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_Navigation_Proxy_Broker *the_TAO_Navigation_Proxy_Broker_;
  
  protected:
    Navigation (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_Navigation_setup_collocation (int collocated);
    
    Navigation (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~Navigation (void);
    
    friend class _TAO_Navigation_Remote_Proxy_Impl;
    friend class _TAO_Navigation_ThruPOA_Proxy_Impl;
    friend class _TAO_Navigation_Direct_Proxy_Impl;
  
  private:
    Navigation (const Navigation &);
    void operator= (const Navigation &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class CIAO_Export _TAO_Navigation_Proxy_Impl
    : public virtual TAO_Object_Proxy_Impl
  {
  public:
    virtual ~_TAO_Navigation_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::Object_ptr provide_facet (
        CORBA_Object *_collocated_tao_target_,
        const char * name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::Components::FacetDescriptions * get_all_facets (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::Components::FacetDescriptions * get_named_facets (
        CORBA_Object *_collocated_tao_target_,
        const Components::NameList & names
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual CORBA::Boolean same_component (
        CORBA_Object *_collocated_tao_target_,
        CORBA::Object_ptr object_ref
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
  
  protected:
    _TAO_Navigation_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class CIAO_Export _TAO_Navigation_Remote_Proxy_Impl
    : public virtual _TAO_Navigation_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl
  {
  public:
    _TAO_Navigation_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_Navigation_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::Object_ptr provide_facet (
        CORBA_Object *_collocated_tao_target_,
        const char * name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::Components::FacetDescriptions * get_all_facets (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::Components::FacetDescriptions * get_named_facets (
        CORBA_Object *_collocated_tao_target_,
        const Components::NameList & names
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual CORBA::Boolean same_component (
        CORBA_Object *_collocated_tao_target_,
        CORBA::Object_ptr object_ref
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class CIAO_Export _TAO_Navigation_Proxy_Broker
  {
  public:
    virtual ~_TAO_Navigation_Proxy_Broker (void);
    virtual _TAO_Navigation_Proxy_Impl &select_proxy (
        Navigation *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_Navigation_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class CIAO_Export _TAO_Navigation_Remote_Proxy_Broker
    : public virtual _TAO_Navigation_Proxy_Broker
  {
  public: 
    _TAO_Navigation_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_Navigation_Remote_Proxy_Broker (void);
    
    virtual _TAO_Navigation_Proxy_Impl &select_proxy (
        Navigation *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_Navigation_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_Navigation_Remote_Proxy_Broker *the_TAO_Navigation_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Navigation;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52
  
  class ConnectionDescription;

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTION___PTR_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTION___PTR_CH_
  
  typedef ConnectionDescription *ConnectionDescription_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTION___VAR_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTION___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181
  
  class CIAO_Export ConnectionDescription_var
  {
  public:
    ConnectionDescription_var (void);
    ConnectionDescription_var (ConnectionDescription*);
    ConnectionDescription_var (const ConnectionDescription*); // (TAO extension)
    ConnectionDescription_var (const ConnectionDescription_var &);
    ~ConnectionDescription_var (void);
    
    ConnectionDescription_var &operator= (ConnectionDescription*);
    ConnectionDescription_var &operator= (const ConnectionDescription_var &);
    ConnectionDescription* operator-> (void) const;
    
    operator const ConnectionDescription* () const;
    operator ConnectionDescription* ();
    // in, inout, out, _retn 
    ConnectionDescription* in (void) const;
    ConnectionDescription*& inout (void);
    ConnectionDescription*& out (void);
    ConnectionDescription* _retn (void);
    ConnectionDescription* ptr (void) const;
    
    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (ConnectionDescription *);
    static void tao_remove_ref (ConnectionDescription *);
  
  private:
    ConnectionDescription* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTION___OUT_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTION___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490
  
  class CIAO_Export ConnectionDescription_out
  {
  public:
    ConnectionDescription_out (ConnectionDescription* &);
    ConnectionDescription_out (ConnectionDescription_var &);
    ConnectionDescription_out (const ConnectionDescription_out &);
    ConnectionDescription_out &operator= (const ConnectionDescription_out &);
    ConnectionDescription_out &operator= (const ConnectionDescription_var &);
    ConnectionDescription_out &operator= (ConnectionDescription*);
    operator ConnectionDescription*& ();
    ConnectionDescription*& ptr (void);
    ConnectionDescription* operator-> (void);
    
  private:
    ConnectionDescription* &ptr_;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTION_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTION_CH_
  
  class CIAO_Export ConnectionDescription
    : public virtual CORBA_ValueBase
  {
  public:
    typedef ConnectionDescription_var _var_type;
    static ConnectionDescription* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        ConnectionDescription *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:325
    
    virtual void ck (Components::Cookie *) = 0;
    virtual Components::Cookie *ck (void) const = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411
    
    virtual void objref (CORBA::Object_ptr) = 0;
    virtual CORBA::Object_ptr objref (void) const = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315
  
  protected:
    ConnectionDescription (void);
    virtual ~ConnectionDescription (void);
    
    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    
  private:
    ConnectionDescription (const ConnectionDescription &);
    void operator= (const ConnectionDescription &);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_ConnectionDescription (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_ConnectionDescription (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTION___INIT_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTION___INIT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71
  
  class CIAO_Export ConnectionDescription_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    ConnectionDescription_init (void);
    virtual ~ConnectionDescription_init (void);
    
    static ConnectionDescription_init* _downcast (CORBA_ValueFactoryBase* );
    
    virtual CORBA::ValueBase *create_for_unmarshal (void);
    
    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ConnectionDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_CONNECTIONDESCRIPTIONS_CH_)
#define __TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_CONNECTIONDESCRIPTIONS_CH_
  
  class CIAO_Export _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions
    : public TAO_Unbounded_Base_Sequence
  {
  public:
    _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions (void);
    _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions (CORBA::ULong maximum);
    _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions (
        CORBA::ULong maximum,
        CORBA::ULong length,
        ConnectionDescription* *value,
        CORBA::Boolean release = 0
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions (
        const _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions &rhs
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions &operator= (
        const _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions &rhs
      );
    virtual ~_TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions (void);
    
    // = Accessors.
    TAO_Valuetype_Manager<Components::ConnectionDescription,Components::ConnectionDescription_var> operator[] (CORBA::ULong index) const;
    
    // = Static operations.
    static ConnectionDescription **allocbuf (CORBA::ULong nelems);
    static void freebuf (ConnectionDescription **buffer);
    
    // Implement the TAO_Base_Sequence methods (see Sequence.h)
    virtual void _allocate_buffer (CORBA::ULong length);
    virtual void _deallocate_buffer (void);
    ConnectionDescription* *get_buffer (CORBA::Boolean orphan = 0);
    const ConnectionDescription* *get_buffer (void) const;
    virtual void _shrink_buffer (
        CORBA::ULong nl,
        CORBA::ULong ol
      );
  };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTIONS_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTIONS_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
  
  class ConnectionDescriptions;
  class ConnectionDescriptions_var;
  
  // *************************************************************
  // Components::ConnectionDescriptions
  // *************************************************************
  
  class CIAO_Export ConnectionDescriptions : public 
  
  // TAO_IDL - Generated from 
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  _TAO_Unbounded_Valuetype_Sequence_Components_ConnectionDescriptions
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Valuetype_Sequence<ConnectionDescription,ConnectionDescription_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  {
  public:
    ConnectionDescriptions (void);
    ConnectionDescriptions (CORBA::ULong max);
    ConnectionDescriptions (
        CORBA::ULong max, 
        CORBA::ULong length, 
        ConnectionDescription_ptr *buffer, 
        CORBA::Boolean release = 0
      );
    ConnectionDescriptions (const ConnectionDescriptions &);
    ~ConnectionDescriptions (void);
    
    static void _tao_any_destructor (void*);
    
    typedef ConnectionDescriptions_var _var_type;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTIONS___VAR_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTIONS___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
  
  // *************************************************************
  // class Components::ConnectionDescriptions_var
  // *************************************************************
  
  class CIAO_Export ConnectionDescriptions_var
  {
  public:
    ConnectionDescriptions_var (void);
    ConnectionDescriptions_var (ConnectionDescriptions *);
    ConnectionDescriptions_var (const ConnectionDescriptions_var &);
    ~ConnectionDescriptions_var (void);
    
    ConnectionDescriptions_var &operator= (ConnectionDescriptions *);
    ConnectionDescriptions_var &operator= (const ConnectionDescriptions_var &);
    ConnectionDescriptions *operator-> (void);
    const ConnectionDescriptions *operator-> (void) const;
    
    operator const ConnectionDescriptions &() const;
    operator ConnectionDescriptions &();
    operator ConnectionDescriptions &() const;
    
    // Variable-size base types only.
    operator ConnectionDescriptions *&();
    
    TAO_Valuetype_Manager<ConnectionDescription, ConnectionDescription_var> operator[] (CORBA::ULong index);
    
    // in, inout, out, _retn 
    const ConnectionDescriptions &in (void) const;
    ConnectionDescriptions &inout (void);
    ConnectionDescriptions *&out (void);
    ConnectionDescriptions *_retn (void);
    ConnectionDescriptions *ptr (void) const;
  
  private:
    ConnectionDescriptions *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTIONS___OUT_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTIONS___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
  
  class CIAO_Export ConnectionDescriptions_out
  {
  public:
    ConnectionDescriptions_out (ConnectionDescriptions *&);
    ConnectionDescriptions_out (ConnectionDescriptions_var &);
    ConnectionDescriptions_out (const ConnectionDescriptions_out &);
    ConnectionDescriptions_out &operator= (const ConnectionDescriptions_out &);
    ConnectionDescriptions_out &operator= (ConnectionDescriptions *);
    operator ConnectionDescriptions *&();
    ConnectionDescriptions *&ptr (void);
    ConnectionDescriptions *operator-> (void);
    TAO_Valuetype_Manager<ConnectionDescription, ConnectionDescription_var> operator[] (CORBA::ULong index);
  
  private:
    ConnectionDescriptions *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const ConnectionDescriptions_var &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ConnectionDescriptions;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52
  
  class ReceptacleDescription;

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTION___PTR_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTION___PTR_CH_
  
  typedef ReceptacleDescription *ReceptacleDescription_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTION___VAR_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTION___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181
  
  class CIAO_Export ReceptacleDescription_var
  {
  public:
    ReceptacleDescription_var (void);
    ReceptacleDescription_var (ReceptacleDescription*);
    ReceptacleDescription_var (const ReceptacleDescription*); // (TAO extension)
    ReceptacleDescription_var (const ReceptacleDescription_var &);
    ~ReceptacleDescription_var (void);
    
    ReceptacleDescription_var &operator= (ReceptacleDescription*);
    ReceptacleDescription_var &operator= (const ReceptacleDescription_var &);
    ReceptacleDescription* operator-> (void) const;
    
    operator const ReceptacleDescription* () const;
    operator ReceptacleDescription* ();
    // in, inout, out, _retn 
    ReceptacleDescription* in (void) const;
    ReceptacleDescription*& inout (void);
    ReceptacleDescription*& out (void);
    ReceptacleDescription* _retn (void);
    ReceptacleDescription* ptr (void) const;
    
    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (ReceptacleDescription *);
    static void tao_remove_ref (ReceptacleDescription *);
  
  private:
    ReceptacleDescription* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTION___OUT_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTION___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490
  
  class CIAO_Export ReceptacleDescription_out
  {
  public:
    ReceptacleDescription_out (ReceptacleDescription* &);
    ReceptacleDescription_out (ReceptacleDescription_var &);
    ReceptacleDescription_out (const ReceptacleDescription_out &);
    ReceptacleDescription_out &operator= (const ReceptacleDescription_out &);
    ReceptacleDescription_out &operator= (const ReceptacleDescription_var &);
    ReceptacleDescription_out &operator= (ReceptacleDescription*);
    operator ReceptacleDescription*& ();
    ReceptacleDescription*& ptr (void);
    ReceptacleDescription* operator-> (void);
    
  private:
    ReceptacleDescription* &ptr_;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTION_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTION_CH_
  
  class CIAO_Export ReceptacleDescription
    : public virtual PortDescription
  {
  public:
    typedef ReceptacleDescription_var _var_type;
    static ReceptacleDescription* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        ReceptacleDescription *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411
    
    virtual void is_multiple (CORBA::Boolean) = 0;
    virtual CORBA::Boolean is_multiple (void) const = 0;virtual void connections (const Components::ConnectionDescriptions &) = 0;
    virtual const Components::ConnectionDescriptions &connections (void) const = 0;
    virtual Components::ConnectionDescriptions &connections (void) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315
  
  protected:
    ReceptacleDescription (void);
    virtual ~ReceptacleDescription (void);
    
    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    
  private:
    ReceptacleDescription (const ReceptacleDescription &);
    void operator= (const ReceptacleDescription &);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_ReceptacleDescription (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_ReceptacleDescription (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTION___INIT_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTION___INIT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71
  
  class CIAO_Export ReceptacleDescription_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    ReceptacleDescription_init (void);
    virtual ~ReceptacleDescription_init (void);
    
    static ReceptacleDescription_init* _downcast (CORBA_ValueFactoryBase* );
    
    virtual CORBA::ValueBase *create_for_unmarshal (void);
    
    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReceptacleDescription;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_RECEPTACLEDESCRIPTIONS_CH_)
#define __TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_RECEPTACLEDESCRIPTIONS_CH_
  
  class CIAO_Export _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions
    : public TAO_Unbounded_Base_Sequence
  {
  public:
    _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions (void);
    _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions (CORBA::ULong maximum);
    _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions (
        CORBA::ULong maximum,
        CORBA::ULong length,
        ReceptacleDescription* *value,
        CORBA::Boolean release = 0
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions (
        const _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions &rhs
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions &operator= (
        const _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions &rhs
      );
    virtual ~_TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions (void);
    
    // = Accessors.
    TAO_Valuetype_Manager<Components::ReceptacleDescription,Components::ReceptacleDescription_var> operator[] (CORBA::ULong index) const;
    
    // = Static operations.
    static ReceptacleDescription **allocbuf (CORBA::ULong nelems);
    static void freebuf (ReceptacleDescription **buffer);
    
    // Implement the TAO_Base_Sequence methods (see Sequence.h)
    virtual void _allocate_buffer (CORBA::ULong length);
    virtual void _deallocate_buffer (void);
    ReceptacleDescription* *get_buffer (CORBA::Boolean orphan = 0);
    const ReceptacleDescription* *get_buffer (void) const;
    virtual void _shrink_buffer (
        CORBA::ULong nl,
        CORBA::ULong ol
      );
  };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTIONS_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTIONS_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
  
  class ReceptacleDescriptions;
  class ReceptacleDescriptions_var;
  
  // *************************************************************
  // Components::ReceptacleDescriptions
  // *************************************************************
  
  class CIAO_Export ReceptacleDescriptions : public 
  
  // TAO_IDL - Generated from 
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  _TAO_Unbounded_Valuetype_Sequence_Components_ReceptacleDescriptions
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Valuetype_Sequence<ReceptacleDescription,ReceptacleDescription_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  {
  public:
    ReceptacleDescriptions (void);
    ReceptacleDescriptions (CORBA::ULong max);
    ReceptacleDescriptions (
        CORBA::ULong max, 
        CORBA::ULong length, 
        ReceptacleDescription_ptr *buffer, 
        CORBA::Boolean release = 0
      );
    ReceptacleDescriptions (const ReceptacleDescriptions &);
    ~ReceptacleDescriptions (void);
    
    static void _tao_any_destructor (void*);
    
    typedef ReceptacleDescriptions_var _var_type;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTIONS___VAR_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTIONS___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
  
  // *************************************************************
  // class Components::ReceptacleDescriptions_var
  // *************************************************************
  
  class CIAO_Export ReceptacleDescriptions_var
  {
  public:
    ReceptacleDescriptions_var (void);
    ReceptacleDescriptions_var (ReceptacleDescriptions *);
    ReceptacleDescriptions_var (const ReceptacleDescriptions_var &);
    ~ReceptacleDescriptions_var (void);
    
    ReceptacleDescriptions_var &operator= (ReceptacleDescriptions *);
    ReceptacleDescriptions_var &operator= (const ReceptacleDescriptions_var &);
    ReceptacleDescriptions *operator-> (void);
    const ReceptacleDescriptions *operator-> (void) const;
    
    operator const ReceptacleDescriptions &() const;
    operator ReceptacleDescriptions &();
    operator ReceptacleDescriptions &() const;
    
    // Variable-size base types only.
    operator ReceptacleDescriptions *&();
    
    TAO_Valuetype_Manager<ReceptacleDescription, ReceptacleDescription_var> operator[] (CORBA::ULong index);
    
    // in, inout, out, _retn 
    const ReceptacleDescriptions &in (void) const;
    ReceptacleDescriptions &inout (void);
    ReceptacleDescriptions *&out (void);
    ReceptacleDescriptions *_retn (void);
    ReceptacleDescriptions *ptr (void) const;
  
  private:
    ReceptacleDescriptions *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTIONS___OUT_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTIONS___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
  
  class CIAO_Export ReceptacleDescriptions_out
  {
  public:
    ReceptacleDescriptions_out (ReceptacleDescriptions *&);
    ReceptacleDescriptions_out (ReceptacleDescriptions_var &);
    ReceptacleDescriptions_out (const ReceptacleDescriptions_out &);
    ReceptacleDescriptions_out &operator= (const ReceptacleDescriptions_out &);
    ReceptacleDescriptions_out &operator= (ReceptacleDescriptions *);
    operator ReceptacleDescriptions *&();
    ReceptacleDescriptions *&ptr (void);
    ReceptacleDescriptions *operator-> (void);
    TAO_Valuetype_Manager<ReceptacleDescription, ReceptacleDescription_var> operator[] (CORBA::ULong index);
  
  private:
    ReceptacleDescriptions *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const ReceptacleDescriptions_var &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReceptacleDescriptions;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_RECEPTACLES___PTR_CH_)
#define _COMPONENTS_RECEPTACLES___PTR_CH_
  
  class Receptacles;
  typedef Receptacles *Receptacles_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_RECEPTACLES___VAR_CH_)
#define _COMPONENTS_RECEPTACLES___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export Receptacles_var : public TAO_Base_var
  {
  public:
    Receptacles_var (void); // default constructor
    Receptacles_var (Receptacles_ptr p) : ptr_ (p) {} 
    Receptacles_var (const Receptacles_var &); // copy constructor
    ~Receptacles_var (void); // destructor
    
    Receptacles_var &operator= (Receptacles_ptr);
    Receptacles_var &operator= (const Receptacles_var &);
    Receptacles_ptr operator-> (void) const;
    
    operator const Receptacles_ptr &() const;
    operator Receptacles_ptr &();
    // in, inout, out, _retn 
    Receptacles_ptr in (void) const;
    Receptacles_ptr &inout (void);
    Receptacles_ptr &out (void);
    Receptacles_ptr _retn (void);
    Receptacles_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static Receptacles_ptr tao_duplicate (Receptacles_ptr);
    static void tao_release (Receptacles_ptr);
    static Receptacles_ptr tao_nil (void);
    static Receptacles_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    Receptacles_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    Receptacles_var (const TAO_Base_var &rhs);
    Receptacles_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_RECEPTACLES___OUT_CH_)
#define _COMPONENTS_RECEPTACLES___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export Receptacles_out
  {
  public:
    Receptacles_out (Receptacles_ptr &);
    Receptacles_out (Receptacles_var &);
    Receptacles_out (const Receptacles_out &);
    Receptacles_out &operator= (const Receptacles_out &);
    Receptacles_out &operator= (const Receptacles_var &);
    Receptacles_out &operator= (Receptacles_ptr);
    operator Receptacles_ptr &();
    Receptacles_ptr &ptr (void);
    Receptacles_ptr operator-> (void);
  
  private:
    Receptacles_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_RECEPTACLES_CH_)
#define _COMPONENTS_RECEPTACLES_CH_
  
  class _TAO_Receptacles_Proxy_Impl;
  class _TAO_Receptacles_Remote_Proxy_Impl;
  class _TAO_Receptacles_Proxy_Broker;
  class _TAO_Receptacles_Remote_Proxy_Broker;
  
  class CIAO_Export Receptacles
    : public virtual CORBA::Object
  {
  public:
    typedef Receptacles_ptr _ptr_type;
    typedef Receptacles_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static Receptacles_ptr _duplicate (Receptacles_ptr obj);
    
    static Receptacles_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Receptacles_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Receptacles_ptr _nil (void)
      {
        return (Receptacles_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::Cookie * connect (
        const char * name,
        CORBA::Object_ptr connection
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
        , Components::InvalidConnection
        , Components::AlreadyConnected
        , Components::ExceededConnectionLimit
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void disconnect (
        const char * name,
        Components::Cookie * ck
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
        , Components::InvalidConnection
        , Components::CookieRequired
        , Components::NoConnection
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::ConnectionDescriptions * get_connections (
        const char * name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::ReceptacleDescriptions * get_all_receptacles (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::ReceptacleDescriptions * get_named_receptacles (
        const Components::NameList & names
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_Receptacles_Proxy_Broker *the_TAO_Receptacles_Proxy_Broker_;
  
  protected:
    Receptacles (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_Receptacles_setup_collocation (int collocated);
    
    Receptacles (
        TAO_Stub *objref, 
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~Receptacles (void);
    
    friend class _TAO_Receptacles_Remote_Proxy_Impl;
    friend class _TAO_Receptacles_ThruPOA_Proxy_Impl;
    friend class _TAO_Receptacles_Direct_Proxy_Impl;
  
  private:
    Receptacles (const Receptacles &);
    void operator= (const Receptacles &);
  };
  
  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.
  
  
  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35
  
  class CIAO_Export _TAO_Receptacles_Proxy_Impl
    : public virtual TAO_Object_Proxy_Impl
  {
  public:
    virtual ~_TAO_Receptacles_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::Components::Cookie * connect (
        CORBA_Object *_collocated_tao_target_,
        const char * name,
        CORBA::Object_ptr connection
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
        , Components::InvalidConnection
        , Components::AlreadyConnected
        , Components::ExceededConnectionLimit
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual void disconnect (
        CORBA_Object *_collocated_tao_target_,
        const char * name,
        Components::Cookie * ck
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
        , Components::InvalidConnection
        , Components::CookieRequired
        , Components::NoConnection
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::Components::ConnectionDescriptions * get_connections (
        CORBA_Object *_collocated_tao_target_,
        const char * name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::Components::ReceptacleDescriptions * get_all_receptacles (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24
    
    virtual ::Components::ReceptacleDescriptions * get_named_receptacles (
        CORBA_Object *_collocated_tao_target_,
        const Components::NameList & names
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      )) = 0;
  
  protected:
    _TAO_Receptacles_Proxy_Impl (void);
  };
  
  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  
  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37
  
  class CIAO_Export _TAO_Receptacles_Remote_Proxy_Impl
    : public virtual _TAO_Receptacles_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl
  {
  public:
    _TAO_Receptacles_Remote_Proxy_Impl (void);
    
    virtual ~_TAO_Receptacles_Remote_Proxy_Impl (void) {}
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::Components::Cookie * connect (
        CORBA_Object *_collocated_tao_target_,
        const char * name,
        CORBA::Object_ptr connection
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
        , Components::InvalidConnection
        , Components::AlreadyConnected
        , Components::ExceededConnectionLimit
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual void disconnect (
        CORBA_Object *_collocated_tao_target_,
        const char * name,
        Components::Cookie * ck
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
        , Components::InvalidConnection
        , Components::CookieRequired
        , Components::NoConnection
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::Components::ConnectionDescriptions * get_connections (
        CORBA_Object *_collocated_tao_target_,
        const char * name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::Components::ReceptacleDescriptions * get_all_receptacles (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24
    
    virtual ::Components::ReceptacleDescriptions * get_named_receptacles (
        CORBA_Object *_collocated_tao_target_,
        const Components::NameList & names
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidName
      ));
  };
  
  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////
  
  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new 
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.
  
  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35
  
  class CIAO_Export _TAO_Receptacles_Proxy_Broker
  {
  public:
    virtual ~_TAO_Receptacles_Proxy_Broker (void);
    virtual _TAO_Receptacles_Proxy_Impl &select_proxy (
        Receptacles *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;
    
  protected:
    _TAO_Receptacles_Proxy_Broker (void);
    
  };
  
  //
  //              End Base Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
    
  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40
  
  class CIAO_Export _TAO_Receptacles_Remote_Proxy_Broker
    : public virtual _TAO_Receptacles_Proxy_Broker
  {
  public: 
    _TAO_Receptacles_Remote_Proxy_Broker (void);
    
    virtual ~_TAO_Receptacles_Remote_Proxy_Broker (void);
    
    virtual _TAO_Receptacles_Proxy_Impl &select_proxy (
        Receptacles *object
        ACE_ENV_ARG_DECL
      );
    
  private:
    _TAO_Receptacles_Remote_Proxy_Impl remote_proxy_impl_;
  
  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_Receptacles_Remote_Proxy_Broker *the_TAO_Receptacles_Remote_Proxy_Broker (void);
  };
  
  //
  //              End Remote Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Receptacles;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:64

}
TAO_NAMESPACE_CLOSE // module Components

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/root.cpp:80

extern CIAO_Export
Components::_TAO_Navigation_Proxy_Broker *
(*Components__TAO_Navigation_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::_TAO_Receptacles_Proxy_Broker *
(*Components__TAO_Receptacles_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/obv_module.cpp:55

TAO_NAMESPACE  OBV_Components
{
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_COOKIE___OBV_CH_)
#define _COMPONENTS_COOKIE___OBV_CH_
  
  // OBV_ class
  class CIAO_Export Cookie
    : public virtual Components::Cookie,
      public virtual CORBA_DefaultValueRefCountBase
  {
  public:
  
  protected:virtual void cookieValue (const CORBA::OctetSeq &);
    virtual const CORBA::OctetSeq &cookieValue (void) const;
    virtual CORBA::OctetSeq &cookieValue (void);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_Cookie (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_Cookie (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);
  
  private:
    CORBA::OctetSeq _pd_cookieValue;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_PORTDESCRIPTION___OBV_CH_)
#define _COMPONENTS_PORTDESCRIPTION___OBV_CH_
  
  // OBV_ class
  class CIAO_Export PortDescription
    : public virtual Components::PortDescription,
      public virtual CORBA_DefaultValueRefCountBase
  {
  public:
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:542
    
    virtual void Name (char *);
    virtual void Name (const char *);
    virtual void Name (const CORBA::String_var&);
    virtual const char *Name (void) const;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:542
    
    virtual void type_id (char *);
    virtual void type_id (const char *);
    virtual void type_id (const CORBA::String_var&);
    virtual const char *type_id (void) const;
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_PortDescription (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_PortDescription (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);
  
  private:
    TAO_String_Manager _pd_Name;
    TAO_String_Manager _pd_type_id;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_FACETDESCRIPTION___OBV_CH_)
#define _COMPONENTS_FACETDESCRIPTION___OBV_CH_
  
  // OBV_ class
  class CIAO_Export FacetDescription
    : public virtual Components::FacetDescription,
      public virtual OBV_Components::PortDescription
  {
  public:
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411
    
    virtual void facet_ref (CORBA::Object_ptr);
    virtual CORBA::Object_ptr facet_ref (void) const;
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_FacetDescription (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_FacetDescription (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);
  
  private:
    CORBA::Object_var _pd_facet_ref;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_CONNECTIONDESCRIPTION___OBV_CH_)
#define _COMPONENTS_CONNECTIONDESCRIPTION___OBV_CH_
  
  // OBV_ class
  class CIAO_Export ConnectionDescription
    : public virtual Components::ConnectionDescription,
      public virtual CORBA_DefaultValueRefCountBase
  {
  public:
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:325
    
    virtual void ck (Components::Cookie *);
    virtual Components::Cookie *ck (void) const;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411
    
    virtual void objref (CORBA::Object_ptr);
    virtual CORBA::Object_ptr objref (void) const;
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_ConnectionDescription (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_ConnectionDescription (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);
  
  private:
    Components::Cookie_var _pd_ck;
    CORBA::Object_var _pd_objref;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_RECEPTACLEDESCRIPTION___OBV_CH_)
#define _COMPONENTS_RECEPTACLEDESCRIPTION___OBV_CH_
  
  // OBV_ class
  class CIAO_Export ReceptacleDescription
    : public virtual Components::ReceptacleDescription,
      public virtual OBV_Components::PortDescription
  {
  public:
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411
    
    virtual void is_multiple (CORBA::Boolean);
    virtual CORBA::Boolean is_multiple (void) const;virtual void connections (const Components::ConnectionDescriptions &);
    virtual const Components::ConnectionDescriptions &connections (void) const;
    virtual Components::ConnectionDescriptions &connections (void);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_ReceptacleDescription (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_ReceptacleDescription (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);
  
  private:
    CORBA::Boolean _pd_is_multiple;
    Components::ConnectionDescriptions _pd_connections;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/obv_module.cpp:85

}TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::NameList &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::NameList*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::NameList *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::NameList *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::Cookie *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Cookie **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Cookie *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::PortDescription *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::PortDescription **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::PortDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::FacetDescription *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::FacetDescription **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::FacetDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::FacetDescriptions &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::FacetDescriptions*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::FacetDescriptions *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::FacetDescriptions *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::InvalidName &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::InvalidName*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::InvalidName *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::InvalidName *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::InvalidConnection &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::InvalidConnection*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::InvalidConnection *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::InvalidConnection *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::ExceededConnectionLimit &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::ExceededConnectionLimit*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ExceededConnectionLimit *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::ExceededConnectionLimit *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::AlreadyConnected &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::AlreadyConnected*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::AlreadyConnected *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::AlreadyConnected *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::NoConnection &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::NoConnection*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::NoConnection *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::NoConnection *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::CookieRequired &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::CookieRequired*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CookieRequired *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::CookieRequired *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::CreateFailure &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::CreateFailure*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CreateFailure *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::CreateFailure *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::FinderFailure &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::FinderFailure*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::FinderFailure *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::FinderFailure *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::RemoveFailure &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::RemoveFailure*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::RemoveFailure *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::RemoveFailure *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::DuplicateKeyValue &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::DuplicateKeyValue*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::DuplicateKeyValue *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::DuplicateKeyValue *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::InvalidKey &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::InvalidKey*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::InvalidKey *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::InvalidKey *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::UnknownKeyValue &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::UnknownKeyValue*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::UnknownKeyValue *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::UnknownKeyValue *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::NoKeyAvailable &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::NoKeyAvailable*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::NoKeyAvailable *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::NoKeyAvailable *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::BadEventType &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::BadEventType*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::BadEventType *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::BadEventType *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::HomeNotFound &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::HomeNotFound*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::HomeNotFound *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::HomeNotFound *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::WrongComponentType &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::WrongComponentType*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::WrongComponentType *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::WrongComponentType *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::InvalidConfiguration &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::InvalidConfiguration*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::InvalidConfiguration *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::InvalidConfiguration *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::IllegalState &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::IllegalState*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::IllegalState *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::IllegalState *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Navigation_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Navigation_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Navigation_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::ConnectionDescription *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::ConnectionDescription **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ConnectionDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::ConnectionDescriptions &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::ConnectionDescriptions*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ConnectionDescriptions *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::ConnectionDescriptions *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::ReceptacleDescription *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::ReceptacleDescription **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ReceptacleDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::ReceptacleDescriptions &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::ReceptacleDescriptions*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ReceptacleDescriptions *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::ReceptacleDescriptions *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Receptacles_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Receptacles_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Receptacles_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_NameList_H_
#define _TAO_CDR_OP_Components_NameList_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::NameList &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::NameList &
  );

#endif /* _TAO_CDR_OP_Components_NameList_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::Cookie *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::Cookie *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Cookie *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Cookie *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::PortDescription *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::PortDescription *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::PortDescription *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::PortDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::FacetDescription *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::FacetDescription *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::FacetDescription *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::FacetDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_FacetDescriptions_H_
#define _TAO_CDR_OP_Components_FacetDescriptions_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::FacetDescriptions &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::FacetDescriptions &
  );

#endif /* _TAO_CDR_OP_Components_FacetDescriptions_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::InvalidName &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::InvalidName &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::InvalidConnection &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::InvalidConnection &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::ExceededConnectionLimit &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::ExceededConnectionLimit &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::AlreadyConnected &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::AlreadyConnected &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::NoConnection &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::NoConnection &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::CookieRequired &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::CookieRequired &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::CreateFailure &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::CreateFailure &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::FinderFailure &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::FinderFailure &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::RemoveFailure &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::RemoveFailure &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::DuplicateKeyValue &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::DuplicateKeyValue &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::InvalidKey &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::InvalidKey &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::UnknownKeyValue &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::UnknownKeyValue &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::NoKeyAvailable &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::NoKeyAvailable &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::BadEventType &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::BadEventType &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::HomeNotFound &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::HomeNotFound &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::WrongComponentType &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::WrongComponentType &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::InvalidConfiguration &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::InvalidConfiguration &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::IllegalState &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::IllegalState &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Navigation_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Navigation_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::ConnectionDescription *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::ConnectionDescription *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::ConnectionDescription *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::ConnectionDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_ConnectionDescriptions_H_
#define _TAO_CDR_OP_Components_ConnectionDescriptions_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::ConnectionDescriptions &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::ConnectionDescriptions &
  );

#endif /* _TAO_CDR_OP_Components_ConnectionDescriptions_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::ReceptacleDescription *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::ReceptacleDescription *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::ReceptacleDescription *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::ReceptacleDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_ReceptacleDescriptions_H_
#define _TAO_CDR_OP_Components_ReceptacleDescriptions_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::ReceptacleDescriptions &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::ReceptacleDescriptions &
  );

#endif /* _TAO_CDR_OP_Components_ReceptacleDescriptions_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Receptacles_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Receptacles_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1007

#if defined (__ACE_INLINE__)
#include "CIAO_BaseC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

