// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_CIAO_TRANSACTIONC_H_
#define _TAO_IDL_CIAO_TRANSACTIONC_H_

#include "ace/pre.h"
#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "CIAO_export.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CIAO_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO CIAO_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48

TAO_NAMESPACE  Components
{
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48
  
  TAO_NAMESPACE  Transaction
  {

#if !defined (_COMPONENTS_TRANSACTION_TRANTOKEN_CH_)
#define _COMPONENTS_TRANSACTION_TRANTOKEN_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
    
    class TranToken;
    class TranToken_var;
    
    // *************************************************************
    // Components::Transaction::TranToken
    // *************************************************************
    
    class CIAO_Export TranToken : public 
    
    // TAO_IDL - Generated from 
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
    TAO_Unbounded_Sequence<CORBA::Octet>
#else /* TAO_USE_SEQUENCE_TEMPLATES */
    TAO_Unbounded_Sequence<CORBA::Octet>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
    {
    public:
      TranToken (void);
      TranToken (CORBA::ULong max);
      TranToken (
          CORBA::ULong max, 
          CORBA::ULong length, 
          CORBA::Octet *buffer, 
          CORBA::Boolean release = 0
        );
      TranToken (const TranToken &);
      ~TranToken (void);
      
      static void _tao_any_destructor (void*);
      
      typedef TranToken_var _var_type;
#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
      TranToken (
          CORBA::ULong length,
          const ACE_Message_Block* mb
        )
        : TAO_Unbounded_Sequence<CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_TRANSACTION_TRANTOKEN___VAR_CH_)
#define _COMPONENTS_TRANSACTION_TRANTOKEN___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
    
    // *************************************************************
    // class Components::Transaction::TranToken_var
    // *************************************************************
    
    class CIAO_Export TranToken_var
    {
    public:
      TranToken_var (void);
      TranToken_var (TranToken *);
      TranToken_var (const TranToken_var &);
      
      // Fixed-size base types only.
      TranToken_var (const TranToken &);
      
      ~TranToken_var (void);
      
      TranToken_var &operator= (TranToken *);
      TranToken_var &operator= (const TranToken_var &);
      
      // Fixed-size base types only.
      TranToken_var &operator= (const TranToken &);
      
      TranToken *operator-> (void);
      const TranToken *operator-> (void) const;
      
      operator const TranToken &() const;
      operator TranToken &();
      operator TranToken &() const;
      CORBA::Octet & operator[] (CORBA::ULong index);
      const CORBA::Octet & operator[] (CORBA::ULong index) const;
      
      // in, inout, out, _retn 
      const TranToken &in (void) const;
      TranToken &inout (void);
      TranToken *&out (void);
      TranToken *_retn (void);
      TranToken *ptr (void) const;
    
    private:
      TranToken *ptr_;
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_TRANSACTION_TRANTOKEN___OUT_CH_)
#define _COMPONENTS_TRANSACTION_TRANTOKEN___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
    
    class CIAO_Export TranToken_out
    {
    public:
      TranToken_out (TranToken *&);
      TranToken_out (TranToken_var &);
      TranToken_out (const TranToken_out &);
      TranToken_out &operator= (const TranToken_out &);
      TranToken_out &operator= (TranToken *);
      operator TranToken *&();
      TranToken *&ptr (void);
      TranToken *operator-> (void);
      CORBA::Octet & operator[] (CORBA::ULong index);
    
    private:
      TranToken *&ptr_;
      // Assignment from T_var not allowed.
      void operator= (const TranToken_var &);
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_TranToken;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_TRANSACTION_NOTRANSACTION_CH_)
#define _COMPONENTS_TRANSACTION_NOTRANSACTION_CH_
    
    class CIAO_Export NoTransaction : public CORBA::UserException
    {
    public:
      
      NoTransaction (void);
      NoTransaction (const NoTransaction &);
      ~NoTransaction (void);

      NoTransaction &operator= (const NoTransaction &);
      
      static void _tao_any_destructor (void *);
      
      static NoTransaction *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NoTransaction;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_TRANSACTION_NOTSUPPORTED_CH_)
#define _COMPONENTS_TRANSACTION_NOTSUPPORTED_CH_
    
    class CIAO_Export NotSupported : public CORBA::UserException
    {
    public:
      
      NotSupported (void);
      NotSupported (const NotSupported &);
      ~NotSupported (void);

      NotSupported &operator= (const NotSupported &);
      
      static void _tao_any_destructor (void *);
      
      static NotSupported *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NotSupported;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_TRANSACTION_SYSTEMERROR_CH_)
#define _COMPONENTS_TRANSACTION_SYSTEMERROR_CH_
    
    class CIAO_Export SystemError : public CORBA::UserException
    {
    public:
      
      SystemError (void);
      SystemError (const SystemError &);
      ~SystemError (void);

      SystemError &operator= (const SystemError &);
      
      static void _tao_any_destructor (void *);
      
      static SystemError *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SystemError;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_TRANSACTION_ROLLBACKERROR_CH_)
#define _COMPONENTS_TRANSACTION_ROLLBACKERROR_CH_
    
    class CIAO_Export RollbackError : public CORBA::UserException
    {
    public:
      
      RollbackError (void);
      RollbackError (const RollbackError &);
      ~RollbackError (void);

      RollbackError &operator= (const RollbackError &);
      
      static void _tao_any_destructor (void *);
      
      static RollbackError *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RollbackError;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_TRANSACTION_HEURISTICMIXED_CH_)
#define _COMPONENTS_TRANSACTION_HEURISTICMIXED_CH_
    
    class CIAO_Export HeuristicMixed : public CORBA::UserException
    {
    public:
      
      HeuristicMixed (void);
      HeuristicMixed (const HeuristicMixed &);
      ~HeuristicMixed (void);

      HeuristicMixed &operator= (const HeuristicMixed &);
      
      static void _tao_any_destructor (void *);
      
      static HeuristicMixed *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_HeuristicMixed;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_TRANSACTION_HEURISTICROLLBACK_CH_)
#define _COMPONENTS_TRANSACTION_HEURISTICROLLBACK_CH_
    
    class CIAO_Export HeuristicRollback : public CORBA::UserException
    {
    public:
      
      HeuristicRollback (void);
      HeuristicRollback (const HeuristicRollback &);
      ~HeuristicRollback (void);

      HeuristicRollback &operator= (const HeuristicRollback &);
      
      static void _tao_any_destructor (void *);
      
      static HeuristicRollback *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_HeuristicRollback;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_TRANSACTION_SECURITY_CH_)
#define _COMPONENTS_TRANSACTION_SECURITY_CH_
    
    class CIAO_Export Security : public CORBA::UserException
    {
    public:
      
      Security (void);
      Security (const Security &);
      ~Security (void);

      Security &operator= (const Security &);
      
      static void _tao_any_destructor (void *);
      
      static Security *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Security;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_TRANSACTION_INVALIDTOKEN_CH_)
#define _COMPONENTS_TRANSACTION_INVALIDTOKEN_CH_
    
    class CIAO_Export InvalidToken : public CORBA::UserException
    {
    public:
      
      InvalidToken (void);
      InvalidToken (const InvalidToken &);
      ~InvalidToken (void);

      InvalidToken &operator= (const InvalidToken &);
      
      static void _tao_any_destructor (void *);
      
      static InvalidToken *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidToken;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/enum_ch.cpp:57
    
    enum Status
    {
      ACTIVE,
      MARKED_ROLLBACK,
      PREPARED,
      COMMITTED,
      ROLLED_BACK,
      NO_TRANSACTION,
      PREPARING,
      COMMITTING,
      ROLLING_BACK
    };
    
    typedef Status &Status_out;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Status;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_TRANSACTION_USERTRANSACTION___PTR_CH_)
#define _COMPONENTS_TRANSACTION_USERTRANSACTION___PTR_CH_
    
    class UserTransaction;
    typedef UserTransaction *UserTransaction_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_TRANSACTION_USERTRANSACTION___VAR_CH_)
#define _COMPONENTS_TRANSACTION_USERTRANSACTION___VAR_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
    
    class CIAO_Export UserTransaction_var : public TAO_Base_var
    {
    public:
      UserTransaction_var (void); // default constructor
      UserTransaction_var (UserTransaction_ptr p) : ptr_ (p) {} 
      UserTransaction_var (const UserTransaction_var &); // copy constructor
      ~UserTransaction_var (void); // destructor
      
      UserTransaction_var &operator= (UserTransaction_ptr);
      UserTransaction_var &operator= (const UserTransaction_var &);
      UserTransaction_ptr operator-> (void) const;
      
      operator const UserTransaction_ptr &() const;
      operator UserTransaction_ptr &();
      // in, inout, out, _retn 
      UserTransaction_ptr in (void) const;
      UserTransaction_ptr &inout (void);
      UserTransaction_ptr &out (void);
      UserTransaction_ptr _retn (void);
      UserTransaction_ptr ptr (void) const;
      
      // Hooks used by template sequence and object manager classes
      // for non-defined forward declared interfaces.
      static UserTransaction_ptr tao_duplicate (UserTransaction_ptr);
      static void tao_release (UserTransaction_ptr);
      static UserTransaction_ptr tao_nil (void);
      static UserTransaction_ptr tao_narrow (
          CORBA::Object *
          ACE_ENV_ARG_DECL_NOT_USED
        );
      static CORBA::Object * tao_upcast (void *);
    
    private:
      UserTransaction_ptr ptr_;
      // Unimplemented - prevents widening assignment.
      UserTransaction_var (const TAO_Base_var &rhs);
      UserTransaction_var &operator= (const TAO_Base_var &rhs);
    };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_TRANSACTION_USERTRANSACTION___OUT_CH_)
#define _COMPONENTS_TRANSACTION_USERTRANSACTION___OUT_CH_
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
    
    class CIAO_Export UserTransaction_out
    {
    public:
      UserTransaction_out (UserTransaction_ptr &);
      UserTransaction_out (UserTransaction_var &);
      UserTransaction_out (const UserTransaction_out &);
      UserTransaction_out &operator= (const UserTransaction_out &);
      UserTransaction_out &operator= (const UserTransaction_var &);
      UserTransaction_out &operator= (UserTransaction_ptr);
      operator UserTransaction_ptr &();
      UserTransaction_ptr &ptr (void);
      UserTransaction_ptr operator-> (void);
    
    private:
      UserTransaction_ptr &ptr_;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_TRANSACTION_USERTRANSACTION_CH_)
#define _COMPONENTS_TRANSACTION_USERTRANSACTION_CH_
    
    class CIAO_Export UserTransaction
      : public virtual CORBA::Object
    {
    public:
      typedef UserTransaction_ptr _ptr_type;
      typedef UserTransaction_var _var_type;
      static int _tao_class_id;
      
      // The static operations.
      static UserTransaction_ptr _duplicate (UserTransaction_ptr obj);
      
      static UserTransaction_ptr _narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static UserTransaction_ptr _unchecked_narrow (
          CORBA::Object_ptr obj
          ACE_ENV_ARG_DECL_WITH_DEFAULTS
        );
      
      static UserTransaction_ptr _nil (void)
        {
          return (UserTransaction_ptr)0;
        }
      
      static void _tao_any_destructor (void *);
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void begin (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Transaction::NotSupported
          , Components::Transaction::SystemError
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void commit (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Transaction::RollbackError
          , Components::Transaction::NoTransaction
          , Components::Transaction::HeuristicMixed
          , Components::Transaction::HeuristicRollback
          , Components::Transaction::Security
          , Components::Transaction::SystemError
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void rollback (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Transaction::NoTransaction
          , Components::Transaction::Security
          , Components::Transaction::SystemError
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void set_rollback_only (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Transaction::NoTransaction
          , Components::Transaction::SystemError
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Transaction::Status get_status (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Transaction::SystemError
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void set_timeout (
          CORBA::Long to
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Transaction::SystemError
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual ::Components::Transaction::TranToken * suspend (
          
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Transaction::NoTransaction
          , Components::Transaction::SystemError
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
      
      virtual void resume (
          const Components::Transaction::TranToken & txtoken
        )
        ACE_THROW_SPEC ((
          CORBA::SystemException
          , Components::Transaction::InvalidToken
          , Components::Transaction::SystemError
        )) = 0;
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
      
      virtual void *_tao_QueryInterface (ptr_arith_t type);
      
      virtual const char* _interface_repository_id (void) const;
    
    protected:
      UserTransaction (void);
      virtual ~UserTransaction (void);
      
      friend class _TAO_UserTransaction_Remote_Proxy_Impl;
      friend class _TAO_UserTransaction_ThruPOA_Proxy_Impl;
      friend class _TAO_UserTransaction_Direct_Proxy_Impl;
    
    private:
      UserTransaction (const UserTransaction &);
      void operator= (const UserTransaction &);
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UserTransaction;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67
  
  }
TAO_NAMESPACE_CLOSE // module Components::Transaction

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67

}
TAO_NAMESPACE_CLOSE // module Components

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::TranToken &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::TranToken*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::TranToken *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::TranToken *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::NoTransaction &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::NoTransaction*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::NoTransaction *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::NoTransaction *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::NotSupported &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::NotSupported*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::NotSupported *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::NotSupported *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::SystemError &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::SystemError*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::SystemError *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::SystemError *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::RollbackError &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::RollbackError*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::RollbackError *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::RollbackError *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::HeuristicMixed &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::HeuristicMixed*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::HeuristicMixed *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::HeuristicMixed *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::HeuristicRollback &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::HeuristicRollback*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::HeuristicRollback *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::HeuristicRollback *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::Security &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::Security*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::Security *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::Security *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::Transaction::InvalidToken &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::InvalidToken*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::InvalidToken *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::Transaction::InvalidToken *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_ch.cpp:51

CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::Status);
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::Status &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::UserTransaction_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Transaction::UserTransaction_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Transaction::UserTransaction_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_Transaction_TranToken_H_
#define _TAO_CDR_OP_Components_Transaction_TranToken_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::Transaction::TranToken &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::Transaction::TranToken &
  );

#endif /* _TAO_CDR_OP_Components_Transaction_TranToken_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::NoTransaction &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::NoTransaction &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::NotSupported &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::NotSupported &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::SystemError &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::SystemError &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::RollbackError &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::RollbackError &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::HeuristicMixed &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::HeuristicMixed &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::HeuristicRollback &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::HeuristicRollback &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::Security &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::Security &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::InvalidToken &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::InvalidToken &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/cdr_op_ch.cpp:50

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Transaction::Status &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Transaction::Status &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1007

#if defined (__ACE_INLINE__)
#include "CIAO_TransactionC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

