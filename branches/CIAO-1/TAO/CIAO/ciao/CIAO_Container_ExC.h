// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_CIAO_CONTAINER_EXC_H_
#define _TAO_IDL_CIAO_CONTAINER_EXC_H_

#include "ace/pre.h"
#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "CIAO_export.h"

#include "CIAO_ContainerC.h"
#include "CosPersistentStateC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CIAO_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO CIAO_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:45

TAO_NAMESPACE  Components
{
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/enum_ch.cpp:57
  
  enum BadComponentReferenceReason
  {
    NON_LOCAL_REFERENCE,
    NON_COMPONENT_REFERENCE,
    WRONG_CONTAINER
  };
  
  typedef BadComponentReferenceReason &BadComponentReferenceReason_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_BadComponentReferenceReason;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:294
  
  typedef CosPersistentState::CatalogBase CatalogBase;
  typedef CosPersistentState::CatalogBase_ptr CatalogBase_ptr;
  typedef CosPersistentState::CatalogBase_var CatalogBase_var;
  typedef CosPersistentState::CatalogBase_out CatalogBase_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CatalogBase;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:427
  
  typedef CosPersistentState::TypeId TypeId;
  typedef CosPersistentState::TypeId_var TypeId_var;
  typedef CosPersistentState::TypeId_out TypeId_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_TypeId;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:334
  
  typedef CORBA::Short SegmentId;
  typedef CORBA::Short_out SegmentId_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SegmentId;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::Short COMPONENT_SEGMENT = 0;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:334
  
  typedef CORBA::Short FacetId;
  typedef CORBA::Short_out FacetId_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_FacetId;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::Short COMPONENT_FACET = 0;

#if !defined (_COMPONENTS_IDDATA_CH_)
#define _COMPONENTS_IDDATA_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
  
  class IdData;
  class IdData_var;
  
  // *************************************************************
  // Components::IdData
  // *************************************************************
  
  class CIAO_Export IdData : public 
  
  // TAO_IDL - Generated from 
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  TAO_Unbounded_Sequence<CORBA::Octet>
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Sequence<CORBA::Octet>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  {
  public:
    IdData (void);
    IdData (CORBA::ULong max);
    IdData (
        CORBA::ULong max, 
        CORBA::ULong length, 
        CORBA::Octet *buffer, 
        CORBA::Boolean release = 0
      );
    IdData (const IdData &);
    ~IdData (void);
    
    static void _tao_any_destructor (void*);
    
    typedef IdData_var _var_type;
#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    IdData (
        CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : TAO_Unbounded_Sequence<CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_IDDATA___VAR_CH_)
#define _COMPONENTS_IDDATA___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
  
  // *************************************************************
  // class Components::IdData_var
  // *************************************************************
  
  class CIAO_Export IdData_var
  {
  public:
    IdData_var (void);
    IdData_var (IdData *);
    IdData_var (const IdData_var &);
    
    // Fixed-size base types only.
    IdData_var (const IdData &);
    
    ~IdData_var (void);
    
    IdData_var &operator= (IdData *);
    IdData_var &operator= (const IdData_var &);
    
    // Fixed-size base types only.
    IdData_var &operator= (const IdData &);
    
    IdData *operator-> (void);
    const IdData *operator-> (void) const;
    
    operator const IdData &() const;
    operator IdData &();
    operator IdData &() const;
    CORBA::Octet & operator[] (CORBA::ULong index);
    const CORBA::Octet & operator[] (CORBA::ULong index) const;
    
    // in, inout, out, _retn 
    const IdData &in (void) const;
    IdData &inout (void);
    IdData *&out (void);
    IdData *_retn (void);
    IdData *ptr (void) const;
  
  private:
    IdData *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_IDDATA___OUT_CH_)
#define _COMPONENTS_IDDATA___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
  
  class CIAO_Export IdData_out
  {
  public:
    IdData_out (IdData *&);
    IdData_out (IdData_var &);
    IdData_out (const IdData_out &);
    IdData_out &operator= (const IdData_out &);
    IdData_out &operator= (IdData *);
    operator IdData *&();
    IdData *&ptr (void);
    IdData *operator-> (void);
    CORBA::Octet & operator[] (CORBA::ULong index);
  
  private:
    IdData *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const IdData_var &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_IdData;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:368
  
  typedef char * PersistentId;
  typedef CORBA::String_var PersistentId_var;
  typedef CORBA::String_out PersistentId_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PersistentId;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:334
  
  typedef CORBA::Short StateIdType;
  typedef CORBA::Short_out StateIdType_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StateIdType;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::Short PERSISTENT_ID = 0;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_BADCOMPONENTREFERENCE_CH_)
#define _COMPONENTS_BADCOMPONENTREFERENCE_CH_
  
  class CIAO_Export BadComponentReference : public CORBA::UserException
  {
  public:
    
    Components::BadComponentReferenceReason reason;
    BadComponentReference (void);
    BadComponentReference (const BadComponentReference &);
    ~BadComponentReference (void);

    BadComponentReference &operator= (const BadComponentReference &);
    
    static void _tao_any_destructor (void *);
    
    static BadComponentReference *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ctor.cpp:66
    
    BadComponentReference (
        ACE_NESTED_CLASS (Components, BadComponentReferenceReason) _tao_reason
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_BadComponentReference;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_POLICYMISMATCH_CH_)
#define _COMPONENTS_POLICYMISMATCH_CH_
  
  class CIAO_Export PolicyMismatch : public CORBA::UserException
  {
  public:
    
    PolicyMismatch (void);
    PolicyMismatch (const PolicyMismatch &);
    ~PolicyMismatch (void);

    PolicyMismatch &operator= (const PolicyMismatch &);
    
    static void _tao_any_destructor (void *);
    
    static PolicyMismatch *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PolicyMismatch;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_PERSISTENCENOTAVAILABLE_CH_)
#define _COMPONENTS_PERSISTENCENOTAVAILABLE_CH_
  
  class CIAO_Export PersistenceNotAvailable : public CORBA::UserException
  {
  public:
    
    PersistenceNotAvailable (void);
    PersistenceNotAvailable (const PersistenceNotAvailable &);
    ~PersistenceNotAvailable (void);

    PersistenceNotAvailable &operator= (const PersistenceNotAvailable &);
    
    static void _tao_any_destructor (void *);
    
    static PersistenceNotAvailable *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PersistenceNotAvailable;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_UNKNOWNACTUALHOME_CH_)
#define _COMPONENTS_UNKNOWNACTUALHOME_CH_
  
  class CIAO_Export UnknownActualHome : public CORBA::UserException
  {
  public:
    
    UnknownActualHome (void);
    UnknownActualHome (const UnknownActualHome &);
    ~UnknownActualHome (void);

    UnknownActualHome &operator= (const UnknownActualHome &);
    
    static void _tao_any_destructor (void *);
    
    static UnknownActualHome *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UnknownActualHome;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_PROXYHOMENOTSUPPORTED_CH_)
#define _COMPONENTS_PROXYHOMENOTSUPPORTED_CH_
  
  class CIAO_Export ProxyHomeNotSupported : public CORBA::UserException
  {
  public:
    
    ProxyHomeNotSupported (void);
    ProxyHomeNotSupported (const ProxyHomeNotSupported &);
    ~ProxyHomeNotSupported (void);

    ProxyHomeNotSupported &operator= (const ProxyHomeNotSupported &);
    
    static void _tao_any_destructor (void *);
    
    static ProxyHomeNotSupported *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ProxyHomeNotSupported;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_COMPONENTS_INVALIDSTATEIDDATA_CH_)
#define _COMPONENTS_INVALIDSTATEIDDATA_CH_
  
  class CIAO_Export InvalidStateIdData : public CORBA::UserException
  {
  public:
    
    InvalidStateIdData (void);
    InvalidStateIdData (const InvalidStateIdData &);
    ~InvalidStateIdData (void);

    InvalidStateIdData &operator= (const InvalidStateIdData &);
    
    static void _tao_any_destructor (void *);
    
    static InvalidStateIdData *_downcast (CORBA::Exception *);
    static CORBA::Exception *_alloc (void);

    virtual CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void);

    virtual void _tao_encode (
        TAO_OutputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      ) const;
    
    virtual void _tao_decode (
        TAO_InputCDR &
        ACE_ENV_ARG_DECL_NOT_USED
      );
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
    
    virtual CORBA::TypeCode_ptr _type (void) const;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InvalidStateIdData;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_HOMEREGISTRATION___PTR_CH_)
#define _COMPONENTS_HOMEREGISTRATION___PTR_CH_
  
  class HomeRegistration;
  typedef HomeRegistration *HomeRegistration_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_HOMEREGISTRATION___VAR_CH_)
#define _COMPONENTS_HOMEREGISTRATION___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export HomeRegistration_var : public TAO_Base_var
  {
  public:
    HomeRegistration_var (void); // default constructor
    HomeRegistration_var (HomeRegistration_ptr p) : ptr_ (p) {} 
    HomeRegistration_var (const HomeRegistration_var &); // copy constructor
    ~HomeRegistration_var (void); // destructor
    
    HomeRegistration_var &operator= (HomeRegistration_ptr);
    HomeRegistration_var &operator= (const HomeRegistration_var &);
    HomeRegistration_ptr operator-> (void) const;
    
    operator const HomeRegistration_ptr &() const;
    operator HomeRegistration_ptr &();
    // in, inout, out, _retn 
    HomeRegistration_ptr in (void) const;
    HomeRegistration_ptr &inout (void);
    HomeRegistration_ptr &out (void);
    HomeRegistration_ptr _retn (void);
    HomeRegistration_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static HomeRegistration_ptr tao_duplicate (HomeRegistration_ptr);
    static void tao_release (HomeRegistration_ptr);
    static HomeRegistration_ptr tao_nil (void);
    static HomeRegistration_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    HomeRegistration_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    HomeRegistration_var (const TAO_Base_var &rhs);
    HomeRegistration_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_HOMEREGISTRATION___OUT_CH_)
#define _COMPONENTS_HOMEREGISTRATION___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export HomeRegistration_out
  {
  public:
    HomeRegistration_out (HomeRegistration_ptr &);
    HomeRegistration_out (HomeRegistration_var &);
    HomeRegistration_out (const HomeRegistration_out &);
    HomeRegistration_out &operator= (const HomeRegistration_out &);
    HomeRegistration_out &operator= (const HomeRegistration_var &);
    HomeRegistration_out &operator= (HomeRegistration_ptr);
    operator HomeRegistration_ptr &();
    HomeRegistration_ptr &ptr (void);
    HomeRegistration_ptr operator-> (void);
  
  private:
    HomeRegistration_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_HOMEREGISTRATION_CH_)
#define _COMPONENTS_HOMEREGISTRATION_CH_
  
  class CIAO_Export HomeRegistration
    : public virtual CORBA::Object
  {
  public:
    typedef HomeRegistration_ptr _ptr_type;
    typedef HomeRegistration_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static HomeRegistration_ptr _duplicate (HomeRegistration_ptr obj);
    
    static HomeRegistration_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static HomeRegistration_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static HomeRegistration_ptr _nil (void)
      {
        return (HomeRegistration_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void register_home (
        Components::CCMHome_ptr home_ref,
        const char * home_name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void unregister_home (
        Components::CCMHome_ptr home_ref
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    HomeRegistration (void);
    virtual ~HomeRegistration (void);
    
    friend class _TAO_HomeRegistration_Remote_Proxy_Impl;
    friend class _TAO_HomeRegistration_ThruPOA_Proxy_Impl;
    friend class _TAO_HomeRegistration_Direct_Proxy_Impl;
  
  private:
    HomeRegistration (const HomeRegistration &);
    void operator= (const HomeRegistration &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_HomeRegistration;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_CCM2CONTEXT___PTR_CH_)
#define _COMPONENTS_CCM2CONTEXT___PTR_CH_
  
  class CCM2Context;
  typedef CCM2Context *CCM2Context_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCM2CONTEXT___VAR_CH_)
#define _COMPONENTS_CCM2CONTEXT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export CCM2Context_var : public TAO_Base_var
  {
  public:
    CCM2Context_var (void); // default constructor
    CCM2Context_var (CCM2Context_ptr p) : ptr_ (p) {} 
    CCM2Context_var (const CCM2Context_var &); // copy constructor
    ~CCM2Context_var (void); // destructor
    
    CCM2Context_var &operator= (CCM2Context_ptr);
    CCM2Context_var &operator= (const CCM2Context_var &);
    CCM2Context_ptr operator-> (void) const;
    
    operator const CCM2Context_ptr &() const;
    operator CCM2Context_ptr &();
    // in, inout, out, _retn 
    CCM2Context_ptr in (void) const;
    CCM2Context_ptr &inout (void);
    CCM2Context_ptr &out (void);
    CCM2Context_ptr _retn (void);
    CCM2Context_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static CCM2Context_ptr tao_duplicate (CCM2Context_ptr);
    static void tao_release (CCM2Context_ptr);
    static CCM2Context_ptr tao_nil (void);
    static CCM2Context_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    CCM2Context_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    CCM2Context_var (const TAO_Base_var &rhs);
    CCM2Context_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCM2CONTEXT___OUT_CH_)
#define _COMPONENTS_CCM2CONTEXT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export CCM2Context_out
  {
  public:
    CCM2Context_out (CCM2Context_ptr &);
    CCM2Context_out (CCM2Context_var &);
    CCM2Context_out (const CCM2Context_out &);
    CCM2Context_out &operator= (const CCM2Context_out &);
    CCM2Context_out &operator= (const CCM2Context_var &);
    CCM2Context_out &operator= (CCM2Context_ptr);
    operator CCM2Context_ptr &();
    CCM2Context_ptr &ptr (void);
    CCM2Context_ptr operator-> (void);
  
  private:
    CCM2Context_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_CCM2CONTEXT_CH_)
#define _COMPONENTS_CCM2CONTEXT_CH_
  
  class CIAO_Export CCM2Context
    : public virtual Components::CCMContext
  {
  public:
    typedef CCM2Context_ptr _ptr_type;
    typedef CCM2Context_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static CCM2Context_ptr _duplicate (CCM2Context_ptr obj);
    
    static CCM2Context_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static CCM2Context_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static CCM2Context_ptr _nil (void)
      {
        return (CCM2Context_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::HomeRegistration_ptr get_home_registration (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void req_passivate (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::PolicyMismatch
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::CatalogBase_ptr get_persistence (
        const Components::TypeId & catalog_type_id
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::PersistenceNotAvailable
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    CCM2Context (void);
    virtual ~CCM2Context (void);
    
    friend class _TAO_CCM2Context_Remote_Proxy_Impl;
    friend class _TAO_CCM2Context_ThruPOA_Proxy_Impl;
    friend class _TAO_CCM2Context_Direct_Proxy_Impl;
  
  private:
    CCM2Context (const CCM2Context &);
    void operator= (const CCM2Context &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CCM2Context;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_PROXYHOMEREGISTRATION___PTR_CH_)
#define _COMPONENTS_PROXYHOMEREGISTRATION___PTR_CH_
  
  class ProxyHomeRegistration;
  typedef ProxyHomeRegistration *ProxyHomeRegistration_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PROXYHOMEREGISTRATION___VAR_CH_)
#define _COMPONENTS_PROXYHOMEREGISTRATION___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export ProxyHomeRegistration_var : public TAO_Base_var
  {
  public:
    ProxyHomeRegistration_var (void); // default constructor
    ProxyHomeRegistration_var (ProxyHomeRegistration_ptr p) : ptr_ (p) {} 
    ProxyHomeRegistration_var (const ProxyHomeRegistration_var &); // copy constructor
    ~ProxyHomeRegistration_var (void); // destructor
    
    ProxyHomeRegistration_var &operator= (ProxyHomeRegistration_ptr);
    ProxyHomeRegistration_var &operator= (const ProxyHomeRegistration_var &);
    ProxyHomeRegistration_ptr operator-> (void) const;
    
    operator const ProxyHomeRegistration_ptr &() const;
    operator ProxyHomeRegistration_ptr &();
    // in, inout, out, _retn 
    ProxyHomeRegistration_ptr in (void) const;
    ProxyHomeRegistration_ptr &inout (void);
    ProxyHomeRegistration_ptr &out (void);
    ProxyHomeRegistration_ptr _retn (void);
    ProxyHomeRegistration_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static ProxyHomeRegistration_ptr tao_duplicate (ProxyHomeRegistration_ptr);
    static void tao_release (ProxyHomeRegistration_ptr);
    static ProxyHomeRegistration_ptr tao_nil (void);
    static ProxyHomeRegistration_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    ProxyHomeRegistration_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    ProxyHomeRegistration_var (const TAO_Base_var &rhs);
    ProxyHomeRegistration_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PROXYHOMEREGISTRATION___OUT_CH_)
#define _COMPONENTS_PROXYHOMEREGISTRATION___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export ProxyHomeRegistration_out
  {
  public:
    ProxyHomeRegistration_out (ProxyHomeRegistration_ptr &);
    ProxyHomeRegistration_out (ProxyHomeRegistration_var &);
    ProxyHomeRegistration_out (const ProxyHomeRegistration_out &);
    ProxyHomeRegistration_out &operator= (const ProxyHomeRegistration_out &);
    ProxyHomeRegistration_out &operator= (const ProxyHomeRegistration_var &);
    ProxyHomeRegistration_out &operator= (ProxyHomeRegistration_ptr);
    operator ProxyHomeRegistration_ptr &();
    ProxyHomeRegistration_ptr &ptr (void);
    ProxyHomeRegistration_ptr operator-> (void);
  
  private:
    ProxyHomeRegistration_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_PROXYHOMEREGISTRATION_CH_)
#define _COMPONENTS_PROXYHOMEREGISTRATION_CH_
  
  class CIAO_Export ProxyHomeRegistration
    : public virtual Components::HomeRegistration
  {
  public:
    typedef ProxyHomeRegistration_ptr _ptr_type;
    typedef ProxyHomeRegistration_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ProxyHomeRegistration_ptr _duplicate (ProxyHomeRegistration_ptr obj);
    
    static ProxyHomeRegistration_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ProxyHomeRegistration_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ProxyHomeRegistration_ptr _nil (void)
      {
        return (ProxyHomeRegistration_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void register_proxy_home (
        Components::CCMHome_ptr rhome,
        Components::CCMHome_ptr ahome
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::UnknownActualHome
        , Components::ProxyHomeNotSupported
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    ProxyHomeRegistration (void);
    virtual ~ProxyHomeRegistration (void);
    
    friend class _TAO_ProxyHomeRegistration_Remote_Proxy_Impl;
    friend class _TAO_ProxyHomeRegistration_ThruPOA_Proxy_Impl;
    friend class _TAO_ProxyHomeRegistration_Direct_Proxy_Impl;
  
  private:
    ProxyHomeRegistration (const ProxyHomeRegistration &);
    void operator= (const ProxyHomeRegistration &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ProxyHomeRegistration;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_SESSION2CONTEXT___PTR_CH_)
#define _COMPONENTS_SESSION2CONTEXT___PTR_CH_
  
  class Session2Context;
  typedef Session2Context *Session2Context_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SESSION2CONTEXT___VAR_CH_)
#define _COMPONENTS_SESSION2CONTEXT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export Session2Context_var : public TAO_Base_var
  {
  public:
    Session2Context_var (void); // default constructor
    Session2Context_var (Session2Context_ptr p) : ptr_ (p) {} 
    Session2Context_var (const Session2Context_var &); // copy constructor
    ~Session2Context_var (void); // destructor
    
    Session2Context_var &operator= (Session2Context_ptr);
    Session2Context_var &operator= (const Session2Context_var &);
    Session2Context_ptr operator-> (void) const;
    
    operator const Session2Context_ptr &() const;
    operator Session2Context_ptr &();
    // in, inout, out, _retn 
    Session2Context_ptr in (void) const;
    Session2Context_ptr &inout (void);
    Session2Context_ptr &out (void);
    Session2Context_ptr _retn (void);
    Session2Context_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static Session2Context_ptr tao_duplicate (Session2Context_ptr);
    static void tao_release (Session2Context_ptr);
    static Session2Context_ptr tao_nil (void);
    static Session2Context_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    Session2Context_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    Session2Context_var (const TAO_Base_var &rhs);
    Session2Context_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SESSION2CONTEXT___OUT_CH_)
#define _COMPONENTS_SESSION2CONTEXT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export Session2Context_out
  {
  public:
    Session2Context_out (Session2Context_ptr &);
    Session2Context_out (Session2Context_var &);
    Session2Context_out (const Session2Context_out &);
    Session2Context_out &operator= (const Session2Context_out &);
    Session2Context_out &operator= (const Session2Context_var &);
    Session2Context_out &operator= (Session2Context_ptr);
    operator Session2Context_ptr &();
    Session2Context_ptr &ptr (void);
    Session2Context_ptr operator-> (void);
  
  private:
    Session2Context_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_SESSION2CONTEXT_CH_)
#define _COMPONENTS_SESSION2CONTEXT_CH_
  
  class CIAO_Export Session2Context
    : public virtual Components::SessionContext,
      public virtual Components::CCM2Context
  {
  public:
    typedef Session2Context_ptr _ptr_type;
    typedef Session2Context_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static Session2Context_ptr _duplicate (Session2Context_ptr obj);
    
    static Session2Context_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Session2Context_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Session2Context_ptr _nil (void)
      {
        return (Session2Context_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Object_ptr create_ref (
        const char * repid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Object_ptr create_ref_from_oid (
        const CORBA::OctetSeq & oid,
        const char * repid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::OctetSeq * get_oid_from_ref (
        CORBA::Object_ptr objref
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::IllegalState
        , Components::BadComponentReference
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    Session2Context (void);
    virtual ~Session2Context (void);
    
    friend class _TAO_Session2Context_Remote_Proxy_Impl;
    friend class _TAO_Session2Context_ThruPOA_Proxy_Impl;
    friend class _TAO_Session2Context_Direct_Proxy_Impl;
  
  private:
    Session2Context (const Session2Context &);
    void operator= (const Session2Context &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Session2Context;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52
  
  class StateIdValue;

#if !defined (_COMPONENTS_STATEIDVALUE___PTR_CH_)
#define _COMPONENTS_STATEIDVALUE___PTR_CH_
  
  typedef StateIdValue *StateIdValue_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_STATEIDVALUE___VAR_CH_)
#define _COMPONENTS_STATEIDVALUE___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181
  
  class CIAO_Export StateIdValue_var
  {
  public:
    StateIdValue_var (void);
    StateIdValue_var (StateIdValue*);
    StateIdValue_var (const StateIdValue*); // (TAO extension)
    StateIdValue_var (const StateIdValue_var &);
    ~StateIdValue_var (void);
    
    StateIdValue_var &operator= (StateIdValue*);
    StateIdValue_var &operator= (const StateIdValue_var &);
    StateIdValue* operator-> (void) const;
    
    operator const StateIdValue* () const;
    operator StateIdValue* ();
    // in, inout, out, _retn 
    StateIdValue* in (void) const;
    StateIdValue*& inout (void);
    StateIdValue*& out (void);
    StateIdValue* _retn (void);
    StateIdValue* ptr (void) const;
    
    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (StateIdValue *);
    static void tao_remove_ref (StateIdValue *);
  
  private:
    StateIdValue* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_STATEIDVALUE___OUT_CH_)
#define _COMPONENTS_STATEIDVALUE___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490
  
  class CIAO_Export StateIdValue_out
  {
  public:
    StateIdValue_out (StateIdValue* &);
    StateIdValue_out (StateIdValue_var &);
    StateIdValue_out (const StateIdValue_out &);
    StateIdValue_out &operator= (const StateIdValue_out &);
    StateIdValue_out &operator= (const StateIdValue_var &);
    StateIdValue_out &operator= (StateIdValue*);
    operator StateIdValue*& ();
    StateIdValue*& ptr (void);
    StateIdValue* operator-> (void);
    
  private:
    StateIdValue* &ptr_;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_STATEIDVALUE_CH_)
#define _COMPONENTS_STATEIDVALUE_CH_
  
  class CIAO_Export StateIdValue
    : public virtual CORBA_ValueBase
  {
  public:
    typedef StateIdValue_var _var_type;
    static StateIdValue* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        StateIdValue *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:467
    
    virtual Components::StateIdType get_sid_type (
        
      ) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:467
    
    virtual ::Components::IdData * get_sid_data (
        
      ) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315
  
  protected:
    StateIdValue (void);
    virtual ~StateIdValue (void);
    
    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    
  private:
    StateIdValue (const StateIdValue &);
    void operator= (const StateIdValue &);
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StateIdValue;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_STATEIDFACTORY___PTR_CH_)
#define _COMPONENTS_STATEIDFACTORY___PTR_CH_
  
  class StateIdFactory;
  typedef StateIdFactory *StateIdFactory_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_STATEIDFACTORY___VAR_CH_)
#define _COMPONENTS_STATEIDFACTORY___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export StateIdFactory_var : public TAO_Base_var
  {
  public:
    StateIdFactory_var (void); // default constructor
    StateIdFactory_var (StateIdFactory_ptr p) : ptr_ (p) {} 
    StateIdFactory_var (const StateIdFactory_var &); // copy constructor
    ~StateIdFactory_var (void); // destructor
    
    StateIdFactory_var &operator= (StateIdFactory_ptr);
    StateIdFactory_var &operator= (const StateIdFactory_var &);
    StateIdFactory_ptr operator-> (void) const;
    
    operator const StateIdFactory_ptr &() const;
    operator StateIdFactory_ptr &();
    // in, inout, out, _retn 
    StateIdFactory_ptr in (void) const;
    StateIdFactory_ptr &inout (void);
    StateIdFactory_ptr &out (void);
    StateIdFactory_ptr _retn (void);
    StateIdFactory_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static StateIdFactory_ptr tao_duplicate (StateIdFactory_ptr);
    static void tao_release (StateIdFactory_ptr);
    static StateIdFactory_ptr tao_nil (void);
    static StateIdFactory_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    StateIdFactory_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    StateIdFactory_var (const TAO_Base_var &rhs);
    StateIdFactory_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_STATEIDFACTORY___OUT_CH_)
#define _COMPONENTS_STATEIDFACTORY___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export StateIdFactory_out
  {
  public:
    StateIdFactory_out (StateIdFactory_ptr &);
    StateIdFactory_out (StateIdFactory_var &);
    StateIdFactory_out (const StateIdFactory_out &);
    StateIdFactory_out &operator= (const StateIdFactory_out &);
    StateIdFactory_out &operator= (const StateIdFactory_var &);
    StateIdFactory_out &operator= (StateIdFactory_ptr);
    operator StateIdFactory_ptr &();
    StateIdFactory_ptr &ptr (void);
    StateIdFactory_ptr operator-> (void);
  
  private:
    StateIdFactory_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_STATEIDFACTORY_CH_)
#define _COMPONENTS_STATEIDFACTORY_CH_
  
  class CIAO_Export StateIdFactory
    : public virtual CORBA::Object
  {
  public:
    typedef StateIdFactory_ptr _ptr_type;
    typedef StateIdFactory_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static StateIdFactory_ptr _duplicate (StateIdFactory_ptr obj);
    
    static StateIdFactory_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static StateIdFactory_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static StateIdFactory_ptr _nil (void)
      {
        return (StateIdFactory_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::StateIdValue * create (
        const Components::IdData & data
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidStateIdData
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    StateIdFactory (void);
    virtual ~StateIdFactory (void);
    
    friend class _TAO_StateIdFactory_Remote_Proxy_Impl;
    friend class _TAO_StateIdFactory_ThruPOA_Proxy_Impl;
    friend class _TAO_StateIdFactory_Direct_Proxy_Impl;
  
  private:
    StateIdFactory (const StateIdFactory &);
    void operator= (const StateIdFactory &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StateIdFactory;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52
  
  class PersistentIdValue;

#if !defined (_COMPONENTS_PERSISTENTIDVALUE___PTR_CH_)
#define _COMPONENTS_PERSISTENTIDVALUE___PTR_CH_
  
  typedef PersistentIdValue *PersistentIdValue_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PERSISTENTIDVALUE___VAR_CH_)
#define _COMPONENTS_PERSISTENTIDVALUE___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181
  
  class CIAO_Export PersistentIdValue_var
  {
  public:
    PersistentIdValue_var (void);
    PersistentIdValue_var (PersistentIdValue*);
    PersistentIdValue_var (const PersistentIdValue*); // (TAO extension)
    PersistentIdValue_var (const PersistentIdValue_var &);
    ~PersistentIdValue_var (void);
    
    PersistentIdValue_var &operator= (PersistentIdValue*);
    PersistentIdValue_var &operator= (const PersistentIdValue_var &);
    PersistentIdValue* operator-> (void) const;
    
    operator const PersistentIdValue* () const;
    operator PersistentIdValue* ();
    // in, inout, out, _retn 
    PersistentIdValue* in (void) const;
    PersistentIdValue*& inout (void);
    PersistentIdValue*& out (void);
    PersistentIdValue* _retn (void);
    PersistentIdValue* ptr (void) const;
    
    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (PersistentIdValue *);
    static void tao_remove_ref (PersistentIdValue *);
  
  private:
    PersistentIdValue* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PERSISTENTIDVALUE___OUT_CH_)
#define _COMPONENTS_PERSISTENTIDVALUE___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490
  
  class CIAO_Export PersistentIdValue_out
  {
  public:
    PersistentIdValue_out (PersistentIdValue* &);
    PersistentIdValue_out (PersistentIdValue_var &);
    PersistentIdValue_out (const PersistentIdValue_out &);
    PersistentIdValue_out &operator= (const PersistentIdValue_out &);
    PersistentIdValue_out &operator= (const PersistentIdValue_var &);
    PersistentIdValue_out &operator= (PersistentIdValue*);
    operator PersistentIdValue*& ();
    PersistentIdValue*& ptr (void);
    PersistentIdValue* operator-> (void);
    
  private:
    PersistentIdValue* &ptr_;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PERSISTENTIDVALUE_CH_)
#define _COMPONENTS_PERSISTENTIDVALUE_CH_
  
  class CIAO_Export PersistentIdValue
    : public virtual StateIdValue
  {
  public:
    typedef PersistentIdValue_var _var_type;
    static PersistentIdValue* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        PersistentIdValue *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:467
    
    virtual char * get_pid (
        
      ) = 0;
  
  protected:
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:542
    
    virtual void pid (char *) = 0;
    virtual void pid (const char *) = 0;
    virtual void pid (const CORBA::String_var&) = 0;
    virtual const char *pid (void) const = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315
  
  protected:
    PersistentIdValue (void);
    virtual ~PersistentIdValue (void);
    
    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    
  private:
    PersistentIdValue (const PersistentIdValue &);
    void operator= (const PersistentIdValue &);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_PersistentIdValue (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_PersistentIdValue (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PERSISTENTIDVALUE___INIT_CH_)
#define _COMPONENTS_PERSISTENTIDVALUE___INIT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71
  
  class CIAO_Export PersistentIdValue_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    virtual ~PersistentIdValue_init (void);virtual PersistentIdValue* init (
        const char * pid
      ) = 0;
    
    
    static PersistentIdValue_init* _downcast (CORBA_ValueFactoryBase* );
    
    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    PersistentIdValue_init ();
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PersistentIdValue;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52
  
  class SegmentDescr;

#if !defined (_COMPONENTS_SEGMENTDESCR___PTR_CH_)
#define _COMPONENTS_SEGMENTDESCR___PTR_CH_
  
  typedef SegmentDescr *SegmentDescr_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SEGMENTDESCR___VAR_CH_)
#define _COMPONENTS_SEGMENTDESCR___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181
  
  class CIAO_Export SegmentDescr_var
  {
  public:
    SegmentDescr_var (void);
    SegmentDescr_var (SegmentDescr*);
    SegmentDescr_var (const SegmentDescr*); // (TAO extension)
    SegmentDescr_var (const SegmentDescr_var &);
    ~SegmentDescr_var (void);
    
    SegmentDescr_var &operator= (SegmentDescr*);
    SegmentDescr_var &operator= (const SegmentDescr_var &);
    SegmentDescr* operator-> (void) const;
    
    operator const SegmentDescr* () const;
    operator SegmentDescr* ();
    // in, inout, out, _retn 
    SegmentDescr* in (void) const;
    SegmentDescr*& inout (void);
    SegmentDescr*& out (void);
    SegmentDescr* _retn (void);
    SegmentDescr* ptr (void) const;
    
    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (SegmentDescr *);
    static void tao_remove_ref (SegmentDescr *);
  
  private:
    SegmentDescr* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SEGMENTDESCR___OUT_CH_)
#define _COMPONENTS_SEGMENTDESCR___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490
  
  class CIAO_Export SegmentDescr_out
  {
  public:
    SegmentDescr_out (SegmentDescr* &);
    SegmentDescr_out (SegmentDescr_var &);
    SegmentDescr_out (const SegmentDescr_out &);
    SegmentDescr_out &operator= (const SegmentDescr_out &);
    SegmentDescr_out &operator= (const SegmentDescr_var &);
    SegmentDescr_out &operator= (SegmentDescr*);
    operator SegmentDescr*& ();
    SegmentDescr*& ptr (void);
    SegmentDescr* operator-> (void);
    
  private:
    SegmentDescr* &ptr_;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SEGMENTDESCR_CH_)
#define _COMPONENTS_SEGMENTDESCR_CH_
  
  class CIAO_Export SegmentDescr
    : public virtual CORBA_ValueBase
  {
  public:
    typedef SegmentDescr_var _var_type;
    static SegmentDescr* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        SegmentDescr *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:467
    
    virtual ::Components::StateIdValue * get_sid (
        
      ) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:467
    
    virtual Components::SegmentId get_seg_id (
        
      ) = 0;
  
  protected:
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:325
    
    virtual void sid (Components::StateIdValue *) = 0;
    virtual Components::StateIdValue *sid (void) const = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411
    
    virtual void seg (Components::SegmentId) = 0;
    virtual Components::SegmentId seg (void) const = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315
  
  protected:
    SegmentDescr (void);
    virtual ~SegmentDescr (void);
    
    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    
  private:
    SegmentDescr (const SegmentDescr &);
    void operator= (const SegmentDescr &);
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_SegmentDescr (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_SegmentDescr (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SEGMENTDESCR___INIT_CH_)
#define _COMPONENTS_SEGMENTDESCR___INIT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71
  
  class CIAO_Export SegmentDescr_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    virtual ~SegmentDescr_init (void);virtual SegmentDescr* init (
        Components::StateIdValue * sid,
        Components::SegmentId seg
      ) = 0;
    
    
    static SegmentDescr_init* _downcast (CORBA_ValueFactoryBase* );
    
    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    SegmentDescr_init ();
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SegmentDescr;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_SEGMENTDESCRSEQ_CH_)
#define __TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_SEGMENTDESCRSEQ_CH_
  
  class CIAO_Export _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq
    : public TAO_Unbounded_Base_Sequence
  {
  public:
    _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq (void);
    _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq (CORBA::ULong maximum);
    _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq (
        CORBA::ULong maximum,
        CORBA::ULong length,
        SegmentDescr* *value,
        CORBA::Boolean release = 0
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq (
        const _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq &rhs
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq &operator= (
        const _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq &rhs
      );
    virtual ~_TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq (void);
    
    // = Accessors.
    TAO_Valuetype_Manager<Components::SegmentDescr,Components::SegmentDescr_var> operator[] (CORBA::ULong index) const;
    
    // = Static operations.
    static SegmentDescr **allocbuf (CORBA::ULong nelems);
    static void freebuf (SegmentDescr **buffer);
    
    // Implement the TAO_Base_Sequence methods (see Sequence.h)
    virtual void _allocate_buffer (CORBA::ULong length);
    virtual void _deallocate_buffer (void);
    SegmentDescr* *get_buffer (CORBA::Boolean orphan = 0);
    const SegmentDescr* *get_buffer (void) const;
    virtual void _shrink_buffer (
        CORBA::ULong nl,
        CORBA::ULong ol
      );
  };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 

#if !defined (_COMPONENTS_SEGMENTDESCRSEQ_CH_)
#define _COMPONENTS_SEGMENTDESCRSEQ_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
  
  class SegmentDescrSeq;
  class SegmentDescrSeq_var;
  
  // *************************************************************
  // Components::SegmentDescrSeq
  // *************************************************************
  
  class CIAO_Export SegmentDescrSeq : public 
  
  // TAO_IDL - Generated from 
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  _TAO_Unbounded_Valuetype_Sequence_Components_SegmentDescrSeq
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Valuetype_Sequence<SegmentDescr,SegmentDescr_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  {
  public:
    SegmentDescrSeq (void);
    SegmentDescrSeq (CORBA::ULong max);
    SegmentDescrSeq (
        CORBA::ULong max, 
        CORBA::ULong length, 
        SegmentDescr_ptr *buffer, 
        CORBA::Boolean release = 0
      );
    SegmentDescrSeq (const SegmentDescrSeq &);
    ~SegmentDescrSeq (void);
    
    static void _tao_any_destructor (void*);
    
    typedef SegmentDescrSeq_var _var_type;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SEGMENTDESCRSEQ___VAR_CH_)
#define _COMPONENTS_SEGMENTDESCRSEQ___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
  
  // *************************************************************
  // class Components::SegmentDescrSeq_var
  // *************************************************************
  
  class CIAO_Export SegmentDescrSeq_var
  {
  public:
    SegmentDescrSeq_var (void);
    SegmentDescrSeq_var (SegmentDescrSeq *);
    SegmentDescrSeq_var (const SegmentDescrSeq_var &);
    ~SegmentDescrSeq_var (void);
    
    SegmentDescrSeq_var &operator= (SegmentDescrSeq *);
    SegmentDescrSeq_var &operator= (const SegmentDescrSeq_var &);
    SegmentDescrSeq *operator-> (void);
    const SegmentDescrSeq *operator-> (void) const;
    
    operator const SegmentDescrSeq &() const;
    operator SegmentDescrSeq &();
    operator SegmentDescrSeq &() const;
    
    // Variable-size base types only.
    operator SegmentDescrSeq *&();
    
    TAO_Valuetype_Manager<SegmentDescr, SegmentDescr_var> operator[] (CORBA::ULong index);
    
    // in, inout, out, _retn 
    const SegmentDescrSeq &in (void) const;
    SegmentDescrSeq &inout (void);
    SegmentDescrSeq *&out (void);
    SegmentDescrSeq *_retn (void);
    SegmentDescrSeq *ptr (void) const;
  
  private:
    SegmentDescrSeq *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_SEGMENTDESCRSEQ___OUT_CH_)
#define _COMPONENTS_SEGMENTDESCRSEQ___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
  
  class CIAO_Export SegmentDescrSeq_out
  {
  public:
    SegmentDescrSeq_out (SegmentDescrSeq *&);
    SegmentDescrSeq_out (SegmentDescrSeq_var &);
    SegmentDescrSeq_out (const SegmentDescrSeq_out &);
    SegmentDescrSeq_out &operator= (const SegmentDescrSeq_out &);
    SegmentDescrSeq_out &operator= (SegmentDescrSeq *);
    operator SegmentDescrSeq *&();
    SegmentDescrSeq *&ptr (void);
    SegmentDescrSeq *operator-> (void);
    TAO_Valuetype_Manager<SegmentDescr, SegmentDescr_var> operator[] (CORBA::ULong index);
  
  private:
    SegmentDescrSeq *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const SegmentDescrSeq_var &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SegmentDescrSeq;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_COMPONENTID___PTR_CH_)
#define _COMPONENTS_COMPONENTID___PTR_CH_
  
  class ComponentId;
  typedef ComponentId *ComponentId_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COMPONENTID___VAR_CH_)
#define _COMPONENTS_COMPONENTID___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export ComponentId_var : public TAO_Base_var
  {
  public:
    ComponentId_var (void); // default constructor
    ComponentId_var (ComponentId_ptr p) : ptr_ (p) {} 
    ComponentId_var (const ComponentId_var &); // copy constructor
    ~ComponentId_var (void); // destructor
    
    ComponentId_var &operator= (ComponentId_ptr);
    ComponentId_var &operator= (const ComponentId_var &);
    ComponentId_ptr operator-> (void) const;
    
    operator const ComponentId_ptr &() const;
    operator ComponentId_ptr &();
    // in, inout, out, _retn 
    ComponentId_ptr in (void) const;
    ComponentId_ptr &inout (void);
    ComponentId_ptr &out (void);
    ComponentId_ptr _retn (void);
    ComponentId_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static ComponentId_ptr tao_duplicate (ComponentId_ptr);
    static void tao_release (ComponentId_ptr);
    static ComponentId_ptr tao_nil (void);
    static ComponentId_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    ComponentId_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    ComponentId_var (const TAO_Base_var &rhs);
    ComponentId_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COMPONENTID___OUT_CH_)
#define _COMPONENTS_COMPONENTID___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export ComponentId_out
  {
  public:
    ComponentId_out (ComponentId_ptr &);
    ComponentId_out (ComponentId_var &);
    ComponentId_out (const ComponentId_out &);
    ComponentId_out &operator= (const ComponentId_out &);
    ComponentId_out &operator= (const ComponentId_var &);
    ComponentId_out &operator= (ComponentId_ptr);
    operator ComponentId_ptr &();
    ComponentId_ptr &ptr (void);
    ComponentId_ptr operator-> (void);
  
  private:
    ComponentId_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_COMPONENTID_CH_)
#define _COMPONENTS_COMPONENTID_CH_
  
  class CIAO_Export ComponentId
    : public virtual CORBA::Object
  {
  public:
    typedef ComponentId_ptr _ptr_type;
    typedef ComponentId_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ComponentId_ptr _duplicate (ComponentId_ptr obj);
    
    static ComponentId_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ComponentId_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ComponentId_ptr _nil (void)
      {
        return (ComponentId_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual Components::FacetId get_target_facet (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual Components::SegmentId get_target_segment (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::StateIdValue * get_target_state_id (
        Components::StateIdFactory_ptr sid_factory
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidStateIdData
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::StateIdValue * get_segment_state_id (
        Components::SegmentId seg,
        Components::StateIdFactory_ptr sid_factory
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidStateIdData
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::ComponentId_ptr create_with_new_target (
        Components::FacetId new_target_facet,
        Components::SegmentId new_target_segment
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::SegmentDescrSeq * get_segment_descrs (
        Components::StateIdFactory_ptr sid_factory
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidStateIdData
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    ComponentId (void);
    virtual ~ComponentId (void);
    
    friend class _TAO_ComponentId_Remote_Proxy_Impl;
    friend class _TAO_ComponentId_ThruPOA_Proxy_Impl;
    friend class _TAO_ComponentId_Direct_Proxy_Impl;
  
  private:
    ComponentId (const ComponentId &);
    void operator= (const ComponentId &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ComponentId;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_ENTITY2CONTEXT___PTR_CH_)
#define _COMPONENTS_ENTITY2CONTEXT___PTR_CH_
  
  class Entity2Context;
  typedef Entity2Context *Entity2Context_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENTITY2CONTEXT___VAR_CH_)
#define _COMPONENTS_ENTITY2CONTEXT___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export Entity2Context_var : public TAO_Base_var
  {
  public:
    Entity2Context_var (void); // default constructor
    Entity2Context_var (Entity2Context_ptr p) : ptr_ (p) {} 
    Entity2Context_var (const Entity2Context_var &); // copy constructor
    ~Entity2Context_var (void); // destructor
    
    Entity2Context_var &operator= (Entity2Context_ptr);
    Entity2Context_var &operator= (const Entity2Context_var &);
    Entity2Context_ptr operator-> (void) const;
    
    operator const Entity2Context_ptr &() const;
    operator Entity2Context_ptr &();
    // in, inout, out, _retn 
    Entity2Context_ptr in (void) const;
    Entity2Context_ptr &inout (void);
    Entity2Context_ptr &out (void);
    Entity2Context_ptr _retn (void);
    Entity2Context_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static Entity2Context_ptr tao_duplicate (Entity2Context_ptr);
    static void tao_release (Entity2Context_ptr);
    static Entity2Context_ptr tao_nil (void);
    static Entity2Context_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    Entity2Context_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    Entity2Context_var (const TAO_Base_var &rhs);
    Entity2Context_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENTITY2CONTEXT___OUT_CH_)
#define _COMPONENTS_ENTITY2CONTEXT___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export Entity2Context_out
  {
  public:
    Entity2Context_out (Entity2Context_ptr &);
    Entity2Context_out (Entity2Context_var &);
    Entity2Context_out (const Entity2Context_out &);
    Entity2Context_out &operator= (const Entity2Context_out &);
    Entity2Context_out &operator= (const Entity2Context_var &);
    Entity2Context_out &operator= (Entity2Context_ptr);
    operator Entity2Context_ptr &();
    Entity2Context_ptr &ptr (void);
    Entity2Context_ptr operator-> (void);
  
  private:
    Entity2Context_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_ENTITY2CONTEXT_CH_)
#define _COMPONENTS_ENTITY2CONTEXT_CH_
  
  class CIAO_Export Entity2Context
    : public virtual Components::EntityContext,
      public virtual Components::CCM2Context
  {
  public:
    typedef Entity2Context_ptr _ptr_type;
    typedef Entity2Context_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static Entity2Context_ptr _duplicate (Entity2Context_ptr obj);
    
    static Entity2Context_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Entity2Context_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Entity2Context_ptr _nil (void)
      {
        return (Entity2Context_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::ComponentId_ptr get_component_id (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::IllegalState
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::ComponentId_ptr create_component_id (
        Components::FacetId target_facet,
        Components::SegmentId target_segment,
        const Components::SegmentDescrSeq & seq_descrs
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::ComponentId_ptr create_monolithic_component_id (
        Components::FacetId target_facet,
        Components::StateIdValue * sid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Object_ptr create_ref_from_cid (
        const char * repid,
        Components::ComponentId_ptr cid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::Components::ComponentId_ptr get_cid_from_ref (
        CORBA::Object_ptr objref
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::BadComponentReference
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    Entity2Context (void);
    virtual ~Entity2Context (void);
    
    friend class _TAO_Entity2Context_Remote_Proxy_Impl;
    friend class _TAO_Entity2Context_ThruPOA_Proxy_Impl;
    friend class _TAO_Entity2Context_Direct_Proxy_Impl;
  
  private:
    Entity2Context (const Entity2Context &);
    void operator= (const Entity2Context &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Entity2Context;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_EXECUTORLOCATOR___PTR_CH_)
#define _COMPONENTS_EXECUTORLOCATOR___PTR_CH_
  
  class ExecutorLocator;
  typedef ExecutorLocator *ExecutorLocator_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_EXECUTORLOCATOR___VAR_CH_)
#define _COMPONENTS_EXECUTORLOCATOR___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export ExecutorLocator_var : public TAO_Base_var
  {
  public:
    ExecutorLocator_var (void); // default constructor
    ExecutorLocator_var (ExecutorLocator_ptr p) : ptr_ (p) {} 
    ExecutorLocator_var (const ExecutorLocator_var &); // copy constructor
    ~ExecutorLocator_var (void); // destructor
    
    ExecutorLocator_var &operator= (ExecutorLocator_ptr);
    ExecutorLocator_var &operator= (const ExecutorLocator_var &);
    ExecutorLocator_ptr operator-> (void) const;
    
    operator const ExecutorLocator_ptr &() const;
    operator ExecutorLocator_ptr &();
    // in, inout, out, _retn 
    ExecutorLocator_ptr in (void) const;
    ExecutorLocator_ptr &inout (void);
    ExecutorLocator_ptr &out (void);
    ExecutorLocator_ptr _retn (void);
    ExecutorLocator_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static ExecutorLocator_ptr tao_duplicate (ExecutorLocator_ptr);
    static void tao_release (ExecutorLocator_ptr);
    static ExecutorLocator_ptr tao_nil (void);
    static ExecutorLocator_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    ExecutorLocator_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    ExecutorLocator_var (const TAO_Base_var &rhs);
    ExecutorLocator_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_EXECUTORLOCATOR___OUT_CH_)
#define _COMPONENTS_EXECUTORLOCATOR___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export ExecutorLocator_out
  {
  public:
    ExecutorLocator_out (ExecutorLocator_ptr &);
    ExecutorLocator_out (ExecutorLocator_var &);
    ExecutorLocator_out (const ExecutorLocator_out &);
    ExecutorLocator_out &operator= (const ExecutorLocator_out &);
    ExecutorLocator_out &operator= (const ExecutorLocator_var &);
    ExecutorLocator_out &operator= (ExecutorLocator_ptr);
    operator ExecutorLocator_ptr &();
    ExecutorLocator_ptr &ptr (void);
    ExecutorLocator_ptr operator-> (void);
  
  private:
    ExecutorLocator_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_EXECUTORLOCATOR_CH_)
#define _COMPONENTS_EXECUTORLOCATOR_CH_
  
  class CIAO_Export ExecutorLocator
    : public virtual Components::EnterpriseComponent
  {
  public:
    typedef ExecutorLocator_ptr _ptr_type;
    typedef ExecutorLocator_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ExecutorLocator_ptr _duplicate (ExecutorLocator_ptr obj);
    
    static ExecutorLocator_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExecutorLocator_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ExecutorLocator_ptr _nil (void)
      {
        return (ExecutorLocator_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Object_ptr obtain_executor (
        const char * name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void release_executor (
        CORBA::Object_ptr exc
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CCMException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void configuration_complete (
        
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidConfiguration
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    ExecutorLocator (void);
    virtual ~ExecutorLocator (void);
    
    friend class _TAO_ExecutorLocator_Remote_Proxy_Impl;
    friend class _TAO_ExecutorLocator_ThruPOA_Proxy_Impl;
    friend class _TAO_ExecutorLocator_Direct_Proxy_Impl;
  
  private:
    ExecutorLocator (const ExecutorLocator &);
    void operator= (const ExecutorLocator &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExecutorLocator;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_HOMEEXECUTORBASE___PTR_CH_)
#define _COMPONENTS_HOMEEXECUTORBASE___PTR_CH_
  
  class HomeExecutorBase;
  typedef HomeExecutorBase *HomeExecutorBase_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_HOMEEXECUTORBASE___VAR_CH_)
#define _COMPONENTS_HOMEEXECUTORBASE___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571
  
  class CIAO_Export HomeExecutorBase_var : public TAO_Base_var
  {
  public:
    HomeExecutorBase_var (void); // default constructor
    HomeExecutorBase_var (HomeExecutorBase_ptr p) : ptr_ (p) {} 
    HomeExecutorBase_var (const HomeExecutorBase_var &); // copy constructor
    ~HomeExecutorBase_var (void); // destructor
    
    HomeExecutorBase_var &operator= (HomeExecutorBase_ptr);
    HomeExecutorBase_var &operator= (const HomeExecutorBase_var &);
    HomeExecutorBase_ptr operator-> (void) const;
    
    operator const HomeExecutorBase_ptr &() const;
    operator HomeExecutorBase_ptr &();
    // in, inout, out, _retn 
    HomeExecutorBase_ptr in (void) const;
    HomeExecutorBase_ptr &inout (void);
    HomeExecutorBase_ptr &out (void);
    HomeExecutorBase_ptr _retn (void);
    HomeExecutorBase_ptr ptr (void) const;
    
    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static HomeExecutorBase_ptr tao_duplicate (HomeExecutorBase_ptr);
    static void tao_release (HomeExecutorBase_ptr);
    static HomeExecutorBase_ptr tao_nil (void);
    static HomeExecutorBase_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);
  
  private:
    HomeExecutorBase_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    HomeExecutorBase_var (const TAO_Base_var &rhs);
    HomeExecutorBase_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_HOMEEXECUTORBASE___OUT_CH_)
#define _COMPONENTS_HOMEEXECUTORBASE___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946
  
  class CIAO_Export HomeExecutorBase_out
  {
  public:
    HomeExecutorBase_out (HomeExecutorBase_ptr &);
    HomeExecutorBase_out (HomeExecutorBase_var &);
    HomeExecutorBase_out (const HomeExecutorBase_out &);
    HomeExecutorBase_out &operator= (const HomeExecutorBase_out &);
    HomeExecutorBase_out &operator= (const HomeExecutorBase_var &);
    HomeExecutorBase_out &operator= (HomeExecutorBase_ptr);
    operator HomeExecutorBase_ptr &();
    HomeExecutorBase_ptr &ptr (void);
    HomeExecutorBase_ptr operator-> (void);
  
  private:
    HomeExecutorBase_ptr &ptr_;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_HOMEEXECUTORBASE_CH_)
#define _COMPONENTS_HOMEEXECUTORBASE_CH_
  
  class CIAO_Export HomeExecutorBase
    : public virtual CORBA::Object
  {
  public:
    typedef HomeExecutorBase_ptr _ptr_type;
    typedef HomeExecutorBase_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static HomeExecutorBase_ptr _duplicate (HomeExecutorBase_ptr obj);
    
    static HomeExecutorBase_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static HomeExecutorBase_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static HomeExecutorBase_ptr _nil (void)
      {
        return (HomeExecutorBase_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
    
    virtual void *_tao_QueryInterface (ptr_arith_t type);
    
    virtual const char* _interface_repository_id (void) const;
  
  protected:
    HomeExecutorBase (void);
    virtual ~HomeExecutorBase (void);
    
    friend class _TAO_HomeExecutorBase_Remote_Proxy_Impl;
    friend class _TAO_HomeExecutorBase_ThruPOA_Proxy_Impl;
    friend class _TAO_HomeExecutorBase_Direct_Proxy_Impl;
  
  private:
    HomeExecutorBase (const HomeExecutorBase &);
    void operator= (const HomeExecutorBase &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_HomeExecutorBase;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:64

}
TAO_NAMESPACE_CLOSE // module Components

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/obv_module.cpp:55

TAO_NAMESPACE  OBV_Components
{
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_PERSISTENTIDVALUE___OBV_CH_)
#define _COMPONENTS_PERSISTENTIDVALUE___OBV_CH_
  
  // OBV_ class
  class CIAO_Export PersistentIdValue
    : public virtual Components::PersistentIdValue
  {
  public:
  
  protected:
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:542
    
    virtual void pid (char *);
    virtual void pid (const char *);
    virtual void pid (const CORBA::String_var&);
    virtual const char *pid (void) const;
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_PersistentIdValue (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_PersistentIdValue (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);
  
  private:
    TAO_String_Manager _pd_pid;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_SEGMENTDESCR___OBV_CH_)
#define _COMPONENTS_SEGMENTDESCR___OBV_CH_
  
  // OBV_ class
  class CIAO_Export SegmentDescr
    : public virtual Components::SegmentDescr
  {
  public:
  
  protected:
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:325
    
    virtual void sid (Components::StateIdValue *);
    virtual Components::StateIdValue *sid (void) const;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411
    
    virtual void seg (Components::SegmentId);
    virtual Components::SegmentId seg (void) const;
    
  protected:
    virtual CORBA::Boolean _tao_marshal__Components_SegmentDescr (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_SegmentDescr (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);
  
  private:
    Components::StateIdValue_var _pd_sid;
    Components::SegmentId _pd_seg;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/obv_module.cpp:85

}TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_ch.cpp:51

CIAO_Export void operator<<= (CORBA::Any &, Components::BadComponentReferenceReason);
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::BadComponentReferenceReason &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::IdData &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::IdData*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::IdData *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::IdData *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::BadComponentReference &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::BadComponentReference*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::BadComponentReference *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::BadComponentReference *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::PolicyMismatch &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::PolicyMismatch*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::PolicyMismatch *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::PolicyMismatch *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::PersistenceNotAvailable &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::PersistenceNotAvailable*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::PersistenceNotAvailable *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::PersistenceNotAvailable *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::UnknownActualHome &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::UnknownActualHome*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::UnknownActualHome *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::UnknownActualHome *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::ProxyHomeNotSupported &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::ProxyHomeNotSupported*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ProxyHomeNotSupported *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::ProxyHomeNotSupported *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::InvalidStateIdData &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::InvalidStateIdData*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::InvalidStateIdData *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::InvalidStateIdData *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::HomeRegistration_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::HomeRegistration_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::HomeRegistration_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::CCM2Context_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::CCM2Context_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CCM2Context_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::ProxyHomeRegistration_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::ProxyHomeRegistration_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ProxyHomeRegistration_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Session2Context_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Session2Context_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Session2Context_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::StateIdValue *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::StateIdValue **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::StateIdValue *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::StateIdFactory_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::StateIdFactory_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::StateIdFactory_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::PersistentIdValue *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::PersistentIdValue **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::PersistentIdValue *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::SegmentDescr *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::SegmentDescr **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::SegmentDescr *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::SegmentDescrSeq &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::SegmentDescrSeq*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::SegmentDescrSeq *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::SegmentDescrSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::ComponentId_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::ComponentId_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ComponentId_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Entity2Context_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Entity2Context_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Entity2Context_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::ExecutorLocator_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::ExecutorLocator_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ExecutorLocator_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::HomeExecutorBase_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::HomeExecutorBase_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::HomeExecutorBase_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/cdr_op_ch.cpp:50

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::BadComponentReferenceReason &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::BadComponentReferenceReason &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_IdData_H_
#define _TAO_CDR_OP_Components_IdData_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::IdData &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::IdData &
  );

#endif /* _TAO_CDR_OP_Components_IdData_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::BadComponentReference &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::BadComponentReference &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::PolicyMismatch &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::PolicyMismatch &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::PersistenceNotAvailable &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::PersistenceNotAvailable &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::UnknownActualHome &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::UnknownActualHome &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::ProxyHomeNotSupported &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::ProxyHomeNotSupported &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/cdr_op_ch.cpp:52

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::InvalidStateIdData &);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::InvalidStateIdData &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::StateIdValue *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::StateIdValue *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::StateIdValue *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::StateIdValue *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::PersistentIdValue *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::PersistentIdValue *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::PersistentIdValue *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::PersistentIdValue *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::SegmentDescr *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::SegmentDescr *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::SegmentDescr *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::SegmentDescr *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_SegmentDescrSeq_H_
#define _TAO_CDR_OP_Components_SegmentDescrSeq_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::SegmentDescrSeq &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::SegmentDescrSeq &
  );

#endif /* _TAO_CDR_OP_Components_SegmentDescrSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1007

#if defined (__ACE_INLINE__)
#include "CIAO_Container_ExC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

