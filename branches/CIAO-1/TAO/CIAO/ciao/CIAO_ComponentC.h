// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_CIAO_COMPONENTC_H_
#define _TAO_IDL_CIAO_COMPONENTC_H_

#include "ace/pre.h"
#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "CIAO_export.h"

#include "CIAO_EventC.h"
#include "tao/IFR_Client/IFR_BaseC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CIAO_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO CIAO_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48

TAO_NAMESPACE  Components
{

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52

  class PrimaryKeyBase;

#if !defined (_COMPONENTS_PRIMARYKEYBASE___PTR_CH_)
#define _COMPONENTS_PRIMARYKEYBASE___PTR_CH_

  typedef PrimaryKeyBase *PrimaryKeyBase_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PRIMARYKEYBASE___VAR_CH_)
#define _COMPONENTS_PRIMARYKEYBASE___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181

  class CIAO_Export PrimaryKeyBase_var
  {
  public:
    PrimaryKeyBase_var (void);
    PrimaryKeyBase_var (PrimaryKeyBase*);
    PrimaryKeyBase_var (const PrimaryKeyBase*); // (TAO extension)
    PrimaryKeyBase_var (const PrimaryKeyBase_var &);
    ~PrimaryKeyBase_var (void);

    PrimaryKeyBase_var &operator= (PrimaryKeyBase*);
    PrimaryKeyBase_var &operator= (const PrimaryKeyBase_var &);
    PrimaryKeyBase* operator-> (void) const;

    operator const PrimaryKeyBase* () const;
    operator PrimaryKeyBase* ();
    // in, inout, out, _retn
    PrimaryKeyBase* in (void) const;
    PrimaryKeyBase*& inout (void);
    PrimaryKeyBase*& out (void);
    PrimaryKeyBase* _retn (void);
    PrimaryKeyBase* ptr (void) const;

    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (PrimaryKeyBase *);
    static void tao_remove_ref (PrimaryKeyBase *);

  private:
    PrimaryKeyBase* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PRIMARYKEYBASE___OUT_CH_)
#define _COMPONENTS_PRIMARYKEYBASE___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490

  class CIAO_Export PrimaryKeyBase_out
  {
  public:
    PrimaryKeyBase_out (PrimaryKeyBase* &);
    PrimaryKeyBase_out (PrimaryKeyBase_var &);
    PrimaryKeyBase_out (const PrimaryKeyBase_out &);
    PrimaryKeyBase_out &operator= (const PrimaryKeyBase_out &);
    PrimaryKeyBase_out &operator= (const PrimaryKeyBase_var &);
    PrimaryKeyBase_out &operator= (PrimaryKeyBase*);
    operator PrimaryKeyBase*& ();
    PrimaryKeyBase*& ptr (void);
    PrimaryKeyBase* operator-> (void);

  private:
    PrimaryKeyBase* &ptr_;
  };

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_PRIMARYKEYBASE_CH_)
#define _COMPONENTS_PRIMARYKEYBASE_CH_

  class CIAO_Export PrimaryKeyBase
    : public virtual CORBA_ValueBase
  {
  public:
    typedef PrimaryKeyBase_var _var_type;
    static PrimaryKeyBase* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        PrimaryKeyBase *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315

  protected:
    PrimaryKeyBase (void);
    virtual ~PrimaryKeyBase (void);

    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);

  private:
    PrimaryKeyBase (const PrimaryKeyBase &);
    void operator= (const PrimaryKeyBase &);

  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PrimaryKeyBase;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface_fwd/interface_fwd_ch.cpp:53

  class CCMObject;

#if !defined (_COMPONENTS_CCMOBJECT___PTR_CH_)
#define _COMPONENTS_CCMOBJECT___PTR_CH_

  typedef CCMObject *CCMObject_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMOBJECT___VAR_CH_)
#define _COMPONENTS_CCMOBJECT___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

  class CIAO_Export CCMObject_var : public TAO_Base_var
  {
  public:
    CCMObject_var (void); // default constructor
    CCMObject_var (CCMObject_ptr p) : ptr_ (p) {}
    CCMObject_var (const CCMObject_var &); // copy constructor
    ~CCMObject_var (void); // destructor

    CCMObject_var &operator= (CCMObject_ptr);
    CCMObject_var &operator= (const CCMObject_var &);
    CCMObject_ptr operator-> (void) const;

    operator const CCMObject_ptr &() const;
    operator CCMObject_ptr &();
    // in, inout, out, _retn
    CCMObject_ptr in (void) const;
    CCMObject_ptr &inout (void);
    CCMObject_ptr &out (void);
    CCMObject_ptr _retn (void);
    CCMObject_ptr ptr (void) const;

    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static CCMObject_ptr tao_duplicate (CCMObject_ptr);
    static void tao_release (CCMObject_ptr);
    static CCMObject_ptr tao_nil (void);
    static CCMObject_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);

  private:
    CCMObject_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    CCMObject_var (const TAO_Base_var &rhs);
    CCMObject_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMOBJECT___OUT_CH_)
#define _COMPONENTS_CCMOBJECT___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

  class CIAO_Export CCMObject_out
  {
  public:
    CCMObject_out (CCMObject_ptr &);
    CCMObject_out (CCMObject_var &);
    CCMObject_out (const CCMObject_out &);
    CCMObject_out &operator= (const CCMObject_out &);
    CCMObject_out &operator= (const CCMObject_var &);
    CCMObject_out &operator= (CCMObject_ptr);
    operator CCMObject_ptr &();
    CCMObject_ptr &ptr (void);
    CCMObject_ptr operator-> (void);

  private:
    CCMObject_ptr &ptr_;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_CCMHOME___PTR_CH_)
#define _COMPONENTS_CCMHOME___PTR_CH_

  class CCMHome;
  typedef CCMHome *CCMHome_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMHOME___VAR_CH_)
#define _COMPONENTS_CCMHOME___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

  class CIAO_Export CCMHome_var : public TAO_Base_var
  {
  public:
    CCMHome_var (void); // default constructor
    CCMHome_var (CCMHome_ptr p) : ptr_ (p) {}
    CCMHome_var (const CCMHome_var &); // copy constructor
    ~CCMHome_var (void); // destructor

    CCMHome_var &operator= (CCMHome_ptr);
    CCMHome_var &operator= (const CCMHome_var &);
    CCMHome_ptr operator-> (void) const;

    operator const CCMHome_ptr &() const;
    operator CCMHome_ptr &();
    // in, inout, out, _retn
    CCMHome_ptr in (void) const;
    CCMHome_ptr &inout (void);
    CCMHome_ptr &out (void);
    CCMHome_ptr _retn (void);
    CCMHome_ptr ptr (void) const;

    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static CCMHome_ptr tao_duplicate (CCMHome_ptr);
    static void tao_release (CCMHome_ptr);
    static CCMHome_ptr tao_nil (void);
    static CCMHome_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);

  private:
    CCMHome_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    CCMHome_var (const TAO_Base_var &rhs);
    CCMHome_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMHOME___OUT_CH_)
#define _COMPONENTS_CCMHOME___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

  class CIAO_Export CCMHome_out
  {
  public:
    CCMHome_out (CCMHome_ptr &);
    CCMHome_out (CCMHome_var &);
    CCMHome_out (const CCMHome_out &);
    CCMHome_out &operator= (const CCMHome_out &);
    CCMHome_out &operator= (const CCMHome_var &);
    CCMHome_out &operator= (CCMHome_ptr);
    operator CCMHome_ptr &();
    CCMHome_ptr &ptr (void);
    CCMHome_ptr operator-> (void);

  private:
    CCMHome_ptr &ptr_;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_CCMHOME_CH_)
#define _COMPONENTS_CCMHOME_CH_

  class _TAO_CCMHome_Proxy_Impl;
  class _TAO_CCMHome_Remote_Proxy_Impl;
  class _TAO_CCMHome_Proxy_Broker;
  class _TAO_CCMHome_Remote_Proxy_Broker;

  class CIAO_Export CCMHome
    : public virtual CORBA::Object
  {
  public:
    typedef CCMHome_ptr _ptr_type;
    typedef CCMHome_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static CCMHome_ptr _duplicate (CCMHome_ptr obj);

    static CCMHome_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static CCMHome_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static CCMHome_ptr _nil (void)
      {
        return (CCMHome_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IRObject_ptr get_component_def (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IRObject_ptr get_home_def (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void remove_component (
        Components::CCMObject_ptr comp
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::RemoveFailure
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_CCMHome_Proxy_Broker *the_TAO_CCMHome_Proxy_Broker_;

  protected:
    CCMHome (int collocated = 0);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_CCMHome_setup_collocation (int collocated);

    CCMHome (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~CCMHome (void);

    friend class _TAO_CCMHome_Remote_Proxy_Impl;
    friend class _TAO_CCMHome_ThruPOA_Proxy_Impl;
    friend class _TAO_CCMHome_Direct_Proxy_Impl;

  private:
    CCMHome (const CCMHome &);
    void operator= (const CCMHome &);
  };

  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.


  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35

  class CIAO_Export _TAO_CCMHome_Proxy_Impl
    : public virtual TAO_Object_Proxy_Impl
  {
  public:
    virtual ~_TAO_CCMHome_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::CORBA::IRObject_ptr get_component_def (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::CORBA::IRObject_ptr get_home_def (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void remove_component (
        CORBA_Object *_collocated_tao_target_,
        Components::CCMObject_ptr comp
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::RemoveFailure
      )) = 0;

  protected:
    _TAO_CCMHome_Proxy_Impl (void);
  };

  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37

  class CIAO_Export _TAO_CCMHome_Remote_Proxy_Impl
    : public virtual _TAO_CCMHome_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl
  {
  public:
    _TAO_CCMHome_Remote_Proxy_Impl (void);

    virtual ~_TAO_CCMHome_Remote_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::CORBA::IRObject_ptr get_component_def (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::CORBA::IRObject_ptr get_home_def (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void remove_component (
        CORBA_Object *_collocated_tao_target_,
        Components::CCMObject_ptr comp
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::RemoveFailure
      ));
  };

  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.

  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35

  class CIAO_Export _TAO_CCMHome_Proxy_Broker
  {
  public:
    virtual ~_TAO_CCMHome_Proxy_Broker (void);
    virtual _TAO_CCMHome_Proxy_Impl &select_proxy (
        CCMHome *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;

  protected:
    _TAO_CCMHome_Proxy_Broker (void);

  };

  //
  //              End Base Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40

  class CIAO_Export _TAO_CCMHome_Remote_Proxy_Broker
    : public virtual _TAO_CCMHome_Proxy_Broker
  {
  public:
    _TAO_CCMHome_Remote_Proxy_Broker (void);

    virtual ~_TAO_CCMHome_Remote_Proxy_Broker (void);

    virtual _TAO_CCMHome_Proxy_Impl &select_proxy (
        CCMHome *object
        ACE_ENV_ARG_DECL
      );

  private:
    _TAO_CCMHome_Remote_Proxy_Impl remote_proxy_impl_;

  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_CCMHome_Remote_Proxy_Broker *the_TAO_CCMHome_Remote_Proxy_Broker (void);
  };

  //
  //              End Remote Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CCMHome;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_COMPONENTS_CCMHOMES_CH_)
#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_COMPONENTS_CCMHOMES_CH_

  class CIAO_Export _TAO_Unbounded_Object_Sequence_Components_CCMHomes
    : public TAO_Unbounded_Base_Sequence
  {
  public:
    _TAO_Unbounded_Object_Sequence_Components_CCMHomes (void);
    _TAO_Unbounded_Object_Sequence_Components_CCMHomes (CORBA::ULong maximum);
    _TAO_Unbounded_Object_Sequence_Components_CCMHomes (
        CORBA::ULong maximum,
        CORBA::ULong length,
        CCMHome* *value,
        CORBA::Boolean release = 0
      );
    _TAO_Unbounded_Object_Sequence_Components_CCMHomes (
        const _TAO_Unbounded_Object_Sequence_Components_CCMHomes &rhs
      );
    _TAO_Unbounded_Object_Sequence_Components_CCMHomes &operator= (
        const _TAO_Unbounded_Object_Sequence_Components_CCMHomes &rhs
      );
    virtual ~_TAO_Unbounded_Object_Sequence_Components_CCMHomes (void);

    // = Accessors.
    TAO_Object_Manager<Components::CCMHome,Components::CCMHome_var> operator[] (CORBA::ULong index) const;

    // = Static operations.
    static CCMHome **allocbuf (CORBA::ULong nelems);
    static void freebuf (CCMHome **buffer);

    // Implement the TAO_Base_Sequence methods (see Sequence.h)
    virtual void _allocate_buffer (CORBA::ULong length);
    virtual void _deallocate_buffer (void);
    CCMHome* *get_buffer (CORBA::Boolean orphan = 0);
    const CCMHome* *get_buffer (void) const;
    virtual void _shrink_buffer (
        CORBA::ULong nl,
        CORBA::ULong ol
      );

    virtual void _downcast (
        void* target,
        CORBA_Object *src
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    virtual CORBA_Object* _upcast (void *src) const;
  };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */

#if !defined (_COMPONENTS_CCMHOMES_CH_)
#define _COMPONENTS_CCMHOMES_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371

  class CCMHomes;
  class CCMHomes_var;

  // *************************************************************
  // Components::CCMHomes
  // *************************************************************

  class CIAO_Export CCMHomes : public

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  _TAO_Unbounded_Object_Sequence_Components_CCMHomes
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Object_Sequence<CCMHome,CCMHome_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  {
  public:
    CCMHomes (void);
    CCMHomes (CORBA::ULong max);
    CCMHomes (
        CORBA::ULong max,
        CORBA::ULong length,
        CCMHome_ptr *buffer,
        CORBA::Boolean release = 0
      );
    CCMHomes (const CCMHomes &);
    ~CCMHomes (void);

    static void _tao_any_destructor (void*);

    typedef CCMHomes_var _var_type;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMHOMES___VAR_CH_)
#define _COMPONENTS_CCMHOMES___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549

  // *************************************************************
  // class Components::CCMHomes_var
  // *************************************************************

  class CIAO_Export CCMHomes_var
  {
  public:
    CCMHomes_var (void);
    CCMHomes_var (CCMHomes *);
    CCMHomes_var (const CCMHomes_var &);
    ~CCMHomes_var (void);

    CCMHomes_var &operator= (CCMHomes *);
    CCMHomes_var &operator= (const CCMHomes_var &);
    CCMHomes *operator-> (void);
    const CCMHomes *operator-> (void) const;

    operator const CCMHomes &() const;
    operator CCMHomes &();
    operator CCMHomes &() const;

    // Variable-size base types only.
    operator CCMHomes *&();

    TAO_Object_Manager<CCMHome, CCMHome_var> operator[] (CORBA::ULong index);

    // in, inout, out, _retn
    const CCMHomes &in (void) const;
    CCMHomes &inout (void);
    CCMHomes *&out (void);
    CCMHomes *_retn (void);
    CCMHomes *ptr (void) const;

  private:
    CCMHomes *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMHOMES___OUT_CH_)
#define _COMPONENTS_CCMHOMES___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753

  class CIAO_Export CCMHomes_out
  {
  public:
    CCMHomes_out (CCMHomes *&);
    CCMHomes_out (CCMHomes_var &);
    CCMHomes_out (const CCMHomes_out &);
    CCMHomes_out &operator= (const CCMHomes_out &);
    CCMHomes_out &operator= (CCMHomes *);
    operator CCMHomes *&();
    CCMHomes *&ptr (void);
    CCMHomes *operator-> (void);
    TAO_Object_Manager<CCMHome, CCMHome_var> operator[] (CORBA::ULong index);

  private:
    CCMHomes *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const CCMHomes_var &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CCMHomes;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_KEYLESSCCMHOME___PTR_CH_)
#define _COMPONENTS_KEYLESSCCMHOME___PTR_CH_

  class KeylessCCMHome;
  typedef KeylessCCMHome *KeylessCCMHome_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_KEYLESSCCMHOME___VAR_CH_)
#define _COMPONENTS_KEYLESSCCMHOME___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

  class CIAO_Export KeylessCCMHome_var : public TAO_Base_var
  {
  public:
    KeylessCCMHome_var (void); // default constructor
    KeylessCCMHome_var (KeylessCCMHome_ptr p) : ptr_ (p) {}
    KeylessCCMHome_var (const KeylessCCMHome_var &); // copy constructor
    ~KeylessCCMHome_var (void); // destructor

    KeylessCCMHome_var &operator= (KeylessCCMHome_ptr);
    KeylessCCMHome_var &operator= (const KeylessCCMHome_var &);
    KeylessCCMHome_ptr operator-> (void) const;

    operator const KeylessCCMHome_ptr &() const;
    operator KeylessCCMHome_ptr &();
    // in, inout, out, _retn
    KeylessCCMHome_ptr in (void) const;
    KeylessCCMHome_ptr &inout (void);
    KeylessCCMHome_ptr &out (void);
    KeylessCCMHome_ptr _retn (void);
    KeylessCCMHome_ptr ptr (void) const;

    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static KeylessCCMHome_ptr tao_duplicate (KeylessCCMHome_ptr);
    static void tao_release (KeylessCCMHome_ptr);
    static KeylessCCMHome_ptr tao_nil (void);
    static KeylessCCMHome_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);

  private:
    KeylessCCMHome_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    KeylessCCMHome_var (const TAO_Base_var &rhs);
    KeylessCCMHome_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_KEYLESSCCMHOME___OUT_CH_)
#define _COMPONENTS_KEYLESSCCMHOME___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

  class CIAO_Export KeylessCCMHome_out
  {
  public:
    KeylessCCMHome_out (KeylessCCMHome_ptr &);
    KeylessCCMHome_out (KeylessCCMHome_var &);
    KeylessCCMHome_out (const KeylessCCMHome_out &);
    KeylessCCMHome_out &operator= (const KeylessCCMHome_out &);
    KeylessCCMHome_out &operator= (const KeylessCCMHome_var &);
    KeylessCCMHome_out &operator= (KeylessCCMHome_ptr);
    operator KeylessCCMHome_ptr &();
    KeylessCCMHome_ptr &ptr (void);
    KeylessCCMHome_ptr operator-> (void);

  private:
    KeylessCCMHome_ptr &ptr_;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_KEYLESSCCMHOME_CH_)
#define _COMPONENTS_KEYLESSCCMHOME_CH_

  class _TAO_KeylessCCMHome_Proxy_Impl;
  class _TAO_KeylessCCMHome_Remote_Proxy_Impl;
  class _TAO_KeylessCCMHome_Proxy_Broker;
  class _TAO_KeylessCCMHome_Remote_Proxy_Broker;

  class CIAO_Export KeylessCCMHome
    : public virtual CORBA::Object
  {
  public:
    typedef KeylessCCMHome_ptr _ptr_type;
    typedef KeylessCCMHome_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static KeylessCCMHome_ptr _duplicate (KeylessCCMHome_ptr obj);

    static KeylessCCMHome_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static KeylessCCMHome_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static KeylessCCMHome_ptr _nil (void)
      {
        return (KeylessCCMHome_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Components::CCMObject_ptr create_component (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CreateFailure
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_KeylessCCMHome_Proxy_Broker *the_TAO_KeylessCCMHome_Proxy_Broker_;

  protected:
    KeylessCCMHome (int collocated = 0);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_KeylessCCMHome_setup_collocation (int collocated);

    KeylessCCMHome (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~KeylessCCMHome (void);

    friend class _TAO_KeylessCCMHome_Remote_Proxy_Impl;
    friend class _TAO_KeylessCCMHome_ThruPOA_Proxy_Impl;
    friend class _TAO_KeylessCCMHome_Direct_Proxy_Impl;

  private:
    KeylessCCMHome (const KeylessCCMHome &);
    void operator= (const KeylessCCMHome &);
  };

  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.


  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35

  class CIAO_Export _TAO_KeylessCCMHome_Proxy_Impl
    : public virtual TAO_Object_Proxy_Impl
  {
  public:
    virtual ~_TAO_KeylessCCMHome_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::Components::CCMObject_ptr create_component (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CreateFailure
      )) = 0;

  protected:
    _TAO_KeylessCCMHome_Proxy_Impl (void);
  };

  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37

  class CIAO_Export _TAO_KeylessCCMHome_Remote_Proxy_Impl
    : public virtual _TAO_KeylessCCMHome_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl
  {
  public:
    _TAO_KeylessCCMHome_Remote_Proxy_Impl (void);

    virtual ~_TAO_KeylessCCMHome_Remote_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::Components::CCMObject_ptr create_component (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::CreateFailure
      ));
  };

  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.

  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35

  class CIAO_Export _TAO_KeylessCCMHome_Proxy_Broker
  {
  public:
    virtual ~_TAO_KeylessCCMHome_Proxy_Broker (void);
    virtual _TAO_KeylessCCMHome_Proxy_Impl &select_proxy (
        KeylessCCMHome *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;

  protected:
    _TAO_KeylessCCMHome_Proxy_Broker (void);

  };

  //
  //              End Base Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40

  class CIAO_Export _TAO_KeylessCCMHome_Remote_Proxy_Broker
    : public virtual _TAO_KeylessCCMHome_Proxy_Broker
  {
  public:
    _TAO_KeylessCCMHome_Remote_Proxy_Broker (void);

    virtual ~_TAO_KeylessCCMHome_Remote_Proxy_Broker (void);

    virtual _TAO_KeylessCCMHome_Proxy_Impl &select_proxy (
        KeylessCCMHome *object
        ACE_ENV_ARG_DECL
      );

  private:
    _TAO_KeylessCCMHome_Remote_Proxy_Impl remote_proxy_impl_;

  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_KeylessCCMHome_Remote_Proxy_Broker *the_TAO_KeylessCCMHome_Remote_Proxy_Broker (void);
  };

  //
  //              End Remote Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_KeylessCCMHome;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_HOMEFINDER___PTR_CH_)
#define _COMPONENTS_HOMEFINDER___PTR_CH_

  class HomeFinder;
  typedef HomeFinder *HomeFinder_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_HOMEFINDER___VAR_CH_)
#define _COMPONENTS_HOMEFINDER___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

  class CIAO_Export HomeFinder_var : public TAO_Base_var
  {
  public:
    HomeFinder_var (void); // default constructor
    HomeFinder_var (HomeFinder_ptr p) : ptr_ (p) {}
    HomeFinder_var (const HomeFinder_var &); // copy constructor
    ~HomeFinder_var (void); // destructor

    HomeFinder_var &operator= (HomeFinder_ptr);
    HomeFinder_var &operator= (const HomeFinder_var &);
    HomeFinder_ptr operator-> (void) const;

    operator const HomeFinder_ptr &() const;
    operator HomeFinder_ptr &();
    // in, inout, out, _retn
    HomeFinder_ptr in (void) const;
    HomeFinder_ptr &inout (void);
    HomeFinder_ptr &out (void);
    HomeFinder_ptr _retn (void);
    HomeFinder_ptr ptr (void) const;

    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static HomeFinder_ptr tao_duplicate (HomeFinder_ptr);
    static void tao_release (HomeFinder_ptr);
    static HomeFinder_ptr tao_nil (void);
    static HomeFinder_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);

  private:
    HomeFinder_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    HomeFinder_var (const TAO_Base_var &rhs);
    HomeFinder_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_HOMEFINDER___OUT_CH_)
#define _COMPONENTS_HOMEFINDER___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

  class CIAO_Export HomeFinder_out
  {
  public:
    HomeFinder_out (HomeFinder_ptr &);
    HomeFinder_out (HomeFinder_var &);
    HomeFinder_out (const HomeFinder_out &);
    HomeFinder_out &operator= (const HomeFinder_out &);
    HomeFinder_out &operator= (const HomeFinder_var &);
    HomeFinder_out &operator= (HomeFinder_ptr);
    operator HomeFinder_ptr &();
    HomeFinder_ptr &ptr (void);
    HomeFinder_ptr operator-> (void);

  private:
    HomeFinder_ptr &ptr_;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_HOMEFINDER_CH_)
#define _COMPONENTS_HOMEFINDER_CH_

  class _TAO_HomeFinder_Proxy_Impl;
  class _TAO_HomeFinder_Remote_Proxy_Impl;
  class _TAO_HomeFinder_Proxy_Broker;
  class _TAO_HomeFinder_Remote_Proxy_Broker;

  class CIAO_Export HomeFinder
    : public virtual CORBA::Object
  {
  public:
    typedef HomeFinder_ptr _ptr_type;
    typedef HomeFinder_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static HomeFinder_ptr _duplicate (HomeFinder_ptr obj);

    static HomeFinder_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static HomeFinder_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static HomeFinder_ptr _nil (void)
      {
        return (HomeFinder_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Components::CCMHome_ptr find_home_by_component_type (
        const char * comp_repid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Components::CCMHome_ptr find_home_by_home_type (
        const char * home_repid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Components::CCMHome_ptr find_home_by_name (
        const char * home_name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_HomeFinder_Proxy_Broker *the_TAO_HomeFinder_Proxy_Broker_;

  protected:
    HomeFinder (int collocated = 0);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_HomeFinder_setup_collocation (int collocated);

    HomeFinder (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~HomeFinder (void);

    friend class _TAO_HomeFinder_Remote_Proxy_Impl;
    friend class _TAO_HomeFinder_ThruPOA_Proxy_Impl;
    friend class _TAO_HomeFinder_Direct_Proxy_Impl;

  private:
    HomeFinder (const HomeFinder &);
    void operator= (const HomeFinder &);
  };

  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.


  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35

  class CIAO_Export _TAO_HomeFinder_Proxy_Impl
    : public virtual TAO_Object_Proxy_Impl
  {
  public:
    virtual ~_TAO_HomeFinder_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::Components::CCMHome_ptr find_home_by_component_type (
        CORBA_Object *_collocated_tao_target_,
        const char * comp_repid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::Components::CCMHome_ptr find_home_by_home_type (
        CORBA_Object *_collocated_tao_target_,
        const char * home_repid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::Components::CCMHome_ptr find_home_by_name (
        CORBA_Object *_collocated_tao_target_,
        const char * home_name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      )) = 0;

  protected:
    _TAO_HomeFinder_Proxy_Impl (void);
  };

  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37

  class CIAO_Export _TAO_HomeFinder_Remote_Proxy_Impl
    : public virtual _TAO_HomeFinder_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl
  {
  public:
    _TAO_HomeFinder_Remote_Proxy_Impl (void);

    virtual ~_TAO_HomeFinder_Remote_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::Components::CCMHome_ptr find_home_by_component_type (
        CORBA_Object *_collocated_tao_target_,
        const char * comp_repid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::Components::CCMHome_ptr find_home_by_home_type (
        CORBA_Object *_collocated_tao_target_,
        const char * home_repid
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::Components::CCMHome_ptr find_home_by_name (
        CORBA_Object *_collocated_tao_target_,
        const char * home_name
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::HomeNotFound
      ));
  };

  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.

  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35

  class CIAO_Export _TAO_HomeFinder_Proxy_Broker
  {
  public:
    virtual ~_TAO_HomeFinder_Proxy_Broker (void);
    virtual _TAO_HomeFinder_Proxy_Impl &select_proxy (
        HomeFinder *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;

  protected:
    _TAO_HomeFinder_Proxy_Broker (void);

  };

  //
  //              End Base Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40

  class CIAO_Export _TAO_HomeFinder_Remote_Proxy_Broker
    : public virtual _TAO_HomeFinder_Proxy_Broker
  {
  public:
    _TAO_HomeFinder_Remote_Proxy_Broker (void);

    virtual ~_TAO_HomeFinder_Remote_Proxy_Broker (void);

    virtual _TAO_HomeFinder_Proxy_Impl &select_proxy (
        HomeFinder *object
        ACE_ENV_ARG_DECL
      );

  private:
    _TAO_HomeFinder_Remote_Proxy_Impl remote_proxy_impl_;

  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_HomeFinder_Remote_Proxy_Broker *the_TAO_HomeFinder_Remote_Proxy_Broker (void);
  };

  //
  //              End Remote Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_HomeFinder;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_CONFIGURATOR___PTR_CH_)
#define _COMPONENTS_CONFIGURATOR___PTR_CH_

  class Configurator;
  typedef Configurator *Configurator_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONFIGURATOR___VAR_CH_)
#define _COMPONENTS_CONFIGURATOR___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

  class CIAO_Export Configurator_var : public TAO_Base_var
  {
  public:
    Configurator_var (void); // default constructor
    Configurator_var (Configurator_ptr p) : ptr_ (p) {}
    Configurator_var (const Configurator_var &); // copy constructor
    ~Configurator_var (void); // destructor

    Configurator_var &operator= (Configurator_ptr);
    Configurator_var &operator= (const Configurator_var &);
    Configurator_ptr operator-> (void) const;

    operator const Configurator_ptr &() const;
    operator Configurator_ptr &();
    // in, inout, out, _retn
    Configurator_ptr in (void) const;
    Configurator_ptr &inout (void);
    Configurator_ptr &out (void);
    Configurator_ptr _retn (void);
    Configurator_ptr ptr (void) const;

    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static Configurator_ptr tao_duplicate (Configurator_ptr);
    static void tao_release (Configurator_ptr);
    static Configurator_ptr tao_nil (void);
    static Configurator_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);

  private:
    Configurator_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    Configurator_var (const TAO_Base_var &rhs);
    Configurator_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONFIGURATOR___OUT_CH_)
#define _COMPONENTS_CONFIGURATOR___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

  class CIAO_Export Configurator_out
  {
  public:
    Configurator_out (Configurator_ptr &);
    Configurator_out (Configurator_var &);
    Configurator_out (const Configurator_out &);
    Configurator_out &operator= (const Configurator_out &);
    Configurator_out &operator= (const Configurator_var &);
    Configurator_out &operator= (Configurator_ptr);
    operator Configurator_ptr &();
    Configurator_ptr &ptr (void);
    Configurator_ptr operator-> (void);

  private:
    Configurator_ptr &ptr_;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_CONFIGURATOR_CH_)
#define _COMPONENTS_CONFIGURATOR_CH_

  class _TAO_Configurator_Proxy_Impl;
  class _TAO_Configurator_Remote_Proxy_Impl;
  class _TAO_Configurator_Proxy_Broker;
  class _TAO_Configurator_Remote_Proxy_Broker;

  class CIAO_Export Configurator
    : public virtual CORBA::Object
  {
  public:
    typedef Configurator_ptr _ptr_type;
    typedef Configurator_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static Configurator_ptr _duplicate (Configurator_ptr obj);

    static Configurator_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static Configurator_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static Configurator_ptr _nil (void)
      {
        return (Configurator_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void configure (
        Components::CCMObject_ptr comp
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::WrongComponentType
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_Configurator_Proxy_Broker *the_TAO_Configurator_Proxy_Broker_;

  protected:
    Configurator (int collocated = 0);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_Configurator_setup_collocation (int collocated);

    Configurator (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~Configurator (void);

    friend class _TAO_Configurator_Remote_Proxy_Impl;
    friend class _TAO_Configurator_ThruPOA_Proxy_Impl;
    friend class _TAO_Configurator_Direct_Proxy_Impl;

  private:
    Configurator (const Configurator &);
    void operator= (const Configurator &);
  };

  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.


  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35

  class CIAO_Export _TAO_Configurator_Proxy_Impl
    : public virtual TAO_Object_Proxy_Impl
  {
  public:
    virtual ~_TAO_Configurator_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void configure (
        CORBA_Object *_collocated_tao_target_,
        Components::CCMObject_ptr comp
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::WrongComponentType
      )) = 0;

  protected:
    _TAO_Configurator_Proxy_Impl (void);
  };

  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37

  class CIAO_Export _TAO_Configurator_Remote_Proxy_Impl
    : public virtual _TAO_Configurator_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl
  {
  public:
    _TAO_Configurator_Remote_Proxy_Impl (void);

    virtual ~_TAO_Configurator_Remote_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void configure (
        CORBA_Object *_collocated_tao_target_,
        Components::CCMObject_ptr comp
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::WrongComponentType
      ));
  };

  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.

  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35

  class CIAO_Export _TAO_Configurator_Proxy_Broker
  {
  public:
    virtual ~_TAO_Configurator_Proxy_Broker (void);
    virtual _TAO_Configurator_Proxy_Impl &select_proxy (
        Configurator *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;

  protected:
    _TAO_Configurator_Proxy_Broker (void);

  };

  //
  //              End Base Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40

  class CIAO_Export _TAO_Configurator_Remote_Proxy_Broker
    : public virtual _TAO_Configurator_Proxy_Broker
  {
  public:
    _TAO_Configurator_Remote_Proxy_Broker (void);

    virtual ~_TAO_Configurator_Remote_Proxy_Broker (void);

    virtual _TAO_Configurator_Proxy_Impl &select_proxy (
        Configurator *object
        ACE_ENV_ARG_DECL
      );

  private:
    _TAO_Configurator_Remote_Proxy_Impl remote_proxy_impl_;

  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_Configurator_Remote_Proxy_Broker *the_TAO_Configurator_Remote_Proxy_Broker (void);
  };

  //
  //              End Remote Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Configurator;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52

  class ConfigValue;

#if !defined (_COMPONENTS_CONFIGVALUE___PTR_CH_)
#define _COMPONENTS_CONFIGVALUE___PTR_CH_

  typedef ConfigValue *ConfigValue_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONFIGVALUE___VAR_CH_)
#define _COMPONENTS_CONFIGVALUE___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181

  class CIAO_Export ConfigValue_var
  {
  public:
    ConfigValue_var (void);
    ConfigValue_var (ConfigValue*);
    ConfigValue_var (const ConfigValue*); // (TAO extension)
    ConfigValue_var (const ConfigValue_var &);
    ~ConfigValue_var (void);

    ConfigValue_var &operator= (ConfigValue*);
    ConfigValue_var &operator= (const ConfigValue_var &);
    ConfigValue* operator-> (void) const;

    operator const ConfigValue* () const;
    operator ConfigValue* ();
    // in, inout, out, _retn
    ConfigValue* in (void) const;
    ConfigValue*& inout (void);
    ConfigValue*& out (void);
    ConfigValue* _retn (void);
    ConfigValue* ptr (void) const;

    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (ConfigValue *);
    static void tao_remove_ref (ConfigValue *);

  private:
    ConfigValue* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONFIGVALUE___OUT_CH_)
#define _COMPONENTS_CONFIGVALUE___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490

  class CIAO_Export ConfigValue_out
  {
  public:
    ConfigValue_out (ConfigValue* &);
    ConfigValue_out (ConfigValue_var &);
    ConfigValue_out (const ConfigValue_out &);
    ConfigValue_out &operator= (const ConfigValue_out &);
    ConfigValue_out &operator= (const ConfigValue_var &);
    ConfigValue_out &operator= (ConfigValue*);
    operator ConfigValue*& ();
    ConfigValue*& ptr (void);
    ConfigValue* operator-> (void);

  private:
    ConfigValue* &ptr_;
  };

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONFIGVALUE_CH_)
#define _COMPONENTS_CONFIGVALUE_CH_

  class CIAO_Export ConfigValue
    : public virtual CORBA_ValueBase
  {
  public:
    typedef ConfigValue_var _var_type;
    static ConfigValue* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        ConfigValue *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:542

    virtual void name (char *) = 0;
    virtual void name (const char *) = 0;
    virtual void name (const CORBA::String_var&) = 0;
    virtual const char *name (void) const = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411

    virtual void value (CORBA::Any &) = 0;
    virtual const CORBA::Any &value (void) const = 0;virtual CORBA::Any &value (void) = 0;



    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315

  protected:
    ConfigValue (void);
    virtual ~ConfigValue (void);

    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);

  private:
    ConfigValue (const ConfigValue &);
    void operator= (const ConfigValue &);

  protected:
    virtual CORBA::Boolean _tao_marshal__Components_ConfigValue (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_ConfigValue (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONFIGVALUE___INIT_CH_)
#define _COMPONENTS_CONFIGVALUE___INIT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71

  class CIAO_Export ConfigValue_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    ConfigValue_init (void);
    virtual ~ConfigValue_init (void);

    static ConfigValue_init* _downcast (CORBA_ValueFactoryBase* );

    virtual CORBA::ValueBase *create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ConfigValue;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_CONFIGVALUES_CH_)
#define __TAO_UNBOUNDED_VALUETYPE_SEQUENCE_COMPONENTS_CONFIGVALUES_CH_

  class CIAO_Export _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues
    : public TAO_Unbounded_Base_Sequence
  {
  public:
    _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues (void);
    _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues (CORBA::ULong maximum);
    _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues (
        CORBA::ULong maximum,
        CORBA::ULong length,
        ConfigValue* *value,
        CORBA::Boolean release = 0
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues (
        const _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues &rhs
      );
    _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues &operator= (
        const _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues &rhs
      );
    virtual ~_TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues (void);

    // = Accessors.
    TAO_Valuetype_Manager<Components::ConfigValue,Components::ConfigValue_var> operator[] (CORBA::ULong index) const;

    // = Static operations.
    static ConfigValue **allocbuf (CORBA::ULong nelems);
    static void freebuf (ConfigValue **buffer);

    // Implement the TAO_Base_Sequence methods (see Sequence.h)
    virtual void _allocate_buffer (CORBA::ULong length);
    virtual void _deallocate_buffer (void);
    ConfigValue* *get_buffer (CORBA::Boolean orphan = 0);
    const ConfigValue* *get_buffer (void) const;
    virtual void _shrink_buffer (
        CORBA::ULong nl,
        CORBA::ULong ol
      );
  };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */

#if !defined (_COMPONENTS_CONFIGVALUES_CH_)
#define _COMPONENTS_CONFIGVALUES_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371

  class ConfigValues;
  class ConfigValues_var;

  // *************************************************************
  // Components::ConfigValues
  // *************************************************************

  class CIAO_Export ConfigValues : public

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  _TAO_Unbounded_Valuetype_Sequence_Components_ConfigValues
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Valuetype_Sequence<ConfigValue,ConfigValue_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  {
  public:
    ConfigValues (void);
    ConfigValues (CORBA::ULong max);
    ConfigValues (
        CORBA::ULong max,
        CORBA::ULong length,
        ConfigValue_ptr *buffer,
        CORBA::Boolean release = 0
      );
    ConfigValues (const ConfigValues &);
    ~ConfigValues (void);

    static void _tao_any_destructor (void*);

    typedef ConfigValues_var _var_type;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONFIGVALUES___VAR_CH_)
#define _COMPONENTS_CONFIGVALUES___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549

  // *************************************************************
  // class Components::ConfigValues_var
  // *************************************************************

  class CIAO_Export ConfigValues_var
  {
  public:
    ConfigValues_var (void);
    ConfigValues_var (ConfigValues *);
    ConfigValues_var (const ConfigValues_var &);
    ~ConfigValues_var (void);

    ConfigValues_var &operator= (ConfigValues *);
    ConfigValues_var &operator= (const ConfigValues_var &);
    ConfigValues *operator-> (void);
    const ConfigValues *operator-> (void) const;

    operator const ConfigValues &() const;
    operator ConfigValues &();
    operator ConfigValues &() const;

    // Variable-size base types only.
    operator ConfigValues *&();

    TAO_Valuetype_Manager<ConfigValue, ConfigValue_var> operator[] (CORBA::ULong index);

    // in, inout, out, _retn
    const ConfigValues &in (void) const;
    ConfigValues &inout (void);
    ConfigValues *&out (void);
    ConfigValues *_retn (void);
    ConfigValues *ptr (void) const;

  private:
    ConfigValues *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CONFIGVALUES___OUT_CH_)
#define _COMPONENTS_CONFIGVALUES___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753

  class CIAO_Export ConfigValues_out
  {
  public:
    ConfigValues_out (ConfigValues *&);
    ConfigValues_out (ConfigValues_var &);
    ConfigValues_out (const ConfigValues_out &);
    ConfigValues_out &operator= (const ConfigValues_out &);
    ConfigValues_out &operator= (ConfigValues *);
    operator ConfigValues *&();
    ConfigValues *&ptr (void);
    ConfigValues *operator-> (void);
    TAO_Valuetype_Manager<ConfigValue, ConfigValue_var> operator[] (CORBA::ULong index);

  private:
    ConfigValues *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const ConfigValues_var &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ConfigValues;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_STANDARDCONFIGURATOR___PTR_CH_)
#define _COMPONENTS_STANDARDCONFIGURATOR___PTR_CH_

  class StandardConfigurator;
  typedef StandardConfigurator *StandardConfigurator_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_STANDARDCONFIGURATOR___VAR_CH_)
#define _COMPONENTS_STANDARDCONFIGURATOR___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

  class CIAO_Export StandardConfigurator_var : public TAO_Base_var
  {
  public:
    StandardConfigurator_var (void); // default constructor
    StandardConfigurator_var (StandardConfigurator_ptr p) : ptr_ (p) {}
    StandardConfigurator_var (const StandardConfigurator_var &); // copy constructor
    ~StandardConfigurator_var (void); // destructor

    StandardConfigurator_var &operator= (StandardConfigurator_ptr);
    StandardConfigurator_var &operator= (const StandardConfigurator_var &);
    StandardConfigurator_ptr operator-> (void) const;

    operator const StandardConfigurator_ptr &() const;
    operator StandardConfigurator_ptr &();
    // in, inout, out, _retn
    StandardConfigurator_ptr in (void) const;
    StandardConfigurator_ptr &inout (void);
    StandardConfigurator_ptr &out (void);
    StandardConfigurator_ptr _retn (void);
    StandardConfigurator_ptr ptr (void) const;

    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static StandardConfigurator_ptr tao_duplicate (StandardConfigurator_ptr);
    static void tao_release (StandardConfigurator_ptr);
    static StandardConfigurator_ptr tao_nil (void);
    static StandardConfigurator_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);

  private:
    StandardConfigurator_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    StandardConfigurator_var (const TAO_Base_var &rhs);
    StandardConfigurator_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_STANDARDCONFIGURATOR___OUT_CH_)
#define _COMPONENTS_STANDARDCONFIGURATOR___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

  class CIAO_Export StandardConfigurator_out
  {
  public:
    StandardConfigurator_out (StandardConfigurator_ptr &);
    StandardConfigurator_out (StandardConfigurator_var &);
    StandardConfigurator_out (const StandardConfigurator_out &);
    StandardConfigurator_out &operator= (const StandardConfigurator_out &);
    StandardConfigurator_out &operator= (const StandardConfigurator_var &);
    StandardConfigurator_out &operator= (StandardConfigurator_ptr);
    operator StandardConfigurator_ptr &();
    StandardConfigurator_ptr &ptr (void);
    StandardConfigurator_ptr operator-> (void);

  private:
    StandardConfigurator_ptr &ptr_;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_STANDARDCONFIGURATOR_CH_)
#define _COMPONENTS_STANDARDCONFIGURATOR_CH_

  class _TAO_StandardConfigurator_Proxy_Impl;
  class _TAO_StandardConfigurator_Remote_Proxy_Impl;
  class _TAO_StandardConfigurator_Proxy_Broker;
  class _TAO_StandardConfigurator_Remote_Proxy_Broker;

  class CIAO_Export StandardConfigurator
    : public virtual Components::Configurator
  {
  public:
    typedef StandardConfigurator_ptr _ptr_type;
    typedef StandardConfigurator_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static StandardConfigurator_ptr _duplicate (StandardConfigurator_ptr obj);

    static StandardConfigurator_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static StandardConfigurator_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static StandardConfigurator_ptr _nil (void)
      {
        return (StandardConfigurator_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void set_configuration (
        const Components::ConfigValues & descr
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_StandardConfigurator_Proxy_Broker *the_TAO_StandardConfigurator_Proxy_Broker_;

  protected:
    StandardConfigurator (int collocated = 0);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_StandardConfigurator_setup_collocation (int collocated);

    StandardConfigurator (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~StandardConfigurator (void);

    friend class _TAO_StandardConfigurator_Remote_Proxy_Impl;
    friend class _TAO_StandardConfigurator_ThruPOA_Proxy_Impl;
    friend class _TAO_StandardConfigurator_Direct_Proxy_Impl;

  private:
    StandardConfigurator (const StandardConfigurator &);
    void operator= (const StandardConfigurator &);
  };

  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.


  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35

  class CIAO_Export _TAO_StandardConfigurator_Proxy_Impl
    : public virtual Components::_TAO_Configurator_Proxy_Impl
  {
  public:
    virtual ~_TAO_StandardConfigurator_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void set_configuration (
        CORBA_Object *_collocated_tao_target_,
        const Components::ConfigValues & descr
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

  protected:
    _TAO_StandardConfigurator_Proxy_Impl (void);
  };

  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37

  class CIAO_Export _TAO_StandardConfigurator_Remote_Proxy_Impl
    : public virtual _TAO_StandardConfigurator_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual Components::_TAO_Configurator_Remote_Proxy_Impl
  {
  public:
    _TAO_StandardConfigurator_Remote_Proxy_Impl (void);

    virtual ~_TAO_StandardConfigurator_Remote_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void set_configuration (
        CORBA_Object *_collocated_tao_target_,
        const Components::ConfigValues & descr
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };

  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.

  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35

  class CIAO_Export _TAO_StandardConfigurator_Proxy_Broker
  {
  public:
    virtual ~_TAO_StandardConfigurator_Proxy_Broker (void);
    virtual _TAO_StandardConfigurator_Proxy_Impl &select_proxy (
        StandardConfigurator *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;

  protected:
    _TAO_StandardConfigurator_Proxy_Broker (void);

  };

  //
  //              End Base Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40

  class CIAO_Export _TAO_StandardConfigurator_Remote_Proxy_Broker
    : public virtual _TAO_StandardConfigurator_Proxy_Broker
  {
  public:
    _TAO_StandardConfigurator_Remote_Proxy_Broker (void);

    virtual ~_TAO_StandardConfigurator_Remote_Proxy_Broker (void);

    virtual _TAO_StandardConfigurator_Proxy_Impl &select_proxy (
        StandardConfigurator *object
        ACE_ENV_ARG_DECL
      );

  private:
    _TAO_StandardConfigurator_Remote_Proxy_Impl remote_proxy_impl_;

  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_StandardConfigurator_Remote_Proxy_Broker *the_TAO_StandardConfigurator_Remote_Proxy_Broker (void);
  };

  //
  //              End Remote Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StandardConfigurator;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_HOMECONFIGURATION___PTR_CH_)
#define _COMPONENTS_HOMECONFIGURATION___PTR_CH_

  class HomeConfiguration;
  typedef HomeConfiguration *HomeConfiguration_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_HOMECONFIGURATION___VAR_CH_)
#define _COMPONENTS_HOMECONFIGURATION___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

  class CIAO_Export HomeConfiguration_var : public TAO_Base_var
  {
  public:
    HomeConfiguration_var (void); // default constructor
    HomeConfiguration_var (HomeConfiguration_ptr p) : ptr_ (p) {}
    HomeConfiguration_var (const HomeConfiguration_var &); // copy constructor
    ~HomeConfiguration_var (void); // destructor

    HomeConfiguration_var &operator= (HomeConfiguration_ptr);
    HomeConfiguration_var &operator= (const HomeConfiguration_var &);
    HomeConfiguration_ptr operator-> (void) const;

    operator const HomeConfiguration_ptr &() const;
    operator HomeConfiguration_ptr &();
    // in, inout, out, _retn
    HomeConfiguration_ptr in (void) const;
    HomeConfiguration_ptr &inout (void);
    HomeConfiguration_ptr &out (void);
    HomeConfiguration_ptr _retn (void);
    HomeConfiguration_ptr ptr (void) const;

    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static HomeConfiguration_ptr tao_duplicate (HomeConfiguration_ptr);
    static void tao_release (HomeConfiguration_ptr);
    static HomeConfiguration_ptr tao_nil (void);
    static HomeConfiguration_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);

  private:
    HomeConfiguration_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    HomeConfiguration_var (const TAO_Base_var &rhs);
    HomeConfiguration_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_HOMECONFIGURATION___OUT_CH_)
#define _COMPONENTS_HOMECONFIGURATION___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

  class CIAO_Export HomeConfiguration_out
  {
  public:
    HomeConfiguration_out (HomeConfiguration_ptr &);
    HomeConfiguration_out (HomeConfiguration_var &);
    HomeConfiguration_out (const HomeConfiguration_out &);
    HomeConfiguration_out &operator= (const HomeConfiguration_out &);
    HomeConfiguration_out &operator= (const HomeConfiguration_var &);
    HomeConfiguration_out &operator= (HomeConfiguration_ptr);
    operator HomeConfiguration_ptr &();
    HomeConfiguration_ptr &ptr (void);
    HomeConfiguration_ptr operator-> (void);

  private:
    HomeConfiguration_ptr &ptr_;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_HOMECONFIGURATION_CH_)
#define _COMPONENTS_HOMECONFIGURATION_CH_

  class _TAO_HomeConfiguration_Proxy_Impl;
  class _TAO_HomeConfiguration_Remote_Proxy_Impl;
  class _TAO_HomeConfiguration_Proxy_Broker;
  class _TAO_HomeConfiguration_Remote_Proxy_Broker;

  class CIAO_Export HomeConfiguration
    : public virtual Components::CCMHome
  {
  public:
    typedef HomeConfiguration_ptr _ptr_type;
    typedef HomeConfiguration_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static HomeConfiguration_ptr _duplicate (HomeConfiguration_ptr obj);

    static HomeConfiguration_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static HomeConfiguration_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static HomeConfiguration_ptr _nil (void)
      {
        return (HomeConfiguration_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void set_configurator (
        Components::Configurator_ptr cfg
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void set_configuration_values (
        const Components::ConfigValues & config
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void complete_component_configuration (
        CORBA::Boolean b
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void disable_home_configuration (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_HomeConfiguration_Proxy_Broker *the_TAO_HomeConfiguration_Proxy_Broker_;

  protected:
    HomeConfiguration (int collocated = 0);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_HomeConfiguration_setup_collocation (int collocated);

    HomeConfiguration (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~HomeConfiguration (void);

    friend class _TAO_HomeConfiguration_Remote_Proxy_Impl;
    friend class _TAO_HomeConfiguration_ThruPOA_Proxy_Impl;
    friend class _TAO_HomeConfiguration_Direct_Proxy_Impl;

  private:
    HomeConfiguration (const HomeConfiguration &);
    void operator= (const HomeConfiguration &);
  };

  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.


  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35

  class CIAO_Export _TAO_HomeConfiguration_Proxy_Impl
    : public virtual Components::_TAO_CCMHome_Proxy_Impl
  {
  public:
    virtual ~_TAO_HomeConfiguration_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void set_configurator (
        CORBA_Object *_collocated_tao_target_,
        Components::Configurator_ptr cfg
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void set_configuration_values (
        CORBA_Object *_collocated_tao_target_,
        const Components::ConfigValues & config
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void complete_component_configuration (
        CORBA_Object *_collocated_tao_target_,
        CORBA::Boolean b
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void disable_home_configuration (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

  protected:
    _TAO_HomeConfiguration_Proxy_Impl (void);
  };

  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37

  class CIAO_Export _TAO_HomeConfiguration_Remote_Proxy_Impl
    : public virtual _TAO_HomeConfiguration_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual Components::_TAO_CCMHome_Remote_Proxy_Impl
  {
  public:
    _TAO_HomeConfiguration_Remote_Proxy_Impl (void);

    virtual ~_TAO_HomeConfiguration_Remote_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void set_configurator (
        CORBA_Object *_collocated_tao_target_,
        Components::Configurator_ptr cfg
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void set_configuration_values (
        CORBA_Object *_collocated_tao_target_,
        const Components::ConfigValues & config
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void complete_component_configuration (
        CORBA_Object *_collocated_tao_target_,
        CORBA::Boolean b
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void disable_home_configuration (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };

  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.

  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35

  class CIAO_Export _TAO_HomeConfiguration_Proxy_Broker
  {
  public:
    virtual ~_TAO_HomeConfiguration_Proxy_Broker (void);
    virtual _TAO_HomeConfiguration_Proxy_Impl &select_proxy (
        HomeConfiguration *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;

  protected:
    _TAO_HomeConfiguration_Proxy_Broker (void);

  };

  //
  //              End Base Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40

  class CIAO_Export _TAO_HomeConfiguration_Remote_Proxy_Broker
    : public virtual _TAO_HomeConfiguration_Proxy_Broker
  {
  public:
    _TAO_HomeConfiguration_Remote_Proxy_Broker (void);

    virtual ~_TAO_HomeConfiguration_Remote_Proxy_Broker (void);

    virtual _TAO_HomeConfiguration_Proxy_Impl &select_proxy (
        HomeConfiguration *object
        ACE_ENV_ARG_DECL
      );

  private:
    _TAO_HomeConfiguration_Remote_Proxy_Impl remote_proxy_impl_;

  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_HomeConfiguration_Remote_Proxy_Broker *the_TAO_HomeConfiguration_Remote_Proxy_Broker (void);
  };

  //
  //              End Remote Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_HomeConfiguration;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52

  class ComponentPortDescription;

#if !defined (_COMPONENTS_COMPONENTPORTDESCRIPTION___PTR_CH_)
#define _COMPONENTS_COMPONENTPORTDESCRIPTION___PTR_CH_

  typedef ComponentPortDescription *ComponentPortDescription_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COMPONENTPORTDESCRIPTION___VAR_CH_)
#define _COMPONENTS_COMPONENTPORTDESCRIPTION___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181

  class CIAO_Export ComponentPortDescription_var
  {
  public:
    ComponentPortDescription_var (void);
    ComponentPortDescription_var (ComponentPortDescription*);
    ComponentPortDescription_var (const ComponentPortDescription*); // (TAO extension)
    ComponentPortDescription_var (const ComponentPortDescription_var &);
    ~ComponentPortDescription_var (void);

    ComponentPortDescription_var &operator= (ComponentPortDescription*);
    ComponentPortDescription_var &operator= (const ComponentPortDescription_var &);
    ComponentPortDescription* operator-> (void) const;

    operator const ComponentPortDescription* () const;
    operator ComponentPortDescription* ();
    // in, inout, out, _retn
    ComponentPortDescription* in (void) const;
    ComponentPortDescription*& inout (void);
    ComponentPortDescription*& out (void);
    ComponentPortDescription* _retn (void);
    ComponentPortDescription* ptr (void) const;

    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (ComponentPortDescription *);
    static void tao_remove_ref (ComponentPortDescription *);

  private:
    ComponentPortDescription* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COMPONENTPORTDESCRIPTION___OUT_CH_)
#define _COMPONENTS_COMPONENTPORTDESCRIPTION___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490

  class CIAO_Export ComponentPortDescription_out
  {
  public:
    ComponentPortDescription_out (ComponentPortDescription* &);
    ComponentPortDescription_out (ComponentPortDescription_var &);
    ComponentPortDescription_out (const ComponentPortDescription_out &);
    ComponentPortDescription_out &operator= (const ComponentPortDescription_out &);
    ComponentPortDescription_out &operator= (const ComponentPortDescription_var &);
    ComponentPortDescription_out &operator= (ComponentPortDescription*);
    operator ComponentPortDescription*& ();
    ComponentPortDescription*& ptr (void);
    ComponentPortDescription* operator-> (void);

  private:
    ComponentPortDescription* &ptr_;
  };

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COMPONENTPORTDESCRIPTION_CH_)
#define _COMPONENTS_COMPONENTPORTDESCRIPTION_CH_

  class CIAO_Export ComponentPortDescription
    : public virtual CORBA_ValueBase
  {
  public:
    typedef ComponentPortDescription_var _var_type;
    static ComponentPortDescription* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        ComponentPortDescription *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);

    static void _tao_any_destructor (void *);virtual void facets (const Components::FacetDescriptions &) = 0;
    virtual const Components::FacetDescriptions &facets (void) const = 0;
    virtual Components::FacetDescriptions &facets (void) = 0;virtual void receptacles (const Components::ReceptacleDescriptions &) = 0;
    virtual const Components::ReceptacleDescriptions &receptacles (void) const = 0;
    virtual Components::ReceptacleDescriptions &receptacles (void) = 0;virtual void consumers (const Components::ConsumerDescriptions &) = 0;
    virtual const Components::ConsumerDescriptions &consumers (void) const = 0;
    virtual Components::ConsumerDescriptions &consumers (void) = 0;virtual void emitters (const Components::EmitterDescriptions &) = 0;
    virtual const Components::EmitterDescriptions &emitters (void) const = 0;
    virtual Components::EmitterDescriptions &emitters (void) = 0;virtual void publishers (const Components::PublisherDescriptions &) = 0;
    virtual const Components::PublisherDescriptions &publishers (void) const = 0;
    virtual Components::PublisherDescriptions &publishers (void) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315

  protected:
    ComponentPortDescription (void);
    virtual ~ComponentPortDescription (void);

    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);

  private:
    ComponentPortDescription (const ComponentPortDescription &);
    void operator= (const ComponentPortDescription &);

  protected:
    virtual CORBA::Boolean _tao_marshal__Components_ComponentPortDescription (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_ComponentPortDescription (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_COMPONENTPORTDESCRIPTION___INIT_CH_)
#define _COMPONENTS_COMPONENTPORTDESCRIPTION___INIT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_init_ch.cpp:71

  class CIAO_Export ComponentPortDescription_init : public virtual CORBA_ValueFactoryBase
  {
  public:
    ComponentPortDescription_init (void);
    virtual ~ComponentPortDescription_init (void);

    static ComponentPortDescription_init* _downcast (CORBA_ValueFactoryBase* );

    virtual CORBA::ValueBase *create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ComponentPortDescription;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_COMPONENTS_CCMOBJECT___PTR_CH_)
#define _COMPONENTS_CCMOBJECT___PTR_CH_

  class CCMObject;
  typedef CCMObject *CCMObject_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMOBJECT___VAR_CH_)
#define _COMPONENTS_CCMOBJECT___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

  class CIAO_Export CCMObject_var : public TAO_Base_var
  {
  public:
    CCMObject_var (void); // default constructor
    CCMObject_var (CCMObject_ptr p) : ptr_ (p) {}
    CCMObject_var (const CCMObject_var &); // copy constructor
    ~CCMObject_var (void); // destructor

    CCMObject_var &operator= (CCMObject_ptr);
    CCMObject_var &operator= (const CCMObject_var &);
    CCMObject_ptr operator-> (void) const;

    operator const CCMObject_ptr &() const;
    operator CCMObject_ptr &();
    // in, inout, out, _retn
    CCMObject_ptr in (void) const;
    CCMObject_ptr &inout (void);
    CCMObject_ptr &out (void);
    CCMObject_ptr _retn (void);
    CCMObject_ptr ptr (void) const;

    // Hooks used by template sequence and object manager classes
    // for non-defined forward declared interfaces.
    static CCMObject_ptr tao_duplicate (CCMObject_ptr);
    static void tao_release (CCMObject_ptr);
    static CCMObject_ptr tao_nil (void);
    static CCMObject_ptr tao_narrow (
        CORBA::Object *
        ACE_ENV_ARG_DECL_NOT_USED
      );
    static CORBA::Object * tao_upcast (void *);

  private:
    CCMObject_ptr ptr_;
    // Unimplemented - prevents widening assignment.
    CCMObject_var (const TAO_Base_var &rhs);
    CCMObject_var &operator= (const TAO_Base_var &rhs);
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMOBJECT___OUT_CH_)
#define _COMPONENTS_CCMOBJECT___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

  class CIAO_Export CCMObject_out
  {
  public:
    CCMObject_out (CCMObject_ptr &);
    CCMObject_out (CCMObject_var &);
    CCMObject_out (const CCMObject_out &);
    CCMObject_out &operator= (const CCMObject_out &);
    CCMObject_out &operator= (const CCMObject_var &);
    CCMObject_out &operator= (CCMObject_ptr);
    operator CCMObject_ptr &();
    CCMObject_ptr &ptr (void);
    CCMObject_ptr operator-> (void);

  private:
    CCMObject_ptr &ptr_;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_COMPONENTS_CCMOBJECT_CH_)
#define _COMPONENTS_CCMOBJECT_CH_

  class _TAO_CCMObject_Proxy_Impl;
  class _TAO_CCMObject_Remote_Proxy_Impl;
  class _TAO_CCMObject_Proxy_Broker;
  class _TAO_CCMObject_Remote_Proxy_Broker;

  class CIAO_Export CCMObject
    : public virtual Components::Navigation,
      public virtual Components::Receptacles,
      public virtual Components::Events
  {
  public:
    typedef CCMObject_ptr _ptr_type;
    typedef CCMObject_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static CCMObject_ptr _duplicate (CCMObject_ptr obj);

    static CCMObject_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static CCMObject_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static CCMObject_ptr _nil (void)
      {
        return (CCMObject_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::CORBA::IRObject_ptr get_component_def (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Components::CCMHome_ptr get_ccm_home (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Components::PrimaryKeyBase * get_primary_key (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::NoKeyAvailable
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void configuration_complete (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidConfiguration
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual void remove (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::RemoveFailure
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Components::ComponentPortDescription * get_all_ports (

      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267

    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
  private:
    _TAO_CCMObject_Proxy_Broker *the_TAO_CCMObject_Proxy_Broker_;

  protected:
    CCMObject (int collocated = 0);

    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Components_CCMObject_setup_collocation (int collocated);

    CCMObject (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0
      );
    virtual ~CCMObject (void);

    friend class _TAO_CCMObject_Remote_Proxy_Impl;
    friend class _TAO_CCMObject_ThruPOA_Proxy_Impl;
    friend class _TAO_CCMObject_Direct_Proxy_Impl;

  private:
    CCMObject (const CCMObject &);
    void operator= (const CCMObject &);
  };

  // The Proxy Implementations are used by each interface to
  // perform a call. Each different implementation encapsulates
  // an invocation logic.


  ///////////////////////////////////////////////////////////////////////
  //                    Base Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_impl_ch.cpp:35

  class CIAO_Export _TAO_CCMObject_Proxy_Impl
    : public virtual Components::_TAO_Navigation_Proxy_Impl,
      public virtual Components::_TAO_Receptacles_Proxy_Impl,
      public virtual Components::_TAO_Events_Proxy_Impl
  {
  public:
    virtual ~_TAO_CCMObject_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::CORBA::IRObject_ptr get_component_def (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::Components::CCMHome_ptr get_ccm_home (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::Components::PrimaryKeyBase * get_primary_key (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::NoKeyAvailable
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void configuration_complete (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidConfiguration
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual void remove (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::RemoveFailure
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/base_proxy_impl_ch.cpp:24

    virtual ::Components::ComponentPortDescription * get_all_ports (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

  protected:
    _TAO_CCMObject_Proxy_Impl (void);
  };

  //
  //               End Base Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                Remote Proxy Impl. Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_impl_ch.cpp:37

  class CIAO_Export _TAO_CCMObject_Remote_Proxy_Impl
    : public virtual _TAO_CCMObject_Proxy_Impl,
      public virtual TAO_Remote_Object_Proxy_Impl,
      public virtual Components::_TAO_Navigation_Remote_Proxy_Impl,
      public virtual Components::_TAO_Receptacles_Remote_Proxy_Impl,
      public virtual Components::_TAO_Events_Remote_Proxy_Impl
  {
  public:
    _TAO_CCMObject_Remote_Proxy_Impl (void);

    virtual ~_TAO_CCMObject_Remote_Proxy_Impl (void) {}

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::CORBA::IRObject_ptr get_component_def (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::Components::CCMHome_ptr get_ccm_home (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::Components::PrimaryKeyBase * get_primary_key (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::NoKeyAvailable
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void configuration_complete (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::InvalidConfiguration
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual void remove (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , Components::RemoveFailure
      ));

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/proxy_impl_xh.cpp:24

    virtual ::Components::ComponentPortDescription * get_all_ports (
        CORBA_Object *_collocated_tao_target_
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
  };

  //
  //             End Remote Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  // The Proxy Brokers are used by each interface to get
  // the right proxy for performing a call. In the new
  // collocation scheme, the proxy to be used can vary on
  // a call by call basis.

  ///////////////////////////////////////////////////////////////////////
  //                 Base Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/base_proxy_broker_ch.cpp:35

  class CIAO_Export _TAO_CCMObject_Proxy_Broker
  {
  public:
    virtual ~_TAO_CCMObject_Proxy_Broker (void);
    virtual _TAO_CCMObject_Proxy_Impl &select_proxy (
        CCMObject *object
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      ) = 0;

  protected:
    _TAO_CCMObject_Proxy_Broker (void);

  };

  //
  //              End Base Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////


  ///////////////////////////////////////////////////////////////////////
  //                 Remote Proxy Broker Declaration
  //

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/remote_proxy_broker_ch.cpp:40

  class CIAO_Export _TAO_CCMObject_Remote_Proxy_Broker
    : public virtual _TAO_CCMObject_Proxy_Broker
  {
  public:
    _TAO_CCMObject_Remote_Proxy_Broker (void);

    virtual ~_TAO_CCMObject_Remote_Proxy_Broker (void);

    virtual _TAO_CCMObject_Proxy_Impl &select_proxy (
        CCMObject *object
        ACE_ENV_ARG_DECL
      );

  private:
    _TAO_CCMObject_Remote_Proxy_Impl remote_proxy_impl_;

  public:
    // This member function is used to get an handle to the unique instance
    // of the Remote Proxy Broker that is available for a given
    // interface.
    static _TAO_CCMObject_Remote_Proxy_Broker *the_TAO_CCMObject_Remote_Proxy_Broker (void);
  };

  //
  //              End Remote Proxy Broker Declaration
  ///////////////////////////////////////////////////////////////////////

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CCMObject;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52

  class Enumeration;

#if !defined (_COMPONENTS_ENUMERATION___PTR_CH_)
#define _COMPONENTS_ENUMERATION___PTR_CH_

  typedef Enumeration *Enumeration_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENUMERATION___VAR_CH_)
#define _COMPONENTS_ENUMERATION___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181

  class CIAO_Export Enumeration_var
  {
  public:
    Enumeration_var (void);
    Enumeration_var (Enumeration*);
    Enumeration_var (const Enumeration*); // (TAO extension)
    Enumeration_var (const Enumeration_var &);
    ~Enumeration_var (void);

    Enumeration_var &operator= (Enumeration*);
    Enumeration_var &operator= (const Enumeration_var &);
    Enumeration* operator-> (void) const;

    operator const Enumeration* () const;
    operator Enumeration* ();
    // in, inout, out, _retn
    Enumeration* in (void) const;
    Enumeration*& inout (void);
    Enumeration*& out (void);
    Enumeration* _retn (void);
    Enumeration* ptr (void) const;

    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (Enumeration *);
    static void tao_remove_ref (Enumeration *);

  private:
    Enumeration* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENUMERATION___OUT_CH_)
#define _COMPONENTS_ENUMERATION___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490

  class CIAO_Export Enumeration_out
  {
  public:
    Enumeration_out (Enumeration* &);
    Enumeration_out (Enumeration_var &);
    Enumeration_out (const Enumeration_out &);
    Enumeration_out &operator= (const Enumeration_out &);
    Enumeration_out &operator= (const Enumeration_var &);
    Enumeration_out &operator= (Enumeration*);
    operator Enumeration*& ();
    Enumeration*& ptr (void);
    Enumeration* operator-> (void);

  private:
    Enumeration* &ptr_;
  };

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_ENUMERATION_CH_)
#define _COMPONENTS_ENUMERATION_CH_

  class CIAO_Export Enumeration
    : public virtual CORBA_ValueBase
  {
  public:
    typedef Enumeration_var _var_type;
    static Enumeration* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        Enumeration *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:467

    virtual CORBA::Boolean has_more_elements (

      ) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:467

    virtual ::Components::CCMObject_ptr next_element (

      ) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315

  protected:
    Enumeration (void);
    virtual ~Enumeration (void);

    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);

  private:
    Enumeration (const Enumeration &);
    void operator= (const Enumeration &);

  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Enumeration;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:62

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)

#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_COMPONENTS_CCMOBJECTSEQ_CH_)
#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_COMPONENTS_CCMOBJECTSEQ_CH_

  class CIAO_Export _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq
    : public TAO_Unbounded_Base_Sequence
  {
  public:
    _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq (void);
    _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq (CORBA::ULong maximum);
    _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq (
        CORBA::ULong maximum,
        CORBA::ULong length,
        CCMObject* *value,
        CORBA::Boolean release = 0
      );
    _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq (
        const _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq &rhs
      );
    _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq &operator= (
        const _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq &rhs
      );
    virtual ~_TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq (void);

    // = Accessors.
    TAO_Object_Manager<Components::CCMObject,Components::CCMObject_var> operator[] (CORBA::ULong index) const;

    // = Static operations.
    static CCMObject **allocbuf (CORBA::ULong nelems);
    static void freebuf (CCMObject **buffer);

    // Implement the TAO_Base_Sequence methods (see Sequence.h)
    virtual void _allocate_buffer (CORBA::ULong length);
    virtual void _deallocate_buffer (void);
    CCMObject* *get_buffer (CORBA::Boolean orphan = 0);
    const CCMObject* *get_buffer (void) const;
    virtual void _shrink_buffer (
        CORBA::ULong nl,
        CORBA::ULong ol
      );

    virtual void _downcast (
        void* target,
        CORBA_Object *src
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    virtual CORBA_Object* _upcast (void *src) const;
  };

#endif /* end #if !defined */

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */

#if !defined (_COMPONENTS_CCMOBJECTSEQ_CH_)
#define _COMPONENTS_CCMOBJECTSEQ_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371

  class CCMObjectSeq;
  class CCMObjectSeq_var;

  // *************************************************************
  // Components::CCMObjectSeq
  // *************************************************************

  class CIAO_Export CCMObjectSeq : public

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  _TAO_Unbounded_Object_Sequence_Components_CCMObjectSeq
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Object_Sequence<CCMObject,CCMObject_var>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  {
  public:
    CCMObjectSeq (void);
    CCMObjectSeq (CORBA::ULong max);
    CCMObjectSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        CCMObject_ptr *buffer,
        CORBA::Boolean release = 0
      );
    CCMObjectSeq (const CCMObjectSeq &);
    ~CCMObjectSeq (void);

    static void _tao_any_destructor (void*);

    typedef CCMObjectSeq_var _var_type;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMOBJECTSEQ___VAR_CH_)
#define _COMPONENTS_CCMOBJECTSEQ___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549

  // *************************************************************
  // class Components::CCMObjectSeq_var
  // *************************************************************

  class CIAO_Export CCMObjectSeq_var
  {
  public:
    CCMObjectSeq_var (void);
    CCMObjectSeq_var (CCMObjectSeq *);
    CCMObjectSeq_var (const CCMObjectSeq_var &);
    ~CCMObjectSeq_var (void);

    CCMObjectSeq_var &operator= (CCMObjectSeq *);
    CCMObjectSeq_var &operator= (const CCMObjectSeq_var &);
    CCMObjectSeq *operator-> (void);
    const CCMObjectSeq *operator-> (void) const;

    operator const CCMObjectSeq &() const;
    operator CCMObjectSeq &();
    operator CCMObjectSeq &() const;

    // Variable-size base types only.
    operator CCMObjectSeq *&();

    TAO_Object_Manager<CCMObject, CCMObject_var> operator[] (CORBA::ULong index);

    // in, inout, out, _retn
    const CCMObjectSeq &in (void) const;
    CCMObjectSeq &inout (void);
    CCMObjectSeq *&out (void);
    CCMObjectSeq *_retn (void);
    CCMObjectSeq *ptr (void) const;

  private:
    CCMObjectSeq *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_CCMOBJECTSEQ___OUT_CH_)
#define _COMPONENTS_CCMOBJECTSEQ___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753

  class CIAO_Export CCMObjectSeq_out
  {
  public:
    CCMObjectSeq_out (CCMObjectSeq *&);
    CCMObjectSeq_out (CCMObjectSeq_var &);
    CCMObjectSeq_out (const CCMObjectSeq_out &);
    CCMObjectSeq_out &operator= (const CCMObjectSeq_out &);
    CCMObjectSeq_out &operator= (CCMObjectSeq *);
    operator CCMObjectSeq *&();
    CCMObjectSeq *&ptr (void);
    CCMObjectSeq *operator-> (void);
    TAO_Object_Manager<CCMObject, CCMObject_var> operator[] (CORBA::ULong index);

  private:
    CCMObjectSeq *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const CCMObjectSeq_var &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CCMObjectSeq;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:52

  class DefaultEnumeration;

#if !defined (_COMPONENTS_DEFAULTENUMERATION___PTR_CH_)
#define _COMPONENTS_DEFAULTENUMERATION___PTR_CH_

  typedef DefaultEnumeration *DefaultEnumeration_ptr;

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEFAULTENUMERATION___VAR_CH_)
#define _COMPONENTS_DEFAULTENUMERATION___VAR_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:181

  class CIAO_Export DefaultEnumeration_var
  {
  public:
    DefaultEnumeration_var (void);
    DefaultEnumeration_var (DefaultEnumeration*);
    DefaultEnumeration_var (const DefaultEnumeration*); // (TAO extension)
    DefaultEnumeration_var (const DefaultEnumeration_var &);
    ~DefaultEnumeration_var (void);

    DefaultEnumeration_var &operator= (DefaultEnumeration*);
    DefaultEnumeration_var &operator= (const DefaultEnumeration_var &);
    DefaultEnumeration* operator-> (void) const;

    operator const DefaultEnumeration* () const;
    operator DefaultEnumeration* ();
    // in, inout, out, _retn
    DefaultEnumeration* in (void) const;
    DefaultEnumeration*& inout (void);
    DefaultEnumeration*& out (void);
    DefaultEnumeration* _retn (void);
    DefaultEnumeration* ptr (void) const;

    // Hooks used by template sequence and valuetype manager classes
    // for non-defined forward declared valuetypes.
    static void tao_add_ref (DefaultEnumeration *);
    static void tao_remove_ref (DefaultEnumeration *);

  private:
    DefaultEnumeration* ptr_;
  };

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEFAULTENUMERATION___OUT_CH_)
#define _COMPONENTS_DEFAULTENUMERATION___OUT_CH_

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:490

  class CIAO_Export DefaultEnumeration_out
  {
  public:
    DefaultEnumeration_out (DefaultEnumeration* &);
    DefaultEnumeration_out (DefaultEnumeration_var &);
    DefaultEnumeration_out (const DefaultEnumeration_out &);
    DefaultEnumeration_out &operator= (const DefaultEnumeration_out &);
    DefaultEnumeration_out &operator= (const DefaultEnumeration_var &);
    DefaultEnumeration_out &operator= (DefaultEnumeration*);
    operator DefaultEnumeration*& ();
    DefaultEnumeration*& ptr (void);
    DefaultEnumeration* operator-> (void);

  private:
    DefaultEnumeration* &ptr_;
  };

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:96

#endif /* end #if !defined */

#if !defined (_COMPONENTS_DEFAULTENUMERATION_CH_)
#define _COMPONENTS_DEFAULTENUMERATION_CH_

  class CIAO_Export DefaultEnumeration
    : public virtual Enumeration
  {
  public:
    typedef DefaultEnumeration_var _var_type;
    static DefaultEnumeration* _downcast (CORBA::ValueBase* );
    // The address of static _downcast is implicit used as type id

    // (TAO extensions or internals)
    static CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &,
        DefaultEnumeration *&
      );
    virtual const char* _tao_obv_repository_id (void) const;
    static const char* _tao_obv_static_repository_id (void);

    static void _tao_any_destructor (void *);

  protected:virtual void objects (const Components::CCMObjectSeq &) = 0;
    virtual const Components::CCMObjectSeq &objects (void) const = 0;
    virtual Components::CCMObjectSeq &objects (void) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_ch.cpp:315

  protected:
    DefaultEnumeration (void);
    virtual ~DefaultEnumeration (void);

    // TAO internals
    virtual void *_tao_obv_narrow (ptr_arith_t);
    virtual CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);

  private:
    DefaultEnumeration (const DefaultEnumeration &);
    void operator= (const DefaultEnumeration &);

  protected:
    virtual CORBA::Boolean _tao_marshal__Components_DefaultEnumeration (TAO_OutputCDR &) = 0;
    virtual CORBA::Boolean _tao_unmarshal__Components_DefaultEnumeration (TAO_InputCDR &) = 0;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_DefaultEnumeration;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67

}
TAO_NAMESPACE_CLOSE // module Components

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/root.cpp:80

extern CIAO_Export
Components::_TAO_CCMHome_Proxy_Broker *
(*Components__TAO_CCMHome_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::_TAO_KeylessCCMHome_Proxy_Broker *
(*Components__TAO_KeylessCCMHome_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::_TAO_HomeFinder_Proxy_Broker *
(*Components__TAO_HomeFinder_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::_TAO_Configurator_Proxy_Broker *
(*Components__TAO_Configurator_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::_TAO_StandardConfigurator_Proxy_Broker *
(*Components__TAO_StandardConfigurator_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::_TAO_HomeConfiguration_Proxy_Broker *
(*Components__TAO_HomeConfiguration_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern CIAO_Export
Components::_TAO_CCMObject_Proxy_Broker *
(*Components__TAO_CCMObject_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/obv_module.cpp:55

TAO_NAMESPACE  OBV_Components
{

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_CONFIGVALUE___OBV_CH_)
#define _COMPONENTS_CONFIGVALUE___OBV_CH_

  // OBV_ class
  class CIAO_Export ConfigValue
    : public virtual Components::ConfigValue,
      public virtual CORBA_DefaultValueRefCountBase
  {
  public:

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:542

    virtual void name (char *);
    virtual void name (const char *);
    virtual void name (const CORBA::String_var&);
    virtual const char *name (void) const;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/field_ch.cpp:411

    virtual void value (CORBA::Any &);
    virtual const CORBA::Any &value (void) const;virtual CORBA::Any &value (void);



  protected:
    virtual CORBA::Boolean _tao_marshal__Components_ConfigValue (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_ConfigValue (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);

  private:
    TAO_String_Manager _pd_name;
    CORBA::Any _pd_value;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_COMPONENTPORTDESCRIPTION___OBV_CH_)
#define _COMPONENTS_COMPONENTPORTDESCRIPTION___OBV_CH_

  // OBV_ class
  class CIAO_Export ComponentPortDescription
    : public virtual Components::ComponentPortDescription,
      public virtual CORBA_DefaultValueRefCountBase
  {
  public:virtual void facets (const Components::FacetDescriptions &);
    virtual const Components::FacetDescriptions &facets (void) const;
    virtual Components::FacetDescriptions &facets (void);virtual void receptacles (const Components::ReceptacleDescriptions &);
    virtual const Components::ReceptacleDescriptions &receptacles (void) const;
    virtual Components::ReceptacleDescriptions &receptacles (void);virtual void consumers (const Components::ConsumerDescriptions &);
    virtual const Components::ConsumerDescriptions &consumers (void) const;
    virtual Components::ConsumerDescriptions &consumers (void);virtual void emitters (const Components::EmitterDescriptions &);
    virtual const Components::EmitterDescriptions &emitters (void) const;
    virtual Components::EmitterDescriptions &emitters (void);virtual void publishers (const Components::PublisherDescriptions &);
    virtual const Components::PublisherDescriptions &publishers (void) const;
    virtual Components::PublisherDescriptions &publishers (void);

  protected:
    virtual CORBA::Boolean _tao_marshal__Components_ComponentPortDescription (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_ComponentPortDescription (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);

  private:
    Components::FacetDescriptions _pd_facets;
    Components::ReceptacleDescriptions _pd_receptacles;
    Components::ConsumerDescriptions _pd_consumers;
    Components::EmitterDescriptions _pd_emitters;
    Components::PublisherDescriptions _pd_publishers;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_COMPONENTS_DEFAULTENUMERATION___OBV_CH_)
#define _COMPONENTS_DEFAULTENUMERATION___OBV_CH_

  // OBV_ class
  class CIAO_Export DefaultEnumeration
    : public virtual Components::DefaultEnumeration
  {
  public:

  protected:virtual void objects (const Components::CCMObjectSeq &);
    virtual const Components::CCMObjectSeq &objects (void) const;
    virtual Components::CCMObjectSeq &objects (void);

  protected:
    virtual CORBA::Boolean _tao_marshal__Components_DefaultEnumeration (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_unmarshal__Components_DefaultEnumeration (TAO_InputCDR &);
    CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &);
    CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &);

  private:
    Components::CCMObjectSeq _pd_objects;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/obv_module.cpp:85

}TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::PrimaryKeyBase *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::PrimaryKeyBase **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::PrimaryKeyBase *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::CCMHome_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::CCMHome_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CCMHome_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::CCMHomes &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::CCMHomes*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CCMHomes *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::CCMHomes *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::KeylessCCMHome_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::KeylessCCMHome_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::KeylessCCMHome_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::HomeFinder_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::HomeFinder_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::HomeFinder_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::Configurator_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Configurator_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Configurator_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::ConfigValue *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::ConfigValue **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ConfigValue *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::ConfigValues &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::ConfigValues*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ConfigValues *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::ConfigValues *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::StandardConfigurator_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::StandardConfigurator_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::StandardConfigurator_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::HomeConfiguration_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::HomeConfiguration_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::HomeConfiguration_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::ComponentPortDescription *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::ComponentPortDescription **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::ComponentPortDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, Components::CCMObject_ptr); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::CCMObject_ptr *); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CCMObject_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::Enumeration *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::Enumeration **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::Enumeration *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

CIAO_Export void operator<<= (CORBA::Any &, const Components::CCMObjectSeq &); // copying version
CIAO_Export void operator<<= (CORBA::Any &, Components::CCMObjectSeq*); // noncopying version
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::CCMObjectSeq *&); // deprecated
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Components::CCMObjectSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/any_op_ch.cpp:54

CIAO_Export void operator<<= (CORBA::Any &, Components::DefaultEnumeration *); // copying
CIAO_Export void operator<<= (CORBA::Any &, Components::DefaultEnumeration **); // non-copying
CIAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, Components::DefaultEnumeration *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::PrimaryKeyBase *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::PrimaryKeyBase *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::PrimaryKeyBase *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::PrimaryKeyBase *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::CCMHome_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::CCMHome_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_CCMHomes_H_
#define _TAO_CDR_OP_Components_CCMHomes_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::CCMHomes &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::CCMHomes &
  );

#endif /* _TAO_CDR_OP_Components_CCMHomes_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::KeylessCCMHome_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::KeylessCCMHome_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::HomeFinder_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::HomeFinder_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Configurator_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Configurator_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::ConfigValue *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::ConfigValue *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::ConfigValue *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::ConfigValue *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_ConfigValues_H_
#define _TAO_CDR_OP_Components_ConfigValues_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::ConfigValues &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::ConfigValues &
  );

#endif /* _TAO_CDR_OP_Components_ConfigValues_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::StandardConfigurator_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::StandardConfigurator_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::HomeConfiguration_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::HomeConfiguration_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::ComponentPortDescription *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::ComponentPortDescription *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::ComponentPortDescription *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::ComponentPortDescription *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/cdr_op_ch.cpp:55

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::CCMObject_ptr );
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::CCMObject_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::Enumeration *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::Enumeration *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::Enumeration *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::Enumeration *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_Components_CCMObjectSeq_H_
#define _TAO_CDR_OP_Components_CCMObjectSeq_H_

CIAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Components::CCMObjectSeq &
  );
CIAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Components::CCMObjectSeq &
  );

#endif /* _TAO_CDR_OP_Components_CCMObjectSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_valuetype.cpp:682

TAO_NAMESPACE CORBA
{
  TAO_NAMESPACE_STORAGE_CLASS void add_ref (Components::DefaultEnumeration *);
  TAO_NAMESPACE_STORAGE_CLASS void remove_ref (Components::DefaultEnumeration *);
}
TAO_NAMESPACE_CLOSE

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_valuetype/cdr_op_ch.cpp:61

CIAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Components::DefaultEnumeration *);
CIAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, Components::DefaultEnumeration *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1007

#if defined (__ACE_INLINE__)
#include "CIAO_ComponentC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */
