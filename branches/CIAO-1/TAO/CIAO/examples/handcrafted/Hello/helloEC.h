// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_HELLOEC_H_
#define _TAO_IDL_HELLOEC_H_

#include "ace/pre.h"

#include "tao/corba.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "hello_executors_export.h"

#include "ciao/CIAO_ContainerC.h"
#include "HelloC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO HELLO_EXECUTOR_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO HELLO_EXECUTOR_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_CCM_HELLO___PTR_CH_)
#define _CCM_HELLO___PTR_CH_

class CCM_Hello;
typedef CCM_Hello *CCM_Hello_ptr;

#endif /* end #if !defined */

#if !defined (_CCM_HELLO___VAR_CH_)
#define _CCM_HELLO___VAR_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

class HELLO_EXECUTOR_Export CCM_Hello_var : public TAO_Base_var
{
public:
  CCM_Hello_var (void); // default constructor
  CCM_Hello_var (CCM_Hello_ptr p) : ptr_ (p) {} 
  CCM_Hello_var (const CCM_Hello_var &); // copy constructor
  ~CCM_Hello_var (void); // destructor
  
  CCM_Hello_var &operator= (CCM_Hello_ptr);
  CCM_Hello_var &operator= (const CCM_Hello_var &);
  CCM_Hello_ptr operator-> (void) const;
  
  operator const CCM_Hello_ptr &() const;
  operator CCM_Hello_ptr &();
  // in, inout, out, _retn 
  CCM_Hello_ptr in (void) const;
  CCM_Hello_ptr &inout (void);
  CCM_Hello_ptr &out (void);
  CCM_Hello_ptr _retn (void);
  CCM_Hello_ptr ptr (void) const;
  
  // Hooks used by template sequence and object manager classes
  // for non-defined forward declared interfaces.
  static CCM_Hello_ptr tao_duplicate (CCM_Hello_ptr);
  static void tao_release (CCM_Hello_ptr);
  static CCM_Hello_ptr tao_nil (void);
  static CCM_Hello_ptr tao_narrow (
      CORBA::Object *
      ACE_ENV_ARG_DECL_NOT_USED
    );
  static CORBA::Object * tao_upcast (void *);

private:
  CCM_Hello_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  CCM_Hello_var (const TAO_Base_var &rhs);
  CCM_Hello_var &operator= (const TAO_Base_var &rhs);
};

#endif /* end #if !defined */

#if !defined (_CCM_HELLO___OUT_CH_)
#define _CCM_HELLO___OUT_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

class HELLO_EXECUTOR_Export CCM_Hello_out
{
public:
  CCM_Hello_out (CCM_Hello_ptr &);
  CCM_Hello_out (CCM_Hello_var &);
  CCM_Hello_out (const CCM_Hello_out &);
  CCM_Hello_out &operator= (const CCM_Hello_out &);
  CCM_Hello_out &operator= (const CCM_Hello_var &);
  CCM_Hello_out &operator= (CCM_Hello_ptr);
  operator CCM_Hello_ptr &();
  CCM_Hello_ptr &ptr (void);
  CCM_Hello_ptr operator-> (void);

private:
  CCM_Hello_ptr &ptr_;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_CCM_HELLO_CH_)
#define _CCM_HELLO_CH_

class HELLO_EXECUTOR_Export CCM_Hello
  : public virtual Hello
{
public:
  typedef CCM_Hello_ptr _ptr_type;
  typedef CCM_Hello_var _var_type;
  static int _tao_class_id;
  
  // The static operations.
  static CCM_Hello_ptr _duplicate (CCM_Hello_ptr obj);
  
  static CCM_Hello_ptr _narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_Hello_ptr _unchecked_narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_Hello_ptr _nil (void)
    {
      return (CCM_Hello_ptr)0;
    }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
  
  virtual void *_tao_QueryInterface (ptr_arith_t type);
  
  virtual const char* _interface_repository_id (void) const;

protected:
  CCM_Hello (void);
  virtual ~CCM_Hello (void);
  
  friend class _TAO_CCM_Hello_Remote_Proxy_Impl;
  friend class _TAO_CCM_Hello_ThruPOA_Proxy_Impl;
  friend class _TAO_CCM_Hello_Direct_Proxy_Impl;

private:
  CCM_Hello (const CCM_Hello &);
  void operator= (const CCM_Hello &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

extern HELLO_EXECUTOR_Export ::CORBA::TypeCode_ptr  _tc_CCM_Hello;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_CCM_HELLOWORLD_EXECUTOR___PTR_CH_)
#define _CCM_HELLOWORLD_EXECUTOR___PTR_CH_

class CCM_HelloWorld_Executor;
typedef CCM_HelloWorld_Executor *CCM_HelloWorld_Executor_ptr;

#endif /* end #if !defined */

#if !defined (_CCM_HELLOWORLD_EXECUTOR___VAR_CH_)
#define _CCM_HELLOWORLD_EXECUTOR___VAR_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

class HELLO_EXECUTOR_Export CCM_HelloWorld_Executor_var : public TAO_Base_var
{
public:
  CCM_HelloWorld_Executor_var (void); // default constructor
  CCM_HelloWorld_Executor_var (CCM_HelloWorld_Executor_ptr p) : ptr_ (p) {} 
  CCM_HelloWorld_Executor_var (const CCM_HelloWorld_Executor_var &); // copy constructor
  ~CCM_HelloWorld_Executor_var (void); // destructor
  
  CCM_HelloWorld_Executor_var &operator= (CCM_HelloWorld_Executor_ptr);
  CCM_HelloWorld_Executor_var &operator= (const CCM_HelloWorld_Executor_var &);
  CCM_HelloWorld_Executor_ptr operator-> (void) const;
  
  operator const CCM_HelloWorld_Executor_ptr &() const;
  operator CCM_HelloWorld_Executor_ptr &();
  // in, inout, out, _retn 
  CCM_HelloWorld_Executor_ptr in (void) const;
  CCM_HelloWorld_Executor_ptr &inout (void);
  CCM_HelloWorld_Executor_ptr &out (void);
  CCM_HelloWorld_Executor_ptr _retn (void);
  CCM_HelloWorld_Executor_ptr ptr (void) const;
  
  // Hooks used by template sequence and object manager classes
  // for non-defined forward declared interfaces.
  static CCM_HelloWorld_Executor_ptr tao_duplicate (CCM_HelloWorld_Executor_ptr);
  static void tao_release (CCM_HelloWorld_Executor_ptr);
  static CCM_HelloWorld_Executor_ptr tao_nil (void);
  static CCM_HelloWorld_Executor_ptr tao_narrow (
      CORBA::Object *
      ACE_ENV_ARG_DECL_NOT_USED
    );
  static CORBA::Object * tao_upcast (void *);

private:
  CCM_HelloWorld_Executor_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  CCM_HelloWorld_Executor_var (const TAO_Base_var &rhs);
  CCM_HelloWorld_Executor_var &operator= (const TAO_Base_var &rhs);
};

#endif /* end #if !defined */

#if !defined (_CCM_HELLOWORLD_EXECUTOR___OUT_CH_)
#define _CCM_HELLOWORLD_EXECUTOR___OUT_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

class HELLO_EXECUTOR_Export CCM_HelloWorld_Executor_out
{
public:
  CCM_HelloWorld_Executor_out (CCM_HelloWorld_Executor_ptr &);
  CCM_HelloWorld_Executor_out (CCM_HelloWorld_Executor_var &);
  CCM_HelloWorld_Executor_out (const CCM_HelloWorld_Executor_out &);
  CCM_HelloWorld_Executor_out &operator= (const CCM_HelloWorld_Executor_out &);
  CCM_HelloWorld_Executor_out &operator= (const CCM_HelloWorld_Executor_var &);
  CCM_HelloWorld_Executor_out &operator= (CCM_HelloWorld_Executor_ptr);
  operator CCM_HelloWorld_Executor_ptr &();
  CCM_HelloWorld_Executor_ptr &ptr (void);
  CCM_HelloWorld_Executor_ptr operator-> (void);

private:
  CCM_HelloWorld_Executor_ptr &ptr_;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_CCM_HELLOWORLD_EXECUTOR_CH_)
#define _CCM_HELLOWORLD_EXECUTOR_CH_

class HELLO_EXECUTOR_Export CCM_HelloWorld_Executor
  : public virtual Components::EnterpriseComponent,
    public virtual Hello
{
public:
  typedef CCM_HelloWorld_Executor_ptr _ptr_type;
  typedef CCM_HelloWorld_Executor_var _var_type;
  static int _tao_class_id;
  
  // The static operations.
  static CCM_HelloWorld_Executor_ptr _duplicate (CCM_HelloWorld_Executor_ptr obj);
  
  static CCM_HelloWorld_Executor_ptr _narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloWorld_Executor_ptr _unchecked_narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloWorld_Executor_ptr _nil (void)
    {
      return (CCM_HelloWorld_Executor_ptr)0;
    }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
  
  virtual void *_tao_QueryInterface (ptr_arith_t type);
  
  virtual const char* _interface_repository_id (void) const;

protected:
  CCM_HelloWorld_Executor (void);
  virtual ~CCM_HelloWorld_Executor (void);
  
  friend class _TAO_CCM_HelloWorld_Executor_Remote_Proxy_Impl;
  friend class _TAO_CCM_HelloWorld_Executor_ThruPOA_Proxy_Impl;
  friend class _TAO_CCM_HelloWorld_Executor_Direct_Proxy_Impl;

private:
  CCM_HelloWorld_Executor (const CCM_HelloWorld_Executor &);
  void operator= (const CCM_HelloWorld_Executor &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

extern HELLO_EXECUTOR_Export ::CORBA::TypeCode_ptr  _tc_CCM_HelloWorld_Executor;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_CCM_HELLOWORLD___PTR_CH_)
#define _CCM_HELLOWORLD___PTR_CH_

class CCM_HelloWorld;
typedef CCM_HelloWorld *CCM_HelloWorld_ptr;

#endif /* end #if !defined */

#if !defined (_CCM_HELLOWORLD___VAR_CH_)
#define _CCM_HELLOWORLD___VAR_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

class HELLO_EXECUTOR_Export CCM_HelloWorld_var : public TAO_Base_var
{
public:
  CCM_HelloWorld_var (void); // default constructor
  CCM_HelloWorld_var (CCM_HelloWorld_ptr p) : ptr_ (p) {} 
  CCM_HelloWorld_var (const CCM_HelloWorld_var &); // copy constructor
  ~CCM_HelloWorld_var (void); // destructor
  
  CCM_HelloWorld_var &operator= (CCM_HelloWorld_ptr);
  CCM_HelloWorld_var &operator= (const CCM_HelloWorld_var &);
  CCM_HelloWorld_ptr operator-> (void) const;
  
  operator const CCM_HelloWorld_ptr &() const;
  operator CCM_HelloWorld_ptr &();
  // in, inout, out, _retn 
  CCM_HelloWorld_ptr in (void) const;
  CCM_HelloWorld_ptr &inout (void);
  CCM_HelloWorld_ptr &out (void);
  CCM_HelloWorld_ptr _retn (void);
  CCM_HelloWorld_ptr ptr (void) const;
  
  // Hooks used by template sequence and object manager classes
  // for non-defined forward declared interfaces.
  static CCM_HelloWorld_ptr tao_duplicate (CCM_HelloWorld_ptr);
  static void tao_release (CCM_HelloWorld_ptr);
  static CCM_HelloWorld_ptr tao_nil (void);
  static CCM_HelloWorld_ptr tao_narrow (
      CORBA::Object *
      ACE_ENV_ARG_DECL_NOT_USED
    );
  static CORBA::Object * tao_upcast (void *);

private:
  CCM_HelloWorld_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  CCM_HelloWorld_var (const TAO_Base_var &rhs);
  CCM_HelloWorld_var &operator= (const TAO_Base_var &rhs);
};

#endif /* end #if !defined */

#if !defined (_CCM_HELLOWORLD___OUT_CH_)
#define _CCM_HELLOWORLD___OUT_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

class HELLO_EXECUTOR_Export CCM_HelloWorld_out
{
public:
  CCM_HelloWorld_out (CCM_HelloWorld_ptr &);
  CCM_HelloWorld_out (CCM_HelloWorld_var &);
  CCM_HelloWorld_out (const CCM_HelloWorld_out &);
  CCM_HelloWorld_out &operator= (const CCM_HelloWorld_out &);
  CCM_HelloWorld_out &operator= (const CCM_HelloWorld_var &);
  CCM_HelloWorld_out &operator= (CCM_HelloWorld_ptr);
  operator CCM_HelloWorld_ptr &();
  CCM_HelloWorld_ptr &ptr (void);
  CCM_HelloWorld_ptr operator-> (void);

private:
  CCM_HelloWorld_ptr &ptr_;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_CCM_HELLOWORLD_CH_)
#define _CCM_HELLOWORLD_CH_

class HELLO_EXECUTOR_Export CCM_HelloWorld
  : public virtual CCM_HelloWorld_Executor
{
public:
  typedef CCM_HelloWorld_ptr _ptr_type;
  typedef CCM_HelloWorld_var _var_type;
  static int _tao_class_id;
  
  // The static operations.
  static CCM_HelloWorld_ptr _duplicate (CCM_HelloWorld_ptr obj);
  
  static CCM_HelloWorld_ptr _narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloWorld_ptr _unchecked_narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloWorld_ptr _nil (void)
    {
      return (CCM_HelloWorld_ptr)0;
    }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
  
  virtual void *_tao_QueryInterface (ptr_arith_t type);
  
  virtual const char* _interface_repository_id (void) const;

protected:
  CCM_HelloWorld (void);
  virtual ~CCM_HelloWorld (void);
  
  friend class _TAO_CCM_HelloWorld_Remote_Proxy_Impl;
  friend class _TAO_CCM_HelloWorld_ThruPOA_Proxy_Impl;
  friend class _TAO_CCM_HelloWorld_Direct_Proxy_Impl;

private:
  CCM_HelloWorld (const CCM_HelloWorld &);
  void operator= (const CCM_HelloWorld &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

extern HELLO_EXECUTOR_Export ::CORBA::TypeCode_ptr  _tc_CCM_HelloWorld;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_CCM_HELLOWORLD_CONTEXT___PTR_CH_)
#define _CCM_HELLOWORLD_CONTEXT___PTR_CH_

class CCM_HelloWorld_Context;
typedef CCM_HelloWorld_Context *CCM_HelloWorld_Context_ptr;

#endif /* end #if !defined */

#if !defined (_CCM_HELLOWORLD_CONTEXT___VAR_CH_)
#define _CCM_HELLOWORLD_CONTEXT___VAR_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

class HELLO_EXECUTOR_Export CCM_HelloWorld_Context_var : public TAO_Base_var
{
public:
  CCM_HelloWorld_Context_var (void); // default constructor
  CCM_HelloWorld_Context_var (CCM_HelloWorld_Context_ptr p) : ptr_ (p) {} 
  CCM_HelloWorld_Context_var (const CCM_HelloWorld_Context_var &); // copy constructor
  ~CCM_HelloWorld_Context_var (void); // destructor
  
  CCM_HelloWorld_Context_var &operator= (CCM_HelloWorld_Context_ptr);
  CCM_HelloWorld_Context_var &operator= (const CCM_HelloWorld_Context_var &);
  CCM_HelloWorld_Context_ptr operator-> (void) const;
  
  operator const CCM_HelloWorld_Context_ptr &() const;
  operator CCM_HelloWorld_Context_ptr &();
  // in, inout, out, _retn 
  CCM_HelloWorld_Context_ptr in (void) const;
  CCM_HelloWorld_Context_ptr &inout (void);
  CCM_HelloWorld_Context_ptr &out (void);
  CCM_HelloWorld_Context_ptr _retn (void);
  CCM_HelloWorld_Context_ptr ptr (void) const;
  
  // Hooks used by template sequence and object manager classes
  // for non-defined forward declared interfaces.
  static CCM_HelloWorld_Context_ptr tao_duplicate (CCM_HelloWorld_Context_ptr);
  static void tao_release (CCM_HelloWorld_Context_ptr);
  static CCM_HelloWorld_Context_ptr tao_nil (void);
  static CCM_HelloWorld_Context_ptr tao_narrow (
      CORBA::Object *
      ACE_ENV_ARG_DECL_NOT_USED
    );
  static CORBA::Object * tao_upcast (void *);

private:
  CCM_HelloWorld_Context_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  CCM_HelloWorld_Context_var (const TAO_Base_var &rhs);
  CCM_HelloWorld_Context_var &operator= (const TAO_Base_var &rhs);
};

#endif /* end #if !defined */

#if !defined (_CCM_HELLOWORLD_CONTEXT___OUT_CH_)
#define _CCM_HELLOWORLD_CONTEXT___OUT_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

class HELLO_EXECUTOR_Export CCM_HelloWorld_Context_out
{
public:
  CCM_HelloWorld_Context_out (CCM_HelloWorld_Context_ptr &);
  CCM_HelloWorld_Context_out (CCM_HelloWorld_Context_var &);
  CCM_HelloWorld_Context_out (const CCM_HelloWorld_Context_out &);
  CCM_HelloWorld_Context_out &operator= (const CCM_HelloWorld_Context_out &);
  CCM_HelloWorld_Context_out &operator= (const CCM_HelloWorld_Context_var &);
  CCM_HelloWorld_Context_out &operator= (CCM_HelloWorld_Context_ptr);
  operator CCM_HelloWorld_Context_ptr &();
  CCM_HelloWorld_Context_ptr &ptr (void);
  CCM_HelloWorld_Context_ptr operator-> (void);

private:
  CCM_HelloWorld_Context_ptr &ptr_;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_CCM_HELLOWORLD_CONTEXT_CH_)
#define _CCM_HELLOWORLD_CONTEXT_CH_

class HELLO_EXECUTOR_Export CCM_HelloWorld_Context
  : public virtual Components::CCMContext
{
public:
  typedef CCM_HelloWorld_Context_ptr _ptr_type;
  typedef CCM_HelloWorld_Context_var _var_type;
  static int _tao_class_id;
  
  // The static operations.
  static CCM_HelloWorld_Context_ptr _duplicate (CCM_HelloWorld_Context_ptr obj);
  
  static CCM_HelloWorld_Context_ptr _narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloWorld_Context_ptr _unchecked_narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloWorld_Context_ptr _nil (void)
    {
      return (CCM_HelloWorld_Context_ptr)0;
    }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
  
  virtual void *_tao_QueryInterface (ptr_arith_t type);
  
  virtual const char* _interface_repository_id (void) const;

protected:
  CCM_HelloWorld_Context (void);
  virtual ~CCM_HelloWorld_Context (void);
  
  friend class _TAO_CCM_HelloWorld_Context_Remote_Proxy_Impl;
  friend class _TAO_CCM_HelloWorld_Context_ThruPOA_Proxy_Impl;
  friend class _TAO_CCM_HelloWorld_Context_Direct_Proxy_Impl;

private:
  CCM_HelloWorld_Context (const CCM_HelloWorld_Context &);
  void operator= (const CCM_HelloWorld_Context &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

extern HELLO_EXECUTOR_Export ::CORBA::TypeCode_ptr  _tc_CCM_HelloWorld_Context;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_CCM_HELLOHOMEIMPLICIT___PTR_CH_)
#define _CCM_HELLOHOMEIMPLICIT___PTR_CH_

class CCM_HelloHomeImplicit;
typedef CCM_HelloHomeImplicit *CCM_HelloHomeImplicit_ptr;

#endif /* end #if !defined */

#if !defined (_CCM_HELLOHOMEIMPLICIT___VAR_CH_)
#define _CCM_HELLOHOMEIMPLICIT___VAR_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

class HELLO_EXECUTOR_Export CCM_HelloHomeImplicit_var : public TAO_Base_var
{
public:
  CCM_HelloHomeImplicit_var (void); // default constructor
  CCM_HelloHomeImplicit_var (CCM_HelloHomeImplicit_ptr p) : ptr_ (p) {} 
  CCM_HelloHomeImplicit_var (const CCM_HelloHomeImplicit_var &); // copy constructor
  ~CCM_HelloHomeImplicit_var (void); // destructor
  
  CCM_HelloHomeImplicit_var &operator= (CCM_HelloHomeImplicit_ptr);
  CCM_HelloHomeImplicit_var &operator= (const CCM_HelloHomeImplicit_var &);
  CCM_HelloHomeImplicit_ptr operator-> (void) const;
  
  operator const CCM_HelloHomeImplicit_ptr &() const;
  operator CCM_HelloHomeImplicit_ptr &();
  // in, inout, out, _retn 
  CCM_HelloHomeImplicit_ptr in (void) const;
  CCM_HelloHomeImplicit_ptr &inout (void);
  CCM_HelloHomeImplicit_ptr &out (void);
  CCM_HelloHomeImplicit_ptr _retn (void);
  CCM_HelloHomeImplicit_ptr ptr (void) const;
  
  // Hooks used by template sequence and object manager classes
  // for non-defined forward declared interfaces.
  static CCM_HelloHomeImplicit_ptr tao_duplicate (CCM_HelloHomeImplicit_ptr);
  static void tao_release (CCM_HelloHomeImplicit_ptr);
  static CCM_HelloHomeImplicit_ptr tao_nil (void);
  static CCM_HelloHomeImplicit_ptr tao_narrow (
      CORBA::Object *
      ACE_ENV_ARG_DECL_NOT_USED
    );
  static CORBA::Object * tao_upcast (void *);

private:
  CCM_HelloHomeImplicit_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  CCM_HelloHomeImplicit_var (const TAO_Base_var &rhs);
  CCM_HelloHomeImplicit_var &operator= (const TAO_Base_var &rhs);
};

#endif /* end #if !defined */

#if !defined (_CCM_HELLOHOMEIMPLICIT___OUT_CH_)
#define _CCM_HELLOHOMEIMPLICIT___OUT_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

class HELLO_EXECUTOR_Export CCM_HelloHomeImplicit_out
{
public:
  CCM_HelloHomeImplicit_out (CCM_HelloHomeImplicit_ptr &);
  CCM_HelloHomeImplicit_out (CCM_HelloHomeImplicit_var &);
  CCM_HelloHomeImplicit_out (const CCM_HelloHomeImplicit_out &);
  CCM_HelloHomeImplicit_out &operator= (const CCM_HelloHomeImplicit_out &);
  CCM_HelloHomeImplicit_out &operator= (const CCM_HelloHomeImplicit_var &);
  CCM_HelloHomeImplicit_out &operator= (CCM_HelloHomeImplicit_ptr);
  operator CCM_HelloHomeImplicit_ptr &();
  CCM_HelloHomeImplicit_ptr &ptr (void);
  CCM_HelloHomeImplicit_ptr operator-> (void);

private:
  CCM_HelloHomeImplicit_ptr &ptr_;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_CCM_HELLOHOMEIMPLICIT_CH_)
#define _CCM_HELLOHOMEIMPLICIT_CH_

class HELLO_EXECUTOR_Export CCM_HelloHomeImplicit
  : public virtual CORBA::Object
{
public:
  typedef CCM_HelloHomeImplicit_ptr _ptr_type;
  typedef CCM_HelloHomeImplicit_var _var_type;
  static int _tao_class_id;
  
  // The static operations.
  static CCM_HelloHomeImplicit_ptr _duplicate (CCM_HelloHomeImplicit_ptr obj);
  
  static CCM_HelloHomeImplicit_ptr _narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloHomeImplicit_ptr _unchecked_narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloHomeImplicit_ptr _nil (void)
    {
      return (CCM_HelloHomeImplicit_ptr)0;
    }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::Components::EnterpriseComponent_ptr create (
      ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      CORBA::SystemException
      , Components::CreateFailure
    )) = 0;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
  
  virtual void *_tao_QueryInterface (ptr_arith_t type);
  
  virtual const char* _interface_repository_id (void) const;

protected:
  CCM_HelloHomeImplicit (void);
  virtual ~CCM_HelloHomeImplicit (void);
  
  friend class _TAO_CCM_HelloHomeImplicit_Remote_Proxy_Impl;
  friend class _TAO_CCM_HelloHomeImplicit_ThruPOA_Proxy_Impl;
  friend class _TAO_CCM_HelloHomeImplicit_Direct_Proxy_Impl;

private:
  CCM_HelloHomeImplicit (const CCM_HelloHomeImplicit &);
  void operator= (const CCM_HelloHomeImplicit &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

extern HELLO_EXECUTOR_Export ::CORBA::TypeCode_ptr  _tc_CCM_HelloHomeImplicit;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_CCM_HELLOHOMEEXPLICIT___PTR_CH_)
#define _CCM_HELLOHOMEEXPLICIT___PTR_CH_

class CCM_HelloHomeExplicit;
typedef CCM_HelloHomeExplicit *CCM_HelloHomeExplicit_ptr;

#endif /* end #if !defined */

#if !defined (_CCM_HELLOHOMEEXPLICIT___VAR_CH_)
#define _CCM_HELLOHOMEEXPLICIT___VAR_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

class HELLO_EXECUTOR_Export CCM_HelloHomeExplicit_var : public TAO_Base_var
{
public:
  CCM_HelloHomeExplicit_var (void); // default constructor
  CCM_HelloHomeExplicit_var (CCM_HelloHomeExplicit_ptr p) : ptr_ (p) {} 
  CCM_HelloHomeExplicit_var (const CCM_HelloHomeExplicit_var &); // copy constructor
  ~CCM_HelloHomeExplicit_var (void); // destructor
  
  CCM_HelloHomeExplicit_var &operator= (CCM_HelloHomeExplicit_ptr);
  CCM_HelloHomeExplicit_var &operator= (const CCM_HelloHomeExplicit_var &);
  CCM_HelloHomeExplicit_ptr operator-> (void) const;
  
  operator const CCM_HelloHomeExplicit_ptr &() const;
  operator CCM_HelloHomeExplicit_ptr &();
  // in, inout, out, _retn 
  CCM_HelloHomeExplicit_ptr in (void) const;
  CCM_HelloHomeExplicit_ptr &inout (void);
  CCM_HelloHomeExplicit_ptr &out (void);
  CCM_HelloHomeExplicit_ptr _retn (void);
  CCM_HelloHomeExplicit_ptr ptr (void) const;
  
  // Hooks used by template sequence and object manager classes
  // for non-defined forward declared interfaces.
  static CCM_HelloHomeExplicit_ptr tao_duplicate (CCM_HelloHomeExplicit_ptr);
  static void tao_release (CCM_HelloHomeExplicit_ptr);
  static CCM_HelloHomeExplicit_ptr tao_nil (void);
  static CCM_HelloHomeExplicit_ptr tao_narrow (
      CORBA::Object *
      ACE_ENV_ARG_DECL_NOT_USED
    );
  static CORBA::Object * tao_upcast (void *);

private:
  CCM_HelloHomeExplicit_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  CCM_HelloHomeExplicit_var (const TAO_Base_var &rhs);
  CCM_HelloHomeExplicit_var &operator= (const TAO_Base_var &rhs);
};

#endif /* end #if !defined */

#if !defined (_CCM_HELLOHOMEEXPLICIT___OUT_CH_)
#define _CCM_HELLOHOMEEXPLICIT___OUT_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

class HELLO_EXECUTOR_Export CCM_HelloHomeExplicit_out
{
public:
  CCM_HelloHomeExplicit_out (CCM_HelloHomeExplicit_ptr &);
  CCM_HelloHomeExplicit_out (CCM_HelloHomeExplicit_var &);
  CCM_HelloHomeExplicit_out (const CCM_HelloHomeExplicit_out &);
  CCM_HelloHomeExplicit_out &operator= (const CCM_HelloHomeExplicit_out &);
  CCM_HelloHomeExplicit_out &operator= (const CCM_HelloHomeExplicit_var &);
  CCM_HelloHomeExplicit_out &operator= (CCM_HelloHomeExplicit_ptr);
  operator CCM_HelloHomeExplicit_ptr &();
  CCM_HelloHomeExplicit_ptr &ptr (void);
  CCM_HelloHomeExplicit_ptr operator-> (void);

private:
  CCM_HelloHomeExplicit_ptr &ptr_;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_CCM_HELLOHOMEEXPLICIT_CH_)
#define _CCM_HELLOHOMEEXPLICIT_CH_

class HELLO_EXECUTOR_Export CCM_HelloHomeExplicit
  : public virtual Components::HomeExecutorBase
{
public:
  typedef CCM_HelloHomeExplicit_ptr _ptr_type;
  typedef CCM_HelloHomeExplicit_var _var_type;
  static int _tao_class_id;
  
  // The static operations.
  static CCM_HelloHomeExplicit_ptr _duplicate (CCM_HelloHomeExplicit_ptr obj);
  
  static CCM_HelloHomeExplicit_ptr _narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloHomeExplicit_ptr _unchecked_narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloHomeExplicit_ptr _nil (void)
    {
      return (CCM_HelloHomeExplicit_ptr)0;
    }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
  
  virtual void *_tao_QueryInterface (ptr_arith_t type);
  
  virtual const char* _interface_repository_id (void) const;

protected:
  CCM_HelloHomeExplicit (void);
  virtual ~CCM_HelloHomeExplicit (void);
  
  friend class _TAO_CCM_HelloHomeExplicit_Remote_Proxy_Impl;
  friend class _TAO_CCM_HelloHomeExplicit_ThruPOA_Proxy_Impl;
  friend class _TAO_CCM_HelloHomeExplicit_Direct_Proxy_Impl;

private:
  CCM_HelloHomeExplicit (const CCM_HelloHomeExplicit &);
  void operator= (const CCM_HelloHomeExplicit &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

extern HELLO_EXECUTOR_Export ::CORBA::TypeCode_ptr  _tc_CCM_HelloHomeExplicit;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:52

#if !defined (_CCM_HELLOHOME___PTR_CH_)
#define _CCM_HELLOHOME___PTR_CH_

class CCM_HelloHome;
typedef CCM_HelloHome *CCM_HelloHome_ptr;

#endif /* end #if !defined */

#if !defined (_CCM_HELLOHOME___VAR_CH_)
#define _CCM_HELLOHOME___VAR_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:571

class HELLO_EXECUTOR_Export CCM_HelloHome_var : public TAO_Base_var
{
public:
  CCM_HelloHome_var (void); // default constructor
  CCM_HelloHome_var (CCM_HelloHome_ptr p) : ptr_ (p) {} 
  CCM_HelloHome_var (const CCM_HelloHome_var &); // copy constructor
  ~CCM_HelloHome_var (void); // destructor
  
  CCM_HelloHome_var &operator= (CCM_HelloHome_ptr);
  CCM_HelloHome_var &operator= (const CCM_HelloHome_var &);
  CCM_HelloHome_ptr operator-> (void) const;
  
  operator const CCM_HelloHome_ptr &() const;
  operator CCM_HelloHome_ptr &();
  // in, inout, out, _retn 
  CCM_HelloHome_ptr in (void) const;
  CCM_HelloHome_ptr &inout (void);
  CCM_HelloHome_ptr &out (void);
  CCM_HelloHome_ptr _retn (void);
  CCM_HelloHome_ptr ptr (void) const;
  
  // Hooks used by template sequence and object manager classes
  // for non-defined forward declared interfaces.
  static CCM_HelloHome_ptr tao_duplicate (CCM_HelloHome_ptr);
  static void tao_release (CCM_HelloHome_ptr);
  static CCM_HelloHome_ptr tao_nil (void);
  static CCM_HelloHome_ptr tao_narrow (
      CORBA::Object *
      ACE_ENV_ARG_DECL_NOT_USED
    );
  static CORBA::Object * tao_upcast (void *);

private:
  CCM_HelloHome_ptr ptr_;
  // Unimplemented - prevents widening assignment.
  CCM_HelloHome_var (const TAO_Base_var &rhs);
  CCM_HelloHome_var &operator= (const TAO_Base_var &rhs);
};

#endif /* end #if !defined */

#if !defined (_CCM_HELLOHOME___OUT_CH_)
#define _CCM_HELLOHOME___OUT_CH_

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:946

class HELLO_EXECUTOR_Export CCM_HelloHome_out
{
public:
  CCM_HelloHome_out (CCM_HelloHome_ptr &);
  CCM_HelloHome_out (CCM_HelloHome_var &);
  CCM_HelloHome_out (const CCM_HelloHome_out &);
  CCM_HelloHome_out &operator= (const CCM_HelloHome_out &);
  CCM_HelloHome_out &operator= (const CCM_HelloHome_var &);
  CCM_HelloHome_out &operator= (CCM_HelloHome_ptr);
  operator CCM_HelloHome_ptr &();
  CCM_HelloHome_ptr &ptr (void);
  CCM_HelloHome_ptr operator-> (void);

private:
  CCM_HelloHome_ptr &ptr_;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:110

#if !defined (_CCM_HELLOHOME_CH_)
#define _CCM_HELLOHOME_CH_

class HELLO_EXECUTOR_Export CCM_HelloHome
  : public virtual CCM_HelloHomeExplicit,
    public virtual CCM_HelloHomeImplicit
{
public:
  typedef CCM_HelloHome_ptr _ptr_type;
  typedef CCM_HelloHome_var _var_type;
  static int _tao_class_id;
  
  // The static operations.
  static CCM_HelloHome_ptr _duplicate (CCM_HelloHome_ptr obj);
  
  static CCM_HelloHome_ptr _narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloHome_ptr _unchecked_narrow (
      CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static CCM_HelloHome_ptr _nil (void)
    {
      return (CCM_HelloHome_ptr)0;
    }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:267
  
  virtual void *_tao_QueryInterface (ptr_arith_t type);
  
  virtual const char* _interface_repository_id (void) const;

protected:
  CCM_HelloHome (void);
  virtual ~CCM_HelloHome (void);
  
  friend class _TAO_CCM_HelloHome_Remote_Proxy_Impl;
  friend class _TAO_CCM_HelloHome_ThruPOA_Proxy_Impl;
  friend class _TAO_CCM_HelloHome_Direct_Proxy_Impl;

private:
  CCM_HelloHome (const CCM_HelloHome &);
  void operator= (const CCM_HelloHome &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

extern HELLO_EXECUTOR_Export ::CORBA::TypeCode_ptr  _tc_CCM_HelloHome;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_Hello_ptr); // copying
HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_Hello_ptr *); // non-copying
HELLO_EXECUTOR_Export CORBA::Boolean operator>>= (const CORBA::Any &, CCM_Hello_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloWorld_Executor_ptr); // copying
HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloWorld_Executor_ptr *); // non-copying
HELLO_EXECUTOR_Export CORBA::Boolean operator>>= (const CORBA::Any &, CCM_HelloWorld_Executor_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloWorld_ptr); // copying
HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloWorld_ptr *); // non-copying
HELLO_EXECUTOR_Export CORBA::Boolean operator>>= (const CORBA::Any &, CCM_HelloWorld_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloWorld_Context_ptr); // copying
HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloWorld_Context_ptr *); // non-copying
HELLO_EXECUTOR_Export CORBA::Boolean operator>>= (const CORBA::Any &, CCM_HelloWorld_Context_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloHomeImplicit_ptr); // copying
HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloHomeImplicit_ptr *); // non-copying
HELLO_EXECUTOR_Export CORBA::Boolean operator>>= (const CORBA::Any &, CCM_HelloHomeImplicit_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloHomeExplicit_ptr); // copying
HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloHomeExplicit_ptr *); // non-copying
HELLO_EXECUTOR_Export CORBA::Boolean operator>>= (const CORBA::Any &, CCM_HelloHomeExplicit_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloHome_ptr); // copying
HELLO_EXECUTOR_Export void operator<<= (CORBA::Any &, CCM_HelloHome_ptr *); // non-copying
HELLO_EXECUTOR_Export CORBA::Boolean operator>>= (const CORBA::Any &, CCM_HelloHome_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1009

#if defined (__ACE_INLINE__)
#include "helloEC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

