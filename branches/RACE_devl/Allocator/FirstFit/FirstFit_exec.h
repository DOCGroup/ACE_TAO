// $Id$
//
// ****              Code generated by the                 ****
// ****  Component Integrated ACE ORB (CIAO) CIDL Compiler ****
// CIAO has been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// CIDL Compiler has been developed by:
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about CIAO is available at:
//    http://www.dre.vanderbilt.edu/CIAO

#ifndef CIAO_FIRSTFIT_EXEC_H
#define CIAO_FIRSTFIT_EXEC_H

#include /**/ "ace/pre.h"

#include "FirstFitEC.h"
#include "Single_D_BP.h"

#define CPU_REQ "CPU_Requirement"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "FirstFit_exec_export.h"
#include "tao/LocalObject.h"

namespace CIAO
{
  namespace RACE
  {
    namespace Allocator
    {
      namespace CIDL_First_Fit_Allocator_Impl
      {
        class FIRSTFIT_EXEC_Export Allocation_exec_i
          : public virtual ::CIAO::RACE::Allocator::CCM_Allocation,
            public virtual TAO_Local_RefCounted_Object
        {
          public:
          Allocation_exec_i (void);
          virtual ~Allocation_exec_i (void);

          // Operations from ::CIAO::RACE::Allocator::Allocation

          virtual ::CORBA::Boolean
          allocate (
            ::CIAO::RACE::OperationalString & opstring);

        private:

         /**
          * 
          */
        bool
        get_component_utils (
            ::CIAO::RACE::OperationalString & opstring,
            Item_Array& items);

        bool
        get_node_capacity (
          Bin_Array& bins);

        bool
        populate_opstream (
          ::CIAO::RACE::OperationalString& opstring,
          Item_Array& items,
          Bin_Array& bins);

        ::Deployment::Domain get_domain ();

        Single_D_BP*  bin_packer_;
        
        };

        class FIRSTFIT_EXEC_Export First_Fit_Allocator_exec_i
          : public virtual CIAO_CIAO_RACE_Allocator_First_Fit_Allocator_Impl::First_Fit_Allocator_Exec,
            public virtual TAO_Local_RefCounted_Object
        {
          public:
          First_Fit_Allocator_exec_i (void);
          virtual ~First_Fit_Allocator_exec_i (void);

          // Supported or inherited operations.

          // Attribute operations.

          // Port operations.

          virtual ::CIAO::RACE::Allocator::CCM_Allocation_ptr
          get_allocation ();

          // Operations from Components::SessionComponent

          virtual void
          set_session_context (
            ::Components::SessionContext_ptr ctx);

          virtual void ciao_preactivate ();

          virtual void configuration_complete ();

          virtual void ccm_activate ();

          virtual void ccm_passivate ();

          virtual void ccm_remove ();

          private:
          ::CIAO::RACE::Allocator::CCM_First_Fit_Allocator_Context_var context_;
        };

        class FIRSTFIT_EXEC_Export First_Fit_Allocator_Home_exec_i
          : public virtual CIAO_CIAO_RACE_Allocator_First_Fit_Allocator_Impl::First_Fit_Allocator_Home_Exec,
            public virtual TAO_Local_RefCounted_Object
        {
          public:
          First_Fit_Allocator_Home_exec_i (void);
          virtual ~First_Fit_Allocator_Home_exec_i (void);

          // Supported or inherited operations.

          // Home operations.

          // Factory and finder operations.

          // Attribute operations.

          // Implicit operations.

          virtual ::Components::EnterpriseComponent_ptr
          create ();
        };

        extern "C" FIRSTFIT_EXEC_Export ::Components::HomeExecutorBase_ptr
        create_CIAO_RACE_Allocator_First_Fit_Allocator_Home_Impl (void);
      }
    }
  }
}

#include /**/ "ace/post.h"

#endif /* CIAO_FIRSTFIT_EXEC_H */

