project(SA_POP_XSC) : xscdefaults {
  requires += xsc
 
  xscflags -= --cxx-char-type ACE_TCHAR
  xscflags += --cxx-namespace-regex "%.*vanderbilt.*%SA_POP/XML%"
  xscflags += --cxx-banner-file $(CIAO_ROOT)/docs/schema/xsc-banner.cpp
  xscflags += --cxx-header-banner-file $(CIAO_ROOT)/docs/schema/xsc-banner.h
  xscflags += --cxx-enable-random-access-sequences
  xscflags += --cxx-header-regex "%Task_Map.xsd%XML_TaskMap%"
  xscflags += --cxx-inline-regex "%Task_Map.xsd%XML_TaskMap%"
  xscflags += --cxx-source-regex "%Task_Map.xsd%XML_TaskMap%"

  custom_only = 1

  XSC_Files {
     gendir = .
     Task_Map.xsd
  }
}

project(SA_POP) : xerces, acelib {
  after += SA_POP_XSC

  sharedname   = SA_POP

  includes += $(SAPOP_ROOT) \
              $(SAPOP_ROOT)/Standalone/XML_Utils

  dynamicflags   = CIAO_XML_UTILS_BUILD_DLL \
                   SANETFILEIN_BUILD_DLL \
                   TASKMAPFILEIN_BUILD_DLL \
                   SA_BUILDER_BUILD_DLL \
                   LOGSCREENOUT_BUILD_DLL

  macros = SA_POP_HAS_ACE

  Source_Files {
    SA_POP_Exceptions.cpp

    SA_Builder.cpp

    Planner.cpp

    TaskMap.cpp
    TaskImpl.cpp

    SA_WorkingPlan.cpp

    SA_SchedStrategy.cpp

    SA_PlanStrategy.cpp

    SA_PlanHeuristics.cpp

    SA_PlanCommands.cpp

    SANet/SANet.cpp
    SANet/SANode.cpp
    SANet/SANet_Exceptions.cpp

    LogScreenOut.cpp
    LogFileOut.cpp

    SANet/SANetFileIn.cpp
    SANet/XML_SANet.cpp
    TaskMapFileIn.cpp
    XML_TaskMap.cpp
    Standalone/XML_Utils/Utils/XML_Helper.cpp
    Standalone/XML_Utils/Utils/XML_Error_Handler.cpp
    Standalone/XML_Utils/Utils/XML_Schema_Resolver.cpp
    Standalone/XML_Utils/Utils/XercesString.cpp
  }

  Inline_Files {

  }

  Header_Files {
    SA_POP_Types.h
    SA_POP_Exceptions.h

    Builder.h
    SA_Builder.h

    Planner.h

    TaskMap.h
    TaskImpl.h

    WorkingPlan.h
    SA_WorkingPlan.h

    SchedStrategy.h
    SA_SchedStrategy.h

    PlanStrategy.h
    SA_PlanStrategy.h

    PlanHeuristics.h
    SA_PlanHeuristics.h

    PlanCommands.h
    SA_PlanCommands.h

    SANet/SANet_Types.h
    SANet/SANet.h
    SANet/SANode.h
    SANet/SANet_Exceptions.h

    OutAdapter.h
    LogScreenOut.h
    LogFileOut.h

    SANet/SANetFileIn.h
    TaskMapFileIn.h
  }

  Documentation_Files {
  }
}
