--- orig/RTCORBAC.cpp	Sat May 20 22:29:17 2000
+++ RTCORBAC.cpp	Fri Aug 18 20:40:33 2000
@@ -1,4 +1,4 @@
-/* -*- C++ -*- $Id$ */
+/* -*- C++ -*- $Id$ */
 
 // ******  Code generated by the The ACE ORB (TAO) IDL Compiler *******
 // TAO and the TAO IDL Compiler have been developed by the Center for
@@ -9,6 +9,11 @@
 
 #include "RTCORBAC.h"
 
+#if (TAO_HAS_RT_CORBA == 1)
+
+#include "tao/TAOS.h"
+#include "tao/Typecode.h"
+
 #if !defined (__ACE_INLINE__)
 #include "RTCORBAC.i"
 #endif /* !defined INLINE */
@@ -95,7 +100,7 @@
 
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
+
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_RTCORBA_THREADPOOLLANES_CS_)
 #define __TAO_UNBOUNDED_SEQUENCE_RTCORBA_THREADPOOLLANES_CS_
 
@@ -104,43 +109,43 @@
   {
     RTCORBA::ThreadpoolLane* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes::allocbuf (length);
-    
+
     if (this->buffer_ != 0)
     {
       RTCORBA::ThreadpoolLane *old = ACE_reinterpret_cast (RTCORBA::ThreadpoolLane *,this->buffer_);
-      
+
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
-      
+
       if (this->release_)
         _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes::freebuf (old);
-      
+
     }
     this->buffer_ = tmp;
   }
-  
+
   void
   RTCORBA::_TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    
+
     RTCORBA::ThreadpoolLane *tmp = ACE_reinterpret_cast (RTCORBA::ThreadpoolLane *,this->buffer_);
-    
+
     _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes::freebuf (tmp);
     this->buffer_ = 0;
-  } 
-  
+  }
+
   RTCORBA::_TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes::~_TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
-  
-  
+
+
 #endif /* end #if !defined */
 
 
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 
 #if !defined (_RTCORBA_THREADPOOLLANES_CS_)
 #define _RTCORBA_THREADPOOLLANES_CS_
@@ -152,30 +157,30 @@
 RTCORBA::ThreadpoolLanes::ThreadpoolLanes (void)
 {}
 RTCORBA::ThreadpoolLanes::ThreadpoolLanes (CORBA::ULong max) // uses max size
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::ThreadpoolLane>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (max)
 {}
 RTCORBA::ThreadpoolLanes::ThreadpoolLanes (CORBA::ULong max, CORBA::ULong length, RTCORBA::ThreadpoolLane *buffer, CORBA::Boolean release)
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::ThreadpoolLane>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (max, length, buffer, release)
 {}
 RTCORBA::ThreadpoolLanes::ThreadpoolLanes (const ThreadpoolLanes &seq) // copy ctor
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::ThreadpoolLane>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (seq)
 {}
 RTCORBA::ThreadpoolLanes::~ThreadpoolLanes (void) // dtor
@@ -245,15 +250,6 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PriorityModel, &_tc_TAO_tc_RTCORBA_PriorityModel)
 TAO_NAMESPACE_END
-
-// default constructor
-RTCORBA::PriorityModelPolicy::PriorityModelPolicy (void)
-{}
-
-// destructor
-RTCORBA::PriorityModelPolicy::~PriorityModelPolicy (void)
-{}
-
 RTCORBA::PriorityModelPolicy_ptr RTCORBA::PriorityModelPolicy::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -297,11 +293,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, PriorityModelPolicy)::_narrow))
+      &RTCORBA::PriorityModelPolicy::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::CORBA, Policy)::_narrow))
+      &CORBA::Policy::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -314,7 +310,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -329,15 +325,6 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, THREADPOOL_POLICY_TYPE, 1413545987U)
 TAO_NAMESPACE_END
-
-// default constructor
-RTCORBA::ThreadpoolPolicy::ThreadpoolPolicy (void)
-{}
-
-// destructor
-RTCORBA::ThreadpoolPolicy::~ThreadpoolPolicy (void)
-{}
-
 RTCORBA::ThreadpoolPolicy_ptr RTCORBA::ThreadpoolPolicy::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -381,11 +368,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, ThreadpoolPolicy)::_narrow))
+      &RTCORBA::ThreadpoolPolicy::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::CORBA, Policy)::_narrow))
+      &CORBA::Policy::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -398,7 +385,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -413,15 +400,6 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, PRIVATE_CONNECTION_POLICY_TYPE, 1413545990U)
 TAO_NAMESPACE_END
-
-// default constructor
-RTCORBA::PrivateConnectionPolicy::PrivateConnectionPolicy (void)
-{}
-
-// destructor
-RTCORBA::PrivateConnectionPolicy::~PrivateConnectionPolicy (void)
-{}
-
 RTCORBA::PrivateConnectionPolicy_ptr RTCORBA::PrivateConnectionPolicy::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -465,11 +443,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, PrivateConnectionPolicy)::_narrow))
+      &RTCORBA::PrivateConnectionPolicy::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::CORBA, Policy)::_narrow))
+      &CORBA::Policy::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -482,7 +460,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -531,7 +509,7 @@
 
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
+
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_RTCORBA_PRIORITYBANDS_CS_)
 #define __TAO_UNBOUNDED_SEQUENCE_RTCORBA_PRIORITYBANDS_CS_
 
@@ -540,43 +518,43 @@
   {
     RTCORBA::PriorityBand* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_RTCORBA_PriorityBands::allocbuf (length);
-    
+
     if (this->buffer_ != 0)
     {
       RTCORBA::PriorityBand *old = ACE_reinterpret_cast (RTCORBA::PriorityBand *,this->buffer_);
-      
+
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
-      
+
       if (this->release_)
         _TAO_Unbounded_Sequence_RTCORBA_PriorityBands::freebuf (old);
-      
+
     }
     this->buffer_ = tmp;
   }
-  
+
   void
   RTCORBA::_TAO_Unbounded_Sequence_RTCORBA_PriorityBands::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    
+
     RTCORBA::PriorityBand *tmp = ACE_reinterpret_cast (RTCORBA::PriorityBand *,this->buffer_);
-    
+
     _TAO_Unbounded_Sequence_RTCORBA_PriorityBands::freebuf (tmp);
     this->buffer_ = 0;
-  } 
-  
+  }
+
   RTCORBA::_TAO_Unbounded_Sequence_RTCORBA_PriorityBands::~_TAO_Unbounded_Sequence_RTCORBA_PriorityBands (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
-  
-  
+
+
 #endif /* end #if !defined */
 
 
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 
 #if !defined (_RTCORBA_PRIORITYBANDS_CS_)
 #define _RTCORBA_PRIORITYBANDS_CS_
@@ -588,30 +566,30 @@
 RTCORBA::PriorityBands::PriorityBands (void)
 {}
 RTCORBA::PriorityBands::PriorityBands (CORBA::ULong max) // uses max size
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_PriorityBands
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::PriorityBand>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (max)
 {}
 RTCORBA::PriorityBands::PriorityBands (CORBA::ULong max, CORBA::ULong length, RTCORBA::PriorityBand *buffer, CORBA::Boolean release)
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_PriorityBands
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::PriorityBand>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (max, length, buffer, release)
 {}
 RTCORBA::PriorityBands::PriorityBands (const PriorityBands &seq) // copy ctor
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_PriorityBands
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::PriorityBand>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (seq)
 {}
 RTCORBA::PriorityBands::~PriorityBands (void) // dtor
@@ -670,15 +648,6 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, PRIORITY_BANDED_CONNECTION_POLICY_TYPE, 1413545991U)
 TAO_NAMESPACE_END
-
-// default constructor
-RTCORBA::PriorityBandedConnectionPolicy::PriorityBandedConnectionPolicy (void)
-{}
-
-// destructor
-RTCORBA::PriorityBandedConnectionPolicy::~PriorityBandedConnectionPolicy (void)
-{}
-
 RTCORBA::PriorityBandedConnectionPolicy_ptr RTCORBA::PriorityBandedConnectionPolicy::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -722,11 +691,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, PriorityBandedConnectionPolicy)::_narrow))
+      &RTCORBA::PriorityBandedConnectionPolicy::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::CORBA, Policy)::_narrow))
+      &CORBA::Policy::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -739,7 +708,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -750,15 +719,6 @@
   return "IDL:omg.org/RTCORBA/PriorityBandedConnectionPolicy:1.0";
 }
 
-
-// default constructor
-RTCORBA::ProtocolProperties::ProtocolProperties (void)
-{}
-
-// destructor
-RTCORBA::ProtocolProperties::~ProtocolProperties (void)
-{}
-
 RTCORBA::ProtocolProperties_ptr RTCORBA::ProtocolProperties::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -802,30 +762,37 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, ProtocolProperties)::_narrow))
+      &RTCORBA::ProtocolProperties::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
 }
 
-const char* RTCORBA::ProtocolProperties::_interface_repository_id (void) const
+//////////////////////////////////////////////////////
+// CDR Encoding Support
+
+CORBA::Boolean
+RTCORBA::ProtocolProperties::_tao_encode (TAO_OutputCDR &)
 {
-  return "IDL:omg.org/RTCORBA/ProtocolProperties:1.0";
+  return 1;
 }
 
+CORBA::Boolean
+RTCORBA::ProtocolProperties::_tao_decode (TAO_InputCDR &)
+{
+  return 1;
+}
 
-// default constructor
-RTCORBA::TCPProtocolProperties::TCPProtocolProperties (void)
-{}
 
-// destructor
-RTCORBA::TCPProtocolProperties::~TCPProtocolProperties (void)
-{}
+const char* RTCORBA::ProtocolProperties::_interface_repository_id (void) const
+{
+  return "IDL:omg.org/RTCORBA/ProtocolProperties:1.0";
+}
 
 RTCORBA::TCPProtocolProperties_ptr RTCORBA::TCPProtocolProperties::_narrow (
     CORBA::Object_ptr obj,
@@ -870,11 +837,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, TCPProtocolProperties)::_narrow))
+      &RTCORBA::TCPProtocolProperties::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, ProtocolProperties)::_narrow))
+      &RTCORBA::ProtocolProperties::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -887,7 +854,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -898,15 +865,6 @@
   return "IDL:omg.org/RTCORBA/TCPProtocolProperties:1.0";
 }
 
-
-// default constructor
-RTCORBA::GIOPProtocolProperties::GIOPProtocolProperties (void)
-{}
-
-// destructor
-RTCORBA::GIOPProtocolProperties::~GIOPProtocolProperties (void)
-{}
-
 RTCORBA::GIOPProtocolProperties_ptr RTCORBA::GIOPProtocolProperties::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -950,11 +908,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, GIOPProtocolProperties)::_narrow))
+      &RTCORBA::GIOPProtocolProperties::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, ProtocolProperties)::_narrow))
+      &RTCORBA::ProtocolProperties::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -967,7 +925,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -978,9 +936,168 @@
   return "IDL:omg.org/RTCORBA/GIOPProtocolProperties:1.0";
 }
 
+// default constructor
+RTCORBA::UnixDomainProtocolProperties::UnixDomainProtocolProperties (void)
+{}
+
+// destructor
+RTCORBA::UnixDomainProtocolProperties::~UnixDomainProtocolProperties (void)
+{}
+
+RTCORBA::UnixDomainProtocolProperties_ptr RTCORBA::UnixDomainProtocolProperties::_narrow (
+    CORBA::Object_ptr obj,
+    CORBA::Environment &ACE_TRY_ENV
+  )
+{
+  return UnixDomainProtocolProperties::_unchecked_narrow (obj, ACE_TRY_ENV);
+}
+
+RTCORBA::UnixDomainProtocolProperties_ptr RTCORBA::UnixDomainProtocolProperties::_unchecked_narrow (
+    CORBA::Object_ptr obj,
+    CORBA::Environment &
+  )
+{
+  if (CORBA::is_nil (obj))
+    return UnixDomainProtocolProperties::_nil ();
+  return
+      ACE_reinterpret_cast
+        (
+          UnixDomainProtocolProperties_ptr,
+            obj->_tao_QueryInterface
+              (
+                ACE_reinterpret_cast
+                  (
+                    ptr_arith_t,
+                    &UnixDomainProtocolProperties::_narrow
+                  )
+              )
+        );
+}
+
+RTCORBA::UnixDomainProtocolProperties_ptr
+RTCORBA::UnixDomainProtocolProperties::_duplicate (UnixDomainProtocolProperties_ptr obj)
+{
+  if (!CORBA::is_nil (obj))
+    obj->_add_ref ();
+  return obj;
+}
+
+void *RTCORBA::UnixDomainProtocolProperties::_tao_QueryInterface (ptr_arith_t type)
+{
+  void *retv = 0;
+  if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &RTCORBA::UnixDomainProtocolProperties::_narrow))
+    retv = ACE_reinterpret_cast (void*, this);
+  else if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &RTCORBA::ProtocolProperties::_narrow))
+    retv = ACE_reinterpret_cast
+      (
+        void *,
+        ACE_static_cast
+          (
+            RTCORBA::ProtocolProperties_ptr,
+            this
+          )
+      );
+  else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
+    retv = ACE_reinterpret_cast (void *,
+      ACE_static_cast (CORBA::Object_ptr, this));
+
+  if (retv)
+    this->_add_ref ();
+  return retv;
+}
+
+const char* RTCORBA::UnixDomainProtocolProperties::_interface_repository_id (void) const
+{
+  return "IDL:omg.org/RTCORBA/UnixDomainProtocolProperties:1.0";
+}
+
+
+// default constructor
+RTCORBA::SharedMemoryProtocolProperties::SharedMemoryProtocolProperties (void)
+{}
+
+// destructor
+RTCORBA::SharedMemoryProtocolProperties::~SharedMemoryProtocolProperties (void)
+{}
+
+RTCORBA::SharedMemoryProtocolProperties_ptr RTCORBA::SharedMemoryProtocolProperties::_narrow (
+    CORBA::Object_ptr obj,
+    CORBA::Environment &ACE_TRY_ENV
+  )
+{
+  return SharedMemoryProtocolProperties::_unchecked_narrow (obj, ACE_TRY_ENV);
+}
+
+RTCORBA::SharedMemoryProtocolProperties_ptr RTCORBA::SharedMemoryProtocolProperties::_unchecked_narrow (
+    CORBA::Object_ptr obj,
+    CORBA::Environment &
+  )
+{
+  if (CORBA::is_nil (obj))
+    return SharedMemoryProtocolProperties::_nil ();
+  return
+      ACE_reinterpret_cast
+        (
+          SharedMemoryProtocolProperties_ptr,
+            obj->_tao_QueryInterface
+              (
+                ACE_reinterpret_cast
+                  (
+                    ptr_arith_t,
+                    &SharedMemoryProtocolProperties::_narrow
+                  )
+              )
+        );
+}
+
+RTCORBA::SharedMemoryProtocolProperties_ptr
+RTCORBA::SharedMemoryProtocolProperties::_duplicate (SharedMemoryProtocolProperties_ptr obj)
+{
+  if (!CORBA::is_nil (obj))
+    obj->_add_ref ();
+  return obj;
+}
+
+void *RTCORBA::SharedMemoryProtocolProperties::_tao_QueryInterface (ptr_arith_t type)
+{
+  void *retv = 0;
+  if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &RTCORBA::SharedMemoryProtocolProperties::_narrow))
+    retv = ACE_reinterpret_cast (void*, this);
+  else if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &RTCORBA::ProtocolProperties::_narrow))
+    retv = ACE_reinterpret_cast
+      (
+        void *,
+        ACE_static_cast
+          (
+            RTCORBA::ProtocolProperties_ptr,
+            this
+          )
+      );
+  else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
+    retv = ACE_reinterpret_cast (void *,
+      ACE_static_cast (CORBA::Object_ptr, this));
+
+  if (retv)
+    this->_add_ref ();
+  return retv;
+}
+
+const char* RTCORBA::SharedMemoryProtocolProperties::_interface_repository_id (void) const
+{
+  return "IDL:omg.org/RTCORBA/SharedMemoryProtocolProperties:1.0";
+}
+
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
+
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_RTCORBA_PROTOCOLLIST_CS_)
 #define __TAO_UNBOUNDED_SEQUENCE_RTCORBA_PROTOCOLLIST_CS_
 
@@ -989,43 +1106,43 @@
   {
     RTCORBA::Protocol* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_RTCORBA_ProtocolList::allocbuf (length);
-    
+
     if (this->buffer_ != 0)
     {
       RTCORBA::Protocol *old = ACE_reinterpret_cast (RTCORBA::Protocol *,this->buffer_);
-      
+
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
-      
+
       if (this->release_)
         _TAO_Unbounded_Sequence_RTCORBA_ProtocolList::freebuf (old);
-      
+
     }
     this->buffer_ = tmp;
   }
-  
+
   void
   RTCORBA::_TAO_Unbounded_Sequence_RTCORBA_ProtocolList::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    
+
     RTCORBA::Protocol *tmp = ACE_reinterpret_cast (RTCORBA::Protocol *,this->buffer_);
-    
+
     _TAO_Unbounded_Sequence_RTCORBA_ProtocolList::freebuf (tmp);
     this->buffer_ = 0;
-  } 
-  
+  }
+
   RTCORBA::_TAO_Unbounded_Sequence_RTCORBA_ProtocolList::~_TAO_Unbounded_Sequence_RTCORBA_ProtocolList (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
-  
-  
+
+
 #endif /* end #if !defined */
 
 
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 
 #if !defined (_RTCORBA_PROTOCOLLIST_CS_)
 #define _RTCORBA_PROTOCOLLIST_CS_
@@ -1037,30 +1154,30 @@
 RTCORBA::ProtocolList::ProtocolList (void)
 {}
 RTCORBA::ProtocolList::ProtocolList (CORBA::ULong max) // uses max size
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_ProtocolList
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::Protocol>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (max)
 {}
 RTCORBA::ProtocolList::ProtocolList (CORBA::ULong max, CORBA::ULong length, RTCORBA::Protocol *buffer, CORBA::Boolean release)
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_ProtocolList
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::Protocol>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (max, length, buffer, release)
 {}
 RTCORBA::ProtocolList::ProtocolList (const ProtocolList &seq) // copy ctor
-  : 
+  :
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_RTCORBA_ProtocolList
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
   TAO_Unbounded_Sequence<RTCORBA::Protocol>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
  (seq)
 {}
 RTCORBA::ProtocolList::~ProtocolList (void) // dtor
@@ -1078,15 +1195,6 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, SERVER_PROTOCOL_POLICY_TYPE, 1413545988U)
 TAO_NAMESPACE_END
-
-// default constructor
-RTCORBA::ServerProtocolPolicy::ServerProtocolPolicy (void)
-{}
-
-// destructor
-RTCORBA::ServerProtocolPolicy::~ServerProtocolPolicy (void)
-{}
-
 RTCORBA::ServerProtocolPolicy_ptr RTCORBA::ServerProtocolPolicy::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -1130,11 +1238,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, ServerProtocolPolicy)::_narrow))
+      &RTCORBA::ServerProtocolPolicy::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::CORBA, Policy)::_narrow))
+      &CORBA::Policy::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -1147,7 +1255,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -1162,15 +1270,6 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, CLIENT_PROTOCOL_POLICY_TYPE, 1413545989U)
 TAO_NAMESPACE_END
-
-// default constructor
-RTCORBA::ClientProtocolPolicy::ClientProtocolPolicy (void)
-{}
-
-// destructor
-RTCORBA::ClientProtocolPolicy::~ClientProtocolPolicy (void)
-{}
-
 RTCORBA::ClientProtocolPolicy_ptr RTCORBA::ClientProtocolPolicy::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -1214,11 +1313,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, ClientProtocolPolicy)::_narrow))
+      &RTCORBA::ClientProtocolPolicy::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::CORBA, Policy)::_narrow))
+      &CORBA::Policy::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -1231,7 +1330,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -1242,15 +1341,6 @@
   return "IDL:omg.org/RTCORBA/ClientProtocolPolicy:1.0";
 }
 
-
-// default constructor
-RTCORBA::Current::Current (void)
-{}
-
-// destructor
-RTCORBA::Current::~Current (void)
-{}
-
 RTCORBA::Current_ptr RTCORBA::Current::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -1294,11 +1384,11 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, Current)::_narrow))
+      &RTCORBA::Current::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::CORBA, Current)::_narrow))
+      &CORBA::Current::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
@@ -1311,7 +1401,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -1322,15 +1412,6 @@
   return "IDL:omg.org/RTCORBA/Current:1.0";
 }
 
-
-// default constructor
-RTCORBA::Mutex::Mutex (void)
-{}
-
-// destructor
-RTCORBA::Mutex::~Mutex (void)
-{}
-
 RTCORBA::Mutex_ptr RTCORBA::Mutex::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -1374,12 +1455,12 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, Mutex)::_narrow))
+      &RTCORBA::Mutex::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -1390,15 +1471,6 @@
   return "IDL:omg.org/RTCORBA/Mutex:1.0";
 }
 
-
-// default constructor
-RTCORBA::RTORB::RTORB (void)
-{}
-
-// destructor
-RTCORBA::RTORB::~RTORB (void)
-{}
-
 RTCORBA::RTORB_ptr RTCORBA::RTORB::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -1449,9 +1521,9 @@
 
 // copy constructor
 RTCORBA::RTORB::InvalidThreadpool::InvalidThreadpool (const ::RTCORBA::RTORB::InvalidThreadpool &_tao_excp)
-  : CORBA_UserException (_tao_excp._type ())
+  : CORBA_UserException (_tao_excp._id ())
 {
-  }
+}
 
 // assignment operator
 RTCORBA::RTORB::InvalidThreadpool&
@@ -1464,7 +1536,7 @@
 
 // narrow
 RTCORBA::RTORB::InvalidThreadpool *
-RTCORBA::RTORB::InvalidThreadpool::_downcast (CORBA::Exception *exc)
+RTCORBA::RTORB::InvalidThreadpool::_narrow (CORBA::Exception *exc)
 {
   if (!ACE_OS::strcmp ("IDL:omg.org/RTCORBA/RTORB/InvalidThreadpool:1.0", exc->_id ())) // same type
     return ACE_dynamic_cast (InvalidThreadpool *, exc);
@@ -1507,12 +1579,12 @@
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::RTCORBA, RTORB)::_narrow))
+      &RTCORBA::RTORB::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -1952,6 +2024,20 @@
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
+    template class TAO_Object_Manager<RTCORBA::UnixDomainProtocolProperties,RTCORBA::UnixDomainProtocolProperties_var>;
+  #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
+  #  pragma instantiate TAO_Object_Manager<RTCORBA::UnixDomainProtocolProperties,RTCORBA::UnixDomainProtocolProperties_var>
+#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
+
+#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
+    defined (ACE_HAS_GNU_REPO)
+    template class TAO_Object_Manager<RTCORBA::SharedMemoryProtocolProperties,RTCORBA::SharedMemoryProtocolProperties_var>;
+  #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
+  #  pragma instantiate TAO_Object_Manager<RTCORBA::SharedMemoryProtocolProperties,RTCORBA::SharedMemoryProtocolProperties_var>
+#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
+
+#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
+    defined (ACE_HAS_GNU_REPO)
     template class TAO_Object_Manager<RTCORBA::ServerProtocolPolicy,RTCORBA::ServerProtocolPolicy_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
   #  pragma instantiate TAO_Object_Manager<RTCORBA::ServerProtocolPolicy,RTCORBA::ServerProtocolPolicy_var>
@@ -2014,7 +2100,7 @@
     // set the length of the sequence
     _tao_sequence.length (_tao_seq_len);
     // If length is 0 we return true.
-    if (0 >= _tao_seq_len) 
+    if (0 >= _tao_seq_len)
       return 1;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
@@ -2056,7 +2142,7 @@
     // set the length of the sequence
     _tao_sequence.length (_tao_seq_len);
     // If length is 0 we return true.
-    if (0 >= _tao_seq_len) 
+    if (0 >= _tao_seq_len)
       return 1;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
@@ -2069,3 +2155,4 @@
   return 0; // error
 }
 
+#endif /* TAO_HAS_RT_CORBA == 1 */
