// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html


// TAO_IDL - Generated from 
// be/be_codegen.cpp:611

#ifndef _TAO_IDL_ORIG_IMPLREPOS_CPP_
#define _TAO_IDL_ORIG_IMPLREPOS_CPP_


#include "ImplRepoS.h"
#include "tao/PortableServer/Object_Adapter.h"
#include "tao/PortableServer/Operation_Table.h"
#include "tao/PortableServer/Upcall_Command.h"
#include "tao/PortableServer/Upcall_Wrapper.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Object_SArgument_T.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/TypeCode_SArg_Traits.h"
#include "tao/TAO_Server_Request.h"
#include "tao/ORB_Core.h"
#include "tao/Profile.h"
#include "tao/Stub.h"
#include "tao/IFR_Client_Adapter.h"
#include "tao/Object_T.h"
#include "tao/Typecode.h"
#include "tao/DynamicC.h"
#include "tao/CDR.h"
#include "tao/PortableInterceptor.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "ace/Dynamic_Service.h"
#include "ace/Malloc_Allocator.h"
#include "ace/config-all.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "ImplRepoS.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:67

// Arg traits specializations.
namespace TAO
{

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__SARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__SARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export SArg_Traits<ImplementationRepository::ServerObject>
    : public
        Object_SArg_Traits_T<
            ImplementationRepository::ServerObject_ptr,
            ImplementationRepository::ServerObject_var,
            ImplementationRepository::ServerObject_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:689

#if !defined (_IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__SARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__SARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export SArg_Traits<ImplementationRepository::StartupOptions>
    : public
        Var_Size_SArg_Traits_T<
            ImplementationRepository::StartupOptions,
            ImplementationRepository::StartupOptions_var,
            ImplementationRepository::StartupOptions_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:689

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__SARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__SARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export SArg_Traits<ImplementationRepository::ServerInformation>
    : public
        Var_Size_SArg_Traits_T<
            ImplementationRepository::ServerInformation,
            ImplementationRepository::ServerInformation_var,
            ImplementationRepository::ServerInformation_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:421

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__SARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__SARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export SArg_Traits<ImplementationRepository::ServerInformationList>
    : public
        Var_Size_SArg_Traits_T<
            ImplementationRepository::ServerInformationList,
            ImplementationRepository::ServerInformationList_var,
            ImplementationRepository::ServerInformationList_out
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__SARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__SARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export SArg_Traits<ImplementationRepository::ServerInformationIterator>
    : public
        Object_SArg_Traits_T<
            ImplementationRepository::ServerInformationIterator_ptr,
            ImplementationRepository::ServerInformationIterator_var,
            ImplementationRepository::ServerInformationIterator_out
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:67

// Arg traits specializations.
namespace TAO
{

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::ServerObject>
    : public
        Object_Arg_Traits_T<
            ImplementationRepository::ServerObject_ptr,
            ImplementationRepository::ServerObject_var,
            ImplementationRepository::ServerObject_out,
            TAO::Objref_Traits<ImplementationRepository::ServerObject>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:689

#if !defined (_IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::StartupOptions>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::StartupOptions,
            ImplementationRepository::StartupOptions_var,
            ImplementationRepository::StartupOptions_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:689

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::ServerInformation>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::ServerInformation,
            ImplementationRepository::ServerInformation_var,
            ImplementationRepository::ServerInformation_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:421

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::ServerInformationList>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::ServerInformationList,
            ImplementationRepository::ServerInformationList_var,
            ImplementationRepository::ServerInformationList_out
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_SS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::ServerInformationIterator>
    : public
        Object_Arg_Traits_T<
            ImplementationRepository::ServerInformationIterator_ptr,
            ImplementationRepository::ServerInformationIterator_var,
            ImplementationRepository::ServerInformationIterator_out,
            TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be/be_interface.cpp:1538

class TAO_ImplementationRepository_ServerObject_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len);

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len);
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: /home/ossama/work/skeleton-refactor/ACE_wrappers/bin/gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0,0 -a -o -t -p -K opname_ -L C++ -Z TAO_ImplementationRepository_ServerObject_Perfect_Hash_OpTable -N lookup  */
unsigned int
TAO_ImplementationRepository_ServerObject_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static const unsigned char asso_values[] =
    {
#if defined (ACE_MVS)
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16,  0,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16,  0,
     16, 16, 16,  5, 16,  0, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16,  0,
     16,  0, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16,  0,  0, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16,
#else
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16,  0, 16,  0, 16, 16,
     16,  5, 16,  0, 16, 16, 16, 16, 16, 16,
      0, 16,  0, 16, 16,  0,  0, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16,
#endif /* ACE_MVS */
    };
  return len + asso_values[(int) str[len - 1]] + asso_values[(int) str[0]];
}

const class TAO_operation_db_entry *
TAO_ImplementationRepository_ServerObject_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 6,
      MIN_WORD_LENGTH = 4,
      MAX_WORD_LENGTH = 13,
      MIN_HASH_VALUE = 4,
      MAX_HASH_VALUE = 15,
      HASH_VALUE_RANGE = 12,
      DUPLICATES = 0,
      WORDLIST_SIZE = 10
    };

  static const class TAO_operation_db_entry  wordlist[] =
    {
      {"",0,0,0},{"",0,0,0},{"",0,0,0},{"",0,0,0},
      {"ping", &POA_ImplementationRepository::ServerObject::ping_skel, &POA_ImplementationRepository::_TAO_ServerObject_ThruPOA_Proxy_Impl::ping, &POA_ImplementationRepository::_TAO_ServerObject_Direct_Proxy_Impl::ping},
      {"_is_a", &POA_ImplementationRepository::ServerObject::_is_a_skel, 0, 0},
      {"",0,0,0},{"",0,0,0},
      {"shutdown", &POA_ImplementationRepository::ServerObject::shutdown_skel, &POA_ImplementationRepository::_TAO_ServerObject_ThruPOA_Proxy_Impl::shutdown, &POA_ImplementationRepository::_TAO_ServerObject_Direct_Proxy_Impl::shutdown},
      {"",0,0,0},
      {"_component", &POA_ImplementationRepository::ServerObject::_component_skel, 0, 0},
      {"",0,0,0},{"",0,0,0},
      {"_non_existent", &POA_ImplementationRepository::ServerObject::_non_existent_skel, 0, 0},
      {"",0,0,0},
      {"_interface", &POA_ImplementationRepository::ServerObject::_interface_skel, 0, 0},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          const char *s = wordlist[key].opname_;

          if (*str == *s && !strncmp (str + 1, s + 1, len - 1))
            return &wordlist[key];
        }
    }
  return 0;
}

static TAO_ImplementationRepository_ServerObject_Perfect_Hash_OpTable tao_ImplementationRepository_ServerObject_optable;

// TAO_IDL - Generated from
// be/be_visitor_interface/upcall_command_ss.cpp:49

// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_ServerObject_ping_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_ServerObject_ping_Upcall_Command (
    POA_ImplementationRepository::ServerObject * servant)
    : servant_ (servant)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->ping (
      ACE_ENV_SINGLE_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::ServerObject * const servant_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_ServerObject_shutdown_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_ServerObject_shutdown_Upcall_Command (
    POA_ImplementationRepository::ServerObject * servant)
    : servant_ (servant)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->shutdown (
      ACE_ENV_SINGLE_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::ServerObject * const servant_;

};

///////////////////////////////////////////////////////////////////////
//            Strategized Proxy Broker Implementation
//

// TAO_IDL - Generated from
// be/be_visitor_interface/strategized_proxy_broker_ss.cpp:40

// Factory function Implementation.
POA_ImplementationRepository::_TAO_ServerObject_Strategized_Proxy_Broker *
POA_ImplementationRepository::_TAO_ServerObject_Strategized_Proxy_Broker::the_TAO_ServerObject_Strategized_Proxy_Broker (void)
{
  static POA_ImplementationRepository::_TAO_ServerObject_Strategized_Proxy_Broker
  strategized_proxy_broker;
  
  return &strategized_proxy_broker;
}

POA_ImplementationRepository::_TAO_ServerObject_Strategized_Proxy_Broker::_TAO_ServerObject_Strategized_Proxy_Broker (void)
{
}

POA_ImplementationRepository::_TAO_ServerObject_Strategized_Proxy_Broker::~_TAO_ServerObject_Strategized_Proxy_Broker (void)
{
}

TAO::Collocation_Strategy
POA_ImplementationRepository::_TAO_ServerObject_Strategized_Proxy_Broker::get_strategy (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((CORBA::SystemException))
{
  TAO::Collocation_Strategy strategy =
    TAO_ORB_Core::collocation_strategy (obj ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (TAO::TAO_CS_REMOTE_STRATEGY);
  
  return strategy;
}

void
POA_ImplementationRepository::_TAO_ServerObject_Strategized_Proxy_Broker::dispatch (
    CORBA::Object_ptr obj,
    CORBA::Object_out forward_obj,
    TAO::Argument ** args,
    int num_args,
    const char * op,
    size_t op_len,
    TAO::Collocation_Strategy strategy
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((CORBA::Exception))
{
  TAO_Object_Adapter::Servant_Upcall servant_upcall (
      obj->_stubobj ()->servant_orb_var ()->orb_core ()
    );
  
  TAO_Collocated_Skeleton collocated_skel;
  TAO_Abstract_ServantBase *servant = 0;
  
  if (strategy == TAO::TAO_CS_THRU_POA_STRATEGY)
    {
      servant_upcall.prepare_for_upcall (
          obj->_stubobj ()->object_key (),
          op,
          forward_obj
          ACE_ENV_ARG_PARAMETER
        );
      ACE_CHECK;
      
      servant_upcall.pre_invoke_collocated_request (
          ACE_ENV_SINGLE_ARG_PARAMETER
        );
      ACE_CHECK;
      
      servant = servant_upcall.servant ();
    }
  else
    {
      servant = obj->_servant ();
    }
  
  int status = servant->_find (op,
                               collocated_skel,
                               strategy,
                               op_len);
  
  if (status == -1)
    {
      ACE_THROW (CORBA::BAD_OPERATION ());
    }
  
  ACE_TRY
    {
      collocated_skel (servant,
                       args,
                       num_args
                       ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
#if (TAO_HAS_MINIMUM_CORBA == 0)
  ACE_CATCH (PortableServer::ForwardRequest, forward_request)
    {
      forward_obj =
        CORBA::Object::_duplicate (forward_request.forward_reference.in ());
      return;
    }
#else
  ACE_CATCHANY
    {
      ACE_UNUSED_ARG (forward_obj);
      ACE_RE_THROW;
    }
#endif /* TAO_HAS_MINIMUM_CORBA */
  ACE_ENDTRY;
  ACE_CHECK;
}

//
//        End Strategized Proxy Broker Implementation
///////////////////////////////////////////////////////////////////////

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:648

TAO::Collocation_Proxy_Broker *
ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function (CORBA::Object_ptr)
{
  return
    ::POA_ImplementationRepository::_TAO_ServerObject_Strategized_Proxy_Broker::the_TAO_ServerObject_Strategized_Proxy_Broker ();
}

int
ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_Initializer (size_t)
{
  ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function_pointer = 
    ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function;
  
  return 0;
}

static int
ImplementationRepository__TAO_ServerObject_Proxy_Broker_Stub_Factory_Initializer_Scarecrow =
  ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_Initializer (
      reinterpret_cast<
          size_t> (
          ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_Initializer
        )
    );


///////////////////////////////////////////////////////////////////////
//                 ThruPOA Proxy  Implementation
//

// TAO_IDL - Generated from
// be/be_visitor_interface/thru_poa_proxy_impl_ss.cpp:37

POA_ImplementationRepository::_TAO_ServerObject_ThruPOA_Proxy_Impl::_TAO_ServerObject_ThruPOA_Proxy_Impl (void)
{}

// ThruPOA Implementation of the IDL interface methods

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_ServerObject_ThruPOA_Proxy_Impl::ping (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument **,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::ServerObject_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/ServerObject:1.0"
        )
    )->ping (
        ACE_ENV_SINGLE_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_ServerObject_ThruPOA_Proxy_Impl::shutdown (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument **,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::ServerObject_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/ServerObject:1.0"
        )
    )->shutdown (
        ACE_ENV_SINGLE_ARG_PARAMETER
      );
  ACE_CHECK;
}

//
//           End ThruPOA Proxy Implementation
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_ImplementationRepository::_TAO_ServerObject_Direct_Proxy_Impl::_TAO_ServerObject_Direct_Proxy_Impl (void)
{}

// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_ServerObject_Direct_Proxy_Impl::ping (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::ServerObject_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/ServerObject:1.0"
        )
    )->ping (
        ACE_ENV_SINGLE_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_ServerObject_Direct_Proxy_Impl::shutdown (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::ServerObject_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/ServerObject:1.0"
        )
    )->shutdown (
        ACE_ENV_SINGLE_ARG_PARAMETER
      );
  ACE_CHECK;
}

//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////

// TAO_IDL - Generated from 
// be/be_visitor_interface/interface_ss.cpp:97

POA_ImplementationRepository::ServerObject::ServerObject (void)
{
  this->optable_ = &tao_ImplementationRepository_ServerObject_optable;
}

POA_ImplementationRepository::ServerObject::ServerObject (const ServerObject& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs)
{
}

POA_ImplementationRepository::ServerObject::~ServerObject (void)
{
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::ServerObject::ping_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = {};
  static size_t const _tao_nexceptions = 0;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::ServerObject * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::ServerObject *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval
    };
  
  static size_t const _tao_nargs = 1;
  
  TAO_ImplementationRepository_ServerObject_ping_Upcall_Command _tao_upcall_command (
      _tao_impl);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::ServerObject::shutdown_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = {};
  static size_t const _tao_nexceptions = 0;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::ServerObject * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::ServerObject *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval
    };
  
  static size_t const _tao_nargs = 1;
  
  TAO_ImplementationRepository_ServerObject_shutdown_Upcall_Command _tao_upcall_command (
      _tao_impl);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_interface/interface_ss.cpp:162

void POA_ImplementationRepository::ServerObject::_is_a_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  TAO_InputCDR &_tao_in = _tao_server_request.incoming ();
  
  POA_ImplementationRepository::ServerObject *_tao_impl =
    (POA_ImplementationRepository::ServerObject *) _tao_servant;
  
  CORBA::Boolean _tao_retval = 0;
  CORBA::String_var value;
  
  if (!(_tao_in >> value.out ()))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
  
  _tao_retval = _tao_impl->_is_a (value.in () ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << CORBA::Any::from_boolean (_tao_retval)))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::ServerObject::_non_existent_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  POA_ImplementationRepository::ServerObject *_tao_impl =
    (POA_ImplementationRepository::ServerObject *) _tao_servant;
  
  CORBA::Boolean _tao_retval =
    _tao_impl->_non_existent (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << CORBA::Any::from_boolean (_tao_retval)))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::ServerObject::_interface_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  TAO_IFR_Client_Adapter *_tao_adapter =
    ACE_Dynamic_Service<TAO_IFR_Client_Adapter>::instance (
        TAO_ORB_Core::ifr_client_adapter_name ()
      );
    
  if (_tao_adapter == 0)
    {
      ACE_THROW (CORBA::INTF_REPOS ());
    }
  
  POA_ImplementationRepository::ServerObject *_tao_impl =
    (POA_ImplementationRepository::ServerObject *) _tao_servant;
  
  CORBA::InterfaceDef_ptr _tao_retval = 
    _tao_impl->_get_interface (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  CORBA::Boolean _tao_result =
    _tao_adapter->interfacedef_cdr_insert (
        _tao_out,
        _tao_retval
      );
  
  _tao_adapter->dispose (_tao_retval);
  
  if (_tao_result == 0)
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::ServerObject::_component_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_object_reference,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  POA_ImplementationRepository::ServerObject *_tao_impl =
    (POA_ImplementationRepository::ServerObject *) _tao_object_reference;
  
  CORBA::Object_var _tao_retval =
    _tao_impl->_get_component (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << _tao_retval.in ()))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

CORBA::Boolean POA_ImplementationRepository::ServerObject::_is_a (
    const char* value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:ImplementationRepository/ServerObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

void* POA_ImplementationRepository::ServerObject::_downcast (
    const char* logical_type_id
  )
{
  if (ACE_OS::strcmp (logical_type_id,
                      "IDL:ImplementationRepository/ServerObject:1.0") == 0)
    {
      return static_cast<POA_ImplementationRepository::ServerObject_ptr> (this);
    }
  
  if (ACE_OS::strcmp (logical_type_id,
                      "IDL:omg.org/CORBA/Object:1.0") == 0)
    {
      return static_cast<PortableServer::Servant> (this);
    }
  
  return 0;
}

const char* POA_ImplementationRepository::ServerObject::_interface_repository_id (void) const
{
  return "IDL:ImplementationRepository/ServerObject:1.0";
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:584

void POA_ImplementationRepository::ServerObject::_dispatch (
    TAO_ServerRequest &req,
    void *servant_upcall
    ACE_ENV_ARG_DECL
  )
{
  this->synchronous_upcall_dispatch (req,
                                     servant_upcall,
                                     this
                                     ACE_ENV_ARG_PARAMETER);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:526

ImplementationRepository::ServerObject *
POA_ImplementationRepository::ServerObject::_this (ACE_ENV_SINGLE_ARG_DECL)
{
  TAO_Stub *stub = this->_create_stub (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK_RETURN (0);
  
  TAO_Stub_Auto_Ptr safe_stub (stub);
  CORBA::Object_ptr tmp = CORBA::Object::_nil ();
  
  if (stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ())
    {
      ACE_NEW_RETURN (
          tmp,
          CORBA::Object (stub, 1, this),
          0
        );
    }
  else
    {
      ACE_NEW_RETURN (
          tmp,
          CORBA::Object (stub, 0, this),
          0
        );
    }
  
  CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();
  
  typedef ::ImplementationRepository::ServerObject STUB_SCOPED_NAME;
  return
    TAO::Narrow_Utils<STUB_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function_pointer
      );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:1538

class TAO_ImplementationRepository_Administration_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len);

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len);
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: /home/ossama/work/skeleton-refactor/ACE_wrappers/bin/gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0,0 -a -o -t -p -K opname_ -L C++ -Z TAO_ImplementationRepository_Administration_Perfect_Hash_OpTable -N lookup  */
unsigned int
TAO_ImplementationRepository_Administration_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static const unsigned char asso_values[] =
    {
#if defined (ACE_MVS)
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34,  0,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34,  4,
     34, 34,  0,  0,  0,  0, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34,  5, 34,  5,
      0,  0, 34,  0, 34, 34, 34, 34, 34, 34,
     34, 34,  5, 15, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34,
#else
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
     34, 34, 34, 34, 34,  0, 34,  4, 34, 34,
      0,  0,  0,  0, 34, 34, 34, 34,  5, 34,
      5,  0,  0, 34,  0,  5, 15, 34, 34, 34,
     34, 34, 34, 34, 34, 34, 34, 34,
#endif /* ACE_MVS */
    };
  return len + asso_values[(int) str[len - 1]] + asso_values[(int) str[0]];
}

const class TAO_operation_db_entry *
TAO_ImplementationRepository_Administration_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 16,
      MIN_WORD_LENGTH = 4,
      MAX_WORD_LENGTH = 28,
      MIN_HASH_VALUE = 4,
      MAX_HASH_VALUE = 33,
      HASH_VALUE_RANGE = 30,
      DUPLICATES = 0,
      WORDLIST_SIZE = 20
    };

  static const class TAO_operation_db_entry  wordlist[] =
    {
      {"",0,0,0},{"",0,0,0},{"",0,0,0},{"",0,0,0},
      {"find", &POA_ImplementationRepository::Administration::find_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::find, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::find},
      {"",0,0,0},{"",0,0,0},{"",0,0,0},
      {"find_ior", &POA_ImplementationRepository::Administration::find_ior_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::find_ior, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::find_ior},
      {"_is_a", &POA_ImplementationRepository::Administration::_is_a_skel, 0, 0},
      {"_interface", &POA_ImplementationRepository::Administration::_interface_skel, 0, 0},
      {"",0,0,0},{"",0,0,0},
      {"remove_server", &POA_ImplementationRepository::Administration::remove_server_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::remove_server, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::remove_server},
      {"",0,0,0},
      {"register_server", &POA_ImplementationRepository::Administration::register_server_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::register_server, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::register_server},
      {"",0,0,0},
      {"reregister_server", &POA_ImplementationRepository::Administration::reregister_server_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::reregister_server, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::reregister_server},
      {"shutdown_repo", &POA_ImplementationRepository::Administration::shutdown_repo_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::shutdown_repo, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::shutdown_repo},
      {"activate_server", &POA_ImplementationRepository::Administration::activate_server_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::activate_server, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::activate_server},
      {"shutdown_server", &POA_ImplementationRepository::Administration::shutdown_server_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::shutdown_server, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::shutdown_server},
      {"",0,0,0},
      {"server_is_running", &POA_ImplementationRepository::Administration::server_is_running_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::server_is_running, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::server_is_running},
      {"",0,0,0},
      {"list", &POA_ImplementationRepository::Administration::list_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::list, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::list},
      {"_component", &POA_ImplementationRepository::Administration::_component_skel, 0, 0},
      {"",0,0,0},{"",0,0,0},
      {"_non_existent", &POA_ImplementationRepository::Administration::_non_existent_skel, 0, 0},
      {"",0,0,0},{"",0,0,0},{"",0,0,0},
      {"activate_server_with_startup", &POA_ImplementationRepository::Administration::activate_server_with_startup_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::activate_server_with_startup, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::activate_server_with_startup},
      {"server_is_shutting_down", &POA_ImplementationRepository::Administration::server_is_shutting_down_skel, &POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::server_is_shutting_down, &POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::server_is_shutting_down},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          const char *s = wordlist[key].opname_;

          if (*str == *s && !strncmp (str + 1, s + 1, len - 1))
            return &wordlist[key];
        }
    }
  return 0;
}

static TAO_ImplementationRepository_Administration_Perfect_Hash_OpTable tao_ImplementationRepository_Administration_optable;

// TAO_IDL - Generated from
// be/be_visitor_interface/upcall_command_ss.cpp:49

// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_activate_server_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_activate_server_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->activate_server (
      static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_activate_server_with_startup_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_activate_server_with_startup_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    static_cast<TAO::SArg_Traits< ::CORBA::Char *>::ret_val *> (this->args_[0])->arg () =
      this->servant_->activate_server_with_startup (
        static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg (),
        static_cast<TAO::SArg_Traits< CORBA::Long>::in_arg_val *> (this->args_[2])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_register_server_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_register_server_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->register_server (
      static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg (),
      static_cast<TAO::SArg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val *> (this->args_[2])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_reregister_server_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_reregister_server_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->reregister_server (
      static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg (),
      static_cast<TAO::SArg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val *> (this->args_[2])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_remove_server_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_remove_server_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->remove_server (
      static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_shutdown_server_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_shutdown_server_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->shutdown_server (
      static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_server_is_running_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_server_is_running_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->server_is_running (
      static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg (),
      static_cast<TAO::SArg_Traits< ::ImplementationRepository::Address>::in_arg_val *> (this->args_[2])->arg (),
      static_cast<TAO::SArg_Traits< ::ImplementationRepository::ServerObject>::in_arg_val *> (this->args_[3])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_server_is_shutting_down_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_server_is_shutting_down_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->server_is_shutting_down (
      static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_find_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_find_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->find (
      static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg (),
      static_cast<TAO::SArg_Traits< ::ImplementationRepository::ServerInformation>::out_arg_val *> (this->args_[2])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_list_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_list_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->list (
      static_cast<TAO::SArg_Traits< CORBA::ULong>::in_arg_val *> (this->args_[1])->arg (),
      static_cast<TAO::SArg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val *> (this->args_[2])->arg (),
      static_cast<TAO::SArg_Traits< ::ImplementationRepository::ServerInformationIterator>::out_arg_val *> (this->args_[3])->arg ()
      ACE_ENV_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_shutdown_repo_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_shutdown_repo_Upcall_Command (
    POA_ImplementationRepository::Administration * servant)
    : servant_ (servant)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->shutdown_repo (
      ACE_ENV_SINGLE_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_Administration_find_ior_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_Administration_find_ior_Upcall_Command (
    POA_ImplementationRepository::Administration * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    static_cast<TAO::SArg_Traits< ::CORBA::Char *>::ret_val *> (this->args_[0])->arg () =
      this->servant_->find_ior (
        static_cast<TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val *> (this->args_[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::Administration * const servant_;
  TAO::Argument * const * const args_;

};

///////////////////////////////////////////////////////////////////////
//            Strategized Proxy Broker Implementation
//

// TAO_IDL - Generated from
// be/be_visitor_interface/strategized_proxy_broker_ss.cpp:40

// Factory function Implementation.
POA_ImplementationRepository::_TAO_Administration_Strategized_Proxy_Broker *
POA_ImplementationRepository::_TAO_Administration_Strategized_Proxy_Broker::the_TAO_Administration_Strategized_Proxy_Broker (void)
{
  static POA_ImplementationRepository::_TAO_Administration_Strategized_Proxy_Broker
  strategized_proxy_broker;
  
  return &strategized_proxy_broker;
}

POA_ImplementationRepository::_TAO_Administration_Strategized_Proxy_Broker::_TAO_Administration_Strategized_Proxy_Broker (void)
{
}

POA_ImplementationRepository::_TAO_Administration_Strategized_Proxy_Broker::~_TAO_Administration_Strategized_Proxy_Broker (void)
{
}

TAO::Collocation_Strategy
POA_ImplementationRepository::_TAO_Administration_Strategized_Proxy_Broker::get_strategy (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((CORBA::SystemException))
{
  TAO::Collocation_Strategy strategy =
    TAO_ORB_Core::collocation_strategy (obj ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (TAO::TAO_CS_REMOTE_STRATEGY);
  
  return strategy;
}

void
POA_ImplementationRepository::_TAO_Administration_Strategized_Proxy_Broker::dispatch (
    CORBA::Object_ptr obj,
    CORBA::Object_out forward_obj,
    TAO::Argument ** args,
    int num_args,
    const char * op,
    size_t op_len,
    TAO::Collocation_Strategy strategy
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((CORBA::Exception))
{
  TAO_Object_Adapter::Servant_Upcall servant_upcall (
      obj->_stubobj ()->servant_orb_var ()->orb_core ()
    );
  
  TAO_Collocated_Skeleton collocated_skel;
  TAO_Abstract_ServantBase *servant = 0;
  
  if (strategy == TAO::TAO_CS_THRU_POA_STRATEGY)
    {
      servant_upcall.prepare_for_upcall (
          obj->_stubobj ()->object_key (),
          op,
          forward_obj
          ACE_ENV_ARG_PARAMETER
        );
      ACE_CHECK;
      
      servant_upcall.pre_invoke_collocated_request (
          ACE_ENV_SINGLE_ARG_PARAMETER
        );
      ACE_CHECK;
      
      servant = servant_upcall.servant ();
    }
  else
    {
      servant = obj->_servant ();
    }
  
  int status = servant->_find (op,
                               collocated_skel,
                               strategy,
                               op_len);
  
  if (status == -1)
    {
      ACE_THROW (CORBA::BAD_OPERATION ());
    }
  
  ACE_TRY
    {
      collocated_skel (servant,
                       args,
                       num_args
                       ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
#if (TAO_HAS_MINIMUM_CORBA == 0)
  ACE_CATCH (PortableServer::ForwardRequest, forward_request)
    {
      forward_obj =
        CORBA::Object::_duplicate (forward_request.forward_reference.in ());
      return;
    }
#else
  ACE_CATCHANY
    {
      ACE_UNUSED_ARG (forward_obj);
      ACE_RE_THROW;
    }
#endif /* TAO_HAS_MINIMUM_CORBA */
  ACE_ENDTRY;
  ACE_CHECK;
}

//
//        End Strategized Proxy Broker Implementation
///////////////////////////////////////////////////////////////////////

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:648

TAO::Collocation_Proxy_Broker *
ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function (CORBA::Object_ptr)
{
  return
    ::POA_ImplementationRepository::_TAO_Administration_Strategized_Proxy_Broker::the_TAO_Administration_Strategized_Proxy_Broker ();
}

int
ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_Initializer (size_t)
{
  ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer = 
    ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function;
  
  return 0;
}

static int
ImplementationRepository__TAO_Administration_Proxy_Broker_Stub_Factory_Initializer_Scarecrow =
  ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_Initializer (
      reinterpret_cast<
          size_t> (
          ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_Initializer
        )
    );


///////////////////////////////////////////////////////////////////////
//                 ThruPOA Proxy  Implementation
//

// TAO_IDL - Generated from
// be/be_visitor_interface/thru_poa_proxy_impl_ss.cpp:37

POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::_TAO_Administration_ThruPOA_Proxy_Impl (void)
{}

// ThruPOA Implementation of the IDL interface methods

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::activate_server (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound,
    ::ImplementationRepository::CannotActivate
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->activate_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::activate_server_with_startup (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound,
    ::ImplementationRepository::CannotActivate
  ))
{
  ((TAO::Arg_Traits< ::CORBA::Char *>::ret_val *) args[0])->arg () =
    reinterpret_cast<
        POA_ImplementationRepository::Administration_ptr> (
        servant->_downcast (
            "IDL:ImplementationRepository/Administration:1.0"
          )
      )->activate_server_with_startup (
          ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< CORBA::Long>::in_arg_val *) args[2])->arg ()
          ACE_ENV_ARG_PARAMETER
        );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::register_server (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::AlreadyRegistered,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->register_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val *) args[2])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::reregister_server (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::AlreadyRegistered,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->reregister_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val *) args[2])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::remove_server (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->remove_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::shutdown_server (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->shutdown_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::server_is_running (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->server_is_running (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::Address>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::ServerObject>::in_arg_val *) args[3])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::server_is_shutting_down (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->server_is_shutting_down (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::find (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->find (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::ServerInformation>::out_arg_val *) args[2])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::list (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->list (
        ((TAO::Arg_Traits< CORBA::ULong>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::ServerInformationIterator>::out_arg_val *) args[3])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::shutdown_repo (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument **,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->shutdown_repo (
        ACE_ENV_SINGLE_ARG_PARAMETER
      );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_Administration_ThruPOA_Proxy_Impl::find_ior (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  ((TAO::Arg_Traits< ::CORBA::Char *>::ret_val *) args[0])->arg () =
    reinterpret_cast<
        POA_ImplementationRepository::Administration_ptr> (
        servant->_downcast (
            "IDL:ImplementationRepository/Administration:1.0"
          )
      )->find_ior (
          ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
          ACE_ENV_ARG_PARAMETER
        );
  ACE_CHECK;
}

//
//           End ThruPOA Proxy Implementation
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::_TAO_Administration_Direct_Proxy_Impl (void)
{}

// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::activate_server (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound,
    ::ImplementationRepository::CannotActivate
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->activate_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::activate_server_with_startup (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound,
    ::ImplementationRepository::CannotActivate
  ))
{
  ((TAO::Arg_Traits< ::CORBA::Char *>::ret_val *) args[0])->arg () =
    reinterpret_cast<
        POA_ImplementationRepository::Administration_ptr> (
        servant->_downcast (
            "IDL:ImplementationRepository/Administration:1.0"
          )
      )->activate_server_with_startup (
          ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< CORBA::Long>::in_arg_val *) args[2])->arg ()
          ACE_ENV_ARG_PARAMETER
        );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::register_server (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::AlreadyRegistered,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->register_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val *) args[2])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::reregister_server (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::AlreadyRegistered,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->reregister_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val *) args[2])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::remove_server (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->remove_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::shutdown_server (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->shutdown_server (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::server_is_running (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->server_is_running (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::Address>::in_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::ServerObject>::in_arg_val *) args[3])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::server_is_shutting_down (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->server_is_shutting_down (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::find (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->find (
        ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::ServerInformation>::out_arg_val *) args[2])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::list (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->list (
        ((TAO::Arg_Traits< CORBA::ULong>::in_arg_val *) args[1])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val *) args[2])->arg (),
        ((TAO::Arg_Traits< ::ImplementationRepository::ServerInformationIterator>::out_arg_val *) args[3])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::shutdown_repo (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::Administration_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/Administration:1.0"
        )
    )->shutdown_repo (
        ACE_ENV_SINGLE_ARG_PARAMETER
      );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_Administration_Direct_Proxy_Impl::find_ior (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  ((TAO::Arg_Traits< ::CORBA::Char *>::ret_val *) args[0])->arg () =
    reinterpret_cast<
        POA_ImplementationRepository::Administration_ptr> (
        servant->_downcast (
            "IDL:ImplementationRepository/Administration:1.0"
          )
      )->find_ior (
          ((TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val *) args[1])->arg ()
          ACE_ENV_ARG_PARAMETER
        );
  ACE_CHECK;
}

//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////

// TAO_IDL - Generated from 
// be/be_visitor_interface/interface_ss.cpp:97

POA_ImplementationRepository::Administration::Administration (void)
{
  this->optable_ = &tao_ImplementationRepository_Administration_optable;
}

POA_ImplementationRepository::Administration::Administration (const Administration& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs)
{
}

POA_ImplementationRepository::Administration::~Administration (void)
{
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::activate_server_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_NotFound,
      ImplementationRepository::_tc_CannotActivate
    };
  static size_t const _tao_nexceptions = 2;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server
    };
  
  static size_t const _tao_nargs = 2;
  
  TAO_ImplementationRepository_Administration_activate_server_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::activate_server_with_startup_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_NotFound,
      ImplementationRepository::_tc_CannotActivate
    };
  static size_t const _tao_nexceptions = 2;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< ::CORBA::Char *>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  TAO::SArg_Traits< CORBA::Long>::in_arg_val _tao_check_startup;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_check_startup
    };
  
  static size_t const _tao_nargs = 3;
  
  TAO_ImplementationRepository_Administration_activate_server_with_startup_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::register_server_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_AlreadyRegistered,
      ImplementationRepository::_tc_NotFound
    };
  static size_t const _tao_nexceptions = 2;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  TAO::SArg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val _tao_options;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_options
    };
  
  static size_t const _tao_nargs = 3;
  
  TAO_ImplementationRepository_Administration_register_server_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::reregister_server_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_AlreadyRegistered,
      ImplementationRepository::_tc_NotFound
    };
  static size_t const _tao_nexceptions = 2;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  TAO::SArg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val _tao_options;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_options
    };
  
  static size_t const _tao_nargs = 3;
  
  TAO_ImplementationRepository_Administration_reregister_server_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::remove_server_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_NotFound
    };
  static size_t const _tao_nexceptions = 1;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server
    };
  
  static size_t const _tao_nargs = 2;
  
  TAO_ImplementationRepository_Administration_remove_server_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::shutdown_server_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_NotFound
    };
  static size_t const _tao_nexceptions = 1;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server
    };
  
  static size_t const _tao_nargs = 2;
  
  TAO_ImplementationRepository_Administration_shutdown_server_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::server_is_running_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_NotFound
    };
  static size_t const _tao_nexceptions = 1;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  TAO::SArg_Traits< ::ImplementationRepository::Address>::in_arg_val _tao_addr;
  TAO::SArg_Traits< ::ImplementationRepository::ServerObject>::in_arg_val _tao_server_object;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_addr,
      &_tao_server_object
    };
  
  static size_t const _tao_nargs = 4;
  
  TAO_ImplementationRepository_Administration_server_is_running_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::server_is_shutting_down_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_NotFound
    };
  static size_t const _tao_nexceptions = 1;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server
    };
  
  static size_t const _tao_nargs = 2;
  
  TAO_ImplementationRepository_Administration_server_is_shutting_down_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::find_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_NotFound
    };
  static size_t const _tao_nexceptions = 1;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_server;
  TAO::SArg_Traits< ::ImplementationRepository::ServerInformation>::out_arg_val _tao_info;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_info
    };
  
  static size_t const _tao_nargs = 3;
  
  TAO_ImplementationRepository_Administration_find_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::list_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = {};
  static size_t const _tao_nexceptions = 0;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  TAO::SArg_Traits< CORBA::ULong>::in_arg_val _tao_how_many;
  TAO::SArg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val _tao_server_list;
  TAO::SArg_Traits< ::ImplementationRepository::ServerInformationIterator>::out_arg_val _tao_server_iterator;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_how_many,
      &_tao_server_list,
      &_tao_server_iterator
    };
  
  static size_t const _tao_nargs = 4;
  
  TAO_ImplementationRepository_Administration_list_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::shutdown_repo_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = {};
  static size_t const _tao_nexceptions = 0;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval
    };
  
  static size_t const _tao_nargs = 1;
  
  TAO_ImplementationRepository_Administration_shutdown_repo_Upcall_Command _tao_upcall_command (
      _tao_impl);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::Administration::find_ior_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = 
    {
      ImplementationRepository::_tc_NotFound
    };
  static size_t const _tao_nexceptions = 1;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::Administration * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::Administration *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< ::CORBA::Char *>::ret_val _tao_retval;
  TAO::SArg_Traits< ::CORBA::Char *>::in_arg_val _tao_object_name;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_object_name
    };
  
  static size_t const _tao_nargs = 2;
  
  TAO_ImplementationRepository_Administration_find_ior_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_interface/interface_ss.cpp:162

void POA_ImplementationRepository::Administration::_is_a_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  TAO_InputCDR &_tao_in = _tao_server_request.incoming ();
  
  POA_ImplementationRepository::Administration *_tao_impl =
    (POA_ImplementationRepository::Administration *) _tao_servant;
  
  CORBA::Boolean _tao_retval = 0;
  CORBA::String_var value;
  
  if (!(_tao_in >> value.out ()))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
  
  _tao_retval = _tao_impl->_is_a (value.in () ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << CORBA::Any::from_boolean (_tao_retval)))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::Administration::_non_existent_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  POA_ImplementationRepository::Administration *_tao_impl =
    (POA_ImplementationRepository::Administration *) _tao_servant;
  
  CORBA::Boolean _tao_retval =
    _tao_impl->_non_existent (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << CORBA::Any::from_boolean (_tao_retval)))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::Administration::_interface_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  TAO_IFR_Client_Adapter *_tao_adapter =
    ACE_Dynamic_Service<TAO_IFR_Client_Adapter>::instance (
        TAO_ORB_Core::ifr_client_adapter_name ()
      );
    
  if (_tao_adapter == 0)
    {
      ACE_THROW (CORBA::INTF_REPOS ());
    }
  
  POA_ImplementationRepository::Administration *_tao_impl =
    (POA_ImplementationRepository::Administration *) _tao_servant;
  
  CORBA::InterfaceDef_ptr _tao_retval = 
    _tao_impl->_get_interface (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  CORBA::Boolean _tao_result =
    _tao_adapter->interfacedef_cdr_insert (
        _tao_out,
        _tao_retval
      );
  
  _tao_adapter->dispose (_tao_retval);
  
  if (_tao_result == 0)
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::Administration::_component_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_object_reference,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  POA_ImplementationRepository::Administration *_tao_impl =
    (POA_ImplementationRepository::Administration *) _tao_object_reference;
  
  CORBA::Object_var _tao_retval =
    _tao_impl->_get_component (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << _tao_retval.in ()))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

CORBA::Boolean POA_ImplementationRepository::Administration::_is_a (
    const char* value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:ImplementationRepository/Administration:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

void* POA_ImplementationRepository::Administration::_downcast (
    const char* logical_type_id
  )
{
  if (ACE_OS::strcmp (logical_type_id,
                      "IDL:ImplementationRepository/Administration:1.0") == 0)
    {
      return static_cast<POA_ImplementationRepository::Administration_ptr> (this);
    }
  
  if (ACE_OS::strcmp (logical_type_id,
                      "IDL:omg.org/CORBA/Object:1.0") == 0)
    {
      return static_cast<PortableServer::Servant> (this);
    }
  
  return 0;
}

const char* POA_ImplementationRepository::Administration::_interface_repository_id (void) const
{
  return "IDL:ImplementationRepository/Administration:1.0";
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:584

void POA_ImplementationRepository::Administration::_dispatch (
    TAO_ServerRequest &req,
    void *servant_upcall
    ACE_ENV_ARG_DECL
  )
{
  this->synchronous_upcall_dispatch (req,
                                     servant_upcall,
                                     this
                                     ACE_ENV_ARG_PARAMETER);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:526

ImplementationRepository::Administration *
POA_ImplementationRepository::Administration::_this (ACE_ENV_SINGLE_ARG_DECL)
{
  TAO_Stub *stub = this->_create_stub (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK_RETURN (0);
  
  TAO_Stub_Auto_Ptr safe_stub (stub);
  CORBA::Object_ptr tmp = CORBA::Object::_nil ();
  
  if (stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ())
    {
      ACE_NEW_RETURN (
          tmp,
          CORBA::Object (stub, 1, this),
          0
        );
    }
  else
    {
      ACE_NEW_RETURN (
          tmp,
          CORBA::Object (stub, 0, this),
          0
        );
    }
  
  CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();
  
  typedef ::ImplementationRepository::Administration STUB_SCOPED_NAME;
  return
    TAO::Narrow_Utils<STUB_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer
      );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:1538

class TAO_ImplementationRepository_ServerInformationIterator_Perfect_Hash_OpTable
  : public TAO_Perfect_Hash_OpTable
{
private:
  unsigned int hash (const char *str, unsigned int len);

public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len);
};

/* C++ code produced by gperf version 2.8 (ACE version) */
/* Command-line: /home/ossama/work/skeleton-refactor/ACE_wrappers/bin/gperf -m -M -J -c -C -D -E -T -f 0 -F 0,0,0 -a -o -t -p -K opname_ -L C++ -Z TAO_ImplementationRepository_ServerInformationIterator_Perfect_Hash_OpTable -N lookup  */
unsigned int
TAO_ImplementationRepository_ServerInformationIterator_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
{
  static const unsigned char asso_values[] =
    {
#if defined (ACE_MVS)
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16,  0,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16,  0,
     16, 16,  0,  5, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16,  0,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16,  0, 16, 16, 16, 16,  0, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16,
#else
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
     16, 16, 16, 16, 16,  0, 16,  0, 16, 16,
      0,  5, 16, 16, 16, 16, 16, 16, 16, 16,
      0, 16, 16, 16, 16, 16,  0, 16, 16, 16,
     16,  0, 16, 16, 16, 16, 16, 16,
#endif /* ACE_MVS */
    };
  return len + asso_values[(int) str[len - 1]] + asso_values[(int) str[0]];
}

const class TAO_operation_db_entry *
TAO_ImplementationRepository_ServerInformationIterator_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 6,
      MIN_WORD_LENGTH = 5,
      MAX_WORD_LENGTH = 13,
      MIN_HASH_VALUE = 5,
      MAX_HASH_VALUE = 15,
      HASH_VALUE_RANGE = 11,
      DUPLICATES = 0,
      WORDLIST_SIZE = 11
    };

  static const class TAO_operation_db_entry  wordlist[] =
    {
      {"",0,0,0},{"",0,0,0},{"",0,0,0},{"",0,0,0},{"",0,0,0},
      {"_is_a", &POA_ImplementationRepository::ServerInformationIterator::_is_a_skel, 0, 0},
      {"next_n", &POA_ImplementationRepository::ServerInformationIterator::next_n_skel, &POA_ImplementationRepository::_TAO_ServerInformationIterator_ThruPOA_Proxy_Impl::next_n, &POA_ImplementationRepository::_TAO_ServerInformationIterator_Direct_Proxy_Impl::next_n},
      {"destroy", &POA_ImplementationRepository::ServerInformationIterator::destroy_skel, &POA_ImplementationRepository::_TAO_ServerInformationIterator_ThruPOA_Proxy_Impl::destroy, &POA_ImplementationRepository::_TAO_ServerInformationIterator_Direct_Proxy_Impl::destroy},
      {"",0,0,0},{"",0,0,0},
      {"_component", &POA_ImplementationRepository::ServerInformationIterator::_component_skel, 0, 0},
      {"",0,0,0},{"",0,0,0},
      {"_non_existent", &POA_ImplementationRepository::ServerInformationIterator::_non_existent_skel, 0, 0},
      {"",0,0,0},
      {"_interface", &POA_ImplementationRepository::ServerInformationIterator::_interface_skel, 0, 0},
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int key = hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
        {
          const char *s = wordlist[key].opname_;

          if (*str == *s && !strncmp (str + 1, s + 1, len - 1))
            return &wordlist[key];
        }
    }
  return 0;
}

static TAO_ImplementationRepository_ServerInformationIterator_Perfect_Hash_OpTable tao_ImplementationRepository_ServerInformationIterator_optable;

// TAO_IDL - Generated from
// be/be_visitor_interface/upcall_command_ss.cpp:49

// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_ServerInformationIterator_next_n_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_ServerInformationIterator_next_n_Upcall_Command (
    POA_ImplementationRepository::ServerInformationIterator * servant,
    TAO::Argument * const args[])
    : servant_ (servant)
    , args_ (args)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    static_cast<TAO::SArg_Traits< ACE_InputCDR::to_boolean>::ret_val *> (this->args_[0])->arg () =
      this->servant_->next_n (
        static_cast<TAO::SArg_Traits< CORBA::ULong>::in_arg_val *> (this->args_[1])->arg (),
        static_cast<TAO::SArg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val *> (this->args_[2])->arg ()
        ACE_ENV_ARG_PARAMETER
      );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::ServerInformationIterator * const servant_;
  TAO::Argument * const * const args_;

};


// TAO_IDL - Generated from
// be/be_visitor_operation/upcall_command_ss.cpp:52

class TAO_ImplementationRepository_ServerInformationIterator_destroy_Upcall_Command
  : public TAO::Upcall_Command
{
public:
  
  inline TAO_ImplementationRepository_ServerInformationIterator_destroy_Upcall_Command (
    POA_ImplementationRepository::ServerInformationIterator * servant)
    : servant_ (servant)
  {
  }
  
  virtual void execute (ACE_ENV_SINGLE_ARG_DECL)
  {
    this->servant_->destroy (
      ACE_ENV_SINGLE_ARG_PARAMETER
    );
    ACE_CHECK;
  }

private:
  
  POA_ImplementationRepository::ServerInformationIterator * const servant_;

};

///////////////////////////////////////////////////////////////////////
//            Strategized Proxy Broker Implementation
//

// TAO_IDL - Generated from
// be/be_visitor_interface/strategized_proxy_broker_ss.cpp:40

// Factory function Implementation.
POA_ImplementationRepository::_TAO_ServerInformationIterator_Strategized_Proxy_Broker *
POA_ImplementationRepository::_TAO_ServerInformationIterator_Strategized_Proxy_Broker::the_TAO_ServerInformationIterator_Strategized_Proxy_Broker (void)
{
  static POA_ImplementationRepository::_TAO_ServerInformationIterator_Strategized_Proxy_Broker
  strategized_proxy_broker;
  
  return &strategized_proxy_broker;
}

POA_ImplementationRepository::_TAO_ServerInformationIterator_Strategized_Proxy_Broker::_TAO_ServerInformationIterator_Strategized_Proxy_Broker (void)
{
}

POA_ImplementationRepository::_TAO_ServerInformationIterator_Strategized_Proxy_Broker::~_TAO_ServerInformationIterator_Strategized_Proxy_Broker (void)
{
}

TAO::Collocation_Strategy
POA_ImplementationRepository::_TAO_ServerInformationIterator_Strategized_Proxy_Broker::get_strategy (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((CORBA::SystemException))
{
  TAO::Collocation_Strategy strategy =
    TAO_ORB_Core::collocation_strategy (obj ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (TAO::TAO_CS_REMOTE_STRATEGY);
  
  return strategy;
}

void
POA_ImplementationRepository::_TAO_ServerInformationIterator_Strategized_Proxy_Broker::dispatch (
    CORBA::Object_ptr obj,
    CORBA::Object_out forward_obj,
    TAO::Argument ** args,
    int num_args,
    const char * op,
    size_t op_len,
    TAO::Collocation_Strategy strategy
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((CORBA::Exception))
{
  TAO_Object_Adapter::Servant_Upcall servant_upcall (
      obj->_stubobj ()->servant_orb_var ()->orb_core ()
    );
  
  TAO_Collocated_Skeleton collocated_skel;
  TAO_Abstract_ServantBase *servant = 0;
  
  if (strategy == TAO::TAO_CS_THRU_POA_STRATEGY)
    {
      servant_upcall.prepare_for_upcall (
          obj->_stubobj ()->object_key (),
          op,
          forward_obj
          ACE_ENV_ARG_PARAMETER
        );
      ACE_CHECK;
      
      servant_upcall.pre_invoke_collocated_request (
          ACE_ENV_SINGLE_ARG_PARAMETER
        );
      ACE_CHECK;
      
      servant = servant_upcall.servant ();
    }
  else
    {
      servant = obj->_servant ();
    }
  
  int status = servant->_find (op,
                               collocated_skel,
                               strategy,
                               op_len);
  
  if (status == -1)
    {
      ACE_THROW (CORBA::BAD_OPERATION ());
    }
  
  ACE_TRY
    {
      collocated_skel (servant,
                       args,
                       num_args
                       ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
#if (TAO_HAS_MINIMUM_CORBA == 0)
  ACE_CATCH (PortableServer::ForwardRequest, forward_request)
    {
      forward_obj =
        CORBA::Object::_duplicate (forward_request.forward_reference.in ());
      return;
    }
#else
  ACE_CATCHANY
    {
      ACE_UNUSED_ARG (forward_obj);
      ACE_RE_THROW;
    }
#endif /* TAO_HAS_MINIMUM_CORBA */
  ACE_ENDTRY;
  ACE_CHECK;
}

//
//        End Strategized Proxy Broker Implementation
///////////////////////////////////////////////////////////////////////

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:648

TAO::Collocation_Proxy_Broker *
ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function (CORBA::Object_ptr)
{
  return
    ::POA_ImplementationRepository::_TAO_ServerInformationIterator_Strategized_Proxy_Broker::the_TAO_ServerInformationIterator_Strategized_Proxy_Broker ();
}

int
ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_Initializer (size_t)
{
  ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer = 
    ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function;
  
  return 0;
}

static int
ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Stub_Factory_Initializer_Scarecrow =
  ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_Initializer (
      reinterpret_cast<
          size_t> (
          ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_Initializer
        )
    );


///////////////////////////////////////////////////////////////////////
//                 ThruPOA Proxy  Implementation
//

// TAO_IDL - Generated from
// be/be_visitor_interface/thru_poa_proxy_impl_ss.cpp:37

POA_ImplementationRepository::_TAO_ServerInformationIterator_ThruPOA_Proxy_Impl::_TAO_ServerInformationIterator_ThruPOA_Proxy_Impl (void)
{}

// ThruPOA Implementation of the IDL interface methods

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_ServerInformationIterator_ThruPOA_Proxy_Impl::next_n (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  ((TAO::Arg_Traits< ACE_InputCDR::to_boolean>::ret_val *) args[0])->arg () =
    reinterpret_cast<
        POA_ImplementationRepository::ServerInformationIterator_ptr> (
        servant->_downcast (
            "IDL:ImplementationRepository/ServerInformationIterator:1.0"
          )
      )->next_n (
          ((TAO::Arg_Traits< CORBA::ULong>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val *) args[2])->arg ()
          ACE_ENV_ARG_PARAMETER
        );
  ACE_CHECK;
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:52

void
POA_ImplementationRepository::_TAO_ServerInformationIterator_ThruPOA_Proxy_Impl::destroy (
    TAO_Abstract_ServantBase *servant,
    TAO::Argument **,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::ServerInformationIterator_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/ServerInformationIterator:1.0"
        )
    )->destroy (
        ACE_ENV_SINGLE_ARG_PARAMETER
      );
  ACE_CHECK;
}

//
//           End ThruPOA Proxy Implementation
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
//                 Direct Proxy  Implementation
//

POA_ImplementationRepository::_TAO_ServerInformationIterator_Direct_Proxy_Impl::_TAO_ServerInformationIterator_Direct_Proxy_Impl (void)
{}

// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_ServerInformationIterator_Direct_Proxy_Impl::next_n (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument ** args,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  ((TAO::Arg_Traits< ACE_InputCDR::to_boolean>::ret_val *) args[0])->arg () =
    reinterpret_cast<
        POA_ImplementationRepository::ServerInformationIterator_ptr> (
        servant->_downcast (
            "IDL:ImplementationRepository/ServerInformationIterator:1.0"
          )
      )->next_n (
          ((TAO::Arg_Traits< CORBA::ULong>::in_arg_val *) args[1])->arg (),
          ((TAO::Arg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val *) args[2])->arg ()
          ACE_ENV_ARG_PARAMETER
        );
  ACE_CHECK;
}// TAO_IDL - Generated from 
// be/be_visitor_operation/direct_proxy_impl_ss.cpp:42

void
POA_ImplementationRepository::_TAO_ServerInformationIterator_Direct_Proxy_Impl::destroy (
    TAO_Abstract_ServantBase  *servant,
    TAO::Argument **,
    int 
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  reinterpret_cast<
      POA_ImplementationRepository::ServerInformationIterator_ptr> (
      servant->_downcast (
          "IDL:ImplementationRepository/ServerInformationIterator:1.0"
        )
    )->destroy (
        ACE_ENV_SINGLE_ARG_PARAMETER
      );
  ACE_CHECK;
}

//
//           End Direct Proxy Implementation
///////////////////////////////////////////////////////////////////////

// TAO_IDL - Generated from 
// be/be_visitor_interface/interface_ss.cpp:97

POA_ImplementationRepository::ServerInformationIterator::ServerInformationIterator (void)
{
  this->optable_ = &tao_ImplementationRepository_ServerInformationIterator_optable;
}

POA_ImplementationRepository::ServerInformationIterator::ServerInformationIterator (const ServerInformationIterator& rhs)
  : TAO_Abstract_ServantBase (rhs),
    TAO_ServantBase (rhs)
{
}

POA_ImplementationRepository::ServerInformationIterator::~ServerInformationIterator (void)
{
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::ServerInformationIterator::next_n_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = {};
  static size_t const _tao_nexceptions = 0;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::ServerInformationIterator * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::ServerInformationIterator *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::SArg_Traits< CORBA::ULong>::in_arg_val _tao_how_many;
  TAO::SArg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val _tao_server_list;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval,
      &_tao_how_many,
      &_tao_server_list
    };
  
  static size_t const _tao_nargs = 3;
  
  TAO_ImplementationRepository_ServerInformationIterator_next_n_Upcall_Command _tao_upcall_command (
      _tao_impl, _tao_args);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_operation/operation_ss.cpp:165

void POA_ImplementationRepository::ServerInformationIterator::destroy_skel (
    TAO_ServerRequest &_tao_server_request,
    void *_tao_servant,
    void * TAO_INTERCEPTOR (_tao_servant_upcall)
    ACE_ENV_ARG_DECL
  )
{
  
  
#if TAO_HAS_INTERCEPTORS == 1
  static CORBA::TypeCode_ptr const _tao_exceptions[] = {};
  static size_t const _tao_nexceptions = 0;
#endif /* TAO_HAS_INTERCEPTORS */
  
  POA_ImplementationRepository::ServerInformationIterator * const _tao_impl =
    static_cast<
        POA_ImplementationRepository::ServerInformationIterator *> (
        _tao_servant
      );
  
  TAO::SArg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument * const _tao_args [] =
    {
      &_tao_retval
    };
  
  static size_t const _tao_nargs = 1;
  
  TAO_ImplementationRepository_ServerInformationIterator_destroy_Upcall_Command _tao_upcall_command (
      _tao_impl);
  
  TAO::Upcall_Wrapper _tao_upcall_wrapper;
  _tao_upcall_wrapper.upcall (_tao_server_request
                              , _tao_args
                              , _tao_nargs
                              , _tao_upcall_command
  
#if TAO_HAS_INTERCEPTORS == 1
                              , _tao_servant_upcall
                              , _tao_impl
                              , _tao_exceptions
                              , _tao_nexceptions
#endif  /* TAO_HAS_INTERCEPTORS == 1 */
  
                              ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
}

// TAO_IDL - Generated from 
// be/be_visitor_interface/interface_ss.cpp:162

void POA_ImplementationRepository::ServerInformationIterator::_is_a_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  TAO_InputCDR &_tao_in = _tao_server_request.incoming ();
  
  POA_ImplementationRepository::ServerInformationIterator *_tao_impl =
    (POA_ImplementationRepository::ServerInformationIterator *) _tao_servant;
  
  CORBA::Boolean _tao_retval = 0;
  CORBA::String_var value;
  
  if (!(_tao_in >> value.out ()))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
  
  _tao_retval = _tao_impl->_is_a (value.in () ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << CORBA::Any::from_boolean (_tao_retval)))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::ServerInformationIterator::_non_existent_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  POA_ImplementationRepository::ServerInformationIterator *_tao_impl =
    (POA_ImplementationRepository::ServerInformationIterator *) _tao_servant;
  
  CORBA::Boolean _tao_retval =
    _tao_impl->_non_existent (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << CORBA::Any::from_boolean (_tao_retval)))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::ServerInformationIterator::_interface_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_servant,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  TAO_IFR_Client_Adapter *_tao_adapter =
    ACE_Dynamic_Service<TAO_IFR_Client_Adapter>::instance (
        TAO_ORB_Core::ifr_client_adapter_name ()
      );
    
  if (_tao_adapter == 0)
    {
      ACE_THROW (CORBA::INTF_REPOS ());
    }
  
  POA_ImplementationRepository::ServerInformationIterator *_tao_impl =
    (POA_ImplementationRepository::ServerInformationIterator *) _tao_servant;
  
  CORBA::InterfaceDef_ptr _tao_retval = 
    _tao_impl->_get_interface (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  CORBA::Boolean _tao_result =
    _tao_adapter->interfacedef_cdr_insert (
        _tao_out,
        _tao_retval
      );
  
  _tao_adapter->dispose (_tao_retval);
  
  if (_tao_result == 0)
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

void POA_ImplementationRepository::ServerInformationIterator::_component_skel (
    TAO_ServerRequest &_tao_server_request, 
    void * _tao_object_reference,
    void * /* Servant_Upcall */
    ACE_ENV_ARG_DECL
  )
{
  POA_ImplementationRepository::ServerInformationIterator *_tao_impl =
    (POA_ImplementationRepository::ServerInformationIterator *) _tao_object_reference;
  
  CORBA::Object_var _tao_retval =
    _tao_impl->_get_component (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK;
  
  _tao_server_request.init_reply ();
  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
  
  if (!(_tao_out << _tao_retval.in ()))
    {
      ACE_THROW (CORBA::MARSHAL ());
    }
}

CORBA::Boolean POA_ImplementationRepository::ServerInformationIterator::_is_a (
    const char* value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:ImplementationRepository/ServerInformationIterator:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

void* POA_ImplementationRepository::ServerInformationIterator::_downcast (
    const char* logical_type_id
  )
{
  if (ACE_OS::strcmp (logical_type_id,
                      "IDL:ImplementationRepository/ServerInformationIterator:1.0") == 0)
    {
      return static_cast<POA_ImplementationRepository::ServerInformationIterator_ptr> (this);
    }
  
  if (ACE_OS::strcmp (logical_type_id,
                      "IDL:omg.org/CORBA/Object:1.0") == 0)
    {
      return static_cast<PortableServer::Servant> (this);
    }
  
  return 0;
}

const char* POA_ImplementationRepository::ServerInformationIterator::_interface_repository_id (void) const
{
  return "IDL:ImplementationRepository/ServerInformationIterator:1.0";
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:584

void POA_ImplementationRepository::ServerInformationIterator::_dispatch (
    TAO_ServerRequest &req,
    void *servant_upcall
    ACE_ENV_ARG_DECL
  )
{
  this->synchronous_upcall_dispatch (req,
                                     servant_upcall,
                                     this
                                     ACE_ENV_ARG_PARAMETER);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ss.cpp:526

ImplementationRepository::ServerInformationIterator *
POA_ImplementationRepository::ServerInformationIterator::_this (ACE_ENV_SINGLE_ARG_DECL)
{
  TAO_Stub *stub = this->_create_stub (ACE_ENV_SINGLE_ARG_PARAMETER);
  ACE_CHECK_RETURN (0);
  
  TAO_Stub_Auto_Ptr safe_stub (stub);
  CORBA::Object_ptr tmp = CORBA::Object::_nil ();
  
  if (stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ())
    {
      ACE_NEW_RETURN (
          tmp,
          CORBA::Object (stub, 1, this),
          0
        );
    }
  else
    {
      ACE_NEW_RETURN (
          tmp,
          CORBA::Object (stub, 0, this),
          0
        );
    }
  
  CORBA::Object_var obj = tmp;
  (void) safe_stub.release ();
  
  typedef ::ImplementationRepository::ServerInformationIterator STUB_SCOPED_NAME;
  return
    TAO::Narrow_Utils<STUB_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer
      );
}

// TAO_IDL - Generated from
// be/be_visitor_root/root.cpp:1695

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__SARG_TRAITS_TMPLINST_SS_

  template class TAO::SArg_Traits<ImplementationRepository::ServerObject>;

  template class
    TAO::Object_SArg_Traits_T<
        ImplementationRepository::ServerObject_ptr,
        ImplementationRepository::ServerObject_var,
        ImplementationRepository::ServerObject_out,
      >;

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__SARG_TRAITS_TMPLINST_SS_

  template class TAO::SArg_Traits<ImplementationRepository::StartupOptions>;

  template class
    TAO::Var_Size_SArg_Traits_T<
        ImplementationRepository::StartupOptions,
        ImplementationRepository::StartupOptions_var,
        ImplementationRepository::StartupOptions_out
      >;

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__SARG_TRAITS_TMPLINST_SS_

  template class TAO::SArg_Traits<ImplementationRepository::ServerInformation>;

  template class
    TAO::Var_Size_SArg_Traits_T<
        ImplementationRepository::ServerInformation,
        ImplementationRepository::ServerInformation_var,
        ImplementationRepository::ServerInformation_out
      >;

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__SARG_TRAITS_TMPLINST_SS_

  template class TAO::SArg_Traits<ImplementationRepository::ServerInformationList>;

  template class
    TAO::Var_Size_SArg_Traits_T<
        ImplementationRepository::ServerInformationList,
        ImplementationRepository::ServerInformationList_var,
        ImplementationRepository::ServerInformationList_out
      >;

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__SARG_TRAITS_TMPLINST_SS_

  template class TAO::SArg_Traits<ImplementationRepository::ServerInformationIterator>;

  template class
    TAO::Object_SArg_Traits_T<
        ImplementationRepository::ServerInformationIterator_ptr,
        ImplementationRepository::ServerInformationIterator_var,
        ImplementationRepository::ServerInformationIterator_out,
      >;

#endif /* end #if !defined */

  template class
    TAO::Out_Var_Size_SArgument_T<
        ImplementationRepository::ServerInformationList,
        ImplementationRepository::ServerInformationList_out
      >;

  template class
    TAO::In_Var_Size_SArgument_T<
        ImplementationRepository::StartupOptions
      >;

  template class
    TAO::In_Object_SArgument_T<
        ImplementationRepository::ServerObject_ptr
      >;

  template class
    TAO::Out_Var_Size_SArgument_T<
        ImplementationRepository::ServerInformation,
        ImplementationRepository::ServerInformation_out
      >;

  template class
    TAO::Out_Object_SArgument_T<
        ImplementationRepository::ServerInformationIterator_ptr,
        ImplementationRepository::ServerInformationIterator_out
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__SARG_TRAITS_TMPLINST_SS_

# pragma instantiate TAO::SArg_Traits<ImplementationRepository::ServerObject>

# pragma instantiate \
    TAO::Object_SArg_Traits_T< \
        ImplementationRepository::ServerObject_ptr, \
        ImplementationRepository::ServerObject_var, \
        ImplementationRepository::ServerObject_out, \
      >

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__SARG_TRAITS_TMPLINST_SS_

# pragma instantiate TAO::SArg_Traits<ImplementationRepository::StartupOptions>

# pragma instantiate \
    TAO::Var_Size_SArg_Traits_T< \
        ImplementationRepository::StartupOptions, \
        ImplementationRepository::StartupOptions_var, \
        ImplementationRepository::StartupOptions_out \
      >

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__SARG_TRAITS_TMPLINST_SS_

# pragma instantiate TAO::SArg_Traits<ImplementationRepository::ServerInformation>

# pragma instantiate \
    TAO::Var_Size_SArg_Traits_T< \
        ImplementationRepository::ServerInformation, \
        ImplementationRepository::ServerInformation_var, \
        ImplementationRepository::ServerInformation_out \
      >

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__SARG_TRAITS_TMPLINST_SS_

# pragma instantiate TAO::SArg_Traits<ImplementationRepository::ServerInformationList>

# pragma instantiate \
    TAO::Var_Size_SArg_Traits_T< \
        ImplementationRepository::ServerInformationList, \
        ImplementationRepository::ServerInformationList_var, \
        ImplementationRepository::ServerInformationList_out \
      >

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__SARG_TRAITS_TMPLINST_SS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__SARG_TRAITS_TMPLINST_SS_

# pragma instantiate TAO::SArg_Traits<ImplementationRepository::ServerInformationIterator>

# pragma instantiate \
    TAO::Object_SArg_Traits_T< \
        ImplementationRepository::ServerInformationIterator_ptr, \
        ImplementationRepository::ServerInformationIterator_var, \
        ImplementationRepository::ServerInformationIterator_out, \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Out_Var_Size_SArgument_T< \
        ImplementationRepository::ServerInformationList, \
        ImplementationRepository::ServerInformationList_out \
      >

# pragma instantiate \
    TAO::In_Var_Size_SArgument_T< \
        ImplementationRepository::StartupOptions \
      >

# pragma instantiate \
    TAO::In_Object_SArgument_T< \
        ImplementationRepository::ServerObject_ptr \
      >

# pragma instantiate \
    TAO::Out_Var_Size_SArgument_T< \
        ImplementationRepository::ServerInformation, \
        ImplementationRepository::ServerInformation_out \
      >

# pragma instantiate \
    TAO::Out_Object_SArgument_T< \
        ImplementationRepository::ServerInformationIterator_ptr, \
        ImplementationRepository::ServerInformationIterator_out \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */ 

#endif /* ifndef */

