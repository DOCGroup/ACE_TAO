// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:303


#include "ImplRepoC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/Typecode.h"
#include "tao/Any_Impl_T.h"
#include "tao/Any_Dual_Impl_T.h"
#include "tao/Any_Basic_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "ace/OS_NS_string.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "ImplRepoC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:67

// Arg traits specializations.
namespace TAO
{

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::ServerObject>
    : public
        Object_Arg_Traits_T<
            ImplementationRepository::ServerObject_ptr,
            ImplementationRepository::ServerObject_var,
            ImplementationRepository::ServerObject_out,
            TAO::Objref_Traits<ImplementationRepository::ServerObject>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:689

#if !defined (_IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_CS_)
#define _IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::StartupOptions>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::StartupOptions,
            ImplementationRepository::StartupOptions_var,
            ImplementationRepository::StartupOptions_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:689

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::ServerInformation>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::ServerInformation,
            ImplementationRepository::ServerInformation_var,
            ImplementationRepository::ServerInformation_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:421

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::ServerInformationList>
    : public
        Var_Size_Arg_Traits_T<
            ImplementationRepository::ServerInformationList,
            ImplementationRepository::ServerInformationList_var,
            ImplementationRepository::ServerInformationList_out
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_PortableServer_Export Arg_Traits<ImplementationRepository::ServerInformationIterator>
    : public
        Object_Arg_Traits_T<
            ImplementationRepository::ServerInformationIterator_ptr,
            ImplementationRepository::ServerInformationIterator_var,
            ImplementationRepository::ServerInformationIterator_out,
            TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:60

// Traits specializations for ImplementationRepository::ServerObject.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
ImplementationRepository::ServerObject_ptr
TAO::Objref_Traits<ImplementationRepository::ServerObject>::duplicate (
    ImplementationRepository::ServerObject_ptr p
  )
{
  return ImplementationRepository::ServerObject::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<ImplementationRepository::ServerObject>::release (
    ImplementationRepository::ServerObject_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
ImplementationRepository::ServerObject_ptr
TAO::Objref_Traits<ImplementationRepository::ServerObject>::nil (void)
{
  return ImplementationRepository::ServerObject::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<ImplementationRepository::ServerObject>::marshal (
    ImplementationRepository::ServerObject_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::ServerObject::ping (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ServerObject_Proxy_Broker_ == 0)
    {
      ImplementationRepository_ServerObject_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "ping",
      4,
      this->the_TAO_ServerObject_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::ServerObject::shutdown (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ServerObject_Proxy_Broker_ == 0)
    {
      ImplementationRepository_ServerObject_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "shutdown",
      8,
      this->the_TAO_ServerObject_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

ImplementationRepository::ServerObject::ServerObject (void)
 : the_TAO_ServerObject_Proxy_Broker_ (0)
{
  this->ImplementationRepository_ServerObject_setup_collocation ();
}

void
ImplementationRepository::ServerObject::ImplementationRepository_ServerObject_setup_collocation ()
{
  if (::ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ServerObject_Proxy_Broker_ =
        ::ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function_pointer (this);
    }
}

ImplementationRepository::ServerObject::~ServerObject (void)
{}

void 
ImplementationRepository::ServerObject::_tao_any_destructor (void *_tao_void_pointer)
{
  ServerObject *_tao_tmp_pointer =
    static_cast<ServerObject *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

ImplementationRepository::ServerObject_ptr
ImplementationRepository::ServerObject::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ServerObject>::narrow (
        _tao_objref,
        "IDL:ImplementationRepository/ServerObject:1.0",
        ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::ServerObject_ptr
ImplementationRepository::ServerObject::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ServerObject>::unchecked_narrow (
        _tao_objref,
        "IDL:ImplementationRepository/ServerObject:1.0",
        ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::ServerObject_ptr
ImplementationRepository::ServerObject::_duplicate (ServerObject_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
ImplementationRepository::ServerObject::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:ImplementationRepository/ServerObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* ImplementationRepository::ServerObject::_interface_repository_id (void) const
{
  return "IDL:ImplementationRepository/ServerObject:1.0";
}

CORBA::Boolean
ImplementationRepository::ServerObject::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_ServerObject[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  46,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f536572), 
  ACE_NTOHL (0x7665724f), 
  ACE_NTOHL (0x626a6563), 
  ACE_NTOHL (0x743a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:ImplementationRepository/ServerObject:1.0
    13,
  ACE_NTOHL (0x53657276), 
  ACE_NTOHL (0x65724f62), 
  ACE_NTOHL (0x6a656374), 
  ACE_NTOHL (0x0),  // name = ServerObject
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ServerObject (
    CORBA::tk_objref,
    sizeof (_oc_ImplementationRepository_ServerObject),
    (char *) &_oc_ImplementationRepository_ServerObject,
    0,
    sizeof (ImplementationRepository::ServerObject)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ServerObject =
    &_tc_TAO_tc_ImplementationRepository_ServerObject;
}

// TAO_IDL - Generated from 
// be/be_visitor_exception/exception_cs.cpp:63

ImplementationRepository::AlreadyRegistered::AlreadyRegistered (void)
  : CORBA::UserException (
        "IDL:ImplementationRepository/AlreadyRegistered:1.0",
        "AlreadyRegistered"
      )
{
}

ImplementationRepository::AlreadyRegistered::~AlreadyRegistered (void)
{
}

ImplementationRepository::AlreadyRegistered::AlreadyRegistered (const ::ImplementationRepository::AlreadyRegistered &_tao_excp)
  : CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
}

ImplementationRepository::AlreadyRegistered&
ImplementationRepository::AlreadyRegistered::operator= (const ::ImplementationRepository::AlreadyRegistered &_tao_excp)
{
  this->ACE_NESTED_CLASS (CORBA, UserException)::operator= (_tao_excp);
  return *this;
}

void ImplementationRepository::AlreadyRegistered::_tao_any_destructor (void *_tao_void_pointer)
{
  AlreadyRegistered *_tao_tmp_pointer =
    static_cast<AlreadyRegistered*> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

ImplementationRepository::AlreadyRegistered *
ImplementationRepository::AlreadyRegistered::_downcast (CORBA::Exception *_tao_excp)
{
  if (!ACE_OS::strcmp ("IDL:ImplementationRepository/AlreadyRegistered:1.0", _tao_excp->_rep_id ()))
    {
      return dynamic_cast<AlreadyRegistered *> (_tao_excp);
    }
  else
    {
      return 0;
    }
}

CORBA::Exception *ImplementationRepository::AlreadyRegistered::_alloc (void)
{
  CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::ImplementationRepository::AlreadyRegistered, 0);
  return retval;
}

CORBA::Exception *
ImplementationRepository::AlreadyRegistered::_tao_duplicate (void) const
{
  CORBA::Exception *result;
  ACE_NEW_RETURN (
      result,
      ::ImplementationRepository::AlreadyRegistered (*this),
      0
    );
  return result;
}

void ImplementationRepository::AlreadyRegistered::_raise (void) const
{
  TAO_RAISE (*this);
}

void ImplementationRepository::AlreadyRegistered::_tao_encode (
    TAO_OutputCDR &cdr
    ACE_ENV_ARG_DECL
  ) const
{
  if (cdr << *this)
    {
      return;
    }
  
  ACE_THROW (CORBA::MARSHAL ());
}

void ImplementationRepository::AlreadyRegistered::_tao_decode (
    TAO_InputCDR &cdr
    ACE_ENV_ARG_DECL
  )
{
  if (cdr >> *this)
    {
      return;
    }
  
  ACE_THROW (CORBA::MARSHAL ());
}

// TAO extension - the virtual _type method.
CORBA::TypeCode_ptr ImplementationRepository::AlreadyRegistered::_type (void) const
{
  return ::ImplementationRepository::_tc_AlreadyRegistered;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_AlreadyRegistered[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  51,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f416c72), 
  ACE_NTOHL (0x65616479), 
  ACE_NTOHL (0x52656769), 
  ACE_NTOHL (0x73746572), 
  ACE_NTOHL (0x65643a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/AlreadyRegistered:1.0
    18,
  ACE_NTOHL (0x416c7265), 
  ACE_NTOHL (0x61647952), 
  ACE_NTOHL (0x65676973), 
  ACE_NTOHL (0x74657265), 
  ACE_NTOHL (0x64000000),  // name = AlreadyRegistered
  0, // member count
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_AlreadyRegistered (
    CORBA::tk_except,
    sizeof (_oc_ImplementationRepository_AlreadyRegistered),
    (char *) &_oc_ImplementationRepository_AlreadyRegistered,
    0,
    sizeof (ImplementationRepository::AlreadyRegistered)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_AlreadyRegistered =
    &_tc_TAO_tc_ImplementationRepository_AlreadyRegistered;
}

// TAO_IDL - Generated from 
// be/be_visitor_exception/exception_cs.cpp:63

ImplementationRepository::CannotActivate::CannotActivate (void)
  : CORBA::UserException (
        "IDL:ImplementationRepository/CannotActivate:1.0",
        "CannotActivate"
      )
{
}

ImplementationRepository::CannotActivate::~CannotActivate (void)
{
}

ImplementationRepository::CannotActivate::CannotActivate (const ::ImplementationRepository::CannotActivate &_tao_excp)
  : CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
  this->reason = CORBA::string_dup (_tao_excp.reason.in ());
}

ImplementationRepository::CannotActivate&
ImplementationRepository::CannotActivate::operator= (const ::ImplementationRepository::CannotActivate &_tao_excp)
{
  this->ACE_NESTED_CLASS (CORBA, UserException)::operator= (_tao_excp);
  this->reason = CORBA::string_dup (_tao_excp.reason.in ());
  return *this;
}

void ImplementationRepository::CannotActivate::_tao_any_destructor (void *_tao_void_pointer)
{
  CannotActivate *_tao_tmp_pointer =
    static_cast<CannotActivate*> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

ImplementationRepository::CannotActivate *
ImplementationRepository::CannotActivate::_downcast (CORBA::Exception *_tao_excp)
{
  if (!ACE_OS::strcmp ("IDL:ImplementationRepository/CannotActivate:1.0", _tao_excp->_rep_id ()))
    {
      return dynamic_cast<CannotActivate *> (_tao_excp);
    }
  else
    {
      return 0;
    }
}

CORBA::Exception *ImplementationRepository::CannotActivate::_alloc (void)
{
  CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::ImplementationRepository::CannotActivate, 0);
  return retval;
}

CORBA::Exception *
ImplementationRepository::CannotActivate::_tao_duplicate (void) const
{
  CORBA::Exception *result;
  ACE_NEW_RETURN (
      result,
      ::ImplementationRepository::CannotActivate (*this),
      0
    );
  return result;
}

void ImplementationRepository::CannotActivate::_raise (void) const
{
  TAO_RAISE (*this);
}

void ImplementationRepository::CannotActivate::_tao_encode (
    TAO_OutputCDR &cdr
    ACE_ENV_ARG_DECL
  ) const
{
  if (cdr << *this)
    {
      return;
    }
  
  ACE_THROW (CORBA::MARSHAL ());
}

void ImplementationRepository::CannotActivate::_tao_decode (
    TAO_InputCDR &cdr
    ACE_ENV_ARG_DECL
  )
{
  if (cdr >> *this)
    {
      return;
    }
  
  ACE_THROW (CORBA::MARSHAL ());
}



// TAO_IDL - Generated from
// be/be_visitor_exception/exception_ctor.cpp:66

ImplementationRepository::CannotActivate::CannotActivate (
    const char * _tao_reason
  )
  : CORBA::UserException (
        "IDL:ImplementationRepository/CannotActivate:1.0",
        "CannotActivate"
      )
{
  this->reason = CORBA::string_dup (_tao_reason);
}

// TAO extension - the virtual _type method.
CORBA::TypeCode_ptr ImplementationRepository::CannotActivate::_type (void) const
{
  return ::ImplementationRepository::_tc_CannotActivate;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_CannotActivate[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f43616e), 
  ACE_NTOHL (0x6e6f7441), 
  ACE_NTOHL (0x63746976), 
  ACE_NTOHL (0x6174653a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/CannotActivate:1.0
    15,
  ACE_NTOHL (0x43616e6e), 
  ACE_NTOHL (0x6f744163), 
  ACE_NTOHL (0x74697661), 
  ACE_NTOHL (0x74650000),  // name = CannotActivate
  1, // member count
    7,
  ACE_NTOHL (0x72656173), 
  ACE_NTOHL (0x6f6e0000),  // name = reason
    CORBA::tk_string, 
  0U, // string length
};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_CannotActivate (
    CORBA::tk_except,
    sizeof (_oc_ImplementationRepository_CannotActivate),
    (char *) &_oc_ImplementationRepository_CannotActivate,
    0,
    sizeof (ImplementationRepository::CannotActivate)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_CannotActivate =
    &_tc_TAO_tc_ImplementationRepository_CannotActivate;
}

// TAO_IDL - Generated from 
// be/be_visitor_exception/exception_cs.cpp:63

ImplementationRepository::NotFound::NotFound (void)
  : CORBA::UserException (
        "IDL:ImplementationRepository/NotFound:1.0",
        "NotFound"
      )
{
}

ImplementationRepository::NotFound::~NotFound (void)
{
}

ImplementationRepository::NotFound::NotFound (const ::ImplementationRepository::NotFound &_tao_excp)
  : CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
}

ImplementationRepository::NotFound&
ImplementationRepository::NotFound::operator= (const ::ImplementationRepository::NotFound &_tao_excp)
{
  this->ACE_NESTED_CLASS (CORBA, UserException)::operator= (_tao_excp);
  return *this;
}

void ImplementationRepository::NotFound::_tao_any_destructor (void *_tao_void_pointer)
{
  NotFound *_tao_tmp_pointer =
    static_cast<NotFound*> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

ImplementationRepository::NotFound *
ImplementationRepository::NotFound::_downcast (CORBA::Exception *_tao_excp)
{
  if (!ACE_OS::strcmp ("IDL:ImplementationRepository/NotFound:1.0", _tao_excp->_rep_id ()))
    {
      return dynamic_cast<NotFound *> (_tao_excp);
    }
  else
    {
      return 0;
    }
}

CORBA::Exception *ImplementationRepository::NotFound::_alloc (void)
{
  CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::ImplementationRepository::NotFound, 0);
  return retval;
}

CORBA::Exception *
ImplementationRepository::NotFound::_tao_duplicate (void) const
{
  CORBA::Exception *result;
  ACE_NEW_RETURN (
      result,
      ::ImplementationRepository::NotFound (*this),
      0
    );
  return result;
}

void ImplementationRepository::NotFound::_raise (void) const
{
  TAO_RAISE (*this);
}

void ImplementationRepository::NotFound::_tao_encode (
    TAO_OutputCDR &cdr
    ACE_ENV_ARG_DECL
  ) const
{
  if (cdr << *this)
    {
      return;
    }
  
  ACE_THROW (CORBA::MARSHAL ());
}

void ImplementationRepository::NotFound::_tao_decode (
    TAO_InputCDR &cdr
    ACE_ENV_ARG_DECL
  )
{
  if (cdr >> *this)
    {
      return;
    }
  
  ACE_THROW (CORBA::MARSHAL ());
}

// TAO extension - the virtual _type method.
CORBA::TypeCode_ptr ImplementationRepository::NotFound::_type (void) const
{
  return ::ImplementationRepository::_tc_NotFound;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_NotFound[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  42,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f4e6f74), 
  ACE_NTOHL (0x466f756e), 
  ACE_NTOHL (0x643a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:ImplementationRepository/NotFound:1.0
    9,
  ACE_NTOHL (0x4e6f7446), 
  ACE_NTOHL (0x6f756e64), 
  ACE_NTOHL (0x0),  // name = NotFound
  0, // member count
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_NotFound (
    CORBA::tk_except,
    sizeof (_oc_ImplementationRepository_NotFound),
    (char *) &_oc_ImplementationRepository_NotFound,
    0,
    sizeof (ImplementationRepository::NotFound)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_NotFound =
    &_tc_TAO_tc_ImplementationRepository_NotFound;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_EnvironmentVariable[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  53,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f456e76), 
  ACE_NTOHL (0x69726f6e), 
  ACE_NTOHL (0x6d656e74), 
  ACE_NTOHL (0x56617269), 
  ACE_NTOHL (0x61626c65), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
    20,
  ACE_NTOHL (0x456e7669), 
  ACE_NTOHL (0x726f6e6d), 
  ACE_NTOHL (0x656e7456), 
  ACE_NTOHL (0x61726961), 
  ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
  2, // member count
    5,
  ACE_NTOHL (0x6e616d65), 
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_string, 
  0U, // string length
  6,
  ACE_NTOHL (0x76616c75), 
  ACE_NTOHL (0x65000000),  // name = value
    CORBA::tk_string, 
  0U, // string length
};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_EnvironmentVariable (
    CORBA::tk_struct,
    sizeof (_oc_ImplementationRepository_EnvironmentVariable),
    (char *) &_oc_ImplementationRepository_EnvironmentVariable,
    0,
    sizeof (ImplementationRepository::EnvironmentVariable)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_EnvironmentVariable =
    &_tc_TAO_tc_ImplementationRepository_EnvironmentVariable;
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:66

void 
ImplementationRepository::EnvironmentVariable::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  EnvironmentVariable *_tao_tmp_pointer =
    static_cast<EnvironmentVariable *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_Address[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  41,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f416464), 
  ACE_NTOHL (0x72657373), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/Address:1.0
    8,
  ACE_NTOHL (0x41646472), 
  ACE_NTOHL (0x65737300),  // name = Address
    CORBA::tk_string, 
  0U, // string length
};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_Address (
    CORBA::tk_alias,
    sizeof (_oc_ImplementationRepository_Address),
    (char *) &_oc_ImplementationRepository_Address,
    0,
    sizeof (ImplementationRepository::Address)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_Address =
    &_tc_TAO_tc_ImplementationRepository_Address;
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CS_)
#define _IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CS_

ImplementationRepository::EnvironmentList::EnvironmentList (void)
{}

ImplementationRepository::EnvironmentList::EnvironmentList (
    CORBA::ULong max
  )
  : TAO_Unbounded_Sequence<
        ImplementationRepository::EnvironmentVariable
      >
    (max)
{}

ImplementationRepository::EnvironmentList::EnvironmentList (
    CORBA::ULong max,
    CORBA::ULong length,
    ImplementationRepository::EnvironmentVariable * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_Sequence<
        ImplementationRepository::EnvironmentVariable
      >
    (max, length, buffer, release)
{}

ImplementationRepository::EnvironmentList::EnvironmentList (
    const EnvironmentList &seq
  )
  : TAO_Unbounded_Sequence<
        ImplementationRepository::EnvironmentVariable
      >
    (seq)
{}

ImplementationRepository::EnvironmentList::~EnvironmentList (void)
{}

void ImplementationRepository::EnvironmentList::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  EnvironmentList * _tao_tmp_pointer =
    static_cast<EnvironmentList *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_EnvironmentList[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  49,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f456e76), 
  ACE_NTOHL (0x69726f6e), 
  ACE_NTOHL (0x6d656e74), 
  ACE_NTOHL (0x4c697374), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentList:1.0
    16,
  ACE_NTOHL (0x456e7669), 
  ACE_NTOHL (0x726f6e6d), 
  ACE_NTOHL (0x656e744c), 
  ACE_NTOHL (0x69737400),  // name = EnvironmentList
    CORBA::tk_sequence, // typecode kind
  148, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    132, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      53,
      ACE_NTOHL (0x49444c3a), 
      ACE_NTOHL (0x496d706c), 
      ACE_NTOHL (0x656d656e), 
      ACE_NTOHL (0x74617469), 
      ACE_NTOHL (0x6f6e5265), 
      ACE_NTOHL (0x706f7369), 
      ACE_NTOHL (0x746f7279), 
      ACE_NTOHL (0x2f456e76), 
      ACE_NTOHL (0x69726f6e), 
      ACE_NTOHL (0x6d656e74), 
      ACE_NTOHL (0x56617269), 
      ACE_NTOHL (0x61626c65), 
      ACE_NTOHL (0x3a312e30), 
      ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
            20,
      ACE_NTOHL (0x456e7669), 
      ACE_NTOHL (0x726f6e6d), 
      ACE_NTOHL (0x656e7456), 
      ACE_NTOHL (0x61726961), 
      ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
      2, // member count
            5,
      ACE_NTOHL (0x6e616d65), 
      ACE_NTOHL (0x0),  // name = name
            CORBA::tk_string, 
      0U, // string length
      6,
      ACE_NTOHL (0x76616c75), 
      ACE_NTOHL (0x65000000),  // name = value
            CORBA::tk_string, 
      0U, // string length

    0U,

};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_EnvironmentList (
    CORBA::tk_alias,
    sizeof (_oc_ImplementationRepository_EnvironmentList),
    (char *) &_oc_ImplementationRepository_EnvironmentList,
    0,
    sizeof (ImplementationRepository::EnvironmentList)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_EnvironmentList =
    &_tc_TAO_tc_ImplementationRepository_EnvironmentList;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_ActivationMode[] =
{
  TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f416374), 
  ACE_NTOHL (0x69766174), 
  ACE_NTOHL (0x696f6e4d), 
  ACE_NTOHL (0x6f64653a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/ActivationMode:1.0
  15,
  ACE_NTOHL (0x41637469), 
  ACE_NTOHL (0x76617469), 
  ACE_NTOHL (0x6f6e4d6f), 
  ACE_NTOHL (0x64650000),  // name = ActivationMode
  4, // member count
  7,
  ACE_NTOHL (0x4e4f524d), 
  ACE_NTOHL (0x414c0000),  // name = NORMAL
  7,
  ACE_NTOHL (0x4d414e55), 
  ACE_NTOHL (0x414c0000),  // name = MANUAL
  11,
  ACE_NTOHL (0x5045525f), 
  ACE_NTOHL (0x434c4945), 
  ACE_NTOHL (0x4e540000),  // name = PER_CLIENT
  11,
  ACE_NTOHL (0x4155544f), 
  ACE_NTOHL (0x5f535441), 
  ACE_NTOHL (0x52540000),  // name = AUTO_START
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ActivationMode (
    CORBA::tk_enum,
    sizeof (_oc_ImplementationRepository_ActivationMode),
    (char *) &_oc_ImplementationRepository_ActivationMode,
    0,
    sizeof (ImplementationRepository::ActivationMode)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ActivationMode =
    &_tc_TAO_tc_ImplementationRepository_ActivationMode;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_StartupOptions[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f537461), 
  ACE_NTOHL (0x72747570), 
  ACE_NTOHL (0x4f707469), 
  ACE_NTOHL (0x6f6e733a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/StartupOptions:1.0
    15,
  ACE_NTOHL (0x53746172), 
  ACE_NTOHL (0x7475704f), 
  ACE_NTOHL (0x7074696f), 
  ACE_NTOHL (0x6e730000),  // name = StartupOptions
  5, // member count
    13,
  ACE_NTOHL (0x636f6d6d), 
  ACE_NTOHL (0x616e645f), 
  ACE_NTOHL (0x6c696e65), 
  ACE_NTOHL (0x0),  // name = command_line
    CORBA::tk_string, 
  0U, // string length
  12,
  ACE_NTOHL (0x656e7669), 
  ACE_NTOHL (0x726f6e6d), 
  ACE_NTOHL (0x656e7400),  // name = environment
    CORBA::tk_alias, // typecode kind for typedefs
  236, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    49,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x496d706c), 
    ACE_NTOHL (0x656d656e), 
    ACE_NTOHL (0x74617469), 
    ACE_NTOHL (0x6f6e5265), 
    ACE_NTOHL (0x706f7369), 
    ACE_NTOHL (0x746f7279), 
    ACE_NTOHL (0x2f456e76), 
    ACE_NTOHL (0x69726f6e), 
    ACE_NTOHL (0x6d656e74), 
    ACE_NTOHL (0x4c697374), 
    ACE_NTOHL (0x3a312e30), 
    ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentList:1.0
        16,
    ACE_NTOHL (0x456e7669), 
    ACE_NTOHL (0x726f6e6d), 
    ACE_NTOHL (0x656e744c), 
    ACE_NTOHL (0x69737400),  // name = EnvironmentList
        CORBA::tk_sequence, // typecode kind
    148, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      132, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        53,
        ACE_NTOHL (0x49444c3a), 
        ACE_NTOHL (0x496d706c), 
        ACE_NTOHL (0x656d656e), 
        ACE_NTOHL (0x74617469), 
        ACE_NTOHL (0x6f6e5265), 
        ACE_NTOHL (0x706f7369), 
        ACE_NTOHL (0x746f7279), 
        ACE_NTOHL (0x2f456e76), 
        ACE_NTOHL (0x69726f6e), 
        ACE_NTOHL (0x6d656e74), 
        ACE_NTOHL (0x56617269), 
        ACE_NTOHL (0x61626c65), 
        ACE_NTOHL (0x3a312e30), 
        ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
                20,
        ACE_NTOHL (0x456e7669), 
        ACE_NTOHL (0x726f6e6d), 
        ACE_NTOHL (0x656e7456), 
        ACE_NTOHL (0x61726961), 
        ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
        2, // member count
                5,
        ACE_NTOHL (0x6e616d65), 
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_string, 
        0U, // string length
        6,
        ACE_NTOHL (0x76616c75), 
        ACE_NTOHL (0x65000000),  // name = value
                CORBA::tk_string, 
        0U, // string length

      0U,


  18,
  ACE_NTOHL (0x776f726b), 
  ACE_NTOHL (0x696e675f), 
  ACE_NTOHL (0x64697265), 
  ACE_NTOHL (0x63746f72), 
  ACE_NTOHL (0x79000000),  // name = working_directory
    CORBA::tk_string, 
  0U, // string length
  11,
  ACE_NTOHL (0x61637469), 
  ACE_NTOHL (0x76617469), 
  ACE_NTOHL (0x6f6e0000),  // name = activation
    CORBA::tk_enum, // typecode kind
  136, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
    48,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x496d706c), 
    ACE_NTOHL (0x656d656e), 
    ACE_NTOHL (0x74617469), 
    ACE_NTOHL (0x6f6e5265), 
    ACE_NTOHL (0x706f7369), 
    ACE_NTOHL (0x746f7279), 
    ACE_NTOHL (0x2f416374), 
    ACE_NTOHL (0x69766174), 
    ACE_NTOHL (0x696f6e4d), 
    ACE_NTOHL (0x6f64653a), 
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/ActivationMode:1.0
    15,
    ACE_NTOHL (0x41637469), 
    ACE_NTOHL (0x76617469), 
    ACE_NTOHL (0x6f6e4d6f), 
    ACE_NTOHL (0x64650000),  // name = ActivationMode
    4, // member count
    7,
    ACE_NTOHL (0x4e4f524d), 
    ACE_NTOHL (0x414c0000),  // name = NORMAL
    7,
    ACE_NTOHL (0x4d414e55), 
    ACE_NTOHL (0x414c0000),  // name = MANUAL
    11,
    ACE_NTOHL (0x5045525f), 
    ACE_NTOHL (0x434c4945), 
    ACE_NTOHL (0x4e540000),  // name = PER_CLIENT
    11,
    ACE_NTOHL (0x4155544f), 
    ACE_NTOHL (0x5f535441), 
    ACE_NTOHL (0x52540000),  // name = AUTO_START
    
  10,
  ACE_NTOHL (0x61637469), 
  ACE_NTOHL (0x7661746f), 
  ACE_NTOHL (0x72000000),  // name = activator
    CORBA::tk_string, 
  0U, // string length
};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_StartupOptions (
    CORBA::tk_struct,
    sizeof (_oc_ImplementationRepository_StartupOptions),
    (char *) &_oc_ImplementationRepository_StartupOptions,
    0,
    sizeof (ImplementationRepository::StartupOptions)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_StartupOptions =
    &_tc_TAO_tc_ImplementationRepository_StartupOptions;
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:66

void 
ImplementationRepository::StartupOptions::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  StartupOptions *_tao_tmp_pointer =
    static_cast<StartupOptions *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_ServerInformation[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  51,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f536572), 
  ACE_NTOHL (0x76657249), 
  ACE_NTOHL (0x6e666f72), 
  ACE_NTOHL (0x6d617469), 
  ACE_NTOHL (0x6f6e3a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/ServerInformation:1.0
    18,
  ACE_NTOHL (0x53657276), 
  ACE_NTOHL (0x6572496e), 
  ACE_NTOHL (0x666f726d), 
  ACE_NTOHL (0x6174696f), 
  ACE_NTOHL (0x6e000000),  // name = ServerInformation
  4, // member count
    15,
  ACE_NTOHL (0x6c6f6769), 
  ACE_NTOHL (0x63616c5f), 
  ACE_NTOHL (0x73657276), 
  ACE_NTOHL (0x65720000),  // name = logical_server
    CORBA::tk_string, 
  0U, // string length
  7,
  ACE_NTOHL (0x73657276), 
  ACE_NTOHL (0x65720000),  // name = server
    CORBA::tk_string, 
  0U, // string length
  8,
  ACE_NTOHL (0x73746172), 
  ACE_NTOHL (0x74757000),  // name = startup
    CORBA::tk_struct, // typecode kind
  584, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    48,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x496d706c), 
    ACE_NTOHL (0x656d656e), 
    ACE_NTOHL (0x74617469), 
    ACE_NTOHL (0x6f6e5265), 
    ACE_NTOHL (0x706f7369), 
    ACE_NTOHL (0x746f7279), 
    ACE_NTOHL (0x2f537461), 
    ACE_NTOHL (0x72747570), 
    ACE_NTOHL (0x4f707469), 
    ACE_NTOHL (0x6f6e733a), 
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/StartupOptions:1.0
        15,
    ACE_NTOHL (0x53746172), 
    ACE_NTOHL (0x7475704f), 
    ACE_NTOHL (0x7074696f), 
    ACE_NTOHL (0x6e730000),  // name = StartupOptions
    5, // member count
        13,
    ACE_NTOHL (0x636f6d6d), 
    ACE_NTOHL (0x616e645f), 
    ACE_NTOHL (0x6c696e65), 
    ACE_NTOHL (0x0),  // name = command_line
        CORBA::tk_string, 
    0U, // string length
    12,
    ACE_NTOHL (0x656e7669), 
    ACE_NTOHL (0x726f6e6d), 
    ACE_NTOHL (0x656e7400),  // name = environment
        CORBA::tk_alias, // typecode kind for typedefs
    236, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      49,
      ACE_NTOHL (0x49444c3a), 
      ACE_NTOHL (0x496d706c), 
      ACE_NTOHL (0x656d656e), 
      ACE_NTOHL (0x74617469), 
      ACE_NTOHL (0x6f6e5265), 
      ACE_NTOHL (0x706f7369), 
      ACE_NTOHL (0x746f7279), 
      ACE_NTOHL (0x2f456e76), 
      ACE_NTOHL (0x69726f6e), 
      ACE_NTOHL (0x6d656e74), 
      ACE_NTOHL (0x4c697374), 
      ACE_NTOHL (0x3a312e30), 
      ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentList:1.0
            16,
      ACE_NTOHL (0x456e7669), 
      ACE_NTOHL (0x726f6e6d), 
      ACE_NTOHL (0x656e744c), 
      ACE_NTOHL (0x69737400),  // name = EnvironmentList
            CORBA::tk_sequence, // typecode kind
      148, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        CORBA::tk_struct, // typecode kind
        132, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          53,
          ACE_NTOHL (0x49444c3a), 
          ACE_NTOHL (0x496d706c), 
          ACE_NTOHL (0x656d656e), 
          ACE_NTOHL (0x74617469), 
          ACE_NTOHL (0x6f6e5265), 
          ACE_NTOHL (0x706f7369), 
          ACE_NTOHL (0x746f7279), 
          ACE_NTOHL (0x2f456e76), 
          ACE_NTOHL (0x69726f6e), 
          ACE_NTOHL (0x6d656e74), 
          ACE_NTOHL (0x56617269), 
          ACE_NTOHL (0x61626c65), 
          ACE_NTOHL (0x3a312e30), 
          ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
                    20,
          ACE_NTOHL (0x456e7669), 
          ACE_NTOHL (0x726f6e6d), 
          ACE_NTOHL (0x656e7456), 
          ACE_NTOHL (0x61726961), 
          ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
          2, // member count
                    5,
          ACE_NTOHL (0x6e616d65), 
          ACE_NTOHL (0x0),  // name = name
                    CORBA::tk_string, 
          0U, // string length
          6,
          ACE_NTOHL (0x76616c75), 
          ACE_NTOHL (0x65000000),  // name = value
                    CORBA::tk_string, 
          0U, // string length

        0U,


    18,
    ACE_NTOHL (0x776f726b), 
    ACE_NTOHL (0x696e675f), 
    ACE_NTOHL (0x64697265), 
    ACE_NTOHL (0x63746f72), 
    ACE_NTOHL (0x79000000),  // name = working_directory
        CORBA::tk_string, 
    0U, // string length
    11,
    ACE_NTOHL (0x61637469), 
    ACE_NTOHL (0x76617469), 
    ACE_NTOHL (0x6f6e0000),  // name = activation
        CORBA::tk_enum, // typecode kind
    136, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
      48,
      ACE_NTOHL (0x49444c3a), 
      ACE_NTOHL (0x496d706c), 
      ACE_NTOHL (0x656d656e), 
      ACE_NTOHL (0x74617469), 
      ACE_NTOHL (0x6f6e5265), 
      ACE_NTOHL (0x706f7369), 
      ACE_NTOHL (0x746f7279), 
      ACE_NTOHL (0x2f416374), 
      ACE_NTOHL (0x69766174), 
      ACE_NTOHL (0x696f6e4d), 
      ACE_NTOHL (0x6f64653a), 
      ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/ActivationMode:1.0
      15,
      ACE_NTOHL (0x41637469), 
      ACE_NTOHL (0x76617469), 
      ACE_NTOHL (0x6f6e4d6f), 
      ACE_NTOHL (0x64650000),  // name = ActivationMode
      4, // member count
      7,
      ACE_NTOHL (0x4e4f524d), 
      ACE_NTOHL (0x414c0000),  // name = NORMAL
      7,
      ACE_NTOHL (0x4d414e55), 
      ACE_NTOHL (0x414c0000),  // name = MANUAL
      11,
      ACE_NTOHL (0x5045525f), 
      ACE_NTOHL (0x434c4945), 
      ACE_NTOHL (0x4e540000),  // name = PER_CLIENT
      11,
      ACE_NTOHL (0x4155544f), 
      ACE_NTOHL (0x5f535441), 
      ACE_NTOHL (0x52540000),  // name = AUTO_START
      
    10,
    ACE_NTOHL (0x61637469), 
    ACE_NTOHL (0x7661746f), 
    ACE_NTOHL (0x72000000),  // name = activator
        CORBA::tk_string, 
    0U, // string length

  9,
  ACE_NTOHL (0x6c6f6361), 
  ACE_NTOHL (0x74696f6e), 
  ACE_NTOHL (0x0),  // name = location
    CORBA::tk_alias, // typecode kind for typedefs
  72, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    41,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x496d706c), 
    ACE_NTOHL (0x656d656e), 
    ACE_NTOHL (0x74617469), 
    ACE_NTOHL (0x6f6e5265), 
    ACE_NTOHL (0x706f7369), 
    ACE_NTOHL (0x746f7279), 
    ACE_NTOHL (0x2f416464), 
    ACE_NTOHL (0x72657373), 
    ACE_NTOHL (0x3a312e30), 
    ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/Address:1.0
        8,
    ACE_NTOHL (0x41646472), 
    ACE_NTOHL (0x65737300),  // name = Address
        CORBA::tk_string, 
    0U, // string length

};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ServerInformation (
    CORBA::tk_struct,
    sizeof (_oc_ImplementationRepository_ServerInformation),
    (char *) &_oc_ImplementationRepository_ServerInformation,
    0,
    sizeof (ImplementationRepository::ServerInformation)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ServerInformation =
    &_tc_TAO_tc_ImplementationRepository_ServerInformation;
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:66

void 
ImplementationRepository::ServerInformation::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ServerInformation *_tao_tmp_pointer =
    static_cast<ServerInformation *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CS_

ImplementationRepository::ServerInformationList::ServerInformationList (void)
{}

ImplementationRepository::ServerInformationList::ServerInformationList (
    CORBA::ULong max
  )
  : TAO_Unbounded_Sequence<
        ImplementationRepository::ServerInformation
      >
    (max)
{}

ImplementationRepository::ServerInformationList::ServerInformationList (
    CORBA::ULong max,
    CORBA::ULong length,
    ImplementationRepository::ServerInformation * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_Sequence<
        ImplementationRepository::ServerInformation
      >
    (max, length, buffer, release)
{}

ImplementationRepository::ServerInformationList::ServerInformationList (
    const ServerInformationList &seq
  )
  : TAO_Unbounded_Sequence<
        ImplementationRepository::ServerInformation
      >
    (seq)
{}

ImplementationRepository::ServerInformationList::~ServerInformationList (void)
{}

void ImplementationRepository::ServerInformationList::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ServerInformationList * _tao_tmp_pointer =
    static_cast<ServerInformationList *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_ServerInformationList[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  55,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f536572), 
  ACE_NTOHL (0x76657249), 
  ACE_NTOHL (0x6e666f72), 
  ACE_NTOHL (0x6d617469), 
  ACE_NTOHL (0x6f6e4c69), 
  ACE_NTOHL (0x73743a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/ServerInformationList:1.0
    22,
  ACE_NTOHL (0x53657276), 
  ACE_NTOHL (0x6572496e), 
  ACE_NTOHL (0x666f726d), 
  ACE_NTOHL (0x6174696f), 
  ACE_NTOHL (0x6e4c6973), 
  ACE_NTOHL (0x74000000),  // name = ServerInformationList
    CORBA::tk_sequence, // typecode kind
  852, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    836, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      51,
      ACE_NTOHL (0x49444c3a), 
      ACE_NTOHL (0x496d706c), 
      ACE_NTOHL (0x656d656e), 
      ACE_NTOHL (0x74617469), 
      ACE_NTOHL (0x6f6e5265), 
      ACE_NTOHL (0x706f7369), 
      ACE_NTOHL (0x746f7279), 
      ACE_NTOHL (0x2f536572), 
      ACE_NTOHL (0x76657249), 
      ACE_NTOHL (0x6e666f72), 
      ACE_NTOHL (0x6d617469), 
      ACE_NTOHL (0x6f6e3a31), 
      ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/ServerInformation:1.0
            18,
      ACE_NTOHL (0x53657276), 
      ACE_NTOHL (0x6572496e), 
      ACE_NTOHL (0x666f726d), 
      ACE_NTOHL (0x6174696f), 
      ACE_NTOHL (0x6e000000),  // name = ServerInformation
      4, // member count
            15,
      ACE_NTOHL (0x6c6f6769), 
      ACE_NTOHL (0x63616c5f), 
      ACE_NTOHL (0x73657276), 
      ACE_NTOHL (0x65720000),  // name = logical_server
            CORBA::tk_string, 
      0U, // string length
      7,
      ACE_NTOHL (0x73657276), 
      ACE_NTOHL (0x65720000),  // name = server
            CORBA::tk_string, 
      0U, // string length
      8,
      ACE_NTOHL (0x73746172), 
      ACE_NTOHL (0x74757000),  // name = startup
            CORBA::tk_struct, // typecode kind
      584, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        48,
        ACE_NTOHL (0x49444c3a), 
        ACE_NTOHL (0x496d706c), 
        ACE_NTOHL (0x656d656e), 
        ACE_NTOHL (0x74617469), 
        ACE_NTOHL (0x6f6e5265), 
        ACE_NTOHL (0x706f7369), 
        ACE_NTOHL (0x746f7279), 
        ACE_NTOHL (0x2f537461), 
        ACE_NTOHL (0x72747570), 
        ACE_NTOHL (0x4f707469), 
        ACE_NTOHL (0x6f6e733a), 
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/StartupOptions:1.0
                15,
        ACE_NTOHL (0x53746172), 
        ACE_NTOHL (0x7475704f), 
        ACE_NTOHL (0x7074696f), 
        ACE_NTOHL (0x6e730000),  // name = StartupOptions
        5, // member count
                13,
        ACE_NTOHL (0x636f6d6d), 
        ACE_NTOHL (0x616e645f), 
        ACE_NTOHL (0x6c696e65), 
        ACE_NTOHL (0x0),  // name = command_line
                CORBA::tk_string, 
        0U, // string length
        12,
        ACE_NTOHL (0x656e7669), 
        ACE_NTOHL (0x726f6e6d), 
        ACE_NTOHL (0x656e7400),  // name = environment
                CORBA::tk_alias, // typecode kind for typedefs
        236, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          49,
          ACE_NTOHL (0x49444c3a), 
          ACE_NTOHL (0x496d706c), 
          ACE_NTOHL (0x656d656e), 
          ACE_NTOHL (0x74617469), 
          ACE_NTOHL (0x6f6e5265), 
          ACE_NTOHL (0x706f7369), 
          ACE_NTOHL (0x746f7279), 
          ACE_NTOHL (0x2f456e76), 
          ACE_NTOHL (0x69726f6e), 
          ACE_NTOHL (0x6d656e74), 
          ACE_NTOHL (0x4c697374), 
          ACE_NTOHL (0x3a312e30), 
          ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentList:1.0
                    16,
          ACE_NTOHL (0x456e7669), 
          ACE_NTOHL (0x726f6e6d), 
          ACE_NTOHL (0x656e744c), 
          ACE_NTOHL (0x69737400),  // name = EnvironmentList
                    CORBA::tk_sequence, // typecode kind
          148, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_struct, // typecode kind
            132, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              53,
              ACE_NTOHL (0x49444c3a), 
              ACE_NTOHL (0x496d706c), 
              ACE_NTOHL (0x656d656e), 
              ACE_NTOHL (0x74617469), 
              ACE_NTOHL (0x6f6e5265), 
              ACE_NTOHL (0x706f7369), 
              ACE_NTOHL (0x746f7279), 
              ACE_NTOHL (0x2f456e76), 
              ACE_NTOHL (0x69726f6e), 
              ACE_NTOHL (0x6d656e74), 
              ACE_NTOHL (0x56617269), 
              ACE_NTOHL (0x61626c65), 
              ACE_NTOHL (0x3a312e30), 
              ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
                            20,
              ACE_NTOHL (0x456e7669), 
              ACE_NTOHL (0x726f6e6d), 
              ACE_NTOHL (0x656e7456), 
              ACE_NTOHL (0x61726961), 
              ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
              2, // member count
                            5,
              ACE_NTOHL (0x6e616d65), 
              ACE_NTOHL (0x0),  // name = name
                            CORBA::tk_string, 
              0U, // string length
              6,
              ACE_NTOHL (0x76616c75), 
              ACE_NTOHL (0x65000000),  // name = value
                            CORBA::tk_string, 
              0U, // string length

            0U,


        18,
        ACE_NTOHL (0x776f726b), 
        ACE_NTOHL (0x696e675f), 
        ACE_NTOHL (0x64697265), 
        ACE_NTOHL (0x63746f72), 
        ACE_NTOHL (0x79000000),  // name = working_directory
                CORBA::tk_string, 
        0U, // string length
        11,
        ACE_NTOHL (0x61637469), 
        ACE_NTOHL (0x76617469), 
        ACE_NTOHL (0x6f6e0000),  // name = activation
                CORBA::tk_enum, // typecode kind
        136, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
          48,
          ACE_NTOHL (0x49444c3a), 
          ACE_NTOHL (0x496d706c), 
          ACE_NTOHL (0x656d656e), 
          ACE_NTOHL (0x74617469), 
          ACE_NTOHL (0x6f6e5265), 
          ACE_NTOHL (0x706f7369), 
          ACE_NTOHL (0x746f7279), 
          ACE_NTOHL (0x2f416374), 
          ACE_NTOHL (0x69766174), 
          ACE_NTOHL (0x696f6e4d), 
          ACE_NTOHL (0x6f64653a), 
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/ActivationMode:1.0
          15,
          ACE_NTOHL (0x41637469), 
          ACE_NTOHL (0x76617469), 
          ACE_NTOHL (0x6f6e4d6f), 
          ACE_NTOHL (0x64650000),  // name = ActivationMode
          4, // member count
          7,
          ACE_NTOHL (0x4e4f524d), 
          ACE_NTOHL (0x414c0000),  // name = NORMAL
          7,
          ACE_NTOHL (0x4d414e55), 
          ACE_NTOHL (0x414c0000),  // name = MANUAL
          11,
          ACE_NTOHL (0x5045525f), 
          ACE_NTOHL (0x434c4945), 
          ACE_NTOHL (0x4e540000),  // name = PER_CLIENT
          11,
          ACE_NTOHL (0x4155544f), 
          ACE_NTOHL (0x5f535441), 
          ACE_NTOHL (0x52540000),  // name = AUTO_START
          
        10,
        ACE_NTOHL (0x61637469), 
        ACE_NTOHL (0x7661746f), 
        ACE_NTOHL (0x72000000),  // name = activator
                CORBA::tk_string, 
        0U, // string length

      9,
      ACE_NTOHL (0x6c6f6361), 
      ACE_NTOHL (0x74696f6e), 
      ACE_NTOHL (0x0),  // name = location
            CORBA::tk_alias, // typecode kind for typedefs
      72, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        41,
        ACE_NTOHL (0x49444c3a), 
        ACE_NTOHL (0x496d706c), 
        ACE_NTOHL (0x656d656e), 
        ACE_NTOHL (0x74617469), 
        ACE_NTOHL (0x6f6e5265), 
        ACE_NTOHL (0x706f7369), 
        ACE_NTOHL (0x746f7279), 
        ACE_NTOHL (0x2f416464), 
        ACE_NTOHL (0x72657373), 
        ACE_NTOHL (0x3a312e30), 
        ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/Address:1.0
                8,
        ACE_NTOHL (0x41646472), 
        ACE_NTOHL (0x65737300),  // name = Address
                CORBA::tk_string, 
        0U, // string length


    0U,

};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ServerInformationList (
    CORBA::tk_alias,
    sizeof (_oc_ImplementationRepository_ServerInformationList),
    (char *) &_oc_ImplementationRepository_ServerInformationList,
    0,
    sizeof (ImplementationRepository::ServerInformationList)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ServerInformationList =
    &_tc_TAO_tc_ImplementationRepository_ServerInformationList;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:60

// Traits specializations for ImplementationRepository::Administration.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
ImplementationRepository::Administration_ptr
TAO::Objref_Traits<ImplementationRepository::Administration>::duplicate (
    ImplementationRepository::Administration_ptr p
  )
{
  return ImplementationRepository::Administration::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<ImplementationRepository::Administration>::release (
    ImplementationRepository::Administration_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
ImplementationRepository::Administration_ptr
TAO::Objref_Traits<ImplementationRepository::Administration>::nil (void)
{
  return ImplementationRepository::Administration::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<ImplementationRepository::Administration>::marshal (
    ImplementationRepository::Administration_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::activate_server (
    const char * server
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound,
    ::ImplementationRepository::CannotActivate
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_activate_server_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      },
      
      {
        "IDL:ImplementationRepository/CannotActivate:1.0",
        ImplementationRepository::CannotActivate::_alloc,
        ImplementationRepository::_tc_CannotActivate
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "activate_server",
      15,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_activate_server_exceptiondata,
      2
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * ImplementationRepository::Administration::activate_server_with_startup (
    const char * server,
    ::CORBA::Long check_startup
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound,
    ::ImplementationRepository::CannotActivate
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::Char *>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  TAO::Arg_Traits< CORBA::Long>::in_arg_val _tao_check_startup (check_startup);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_check_startup
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_activate_server_with_startup_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      },
      
      {
        "IDL:ImplementationRepository/CannotActivate:1.0",
        ImplementationRepository::CannotActivate::_alloc,
        ImplementationRepository::_tc_CannotActivate
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "activate_server_with_startup",
      28,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_activate_server_with_startup_exceptiondata,
      2
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::register_server (
    const char * server,
    const ::ImplementationRepository::StartupOptions & options
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::AlreadyRegistered,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  TAO::Arg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val _tao_options (options);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_options
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_register_server_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/AlreadyRegistered:1.0",
        ImplementationRepository::AlreadyRegistered::_alloc,
        ImplementationRepository::_tc_AlreadyRegistered
      },
      
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "register_server",
      15,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_register_server_exceptiondata,
      2
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::reregister_server (
    const char * server,
    const ::ImplementationRepository::StartupOptions & options
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::AlreadyRegistered,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  TAO::Arg_Traits< ::ImplementationRepository::StartupOptions>::in_arg_val _tao_options (options);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_options
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_reregister_server_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/AlreadyRegistered:1.0",
        ImplementationRepository::AlreadyRegistered::_alloc,
        ImplementationRepository::_tc_AlreadyRegistered
      },
      
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "reregister_server",
      17,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_reregister_server_exceptiondata,
      2
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::remove_server (
    const char * server
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_remove_server_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "remove_server",
      13,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_remove_server_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::shutdown_server (
    const char * server
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_shutdown_server_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "shutdown_server",
      15,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_shutdown_server_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::server_is_running (
    const char * server,
    const char * addr,
    ::ImplementationRepository::ServerObject_ptr server_object
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  TAO::Arg_Traits< ::ImplementationRepository::Address>::in_arg_val _tao_addr (addr);
  TAO::Arg_Traits< ::ImplementationRepository::ServerObject>::in_arg_val _tao_server_object (server_object);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_addr,
      &_tao_server_object
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_server_is_running_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "server_is_running",
      17,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_server_is_running_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::server_is_shutting_down (
    const char * server
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_server_is_shutting_down_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "server_is_shutting_down",
      23,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_server_is_shutting_down_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::find (
    const char * server,
    ::ImplementationRepository::ServerInformation_out info
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_server (server);
  TAO::Arg_Traits< ::ImplementationRepository::ServerInformation>::out_arg_val _tao_info (info);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_server,
      &_tao_info
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_find_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "find",
      4,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_find_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::list (
    ::CORBA::ULong how_many,
    ::ImplementationRepository::ServerInformationList_out server_list,
    ::ImplementationRepository::ServerInformationIterator_out server_iterator
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::ULong>::in_arg_val _tao_how_many (how_many);
  TAO::Arg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val _tao_server_list (server_list);
  TAO::Arg_Traits< ::ImplementationRepository::ServerInformationIterator>::out_arg_val _tao_server_iterator (server_iterator);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_how_many,
      &_tao_server_list,
      &_tao_server_iterator
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "list",
      4,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::Administration::shutdown_repo (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "shutdown_repo",
      13,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * ImplementationRepository::Administration::find_ior (
    const char * object_name
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException,
    ::ImplementationRepository::NotFound
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Administration_Proxy_Broker_ == 0)
    {
      ImplementationRepository_Administration_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::Char *>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_object_name (object_name);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_object_name
    };
  
  static TAO::Exception_Data
  _tao_ImplementationRepository_Administration_find_ior_exceptiondata [] = 
    {
      {
        "IDL:ImplementationRepository/NotFound:1.0",
        ImplementationRepository::NotFound::_alloc,
        ImplementationRepository::_tc_NotFound
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "find_ior",
      8,
      this->the_TAO_Administration_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_ImplementationRepository_Administration_find_ior_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

ImplementationRepository::Administration::Administration (void)
 : the_TAO_Administration_Proxy_Broker_ (0)
{
  this->ImplementationRepository_Administration_setup_collocation ();
}

void
ImplementationRepository::Administration::ImplementationRepository_Administration_setup_collocation ()
{
  if (::ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_Administration_Proxy_Broker_ =
        ::ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer (this);
    }
}

ImplementationRepository::Administration::~Administration (void)
{}

void 
ImplementationRepository::Administration::_tao_any_destructor (void *_tao_void_pointer)
{
  Administration *_tao_tmp_pointer =
    static_cast<Administration *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

ImplementationRepository::Administration_ptr
ImplementationRepository::Administration::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Administration>::narrow (
        _tao_objref,
        "IDL:ImplementationRepository/Administration:1.0",
        ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::Administration_ptr
ImplementationRepository::Administration::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Administration>::unchecked_narrow (
        _tao_objref,
        "IDL:ImplementationRepository/Administration:1.0",
        ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::Administration_ptr
ImplementationRepository::Administration::_duplicate (Administration_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
ImplementationRepository::Administration::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:ImplementationRepository/Administration:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* ImplementationRepository::Administration::_interface_repository_id (void) const
{
  return "IDL:ImplementationRepository/Administration:1.0";
}

CORBA::Boolean
ImplementationRepository::Administration::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_Administration[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f41646d), 
  ACE_NTOHL (0x696e6973), 
  ACE_NTOHL (0x74726174), 
  ACE_NTOHL (0x696f6e3a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/Administration:1.0
    15,
  ACE_NTOHL (0x41646d69), 
  ACE_NTOHL (0x6e697374), 
  ACE_NTOHL (0x72617469), 
  ACE_NTOHL (0x6f6e0000),  // name = Administration
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_Administration (
    CORBA::tk_objref,
    sizeof (_oc_ImplementationRepository_Administration),
    (char *) &_oc_ImplementationRepository_Administration,
    0,
    sizeof (ImplementationRepository::Administration)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_Administration =
    &_tc_TAO_tc_ImplementationRepository_Administration;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:60

// Traits specializations for ImplementationRepository::ServerInformationIterator.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
ImplementationRepository::ServerInformationIterator_ptr
TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>::duplicate (
    ImplementationRepository::ServerInformationIterator_ptr p
  )
{
  return ImplementationRepository::ServerInformationIterator::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>::release (
    ImplementationRepository::ServerInformationIterator_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
ImplementationRepository::ServerInformationIterator_ptr
TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>::nil (void)
{
  return ImplementationRepository::ServerInformationIterator::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>::marshal (
    ImplementationRepository::ServerInformationIterator_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

CORBA::Boolean ImplementationRepository::ServerInformationIterator::next_n (
    ::CORBA::ULong how_many,
    ::ImplementationRepository::ServerInformationList_out server_list
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ServerInformationIterator_Proxy_Broker_ == 0)
    {
      ImplementationRepository_ServerInformationIterator_setup_collocation ();
    }
  
  TAO::Arg_Traits< ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::ULong>::in_arg_val _tao_how_many (how_many);
  TAO::Arg_Traits< ::ImplementationRepository::ServerInformationList>::out_arg_val _tao_server_list (server_list);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_how_many,
      &_tao_server_list
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "next_n",
      6,
      this->the_TAO_ServerInformationIterator_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void ImplementationRepository::ServerInformationIterator::destroy (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ServerInformationIterator_Proxy_Broker_ == 0)
    {
      ImplementationRepository_ServerInformationIterator_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "destroy",
      7,
      this->the_TAO_ServerInformationIterator_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

ImplementationRepository::ServerInformationIterator::ServerInformationIterator (void)
 : the_TAO_ServerInformationIterator_Proxy_Broker_ (0)
{
  this->ImplementationRepository_ServerInformationIterator_setup_collocation ();
}

void
ImplementationRepository::ServerInformationIterator::ImplementationRepository_ServerInformationIterator_setup_collocation ()
{
  if (::ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ServerInformationIterator_Proxy_Broker_ =
        ::ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer (this);
    }
}

ImplementationRepository::ServerInformationIterator::~ServerInformationIterator (void)
{}

void 
ImplementationRepository::ServerInformationIterator::_tao_any_destructor (void *_tao_void_pointer)
{
  ServerInformationIterator *_tao_tmp_pointer =
    static_cast<ServerInformationIterator *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

ImplementationRepository::ServerInformationIterator_ptr
ImplementationRepository::ServerInformationIterator::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ServerInformationIterator>::narrow (
        _tao_objref,
        "IDL:ImplementationRepository/ServerInformationIterator:1.0",
        ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::ServerInformationIterator_ptr
ImplementationRepository::ServerInformationIterator::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ServerInformationIterator>::unchecked_narrow (
        _tao_objref,
        "IDL:ImplementationRepository/ServerInformationIterator:1.0",
        ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

ImplementationRepository::ServerInformationIterator_ptr
ImplementationRepository::ServerInformationIterator::_duplicate (ServerInformationIterator_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
ImplementationRepository::ServerInformationIterator::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:ImplementationRepository/ServerInformationIterator:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* ImplementationRepository::ServerInformationIterator::_interface_repository_id (void) const
{
  return "IDL:ImplementationRepository/ServerInformationIterator:1.0";
}

CORBA::Boolean
ImplementationRepository::ServerInformationIterator::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_ImplementationRepository_ServerInformationIterator[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  59,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f536572), 
  ACE_NTOHL (0x76657249), 
  ACE_NTOHL (0x6e666f72), 
  ACE_NTOHL (0x6d617469), 
  ACE_NTOHL (0x6f6e4974), 
  ACE_NTOHL (0x65726174), 
  ACE_NTOHL (0x6f723a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/ServerInformationIterator:1.0
    26,
  ACE_NTOHL (0x53657276), 
  ACE_NTOHL (0x6572496e), 
  ACE_NTOHL (0x666f726d), 
  ACE_NTOHL (0x6174696f), 
  ACE_NTOHL (0x6e497465), 
  ACE_NTOHL (0x7261746f), 
  ACE_NTOHL (0x72000000),  // name = ServerInformationIterator
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ServerInformationIterator (
    CORBA::tk_objref,
    sizeof (_oc_ImplementationRepository_ServerInformationIterator),
    (char *) &_oc_ImplementationRepository_ServerInformationIterator,
    0,
    sizeof (ImplementationRepository::ServerInformationIterator)
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr const _tc_ServerInformationIterator =
    &_tc_TAO_tc_ImplementationRepository_ServerInformationIterator;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<ImplementationRepository::ServerObject>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerObject_ptr _tao_elem
  )
{
  ImplementationRepository::ServerObject_ptr _tao_objptr =
    ImplementationRepository::ServerObject::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerObject_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<ImplementationRepository::ServerObject>::insert (
      _tao_any,
      ImplementationRepository::ServerObject::_tao_any_destructor,
      ImplementationRepository::_tc_ServerObject,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ServerObject_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<ImplementationRepository::ServerObject>::extract (
        _tao_any,
        ImplementationRepository::ServerObject::_tao_any_destructor,
        ImplementationRepository::_tc_ServerObject,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_exception/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::demarshal_value (
    TAO_InputCDR & cdr
  )
{
  CORBA::String_var id;
  
  if ((cdr >> id.out ()) == 0)
    {
      return 0;
    }
  
  ACE_TRY_NEW_ENV
    {
      this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
  ACE_CATCHANY
    {
      return 0;
    }
  ACE_ENDTRY;
  
  return 1;
}

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::AlreadyRegistered &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::insert_copy (
      _tao_any,
      ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
      ImplementationRepository::_tc_AlreadyRegistered,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::AlreadyRegistered *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::insert (
      _tao_any,
      ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
      ImplementationRepository::_tc_AlreadyRegistered,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::AlreadyRegistered *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::AlreadyRegistered *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::AlreadyRegistered *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::extract (
        _tao_any,
        ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
        ImplementationRepository::_tc_AlreadyRegistered,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_exception/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::demarshal_value (
    TAO_InputCDR & cdr
  )
{
  CORBA::String_var id;
  
  if ((cdr >> id.out ()) == 0)
    {
      return 0;
    }
  
  ACE_TRY_NEW_ENV
    {
      this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
  ACE_CATCHANY
    {
      return 0;
    }
  ACE_ENDTRY;
  
  return 1;
}

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::CannotActivate &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::insert_copy (
      _tao_any,
      ImplementationRepository::CannotActivate::_tao_any_destructor,
      ImplementationRepository::_tc_CannotActivate,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::CannotActivate *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::insert (
      _tao_any,
      ImplementationRepository::CannotActivate::_tao_any_destructor,
      ImplementationRepository::_tc_CannotActivate,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::CannotActivate *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::CannotActivate *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::CannotActivate *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::extract (
        _tao_any,
        ImplementationRepository::CannotActivate::_tao_any_destructor,
        ImplementationRepository::_tc_CannotActivate,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_exception/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::demarshal_value (
    TAO_InputCDR & cdr
  )
{
  CORBA::String_var id;
  
  if ((cdr >> id.out ()) == 0)
    {
      return 0;
    }
  
  ACE_TRY_NEW_ENV
    {
      this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
  ACE_CATCHANY
    {
      return 0;
    }
  ACE_ENDTRY;
  
  return 1;
}

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::NotFound &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::insert_copy (
      _tao_any,
      ImplementationRepository::NotFound::_tao_any_destructor,
      ImplementationRepository::_tc_NotFound,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::NotFound *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::insert (
      _tao_any,
      ImplementationRepository::NotFound::_tao_any_destructor,
      ImplementationRepository::_tc_NotFound,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::NotFound *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::NotFound *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::NotFound *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::extract (
        _tao_any,
        ImplementationRepository::NotFound::_tao_any_destructor,
        ImplementationRepository::_tc_NotFound,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentVariable &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::insert_copy (
      _tao_any,
      ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentVariable,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentVariable *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::insert (
      _tao_any,
      ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentVariable,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentVariable *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::EnvironmentVariable *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentVariable *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::extract (
        _tao_any,
        ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
        ImplementationRepository::_tc_EnvironmentVariable,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::insert_copy (
      _tao_any,
      ImplementationRepository::EnvironmentList::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentList,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::insert (
      _tao_any,
      ImplementationRepository::EnvironmentList::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentList,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentList *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::EnvironmentList *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::extract (
        _tao_any,
        ImplementationRepository::EnvironmentList::_tao_any_destructor,
        ImplementationRepository::_tc_EnvironmentList,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ActivationMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<ImplementationRepository::ActivationMode>::insert (
      _tao_any,
      ImplementationRepository::_tc_ActivationMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ActivationMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<ImplementationRepository::ActivationMode>::extract (
        _tao_any,
        ImplementationRepository::_tc_ActivationMode,
        _tao_elem 
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::StartupOptions &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::insert_copy (
      _tao_any,
      ImplementationRepository::StartupOptions::_tao_any_destructor,
      ImplementationRepository::_tc_StartupOptions,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::StartupOptions *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::insert (
      _tao_any,
      ImplementationRepository::StartupOptions::_tao_any_destructor,
      ImplementationRepository::_tc_StartupOptions,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::StartupOptions *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::StartupOptions *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::StartupOptions *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::extract (
        _tao_any,
        ImplementationRepository::StartupOptions::_tao_any_destructor,
        ImplementationRepository::_tc_StartupOptions,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformation &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::insert_copy (
      _tao_any,
      ImplementationRepository::ServerInformation::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformation,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformation *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::insert (
      _tao_any,
      ImplementationRepository::ServerInformation::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformation,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformation *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::ServerInformation *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformation *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::extract (
        _tao_any,
        ImplementationRepository::ServerInformation::_tao_any_destructor,
        ImplementationRepository::_tc_ServerInformation,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformationList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::insert_copy (
      _tao_any,
      ImplementationRepository::ServerInformationList::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformationList,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::insert (
      _tao_any,
      ImplementationRepository::ServerInformationList::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformationList,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationList *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::ServerInformationList *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformationList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::extract (
        _tao_any,
        ImplementationRepository::ServerInformationList::_tao_any_destructor,
        ImplementationRepository::_tc_ServerInformationList,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<ImplementationRepository::Administration>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr _tao_elem
  )
{
  ImplementationRepository::Administration_ptr _tao_objptr =
    ImplementationRepository::Administration::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<ImplementationRepository::Administration>::insert (
      _tao_any,
      ImplementationRepository::Administration::_tao_any_destructor,
      ImplementationRepository::_tc_Administration,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<ImplementationRepository::Administration>::extract (
        _tao_any,
        ImplementationRepository::Administration::_tao_any_destructor,
        ImplementationRepository::_tc_Administration,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<ImplementationRepository::ServerInformationIterator>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr _tao_elem
  )
{
  ImplementationRepository::ServerInformationIterator_ptr _tao_objptr =
    ImplementationRepository::ServerInformationIterator::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<ImplementationRepository::ServerInformationIterator>::insert (
      _tao_any,
      ImplementationRepository::ServerInformationIterator::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformationIterator,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<ImplementationRepository::ServerInformationIterator>::extract (
        _tao_any,
        ImplementationRepository::ServerInformationIterator::_tao_any_destructor,
        ImplementationRepository::_tc_ServerInformationIterator,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerObject_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerObject_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if ((strm >> obj.inout ()) == 0)
    {
      return 0;
    }
  
  typedef ::ImplementationRepository::ServerObject RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        ImplementationRepository__TAO_ServerObject_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_cs.cpp:60

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::AlreadyRegistered &_tao_aggregate
  )
{
  // First marshal the repository ID.
  if (strm << _tao_aggregate._rep_id ())
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

CORBA::Boolean operator>> (
    TAO_InputCDR &,
    ImplementationRepository::AlreadyRegistered&
  )
{
  return 1;
}

// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_cs.cpp:60

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::CannotActivate &_tao_aggregate
  )
{
  // First marshal the repository ID.
  if (strm << _tao_aggregate._rep_id ())
    {
      // Now marshal the members (if any).
      if (
        (strm << _tao_aggregate.reason.in ())
       )
        {
          return 1;
        }
      else
        {
          return 0;
        }
    }
  else
    {
      return 0;
    }
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::CannotActivate &_tao_aggregate
  )
{
  // Demarshal the members.
  if (
    (strm >> _tao_aggregate.reason.out ())
  )
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_cs.cpp:60

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::NotFound &_tao_aggregate
  )
{
  // First marshal the repository ID.
  if (strm << _tao_aggregate._rep_id ())
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

CORBA::Boolean operator>> (
    TAO_InputCDR &,
    ImplementationRepository::NotFound&
  )
{
  return 1;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::EnvironmentVariable &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.value.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::EnvironmentVariable &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.value.out ());
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_ImplementationRepository_EnvironmentList_CPP_
#define _TAO_CDR_OP_ImplementationRepository_EnvironmentList_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::EnvironmentList &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = 1;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm << _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    }
  
  return 0;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::EnvironmentList &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return 0;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return 1;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = 1;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    
    }
  
  return 0;
}

#endif /* _TAO_CDR_OP_ImplementationRepository_EnvironmentList_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_cs.cpp:51

CORBA::Boolean operator<< (TAO_OutputCDR &strm, const ImplementationRepository::ActivationMode &_tao_enumval)
{
  CORBA::ULong _tao_temp = _tao_enumval;
  return strm << _tao_temp;
}

CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::ActivationMode &_tao_enumval)
{
  CORBA::ULong _tao_temp = 0;
  CORBA::Boolean _tao_result = strm >> _tao_temp;
  
  if (_tao_result == 1)
    {
      _tao_enumval = static_cast<ImplementationRepository::ActivationMode> (_tao_temp);
    }
  
  return _tao_result;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::StartupOptions &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.command_line.in ()) &&
    (strm << _tao_aggregate.environment) &&
    (strm << _tao_aggregate.working_directory.in ()) &&
    (strm << _tao_aggregate.activation) &&
    (strm << _tao_aggregate.activator.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::StartupOptions &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.command_line.out ()) &&
    (strm >> _tao_aggregate.environment) &&
    (strm >> _tao_aggregate.working_directory.out ()) &&
    (strm >> _tao_aggregate.activation) &&
    (strm >> _tao_aggregate.activator.out ());
}

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerInformation &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.logical_server.in ()) &&
    (strm << _tao_aggregate.server.in ()) &&
    (strm << _tao_aggregate.startup) &&
    (strm << _tao_aggregate.location.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerInformation &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.logical_server.out ()) &&
    (strm >> _tao_aggregate.server.out ()) &&
    (strm >> _tao_aggregate.startup) &&
    (strm >> _tao_aggregate.location.out ());
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_ImplementationRepository_ServerInformationList_CPP_
#define _TAO_CDR_OP_ImplementationRepository_ServerInformationList_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerInformationList &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = 1;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm << _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    }
  
  return 0;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerInformationList &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return 0;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return 1;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = 1;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    
    }
  
  return 0;
}

#endif /* _TAO_CDR_OP_ImplementationRepository_ServerInformationList_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::Administration_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::Administration_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if ((strm >> obj.inout ()) == 0)
    {
      return 0;
    }
  
  typedef ::ImplementationRepository::Administration RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        ImplementationRepository__TAO_Administration_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerInformationIterator_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerInformationIterator_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if ((strm >> obj.inout ()) == 0)
    {
      return 0;
    }
  
  typedef ::ImplementationRepository::ServerInformationIterator RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        ImplementationRepository__TAO_ServerInformationIterator_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be/be_visitor_root/root.cpp:1641

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        ImplementationRepository::ServerObject
      >;

  template class
    TAO::Object_Arg_Traits_T<
        ImplementationRepository::ServerObject_ptr,
        ImplementationRepository::ServerObject_var,
        ImplementationRepository::ServerObject_out,
        TAO::Objref_Traits<ImplementationRepository::ServerObject>
      >;

#endif /* end #if !defined */

  template class
    TAO::Objref_Traits<
        ImplementationRepository::ServerObject
      >;

  template class
    TAO_Objref_Var_T<
        ImplementationRepository::ServerObject
      >;
  
  template class
    TAO_Objref_Out_T<
        ImplementationRepository::ServerObject
      >;

  template class
    TAO::Narrow_Utils<
        ImplementationRepository::ServerObject
      >;

  template class
    TAO::Any_Impl_T<
        ImplementationRepository::ServerObject
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::AlreadyRegistered
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::CannotActivate
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::NotFound
      >;

  template class
    TAO_Var_Var_T<
        ImplementationRepository::EnvironmentVariable
      >;

  template class
    TAO_Var_Base_T<
        ImplementationRepository::EnvironmentVariable
      >;

  template class
    TAO_Out_T<
        ImplementationRepository::EnvironmentVariable,
        ImplementationRepository::EnvironmentVariable_var
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::EnvironmentVariable
      >;

  template class
    TAO_VarSeq_Var_T<
        ImplementationRepository::EnvironmentList,
        ImplementationRepository::EnvironmentVariable
      >;

  template class
    TAO_Seq_Var_Base_T<
        ImplementationRepository::EnvironmentList,
        ImplementationRepository::EnvironmentVariable
      >;

  template class
    TAO_Seq_Out_T<
        ImplementationRepository::EnvironmentList,
        ImplementationRepository::EnvironmentList_var,
        ImplementationRepository::EnvironmentVariable
      >;

#if !defined (_IMPLEMENTATIONREPOSITORY_ENVIRONMENTVARIABLE__EXPLICIT_CS_)
#define _IMPLEMENTATIONREPOSITORY_ENVIRONMENTVARIABLE__EXPLICIT_CS_

  template class
    TAO_Unbounded_Sequence<
        ImplementationRepository::EnvironmentVariable
      >;

#endif /* end #if !defined */

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::EnvironmentList
      >;

  template class
    TAO::Any_Basic_Impl_T<
        ImplementationRepository::ActivationMode
      >;

#if !defined (_IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<ImplementationRepository::StartupOptions>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        ImplementationRepository::StartupOptions,
        ImplementationRepository::StartupOptions_var,
        ImplementationRepository::StartupOptions_out
      >;

#endif /* end #if !defined */

  template class
    TAO_Var_Var_T<
        ImplementationRepository::StartupOptions
      >;

  template class
    TAO_Var_Base_T<
        ImplementationRepository::StartupOptions
      >;

  template class
    TAO_Out_T<
        ImplementationRepository::StartupOptions,
        ImplementationRepository::StartupOptions_var
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::StartupOptions
      >;

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<ImplementationRepository::ServerInformation>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        ImplementationRepository::ServerInformation,
        ImplementationRepository::ServerInformation_var,
        ImplementationRepository::ServerInformation_out
      >;

#endif /* end #if !defined */

  template class
    TAO_Var_Var_T<
        ImplementationRepository::ServerInformation
      >;

  template class
    TAO_Var_Base_T<
        ImplementationRepository::ServerInformation
      >;

  template class
    TAO_Out_T<
        ImplementationRepository::ServerInformation,
        ImplementationRepository::ServerInformation_var
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::ServerInformation
      >;

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<ImplementationRepository::ServerInformationList>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        ImplementationRepository::ServerInformationList,
        ImplementationRepository::ServerInformationList_var,
        ImplementationRepository::ServerInformationList_out
      >;

#endif /* end #if !defined */

  template class
    TAO_VarSeq_Var_T<
        ImplementationRepository::ServerInformationList,
        ImplementationRepository::ServerInformation
      >;

  template class
    TAO_Seq_Var_Base_T<
        ImplementationRepository::ServerInformationList,
        ImplementationRepository::ServerInformation
      >;

  template class
    TAO_Seq_Out_T<
        ImplementationRepository::ServerInformationList,
        ImplementationRepository::ServerInformationList_var,
        ImplementationRepository::ServerInformation
      >;

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__EXPLICIT_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__EXPLICIT_CS_

  template class
    TAO_Unbounded_Sequence<
        ImplementationRepository::ServerInformation
      >;

#endif /* end #if !defined */

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::ServerInformationList
      >;

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        ImplementationRepository::ServerInformationIterator
      >;

  template class
    TAO::Object_Arg_Traits_T<
        ImplementationRepository::ServerInformationIterator_ptr,
        ImplementationRepository::ServerInformationIterator_var,
        ImplementationRepository::ServerInformationIterator_out,
        TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>
      >;

#endif /* end #if !defined */

  template class
    TAO::Out_Var_Size_Argument_T<
        ImplementationRepository::ServerInformationList,
        ImplementationRepository::ServerInformationList_out
      >;

  template class
    TAO::Objref_Traits<
        ImplementationRepository::ServerInformationIterator
      >;

  template class
    TAO_Objref_Var_T<
        ImplementationRepository::ServerInformationIterator
      >;
  
  template class
    TAO_Objref_Out_T<
        ImplementationRepository::ServerInformationIterator
      >;

  template class
    TAO::Narrow_Utils<
        ImplementationRepository::ServerInformationIterator
      >;

  template class
    TAO::Any_Impl_T<
        ImplementationRepository::ServerInformationIterator
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        ImplementationRepository::StartupOptions
      >;

  template class
    TAO::In_Object_Argument_T<
        ImplementationRepository::ServerObject_ptr
      >;

  template class
    TAO::Out_Var_Size_Argument_T<
        ImplementationRepository::ServerInformation,
        ImplementationRepository::ServerInformation_out
      >;

  template class
    TAO::Out_Object_Argument_T<
        ImplementationRepository::ServerInformationIterator_ptr,
        ImplementationRepository::ServerInformationIterator_out
      >;

  template class
    TAO::Objref_Traits<
        ImplementationRepository::Administration
      >;

  template class
    TAO_Objref_Var_T<
        ImplementationRepository::Administration
      >;
  
  template class
    TAO_Objref_Out_T<
        ImplementationRepository::Administration
      >;

  template class
    TAO::Narrow_Utils<
        ImplementationRepository::Administration
      >;

  template class
    TAO::Any_Impl_T<
        ImplementationRepository::Administration
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        ImplementationRepository::ServerObject \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        ImplementationRepository::ServerObject_ptr, \
        ImplementationRepository::ServerObject_var, \
        ImplementationRepository::ServerObject_out, \
        TAO::Objref_Traits<ImplementationRepository::ServerObject> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Objref_Traits< \
        ImplementationRepository::ServerObject \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        ImplementationRepository::ServerObject
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        ImplementationRepository::ServerObject
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        ImplementationRepository::ServerObject \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        ImplementationRepository::ServerObject \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::AlreadyRegistered \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::CannotActivate \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::NotFound \
      >

# pragma instantiate \
    TAO_Var_Var_T< \
        ImplementationRepository::EnvironmentVariable \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        ImplementationRepository::EnvironmentVariable \
      >

# pragma instantiate \
    TAO_Out_T< \
        ImplementationRepository::EnvironmentVariable, \
        ImplementationRepository::EnvironmentVariable_var \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::EnvironmentVariable \
      >

# pragma instantiate \
    TAO_VarSeq_Var_T< \
        ImplementationRepository::EnvironmentList, \
        ImplementationRepository::EnvironmentVariable \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        ImplementationRepository::EnvironmentList, \
        ImplementationRepository::EnvironmentVariable \
      >

# pragma instantiate \
    TAO_Seq_Out_T< \
        ImplementationRepository::EnvironmentList, \
        ImplementationRepository::EnvironmentList_var, \
        ImplementationRepository::EnvironmentVariable \
      >

#if !defined (_IMPLEMENTATIONREPOSITORY_ENVIRONMENTVARIABLE__EXPLICIT_CS_)
#define _IMPLEMENTATIONREPOSITORY_ENVIRONMENTVARIABLE__EXPLICIT_CS_

# pragma instantiate \
    TAO_Unbounded_Sequence< \
        ImplementationRepository::EnvironmentVariable \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::EnvironmentList \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        ImplementationRepository::ActivationMode \
      >

#if !defined (_IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_STARTUPOPTIONS__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<ImplementationRepository::StartupOptions>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        ImplementationRepository::StartupOptions, \
        ImplementationRepository::StartupOptions_var, \
        ImplementationRepository::StartupOptions_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_Var_Var_T< \
        ImplementationRepository::StartupOptions \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        ImplementationRepository::StartupOptions \
      >

# pragma instantiate \
    TAO_Out_T< \
        ImplementationRepository::StartupOptions, \
        ImplementationRepository::StartupOptions_var \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::StartupOptions \
      >

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<ImplementationRepository::ServerInformation>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        ImplementationRepository::ServerInformation, \
        ImplementationRepository::ServerInformation_var, \
        ImplementationRepository::ServerInformation_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_Var_Var_T< \
        ImplementationRepository::ServerInformation \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        ImplementationRepository::ServerInformation \
      >

# pragma instantiate \
    TAO_Out_T< \
        ImplementationRepository::ServerInformation, \
        ImplementationRepository::ServerInformation_var \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::ServerInformation \
      >

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<ImplementationRepository::ServerInformationList>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        ImplementationRepository::ServerInformationList, \
        ImplementationRepository::ServerInformationList_var, \
        ImplementationRepository::ServerInformationList_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_VarSeq_Var_T< \
        ImplementationRepository::ServerInformationList, \
        ImplementationRepository::ServerInformation \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        ImplementationRepository::ServerInformationList, \
        ImplementationRepository::ServerInformation \
      >

# pragma instantiate \
    TAO_Seq_Out_T< \
        ImplementationRepository::ServerInformationList, \
        ImplementationRepository::ServerInformationList_var, \
        ImplementationRepository::ServerInformation \
      >

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__EXPLICIT_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATION__EXPLICIT_CS_

# pragma instantiate \
    TAO_Unbounded_Sequence< \
        ImplementationRepository::ServerInformation \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::ServerInformationList \
      >

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_TMPLINST_CS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        ImplementationRepository::ServerInformationIterator \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        ImplementationRepository::ServerInformationIterator_ptr, \
        ImplementationRepository::ServerInformationIterator_var, \
        ImplementationRepository::ServerInformationIterator_out, \
        TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Out_Var_Size_Argument_T< \
        ImplementationRepository::ServerInformationList, \
        ImplementationRepository::ServerInformationList_out \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        ImplementationRepository::ServerInformationIterator \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        ImplementationRepository::ServerInformationIterator
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        ImplementationRepository::ServerInformationIterator
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        ImplementationRepository::ServerInformationIterator \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        ImplementationRepository::ServerInformationIterator \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        ImplementationRepository::StartupOptions \
      >

# pragma instantiate \
    TAO::In_Object_Argument_T< \
        ImplementationRepository::ServerObject_ptr \
      >

# pragma instantiate \
    TAO::Out_Var_Size_Argument_T< \
        ImplementationRepository::ServerInformation, \
        ImplementationRepository::ServerInformation_out \
      >

# pragma instantiate \
    TAO::Out_Object_Argument_T< \
        ImplementationRepository::ServerInformationIterator_ptr, \
        ImplementationRepository::ServerInformationIterator_out \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        ImplementationRepository::Administration \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        ImplementationRepository::Administration
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        ImplementationRepository::Administration
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        ImplementationRepository::Administration \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        ImplementationRepository::Administration \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */ 
