--- orig/IFR_ExtendedS.h	Mon Apr 30 22:22:36 2001
+++ IFR_ExtendedS.h	Mon Apr 30 22:34:49 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -19,12 +19,12 @@
 // Information about TAO is available at:
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
-#ifndef _TAO_IDL_IFR_EXTENDEDS_H_
-#define _TAO_IDL_IFR_EXTENDEDS_H_
+#ifndef _TAO_IDL__________ORBSVCS_IFR_SERVICE_ORIG_IFR_EXTENDEDS_H_
+#define _TAO_IDL__________ORBSVCS_IFR_SERVICE_ORIG_IFR_EXTENDEDS_H_
 
 #include "ace/pre.h"
 #include "IFR_BasicS.h"
-#include "IFR_ExtendedC.h"
+#include "tao/IFR_Client/IFR_ExtendedC.h"
 
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
@@ -47,11 +47,6 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
-TAO_NAMESPACE  POA_CORBA
-{
-}
-TAO_NAMESPACE_CLOSE // module CORBA
-
 class POA_CORBA_FixedDef;
 typedef POA_CORBA_FixedDef *POA_CORBA_FixedDef_ptr;
 // Forward Classes Declaration
@@ -227,6 +222,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -234,6 +230,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -304,14 +302,13 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 class POA_CORBA_ValueMemberDef;
 typedef POA_CORBA_ValueMemberDef *POA_CORBA_ValueMemberDef_ptr;
 // Forward Classes Declaration
@@ -583,6 +580,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -590,6 +588,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -668,14 +668,13 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 class POA_CORBA_ValueDef;
 typedef POA_CORBA_ValueDef *POA_CORBA_ValueDef_ptr;
 // Forward Classes Declaration
@@ -1339,6 +1338,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -1346,6 +1346,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -1562,14 +1564,13 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 class POA_CORBA_ValueBoxDef;
 typedef POA_CORBA_ValueBoxDef *POA_CORBA_ValueBoxDef_ptr;
 // Forward Classes Declaration
@@ -1800,6 +1801,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -1807,6 +1809,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -1860,13 +1864,12 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
-
 
 #include "IFR_ExtendedS_T.h"
 
