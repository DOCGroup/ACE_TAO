--- orig/IFR_BaseS.h	Mon Apr 30 22:22:30 2001
+++ IFR_BaseS.h	Mon Apr 30 22:27:06 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -19,11 +19,11 @@
 // Information about TAO is available at:
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
-#ifndef _TAO_IDL_IFR_BASES_H_
-#define _TAO_IDL_IFR_BASES_H_
+#ifndef _TAO_IDL__________ORBSVCS_IFR_SERVICE_ORIG_IFR_BASES_H_
+#define _TAO_IDL__________ORBSVCS_IFR_SERVICE_ORIG_IFR_BASES_H_
 
 #include "ace/pre.h"
-#include "IFR_BaseC.h"
+#include "tao/IFR_Client/IFR_BaseC.h"
 
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
@@ -46,11 +46,6 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
-TAO_NAMESPACE  POA_CORBA
-{
-}
-TAO_NAMESPACE_CLOSE // module CORBA
-
 class POA_CORBA_IRObject;
 typedef POA_CORBA_IRObject *POA_CORBA_IRObject_ptr;
 // Forward Classes Declaration
@@ -168,6 +163,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -175,6 +171,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -225,14 +223,13 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 class POA_CORBA_Contained;
 typedef POA_CORBA_Contained *POA_CORBA_Contained_ptr;
 // Forward Classes Declaration
@@ -516,6 +513,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -523,6 +521,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -653,14 +653,13 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 class POA_CORBA_Container;
 typedef POA_CORBA_Container *POA_CORBA_Container_ptr;
 // Forward Classes Declaration
@@ -1102,6 +1101,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -1109,6 +1109,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -1349,14 +1351,13 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 class POA_CORBA_IDLType;
 typedef POA_CORBA_IDLType *POA_CORBA_IDLType_ptr;
 // Forward Classes Declaration
@@ -1474,6 +1475,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -1481,6 +1483,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -1525,14 +1529,13 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
-
 class POA_CORBA_TypedefDef;
 typedef POA_CORBA_TypedefDef *POA_CORBA_TypedefDef_ptr;
 // Forward Classes Declaration
@@ -1730,6 +1733,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -1737,6 +1741,8 @@
     TAO_ENV_SINGLE_ARG_DECL
   );
   
+private:
+  
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -1774,13 +1780,12 @@
   
   virtual ~_TAO_CORBA_TypedefDef_ThruPOA_Proxy_Impl (void) { }
   
-  
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
-
 
 #include "IFR_BaseS_T.h"
 
