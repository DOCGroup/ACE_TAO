//$Id$
// ================================================================
//
// = LIBRARY
//   TAO
//
// = FILENAME
//   GIOP1_2.pidl
//
// = DESCRIPTION
//   Some new data types included for GIOP 1.2
//   This file was used to generate the code in
//   GIOP*.* The command used to generate code
//   is:
//
//     tao_idl
//        -o orig -Ge 1 -GA -I.. -SS -Sc
//          -Wb,export_macro=TAO_Export
//          -Wb,export_include="tao/TAO_Export.h"
//          -Wb,pre_include="ace/pre.h"
//          -Wb,post_include="ace/post.h"
//          -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL
//          -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL
//          GIOP.pidl
//
// ================================================================

#ifndef TAO_GIOP_PIDL
#define TAO_GIOP_PIDL

#include "tao/IOP_IOR.pidl"

#pragma prefix "omg.org"

module GIOP
{
  typedef short AddressingDisposition;
  const short KeyAddr = 0;
  const short ProfileAddr = 1;
  const short ReferenceAddr = 2;

  struct Version
  {
    octet major;
    octet minor;
  };

  struct IORAddressingInfo
  {
    unsigned long selected_profile_index;
    IOP::IOR ior;
  };

  union TargetAddress switch (AddressingDisposition)
  {
    case KeyAddr: CORBA::OctetSeq object_key;
    case ProfileAddr: IOP::TaggedProfile profile;
    case ReferenceAddr: IORAddressingInfo ior;
  };
};

#endif  /* TAO_GIOP_PIDL */
