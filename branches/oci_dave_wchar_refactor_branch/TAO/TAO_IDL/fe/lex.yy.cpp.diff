--- lex.yy.cpp.orig	2005-07-07 11:05:08.066403000 -0700
+++ lex.yy.cpp	2005-07-07 10:51:41.804932200 -0700
@@ -1134,7 +1134,7 @@
 TAO_YY_DECL
         {
         register tao_yy_state_type tao_yy_current_state;
-        register char *tao_yy_cp, *tao_yy_bp;
+        register char *tao_yy_cp = 0, *tao_yy_bp = 0;
         register int tao_yy_act;
 
 
@@ -1664,42 +1664,42 @@
                   idl_global->set_lineno(idl_global->lineno() + 1);
                   idl_store_pragma(ace_tao_yytext);
                 }
-        TAO_YY_BREAK
+        break;
 case 87:
 /* rule 87 can match eol */
 case 88:
 /* rule 88 can match eol */
 TAO_YY_RULE_SETUP
 {/* ignore file */
                   idl_global->set_lineno(idl_global->lineno() + 1);
                 }
-        TAO_YY_BREAK
+        break;
 case 89:
 /* rule 89 can match eol */
 case 90:
 /* rule 90 can match eol */
 TAO_YY_RULE_SETUP
 {
                   idl_parse_line_and_file(ace_tao_yytext);
                 }
-        TAO_YY_BREAK
+        break;
 case 91:
 /* rule 91 can match eol */
 case 92:
 /* rule 92 can match eol */
 TAO_YY_RULE_SETUP
 {
                   idl_parse_line_and_file(ace_tao_yytext);
                 }
-        TAO_YY_BREAK
+        break;
 case 93:
 /* rule 93 can match eol */
 case 94:
 /* rule 94 can match eol */
 TAO_YY_RULE_SETUP
 {
                   idl_parse_line_and_file(ace_tao_yytext);
                 }
-        TAO_YY_BREAK
+        break;
 case 95:
 /* rule 95 can match eol */
 case 96:
 /* rule 96 can match eol */
 TAO_YY_RULE_SETUP
 {
                   idl_parse_line_and_file(ace_tao_yytext);
                 }
-        TAO_YY_BREAK
+        break;
 case 97:
 /* rule 97 can match eol */
 case 98:
 /* rule 98 can match eol */
 TAO_YY_RULE_SETUP
 {
                   /* ignore cpp ident */
                   idl_global->set_lineno(idl_global->lineno() + 1);
                 }
-        TAO_YY_BREAK
+        break;
 case 99:
 /* rule 99 can match eol */
 TAO_YY_RULE_SETUP
 {
                   /* ignore comments */
                   idl_global->set_lineno(idl_global->lineno() + 1);
                 }
-        TAO_YY_BREAK
+        break;
 case 100:
 TAO_YY_RULE_SETUP
 {
                   for(;;) {
                     char c = tao_yyinput();
                     if (c == '*') {
                       char next = tao_yyinput();
                       if (next == '/')
                         break;
                       else
                         tao_yyunput(c, 0);
                       if (c == '\n')
                         idl_global->set_lineno(idl_global->lineno() + 1);
                     }
                   }
                 }
-        TAO_YY_BREAK
+        break;
 case 101:
 TAO_YY_RULE_SETUP
 ;
-        TAO_YY_BREAK
+        break;
 case 102:
 /* rule 102 can match eol */
 TAO_YY_RULE_SETUP
 {
                   idl_global->set_lineno(idl_global->lineno() + 1);
                 }
-        TAO_YY_BREAK
+        break;
 case 103:
 TAO_YY_RULE_SETUP
 return ace_tao_yytext [0];
