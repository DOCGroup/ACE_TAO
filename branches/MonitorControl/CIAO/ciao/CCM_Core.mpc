// $Id$

project (CIAO_Client) : taolib_with_idl, valuetype, ifr_client {
  sharedname  = CIAO_Client
  idlflags  += -Wb,stub_export_include=CIAO_Client_Export.h
  idlflags  += -Wb,stub_export_macro=CIAO_CLIENT_Export
  idlflags  += -Wb,skel_export_include=CIAO_Container_Export.h
  idlflags  += -Wb,skel_export_macro=CIAO_CONTAINER_Export

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  dynamicflags = CIAO_CLIENT_BUILD_DLL

  IDL_Files {
    idlflags += -SS -Sci
    CCM_Base.idl
    CCM_Component.idl
  }

  IDL_Files {
    idlflags += -SS
    CCM_Cookie.idl
    CCM_Enumeration.idl
  }

  IDL_Files {
    idlflags += -Ssi -Sci
    Components.idl
  }

  IDL_Files {
    CCM_HomeConfiguration.idl
    CCM_StandardConfigurator.idl
    CCM_Home.idl
    CCM_Object.idl
    CCM_PrimaryKeyBase.idl
  }

  IDL_Files {
    idlflags += -Ssi
    CCM_HomeFinder.idl
    CCM_Configurator.idl
    CCM_KeylessCCMHome.idl
    CCM_Navigation.idl
    CCM_Receptacle.idl
  }

  IDL_Files {
    CCM_Events.idl
    CCM_EventBase.idl
    CCM_EventConsumerBase.idl
  }

  Source_Files {
    CCM_BaseC.cpp
    CCM_EventsC.cpp
    CCM_EventBaseC.cpp
    CCM_EventConsumerBaseC.cpp
    CCM_ComponentC.cpp
    CCM_EnumerationC.cpp
    CCM_HomeC.cpp
    CCM_ConfiguratorC.cpp
    CCM_HomeConfigurationC.cpp
    CCM_KeylessCCMHomeC.cpp
    CCM_StandardConfiguratorC.cpp
    CCM_HomeFinderC.cpp
    CCM_NavigationC.cpp
    CCM_ReceptacleC.cpp
    CCM_CookieC.cpp
    CCM_ObjectC.cpp
    CCM_PrimaryKeyBaseC.cpp
    Client_init.cpp
    ComponentsC.cpp
  }

  Header_Files {
    CIAO_Client_Export.h
    CIAO_common.h
  }
}

project (CIAO_Container) : orbsvcslib \
                           , portableserver \
                           , valuetype \
                           , ifr_client \
                           , codecfactory \
                           , pi \
                           , ciao_client_dnc \
                           , avoids_corba_e_compact \
                           , avoids_corba_e_micro \
{
  sharedname  = CIAO_Container
  idlflags   += -Wb,export_include=CIAO_Container_Export.h
  idlflags   += -Wb,export_macro=CIAO_CONTAINER_Export
  dynamicflags = CIAO_CONTAINER_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
    idlflags += -SS -Sci \
                -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL \
                -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL
    Security.idl
  }

  IDL_Files {
    idlflags += -SS -Sci
    CCM_Context.idl
    CCM_CCMException.idl
    CCM_EntityComponent.idl
    CCM_EntityContext.idl
    CIAO_SwapExec.idl
    CIAO_UpgradeableContext.idl
  }

  IDL_Files {
    idlflags += -SS
    CCM_CCM2Context.idl
    CCM_ProxyHomeRegistration.idl
    CCM_Session2Context.idl
    CCM_Transaction.idl
    CosPersistentState.idl
    CCM_Container.idl
    CCM_SessionContext.idl
    CCM_SessionComponent.idl
    CCM_Container_Ex.idl
    CCM_StateIdFactory.idl
    CCM_Entity2Context.idl
    CCM_ComponentId.idl
    CCM_ExecutorLocator.idl
    CCM_EnterpriseComponent.idl
    CCM_SessionSynchronization.idl
    CCM_HomeRegistration.idl
    CCM_HomeExecutorBase.idl
  }

  Source_Files {
    CCM_TransactionC.cpp
    CosPersistentStateC.cpp
    CCM_ContainerC.cpp
    CCM_SessionContextC.cpp
    CCM_SessionComponentC.cpp
    CCM_EnterpriseComponentC.cpp
    CCM_SessionSynchronizationC.cpp
    CCM_CCMExceptionC.cpp
    CCM_ContextC.cpp
    SecurityC.cpp
    CCM_Container_ExC.cpp
    CCM_StateIdFactoryC.cpp
    CCM_ComponentIdC.cpp
    CCM_Entity2ContextC.cpp
    CCM_ExecutorLocatorC.cpp
    CCM_ProxyHomeRegistrationC.cpp
    CCM_Session2ContextC.cpp
    CCM_CCM2ContextC.cpp
    CCM_HomeRegistrationC.cpp
    CCM_HomeExecutorBaseC.cpp
    CCM_EntityContextC.cpp
    CCM_EntityComponentC.cpp
    CCM_EventsS.cpp
    CCM_EventConsumerBaseS.cpp
    CCM_EventBaseS.cpp
    CCM_ConfiguratorS.cpp
    CCM_HomeConfigurationS.cpp
    CCM_KeylessCCMHomeS.cpp
    CCM_StandardConfiguratorS.cpp
    CCM_HomeS.cpp
    CCM_ObjectS.cpp
    CCM_PrimaryKeyBaseS.cpp
    CCM_HomeFinderS.cpp
    CCM_NavigationS.cpp
    CCM_ReceptacleS.cpp
    CIAO_SwapExecC.cpp
    CIAO_UpgradeableContextC.cpp
    Cookies.cpp
    ComponentsS.cpp
  }

  Header_Files {
    CIAO_Container_Export.h
  }
}

project (CIAO_Server) : orbsvcslib \
                        , portableserver \
                        , valuetype \
                        , naming \
                        , ifr_client \
                        , utils \
                        , ciao_container_dnc \
                        , ciao_client_dnc \
                        , ciao_deployment_svnt \
                        , avoids_minimum_corba \
                        , avoids_corba_e_compact \
                        , avoids_corba_e_micro \
{
  includes     += $(CIAO_ROOT)
  sharedname   =  CIAO_Server
  idlflags     += -Wb,export_include=CIAO_Server_Export.h \
                  -Wb,export_macro=CIAO_SERVER_Export
  dynamicflags =  CIAO_SERVER_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    Container_Base.cpp
    Session_Container.cpp
    Swapping_Container.cpp
    Context_Impl_Base.cpp
    Home_Servant_Impl_Base.cpp
    Servant_Impl_Base.cpp
    Swapping_Servant_Home_Impl_Base.cpp
    Server_init.cpp
    Servant_Activator.cpp
    Dynamic_Component_Activator.cpp
    Dynamic_Component_Servant_Base.cpp
    Port_Activator.cpp
    StandardConfigurator_Impl.cpp
  }

  Header_Files {
    CIAO_Server_Export.h
    CIAO_common.h
  }

  Template_Files {
    Context_Impl_T.cpp
    Upgradeable_Context_Impl_T.cpp
    Home_Servant_Impl_T.cpp
    Swapping_Servant_Home_Impl_T.cpp
    Dynamic_Component_Servant_T.cpp
    Servant_Impl_T.cpp
    Servant_Impl_Utils_T.cpp
    Servant_Activator_T.cpp
  }
}
