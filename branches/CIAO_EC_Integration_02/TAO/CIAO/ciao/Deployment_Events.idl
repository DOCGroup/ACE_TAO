// $Id$

/**
 * @file Deployment_EventServices.idl
 *
 * @brief A collection of IDL data types for CIAO pub/sub services deployment.
 *
 * @author Gan Deng
 */

#if !defined (CIAO_DEPLOYMENT_EVENT_SERVICES_IDL)
#define CIAO_DEPLOYMENT_EVENT_SERVICES_IDL

#include <orb.idl>

module CIAO
{
  module DAnCE
  {
    /**
     * @brief A string containing the filename of the svc.conf file.
     * The current approach of specifying
     * svc.conf filename directly some harder problems such as
     * distribution of svc.conf files and the relative/absolute path to
     * the svc.conf file (the ServerResrouces xml document will have to
     * assume the svc.conf file will be available at specific location.)
     */
    typedef string SvcconfURI;

    /// CIAO specific extension to describe pub/sub services in the deployment
    enum EventServiceType
    {
      EC,
      RTEC,
      NOTIFY,
      RTNOTIFY
    };

    /// CIAO specific extension to describe pub/sub services in the deployment
    struct EventServiceDeploymentDescription
    {
      string name;
      string node;
      EventServiceType type;
      SvcconfURI svc_cfg_file;
    };

    typedef sequence < EventServiceDeploymentDescription >
      EventServiceDeploymentDescriptions;

    /// Event Filters
    enum FilterType
    {
      CONJUNCTION,
      DISJUNCTION,
      LOGICAL_AND,
      NEGATE
    };

    /// Each element in the EventSourceSet denotes a event source id
    typedef string EventSourceId;

    typedef sequence<EventSourceId> EventSourceSet;

    struct EventFilter
    {
      FilterType type;
      EventSourceSet sources;
    };

    typedef sequence < EventFilter > EventFilters;
  };
};

#endif /* CIAO_DEPLOYMENT_EVENT_SERVICES_IDL */
