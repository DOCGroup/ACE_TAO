#ifndef _ttcp_s_hh
#define _ttcp_s_hh

#include <ttcp_c.hh>
#include <corba.h>

/* This file is automatically generated by Orbeline.         */
/* Do not modify this file.                                  */
/* Orbeline (c) is copyrighted by PostModern Computing, Inc. */

class ttcp_sequence_impl: public virtual ttcp_sequence
{
    protected:
	ttcp_sequence_impl(const char *object_name = NULL);
	virtual ~ttcp_sequence_impl();
    public:
	virtual const CORBA::TypeInfo *_type_info() const {
		return ttcp_sequence::_type_info();
	}
	virtual void *_safe_narrow(const CORBA::TypeInfo *inf) const {
		return ttcp_sequence::_safe_narrow(inf);
	}
	virtual const char *_interface_name() const {
		return ttcp_sequence::_interface_name();
	}
	virtual CORBA::Boolean _is_local() const { return 1; }

	/* The following operations need to be implemented by the server. */
	virtual void send(const ttcp_sequence::my_sequence& ttcp_rec) = 0;
	virtual void send_hack(const CORBA::String& ttcp_string) = 0;
	virtual void start_timer() = 0;
	virtual void stop_timer() = 0;
	
	/* The following operations are implemented automatically. */
	
	static void _send(void *obj, CORBA::MarshalStream &strm,
			CORBA::Environment& _env, CORBA::Principal *principal);
	
	static void _send_hack(void *obj, CORBA::MarshalStream &strm,
			CORBA::Environment& _env, CORBA::Principal *principal);
	
	static void _start_timer(void *obj, CORBA::MarshalStream &strm,
			CORBA::Environment& _env, CORBA::Principal *principal);
	
	static void _stop_timer(void *obj, CORBA::MarshalStream &strm,
			CORBA::Environment& _env, CORBA::Principal *principal);
	
};
class ttcp_string_impl: public virtual ttcp_string
{
    protected:
	ttcp_string_impl(const char *object_name = NULL);
	virtual ~ttcp_string_impl();
    public:
	virtual const CORBA::TypeInfo *_type_info() const {
		return ttcp_string::_type_info();
	}
	virtual void *_safe_narrow(const CORBA::TypeInfo *inf) const {
		return ttcp_string::_safe_narrow(inf);
	}
	virtual const char *_interface_name() const {
		return ttcp_string::_interface_name();
	}
	virtual CORBA::Boolean _is_local() const { return 1; }

	/* The following operations need to be implemented by the server. */
	virtual void send(const CORBA::String& ttcp_string) = 0;
	virtual void send_hack(const CORBA::String& ttcp_string) = 0;
	virtual void start_timer() = 0;
	virtual void stop_timer() = 0;
	
	/* The following operations are implemented automatically. */
	
	static void _send(void *obj, CORBA::MarshalStream &strm,
			CORBA::Environment& _env, CORBA::Principal *principal);
	
	static void _send_hack(void *obj, CORBA::MarshalStream &strm,
			CORBA::Environment& _env, CORBA::Principal *principal);
	
	static void _start_timer(void *obj, CORBA::MarshalStream &strm,
			CORBA::Environment& _env, CORBA::Principal *principal);
	
	static void _stop_timer(void *obj, CORBA::MarshalStream &strm,
			CORBA::Environment& _env, CORBA::Principal *principal);
	
};

#endif

