// $Id$
project {

  staticname = IDL3

  // @@ (diego) This hack is needed because MPC doesn't generate
  // static-only projects for gnuace
  verbatim(gnuace, top) {
        static_libs_only = 1
  }

  includes += ../..  $(UTILITY_ROOT) $(BOOST_ROOT)

  Source_Files {
    LexicalAnalyzer.cpp
    Parser.cpp
    SyntaxTree/Component.cpp
    SyntaxTree/EventType.cpp
    SyntaxTree/Home.cpp
    SyntaxTree/Operation.cpp
    Traversal/Component.cpp
    Traversal/EventType.cpp
    Traversal/Home.cpp
    Traversal/Operation.cpp
  }

  Header_Files {
    SemanticAction/Impl/Component.hpp
    SemanticAction/Impl/Consumes.hpp
    SemanticAction/Impl/Elements.hpp
    SemanticAction/Impl/Emits.hpp
    SemanticAction/Impl/EventType.hpp
    SemanticAction/Impl/Factory.hpp
    SemanticAction/Impl/Home.hpp
    SemanticAction/Impl/HomeFactory.hpp
    SemanticAction/Impl/Include.hpp
    SemanticAction/Impl/Provides.hpp
    SemanticAction/Impl/Publishes.hpp
    SemanticAction/Impl/Uses.hpp
    SemanticAction/Component.hpp
    SemanticAction/Consumes.hpp
    SemanticAction/Elements.hpp
    SemanticAction/Emits.hpp
    SemanticAction/EventType.hpp
    SemanticAction/Factory.hpp
    SemanticAction/Home.hpp
    SemanticAction/HomeFactory.hpp
    SemanticAction/Provides.hpp
    SemanticAction/Publishes.hpp
    SemanticAction/Uses.hpp
    LexicalAnalyzer.hpp
    Parser.hpp
    SemanticAction.hpp
    SyntaxTree.hpp
    Token.hpp
    Traversal.hpp
    SyntaxTree/Component.hpp
    SyntaxTree/EventType.hpp
    SyntaxTree/Home.hpp
    SyntaxTree/Operation.hpp
    Traversal/Component.hpp
    Traversal/EventType.hpp
    Traversal/Home.hpp
    Traversal/Operation.hpp
  }

}