// -*- IDL -*-

/**
 * @file IORInterceptor.pidl
 *
 * $Id$
 *
 * @brief Pre-compiled IDL source for the IOR Interceptor
 * components in the ORB.
 *
 * The following is from orbos/99-12-02 Portable Interceptors spec,
 * the full IDL is downloadable from orbos/99-12-02. This file contains
 * interfaces from PortableInterceptor.idl that depend on 
 * ObjectReferenceFactory and ObjectReferenceTemplate, which inherit
 * directly or indirectly from CORBA::ValueBase. This separate file
 * has been created to remove the dependency from the rest of module
 * PortableInterceptor.
 *
 * This file was used to generate the code in IORInterceptorC.*
 * The command used to generate code is:
 *
 *  tao_idl
 *     -o orig -Gp -Gd -Ge 1 -Sa -St -GT
 *          -I$(TAO_ROOT)
 *          -Wb,export_macro=TAO_IORInterceptor_Export
 *          -Wb,export_include="iorinterceptor_export.h"
 *          -Wb,pre_include="ace/pre.h"
 *          -Wb,post_include="ace/post.h"
 *          IORInterceptor.pidl
 *
 * Patches for changes to the generated code are available in the
 * `diffs' directory.
 */

// File: IORInterceptor.idl
#ifndef _IOR_INTERCEPTOR_IDL_
#define _IOR_INTERCEPTOR_IDL_

#include "tao/PortableInterceptor.pidl"
#include "tao/ObjRefTemplate/ObjectReferenceTemplate.pidl"

module PortableInterceptor 
{
  typeprefix PortableInterceptor "omg.org";

  local interface IORInfo 
  {
    CORBA::Policy get_effective_policy (in CORBA::PolicyType type);

    void add_ior_component (in IOP::TaggedComponent a_component);

    void add_ior_component_to_profile (
        in IOP::TaggedComponent a_component,
        in IOP::ProfileId profile_id
      );

    readonly attribute AdapterManagerId manager_id;

    readonly attribute AdapterState state;

    readonly attribute ObjectReferenceTemplate adapter_template;

    attribute ObjectReferenceFactory current_factory;
  };

  local interface IORInterceptor : Interceptor 
  {
    void establish_components (in IORInfo info);

    void components_established (in IORInfo info);

    void adapter_manager_state_changed (
        in AdapterManagerId id, 
        in AdapterState state
      );
    void adapter_state_changed (
        in ObjectReferenceTemplateSeq templates,
        in AdapterState state
      );
  };
};

#endif  /* _IOR_INTERCEPTOR_IDL_ */
