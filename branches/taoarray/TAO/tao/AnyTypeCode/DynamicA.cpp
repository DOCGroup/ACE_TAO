// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

#include "tao/AnyTypeCode/DynamicA.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"

#include "tao/AnyTypeCode/StringSeqA.h"
#include "tao/AnyTypeCode/Dynamic_ParameterA.h"

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

#ifndef _TAO_TYPECODE_Dynamic_ParameterList_GUARD
#define _TAO_TYPECODE_Dynamic_ParameterList_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      Dynamic_ParameterList_0 (
        CORBA::tk_sequence,
        &Dynamic::_tc_Parameter,
        0U);

    ::CORBA::TypeCode_ptr const tc_Dynamic_ParameterList_0 =
      &Dynamic_ParameterList_0;

  }
}


#endif /* _TAO_TYPECODE_Dynamic_ParameterList_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Dynamic_ParameterList (
    CORBA::tk_alias,
    "IDL:omg.org/Dynamic/ParameterList:1.0",
    "ParameterList",
    &TAO::TypeCode::tc_Dynamic_ParameterList_0);

namespace Dynamic
{
  ::CORBA::TypeCode_ptr const _tc_ParameterList =
    &_tao_tc_Dynamic_ParameterList;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Dynamic_ContextList (
    CORBA::tk_alias,
    "IDL:omg.org/Dynamic/ContextList:1.0",
    "ContextList",
    &CORBA::_tc_StringSeq);

namespace Dynamic
{
  ::CORBA::TypeCode_ptr const _tc_ContextList =
    &_tao_tc_Dynamic_ContextList;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50



// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:937

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_TypeCode;
}


#ifndef _TAO_TYPECODE_Dynamic_ExceptionList_GUARD
#define _TAO_TYPECODE_Dynamic_ExceptionList_GUARD
namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      Dynamic_ExceptionList_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_TypeCode,
        0U);

    ::CORBA::TypeCode_ptr const tc_Dynamic_ExceptionList_0 =
      &Dynamic_ExceptionList_0;

  }
}


#endif /* _TAO_TYPECODE_Dynamic_ExceptionList_GUARD */

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Dynamic_ExceptionList (
    CORBA::tk_alias,
    "IDL:omg.org/Dynamic/ExceptionList:1.0",
    "ExceptionList",
    &TAO::TypeCode::tc_Dynamic_ExceptionList_0);

namespace Dynamic
{
  ::CORBA::TypeCode_ptr const _tc_ExceptionList =
    &_tao_tc_Dynamic_ExceptionList;
}



// TAO_IDL - Generated from
// be\be_visitor_typecode/alias_typecode.cpp:50

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_Dynamic_RequestContext (
    CORBA::tk_alias,
    "IDL:omg.org/Dynamic/RequestContext:1.0",
    "RequestContext",
    &CORBA::_tc_StringSeq);

namespace Dynamic
{
  ::CORBA::TypeCode_ptr const _tc_RequestContext =
    &_tao_tc_Dynamic_RequestContext;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Dynamic::ParameterList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Dynamic::ParameterList>::insert_copy (
      _tao_any,
      Dynamic::ParameterList::_tao_any_destructor,
      TAO::TypeCode::tc_Dynamic_ParameterList_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Dynamic::ParameterList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Dynamic::ParameterList>::insert (
      _tao_any,
      Dynamic::ParameterList::_tao_any_destructor,
      TAO::TypeCode::tc_Dynamic_ParameterList_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    Dynamic::ParameterList *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const Dynamic::ParameterList *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Dynamic::ParameterList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<Dynamic::ParameterList>::extract (
        _tao_any,
        Dynamic::ParameterList::_tao_any_destructor,
        TAO::TypeCode::tc_Dynamic_ParameterList_0,
        _tao_elem
      );
}



// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54


// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Dynamic::ExceptionList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Dynamic::ExceptionList>::insert_copy (
      _tao_any,
      Dynamic::ExceptionList::_tao_any_destructor,
      TAO::TypeCode::tc_Dynamic_ExceptionList_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Dynamic::ExceptionList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Dynamic::ExceptionList>::insert (
      _tao_any,
      Dynamic::ExceptionList::_tao_any_destructor,
      TAO::TypeCode::tc_Dynamic_ExceptionList_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    Dynamic::ExceptionList *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const Dynamic::ExceptionList *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Dynamic::ExceptionList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<Dynamic::ExceptionList>::extract (
        _tao_any,
        Dynamic::ExceptionList::_tao_any_destructor,
        TAO::TypeCode::tc_Dynamic_ExceptionList_0,
        _tao_elem
      );
}

TAO_END_VERSIONED_NAMESPACE_DECL
