Fri Dec  5 14:40:54 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:
          remove extra ';'

        * orbsvcs/tests/FT_App/run_test_demo.pl:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
          Improve documentation.

Fri Dec  5 11:49:01 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/run_test_basic.pl:
        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
          Cleaning up the comments mostly.

Thu Dec  4 16:46:15 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
          Nursemaid the notification thru the system until it triggers a
          recovery.  Remove questionable assumptions that were causing the
          analysis to fail.

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp:
          Initialize default property values -- including adding
          new methods to make it possible.


        * orbsvcs/orbsvcs/PortableGroup/PG_conf.h:
          Set defaults.  Add comments to complain about unnecessary limits
          (I'm afraid to remove the limits -- who knows what code depends
           on them).

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Add preliminary support for infrastructure-managed groups (needs work!).

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Always build the server first so the IDL gets compiled.

        * orbsvcs/tests/FT_App/run_test_rmnotifier.pl:
          doc change.


Thu Dec  4 10:20:34 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp:
          Typo in last checkin.

Thu Dec  4 10:07:33 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
          Build problems due to change in TagGroupTaggedComponent structure.

Thu Dec  4 09:56:12 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.h:
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
          Build problems due to change in TagGroupTaggedComponent structure.

Thu Dec  4 08:19:26 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
          Structure member name change:  ft_domain_id->group_domain_id

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
          Restore implementation of get_object_group_ref_from_id lost
          during reversion to original.

Wed Dec  3 14:37:41 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
          Fix fuzz from last checkin.

        * orbsvcs/orbsvcs/FT_CORBA.idl:
          Revert to the version with typedefs importing PortableGroup symbols into FT.
          This avoids problems during the merge into the main branch.

Wed Dec  3 14:08:12 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder_Find.h:
          Removed.  Renamed Properties_Decoder to Property_Set.

        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set_Find.h:
          Added.  Renamed Properties_Decoder to Property_Set.

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          Changes Properties_Decoder users to use new name.

Wed Dec  3 12:57:45 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
          build FT_ReplicationManager after FT_ReplicationManager_Lib

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
          Improved documentation.
          Change parameter to Properties_Encoder::from var & to pointer.

Wed Dec  3 09:18:34 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.h:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
          Linux build warnings.

Tue Dec  2 18:35:29 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.h:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
          Fuzz reports trailing spaces.

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Build warnings on linux.

Tue Dec  2 17:26:14 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Equal_To.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Hash.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Null_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Operators.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_conf.h:
        * orbsvcs/orbsvcs/PortableGroup/POA_Hooks.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.h:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/miopconf.h:
          Revert changes to portable group that aren't required
          to support HAFT.

Tue Dec  2 17:21:43 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.cpp:
          Fix it the way bala fixed it in the main trunk.


Tue Dec  2 14:34:51 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.cpp:
          Disable duplicate registration of HEARTBEAT_ENABLED policy factory.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          create_member uses the supplied criteria.

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Build warnings.

        * orbsvcs/tests/FT_App/run_test_basic.pl:
        * orbsvcs/tests/FT_App/run_test_demo.pl:
        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_rmnotifier.pl:
        * orbsvcs/tests/FT_App/run_test_rmregistry.pl:
          Identify error messages as coming from the test script.

Tue Dec  2 09:59:17 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
          Build warnings/errors on Solaris & linux.

Mon Dec  1 16:52:25 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Implement (by delegation) groups_at_location

        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
          Implement groups_at_location

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          New method: has_member_at to support groups_at_location.
          New method: add_member_to_iogr refactor support for updating IOGR
          Complete implementations of add_member, create_member,
          and *populate methods.


Mon Dec  1 15:24:27 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
          Remove create_member method.  It doesn't belong here.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Remove invalid assert.

Mon Dec  1 13:24:15 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Honor initial and minimum member counts.

Mon Dec  1 09:16:28 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Move implementation details to PG_Object_Group

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Declare remaining functions to support ReplicationManager.
          Stubbed out for now.

        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
          Resolve linux build warnings.

Sun Nov 30 11:53:38 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
          New: support for implementing a GenericFactory for groups.

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Remove all dependancies on PG_PropertyManager, PG_GenericFactory,
          and PG_ObjectGroupManager.  Uses PG_Properties_Support and
          PG_Group_Factory (which uses PG_Object_Groups) instead.

        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
          Add an init method for use when it's not stand-alone.

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
          Initialize Group Manipulator (probably moot since I intend
          to back out all changes to ObjectGroupManager.)

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Revise for use with Group_Factory.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.cpp:
          Init was throwing exception and returning status.
          Changed to report all errors via excepton.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Map.cpp:
          Removed this file.  It became part of PG_Group_Factory.

Fri Nov 28 18:04:32 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
          Linux/gcc build errors/warnings.

Fri Nov 28 17:37:36 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.cpp:
          Linux/gcc build errors/warnings.

Fri Nov 28 16:52:43 2003  Dale Wilson  <wilson_d@ociweb.com>

        * tao/IORManipulation/IORManipulation.h:
        * tao/IORManipulation/IORManipulation.cpp:
          Use meaningful argument names to reduce confusion.
          Add comment warning about inconsistent argument order.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.cpp:
          New files factor out IOGR creation and manipulation
          from PG_Object_Group and PG_ObjectGroupManager

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          IOGR stuff factored out.

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:


        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.cpp:
          Fuzz from last checkin.


Fri Nov 28 11:36:06 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/demo.pl:
          Rename this to be....
        * orbsvcs/tests/FT_App/run_test_demo.pl:
          ...new name.  It's still a "full" test.

        * orbsvcs/orbsvcs/PortableGroup/PG_Typeid_Properties_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Typeid_Properties_Map.cpp:
          Rename these to be PG_Properties_Support.*

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.cpp:
          Expand properties map into support for PropertiesManager interface.

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Use new PG_Properties_Support class to manage properties.

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
          Add "internals_" mutex.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Documentation change.



Fri Nov 28 08:33:56 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Typeid_Properties_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Typeid_Properties_Map.cpp:
          Build problems on Linux: const correctness.

Wed Nov 26 19:20:54 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
          Enhance Properties_Decoder to provide functions
          to implement the PropertyManager interface.
          --the name is no longer ideal.

        * orbsvcs/orbsvcs/PortableGroup/PG_Typeid_Properties_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Typeid_Properties_Map.cpp:
          New: a collection of Properties_Decoders

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Use the new, improved Properties_Decoder to implement PropertyManager

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Manage object group's properties via Properties_Decoder


Wed Nov 26 15:31:47 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp:
          Revert previous change -- it made things worse.
          This doesn't build on Solaris, but "It's not my problem."[TM]

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Minor build warnings on linux.

        * orbsvcs/tests/FT_App/run_test_basic.pl:
          Set the -f none option to tell the ReplicaFactory not to register itself
          for this basic test.

Wed Nov 26 12:22:46 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          LInux build errors/warnings.
          Feedback from code review:
           accessor methods all named get* or set*
           ACE::OS as necessary
           Extend internals check to additional methods.
           Document why PG_Object_Group::set_primary can't throw FT:PrimaryNotSet


        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp:
          Fix Solaris build problem -- redundant template instantiation.

Wed Nov 26 10:38:01 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
          Fix build errors/warnings on linux.

Tue Nov 25 17:40:01 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Add METHO_ENTRY/METHOD_RETURN to help debug Object_Group problem.

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          Support -r meaning don't register with ReplicationManager.

        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
          Check TAO_debug_level on error messages.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Build errors on linux.
          Object reference count mismanagement.
          Add TAO_debug_level controlled debug info.

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          Remove unnecessary messages.

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Improve messages.  Remove some unneeded ones.

        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_rmregistry.pl:
          Update command line options to reflect recent changes.

        * orbsvcs/tests/FT_App/README:
          Document test scripts.

        * orbsvcs/tests/FT_App/run_test_iogr.pl:
        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
          Retire these tests.
          Removed these files.

Tue Nov 25 12:10:24 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          fix fuzz warnings.

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica.idl:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Change to PortableGroup names.

Tue Nov 25 11:22:22 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FT_CORBA.idl:
        * orbsvcs/orbsvcs/FT_FaultDetectorFactory.idl:
        * orbsvcs/orbsvcs/FT_ReplicationManager.idl:
          Increase use of PortableGroup definitions to
          avoid confusion between synonyms (i.e. what's
          the difference between PortableGroup::Name and
          FT::Name?)

        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:

          Code review issues and use PortableGroup names.


        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Code review issues.
          Remove IOR Manipulator (moved into ObjectGroup)
          Add comments about parallel data structures.
          Move object group management code (create_object, add_member, remove_member)
          to TAO::PG_Object_Group class.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Map.cpp:
          Object group management code moved into Object_Group
          and protected with a MUTEX

        * orbsvcs/tests/FT_App/FT_Creator.h:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Fix build issues encountered on solaris & linux.

        * orbsvcs/tests/FT_App/replica.cmd:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
          Keep scripts up to date with recent code changes.

Wed Nov 19 14:30:07 2003  Dale Wilson  <wilson_d@ociweb.com>
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp
          Remove dead code.
          Cast string constant to avoid solaris compiler warning.

        * orbsvcs/tests/FT_App/README:
        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
          Clean up document.  Update tests to support newest options
          for the various programs.


Thu Nov 13 18:47:36 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          Don't confuse VC6 with an unexpected cast.

        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
          More explicit template instantiation issues.

Thu Nov 13 09:07:45 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FT_Client.cpp:
          Explicit template instantiation problem.

Wed Nov 12 18:13:35 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager_Main.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp:
        * orbsvcs/tests/FT_App/FTAPP_Analyzer_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_FaultConsumer_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_Replica.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
          Syntax errors in explicit template instantiations showed up on Solaris build.

Wed Nov 12 17:06:04 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerLib_export.h:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/tests/FT_App/FT_App.mpc:
          Move ReplicationManager files into a new library TAO_ReplicationManagerLib
          To make them available to other exe's (in particular orbsvcs/tests/FT_App/ft_consumer)

Wed Nov 12 08:08:07 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FTApp_Analyzer_Main.cpp:
        * orbsvcs/tests/FT_App/FTApp_FaultConsumer_Main.cpp:
          Renamed (remove these)

        * orbsvcs/tests/FT_App/FTApp_Analyzer_Main.cpp:
        * orbsvcs/tests/FT_App/FTApp_FaultConsumer_Main.cpp:
          Renamed (Add these)

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Case sensitive filenames

Tue Nov 11 19:30:02 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FTAPP_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
          More cleaning: unused args, missing in()s.

Tue Nov 11 18:41:46 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
          And another missing .in()

Tue Nov 11 18:28:17 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
          More cleaning: unused args, missing in()s.

Tue Nov 11 16:58:21 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          Cast to FT::DomainID to const char * to make Any >>= work (etc.)

Tue Nov 11 16:21:26 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder_Find.h:
          Found the build problem with the templated method (D'Oh!)
          It had nothing to do with templates and everything to do with const.

Tue Nov 11 14:36:55 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          Get rid of templated method.  Replace it with in-line code.

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder_Find.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder_Find.i:
          Delete these.  They still didn't build on linux.


Tue Nov 11 08:56:34 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder_Find.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder_Find.i:
          Split the templated function into its own file in hopes of
          pleasing gcc (and of complying with the ACE style guide.)

Mon Nov 10 17:12:48 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          More build errors.

Mon Nov 10 15:26:54 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
          More build errors.

Mon Nov 10 13:53:48 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
          Continuing build-error fix.  More missing in's, and some
          initializer ordering problems.

Mon Nov 10 11:19:40 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Fix build errors: missing .in ()s

        * tao/Utils/Server_Main.h:
        * tao/Utils/Server_Main.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FT_App/FT_Replica.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.h:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
          To avoid build errors.  Argument to init is always ORB_ptr.


Mon Nov 10 09:13:45 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * tao/Utils/Server_Main.h:
        * tao/Utils/Server_Main.cpp:
          More merge warnings/errors fixes.

Mon Nov 10 08:40:59 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/Fault_Detector/Fault_Detector.mpc:
        * orbsvcs/Fault_Notifier/Fault_Notifier.mpc:
          Undo the build fix that didn't work.

        * orbsvcs/orbsvcs/FT_FaultDetectorFactory.idl:
        * orbsvcs/orbsvcs/FT_Notifier.idl:
        * orbsvcs/orbsvcs/FT_Replica.idl:
        * orbsvcs/orbsvcs/FT_ReplicationManager.idl:
          Add the missing files.

Sun Nov  9 12:40:10 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/Fault_Detector/Fault_Detector.mpc:
        * orbsvcs/Fault_Notifier/Fault_Notifier.mpc:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp:
          Resolving build errors/warnings in linux & solaris builds.


Sat Nov  8 17:01:29 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.cpp:
        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.h:
        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager_Main.cpp:
        * orbsvcs/FT_ReplicationManager/README:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector.mpc:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
        * orbsvcs/Fault_Notifier/.cvsignore:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/Fault_Notifier.mpc:
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:
        * orbsvcs/LoadBalancer/LoadBalancer.mpc:
        * orbsvcs/examples/FaultTolerance/Makefile:
        * orbsvcs/examples/FaultTolerance/RolyPoly/CrashPoint.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/CrashPoint.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Log.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/LogACE_RB_Tree.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/LogStdMap.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/README:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.idl:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly_i.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly_i.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/StateUpdate.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/client.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/server.cpp:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/tests/FT_App/.cvsignore:
        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FTApp_Analyzer_Main.cpp:
        * orbsvcs/tests/FT_App/FTApp_FaultConsumer_Main.cpp:
        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.h:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_Replica.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica.idl:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/README:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.h:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
        * orbsvcs/tests/FT_App/demo.pl:
        * orbsvcs/tests/FT_App/run_test_basic.pl:
        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
        * orbsvcs/tests/FT_App/run_test_iogr.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
        * orbsvcs/tests/FT_App/run_test_rmnotifier.pl:
        * orbsvcs/tests/FT_App/run_test_rmregistry.pl:
        * orbsvcs/tests/FT_App/testscript:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/GroupRef_Manipulation.mpc:
        * orbsvcs/tests/FaultTolerance/IOGR/FaultTolerance_IOGR.mpc:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/FaultTolerance_IOGRManipulation.mpc:
          Last step in the merge. oci_haft + beta release ->oci_haft2

Fri Nov  7 17:01:12 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FT_CORBA.idl:
        * orbsvcs/orbsvcs/FT_CORBA_ORB.idl:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.i:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_PolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.i:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.i:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        Step three of the oci_haft merge.  Add the FaultTolerance directory.

Fri Nov  7 16:19:14 2003  Dale Wilson  <wilson_d@ociweb.com>
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
          Missed a spot.  Still fixing build warnings.

Fri Nov  7 15:36:37 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
          Resolve linux build problems revealed during merge.

Thu Nov  6 13:03:17 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FT_CORBA.idl:
        * orbsvcs/orbsvcs/PortableGroup.idl:

        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Equal_To.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Hash.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Null_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Operators.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_conf.h:
        * orbsvcs/orbsvcs/PortableGroup/POA_Hooks.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.h:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/miopconf.h:
          Next merge PortableGroup and make it build in the oci_haft2 branch.

Wed Nov  5 16:30:32 2003  Dale Wilson  <wilson_d@ociweb.com>

        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorC.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/ServerInterceptorAdapter.h:
        * tao/PortableServer/ServerInterceptorAdapter.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.i:
        * tao/TAO_Server_Request.cpp:
        * tao/Utils/Utils.mpc:
        * utils/catior/catior.cpp:
          First set of files to be merged from oci_haft_branch to oci_haft2_branch
          These are all files changed by the haft project that are not in orbsvcs.


Tue Nov  4 09:49:20 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup.idl:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Modify the tao_update_object_group method to take an additional
          argument: is_primary.  This will be true in for the IOGR pushed
          to the primary member and false for backup members.

        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
          "implement" modified tao_update_object_group method.
          Change thrown exception in hopes of triggering transparent
          reinvocation (no luck, yet.)

        These changes were made in the oci_haft branch.


Mon Nov  3 17:29:58 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * orbsvcs/examples/FaultTolerance/Makefile:
        * orbsvcs/examples/FaultTolerance/RolyPoly/CrashPoint.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/CrashPoint.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Log.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/LogACE_RB_Tree.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/LogStdMap.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/README:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.idl:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly_i.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly_i.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/StateUpdate.h:
        * orbsvcs/examples/FaultTolerance/RolyPoly/client.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/server.cpp:

          RolyPoly is a simple example that shows how to increase
          application reliability by using replication to tolerate
          faults. See README for details.

        These changes were made in the oci_haft branch.


Mon Nov  3 16:09:59 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
          Don't check IOGR on tao_update_object_group.
          Find IORManipulator in prep. for fixing is_primary_.

        These changes were made in the oci_haft branch.

Mon Nov  3 10:17:06 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Add support to update group members' IOGRS.

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup.idl:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
          Change method signature of tao_update_object_group.

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
          Minor formatting change in object group id conversion to string.

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Track Location of member in member structure.
          Distribute new IOGR to group members.
          Use 2-argument version of tao_update_object_group_method
          Temporary: dump IOGRs to files during IOGR distribution.

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Create fault detector for new group member.

        * orbsvcs/tests/FT_App/run_test_iogr.pl:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
        * orbsvcs/tests/FT_App/run_test_rmregistry.pl:
          Use file:// IOR syntax to pass IOGR to client.


        * orbsvcs/tests/FT_App/FT_UnitTests.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Client_Unit.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.h:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
          Use ACE_CHECK macros correctly, now that I (think I) understand them.

        * tao/Object.cpp:
          Add additional diagnostic information to error message.

        These changes were made in the oci_haft branch.

Fri Oct 31 11:38:07 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Added type_id() to get the type id of an object group.
          Delegates to PortableGroup's PG_ObjectGroupManager.

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
          Use FT_ReplicationManager's type_id() method to get the type
          id of a failed object group so we can unregister factories by
          location and type.

        These changes were made in the oci_haft branch.

Fri Oct 31 10:14:22 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:

          Added a comment for Dale

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:

          Fix in the main trunk trunk never got moved to the branch.

          These changes are in oci_haft_branch. They haven't been compiled
          yet.

Thu Oct 30 10:08:11 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs\tests\FaultTolerance\IOGRManipulation\FaultTolerance_IOGRManipulation.mpc:
          Case sensitive file name: s/Messaging/messaging/.

        These changes were made in the oci_haft branch.

Wed Oct 29 18:20:12 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:

          Made a simple mistake while trying to look at the number of
          arguments.

          These changes were made in the oci_haft branch.

Wed Oct 29 13:52:36 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Support IOGR in create_object and add_member.

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          unregister during fini.

        * orbsvcs/orbsvcs/FT_FaultDetectorFactory.idl:
          Define factory registration information for FaultDetectorFactory

        * orbsvcs/orbsvcs/FT_Replica.idl:
          Remove commented out GenericFactory declaration (it's in PortableGroup.idl)

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
          Add debug messages.

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Add interface TAO_UpdateObjectGroup for IOGR distribution.

        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:\
          Add a missing string_dup (ouch).

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
          New files used by ReplicationManager to store object group information.
          Among other things, includes support for distributing updated IOGR via TAO_UpdateObjectGroup interface.

        * orbsvcs/tests/FT_App/FT_Client.cpp:
          Cosmetic changes.

        * orbsvcs/tests/FT_App/FT_TestReplica.idl:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
          Derive from TAO_UpdateObjectGroup
          Stub implemntation of TAO_UpdateObjectGroup

        * orbsvcs/tests/FT_App/run_test_basic.pl:
          Add dummy -ORBInitRef to prevent multicasting for ReplicationManager.

        * utils/catior/catior.cpp:
          Add partial support for TAG_GROUP and TAG_FT_PRIMARY

        These changes were made in the oci_haft branch.

Tue Oct 28 10:28;20 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FaultTolerance/IOGR/FaultTolerance_IOGR.mpc:
        Case sensitive file name showed up in scoreboard.

        These changes were made in the oci_haft branch.

Tue Oct 28 08:20:30 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
          Minor coding style changes.

        These changes were made in the oci_haft branch.

Fri Oct 24 14:42:39 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Fix logic error in shutdown that caused fini to be called twice.
          Implement set_primary using IORManipulator (not working, yet)
          add_member creates IOGR's (but not very well, so far)

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
          temporary patch for changed method name in RegistrationFactory

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          Get FaultNotifier from ReplicationManager
          Register with ReplicationManager:FactoryRegistry

        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
          Register with ReplicationManager

        * orbsvcs/orbsvcs/PortableGroup.idl:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          fix spelling error s/criteron/criterion/

        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
          Add a missing/needed CORBA::string_dup

        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
          Fix race condition in managing factory creation ID.
          After fix, ObjectGroupManager assigns object group ids
          using full 64 bit PortableGroup::ObjectGroupId rather than
          relying on GenericFactory to assign them. Factory
          creation id is now a ObjectGroupId in an Any.

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.h:
        * orbsvcs/tests/FT_App/FT_App.mpc:
          Dump intermediate IOGRs as members are added.
          split application main from ObjectGroupCreator object.

        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
        * orbsvcs/tests/FT_App/run_test_rmregistry.pl:
          add message to indicate client vs infrastructure reinvocation
          switch to corbaloc addressing of ReplicationManager initial reference.

        * orbsvcs/tests/FT_App/run_test_rmnotifier.pl:
          new test: test notifier registration with replication manager
        * orbsvcs/tests/FT_App/run_test_iogr.pl:
          new test.  ft_create makes IOGRs

        These changes were made in the oci_haft branch.

Wed Oct 22 00:11:36 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
          Modified command line of Replication Manager to use
          -ORBEndpoint option and of clients of the Replication
          Manager to use -ORBInitRef ReplicationManager=...

        These changes were made in the oci_haft branch.

Tue Oct 21 21:58:31 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          The ReplicationManager now registers its IOR with the
          IORTable with the key-string "ReplicationManager" so clients
          can access it using resolve_initial_references() and
          something like:

          -ORBInitRef ReplicationManager=corbaloc::host:port/ReplicationManager

        These changes were made in the oci_haft branch.

Tue Oct 21 09:49:51 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Add FactoryRegistry to ReplicationManager
          remove obsolete create_test_iogr

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
          add a few more info messages.

        * orbsvcs/orbsvcs/PortableGroup.idl:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
          Modify FactoryRegistry interface to register factories by
          role, not by type

        * orbsvcs/tests/FT_App/FT_App.mpc:
          remove unneeded dependancies for ft_client. {ft_client is
          !NOT! JUnit.}

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica.idl:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_rmregistry.pl:
          Support the "roles" concept.  i.e. distinguish between the
          interface implemented by a replica (its type_id) and its
          capabilities and purpose (its role.)

        * orbsvcs/tests/FaultTolerance/IOGR/Client_i.h:
          add /**/ to pre.h and post.h includes

        These changes were made in the oci_haft branch.

Fri Oct 17 11:26:25 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
          Improved the implementation of the shutdown() operation.
          Instead of directly shutting down the ORB, it sets a quit
          flag that is returned by idle() the next time it is called
          from TAO::Utils::Server_Main<>::run().  That way, the
          Replication Manager shuts down in a nice clean fashion.

        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
          Added a simple client to control the Replication Manager.
          Right now, all it can do is shut it down.

        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
          Shut down the Replication Manager to cleanly end the test.

        These changes were made in the oci_haft branch.

Thu Oct 16 18:16:07 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
          Extended the fault analysis logic to determine if the number
          of replicas has fallen below the minimum for the object
          group and to add new members (via the registered factories
          for the object group's type).

        These changes were made in the oci_haft branch.

Tue Oct 14 18:35:07 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          Use FactoryRegistry in ReplicationManager if available.

        * orbsvcs/tests/FT_App/FactoryRegistry_i.cpp:
        * orbsvcs/tests/FT_App/FactoryRegistry_i.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
          Move and rename from FT_APP to PortableGroup

        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
          Use FactoryRegistry from PortableGroup

        * orbsvcs/tests/FT_App/FT_App.mpc:
          remove FactoryRegistry_i.cpp

        * orbsvcs/tests/FT_App/run_test_registry.pl:
          new unit test using ReplicationManager as FactoryRegistry

Tue Oct 14 18:30:45 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
          Removed some useless debugging statements.

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
          Added fault analysis logic to determine if the failed
          object was the primary member of its object group.

        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
          Fixed scripts to use new command line syntax.

        These changes were made in the oci_haft branch.

Tue Oct 14 15:21:19 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
          change command line option that specify multiple
          eliminate read_ior_file.  Expect file:// ior on command line instead.

        These changes were made in the oci_haft branch.

Tue Oct 14 13:52:18 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:

          Added an abstract FT_FaultAnalyzer class to provide an
          interface for validating and analyzing fault events from the
          FaultNotifier.  Created two implementations of the fault
          analyzer.  The "default" FaultAnalyzer is a no-op.  The
          ReplicationManager uses the FT_ReplicationManagerFaultAnalyzer.
          A Fault Analyzer is created by the "application" (e.g., the
          Replication Manager) and provided to the FT_FaultConsumer
          during its initialization.  Then, the Fault Consumer calls
          the Fault Analyzer to validate and analyze each fault event
          that arrives from the Fault Notifier.  Thus, the
          responsibilities for receiving faults and analyzing faults
          are separated, and different implementations of fault
          analysis are possible.

        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
          Integrate use of FaultAnalyzer.
          Removed readIORFile() and create_test_iogr() functions.

        * orbsvcs/orbsvcs/FT_ReplicationManager.idl:
          Minor reformatting for better readability.

        * orbsvcs/tests/FT_App/FT_UnitTests.cpp:
          Commented out use of create_test_iogr() on Replication
          Manager.

        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
          Use file:// syntax for FaultNotifier's IOR on Replication
          Manager's command line.

        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
          Put this script back to the way it was before it used the
          file:// syntax on the FaultConsumer's command line.  Still
          need to get rid of readIORFile() there and use
          string_to_object() properly.

        These changes were made in the oci_haft branch.

Tue Oct 14 11:33:13 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
          Add stub implementation for get_factory_registry

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
          fix tabs and spaces warning from previous check in

        These changes were made in the oci_haft branch.

Tue Oct 14 10:22:13 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FT_ReplicationManager.idl:
          remove the unneeded create_test_iogr method
          add get_factory_registry method
          syntax error: s/void oneway/oneway void/ shutdown

        * orbsvcs/tests/FT_App/FT_Client.cpp:
          eliminate use of Tao/examples/Simple.. stuff
          + common changes below

        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
          explicit FaultNotifier type in criteria's any.
          + common changes below

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          add -k command line option: -k type_id unregisters all factories for type_id
          if -f <factory registry> option is not specified,
            use resolve_initial_references("ReplicationManager") to find either
            a factory registry or a replication manager from which a factory registry
            can be retrieved.
          + common changes below

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
          common changes =
          change command line option that specify multiple
            iors from -f a,b,c to -f a -f b -f c
          eliminate read_ior_file.  Expect file:// ior on command line instead.

        * orbsvcs/tests/FT_App/run_test_basic.pl:
        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
          Change command line options to use the //file: ior syntax when necessary.
          Pass the factoryregistry in as a pseudo replication manager

        These changes were made in the oci_haft branch.

Mon Oct 13 11:37:03 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/orbsvcs/FT_ReplicationManager.idl:
          Added a TAO-specific shutdown() operation to the Replication
          Manager's interface.

        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
          Continued working on integration of FT_FaultConsumer with
          the Replication Manager.  Made several improvements to
          initializtion and finalization code.  Implemented
          TAO-specific shutdown() operation on Replication Manager.

        * orbsvcs/tests/FT_App/run_test_replication_mgr.pl:
          Added this unit test (still in work).

        These changes were made in the oci_haft branch.

Fri Oct 10 17:19:03 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
          More clean up of Replication Manager code.
          Initial integration of FT_FaultConsumer into Replication Manager.

        These changes were made in the oci_haft branch.

Fri Oct 10 13:58:04 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
          Added more fault analysis logic.

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager_Main.cpp:
          Updated to conform to ACE guidelines and new Server_Main.
          Still in progress.

        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
          Minor code cleanup.

        These changes were made in the oci_haft branch.

Fri Oct 10 12:09:39 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          Use ACE MUTEX macros.
          Avoid the evil _this().
          Use auto_ptr<>.

        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
          Use ACE MUTEX macros.
          Avoid the evil _this().

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
          Contrary to my comment, it is necessary to check status after find fails.
          Remove the comment; add the status check.

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Rename *Config project to *Creator

        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
          New files replace StubConfig.cpp

        * orbsvcs/tests/FT_App/StubConfig.cpp:
          Removed

        * orbsvcs/tests/FT_App/FT_Client.cpp:
          Add a temporary hack to make the process containing TestReplicas go away sooner.  Otherwise the test
          timed out waiting for the TestReplicaFactory to notice it was idle.

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
          Add support for location and type_id.
          Register the factory (or factories!) with the FactoryRegistry.

        * orbsvcs/tests/FT_App/FactoryRegistry_i.h:
        * orbsvcs/tests/FT_App/FactoryRegistry_i.cpp:
          Exit cleanly.  Use _remove_ref() to determine when we're really gone.
          Add additional logging.

        * orbsvcs/tests/FT_App/run_test_registry.pl:
          Test is working.

        * orbsvcs/tests/FT_App/testscript:
          Shorten sleep to make the test run faster


        * tao/Utils/ServantMain.h:
        * tao/Utils/ServantMain.cpp:
          RIP: No remaining users.
          Removed these files.

        * orbsvcs/tests/FT_App/StubBatchConsumer.h:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
          Ongoing work on conforming to ACE coding conventions.

        These changes were made in the oci_haft branch.

Thu Oct  9 14:26:48 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Added a TAO-specific get_object_group_ref_from_id()
          operation to PortableGroup::ObjectGroupManager.
          This operation will be needed by the FT_ReplicationManager
          to lookup the ObjectGroup reference from the ObjectGroupId
          that it receives in a fault report.  This operation may
          be generally useful to other services, as well.

          Also changed TagGroupTaggedComponent member
          "component_version" to "group_version" to match the
          following specs:
          - Load Balancing joint submission (mars/02-10-14)
          - Unreliabe Multicast final adopted spec (ptc/01-11-08)
          - Data Parallel CORBA final adopted spec (ptc/01-11-09)

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.h:
          Added implementation of TAO-specific
          get_object_group_ref_from_id() operation that delegates to
          the underlying PortableGroup ObjectGroupManager
          implementation.

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
          Use "group_version" instead of "component_version".

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
          Implemented TAO-specific get_object_group_ref_from_id()
          operation.
          Also, changed "component_version" to "group_version".

        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
          Changed "component_version" to "group_version".

        * orbsvcs/tests/FaultTolerance/IOGR/FaultTolerance_IOGR.mpc:
          Added portablegroup and Messaging base projects.

        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
          Changed "version" to "group_version" and "ft_domain_id" to
          "group_domain_id" to match names of members of
          PortableGroup::TagGroupTaggedComponent IDL struct.

        These changes were made in the oci_haft branch.

Thu Oct  9 14:24:47 2003  Steve Totten  <totten_s@ociweb.com>

        Applied the following changes on behalf of
        Curt Hibbs <hibbs_c@ociweb.com>:

        * orbsvcs/tests/FT_App/FT_UnitTests.cpp:
        * orbsvcs/tests/FT_App/FT_UnitTests.h:
          Made changes to use FT_ReplicaFactory to populate the FactoryInfos
          for unit testing.

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
          Fixed a bug in validating properties when creating groups.

        These changes were made in the oci_haft branch.

Wed Oct  8 13:59:40 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
          Added some initial fault analysis logic.

        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
          Added a new helper class for fault analysis.

        * orbsvcs/tests/FT_App/FTApp_FaultConsumer_Main.cpp:
        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
          Updated to work with new TAO::Utils::Server_Main<> framework.

        These changes were made in the oci_haft branch.

Tue Oct  7 16:47:50 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FT_App.mpc:
          add *Config project

        * orbsvcs/tests/FT_App/StubConfig.cpp:
          New file that drives the unit test for FactoryRegistry.

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          Register with FactoryRegistry.
          New command line options -l location -i type_id

        * orbsvcs/tests/FT_App/FactoryRegistry_i.h:
        * orbsvcs/tests/FT_App/FactoryRegistry_i.cpp:
          FactoryRegistry is working.

        * orbsvcs/tests/FT_App/run_test_registry.pl:
          Unit test for factory registry.

        * orbsvcs/tests/FT_App/run_test_detector.pl:
          Add new command line options for ReplicaFactory

        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
          Conform to ACE coding conventions. No functional changes.

        These changes were made in the oci_haft branch.

Tues Oct  7 08:44:52 2003  Dale Wilson  <wilson_d@ociweb.com>

        * tao/Utils/Server_Main.h:
        * tao/Utils/Server_Main.cpp:
          New files: Rename ServantMain.
          Eliminate use of TAO_ORB_Manager.
          Improve shutdown process.
          ServantMain wll be retired as soon as the switch-over is complete.

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
        * orbsvcs/tests/FT_App/FTAPP_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FTApp_Analyzer_Main.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Replica.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/FactoryRegistry_i.h:
        * orbsvcs/tests/FT_App/FactoryRegistry_i.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.h:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
          Switch from ServantMain to Server_Main
          Respond to style issues raised during code review and Bala's @@ notes.
          Fix shutdown race condition that caused unit test failures.

        * orbsvcs/tests/FT_App/run_test_notifier.pl:
          Reduce the timeouts for processes that we "know" will be gone.
          It makes the test fail faster when something goes wrong.

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Add run_test_basic.pl as a documentation file.
          Remove redundant comments.

        These changes were made in the oci_haft branch.

Mon Oct  6 17:18:30 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

    * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:

      Improper copy from the main trunk here.

    * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:

      Fixed a wrong delete that cuased the ORB to crash.

Thu Oct  2 15:12:50 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/tests/FT_App/lReplicationManagerFaultConsumerAdapter.h:

          Removed trailing spaces after previous commit.

        These changes were made in the oci_haft branch.

Thu Oct  2 14:21:13 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
          Added accessors for the consumer's object reference and the
          number of notifications it has received.  This is partially
          to support testing and may be removed later (though they are
          low impact).

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
          Cosmetic code changes to match ACE guidelines.

        * orbsvcs/tests/FT_App/FTApp_FaultConsumer_Main.cpp:
        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:

          Modifications to the test to make it work like other unit
          tests in this directory:
          - The Main is now very short and uses TAO::Utils::ServantMain<>.
          - Wrapped the FT_ReplicationManager's FT_FaultConsumer in an
            "adapter" class (ReplicationManagerFaultConsumerAdapter)
            which is test-framework savvy (so the consumer class doesn't
            have to be).
          - Modified the test script to be like the others.

        * orbsvcs/tests/FT_App/lReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/lReplicationManagerFaultConsumerAdapter.h:

          Added these two files as part of the changes described above.

        These changes were made in the oci_haft branch.

Thu Oct  2 11:23:02 2003  Curt Hibbs  <hibbs_c@ociweb.com>

        * TAO/orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * TAO/orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * TAO/orbsvcs/FT_ReplicationManager/FT_ReplicationManager_Main.cpp:
        * TAO/orbsvcs/tests/FT_App/FT_Client_Unit.cpp:
        * TAO/orbsvcs/tests/FT_App/FT_UnitTests.cpp:
        * TAO/orbsvcs/tests/FT_App/FT_UnitTests.h:
          Minor style and name changes to make the code following the
          ACE guidelines.

        These changes were made in the oci_haft branch.

Wed Oct  1 08:12:32 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
          Minor cleanup of code that gets the IORManipulation object.

        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
          Added TAO::FT_FaultConsumer class.  The FT_FaultConsumer
          will be used by the Replication Manager to subscribe to the
          Fault Notifier and process fault reports.  Just a stub
          implementation right now.

        * orbsvcs/tests/FT_App/FTApp_FaultConsumer_Main.cpp:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
          Added the beginnings of a unit test for the FT_FaultConsumer.

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Added project to build FT_FaultConsumer unit test.

        These changes were made in the oci_haft branch.

Tue Sep 30 16:31:12 2003  Curt Hibbs  <hibbs_c@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/tests/FT_App/FT_UnitTests.cpp:
          Minor changes to correct the way properties were being constructed
          and extracted.

        These changes were made in the oci_haft branch.

Tue Sep 30 15:58:42 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
          New into a var rather than into a pointer that gets assigned to the var later.

        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp:
        * orbsvcs/tests/FT_App/FactoryRegistry_i.h:
        * orbsvcs/tests/FT_App/FactoryRegistry_i.cpp:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
          New files: First implementation of FactoryRegistry interface (not working, yet.)

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Add project for FactoryRegistry

        * orbsvcs/tests/FT_App/README:
          Mention FactoryRegistry in documentation.

        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
          Minor changes to make these more ACE-like.

Tue Sep 30 11:45:49 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/Replay_Reply/Server_Request_Interceptor.cpp:

          The send_reply () method now uses generic ways to marshall the
          value inside an Any into the CDR stream. This now uses the
          undocumented marshal_value () in Any_Impl class.

Mon Sep 29 18:55:08 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/FaultTolerance/Replay_Reply:

          A new test for the feature mentioned below.

Mon Sep 29 18:39:05 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

          A temporary hack for Boris to keep progressing. The aim of this
          hack in the branch is to add a propreietary interception
          point. This is what this checkin is all about

          - Added a new interception point, tao_ft_interception_point ()
            on the server side.

          - This will be called on the server even before the
            receive_request_service_context () is called

          - The server can use this interception point to send back a
            reply without dispatching it to the object.

        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorC.h: Added the new interception point. A
          default implementation is provided, so that application
          developers don't need to implement the proprietary interception
          point.

        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.i: Added a new method which will be used
          to send cached replies back to the client.

        * tao/PortableServer/Object_Adapter.cpp: Called the proprietary
          interception point.

        * tao/PortableServer/ServerInterceptorAdapter.cpp:
        * tao/PortableServer/ServerInterceptorAdapter.h:  Added the first
          interception point to be the tao's proprietary interception
          point.

          This shouldn't be needed once we merge in 1369. But till then we
          may need this hack.

Mon Sep 29 18:19:51 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.cpp:
          Fixed compilation error in VC++ 6.0 involving re-use
          of 'i' as a for loop control variable.

Mon Sep 29 16:15:55 2003  Curt Hibbs  <hibbs_c@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.cpp:
        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager_Main.cpp:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FT_CORBA.idl:
        * orbsvcs/orbsvcs/FT_CORBA_ORB.idl:
        * orbsvcs/orbsvcs/FT_ReplicationManager.idl:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/orbsvcs/PortableGroup.idl:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_conf.h:
          TagFTGroupTaggedComponent was previously moved to Portablegroups
          as  TagGroupTaggedComponent, but was never removed from
          FT_CORBA_ORB.idl.   Consequently, some code was using the
          PortableGroup version and some code was using the FT
          version. This removes the FT version and changes all code that
          referenced it to now use the PortableGroup version.

        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FT_App/FT_Client_Unit.cpp:
        * orbsvcs/tests/FT_App/FT_UnitTests.cpp:
          The Replication Manager's unit tests were removed from the FT test
          App and moved into its own module.

        These changes were made in the oci_haft branch.

Mon Sep 29 07:22:35 2003  Curt Hibbs  <hibbs_c@ociweb.com>

        * CIAO/CIDLC/cidlc.vcproj:
        * CIAO/CIDLC/parser_examples/cidl/cidl.vcproj:
        * CIAO/CIDLC/parser_examples/cidl/idl2.vcproj:
        * CIAO/CIDLC/parser_examples/cidl/idl3.vcproj:
          Removed generated files that should not have been checked in.

        These changes were made in the oci_haft branch.

Fri Sep 26 19:31:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

  * orbsvcs/orbsvcs/PortableGroup/PG_Utils.cpp (TAO):
  * orbsvcs/orbsvcs/PortableGroup/PG_Utils.h: Moved group reference
    manipulation functions to a new file which will be used within
    the PortableGroup.

  * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp
  * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
  * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
  * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.cpp:
  * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.cpp: Removed
    dependency on the FT library which was unnecessary in the first
    place.

    Fixed warnings and errors with g++ builds.

Thu Sep 25 16:08:35 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          Change quit on idle to avoid quiting if startup takes too long

        * orbsvcs/tests/FT_App/FT_App.mpc:
          Derive client from orbsvcsexe to support includes from TAO/orbsvcs
          Remove FT_UnitTests from FT_Client.  Unit tests should have their own exe.

        * orbsvcs/tests/FT_App/FT_Client.cpp:
          Roll back client to before unit tests were added.

        * orbsvcs/tests/FT_App/FT_Client_Unit.cpp:
          Capture Client code including unit tests (not working)

        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
          Convert stand alone test replica to GenericFactory<TestReplica>

        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
          remove annoying "todo".  It's good enough as-is.

        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
          Use new -t option for FT_Replica  (GenericFactory test mode.)

        These changes were made in the oci_haft branch.

Wed Sep 24 17:05:00 2003  Curt Hibbs  <hibbs_c@ociweb.com>

        * orbsvcs/LoadBalancer/LoadBalancer.mpc:
          Added dependency on iormanip to eliminate link errors.

        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.cpp:
          Explicitly cast the intentional conversion of an int to
          a float to eliminate a compiler warning on VC++ 7.1.

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:

        * tao/Utils/Utils.mpc:
          Added dependency on portableserver to eliminate link errors.

        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FT_CORBA_ORB.idl:
          Temporarily reverted to TagFTGroupTaggedComponent (which duplicates
          TagGroupTaggedComponent) because it causes a circular dependency
          problem. Will reinstate this change later.

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
          Explicitly cast to ULong to eliminate compiler warning on VC++ 7.

        These changes were made in the oci_haft branch.

Wed Sep 24 11:41:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

  * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:

    #included FT_IOGR_Property.h to get the test compling.

Tue Sep 23 21:30:00 2003  Curt Hibbs  <hibbs_c@ociweb.com>

        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/FaultTolerance_IOGRManipulation.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
          Changed to eliminate link errors.

        * orbsvcs/orbsvcs/FT_CORBA_ORB.idl:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.cpp:
          TagFTGroupTaggedComponent was previously moved to Portablegroups
    as  TagGroupTaggedComponent, but was never removed from
    FT_CORBA_ORB.idl.   Consequently, some code was using the
    PortableGroup version and some code was using the FT
    version. This removes the FT version and changes all code that
    referenced it to now use the PortableGroup version.

        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_UnitTests.cpp:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
          Changed to eliminate compile errors due to merging changes.

        These changes were made in the oci_haft branch.

Tue Sep 23 17:19:48 2003  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/Fault_Detector/Fault_Detector.mpc:
        * orbsvcs/Fault_Notifier/Fault_Notifier.mpc:
    Added inheritance from orbsvcsexe base project to resolve
    include path problems.

        * orbsvcs/orbsvcs/FaultTolerance.mpc:
          Manipulated the SourceFiles list to resolve some link errors.

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
          Changed forward declaration of IOP::ServiceContext to quiet
    compiler warnings on VC++ 6.0.

Tue Sep 23 17:03:40 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/tests/FT_App/FT_App.mpc:
          fix mpc->include path to find TAO/orbsvcs/orbsvcs/* stuff

        * orbsvcs/tests/FT_App/FT_Replica.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
          finish code (still untested) for ReplicaFactory.

        * tao/Utils/ServantMain.h:
          fix documentation

        These changes were made in the oci_haft branch.

Mon Sep 22 18:26:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp: The
    set_component () created problems if we don't send a constant
    version of TAO_Tagged_Components.

Mon Sep 22 17:42:23 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/test/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/test/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/test/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/test/FT_App/FT_Replica.cpp:
          Implement GenericFactory to create test replicas.

          These changes were made in the oci_haft branch.

Mon Sep 22 17:05:31 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Notifier/Fault_Notifier.mpc:
          Fixing some library dependancies.  Nothing significant.

          These changes were made in the oci_haft branch.

Sat Sep 20 16:46:29 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
          Added explicit template specifications.

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h: Added
          exception specification for  get_tagged_components ().

        * orbsvcs/tests/FaultTolerance/IOGRManipulation/IOGRTest.cpp:
          Test for get_tagged_components () added.

Fri Sep 19 20:02:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h: Did a 20000 feet level
          code review and left comments for OCI folks. More needs to be
          done.

        * orbsvcs/orbsvcs/Makefile.CosLoadBalancing:
        * orbsvcs/orbsvcs/Makefile.PortableGroup: Added an -I for the IDL
          compiler to include orbsvcs

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.cpp: Fixed
          compilation errors and unused variable warnings with g++.

Fri Sep 19 19:49:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
          Server interceptors for the FTORB. This interceptor does the
          following at present

          - Checks the IOGR version of the incoming message and does what
            is specified in the FTCORBA spec

          - Checks for the special operation that we will have the RM send
            us to udate the IOGR and the version information.

          We need an operation to find out whether the replica is a
          primary or not and take required action.

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
          Moved all the interceptors to be in TAO namespace. We now have
          the retention id implemented properly. We now

          - on an outgoing operation, we generate a new retention id and
            stick it in the TSS

          - once a reply is received we clear it off the TSS

          - if a forward location happens we reuse the one form TSS.

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h: Changes
          requested by Curt Hibbs, which was to get the group information
          from within a IOGR.

        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.cpp: Installed
          server interceptors.

        * orbsvcs/orbsvcs/Makefile.FTORB: Added the
          ServerRequestInterceptor to the Makefile.

Fri Sep 19 16:29:42 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          Reuse fault detector IDs.  Previously the vector of detectors was
          allowed to grow indefinately.  Now unused slots are located and reused.

        These changes were made in the oci_haft branch.

Fri Sep 19 13:50:09 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs\FT_ReplicationManager\FT_ReplicationManager.cpp:
        * orbsvcs\FT_ReplicationManager\FT_ReplicationManager.h:
          Added new includes needed because of changes made to reduce
          include dependancies in the HEAD branch.

        These changes were made in the oci_haft branch.

Thu Sep 18 12:20:48 2003  Dale Wilson  <wilson_d@ociweb.com>

        Continue merge HEAD->oci_haft_branch, and

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:

        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:

        * orbsvcs/orbsvcs/FT_FaultDetectorFactory.idl:

        * tao/Utils/ServantMain.cpp
        * tao/Utils/ServantMain.h

          Change fault detector and fault notifier to use ServantMain.
          These changes were made in the oci_haft branch.

Wed Sep 18 11:30:00 2003  Curt Hibbs  <hibbs_c@ociweb.com>

        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.cpp:
        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager_Main.cpp:
        * orbsvcs/FT_ReplicationManager/README:
        * orbsvcs/orbsvcs/FT_ReplicationManager.idl:
    These files were added as part of the initial check in of
    Replication Manager implementation.

        * orbsvcs\orbsvcs\FT_CORBA.idl:
        * orbsvcs\orbsvcs\FaultTolerance.mpc:
        * orbsvcs\orbsvcs\PortableGroup\PG_Default_Property_Validator.cpp:
        * orbsvcs\orbsvcs\PortableGroup\PG_Default_Property_Validator.h:
        * orbsvcs\orbsvcs\PortableGroup\PG_Factory_Set.h:
        * orbsvcs\orbsvcs\PortableGroup\PG_GenericFactory.cpp:
        * orbsvcs\orbsvcs\PortableGroup\PG_GenericFactory.h:
        * orbsvcs\orbsvcs\PortableGroup\PG_Group_Guard.cpp:
        * orbsvcs\orbsvcs\PortableGroup\PG_Group_Guard.h:
        * orbsvcs\orbsvcs\PortableGroup\PG_ObjectGroupManager.cpp:
        * orbsvcs\orbsvcs\PortableGroup\PG_ObjectGroupManager.h:
        * orbsvcs\orbsvcs\PortableGroup\PG_ObjectGroup_Map.cpp:
        * orbsvcs\orbsvcs\PortableGroup\PG_ObjectGroup_Map.h:
        * orbsvcs\orbsvcs\PortableGroup\PG_PropertyManager.cpp:
        * orbsvcs\orbsvcs\PortableGroup\PG_PropertyManager.h:
        * orbsvcs\orbsvcs\PortableGroup\PG_Property_Utils.cpp:
             This code was modified in support of the Replication Manager,
             and contains the following major changes:
             - The property validator is now settable.
             - The ObjectGroupId was changed to CORBA:ULongLong to match
               the spec.
             - The FactoryCreationId and the ObjectGroupId are now separate
               entities (they wer assumed to be the same).
             - GroupEntries are now accessed (keyed) by ObjectGroupId
               (previously they were accessed by FactoryCreateionId).

        * orbsvcs\tests\FT_App\FT_App.mpc:
        * orbsvcs\tests\FT_App\FT_Client.cpp:
        * orbsvcs\tests\FT_App\FT_UnitTests.cpp:
        * orbsvcs\tests\FT_App\FT_UnitTests.h:
             Unit test scaffolding was added for the Replication Manager,
             and several unit tests were included.

          These changes were made in the oci_haft branch.

Wed Sep  3 13:35:32 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          Get the ENV args right.

        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:
          Fault Notifier passes unit test

        MOVE FROM....

        * tests/FT_App/.cvsignore:
        * tests/FT_App/FTAPP_Notifier_Main.cpp:
        * tests/FT_App/FT_App.mpc:
        * tests/FT_App/FT_Client.cpp:
        * tests/FT_App/FT_Replica.cpp:
        * tests/FT_App/FT_TestReplica.idl:
        * tests/FT_App/FT_TestReplica_i.h:
        * tests/FT_App/FT_TestReplica_i.cpp:
        * tests/FT_App/README:
        * tests/FT_App/StubFaultNotifier.h:
        * tests/FT_App/StubFaultNotifier.cpp:
        * tests/FT_App/run_test_basic.pl:
        * tests/FT_App/run_test_notifier.pl:
        * tests/FT_App/testscript:

        MOVE TO...
        * orbsvcs/tests/FT_App/.cvsignore:
        * orbsvcs/tests/FT_App/FTAPP_Notifier_Main.cpp:
        * orbsvcs/tests/FT_App/FTApp_Analyzer_Main.cpp:
        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Replica.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica.idl:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/README:
        * orbsvcs/tests/FT_App/StubBatchConsumer.h:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/run_test_basic.pl:
        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/testscript:

          These changes were made in the oci_haft branch.

Wed Aug 27 13:45:45 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:
          code complete non FT FaultNotifier.  Needs unit test.

        * tests/FT_App/FTAPP_Notifier_Main.cpp:
        * tests/FT_App/FT_Client.cpp:
          clean up in prep for FaultNotifier unit test

          These changes were made in the oci_haft branch.

Mon Aug 25 16:28:22 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Notifier/.cvsignore:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/Fault_Notifier.mpc:
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp:
          First pass at Fault notifier service (not working, but it builds.)

          These changes were made in the oci_haft branch.

Wed Aug 20 09:38:28 2003  Dale Wilson  <wilson_d@ociweb.com>

        * tests/FT_App/FT_Replica.cpp:
          let orb parse args first.
        * tests/FT_App/run_test_notifier.pl:
          --debug_build option to use debug build
          --no_simulate option to disable client-simulated fault tolerance
          -v option to make the perl script verbose.

          These changes were made in the oci_haft branch.

Thu Aug  7 16:39:14 2003  Dale Wilson  <wilson_d@ociweb.com>

        Move oci_haft change log entries from $ACE_ROOT/ChangeLog to here

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
          Make dependancy on NameService optional.

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Fix include so PortableGroup can be included from outside
          orbsvcs directory.

        * tests/FT_App/FT_Client.cpp:
        * tests/FT_App/FT_Replica.cpp:
        * tests/FT_App/FT_TestReplica.idl:
        * tests/FT_App/FT_TestReplica_i.h:
        * tests/FT_App/FT_TestReplica_i.cpp:
        * tests/FT_App/run_test_notifier.pl:
        * tests/FT_App/testscript:
          Make fault points generic rather than method specific.   Add
          "before replication" fault point.

          These changes were made in the oci_haft branch.

Wed Aug 06 14:40:00 2003  Curt Hibbs <hibbs_c@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/orbsvcs/FT_CORBA.idl:
        * orbsvcs/orbsvcs/FT_FaultDetectorFactory.idl:
          Completed the conditional use of PortableGroups in FT_CORBA.idl
          that was begun by Dale Wilson. The typedef trick used by Dale
          to allow PortableGroup symbols to be used in the FT namespace
          does not work for exceptions, so I also had to modify the
          existing code to use "PortableGroup::" scoping on exceptions.

          These changes were made in the oci_haft branch.

Thu Jul 31 14:36:01 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
        * tests/FT_App/FT_TestReplica.idl:
        * tests/FT_App/FT_TestReplica_i.h:
          Housekeeping.

        * orbsvcs/orbsvcs/FT_Detector.idl:
          Renamed to be:
        * orbsvcs/orbsvcs/FT_FaultDetectorFactory.idl:

          These changes were made in the oci_haft branch.

Wed Jul 30 14:59:01 2003  Dale Wilson  <wilson_d@ociweb.com>

        Milestone: FaultDetector passes unit test (run_test_notifier.pl)

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector.mpc:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:

        * tests/FT_App/FTAPP_Notifier_Main.cpp:
        * tests/FT_App/FT_App.mpc:
        * tests/FT_App/FT_Client.cpp:
        * tests/FT_App/FT_Replica.cpp:
        * tests/FT_App/FT_TestReplica.idl:
        * tests/FT_App/FT_TestReplica_i.h:
        * tests/FT_App/FT_TestReplica_i.cpp:
        * tests/FT_App/StubFaultNotifier.h:
        * tests/FT_App/StubFaultNotifier.cpp:
        * tests/FT_App/run_test_basic.pl:
        * tests/FT_App/run_test_notifier.pl:
        * tests/FT_App/testscript:

        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Decoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp:
          Formerly named PG_Property_Set_Helper*

        * orbsvcs/Fault_Detector/PG_Property_Set_Helper.h:
        * orbsvcs/Fault_Detector/PG_Property_Set_Helper.cpp:
          Rename and move to orbsvcs/orbsvcs/PG_Properties*

        * tests/FT_App/run_test.pl:
          Rename to run_test_basic.pl

          These changes were made in the oci_haft branch.

Wed Jul 30 12:55:25 2003  Dale Wilson  <wilson_d@ociweb.com>

        * bin/MakeProjectCreator/config/fault_tolerance.mpb:
          new file for configurations that use fault_tolerance.

          These changes were made in the oci_haft branch.

Mon Jul 28 16:20:29 2003  Dale Wilson  <wilson_d@ociweb.com>


        * orbsvcs/Fault_Detector/Detector_i.h:
        * orbsvcs/Fault_Detector/Detector_i.cpp:
        * orbsvcs/Fault_Detector/FT_DetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_DetectorFactory_i.cpp:
          Renamed these files to...
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
          ...respectively

        * orbsvcs/orbsvcs/FT_CORBA.idl:
        * orbsvcs/orbsvcs/FT_Notifier.idl:
        * orbsvcs/orbsvcs/FT_Replica.idl:
          Modified IDL to use PortableGroup definitions in FT.

        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/PG_Property_Set_Helper.h:
        * orbsvcs/Fault_Detector/PG_Property_Set_Helper.cpp:
          Use PortableGroup definitions.

        * orbsvcs/Fault_Detector/Fault_Detector.mpc:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
          Build renamed files.

        * tests/FT_App/FT_App.mpc:
        * tests/FT_App/FT_Client.cpp:
        * tests/FT_App/FT_Replica.cpp:
        * tests/FT_App/FT_TestReplica.idl:
        * tests/FT_App/FT_TestReplica_i.h:
        * tests/FT_App/FT_TestReplica_i.cpp:
          Continue work on unit test for FaultDetector.

          These changes were made in the oci_haft branch.

Wed Jul 23 17:23:33 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/Detector_i.h:
        * orbsvcs/Fault_Detector/Detector_i.cpp:
        * orbsvcs/Fault_Detector/FT_DetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_DetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector.mpc:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/PG_Property_Set_Helper.h:
        * orbsvcs/Fault_Detector/PG_Property_Set_Helper.cpp:
          FaultDetector is code-complete.  No tests available, yet.

        * orbsvcs/Fault_Detector/Fault_Detector.h:
        * orbsvcs/Fault_Detector/Fault_Detector.cpp:
          Removed these files.

          These changes were made in the oci_haft branch.

Tue Jul 22 14:47:14 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/Fault_Detector/Detector_i.h:
        * orbsvcs/Fault_Detector/Detector_i.cpp:
        * orbsvcs/Fault_Detector/FT_DetectorFactory_i.h:
        * orbsvcs/Fault_Detector/FT_DetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector.h:
        * orbsvcs/Fault_Detector/Fault_Detector.mpc:
        * orbsvcs/Fault_Detector/Fault_Detector.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp:
        * orbsvcs/Fault_Detector/PG_Property_Set_Helper.h:
        * orbsvcs/Fault_Detector/PG_Property_Set_Helper.cpp:
          First pass at Fault Detector.  Compiles OK.  Does NOT work yet.

        These changes were made in the oci_haft branch.

Wed Jul 16 17:53:01 2003  Dale Wilson  <wilson_d@ociweb.com>

        * examples/Simple/Simple_util.h:
        * examples/Simple/Simple_util.cpp:
          Add "reconnect*" methods to allow switching to a different
          servant on-the-fly.  This is used in the client-simulated
          Fault Tolerance test.

        * tests/FT_App/FT_Client.cpp:
        * tests/FT_App/FT_Replica.cpp:
        * tests/FT_App/FT_TestReplica.idl:
        * tests/FT_App/FT_TestReplica_i.h:
        * tests/FT_App/FT_TestReplica_i.cpp:
        * tests/FT_App/README:
        * tests/FT_App/run_test.pl:
        * tests/FT_App/testscript:
          Add client-simulated fault tolerance to allow FT_App
          to pass the unit test.  When FT CORBA is working we should
          be able to disable client simulated FT (via command line),
          and it should still pass.

          These changes were made in the oci_haft branch.

Wed Jul 16 09:51:12 2003  Dale Wilson  <wilson_d@ociweb.com>

        * tests/FT_App/.cvsignore:
        * tests/FT_App/FT_App.mpc:
        * tests/FT_App/FT_Client.cpp:
        * tests/FT_App/FT_Replica.cpp:
        * tests/FT_App/FT_TestReplica.idl:
        * tests/FT_App/FT_TestReplica_i.h:
        * tests/FT_App/FT_TestReplica_i.cpp:
        * tests/FT_App/README:
        * tests/FT_App/run_test.pl:
        * tests/FT_App/testscript:
          New directory, new files.

        This is the first pass of FT_App, an application to test
        Fault Tolerant CORBA.

        FT_Replica is a server that manages a persistent long counter.

        FT_Client is a script-driven client for FT_Replica.  It
        uses CORBA calls to change the value of the counter and to
        request that the replica "fault" at various stages of the
        process.

        FT_Client can also exercise the updatable and checkpointable
        interfaces in FT_Replica.

        The README file explains this in greater detail.

        These changes were made in the oci_haft branch.

Tue Jul 15 12:33:04 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FT_CORBA.idl:
        * orbsvcs/orbsvcs/FT_Detector.idl:
        * orbsvcs/orbsvcs/FT_Notifier.idl:
        * orbsvcs/orbsvcs/FT_Replica.idl:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
          Separating the OMG FT.idl into managable pieces.

        These changes were made in the oci_haft branch.

