
//=============================================================================
/**
 *  @file    RTEventLogAdmin.idl
 *
 *  $Id$
 *
 *  This module defines the EventLog and
 *  EventLogFactory interfaces.
 *
 *
 *  @author D A Hanvey (d.hanvey@qub.ac.uk)
 */
//=============================================================================


#ifndef RTEVENT_LOG_ADMIN_IDL
#define RTEVENT_LOG_ADMIN_IDL

#include "RtecEventChannelAdmin.idl"
// CORBA Event Service

#include "DsLogAdmin.idl"

#pragma prefix "omg.org"

module RTEventLogAdmin
{
  interface EventLog : DsLogAdmin::Log,
      RtecEventChannelAdmin::EventChannel{};

  interface EventLogFactory : DsLogAdmin::LogMgr,
      RtecEventChannelAdmin::ConsumerAdmin
  {
  EventLog create (
    in DsLogAdmin::LogFullActionType  full_action,
    in unsigned long long     max_size,
    in DsLogAdmin::CapacityAlarmThresholdList thresholds,
    out DsLogAdmin::LogId id
  ) raises (DsLogAdmin::InvalidLogFullAction,
                    DsLogAdmin::InvalidThreshold);

  EventLog create_with_id (
    in DsLogAdmin::LogId id,
    in DsLogAdmin::LogFullActionType full_action,
    in unsigned long long max_size,
    in DsLogAdmin::CapacityAlarmThresholdList thresholds
  ) raises (DsLogAdmin::LogIdAlreadyExists,
                    DsLogAdmin::InvalidLogFullAction,
        DsLogAdmin::InvalidThreshold);

  };

};

#endif /* RTEVENT_LOG_ADMIN_IDL */
