// $Id$

project(AMI_UsesSM_idl_gen) : componentidldefaults, ami, ami4ccm_stub {
  custom_only = 1
  idlflags += -Wb,stub_export_macro=USESSM_STUB_Export \
              -Wb,stub_export_include=UsesSM_stub_export.h \
              -Wb,skel_export_macro=USESSM_SKEL_Export \
              -Wb,skel_export_include=UsesSM_skel_export.h \
              -Wb,conn_export_macro=USESSM_CONN_Export \
              -Wb,conn_export_include=UsesSM_conn_export.h \
              -Wb,exec_export_macro=USESSM_EXEC_Export \
              -Wb,exec_export_include=UsesSM_exec_export.h \
              -I.. -GM -Gxhcn


  IDL_Files {
    UsesSM.idl
  }
}

project(AMI_UsesSM_lem_gen) : ciaoidldefaults {
  after += AMI_UsesSM_idl_gen AMI_UsesSM_lema_gen
  custom_only = 1
  idlflags += -Wb,export_macro=USESSM_LEM_STUB_Export \
              -Wb,export_include=UsesSM_lem_stub_export.h \
              -I.. -SS -Gxhst

  IDL_Files {
    UsesSME.idl
  }
}

project(AMI_UsesSM_lema_gen) : ciaoidldefaults, typecode {
  after += AMI_UsesSM_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=USESSM_STUB_Export \
              -Wb,stub_export_include=UsesSM_stub_export.h \
              -Wb,conn_export_macro=USESSM_CONN_Export \
              -Wb,conn_export_include=UsesSM_conn_export.h \
              -Wb,svnt_export_macro=USESSM_SVNT_Export \
              -Wb,svnt_export_include=UsesSM_svnt_export.h \
              -Wb,skel_export_macro=USESSM_SKEL_Export \
              -Wb,skel_export_include=UsesSM_skel_export.h \
              -I.. -Gsv -Gcn -Glem -GC -Gxhst -Gxhsv

  IDL_Files {
    UsesSMA.idl
  }
}

project(AMI_UsesSM_lemae_gen) : ciaoidldefaults {
  after += AMI_UsesSM_lema_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=USESSM_LEM_STUB_Export \
              -Wb,stub_export_include=UsesSM_lem_stub_export.h \
              -I.. -SS

  IDL_Files {
    UsesSMAE.idl
  }
}

project(AMI_UsesSM_stub) : ccm_stub, ami, ami4ccm_stub {
  after += AMI_UsesSM_lem_gen
  libs  +=
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  sharedname = UsesSM_stub
  dynamicflags += USESSM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    UsesSMC.cpp
    UsesSMAC.cpp
  }

  Header_Files {
    UsesSMC.h
    UsesSM_stub_export.h
}

  Inline_Files {
    UsesSMC.inl
  }
}

project(AMI_UsesSM_lem_stub) : ccm_executor, ami, ami4ccm_lem_stub {
  after += AMI_UsesSM_lem_gen AMI_UsesSM_stub AMI_UsesSM_lemae_gen AMI_UsesSM_skel
  libs += UsesSM_stub UsesSM_skel
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  sharedname = UsesSM_lem_stub
  dynamicflags += USESSM_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    UsesSMEC.cpp
    UsesSMAEC.cpp
  }

  Header_Files {
    UsesSMEC.h
    UsesSM_lem_stub_export.h
}

  Inline_Files {
    UsesSMEC.inl
  }
}

project(AMI_UsesSM_skel) : ciao_executor, ami, ami4ccm_servant {
  after      += AMI_UsesSM_stub
  sharedname  = UsesSM_skel
  libs       += UsesSM_stub
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  dynamicflags += USESSM_SKEL_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    UsesSMS.cpp
    UsesSMAS.cpp
  }

  Header_Files {
    UsesSMS.h

    UsesSM_skel_export.h
  }

  Inline_Files {
  }
}

project(AMI_UsesSM_conn) : ciao_executor, ami, ami4ccm_lem_stub {
  after   += AMI_UsesSM_lem_stub UsesSM_Base_AMI_stub AMI_UsesSM_skel AMI_UsesSM_lema_gen AMI_UsesSM_lemae_gen
  sharedname = UsesSM_conn
  libs += UsesSM_stub UsesSM_skel UsesSM_lem_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags += USESSM_CONN_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    UsesSMA_conn.cpp
  }

  Header_Files {
    UsesSMA_conn.h
    UsesSM_conn_export.h
  }

  Inline_Files {
  }
}

project(AMI_UsesSM_svnt) : ciao_servant, ami, ami4ccm_servant {
  after   += AMI_UsesSM_lem_stub UsesSM_Base_AMI_stub AMI_UsesSM_skel AMI_UsesSM_lema_gen AMI_UsesSM_lemae_gen AMI_UsesSM_conn
  sharedname = UsesSM_svnt
  libs += UsesSM_stub UsesSM_skel UsesSM_lem_stub UsesSM_conn
  libpaths += ../lib
  libout = ../lib
  dynamicflags += USESSM_SVNT_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    UsesSMA_svnt.cpp
  }

  Header_Files {
    UsesSMA_svnt.h
    UsesSMA_svnt_export.h
  }

  Inline_Files {
  }
}

