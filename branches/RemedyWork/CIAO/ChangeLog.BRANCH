Wed Apr  6 14:14:31 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/tests/LateBinding/ReadGet/Receiver/RG_LateBinding_Receiver_impl.h:
        * connectors/dds4ccm/tests/LateBinding/ReadGet/Receiver/RG_LateBinding_Receiver_impl.cpp:
          Resolved test error. get_many should return at least one sample (instead of exactly one
          sample).

        * connectors/dds4ccm/tests/QueryCondition/TwoQueries/Receiver/QCTQ_Test_Receiver_exec.cpp:
          Optimized logging.

Wed Apr  6 13:59:07 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * connectors/dds4ccm/impl/DataReaderStateListener_T.cpp:
          Simplified some code

Wed Apr  6 13:14:54 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/impl/DataReaderListener_T.cpp:
        * connectors/dds4ccm/impl/DataReaderStateListener_T.cpp:
          Added a comment why we shouldn't throw an exception when
          return_loan fails.

        * connectors/dds4ccm/impl/Getter_T.cpp:
        * connectors/dds4ccm/impl/Reader_T.h:
        * connectors/dds4ccm/impl/Reader_T.cpp:
          Reviewed return_loan methods. When return_loan fails, we should
          throw an exception to the user in case the data retrievel from
          DDS succeeds. When the data retrieval from DDS fails, the user
          want to see that exception (instead of the return_loan exception).
          Still, there's always a return_loan invoked, regardless of the
          outcome of the DDS retrieval.

        * connectors/dds4ccm/impl/ndds/DataReader_T.h:
        * connectors/dds4ccm/impl/ndds/DataReader_T.cpp:
          When an error occurs during return_loan, this error will be returned
          to the user when the data retrieval from DDS succeeds. If the data
          retrieval from DDS fails, this failure will be returned to the users.

        * connectors/dds4ccm/tests/Getter/Receiver/Getter_Test_Receiver_exec.h:
        * connectors/dds4ccm/tests/Getter/Receiver/Getter_Test_Receiver_exec.cpp:
          Expanded test. When data was not read during the invocation of get_many,
          the sample state of this (unread) data should be "FRESH_INFO"; otherwise
          it should be "ALREADY_SEEN".

Wed Apr  6 10:13:35 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/tests/Getter/Receiver/Getter_Test_Receiver_exec.cpp:
        * connectors/dds4ccm/tests/Getter/Sender/Getter_Test_Sender_exec.cpp:
          Optimized procedure for write_many/get_many.

Wed Apr  6 09:51:08 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/tests/Getter/Receiver/Getter_Test_Receiver_exec.h:
        * connectors/dds4ccm/tests/Getter/Receiver/Getter_Test_Receiver_exec.cpp:
        * connectors/dds4ccm/tests/Getter/Sender/Getter_Test_Sender_exec.cpp:
        * connectors/dds4ccm/tests/Getter/descriptors/Plan.cdp:
        * connectors/dds4ccm/tests/Getter/descriptors/USER_QOS_PROFILES.xml:
          Expanded test in order to log more info about the samples available in DDS.

        * connectors/dds4ccm/tests/QueryCondition/DDS/descriptors/run_test.pl:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/descriptors/run_test.pl:
          Using ENV to read the environment variagle.

        * connectors/dds4ccm/tests/QueryCondition/TwoQueries/Receiver/QCTQ_Test_Receiver_exec.cpp:
          Improved logging.

Wed Apr  6 10:44:39 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Sender/ObO_Sender.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Receiver/ObO_Receiver.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Sender/QC_Sender.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Receiver/QC_Receiver.cpp:
        Decreased number of samples, added extra debug info.
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/descriptors/run_test.pl:
        * connectors/dds4ccm/tests/QueryCondition/DDS/descriptors/run_test.pl:
        Decreased sleep time.



Wed Apr  6 08:16:39 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Receiver/QC_Receiver.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Sender/QC_Sender.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS/descriptors/run_test.pl:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Receiver/ObO_Receiver.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Sender/ObO_Sender.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/descriptors/run_test.pl:
          Passing the Domain ID to the Sender and Receiver to the command line. It now uses
          'DDS4CCM_DEFAULT_DOMAIN_ID'. This way the tests on the build systems won't mix.

Wed Apr  6 07:54:17 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Receiver/QC_Receiver.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Sender/QC_Sender.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Receiver/ObO_Receiver.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Sender/ObO_Sender.cpp:
          Test now reads the environment variable "DEFAULT_DOMAIN_ID" and uses this to
          create the domain participant.

Tue Apr  5 18:18:23 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Receiver/DDS_Receiver.mpc:
        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Sender/DDS_Sender.mpc:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Receiver/DDS_ObO_Receiver.mpc:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Sender/DDS_ObO_Sender.mpc:
          We only need ndds_ts_defaults as base project, not full dds4ccm

Tue Apr  5 14:16:26 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * ChangeLog.BRANCH:
          Removed some svn statements

        * connectors/dds4ccm/impl/Getter_T.cpp:
          Removed call to get_trigger_value. This call is not neccessary.

        * connectors/dds4ccm/tests/QueryCondition/TwoQueries/README:
          Added a description for this test.

        * connectors/dds4ccm/tests/QueryCondition/TwoQueries/Receiver/QCTQ_Test_Receiver.idl:
        * connectors/dds4ccm/tests/QueryCondition/TwoQueries/Receiver/QCTQ_Test_Receiver_exec.h:
        * connectors/dds4ccm/tests/QueryCondition/TwoQueries/Receiver/QCTQ_Test_Receiver_exec.cpp:
        * connectors/dds4ccm/tests/QueryCondition/TwoQueries/descriptors/Plan.cdp:
          Added a Reader which tests whether all samples are available in DDS.

Tue Apr 05 15:03:14 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/Base/Base_ObO.idl:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/Base/Base_ObO.mpc:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Sender/ObO_Sender.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Sender/DDS_ObO_Sender.mpc:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Receiver/ObO_Receiver.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/DDS_Receiver/DDS_ObO_Receiver.mpc:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/descriptors/run_test.pl:
        * connectors/dds4ccm/tests/QueryCondition/DDS_OneByOne/descriptors/USER_QOS_PROFILES.xml:
        new test read one by one variant of dds test.
        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Sender/Sender.cpp:
        * connectors/dds4ccm/tests/QueryCondition/DDS/DDS_Receiver/Receiver.cpp:
        add extra checks.

Tue Apr 05 09:32:14 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

        * connectors/dds4ccm/test/Getter/Sender/Getter_Test_Sender_exec.cpp:
        Changed initializing of array for writing many samplesd

Mon Apr  4 12:07:17 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/tests/Getter/README:
        * connectors/dds4ccm/tests/Getter/Sender/Getter_Test_Sender_exec.cpp:
          Added comments/documentation.

Mon Apr  4 11:03:05 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/impl/ConditionManager.h:
        * connectors/dds4ccm/impl/ConditionManager.cpp:
        * connectors/dds4ccm/impl/Getter_T.h:
        * connectors/dds4ccm/impl/Getter_T.cpp:
          Added some more comments/doxygen.

Mon Apr  4 09:35:06 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/impl/ConditionManager.h:
        * connectors/dds4ccm/impl/ndds/WaitSet.h:
          Optimized doxygen documentation.

Mon Apr  4 08:38:25 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/impl/ConditionManager.h:
          Added some documentation to this class.

        * connectors/dds4ccm/impl/ndds/WaitSet.h:
          Alignment.

Mon Apr  4 07:52:19 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/impl/Getter_T.cpp:
          Code layout

        * connectors/dds4ccm/impl/ndds/WaitSet.h:
          Added some documentation to this class.

Fri Apr  1 15:02:17 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/tests/LateBinding/README:
          Added some more information regarding this tests.

Thu Mar 31 14:03:40 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * tests/DAnCE/Threading/README:
          Added.

Thu Mar 31 13:51:24 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * tests/DAnCE/LocalityManager/CommandlinePassage/Component.cdp:
          Renamed deployment plan.

        * tests/DAnCE/Threading/Component1/Component1_exec.cpp:
        * tests/DAnCE/Threading/Component2/Component2_exec.cpp:
          Added some extra debug information.

        * tests/DAnCE/Threading/descriptors/Plan.cdp:
          Locality manager now accepts the command lines given in this
          deployment plan.

Thu Mar 31 13:03:30 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * connectors/dds4ccm/impl/ConditionManager.cpp:
          Layout changes

        * tests/DAnCE/Threading/*:
        * bin/ciao_tests.lst:
          Added test which with one is able to tune the threading behaviour of
          CORBA.

Tue Mar 29 12:249:14 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

        * connectors/dds4ccm/impl/Getter_T.cpp:
        Changed number of samples in get_many from 1 to max_samples .

Wed Mar 23 17:49:14 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * connectors/dds4ccm/examples/Shapes/Sender/Shapes_Sender.idl:
        * connectors/dds4ccm/examples/Shapes/Sender/Shapes_Sender_exec.h:
        * connectors/dds4ccm/examples/Shapes/Sender/Shapes_Sender_exec.cpp:
        * connectors/dds4ccm/examples/Shapes/descriptors/Plan.cdp:
          Make the color of the shape controllable from the deployment plan

Sun Mar  6 09:35:03 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL3_Plus/KitchenSink.idl:
        * tests/IDL_Test/IDL3_Plus/KitchenSink.mpc:
          Enable with noevent, just disable some IDL constructs

Sun Feb 27 19:33:07 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * connectors/dds4ccm/tutorials/Shapes/Shapes_asm/ports/Shapes_ShapeType_conn.idl:
          Removed comment, sequence can now be independent of the topic, but
          to our idea it should be in the same namespace

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:

