// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_ORIG_OCTETSEQC_H_
#define _TAO_IDL_ORIG_OCTETSEQC_H_

#include "ace/pre.h"
#include "corbafwd.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "Sequence.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO TAO_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48

TAO_NAMESPACE  CORBA
{

#if !defined (_CORBA_OCTETSEQ_CH_)
#define _CORBA_OCTETSEQ_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:371
  
  class OctetSeq;
  class OctetSeq_var;
  
  // *************************************************************
  // CORBA::OctetSeq
  // *************************************************************
  
  class TAO_Export OctetSeq : public 
  
  // TAO_IDL - Generated from 
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:51

#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
  TAO_Unbounded_Sequence<CORBA::Octet>
#else /* TAO_USE_SEQUENCE_TEMPLATES */
  TAO_Unbounded_Sequence<CORBA::Octet>

#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  {
  public:
    OctetSeq (void);
    OctetSeq (CORBA::ULong max);
    OctetSeq (
        CORBA::ULong max, 
        CORBA::ULong length, 
        CORBA::Octet *buffer, 
        CORBA::Boolean release = 0
      );
    OctetSeq (const OctetSeq &);
    ~OctetSeq (void);
    
    static void _tao_any_destructor (void*);
    
    typedef OctetSeq_var _var_type;
#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    OctetSeq (
        CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : TAO_Unbounded_Sequence<CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

#if !defined (_CORBA_OCTETSEQ___VAR_CH_)
#define _CORBA_OCTETSEQ___VAR_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:549
  
  // *************************************************************
  // class CORBA::OctetSeq_var
  // *************************************************************
  
  class TAO_Export OctetSeq_var
  {
  public:
    OctetSeq_var (void);
    OctetSeq_var (OctetSeq *);
    OctetSeq_var (const OctetSeq_var &);
    
    // Fixed-size base types only.
    OctetSeq_var (const OctetSeq &);
    
    ~OctetSeq_var (void);
    
    OctetSeq_var &operator= (OctetSeq *);
    OctetSeq_var &operator= (const OctetSeq_var &);
    
    // Fixed-size base types only.
    OctetSeq_var &operator= (const OctetSeq &);
    
    OctetSeq *operator-> (void);
    const OctetSeq *operator-> (void) const;
    
    operator const OctetSeq &() const;
    operator OctetSeq &();
    operator OctetSeq &() const;
    CORBA::Octet & operator[] (CORBA::ULong index);
    const CORBA::Octet & operator[] (CORBA::ULong index) const;
    
    // in, inout, out, _retn 
    const OctetSeq &in (void) const;
    OctetSeq &inout (void);
    OctetSeq *&out (void);
    OctetSeq *_retn (void);
    OctetSeq *ptr (void) const;
  
  private:
    OctetSeq *ptr_;
  };

#endif /* end #if !defined */

#if !defined (_CORBA_OCTETSEQ___OUT_CH_)
#define _CORBA_OCTETSEQ___OUT_CH_
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:753
  
  class TAO_Export OctetSeq_out
  {
  public:
    OctetSeq_out (OctetSeq *&);
    OctetSeq_out (OctetSeq_var &);
    OctetSeq_out (const OctetSeq_out &);
    OctetSeq_out &operator= (const OctetSeq_out &);
    OctetSeq_out &operator= (OctetSeq *);
    operator OctetSeq *&();
    OctetSeq *&ptr (void);
    OctetSeq *operator-> (void);
    CORBA::Octet & operator[] (CORBA::ULong index);
  
  private:
    OctetSeq *&ptr_;
    // Assignment from T_var not allowed.
    void operator= (const OctetSeq_var &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_OctetSeq;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67

}
TAO_NAMESPACE_CLOSE // module CORBA

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_Export void operator<<= (CORBA::Any &, const CORBA::OctetSeq &); // copying version
TAO_Export void operator<<= (CORBA::Any &, CORBA::OctetSeq*); // noncopying version
TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OctetSeq *&); // deprecated
TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::OctetSeq *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:57

#if !defined _TAO_CDR_OP_CORBA_OctetSeq_H_
#define _TAO_CDR_OP_CORBA_OctetSeq_H_

TAO_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::OctetSeq &
  );
TAO_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::OctetSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_OctetSeq_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1009

#if defined (__ACE_INLINE__)
#include "OctetSeqC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

