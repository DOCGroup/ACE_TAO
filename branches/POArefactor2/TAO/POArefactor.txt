Tue Oct 12 07:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Create the correct ServantRetentionStrategy based on the set
          policies

Tue Oct 12 07:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
          Removed the single threaded lock functionality, this is handled now
          by the Single Thread_Strategy

Mon Oct 11 15:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/DomainC.{h,cpp,inl}:
        * tao/PortableServer/Domain/DomainS.{h,cpp,inl}:
        * tao/Messaging/MessagingC.*:
        * tao/Messaging/MessagingS.*:
          Regenerated

        * tao/PortableServer/POA.{i,cpp}:
          Moved get/set_servant, get/set_servant_manager to cpp file

        * tao/DynamicInterface/Dynamic_Implementation.cpp:
          Added include of POA_Current_Impl.h

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
          Servant_Upcall has moved to its own file and to the
          TAO::Portable_Server namespace

Mon Oct 11 13:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{cpp,i}:
          Moved the_activator get/set methods from inline to cpp file, uses a
          lock and requires IDL generated code, not handy in the inline file

Mon Oct 11 13:41:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/DSI_Gateway/test_dsi.h:
          Added includes and changes usage of TAO_POA_Current to the new
          namespace

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/interceptors_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:
          Servant_Upcall has moved to its own file and to the
          TAO::Portable_Server namespace, changes generation in the TAO_IDL
          compiler to reflect the new name, and no need to include
          Object_Manager.h, Servant_Upcall.h is enough

       * tao/PortableServer/*C.{h,cpp,inl}:
         Regenerated with the latest version of the TAO_IDL compiler

       * tao/PortableServer/Default_Servant_Dispatcher.cpp:
       * tao/PortableServer/Object_Adapter.{h,i}:
       * tao/PortableServer/Request_Processing_Strategy.h:
       * tao/PortableServer/Servant_Upcall.inl:
       * tao/PortableServer/Servant_Base.cpp:
       * tao/PortableServer/POA.{h,cpp}:
         Corrected some small errors and reduced header dependencies

Mon Oct 11 09:51:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Everything has now been moved to the POArefactor2 branch that I
        created fresh this morning

Mon Oct 11 08:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdAssignmentPolicyFactory.h
        * tao/PortableServer/IdUniquenessPolicyFactory.h
        * tao/PortableServer/ImplicitActivationPolicyFactory.h
        * tao/PortableServer/LifespanPolicyFactory.h
        * tao/PortableServer/POA_Current.h
        * tao/PortableServer/RequestProcessingPolicyFactory.h
        * tao/PortableServer/ServantRetentionPolicyFactory.h
        * tao/PortableServer/ThreadPolicyFactory.h
        * tao/PortableServer/Thread_Strategy.cpp
        * tao/PortableServer/Thread_Strategy.h:
          Updated by Bala

Fri Oct  8 09:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.h:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/Active_Policy_Strategies.h:
        * tao/PortableServer/Id_Assignment_Strategy.cpp:
        * tao/PortableServer/Id_Assignment_Strategy.h:
        * tao/PortableServer/Id_Uniqueness_Strategy.cpp:
        * tao/PortableServer/Id_Uniqueness_Strategy.h:
        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Servant_Retention_Strategy.h:
        * tao/PortableServer/Thread_Strategy.cpp:
        * tao/PortableServer/Thread_Strategy.h:
          Added a TAO_POA* to the strategy_init call, this can then be used by
          the strategies

        * tao/PortableServer/Request_Processing_Strategy.cpp:
        * tao/PortableServer/Request_Processing_Strategy.h:
          Besides adding TAO_POA* also now implemented several of the methods

        * tao/PortableServer/POA.cpp:
          Changed get_servant_i() and set_servant_i() to use the
          Request_Processing_Strategy to show how another strategy would work
          after the rework, this way Bala can better see the direction I want
          to go

Fri Oct  8 08:36:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current.{h,cpp,inl}:
        * tao/PortableServer/Object_Adapter.{h,cpp,inl}:
          Renamed TAO_POA_Current to TAO::Portable_Server::POA_Current and
          moved it to its own file

        * tao/PortableServer/PortableServer_ORBInitializer.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
          Updated because of change above

Fri Oct  8 08:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.{h,cpp,inl}:
        * tao/PortableServer/Servant_Upcall.{h,cpp,inl}:
          Moved Servant_Upcall and POA_Current_Impl to its own files and to
          the TAO::Portable_Server namespace. I have to reduce includes and
          change to TAO_IDL compiler to generate Servant_Upcall in the new
          namepace

        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.{h,cpp}:
        * tao/PortableServer/Object_Adapter.{cpp,h,i}:
        * tao/PortableServer/POA.{h,cpp}
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Dispatcher.h:
        * tao/PortableServer/ServerRequestInfo.h:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Updated because of the change above

Thu Oct  7 14:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Non_Servant_Upcall.{h,cpp,inl}:
        * tao/PortableServer/Object_Adapter.{h,cpp,i}:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
          Moved Non_Servant_Upcall to its own file and to the
          TAO::Portable_Server namespace

Thu Oct  7 14:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Replaced all ACE casts with their C++ versions

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Made changes to these files because of the changes in the
          PortableServer library

Thu Oct  7 12:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
        * tao/PortableServer/POA.h:
          Moved Active_Policy_Strategies to its own file

Thu Oct  7 12:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.{h,cpp}:
          Moved implementation to cpp file

Thu Oct  7 11:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Moved implementation to header file and started with implementing
          this strategy

Thu Oct  7 10:10:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Instead of checking the thread policy value, use the thread strategy
          to obtain and release the lock.

        * tao/PortableServer/Thread_Strategy.{h,cpp}:
          Implemented this class in cpp file, give enter/exit an int return
          value

        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
          Implemented Active_Policy_Strategies for thread strategy, just to
          show the idea, have to use a factory and svc conf in the future

        * tao/PortableServer/POA.{h,cpp,i}:
          Added Active_Policy_Strategies as member, update it on construction
          of the POA so that the strategies are created. When this is the
          correct way to go, the code belonging to the single thread lock and
          the lock itself can be zapped.

Thu Oct  7 08:29:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Create the default policies using the new way

        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Made these compiling so that I can test

Thu Oct  7 08:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*Policy.{h,cpp}:
        * tao/PortableServer/*PolicyFactory.{h,cpp}:
          Moved _tao_cached_type and _tao_scope from the factory to the
          policy, these methods are called on the policy from within TAO and
          the default implementation within Policy itself must be overruled by
          our derived classes.

Tue Oct  5 14:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Thread_Strategy.h:
          Renamed init to strategy_init to fix warning from the Borland
          compiler about hiding the init from service_config

        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Added some more methods which belong to this strategy, just a copy,
          didn't got things compiling yet, more has to move

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Implemented this using the policy_creator

        * tao/PortableServer/PortableServer.cpp:
          Removed not needed includes

        * tao/PortableServer/POA.cpp:
          Implemented the create policy methods

        * tao/PortableServer/Lifespan_Strategy.h:
          Moved more methods to this strategy

Tue Oct  5 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Creator_T.h:
          Template to create policies more easier. Still working on the
          introduction, just a checkin to be sure

Tue Oct  5 09:46:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.h:
          Removed comment of Bala, got the idea

        * tao/PortableServer/POAManager.h:
          Reduced needed includes

        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Adapter_Activator.h:
        * tao/PortableServer/Default_Servant_Dispatcher.h:
        * tao/PortableServer/IdAssignmentPolicyFactory.cpp:
        * tao/PortableServer/IdAssignmentPolicyValue.h:
        * tao/PortableServer/PolicyFactory.cpp:
        * tao/PortableServer/PolicyFactory.h:
          Bala has added some remarks to these files

Thu Sep 30 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Cached_Policies.h:
          Added ThreadStrategy, just to show the idea

Thu Sep 30 13:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/poa_macros.h
          Moved POA_Guard to the TAO::Portable_Server namespace

Thu Sep 30 13:31:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.h:
          Added is_servant_in_map

        * tao/PortableServer/Upcall_Wrapper.h:
          No need to add path

        * tao/PortableServer/POA_Cachec_Policies.{h,cpp,i}:
          Renamed TAO_POA_Cached_Policies to Cached_Policies in the
          TAO::Portable_Server namespace.
          Added empty class Active_Policy_Strategies class, the idea is that
          each POA gets an instance of this class and uses the policy
          strategies by retrieving them from this class

        * tao/POA.{h,i}:
          Updated because of Cached_Policies change above

Thu Sep 30 13:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter_Factory.h:
          Removed msvc push/pop, no need for it in this file

Thu Sep 30 13:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Cached_Policies.h:
          Removed msvc push/pop, no need for it in this file

Thu Sep 30 12:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.{h,cpp}:
        * tao/PortableServer/Object_Adapter_Factory.{h,cpp}:
          Moved Object_Adapter_Factory to its own file

        * tao/PortableServer/PortableServer.cpp:
          Because the Object_Adapter_Factory is in its own file, include that
          file instead of Object_Adapter.h

        * tao/PortableServer/POA.cpp:
          Include the LifespanPolicyFactory.

Thu Sep 30 12:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.h:
          Added id_assignment_key_type() and id_assignment_key_type_length()
          methods, for each of the derived classes, implemented this.

        * tao/PortableServer/Lifespan_Strategy.h:
          Added lifespan_key_type() and lifespan_key_type_length()
          methods, for each of the derived classes, implemented this.

        * tao/PortableServer/POA.cpp (create_lifespan_policy):
          Implemented this method, we have to refactor the creation of the
          policies, to much code duplication

        * tao/PortableServer/Request_Processing_Strategy.h:
          Added get_servant_manager, set_servant_manager, get_servant and
          set_servant and implemented these methods for each of the types.

Wed Sep 29 11:57:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.h:
          Just class definition for this strategy.

Wed Sep 29 11:33:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.h:
          Just class definition for this strategy.

Wed Sep 29 09:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Uniqueness_Strategy.h:
          Just class definition for this strategy.

Wed Sep 29 09:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.h:
          Just class definition for this strategy.

Wed Sep 29 09:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Thread_Strategy.h:
          Moved Policy_Strategy to its own file

        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Activation_Strategy.h:
          Just class definitions for these strategies

Sun Sep 26 14:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.{h,cpp}:
          Moved everything from TAO::PortableServer to TAO::Portable_Server to
          prevent any accidents that a wrong namespace is taken

Fri Sep 24 14:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.{h,cpp}:
          Moved all new Policy Value classes to the TAO::PortableServer
          namespace. Renamed everything to match filenames. Everything
          compiles again, no testing done yet.
          Removed checks for _MSC_VER >= 1200

Fri Sep 24 14:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*_Value.{h,cpp}:
          Renamed these files, zapped all underscores so that filenames match
          the IDL files they belong to. Classes will be renamed soon

        * tao/PortableServer/POA_*.{h,cpp}:
          Removed POA prefix and underscores to match IDL files

        * tao/PortableServer/Loadable_*.{h,cpp}:
          Renamed to *Factory.{h,cpp}, classes will be renamed soon

        * tao/PortableServer/POA_Policy.{h,cpp}:
          Renamed to PolicyFactory.{h,cpp}

Wed Sep 22 14:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Thread_Strategy.{h,cpp}:
          New file, contains some classes for the idea to implement the
          policy behaviour in strategies. Just a checkin to share ideas.

Wed Sep 22 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ORT_Adapter_Factory.h:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.{h,cpp}:
          Removed environment macro's, no need for them

Wed Sep 22 13:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Improved loading of thread policy, same code as in the POA and the
          Policy factory, I like to factor this out to prevent code
          duplication.

Wed Sep 22 12:31:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_Policy_Validator.cpp:
          Replaced include of PortableServerC.h with LifespanPolicyC.h

Wed Sep 22 11:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA.i:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/poa_macros.h:
          Changed TAO_POA_Guard, to POA_Guard in the TAO namespace

Wed Sep 22 10:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_*_Policy.{h,cpp}:
          Minor updates for values

        * tao/PortableServer/*_Policy_Value.{h,cpp}:
          New policy value files

        * tao/PortableServer/POA_Policies.{h,cpp,i}:
          Zapped these files

        * tao/PortableServer/Default_Policy_Validator.cpp:
          Removed include of POA_Policies, but had to include all *PolicyC.h
          files

        * tao/PortableServer/POA.cpp:
          Commented out some code, have to get a cleaner to implement each
          create policy method

        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
          Removed include of POA_Policies, but had to include all *PolicyC.h
          files

        * tao/PortableServer/POA_Policy_Set.h:
          Removed include of POA_Policies

Wed Sep 22 07:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_*_Policy.{h,cpp}:
          New Loadable Policy files, one set for each Policy we have

        * tao/PortableServer/POA_Policy.h:
          Removed msvc pragma disable, not needed here

Tue Sep 21 11:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.cpp:
        * tao/PortableServer/Thread_Policy_Value.cpp:
        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Fixed emulated exception usage and work on Bala's comments

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.h:
        * tao/PortableServer/PortableServer.h:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Changed handling of Loadable_Thread_Policy and the usage of svc conf

Tue Sep 21 11:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.{h,cpp}:
          Bala has added some comments to these files

Mon Sep 20 11:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Replaced all ACE cast macro's with their C++ versions

Mon Sep 20 09:19:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,cpp}:
          Zapped all code that was guarded with #ifdef 0, it is old, and
          makes it a little bit more readable

Fri Sep 17 14:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Thread_Policy.{h,cpp}:
          Let the constructor do nothing, make an init method to intialize the
          object, the init method with an Any can throw an exception and that
          is something we don't want to do in a constructor

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Don't get the ThreadPolicyValue out of the Any here, just pass it to
          the Loadable_Thread_Policy and get it out of the Any in the
          POA_ThreadPolicy.

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
          Added create method with an Any, this can throw exceptions

Fri Sep 17 10:20:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.h:
          Replaced include of PortableServerC.h with PS_ForwardC.h

        * tao/PortableServer/Active_Object_Map.cpp:
          Added include of tao/SystemException.h

Fri Sep 17 09:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Default_Acceptor_Filter.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/Key_Adapters.cpp:
        * tao/PortableServer/ORB_Manager.cpp:
        * tao/PortableServer/POA_Cached_Policies.cpp:
        * tao/PortableServer/POA_Guard.cpp:
        * tao/PortableServer/POA_Policies.cpp:
        * tao/PortableServer/POA_Policy_Set.cpp:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/Servant_Dispatcher.cpp:
        * tao/PortableServer/ServerRequestInfo.cpp:
          Added or corrected ACE_RSCID's

Fri Sep 17 09:38:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.h:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.h:
        * tao/PortableServer/ORB_Manager.h:
        * tao/PortableServer/ORT_Adapter.h:
        * tao/PortableServer/PICurrent_Guard.h:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_Policy_Set.h:
        * tao/PortableServer/POA_Manager.h:
        * tao/PortableServer/Servant_Base.h:
        * tao/PortableServer/Upcall_Wrapper.h:
          Documentation improvements

        * tao/PortableServer/Key_Adapters.cpp:
          Replaced all ACE cast macros with C++ versions

        * tao/PortableServer/Key_Adapters.h:
          Instead of including PortableServerC.h, just include PS_ForwardC.h,
          this is enough

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/Thread_Policy_Value.h:
          Don't export svc config stuff

Wed Sep 15 12:36:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Policy_Set.cpp:
          Removed workaround for vc5, that compiler is not supported anymore.

Wed Sep 15 12:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Thread_Policy_Value.{h,cpp}:
          New file with the thread policy value base and derived classes,
          moved out of Loadable_Thread_Policy

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Changed the way we retrieve the thread policy

        * tao/PortableServer.h:
          Added new *C.h files, without this existing apps don't build

        * tao/PortableServer.cpp:
          Added svc conf directives to process the new classes

        * tao/POA_Thread_Policy.{h,cpp}:
          Added missing policy_type method

        * tao/POA_Policies.{h,cpp}:
          Commented out the TAO_Thread_Policy, we have a new implementation

Wed Sep 15 09:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbsvcs/orbsvcs/PortableGroup/GOA.{h,cpp}:
        * tao/orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.{cpp,h}:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.h:
          Changes to make TAO_GOA loadable as POA and use that, at the moment
          I created the branch it seems CosNaming didn't build, so I can't
          test this right now, have to move my branch forward one time.

        * tao/orbsvcs/orbsvcs/PortableGroup/POA_Hooks.{cpp,h}:
          Removed, functionality is now in TAO_GOA

        * tao/orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.{h,cpp}:
          New files

Wed Sep 15 08:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Fixed this idl file (GOA part)

Wed Sep 15 08:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter.{h,cpp}:
        * tao/Adapter_Registry.{h,cpp}:
          Moved the TAO_Adapter_Registry class to its own file

        * tao/Adapter.i:
          Zapped, was empty

        * tao/ORB_Core.{h,cpp}:
        * tao/TAO_Internal.cpp:
          Updated includes/forward declarations because of file split

Wed Sep 15 07:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb_typesS.h:
          New file

Tue Sep 14 12:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.{cpp,h}:
          Intermediate commit, not finished yet.

Tue Sep 14 12:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ORT_Adapter_Factory.h:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.{h,cpp}:
          Removed exception spec from create/destroy method, for the destroy
          it is not needed, for the create, we could just return 0 in case of
          out of memory

Tue Sep 14 11:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Added empty Thread_Policy_Value, just getting the complete picture
          together.

Tue Sep 14 08:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableGroup_Hooks.{h,cpp}:
          Zapped these files, not needed anymore now we have a GOA in the
          PortableServer library

        * tao/ORB_Core.{h,cpp,i}:
          Zapped all functionality related to PortableGroup hooks, we don't
          need this anymore.

Tue Sep 14 08:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/GOA*:
          Zapped these files

        * tao/orbsvcs/orbsvcs/PortableGroup.idl:
          Added GOA interface here

        * tao/orbsvcs/orbsvcs/GOA.{h,cpp,inl}:
          Moved the GOA to this place, implementation has to be made correct,
          POA hook is not needed anymore, must be loadable by service
          configurator. By moving this now I can cleanup some more stuff in
          the ORB.

Mon Sep 13 12:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Added methods required from the Policy interface

Thu Sep  9 14:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
          First version, also have to work on these

Thu Sep  9 13:57:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Temporary checkin, have to work on this

Thu Sep  9 13:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Policy.{h,cpp}:
          Base for the new loadable policies

Thu Sep  9 13:25:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/GOA.{h,cpp}:
          First version, still here, move it later, just making sure the GOA
          stuff doesn't get lost.

Thu Sep  9 10:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Endpoints.pid:
          No need to include orb.idl

        * tao/IIOP_EndpointsC.{h,cpp,i,inl}:
        * tao/IIOP_EndpointsA.cpp:
          Regenerated

        * tao/diffs/IIOP_Endpoints.diff:
          Zapped this file, no diffs needed anymore

Thu Sep  9 10:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IOP_IOR.pid:
          No need to include orb.idl

        * tao/IOP_IORC.{h,cpp,i,inl}:
        * tao/IOP_IORA.cpp:
          Regenerated

        * tao/diffs/IOP_IOR.diff:
          Zapped this file, no diffs needed anymore

Thu Sep  9 10:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RTPortableServerC.{h,cpp,i,inl}:
        * tao/RTPortableServer/RTPortableServerA.cpp:
          Regenerated

        * tao/RTPortableServer/diffs/RTPortableServer.diff:
          Updated

        * tao/RTPortableServer/RT_POA.i:
          Include POA_Guard.h

Thu Sep  9 10:00:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed all GOA stuff, will put this in a new GOA class. Will follow
          later, first get everything building again

        * tao/PortableServer/PortableGroup_Hooks.cpp:
          Include GOAC.h

Thu Sep  9 09:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb.idl:
        * tao/orb_types.pidl:
          Moved ValueModifier and Visibility to orb.idl again, not really
          needed and causes problems with valuetype library

        * tao/orb_typesC.{h,cpp,inl}:
        * tao/orb_typesA.cpp:
          Regenerated

        * tao/OBV_Constants.h:
          Updated because of move

        * tao/ObjRefTemplate/Object_Reference_Template_i.cpp:
          Replaced tao_poa_downcast with dynamic cast

Thu Sep  9 08:00:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb.idl:
        * tao/orb_types.pidl:
          Moved the typedefs from orb.idl to orb_types.pidl. This makes it
          possiblet to just get the types without all other stuff that is
          included in orb.idl

        * tao/orb_typesC.{h,cpp,inl}:
        * tao/orb_typesA.cpp:
          New generated files

        * tao/OBV_Constants:
          Removed typedefs, include orb_typesC.h instead

        * tao/ORB.h:
          Removed typedefs that are now in orb_types. Also removed
          valuetype_factory_map_ members which was ifdefed out

        * tao/Typecode_Constants.cpp:
          Removed orb_id, this is now in orb_typesA.cpp

        * tao/Typecode.cpp:
          Added include of orb_typesC.h

        * tao/PortableServer/PortableServer.pidl:
        * tao/PortableServer/ServantLocator.pidl:
          No need to include orb.idl, only need orb_types.pidl

        * tao/PortableServer/*Policy.pidl:
          Because PortableServer.pidl doesn't include orb_types.pidl, we don't
          get Policy.pidl for free anymore, we have to explicit include it
          here

        * tao/PortableServer/*C.{h,cpp,inl}:
        * tao/PortableServer/*A.cpp:
        * tao/PortableServer/diffs/*:
          Regenerated all these files

Wed Sep  8 14:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/Object_Adapter.cpp:
          Moved TAO_POA_Guard to its own file

Wed Sep  8 14:02:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
          Moved the TAO_Adapter_Activator to its own file

Wed Sep  8 12:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/diffs/*.diff:
          Serveral new diffs

        * tao/PortableServer/*C.{h,cpp,inl}:
          Several new generated files

        * tao/PortableServer/POA.{h,cpp}:
          Removed tao_poa_downcast, use dynamic cast
          Also inherit from GOA, this will be moved soon.

        * tao/PortableGroup_Hooks.h:
          Temporarily removed checks for minimum poa, this has to move
          together with the GOA to the PortableGroup library.

          Also used the minimum corba 1.0 spec to remove the parts we don't
          use with minimum corba.

Wed Sep  8 10:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/diffs/PS_Forward.diff:
        * tao/PortableServer/diffs/ServantLocator.diff:
          New diffs to be applied after regeneration

Wed Sep  8 08:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.{h,cpp,i}:
          Zapped tss_resources, we don't need to store them

        * tao/ORB_Core.{h,cpp}:
          Zapped inherit_from_parent_thread

Wed Sep  8 08:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.pidl:
          Splitted this file into the new files below to be able to refactor
          things

        * tao/PortableServer/POAManager.pidl:
          PortableServer::POAManager

        * tao/PortableServer/PS_Current.pidl:
          PortableServer::Current

        * tao/PortableServer/PS_Forward.pidl:
          Some forward declarations and typedefs needed in several files

        * tao/PortableServer/AdapterActivator.pidl:
        * tao/PortableServer/IdAssignmentPolicy.pidl:
        * tao/PortableServer/IdUniquenessPolicy.pidl:
        * tao/PortableServer/ImplicitActivationPolicy.pidl:
        * tao/PortableServer/LifespanPolicy.pidl:
        * tao/PortableServer/RequestProcessingPolicy.pidl:
        * tao/PortableServer/ServantRetentionPolicy.pidl:
        * tao/PortableServer/ThreadPolicy.pidl:
          All available policies, each in its own file

        * tao/PortableServer/ServantActivator.pidl:
          PortableServer::ServantActivator

        * tao/PortableServer/ServantLocator.pidl:
          PortableServer::ServantLocator

        * tao/PortableServer/ServantManager.pidl:
          PortableServer::ServantManager

        * tao/PortableServer/GOA.pidl:
          The MIOP related methods, in the latest spec, these are in the GOA
          interface (Group Object Adapter), which is derived from the POA,
          this GOA will be moved later to PortableGroup.
