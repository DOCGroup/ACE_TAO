Fri Nov 19 09:23:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ThreadStrategy.{h,cpp}:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/IdUniquenessStrategy.h:
        * tao/PortableServer/LifespanStrategy.h:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/RequestProcessingStrategy.h:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.{h,cpp}:
          Added strategy_init again to the policy_strategy, the strategies are
          getting independent of each other, making it only needed to pass the
          POA to this method, so we can declare it again pure virtual in the
          base.

Wed Nov 17 11:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdAssignmentStrategySystem.cpp:
          Return true in has_system_id(), not false, stupid copy/paste error

Wed Nov 17 11:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
          Call the get_servant_i() on the POA instead of on the request
          processing strategy. Also corrected some exceptions that we throw
          based on the latest corba spec

Wed Nov 17 10:51:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Added get_servant_i()

Wed Nov 17 07:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_exception/ctor_assign.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
          Moved the POArefactor2 branch to the latest version of these files.
          Jeff fixes some issues

        * tao/*C.{h,cpp,inl}:
        * tao/PortableServer/*C.{h,cpp,inl}:
          Regenerated all files with the fixes above

Tue Nov 16 14:23:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{cpp,h}:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/IdAssignmentStrategy*.{h,cpp}:
          Added has_system_id() to the POA, this calls then the id_assignment
          strategy and in the places where the id_assignment policy value was
          checked, call the POA::has_system_id() method

Tue Nov 16 13:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Added the new files, in the PortableServer directory I don't have to
          do this, but in tao.mpc all files are listed explicitly.

        * tao/PortableServer/PortableInterceptorC.h:
          Removed the Objref_Traits for ::PortableInterceptor::IORInterceptor,
          it was removed earlier.

Tue Nov 16 12:05:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdUniquenessStrategyMultiple.cpp:
        * tao/PortableServer/LifespanStrategyPersistent.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA.{cpp,h}:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Added server_priority to the POA, which gets the server_priority
          from the cached_policies, use this in the strategies and shortened
          the documentation above the Non_Servant_Upcall usages.

Tue Nov 16 10:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategy*.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h
          Renamed persistent to is_persistent on the lifespan strategy and
          implemented it in the cpp file. Added is_persistent to the POA and
          use this method instead of the lifespan strategy directly

Tue Nov 16 10:10:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategyPersistent.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
          Cosmetic changes

Tue Nov 16 07:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Added Typecode_typesC.cpp

Mon Nov 15 18:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/IdUniquenessStrategy*.{h,cpp}
        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Added is_servant_active to the POA which calls the
          is_servant_in_map on the servant retention strategy. The id
          uniqueness strategy now calls the POA instead of the servant
          retention strategy directly, changed the strategy_init argument to
          a POA pointer.

Mon Nov 15 18:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
          Removed the id_assignment strategy from the strategy_init call, it
          is not used here.

Mon Nov 15 18:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Added allow_multiple_activations to the POA, use this in the servant
          retention strategy. The id uniqueness policy is now not needed
          directly anymore in the servant retention strategy, so zapped it
          there

Mon Nov 15 18:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
          Added allow_implicit_activation to the POA which calls the implicit
          activation policy. In the servant retention strategy use this
          method, this way the servant retention strategy is not dependen on
          implicit activation policy directly.

Mon Nov 15 18:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrateg*.{h,cpp}:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Added servant_has_remaining_activations and
          rebind_using_user_id_and_system_id to the POA and use these in the
          servant activator request processing strategy instead of calling the
          servant retention strategy directly. Because of this, the request
          processing strategy doesn't need the servant retention strategy
          directly anymore, so removed the srs from the strategy_init call.

        * tao/PortableServer/ServantRetentionStrategy.h:
          Cosmetic changes

Mon Nov 15 16:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.h:
          Cosmetic changes

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Added is_servant_activation_allowed() to the POA and the POA
          delegates this to the id_uniqueness strategy. The retain servant
          retention strategy and the servant acivator request processing
          strategy just call now the POA instead directly using the
          id_uniqueness strategy. The strategies should be decoupled from
          other strategies, this is the first change for that approach, thanks
          to Bala and Carlos for coming with this approach.

Mon Nov 15 10:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Typecode_types.pidl:
        * tao/Typecode_types.{h,cpp,inl}:
        * tao/Typecode.{h,cpp}:
        * tao/ORB.idl:
        * tao/diffs/Typecode.diff
          Moved the typecode interface forward declaration with the TCKind
          enum to a new file that can be compiled with the IDL compiler.
          Removed some stuff from the Typecode.{h,cpp} that is now generated
          by the IDL compiler. Some patches have to be done, these are in the
          diff file.

        * tao/Typecode_types.pidl:
          Added missing tk_event to the TCKind enum

        * tao/*.pidl:
        * tao/PortableServer/*.pidl:
          Regenerated dozens of pidl files with the idl compiler change below.

        * tao/diffs/IOP_Codec.diff:
        * tao/diffs/Pollable.diff:
        * tao/diffs/StringSeq.diff:
        * tao/diffs/TAO.diff:
          Zapped these not needed diffs

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
          Moved the branch POArefactor2 to the latest version of this file,
          this takes care that the typecodes for exceptions are generated in
          the C.cpp file instead of A.cpp, making it much easier to regenerate
          the pidl files in the repo.

Sun Nov 14 21:06:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tao/PortableServer/IdUniquenessStrategy.h:
	* tao/PortableServer/IdUniquenessStrategyUnique.h:
	* tao/PortableServer/ServantRetentionStrategy.h:

	  Cosmetic changes.

Sun Nov 14 19:08:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tao/PortableServer/Local_Servant_Base.h:

	  Changed .i to .inl

	* tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
	* tao/PortableServer/ThreadPolicyValueORBControl.cpp:

	  Added a comment for Johnny.

Fri Nov 12 13:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServerInterceptorAdapter.h:
          Removed some old todo's which are not valid anymore

Fri Nov 12 13:25:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp (create_reference_with_id_i):
          Throw the exception with the correct minor code

        * tao/*C.{h,cpp,i}:
          Regenerated several files

Fri Nov 12 08:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableInterceptor.pidl:
          Changed type of object_id attribute of ServerRequestInfo from
          CORBA::Octet to ObjectId to match the latest corba spec, this fixes
          bug 1961.

        * tao/PortableInterceptorC.{h,cpp,inl}:
        * tao/PortableInterceptorA.cpp:
        * tao/diffs/PortableInterceptor.diff:
          Regenerated these files and updated diff

        * tao/PortableServer/ServerRequestInfo.{h,cpp}:
          Updated for change above

Thu Nov 11 15:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.cpp (orb_core):
          Use the orb_core() method from the POA instead of using the
          orb_core_ member

        * tao/PortableServer/POA.h:
          Because of the change above POA_Current_Impl doesn't need to be a
          friend of POA anymore

Thu Nov 11 15:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PS_Current.pidl
        * tao/PortableServer/POA_Current.{h,cpp}:
        * tao/PortableSErver/POA_Current_Impl.{h,cpp}:
          Added get_servant

Thu Nov 11 14:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*:
          Fixed problems when building without native exception support.

        * tao/PortableServer/RequestProcessingStrategy*:
          Added cleanup_servant, used by the servant retention strategy. The
          servant activator will then do the etherealize, other strategies to
          nothing. The servant retention strategy then just calls this method
          and doesn't know anything about servant activator anymore

Thu Nov 11 11:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Upcall.cpp (servant_locator_cleanup):
          Added a todo that this method is not behaving according to the spec.
          I just stumbled on this, but will have to look more in detail how to
          update the code so that it matches the spec

Thu Nov 11 11:23:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyServantManager.{h,cpp}:
          Added validate_servant_manager

        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
          Use the new validate_servant_manager to check for nil servant
          managers and throw the correct exception

Thu Nov 11 09:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.{cpp,h,i}:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/POA.cpp
        * tao/PortableServer/Servant_Upcall.{cpp,h,inl}:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategyRetain.{h,cpp}:
          Moved the struct Map_Entry outside the TAO_Active_Object_Map and
          called it TAO_Active_Object_Map_Entry. This way we can just use a
          forward declaration in the strategy interfaces and don't need to
          include the Active Object Map on so many places. This reduces the
          number of includes and reduces compile time

Thu Nov 11 08:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdUniquenessStrategy*.{h,cpp};
          Added allow_multiple_activations() that can be used from other
          places

        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
          Removed get_aom(), added servant_has_remaining_activations() which
          can then be used by the request processing strategy. With these
          changes no other strategies need to have the active object map

        * tao/PortableServer/RequesProcessingStrategy*.{h,cpp}:
          Removed the aom from the strategy_init call, use the servant
          retention strategy instead of the aom.

Wed Nov 10 20:20:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyServantActivator.{h,cpp}:
          Moved incarnate and etherealize of the servant to separate helper
          methods

Wed Nov 10 19:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdUniquenessStrategy*.*:
          Renamed validate to is_servant_activation_allowed, this tells much
          better what this method does. Also, this method does just the check,
          it doesn't throw an exception anymore, so the corba environment
          macros are removed

        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
          Use the is_servant_activation_allowed method from the id uniqueness
          strategy instead of handling the check ourselves

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Call is_servant_activation_allowed on the IdUniqueness policy and
          throw an error when it is not possible.

Wed Nov 10 15:19:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyNonRetain.h:
        * tao/PortableServer/ServantRetentionStrategyRetain.{h,cpp}:
          Derive the Retain strategy from the NonRetain case, this reduces the
          code duplication between these strategies a lot. Thanks to Carlos
          for the proposal to change this. In case the Retain strategy can't
          find the needed info in the aom, he will ask the NonRetain

Wed Nov 10 14:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Upcall.h:
          Added increment_servant_refcount method to increment the refcount on
          the active object map entry

        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
          Use the new method above instead of getting the active object map
          entry here.

Wed Nov 10 14:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategy*.*:
          Added rebind_using_user_id_and_system_id to make the request
          processing strategy much simpler, use this in the servant activator
          request processing strategy.

        * tao/PortableServer/IdUniquenessStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Removed the strategy_init from PolicyStrategy, pass besides the POA
          more specific things to the strategies, so that they get exactly
          what they need, making the strategy code much smaller. Each strategy
          gets the things it needs, if it needs nothing, it gets nothing, if
          its need a lot, it receives more.

        * tao/PortableServer/Servant_Base.{h,cpp,i}:
        * tao/PortableServer/Local_Servant_Base.{h,cpp,inl}:
          Moved TAO_Local_Servant_Base to its own file

        * tao/Adapter.{h,cpp}:
        * tao/Adapter_Factory.{h,cpp}:
        * tao/Adapter_Registry.{h,cpp}:
        * tao/tao.moc
          Moved Adapter Factory to its own file, corrected some errors

Tue Nov  9 15:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDIR_GIOP/*:
          Regenerated IDL, updated diffs, removed msc_ver >= 1200 checks

Tue Nov  9 14:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Default_Servant/Default_Servant.cpp:
          Extended this test to check if the correct exception is thrown when
          we try to retrieve the default servant when none is set and when we
          try to get/set the servant manager

Tue Nov  9 14:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
          Extended this test so that we test if the correct exception is
          thrown when we set a nil servant manager or try to overwrite the
          servant manager

Tue Nov  9 11:13:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*Value.{h,cpp}:
          Splitted several PolicyValue files in multiple

Tue Nov  9 08:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Fixed wrong svc directive

Mon Nov  8 12:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategyRetain.{h,cpp}:
          Changed the reference_to_servant to check in the POA whether this
          reference was created by this POA, don't do this in the strategy
          itself.

Fri Nov  5 15:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*
          Splitted all strategy interfaces and implementation to separate
          files, added strategy factory interfaces and implementations. I have
          to cleanup a lot of includes/forward declarations and update class
          names, but the files/classes are now there and splitted making it
          easier to review things

Fri Nov  5 07:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.{h,cpp}:
          Removed these files

        * tao/PortableServer/ImplicitActivation*.*:
          In these files everything for ImplicitActivation policy is now
          available.

Thu Nov  4 14:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.{h,cpp}:
          Move implementation to the cpp file

        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Use the Activation_Strategy instead of the Cached_Policies

        * tao/PortableServer/POA.cpp (create_POA_i):
          Handle a system exception from the unknown_adapter call as described
          in 11.3.9.2 in the spec

        * tao/PortableServer/Servant_Location.h:
          Moved TAO_SERVANT_LOCATION enum to its own file to reduce the need
          to include Object_Adapter.h

        * tao/PortableServer/Object_Adapter.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.h:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/Request_Processing_Strategy.h:
          Updated because of change above

Thu Nov  4 12:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,i}:
          Removed thread_policy(), is not needed anymore

Thu Nov  4 10:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
        * tao/PortableServer/Object_Adapter.cpp:
          Moved validating the lifespan part of an object key from the POA to
          the Lifespan strategy. This way the creation_time is not needed
          anymore in the POA and the also removed some helper methods that are
          now not needed anymore.

Thu Nov  4 09:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
        * tao/PortableServer/Id_Assignment_Strategy.{h,cpp}:
          Moved some parts of the POA::set_id() method to the strategies and
          call the new create_key methods on the strategies

Wed Nov  3 11:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.h:
          Removed declaration of default_poa_policies(), there is no
          implementation for this method

Wed Nov  3 11:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.{h,cpp}:
          New servant dispatcher to create a GOA on demand

        * tao/orbsvcs/orbsvcs/PortableGroup/GOA.{h,cpp}:
        * tao/orbsvcs/orbsvcs/PortableGroup/MIOP.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
          Several changes to be able to load and create the GOA when needed

Tue Nov  2 15:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServerC.h:
          Removed the guard to check this file is not included. This file is
          included by other idl generated files, have to solve that first
          before this guard can be in place.

Tue Nov  2 14:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Lifespan_Strategy.cpp (notify_shutdown):
          Only deactive the server_object when it is available

Tue Nov  2 14:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Fixed bug in parse_key

Tue Nov  2 13:29:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*:
          Guard inclusion of PortableServerC.h, PortableServer.h must be
          included by the users, not the C.h

Tue Nov  2 12:48:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PS_ForwardC.h:
        * tao/PortableServer/diffs/PS_Forward.diff:
          Added TAO_DynamicImplementation forward declaration

        * tao/orbsvcs/examples/ORT/Gateway_i.h:
          Include PortableServer.h, not PortableServerC.h

Mon Nov  1 19:24:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Removed set_user_id and get_aom methods from the classes in this
          file, it are nice methods, but should be here, everything in these
          methods is already handled in the servant_retiontion strategy

        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Fixed unused argument warning

Mon Nov  1 18:44:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Changed the implementation of reference_to_servant, use a different
          method from the request_processing_strategy and implemented the
          non_retain case, this was previously not there in TAO, but the spec
          describes that certain functionality must be there

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Removed servant_to_reference, this is not needed, the
          servant_retention_strategy just calls get_servant(), for aom and
          servant manager it then gets wrong policy, else it gets the servant

Mon Nov  1 11:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
          Moved methods that use the POAManager to the cpp file, this way we
          don't need to include POAManager in the header file.

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
          Added include of POAManager.h because it is now not done in POA.h
          anymore

        * tao/PortableServer/POA.{h,cpp,i}:
        * tao/PortableServer/Request_Processing_Strategy.cpp:
        * tao/PortableServer/Servant_Retention_Strategy.cpp:
        * tao/PortableServer/ServantRetentionStrategy.h:
          Removed the active object map completely from the POA, it is now
          only available in the Retain Servant Retention Strategy. The Request
          Processing strategy still uses this map, just rewrote the code there
          to get the servant retention strategy instead of the POA, this will
          be rewritter later.

        * tao/PortableServer/POA.{cpp,i}:
        * tao/IORInterceptor/IORInfo.cpp:
          Removed get_manager_id from the POA, let the IORInfo just retrieve
          the POA Manager and call get_manager_id on that.

        * tao/PortableServer/POA.{cpp,i}:
          Moved all methods that acquire the POA lock to the cpp file, that
          also prevents us from including the poa_macros and POA_Guard.h files
          in this inline file

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Moved create_reference and create_reference_with_id to the servant
          retention strategy

Mon Nov  1 09:03:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed is_servant_in_map

        * tao/PortableServer/Request_Processing_Strategy.cpp:
        * tao/PortableServer/Id_Uniqueness_Strategy.cpp:
          Use servantretentionstrategy::is_servant_in_map instead of POA
          version

Mon Nov  1 09:03:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Implemented servant_to_reference in the servant retain strategy.
          Moved servant_to_system_id_i to the retan servant retain strategy,
          it is only needed for that strategy. Made temporarily some members
          in the POA public so that things keep compiling, will look how to
          make this consistent later.

Mon Nov  1 08:48:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,i}:
          Removed servant_to_system_id, this method is protected, so not
          callable from the outside and not used. The servant_to_system_id_i
          is a helper method that is used, but there is no need for
          servant_to_system_id.

Mon Nov  1 07:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
          Moved activate_object_with_id to the servant retention strategy and
          implemented it there. Removed the is_user_id_in_map from the POA and
          the Non Retain strategy, it is a helper method only for the retain
          servant retention strategy.

Fri Oct 29 13:03:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.pidl:
        * tao/PortableServer/diffs/*:
        * tao/PortableServer/*C.{h,cpp,inl}:
        * tao/PortableServer/*A.cpp:
          Moved all Policy enums out of the PortableServer.pidl and to the
          belonging *Policy.pidl file, that way we only get the Any operations
          we use

Fri Oct 29 12:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Made the ServantRetentionStrategy loadable by service configurator

        * tao/PortableServer/StrategyFactory.{h,cpp}:
          Base for all factories creating strategies

        * tao/PortableServer/ServantRetentionStrategyFactory.h:
          Abstract factory

        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.h:
          Concrete factory for servant retention strategies

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Use servant retention strategy strategy

        * tao/PortableServer/ServantRetentionStrategy.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Moved base class to a new file and use that base in all places

Fri Oct 29 11:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{cpp,i}:
          Moved activate_object from i to cpp file

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Implemented the activate_object in the Servant_Retention_Strategy
          and just call that strategy from the POA.

        * tao/PortableServer/POA.{cpp,h}:
          Removed default_servant, we don't need it anymore in the POA, it is
          in the Default_Servant_Request_Processing_Strategy.

Fri Oct 29 11:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.cpp (servant_to_id):
          Implemented for the retain case.

        * tao/PortableServer/POA.cpp (servant_to_id_):
          Call the Servant_Retention_Strategy

Fri Oct 29 10:19:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Removed the servant_to_id method, it doesn't belong here.
          Servant_to_id is in servant_retentium_strategy and this strategy
          just uses get_servant from the request processing strategy.

Fri Oct 29 10:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Request_Processing_Strategy.cpp:
          Changed the get_servant, don't throw an exception when no default
          servant is set with default servant request processing strategy in
          the strategy itself, let the POA do that, this makes the
          get_servant() method much more usable from the rest of the policies.
          The reason of this change is that when get_servant() is used on the
          POA and default servant policy is set, but no servant, then we
          should give the exception NoServant, but when other strategies use
          the default_servant, and it is not there they should give obj
          adapter exception

        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Implemented servant_to_id for the non retain case and changed the
          usage of thet get_servant call in the request processing strategy

Fri Oct 29 09:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        All PolicyFactory are now loaded on demand with the correct
        service name

Thu Oct 28 13:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Changes ServantRetentionPolicyFactory and
        RequestProcessingPolicyFactory to use a base class as interface and a
        FactoryImpl for the implementation

        * tao/PortableServer/ThreadPolicyFactoryImpl.cpp:
          Changed service name

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Policy_Creator_T.h:
          Changed loading of policy factories

        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
          Changed use_imr_ to bool

Thu Oct 28 11:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Changed the id_to_servant for the non retain case

Thu Oct 28 10:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Added is_poa_generated to check whether object reference is
          generated by this POA. Use this method in reference_to_id()

        * tao/PortableServer/Servant_Retention_Strategy.cpp (reference_to_servant):
          Use POA::is_poa_generated to check whether the object reference is
          generated by the POA.

Thu Oct 28 10:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.{cpp,h}:
          Added servant_to_reference as empty methods with just the text from
          the spec. The POA should call this strategy first, this then has to
          do some more, but all relationships are not clear yet.

Thu Oct 28 10:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.{cpp,h}:
          Added servant_to_id as empty methods with just the text from the
          spec. The POA should call this strategy first, this then has to do
          some more, but all relationships are not clear yet.

        * tao/PortableServer/ThreadPolicyFactory.h
          Made this a pure virtual base class

        * tao/PortableServer/ThreadPolicyFactoryImpl.cpp
        * tao/PortableServer/ThreadPolicyFactoryImpl.h
          The real factory implementation

        * tao/PortableServer/ThreadPolicyFactory.cpp
          Zapped this file

        * tao/PortableServer/PolicyFactory.h
          Reduced needed includes

        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/POA.cpp
        * tao/PortableServer/PortableServer_PolicyFactory.cpp
          Changed for ThreadPolicyFactory

Wed Oct 27 14:20:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          We seem to have several more mismatches with the spec, just added
          some todo's. When the methods in the POA are moved to the
          strategies, we should check all the methods related to servant
          activation, deactivation, retrieval with the spec to see if the
          correct exceptions with the correct minor codes are given

Wed Oct 27 04:34:29 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tao/PortableServer/Activation_Strategy.h:
	* tao/PortableServer/Id_Assignment_Strategy.cpp:
	* tao/PortableServer/Id_Uniqueness_Strategy.cpp:
	* tao/PortableServer/Id_Uniqueness_Strategy.h:
	* tao/PortableServer/Lifespan_Strategy.h:
	* tao/PortableServer/Object_Adapter.h:

	  Some warnings fixes and a few comments for Johnny. The most
	  important commment is going to be over email.

Wed Oct 27 12:02:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.h:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.h:
        * tao/PortableServer/Default_Acceptor_Filter.h:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/POA.h:
        * tao/PortableServer/Request_Processing_Strategy.h:
          Reduced includes

Wed Oct 27 08:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Creator_T.h:
          Return 0 in case no factory, not _nil, reduces header dependencies.
          Don't return a POLICYTYPE *, just let the caller use the _ptr type.

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
        * tao/PortableServer/Object_Adapater.cpp:
          Updated because of Policy_Creator_T change

        * tao/PortableServer/POA.{h,cpp}:
          Added some comments to member that according to me have to moved out
          of the POA and some methods that have to be reworked to use the
          strategies.

Wed Oct 27 07:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Lifespan_Strategy.h:
          Added some comments based on Bala's comments

Wed Oct 27 06:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

          Changed made by Bala

        * tao/PortableServer/Activation_Strategy.h:
        * tao/PortableServer/Id_Uniqueness_Strategy.cpp
          Removed variable name

        * tao/PortableServer/Id_Assignment_Strategy.cpp:
          Layout changed

        * tao/PortableServer/Lifespan_Strategy.h:
          Bala added some comments to address

        * tao/PortableServer/Object_Adapter.h:
          Cleanup of includes

Tue Oct 26 13:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.cpp:
          Changed the implementation of set_servant_manager, the spec is more
          precise what should happen, first it is only allowed to set it once,
          in case already set a bad_inv_order exception is thrown, twice, when
          it is set to nil, or given an invalid interface a obj_adapter
          exception is given

Tue Oct 26 13:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp.i}:
          Removed get_servant_i, set_servant_i, get_servant_manager_i and
          set_servant_manager_i, just moved the functionality to the method
          without _i. All methods just call the request processing strategy,
          no need to keep these methods anymore. Some missing ACE_CHECKS in
          the set methods are added.

Tue Oct 26 11:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
Tue Oct 26 11:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed all ServantActivator stuff from the POA

Tue Oct 26 10:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed all ServantLocator stuff from the POA

        * tao/PortableServer/Servant_Upcall.{h,inl,cpp}:
        * tao/PortableServer/Request_Processing_Strategy.cpp:
          Instead of storing a bool whether to call the servant locator, just
          store the servant locator itself in the Servant_Upcall. That way we
          also always use the same servant locator for the preinvoke and the
          postinvoke. This is easier to handle then the int, but probably we
          will move this later to the request processing strategy.

Tue Oct 26 09:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
          Moved all ImR code to the Lifespan Strategy and just call from the
          POA notify_startup and notify_shutdown. The code itself to notify
          the ImR must be converted, but first move it out. Had to include the
          different PolicyC files in the POA, have to look why in detail.

Tue Oct 26 09:18:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POAManager.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Servant_Upcall.cpp:
          Moved check_poa_manager_state from the POA to the POAManager, the
          POAManager should check its state, the POA just calls this method.

       * tao/PortableServer/POA.{h,cpp}:
       * tao/PortableServer/Sevant_Retention_Strategy.{h,cpp}:
         Moved several methods for the cleanup to the servant retention
         strategy. Some work has to be done for the servant locator.

Mon Oct 25 17:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>


        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
        * tao/PortableServer/Servant_Base.h:
        * tao/PortableServer/Servant_Retention_Strategy.{cpp,h}:
        * tao/PortableServer/Servant_Upcall.{cpp,h}:
        * tao/PortableServer/Servant_Upcall.h:
          Started moving functionality out of the POA and to the
          Servant_Retention_Strategies, in some cases when this strategy can't
          find a servant it goes to the Request_Processing_Strategy to see if
          that can fulfill the requested task. Made on some places some
          methods temporarily public to keep going, later I will revisit
          those. The current state is just that things compile, this is just a
          checkin to show the current state, things are now completely broken,
          a lot of functionality is partly moved, making the code unusable at
          this moment, when all functionality related to servant_retention and
          request_processing is moved out, then we can test again.

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp,inl}:
          Added servant_retention_strategy

Fri Oct 22 14:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.{h,inl}:
          Added new replace_object_id(), this is needed for the Request
          Processing strategies to replace the object id in a smart way

Fri Oct 22 13:44:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/portableserver_export.h:
          Removed include of ObjRef_VarOut_T.h, when neede somewhere include
          it there. With this include at this place everyone gets this include
          even when not needed.

        * tao/PortableServer/Active_Policy_Strategies:
        * tao/PortableServer/POA_Guard.h:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Thread_Strategy.h:
          Added missing includes

Thu Oct 14 07:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Mutex.h:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTCORBA/RT_PolicyFactory.h:
        * tao/RTCORBA/RTCORBA_includeC.h:
          Removed checks for _MSC_VER >= 1200

Wed Oct 13 12:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp (reference_to_id):
          Use ACE_NEW_THROW_EX instead of plain new

Wed Oct 13 11:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp (id):
          Use ACE_NEW_THROW_EX instead of plain new

Wed Oct 13 10:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.{h,cpp,inl}:
          Moved accessor methods to the new inline file

        * tao/PortableServer/*Strategy.{h,cpp}:
          Removed the policy list parameter of the strategy_init method. Some
          policies need to have data from the POA, at this moment just pass
          the POA pointer, later we can reduce this even more

        * tao/PortableServer/Object_Adapter.cpp:
          Changed creation of implicit_activation_policy

        * tao/PortableServer/POA.cpp:
          Pass the this to the update method of the active_policy_strategies

        * tao/PortableServer/Upcall_Wrapper.h:
        * tao/PortableServer/ServerInterceptorAdapter.h:
          Reduced includes

Wed Oct 13 08:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.h:
          Added allow_implicit_activation method and implemented this for both
          types.

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
          Added Activation_Strategy.

        * tao/PortableServer/POA.cpp:
          Fixed type in comment

Wed Oct 13 08:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Key_Adapters.{h,cpp}:
          Moved include of Map_T.h to the cpp file, added forward declaration
          of ACE_Active_Map_Manager_Key to the header file

        * tao/PortableServer/Active_Object_Map:
          Added include of Map_T.h

Wed Oct 13 07:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Creation_Time.{h,cpp,inl}:
          Moved TAO_Creation_Time and TAO_Temporary_Creation_Time to this
          file, removed the TAO_ prefix and moved them in the
          TAO::Portable_Server namespace

        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Object_Adatper.{h,cpp,i}:
        * tao/PortableServer/POA.{h,cpp,i}:
          Updated because of the move of the time classes

Tue Oct 12 14:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.cpp:
          Use a dynamic_cast to get the TAO_POA, the _tao_downcast has been
          zapped with this rework

Tue Oct 12 14:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Miop/McastHello/server.cpp:
          Use the new GOA interface instead of the MIOP specific part of the
          POA. The GOA support still has to be tested, but now we can compile

Tue Oct 12 13:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Initialize the active strategies after the cached policies are
          completely updated.

        * tao/PortableServer/Lifespan_Strategy.h:
          Added a Server_Object_i pointer to the persistent strategy, it needs
          to be there. Other code will move there also so that all ImR stuff
          is in the persistent strategy

        * examples/POA/FindPOA/FindPOA.cpp:
          Updated because of TAO_Adapter_Activator change

        * tests/ORT/ServerRequestInterceptor.h:
          Added include of PS_CurrentC.h

        * tests/Portable_Interceptors/PolicyFactory/server.cpp:
          Include PortableServer.h instead of PortableServerC.h

Tue Oct 12 12:35:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
          Added include of ServantManagerC.h to get ForwardRequest exception

Tue Oct 12 12:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
          Use a dynamic_cast to get the TAO_POA, the _tao_downcast has been
          zapped with this rework

Tue Oct 12 12:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
          Added include of POA_Current_Impl.h and used the correct namespace

        * tao/IFR_Client/*:
        * orbsvcs/orbsvcs/IFR_Service/*S.{h,cpp,i,inl}:
          Regenerated all the files, also all .i files are replaced with
          the new .inl files

        * orbsvcs/IFR_Server/diffs/*.diff:
          Removed all these files, they are outdated, on the wrong place and
          most of them are zero bytes.

Tue Oct 12 11:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/create_persistent_poa.h:
          Include PortableServer.h instead of PortableServerC.h

        * orbsvcs/orbsvcs/LoadBalancing/LB_MemberLocator.h:
          Include ServantLocatorC.h instead of PortableServerC.h

        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.cpp:
          Use a dynamic_cast to get the TAO_POA, the _tao_downcast has been
          zapped with this rework

Tue Oct 12 10:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Policy_Forward.*:
          Added Policy_Current as forward declared interface, it seems with my
          rework Policy_Current is not automatically included anymore, so
          added a forward declaration, this keeps the size much smaller than
          including the real file with Policy_Current

Tue Oct 12 09:48:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.h:
          Corrected include because of move of TAO_Object_Adapter_Factory

Tue Oct 12 09:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
          Implemented this strategy a little bit more

        * tao/PortableServer/Id_Uniqueness_Strategy.{h,cpp}:
          Added validate method to check whether servant may be activated or
          not based on this policy

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
          Create some more specific strategies, this will use a factory later,
          but this is for testing now

        * tao/PortableServer/POA.{h,cpp}:
          Use Lifespan and Id_Uniqueness strategies so far as they now exist

Tue Oct 12 07:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Key_Adapters.{h,cpp,i}:
          Removed the Key_Adapters.i file, it is empty

Tue Oct 12 07:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Changed get_servant_i and set_servant_i methods to use the
          Request_Processing_Strategy

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
          Added Id_Assignment_Strategy

Tue Oct 12 07:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Create the correct ServantRetentionStrategy based on the set
          policies

Tue Oct 12 07:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
          Removed the single threaded lock functionality, this is handled now
          by the Single Thread_Strategy

Mon Oct 11 15:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/DomainC.{h,cpp,inl}:
        * tao/PortableServer/Domain/DomainS.{h,cpp,inl}:
        * tao/Messaging/MessagingC.*:
        * tao/Messaging/MessagingS.*:
          Regenerated

        * tao/PortableServer/POA.{i,cpp}:
          Moved get/set_servant, get/set_servant_manager to cpp file

        * tao/DynamicInterface/Dynamic_Implementation.cpp:
          Added include of POA_Current_Impl.h

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
          Servant_Upcall has moved to its own file and to the
          TAO::Portable_Server namespace

Mon Oct 11 13:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{cpp,i}:
          Moved the_activator get/set methods from inline to cpp file, uses a
          lock and requires IDL generated code, not handy in the inline file

Mon Oct 11 13:41:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/DSI_Gateway/test_dsi.h:
          Added includes and changes usage of TAO_POA_Current to the new
          namespace

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/interceptors_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:
          Servant_Upcall has moved to its own file and to the
          TAO::Portable_Server namespace, changes generation in the TAO_IDL
          compiler to reflect the new name, and no need to include
          Object_Manager.h, Servant_Upcall.h is enough

       * tao/PortableServer/*C.{h,cpp,inl}:
         Regenerated with the latest version of the TAO_IDL compiler

       * tao/PortableServer/Default_Servant_Dispatcher.cpp:
       * tao/PortableServer/Object_Adapter.{h,i}:
       * tao/PortableServer/Request_Processing_Strategy.h:
       * tao/PortableServer/Servant_Upcall.inl:
       * tao/PortableServer/Servant_Base.cpp:
       * tao/PortableServer/POA.{h,cpp}:
         Corrected some small errors and reduced header dependencies

Mon Oct 11 09:51:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Everything has now been moved to the POArefactor2 branch that I
        created fresh this morning

Mon Oct 11 08:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdAssignmentPolicyFactory.h
        * tao/PortableServer/IdUniquenessPolicyFactory.h
        * tao/PortableServer/ImplicitActivationPolicyFactory.h
        * tao/PortableServer/LifespanPolicyFactory.h
        * tao/PortableServer/POA_Current.h
        * tao/PortableServer/RequestProcessingPolicyFactory.h
        * tao/PortableServer/ServantRetentionPolicyFactory.h
        * tao/PortableServer/ThreadPolicyFactory.h
        * tao/PortableServer/Thread_Strategy.cpp
        * tao/PortableServer/Thread_Strategy.h:
          Updated by Bala

Fri Oct  8 09:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.h:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/Active_Policy_Strategies.h:
        * tao/PortableServer/Id_Assignment_Strategy.cpp:
        * tao/PortableServer/Id_Assignment_Strategy.h:
        * tao/PortableServer/Id_Uniqueness_Strategy.cpp:
        * tao/PortableServer/Id_Uniqueness_Strategy.h:
        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Servant_Retention_Strategy.h:
        * tao/PortableServer/Thread_Strategy.cpp:
        * tao/PortableServer/Thread_Strategy.h:
          Added a TAO_POA* to the strategy_init call, this can then be used by
          the strategies

        * tao/PortableServer/Request_Processing_Strategy.cpp:
        * tao/PortableServer/Request_Processing_Strategy.h:
          Besides adding TAO_POA* also now implemented several of the methods

        * tao/PortableServer/POA.cpp:
          Changed get_servant_i() and set_servant_i() to use the
          Request_Processing_Strategy to show how another strategy would work
          after the rework, this way Bala can better see the direction I want
          to go

Fri Oct  8 08:36:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current.{h,cpp,inl}:
        * tao/PortableServer/Object_Adapter.{h,cpp,inl}:
          Renamed TAO_POA_Current to TAO::Portable_Server::POA_Current and
          moved it to its own file

        * tao/PortableServer/PortableServer_ORBInitializer.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
          Updated because of change above

Fri Oct  8 08:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.{h,cpp,inl}:
        * tao/PortableServer/Servant_Upcall.{h,cpp,inl}:
          Moved Servant_Upcall and POA_Current_Impl to its own files and to
          the TAO::Portable_Server namespace. I have to reduce includes and
          change to TAO_IDL compiler to generate Servant_Upcall in the new
          namepace

        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.{h,cpp}:
        * tao/PortableServer/Object_Adapter.{cpp,h,i}:
        * tao/PortableServer/POA.{h,cpp}
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Dispatcher.h:
        * tao/PortableServer/ServerRequestInfo.h:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Updated because of the change above

Thu Oct  7 14:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Non_Servant_Upcall.{h,cpp,inl}:
        * tao/PortableServer/Object_Adapter.{h,cpp,i}:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
          Moved Non_Servant_Upcall to its own file and to the
          TAO::Portable_Server namespace

Thu Oct  7 14:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Replaced all ACE casts with their C++ versions

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Made changes to these files because of the changes in the
          PortableServer library

Thu Oct  7 12:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
        * tao/PortableServer/POA.h:
          Moved Active_Policy_Strategies to its own file

Thu Oct  7 12:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.{h,cpp}:
          Moved implementation to cpp file

Thu Oct  7 11:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Moved implementation to header file and started with implementing
          this strategy

Thu Oct  7 10:10:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Instead of checking the thread policy value, use the thread strategy
          to obtain and release the lock.

        * tao/PortableServer/Thread_Strategy.{h,cpp}:
          Implemented this class in cpp file, give enter/exit an int return
          value

        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
          Implemented Active_Policy_Strategies for thread strategy, just to
          show the idea, have to use a factory and svc conf in the future

        * tao/PortableServer/POA.{h,cpp,i}:
          Added Active_Policy_Strategies as member, update it on construction
          of the POA so that the strategies are created. When this is the
          correct way to go, the code belonging to the single thread lock and
          the lock itself can be zapped.

Thu Oct  7 08:29:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Create the default policies using the new way

        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Made these compiling so that I can test

Thu Oct  7 08:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*Policy.{h,cpp}:
        * tao/PortableServer/*PolicyFactory.{h,cpp}:
          Moved _tao_cached_type and _tao_scope from the factory to the
          policy, these methods are called on the policy from within TAO and
          the default implementation within Policy itself must be overruled by
          our derived classes.

Tue Oct  5 14:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Thread_Strategy.h:
          Renamed init to strategy_init to fix warning from the Borland
          compiler about hiding the init from service_config

        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Added some more methods which belong to this strategy, just a copy,
          didn't got things compiling yet, more has to move

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Implemented this using the policy_creator

        * tao/PortableServer/PortableServer.cpp:
          Removed not needed includes

        * tao/PortableServer/POA.cpp:
          Implemented the create policy methods

        * tao/PortableServer/Lifespan_Strategy.h:
          Moved more methods to this strategy

Tue Oct  5 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Creator_T.h:
          Template to create policies more easier. Still working on the
          introduction, just a checkin to be sure

Tue Oct  5 09:46:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.h:
          Removed comment of Bala, got the idea

        * tao/PortableServer/POAManager.h:
          Reduced needed includes

        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Adapter_Activator.h:
        * tao/PortableServer/Default_Servant_Dispatcher.h:
        * tao/PortableServer/IdAssignmentPolicyFactory.cpp:
        * tao/PortableServer/IdAssignmentPolicyValue.h:
        * tao/PortableServer/PolicyFactory.cpp:
        * tao/PortableServer/PolicyFactory.h:
          Bala has added some remarks to these files

Thu Sep 30 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Cached_Policies.h:
          Added ThreadStrategy, just to show the idea

Thu Sep 30 13:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/poa_macros.h
          Moved POA_Guard to the TAO::Portable_Server namespace

Thu Sep 30 13:31:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.h:
          Added is_servant_in_map

        * tao/PortableServer/Upcall_Wrapper.h:
          No need to add path

        * tao/PortableServer/POA_Cachec_Policies.{h,cpp,i}:
          Renamed TAO_POA_Cached_Policies to Cached_Policies in the
          TAO::Portable_Server namespace.
          Added empty class Active_Policy_Strategies class, the idea is that
          each POA gets an instance of this class and uses the policy
          strategies by retrieving them from this class

        * tao/POA.{h,i}:
          Updated because of Cached_Policies change above

Thu Sep 30 13:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter_Factory.h:
          Removed msvc push/pop, no need for it in this file

Thu Sep 30 13:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Cached_Policies.h:
          Removed msvc push/pop, no need for it in this file

Thu Sep 30 12:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.{h,cpp}:
        * tao/PortableServer/Object_Adapter_Factory.{h,cpp}:
          Moved Object_Adapter_Factory to its own file

        * tao/PortableServer/PortableServer.cpp:
          Because the Object_Adapter_Factory is in its own file, include that
          file instead of Object_Adapter.h

        * tao/PortableServer/POA.cpp:
          Include the LifespanPolicyFactory.

Thu Sep 30 12:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.h:
          Added id_assignment_key_type() and id_assignment_key_type_length()
          methods, for each of the derived classes, implemented this.

        * tao/PortableServer/Lifespan_Strategy.h:
          Added lifespan_key_type() and lifespan_key_type_length()
          methods, for each of the derived classes, implemented this.

        * tao/PortableServer/POA.cpp (create_lifespan_policy):
          Implemented this method, we have to refactor the creation of the
          policies, to much code duplication

        * tao/PortableServer/Request_Processing_Strategy.h:
          Added get_servant_manager, set_servant_manager, get_servant and
          set_servant and implemented these methods for each of the types.

Wed Sep 29 11:57:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.h:
          Just class definition for this strategy.

Wed Sep 29 11:33:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.h:
          Just class definition for this strategy.

Wed Sep 29 09:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Uniqueness_Strategy.h:
          Just class definition for this strategy.

Wed Sep 29 09:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.h:
          Just class definition for this strategy.

Wed Sep 29 09:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Thread_Strategy.h:
          Moved Policy_Strategy to its own file

        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Activation_Strategy.h:
          Just class definitions for these strategies

Sun Sep 26 14:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.{h,cpp}:
          Moved everything from TAO::PortableServer to TAO::Portable_Server to
          prevent any accidents that a wrong namespace is taken

Fri Sep 24 14:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.{h,cpp}:
          Moved all new Policy Value classes to the TAO::PortableServer
          namespace. Renamed everything to match filenames. Everything
          compiles again, no testing done yet.
          Removed checks for _MSC_VER >= 1200

Fri Sep 24 14:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*_Value.{h,cpp}:
          Renamed these files, zapped all underscores so that filenames match
          the IDL files they belong to. Classes will be renamed soon

        * tao/PortableServer/POA_*.{h,cpp}:
          Removed POA prefix and underscores to match IDL files

        * tao/PortableServer/Loadable_*.{h,cpp}:
          Renamed to *Factory.{h,cpp}, classes will be renamed soon

        * tao/PortableServer/POA_Policy.{h,cpp}:
          Renamed to PolicyFactory.{h,cpp}

Wed Sep 22 14:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Thread_Strategy.{h,cpp}:
          New file, contains some classes for the idea to implement the
          policy behaviour in strategies. Just a checkin to share ideas.

Wed Sep 22 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ORT_Adapter_Factory.h:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.{h,cpp}:
          Removed environment macro's, no need for them

Wed Sep 22 13:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Improved loading of thread policy, same code as in the POA and the
          Policy factory, I like to factor this out to prevent code
          duplication.

Wed Sep 22 12:31:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_Policy_Validator.cpp:
          Replaced include of PortableServerC.h with LifespanPolicyC.h

Wed Sep 22 11:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA.i:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/poa_macros.h:
          Changed TAO_POA_Guard, to POA_Guard in the TAO namespace

Wed Sep 22 10:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_*_Policy.{h,cpp}:
          Minor updates for values

        * tao/PortableServer/*_Policy_Value.{h,cpp}:
          New policy value files

        * tao/PortableServer/POA_Policies.{h,cpp,i}:
          Zapped these files

        * tao/PortableServer/Default_Policy_Validator.cpp:
          Removed include of POA_Policies, but had to include all *PolicyC.h
          files

        * tao/PortableServer/POA.cpp:
          Commented out some code, have to get a cleaner to implement each
          create policy method

        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
          Removed include of POA_Policies, but had to include all *PolicyC.h
          files

        * tao/PortableServer/POA_Policy_Set.h:
          Removed include of POA_Policies

Wed Sep 22 07:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_*_Policy.{h,cpp}:
          New Loadable Policy files, one set for each Policy we have

        * tao/PortableServer/POA_Policy.h:
          Removed msvc pragma disable, not needed here

Tue Sep 21 11:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.cpp:
        * tao/PortableServer/Thread_Policy_Value.cpp:
        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Fixed emulated exception usage and work on Bala's comments

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.h:
        * tao/PortableServer/PortableServer.h:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Changed handling of Loadable_Thread_Policy and the usage of svc conf

Tue Sep 21 11:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.{h,cpp}:
          Bala has added some comments to these files

Mon Sep 20 11:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Replaced all ACE cast macro's with their C++ versions

Mon Sep 20 09:19:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,cpp}:
          Zapped all code that was guarded with #ifdef 0, it is old, and
          makes it a little bit more readable

Fri Sep 17 14:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Thread_Policy.{h,cpp}:
          Let the constructor do nothing, make an init method to intialize the
          object, the init method with an Any can throw an exception and that
          is something we don't want to do in a constructor

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Don't get the ThreadPolicyValue out of the Any here, just pass it to
          the Loadable_Thread_Policy and get it out of the Any in the
          POA_ThreadPolicy.

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
          Added create method with an Any, this can throw exceptions

Fri Sep 17 10:20:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.h:
          Replaced include of PortableServerC.h with PS_ForwardC.h

        * tao/PortableServer/Active_Object_Map.cpp:
          Added include of tao/SystemException.h

Fri Sep 17 09:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Default_Acceptor_Filter.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/Key_Adapters.cpp:
        * tao/PortableServer/ORB_Manager.cpp:
        * tao/PortableServer/POA_Cached_Policies.cpp:
        * tao/PortableServer/POA_Guard.cpp:
        * tao/PortableServer/POA_Policies.cpp:
        * tao/PortableServer/POA_Policy_Set.cpp:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/Servant_Dispatcher.cpp:
        * tao/PortableServer/ServerRequestInfo.cpp:
          Added or corrected ACE_RSCID's

Fri Sep 17 09:38:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.h:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.h:
        * tao/PortableServer/ORB_Manager.h:
        * tao/PortableServer/ORT_Adapter.h:
        * tao/PortableServer/PICurrent_Guard.h:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_Policy_Set.h:
        * tao/PortableServer/POA_Manager.h:
        * tao/PortableServer/Servant_Base.h:
        * tao/PortableServer/Upcall_Wrapper.h:
          Documentation improvements

        * tao/PortableServer/Key_Adapters.cpp:
          Replaced all ACE cast macros with C++ versions

        * tao/PortableServer/Key_Adapters.h:
          Instead of including PortableServerC.h, just include PS_ForwardC.h,
          this is enough

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/Thread_Policy_Value.h:
          Don't export svc config stuff

Wed Sep 15 12:36:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Policy_Set.cpp:
          Removed workaround for vc5, that compiler is not supported anymore.

Wed Sep 15 12:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Thread_Policy_Value.{h,cpp}:
          New file with the thread policy value base and derived classes,
          moved out of Loadable_Thread_Policy

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Changed the way we retrieve the thread policy

        * tao/PortableServer.h:
          Added new *C.h files, without this existing apps don't build

        * tao/PortableServer.cpp:
          Added svc conf directives to process the new classes

        * tao/POA_Thread_Policy.{h,cpp}:
          Added missing policy_type method

        * tao/POA_Policies.{h,cpp}:
          Commented out the TAO_Thread_Policy, we have a new implementation

Wed Sep 15 09:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbsvcs/orbsvcs/PortableGroup/GOA.{h,cpp}:
        * tao/orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.{cpp,h}:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.h:
          Changes to make TAO_GOA loadable as POA and use that, at the moment
          I created the branch it seems CosNaming didn't build, so I can't
          test this right now, have to move my branch forward one time.

        * tao/orbsvcs/orbsvcs/PortableGroup/POA_Hooks.{cpp,h}:
          Removed, functionality is now in TAO_GOA

        * tao/orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.{h,cpp}:
          New files

Wed Sep 15 08:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Fixed this idl file (GOA part)

Wed Sep 15 08:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter.{h,cpp}:
        * tao/Adapter_Registry.{h,cpp}:
          Moved the TAO_Adapter_Registry class to its own file

        * tao/Adapter.i:
          Zapped, was empty

        * tao/ORB_Core.{h,cpp}:
        * tao/TAO_Internal.cpp:
          Updated includes/forward declarations because of file split

Wed Sep 15 07:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb_typesS.h:
          New file

Tue Sep 14 12:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.{cpp,h}:
          Intermediate commit, not finished yet.

Tue Sep 14 12:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ORT_Adapter_Factory.h:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.{h,cpp}:
          Removed exception spec from create/destroy method, for the destroy
          it is not needed, for the create, we could just return 0 in case of
          out of memory

Tue Sep 14 11:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Added empty Thread_Policy_Value, just getting the complete picture
          together.

Tue Sep 14 08:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableGroup_Hooks.{h,cpp}:
          Zapped these files, not needed anymore now we have a GOA in the
          PortableServer library

        * tao/ORB_Core.{h,cpp,i}:
          Zapped all functionality related to PortableGroup hooks, we don't
          need this anymore.

Tue Sep 14 08:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/GOA*:
          Zapped these files

        * tao/orbsvcs/orbsvcs/PortableGroup.idl:
          Added GOA interface here

        * tao/orbsvcs/orbsvcs/GOA.{h,cpp,inl}:
          Moved the GOA to this place, implementation has to be made correct,
          POA hook is not needed anymore, must be loadable by service
          configurator. By moving this now I can cleanup some more stuff in
          the ORB.

Mon Sep 13 12:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Added methods required from the Policy interface

Thu Sep  9 14:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
          First version, also have to work on these

Thu Sep  9 13:57:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Temporary checkin, have to work on this

Thu Sep  9 13:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Policy.{h,cpp}:
          Base for the new loadable policies

Thu Sep  9 13:25:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/GOA.{h,cpp}:
          First version, still here, move it later, just making sure the GOA
          stuff doesn't get lost.

Thu Sep  9 10:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Endpoints.pid:
          No need to include orb.idl

        * tao/IIOP_EndpointsC.{h,cpp,i,inl}:
        * tao/IIOP_EndpointsA.cpp:
          Regenerated

        * tao/diffs/IIOP_Endpoints.diff:
          Zapped this file, no diffs needed anymore

Thu Sep  9 10:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IOP_IOR.pid:
          No need to include orb.idl

        * tao/IOP_IORC.{h,cpp,i,inl}:
        * tao/IOP_IORA.cpp:
          Regenerated

        * tao/diffs/IOP_IOR.diff:
          Zapped this file, no diffs needed anymore

Thu Sep  9 10:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RTPortableServerC.{h,cpp,i,inl}:
        * tao/RTPortableServer/RTPortableServerA.cpp:
          Regenerated

        * tao/RTPortableServer/diffs/RTPortableServer.diff:
          Updated

        * tao/RTPortableServer/RT_POA.i:
          Include POA_Guard.h

Thu Sep  9 10:00:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed all GOA stuff, will put this in a new GOA class. Will follow
          later, first get everything building again

        * tao/PortableServer/PortableGroup_Hooks.cpp:
          Include GOAC.h

Thu Sep  9 09:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb.idl:
        * tao/orb_types.pidl:
          Moved ValueModifier and Visibility to orb.idl again, not really
          needed and causes problems with valuetype library

        * tao/orb_typesC.{h,cpp,inl}:
        * tao/orb_typesA.cpp:
          Regenerated

        * tao/OBV_Constants.h:
          Updated because of move

        * tao/ObjRefTemplate/Object_Reference_Template_i.cpp:
          Replaced tao_poa_downcast with dynamic cast

Thu Sep  9 08:00:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb.idl:
        * tao/orb_types.pidl:
          Moved the typedefs from orb.idl to orb_types.pidl. This makes it
          possiblet to just get the types without all other stuff that is
          included in orb.idl

        * tao/orb_typesC.{h,cpp,inl}:
        * tao/orb_typesA.cpp:
          New generated files

        * tao/OBV_Constants:
          Removed typedefs, include orb_typesC.h instead

        * tao/ORB.h:
          Removed typedefs that are now in orb_types. Also removed
          valuetype_factory_map_ members which was ifdefed out

        * tao/Typecode_Constants.cpp:
          Removed orb_id, this is now in orb_typesA.cpp

        * tao/Typecode.cpp:
          Added include of orb_typesC.h

        * tao/PortableServer/PortableServer.pidl:
        * tao/PortableServer/ServantLocator.pidl:
          No need to include orb.idl, only need orb_types.pidl

        * tao/PortableServer/*Policy.pidl:
          Because PortableServer.pidl doesn't include orb_types.pidl, we don't
          get Policy.pidl for free anymore, we have to explicit include it
          here

        * tao/PortableServer/*C.{h,cpp,inl}:
        * tao/PortableServer/*A.cpp:
        * tao/PortableServer/diffs/*:
          Regenerated all these files

Wed Sep  8 14:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/Object_Adapter.cpp:
          Moved TAO_POA_Guard to its own file

Wed Sep  8 14:02:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
          Moved the TAO_Adapter_Activator to its own file

Wed Sep  8 12:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/diffs/*.diff:
          Serveral new diffs

        * tao/PortableServer/*C.{h,cpp,inl}:
          Several new generated files

        * tao/PortableServer/POA.{h,cpp}:
          Removed tao_poa_downcast, use dynamic cast
          Also inherit from GOA, this will be moved soon.

        * tao/PortableGroup_Hooks.h:
          Temporarily removed checks for minimum poa, this has to move
          together with the GOA to the PortableGroup library.

          Also used the minimum corba 1.0 spec to remove the parts we don't
          use with minimum corba.

Wed Sep  8 10:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/diffs/PS_Forward.diff:
        * tao/PortableServer/diffs/ServantLocator.diff:
          New diffs to be applied after regeneration

Wed Sep  8 08:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.{h,cpp,i}:
          Zapped tss_resources, we don't need to store them

        * tao/ORB_Core.{h,cpp}:
          Zapped inherit_from_parent_thread

Wed Sep  8 08:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.pidl:
          Splitted this file into the new files below to be able to refactor
          things

        * tao/PortableServer/POAManager.pidl:
          PortableServer::POAManager

        * tao/PortableServer/PS_Current.pidl:
          PortableServer::Current

        * tao/PortableServer/PS_Forward.pidl:
          Some forward declarations and typedefs needed in several files

        * tao/PortableServer/AdapterActivator.pidl:
        * tao/PortableServer/IdAssignmentPolicy.pidl:
        * tao/PortableServer/IdUniquenessPolicy.pidl:
        * tao/PortableServer/ImplicitActivationPolicy.pidl:
        * tao/PortableServer/LifespanPolicy.pidl:
        * tao/PortableServer/RequestProcessingPolicy.pidl:
        * tao/PortableServer/ServantRetentionPolicy.pidl:
        * tao/PortableServer/ThreadPolicy.pidl:
          All available policies, each in its own file

        * tao/PortableServer/ServantActivator.pidl:
          PortableServer::ServantActivator

        * tao/PortableServer/ServantLocator.pidl:
          PortableServer::ServantLocator

        * tao/PortableServer/ServantManager.pidl:
          PortableServer::ServantManager

        * tao/PortableServer/GOA.pidl:
          The MIOP related methods, in the latest spec, these are in the GOA
          interface (Group Object Adapter), which is derived from the POA,
          this GOA will be moved later to PortableGroup.
