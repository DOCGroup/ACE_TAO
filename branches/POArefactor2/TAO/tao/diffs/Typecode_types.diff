--- orig/Typecode_typesC.h	2004-11-15 16:22:41.884977600 +0100
+++ Typecode_typesC.h	2004-11-16 08:33:50.523481600 +0100
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -137,6 +137,11 @@
     tk_component,
     tk_home,
     tk_event
+
+    // This symbol is not defined by CORBA 3.0.  It's used to speed up
+    // dispatch based on TCKind values, and lets many important ones
+    // just be table lookups.  It must always be the last enum value!!
+    , TC_KIND_COUNT
   };
   
   typedef TCKind &TCKind_out;
@@ -153,34 +158,16 @@
 namespace TAO
 {
 
-#if !defined (_CORBA_TYPECODE__TRAITS_CH_)
-#define _CORBA_TYPECODE__TRAITS_CH_
-  
-  ACE_TEMPLATE_SPECIALIZATION
-  struct TAO_Export Objref_Traits< ::CORBA::TypeCode>
-  {
-    static ::CORBA::TypeCode_ptr duplicate (
-        ::CORBA::TypeCode_ptr
-      );
-    static void release (
-        ::CORBA::TypeCode_ptr
-      );
-    static ::CORBA::TypeCode_ptr nil (void);
-    static CORBA::Boolean marshal (
-        ::CORBA::TypeCode_ptr p,
-        TAO_OutputCDR & cdr
-      );
-  };
-
-#endif /* end #if !defined */
 }
 
-// TAO_IDL - Generated from
-// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66
-
-TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::TypeCode_ptr );
-TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::TypeCode_ptr &);
-
+// Workaround for a Visual Studio .NET bug where this class is not
+// properly imported by an application if typedef'd or subclassed,
+// resulting in 'multiply defined' link errors. The export macro
+// here forces an explicit import by the application. Please see
+// http://support.microsoft.com/default.aspx?scid=kb;en-us;309801
+#if defined ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION_EXPORT
+  template class TAO_Export TAO_Unbounded_Pseudo_Sequence<CORBA::TypeCode>;
+#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION_EXPORT */
 
 // TAO_IDL - Generated from
 // be\be_visitor_enum/cdr_op_ch.cpp:50
