    //
    // IOR Component for ZIOP
    //

    /**
     * The ZIOP IOR Component Tag Id
     */
    const IOP::ComponentId TAG_IONA_ZIOP_COMPONENT = 0x49545F46;

    /**
     * The ZIOP IOR Component. Has an CompressorId attribute indicating the
     * compression algorithm supported by the server side.
     */
    local interface CompressionComponent : IT_IOR::Component
    {
        readonly attribute CompressorId compressor_id;
    };

    /**
     * Factory for ZIOP IOR Components
     */
    local interface CompressionComponentFactory : IT_IOR::ComponentFactory
    {
        CompressionComponent get_compression_component(
            in CompressorId compressor_id
        );
    };

    //
    // ORB Policies for ZIOP
    //

    /**
     * Tag Id for CompressionEnablingPolicy
     */
    const CORBA::PolicyType COMPRESSION_ENABLING_POLICY_ID =
            IT_PolicyBase::IONA_POLICY_ID + 0x46;

    /**
     * Tag Id for CompressorIdPolicy
     */
    const CORBA::PolicyType COMPRESSOR_ID_POLICY_ID =
            IT_PolicyBase::IONA_POLICY_ID + 0x47;

    /**
     * The ZIOP CompressionEnablingPolicy. Has an boolean attribute indicating
     * if compression is enabled or not.
     */
    local interface CompressionEnablingPolicy : CORBA::Policy
    {
        readonly attribute boolean compression_enabled;
    };

    /**
     * The ZIOP CompressorIdPolicy. Has an CompressorId attribute indicating
     * the compression algorithm to be used.
     */
    local interface CompressorIdPolicy : CORBA::Policy
    {
        readonly attribute CompressorId compressor_id;
    };
};
