Mon Mar 24 19:35:31 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/tests/Notify/Bug_3252_Regression/server.cpp:

        Closing the SC before exiting ACE_TMAIN causes finalization
        of (among others) the ORB Resource Factory. At exit however, the
        ORB table will be finalized _after_ the SC. Any ORB that tries to
        destroy itself at that point will cause SEGV, because its RF is no
        longer a valid object.

        This test executable is loading DLL-based services that create
        their ORBs, but it is also itself a taoexe. This causes many
        ORB-related services, including a default RF to be inserted via
        static initializers. This circumvents the destruction order and
        also prevents the ORB from establishing its own local
        configuration context, which otherwise would have made a very easy
        fix possible (using -ORBGestalt local)

        The solution is to remove the explicit SC::open() and SC::close()
        and leave ORB_init() to do the job for us. The Object Manager will
        correctly finalize the static services at process exit.

        Alternatively, and perhaps a cleaner solution is to reduce the
        server executable to a bare-bones aceexe. This eliminates TAO's
        static initializers and leaves the DLL-based service to manage
        their own service configuration contexts.

Sat Mar 22 04:25:07 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:

        Updated to add a test configuration for demonstrating bug
        #2564. Needs more work to make the configurations selectable at
        run-time.

Thu Mar 20 20:21:19 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/run_tests_all.pl:

        Fixed a bug that was preventing it from running.

Thu Mar 20 02:14:11 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/Bug_3251_Regression/Bug_3251.conf:
        * tests/Bug_3251_Regression/Bug_3251_Regression.mpc:
        * tests/Bug_3251_Regression/PersistentPoa.h:
        * tests/Bug_3251_Regression/server.cpp:

        Added some changes to make it compile (but not test anything) on
        Windows. Also added a call to sync (after fork) so we get the
        correct values for PID in the child.

Fri Mar  7 21:10:50 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

        Additional work required to make possible passing the argc to ARGV
        because often when a command line is hand-crafted it is not
        0-terminated, as expected by ARGV.

        * tests/Bug_2936_Regression/PersistentPOA.cpp:

        Fixing (what seems to be) a bad ownership transfer of Object's.

Mon Mar  3 21:20:36 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

        Copying the args with ARGV needs quoting to be enabled,
        because space containing arguments will be handled incorrectly
        otherwise. This fixes the regression of Bug_2735_Regression

Mon Mar  3 05:53:49 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

        Adding a call to parse_private_args_i in open_global_services to
        be able to process all args intended for the global config.

        * tests/Bug_2735_Regression/server.cpp:

        The argv must be 0-terminated to fulfill the contract with C's
        argv.

Mon Mar  3 00:43:17 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.h:
        * tao/ORB.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:
        * tao/TAO_Internal.h:
        * tao/TAO_Internal.cpp:

        Reversing the "naked" pointer replacement because it caused
        unexpected reference counting issues with SG instances allocated
        on the stack. Refined argv processing by clearly separating the
        global service context initialization (for the default ORB) from
        any subsequent ORB's service contextet. This fixes a problem with
        examples/Simple/time-date which uses both -ORBSvcConf and
        -ORBSvcConfDirective

Fri Feb 29 02:34:39 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.h:
        * tao/ORB.cpp:

        Factored out the initialization of the global gestalt and the
        determination of the context, given an ORB id.

        * tao/ORBInitializer_Registry.cpp:

        Removing the misplaced call to TAO::ORB::init_orb_globals(). Now
        that the latter has non-trivial functionality, calling it from an
        ORB initializer is really wrong.  The rest of the prolog code in
        register_orb_initializer() is also suspect, but I can't recall the
        specific use case that must have required what is effectively a
        duplicate of TAO::ORB::open_global_services()

        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:

        Replacing the "naked" ACE_Service_Gestalt* with the "smart"
        equivivalent.

        * tao/ORB_Core.cpp:
        * tao/TAO_Internal.h:
        * tao/TAO_Internal.cpp:

        Factored out the opening of global  service context .

Tue Feb 19 19:12:39 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/tests/Bug_3216_Regression/run_test.pl:

        Fixed to use $ACE_ROOT instead of '../..', to search for PerlACE.

Tue Feb 19 02:39:24 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.cpp:

        Fixed a typo that caused "local" and "global" values for
        -ORBGestalt

Fri Dec 28 22:47:55 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:
        * tao/ORB_Core.cpp:
        * tao/TAO_Internal.cpp:

        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:

        Changed the Service Config interfaces back to using plain pointers
        instead of auto pointers for passing the Service Gestalt instances
        in and out. The lifecycle of SG's is determined by the lifecycle
        of SC instance. Anyone else willing to keep a reference should use
        the Intrusive_Auto_Ptr template to capitalize on and participate
        in the reference counting of SG's

Sun Dec 16 21:36:32 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ChangeLog.iliyan-gestalt:

        Added a private changelog.

        * tao/ORB.cpp:

        Adding support for 'GLOBAL' value of the -ORBGestalt option which
        will force any ORB in the same process to use the same service
        configuration context (gestalt).

        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:
        * tao/ORB_Core.cpp:
        * tao/TAO_Internal.h:
        * tao/TAO_Internal.cpp:

        Updating for the interface change due to the replacement of
        Service Gestalt with a (intrusive) reference counted instances.

        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:

        Updated for the changed interfaces.
