Mon Mar  3 21:20:36 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

        Copying the args with ARGV needs quoting to be enabled,
        because space containing arguments will be handled incorrectly
        otherwise. This fixes the regression of Bug_2735_Regression

Mon Mar  3 05:53:49 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

        Adding a call to parse_private_args_i in open_global_services to
        be able to process all args intended for the global config.

        * tests/Bug_2735_Regression/server.cpp:

        The argv must be 0-terminated to fulfill the contract with C's
        argv.

Mon Mar  3 00:43:17 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.h:
        * tao/ORB.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:
        * tao/TAO_Internal.h:
        * tao/TAO_Internal.cpp:

        Reversing the "naked" pointer replacement because it caused
        unexpected reference counting issues with SG instances allocated
        on the stack. Refined argv processing by clearly separating the
        global service context initialization (for the default ORB) from
        any subsequent ORB's service contextet. This fixes a problem with
        examples/Simple/time-date which uses both -ORBSvcConf and
        -ORBSvcConfDirective

Fri Feb 29 02:34:39 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.h:
        * tao/ORB.cpp:

        Factored out the initialization of the global gestalt and the
        determination of the context, given an ORB id.

        * tao/ORBInitializer_Registry.cpp:

        Removing the misplaced call to TAO::ORB::init_orb_globals(). Now
        that the latter has non-trivial functionality, calling it from an
        ORB initializer is really wrong.  The rest of the prolog code in
        register_orb_initializer() is also suspect, but I can't recall the
        specific use case that must have required what is effectively a
        duplicate of TAO::ORB::open_global_services()

        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:

        Replacing the "naked" ACE_Service_Gestalt* with the "smart"
        equivivalent.

        * tao/ORB_Core.cpp:
        * tao/TAO_Internal.h:
        * tao/TAO_Internal.cpp:

        Factored out the opening of global  service context .

Tue Feb 19 19:12:39 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/tests/Bug_3216_Regression/run_test.pl:

        Fixed to use $ACE_ROOT instead of '../..', to search for PerlACE.

Tue Feb 19 02:39:24 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.cpp:

        Fixed a typo that caused "local" and "global" values for
        -ORBGestalt

Mon Jan  7 21:19:38 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * .:
        * COPYING:
        * ChangeLog:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/ssliop_params_dup.mpb:
        * performance-tests/Cubit/TAO/MT_Cubit/client.h:
        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.h:
        * tao/DynamicInterface/DII_Arguments_Converter_Impl.h:
        * tao/DynamicInterface/DII_Arguments_Converter_Impl.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/DynamicInterface/Unknown_User_Exception.h:
        * tao/DynamicInterface/Unknown_User_Exception.cpp:
        * tao/Dynamic_Adapter.h:
        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:
        * tao/Messaging/AMI_Arguments_Converter_Impl.h:
        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
        * tao/Messaging/Messaging_ORBInitializer.cpp:
        * tao/ORB_Core.cpp:
        * tao/PortableServer/Collocated_Arguments_Converter.h:
        * tests/Abstract_Interface/client.cpp:
        * tests/Abstract_Interface/run_test.pl:
        * tests/Abstract_Interface/server.cpp:
        * tests/Abstract_Interface/test.idl:
        * tests/Abstract_Interface/test_i.h:
        * tests/Abstract_Interface/test_i.cpp:
        * tests/Bug_2234_Regression/client.cpp:
        * tests/Bug_3108_Regression/client.cpp:
        * tests/DII_AMI_Forward/DII_ReplyHandler.cpp:
        * tests/Multiple/run_test.pl:
        * utils/catior/catior.cpp:

        Merged revisions 80354, 80359-80363, 80368-80371, 80376-80377,
        80379-80380, 80382, 80384 via svnmerge from
        https://svn.dre.vanderbilt.edu/DOC/Middleware/trunk/TAO

Fri Dec 28 22:47:55 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:
        * tao/ORB_Core.cpp:
        * tao/TAO_Internal.cpp:

        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:

        Changed the Service Config interfaces back to using plain pointers
        instead of auto pointers for passing the Service Gestalt instances
        in and out. The lifecycle of SG's is determined by the lifecycle
        of SC instance. Anyone else willing to keep a reference should use
        the Intrusive_Auto_Ptr template to capitalize on and participate
        in the reference counting of SG's

Sun Dec 16 21:36:32 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * ChangeLog.iliyan-gestalt:

        Added a private changelog.

        * tao/ORB.cpp:

        Adding support for 'GLOBAL' value of the -ORBGestalt option which
        will force any ORB in the same process to use the same service
        configuration context (gestalt).

        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:
        * tao/ORB_Core.cpp:
        * tao/TAO_Internal.h:
        * tao/TAO_Internal.cpp:

        Updating for the interface change due to the replacement of
        Service Gestalt with a (intrusive) reference counted instances.

        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:

        Updated for the changed interfaces.
