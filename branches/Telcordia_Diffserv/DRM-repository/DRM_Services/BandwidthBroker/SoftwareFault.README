$Id$
README: Software Fault Testing Using BBGUI
==========================================

(1) Setup an emulab experiment such as bb-largenet-2 with atleast two pools so we can have BandwidthBroker-FlowProvisioner pairs in each pool, one as the primary and the other as the backup.

(2) MySQL cluster must be setup for replication: 
On BB nodes:(done automatically at startup)
sudo bash
/proj/arms/etc/bb/initbb1.sh
/proj/arms/etc/bb/initbb1.sh
On DB nodes:(done automatically at startup)
sudo bash
/proj/arms/etc/bb/startdb.sh
/proj/arms/etc/bb/startdb.sh

On DB node, use:
>ndb_mgm -e show 
to see the various connections. 

(3) Run the BBGUI

The settings required for SoftwareFault testing of BB include:
$DEPLOY/cfg/BandwidthBroker/bbconfig.db1.prop (this gets copied to bbconfig.prop):
FlowGarbageCollectionTimeout=<value in milliseconds, this garbage collects flows that are maintained in the DB with "deleted" status for providing fault tolerance during delete requests>
failAfterX=<no of invocations after which the failure should be simulated)
failWhen=<type of failure: 1,2,3,4 during different stages of "add" flow request and 5 for "del" flow request>
Note: for delete flow requests, the flow must be added for it to be deleted. If you are using add and del commands together, then do not execute them concurrently.

Default, i.e no failure in BB: both the above fail parameters must be 0.

The settings required for SoftwareFault testing of FP during provisioning of Linux routers are provided as parameters to the command-line:
w=1 (failWhen=1 during provisioning of Linux routers)
a=<number of invocations of FP after which it will fail>

Default, i.e no failure in FP: both the above parameters must be 0.

Check appropriate settings in TestBB.set and "source setc" in the terminal you will be starting the GUI) and start the components: DB, NameService, FlowProvisioner (FP) primary, BandwidthBroker (BB) primary, FP backup, BB backup.

(4) Testing Software faults:
Now use the Tests panel in the BBGUI and start the BulkAdd Test. This will invoke the $DEPLOY/bin/bigtest-ft-adddel.sh on pool2bb node, so make sure the script has the right commands you desire.

You will notice how the primary performs some of the requests and then there is a failure (if configured to be so)and the secondary takes over.

Note: The primary DB must be restarted to re-run this experiment.

-- Kirthika Parmeswaran
