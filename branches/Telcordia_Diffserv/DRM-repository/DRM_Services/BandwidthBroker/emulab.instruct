
Instructions for using BB in Enulab in database mode.

   Please contact Shrirang Gadgil (sgadgil@research.telcordia.com) if
   you have any trouble getting it work.

------------------------------------------------------------------------


Create an experiment containing one PC. This is the simplest
possible example. You could certainly try more complex cases.

   Click Begin an experiment

The following is a sample .NS file that can used for sample 
experiment.
----------- cut begin --------------------
#generated by Netbuild 1.03
set ns [new Simulator]
source tb_compat.tcl

set bbserver [$ns node]
tb-set-node-os $bbserver RH8_bb_0707






$ns rtproto Static
$ns run
#netbuild-generated ns file ends.
----------- cut end --------------------

Give the name (bb-sample is chose in this case) and
submit the experiment.

After the experiment comes up,

The node will be accessible as bbserver.bb-sample.arms.emulab.net

The node has a user mysql with password darpa2004, for mysql database.

The /escher directory is accessible by all the users in arms group.
It contains one of the latest snapshots of Bandwidth broker code.


If you are using bash shell, your .profile or .bashrc should contain
the following environment variables statements.

export JAVA_HOME=/usr/java/j2sdk1.4.2_04

export PATH=/usr/testbed/bin:$JAVA_HOME/bin:$ANT_HOME/bin:$PATH
export SRC=/escher/DRM-repository/DRM_Services/BandwidthBroker/src


To start the mysql server use the following commands

[sgadgil@bbserver ~]$ cd /usr/local/mysql
[sgadgil@bbserver mysql]$
[sgadgil@bbserver mysql]$ sudo bin/safe_mysqld &
[1] 1321
[sgadgil@bbserver mysql]$ Starting mysqld daemon with databases from /usr/local/
mysql/data

[sgadgil@bbserver mysql]$

Initialize the mysql database with the following commands
When prompted for password enter arms

[sgadgil@bbserver mysql]$ bash
bash-2.05b$ . ~/.profile
bash-2.05b$

bash-2.05b$ bin/mysql -u arms -p < $SRC/db/arms-initdb.sql
Enter password:
bash-2.05b$ bin/mysql -u arms -p < $SRC/db/data.sql
Enter password:
bash-2.05b$
bash-2.05b$

You can check the database using the following commands

bash-2.05b$
bash-2.05b$ bin/mysql -u arms -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 3 to server version: 4.0.18-standard

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> use ARMSBB;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> show tables;
+------------------+
| Tables_in_ARMSBB |
+------------------+
| BWPerClass       |
| FlowRecord       |
| HostSubnet       |
| L2Hops           |
| L2Interface      |
| L2Path           |
| L3Hops           |
| L3Interface      |
| L3Path           |
| PTP              |
| Router           |
| ServiceClass     |
| Switch           |
+------------------+
13 rows in set (0.00 sec)

mysql> exit
bash-2.05b$

Now go to the bin directory to set the classpath.

bash-2.05b$ cd $SRC/../bin
bash-2.05b$
bash-2.05b$ . ./setup-classpath.sh
bash-2.05b$

Initialize environment variables for bbserver

bash-2.05b$ . ./bbinit.sh
bash-2.05b$

Start the nameserver
bash-2.05b$
bash-2.05b$ . ./nsstart.sh
bash-2.05b$ tnameserv -ORBInitialPort=5001
Initial Naming Context:
IOR:000000000000002b49444c3a6f6d672e6f72672f436f734e616d696e672f4e616d696e67436f
6e746578744578743a312e300000000000010000000000000084000102000000000f3135352e3130
312e3133322e383600001389000000000035afabcb0000000020cd7c7d0c00000001000000000000
00010000000d544e616d65536572766963650000000000000004000000000a000000000000010000
0001000000200000000000010001000000020501000100010020000101090000000100010100
TransientNameServer: setting port for initial object references to: 5001
Ready.

[1]-  Done                    echo tnameserv -ORBInitialPort=$ONS_PORT
bash-2.05b$
bash-2.05b$

Check the nameserver

bash-2.05b$ ps
  PID TTY          TIME CMD
 1016 pts/0    00:00:00 tcsh
 1351 pts/0    00:00:00 bash
 1396 pts/0    00:00:00 tnameserv
 1416 pts/0    00:00:00 ps
bash-2.05b$


Go to the src directory and Start the bbserver
bash-2.05b$
bash-2.05b$
bash-2.05b$ cd ../src
bash-2.05b$ . ../bin/bbstart.sh
bash-2.05b$ Connected to arms@localhost
BBServer is ready
IOR:000000000000003d49444c3a6d696c2f64617270612f61726d732f6d6c726d2f42616e647769
64746842726f6b65722f41646d697373696f6e436f6e74726f6c3a312e3000000000000000010000
000000000070000102000000000f3135352e3130312e3133322e38360000801a000000000021afab
cb0000000020cd7e4a7300000001000000000000000000000004000000000a000000000000010000
0001000000200000000000010001000000020501000100010020000101090000000100010100

bash-2.05b$
bash-2.05b$
bash-2.05b$ ps
  PID TTY          TIME CMD
 1016 pts/0    00:00:00 tcsh
 1351 pts/0    00:00:00 bash
 1396 pts/0    00:00:00 tnameserv
 1447 pts/0    00:00:01 java
 1472 pts/0    00:00:00 ps
bash-2.05b$
bash-2.05b$


Test the server with bbtest 

bash-2.05b$
bash-2.05b$
bash-2.05b$ . ../bin/bbtest.sh add 1000
Resolved NameService
Searching 192.168.83.100
in 192.168.82.0/255.255.255.0
in 192.168.81.0/255.255.255.0
in 192.168.83.0/255.255.255.0
Searching 192.168.81.100
in 192.168.82.0/255.255.255.0
in 192.168.81.0/255.255.255.0
 Client flow request for flowID:1 result= flow request admitted
bash-2.05b$
bash-2.05b$

Check the flow record in the database (password is arms)

bash-2.05b$
bash-2.05b$
bash-2.05b$ cd /usr/local/mysql
bash-2.05b$ bin/mysql -u arms -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 5 to server version: 4.0.18-standard

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> use ARMSBB;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> select * from FlowRecord;
+----+----------+-------------+----------------+-----------------+---------+----
---------+----------------+-----------------+----------+--------------+---------
-+--------------+-------------+-------------+------+------------+---------------
+----------------+
| id | status   | purgeStatus | srcIP          | srcMask         | srcPort | src
PortHigh | destIP         | destMask        | destPort | destPortHigh | protocol
 | bandwidthMin | extraBudget | bwAllocated | acl  | svcClassID | inInterfaceID
| outInterfaceID |
+----+----------+-------------+----------------+-----------------+---------+----
---------+----------------+-----------------+----------+--------------+---------
-+--------------+-------------+-------------+------+------------+---------------
+----------------+
|  1 | commited |           0 | 192.168.83.100 | 255.255.255.255 | 20      | 20
         | 192.168.81.100 | 255.255.255.255 | -1       | -1           | tcp
 |         1000 |          10 |        1000 |    0 |          2 |             6
|              4 |
+----+----------+-------------+----------------+-----------------+---------+----
---------+----------------+-----------------+----------+--------------+---------
-+--------------+-------------+-------------+------+------------+---------------
+----------------+
1 row in set (0.00 sec)

mysql> exit
Bye
bash-2.05b$

Test deletion of the flow.

bash-2.05b$
bash-2.05b$
bash-2.05b$ cd $SRC
bash-2.05b$
bash-2.05b$ . ../bin/bbtest.sh del 1
Resolved NameService
 Client flow delete request for flowID:1 result= flow deleted
bash-2.05b$
