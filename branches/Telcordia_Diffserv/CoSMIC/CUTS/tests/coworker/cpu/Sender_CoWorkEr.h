// -*- C++ -*-

// This header file was generated by
// $Id$

#ifndef _CUTS_SENDER_COWORKER_H_
#define _CUTS_SENDER_COWORKER_H_

#include /**/ "ace/pre.h"

#include "cuts/CUTS_exec_export.h"
#include "Sender_svnt.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
#pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/LocalObject.h"
#include "cuts/config.h"

#include "cuts/CCM_CoWorkEr_T.h"
#include "cuts/Trigger_T.h"
#include "cuts/CCM_Event_Producer_T.h"
#include "cuts/EventHandler_T.h"
#include "cuts/PortAgent.h"
#include "ace/Log_Msg.h"

#include "cuts/CPUWorker.h"

namespace Example
{
  namespace CIDL_Sender_Impl 
  {
    class CUTS_EXEC_Export Sender_CoWorkEr :
    	public CUTS_CCM_CoWorkEr_T <Sender_Exec, Sender_Context>,
    	public virtual TAO_Local_RefCounted_Object 
    {
      public:
      /// Type definition for this CoWorkEr.
      typedef CUTS_CCM_CoWorkEr_T <
      	Sender_Exec, Sender_Context> CoWorkEr_Type;

      // constructor
      Sender_CoWorkEr (void);

      // destructor
      virtual ~Sender_CoWorkEr (void);


      // event sink: input
      virtual void push_input (
        ::Dummy_Event * ev
        ACE_ENV_ARG_DECL_WITH_DEFAULTS)
      	ACE_THROW_SPEC ((::CORBA::SystemException));

      void push_input_event_handler (CUTS_Activation_Record * record);
      // environment: set_session_context
      virtual void set_session_context (
        ::Components::SessionContext_ptr ctx
        ACE_ENV_ARG_DECL_WITH_DEFAULTS)
      	ACE_THROW_SPEC ((::CORBA::SystemException,
                        ::Components::CCMException));

      // environment: ciao_preactivate
      virtual void ciao_preactivate (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      	ACE_THROW_SPEC ((::CORBA::SystemException,
                        ::Components::CCMException));

      // environment: ccm_activate
      virtual void ccm_activate (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      	ACE_THROW_SPEC ((::CORBA::SystemException,
                        ::Components::CCMException));

      // environment: ciao_postactivate
      virtual void ciao_postactivate (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      	ACE_THROW_SPEC ((::CORBA::SystemException,
                        ::Components::CCMException));

      // environment: ccm_passivate
      virtual void ccm_passivate (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      	ACE_THROW_SPEC ((::CORBA::SystemException,
                        ::Components::CCMException));

      // environment: ccm_remove
      virtual void ccm_remove (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      	ACE_THROW_SPEC ((::CORBA::SystemException,
                        ::Components::CCMException));

      private:
      CUTS_Port_Agent push_input_port_agent_;
      CUTS_CPU_Worker cpu_;

      typedef CUTS_CCM_Event_Producer_T <
      	Sender_Context> Event_Producer;

      Event_Producer event_producer_;

      // Type definition for event handlers.
      typedef CUTS_Event_Handler_T <
      	Sender_CoWorkEr> Event_Handler_Type;

      Event_Handler_Type push_input_event_handler_;

      // Port agent for managing background workloads.
      CUTS_Port_Agent background_workload_;
    };

    class CUTS_EXEC_Export Sender_Factory_CoWorkEr_Factory :
      virtual public SenderHome_Exec,
    	virtual public TAO_Local_RefCounted_Object 
    {
      public:
      Sender_Factory_CoWorkEr_Factory (void);
      virtual ~Sender_Factory_CoWorkEr_Factory (void);

      virtual ::Components::EnterpriseComponent_ptr create (ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      ACE_THROW_SPEC ((::CORBA::SystemException, ::Components::CCMException));
    };

    extern "C" CUTS_EXEC_Export 
    ::Components::HomeExecutorBase_ptr
    create_Example_Sender_Factory_CoWorkEr_Factory_Impl (void);
  }
}

#endif  // !defined _CUTS_SENDER_COWORKER_H_

// Code generation completed at 
