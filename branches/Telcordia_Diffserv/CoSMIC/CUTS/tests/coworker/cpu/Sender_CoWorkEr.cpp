// This source file was generated by
// $Id$

#include "Sender_CoWorkEr.h"
#include "cuts/ActivationRecord.h"
namespace Example
{
  namespace CIDL_Sender_Impl
  {
    Sender_CoWorkEr::Sender_CoWorkEr (void)
    : push_input_port_agent_ ("id-0067-00000053", "input"),
      push_input_event_handler_ (this)
    {
      // Register and bind the event handlers and port agents
      this->benchmark_agent_->register_port_agent (&this->push_input_port_agent_);
      this->push_input_event_handler_.bind (
          &this->push_input_port_agent_,
          &Sender_CoWorkEr::push_input_event_handler);
    }

    Sender_CoWorkEr::~Sender_CoWorkEr (void)
    {
      this->benchmark_agent_->unregister_port_agent (&this->push_input_port_agent_);
    }

    void Sender_CoWorkEr::push_input (
      ::Dummy_Event * ev
      ACE_ENV_ARG_DECL_WITH_DEFAULTS)
      ACE_THROW_SPEC ((::CORBA::SystemException))
    {
      this->push_input_event_handler_.handle_event (
        ev->sender (),
        ev->dispatch_time ());
    }

    void Sender_CoWorkEr::push_input_event_handler (CUTS_Activation_Record * record)
    {
      record->perform_action_no_logging (
          1, CUTS_CPU_Worker::Run_Processor (this->cpu_));

      record->record_exit_point (
          "output",
          Event_Producer::Push_Data_Event <
            OBV_Dummy_Event, Dummy_Event>
            (this->event_producer_, 4,
               &Event_Producer::Context::push_output));
    }

    void Sender_CoWorkEr::set_session_context (
      ::Components::SessionContext_ptr ctx
      ACE_ENV_ARG_DECL_WITH_DEFAULTS)
      ACE_THROW_SPEC ((::CORBA::SystemException,
                      ::Components::CCMException))
    {
      CoWorkEr_Type::set_session_context (ctx);
      CIAO_REGISTER_OBV_FACTORY (Dummy_Event_init, Dummy_Event);

      // Set the context for the <event_producer_>.
      this->event_producer_.context (this->context_);
    }

    void Sender_CoWorkEr::ciao_preactivate (
      ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      ACE_THROW_SPEC ((::CORBA::SystemException,
                      ::Components::CCMException))
    {
      ACE_DEBUG ((LM_TRACE,
                  "[%M] -%T - entered Sender_CoWorkEr::ciao_preactivate\n"));
      CoWorkEr_Type::ciao_preactivate ();
      this->event_producer_.activate (this->registration_id_);

      // Setting the parents of the worker(s).
      this->cpu_.parent (this->registration_id_);

      // Activate the port agent(s).
      this->push_input_port_agent_.activate ();

      // Activate the event handler(s).
      this->push_input_event_handler_.activate ();
      ACE_DEBUG ((LM_TRACE,
                  "[%M] -%T - exiting Sender_CoWorkEr::ciao_preactivate\n"));
    }

    void Sender_CoWorkEr::ccm_activate (
      ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      ACE_THROW_SPEC ((::CORBA::SystemException,
                      ::Components::CCMException))
    {
      // Create a new activation record.
      CUTS_Activation_Record * record =
        this->background_workload_.create_activation_record ();

      record->record_exit_point (
          "output",
          Event_Producer::Push_Data_Event <
            OBV_Dummy_Event, Dummy_Event>
            (this->event_producer_, 4,
               &Event_Producer::Context::push_output));

      // Close the activation record.
      this->background_workload_.close_activation_record (record);
    }

    void Sender_CoWorkEr::ciao_postactivate (
      ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      ACE_THROW_SPEC ((::CORBA::SystemException,
                      ::Components::CCMException))
    {
      ACE_DEBUG ((LM_TRACE,
                  "[%M] -%T - entered Sender_CoWorkEr::ciao_postactivate\n"));

      ACE_DEBUG ((LM_TRACE,
                  "[%M] -%T - exiting Sender_CoWorkEr::ciao_postactivate\n"));
    }

    void Sender_CoWorkEr::ccm_passivate (
      ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      ACE_THROW_SPEC ((::CORBA::SystemException,
                      ::Components::CCMException))
    {
      ACE_DEBUG ((LM_TRACE,
                  "[%M] -%T - entered Sender_CoWorkEr::ccm_passivate\n"));

      CoWorkEr_Type::ccm_passivate ();

      // Deactivate all the event producer(s)
      this->event_producer_.deactivate ();

      // Deactivate the trigger(s).

      // Deactivate the event handler(s).
      this->push_input_event_handler_.deactivate ();

      // Deactivate the port agent(s).
      this->push_input_port_agent_.deactivate ();
      ACE_DEBUG ((LM_TRACE,
                  "[%M] -%T - exiting Sender_CoWorkEr::ccm_passivate\n"));
    }

    void Sender_CoWorkEr::ccm_remove (
      ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS)
      ACE_THROW_SPEC ((::CORBA::SystemException,
                      ::Components::CCMException))
    {
      ACE_DEBUG ((LM_TRACE, "[%M] -%T - entered Sender_CoWorkEr::ccm_remove\n"));

      CoWorkEr_Type::ccm_remove ();

      ACE_DEBUG ((LM_TRACE, "[%M] -%T - exiting Sender_CoWorkEr::ccm_remove\n"));
    }

    Sender_Factory_CoWorkEr_Factory::Sender_Factory_CoWorkEr_Factory (void)
    {

    }

    Sender_Factory_CoWorkEr_Factory::~Sender_Factory_CoWorkEr_Factory (void)
    {

    }

    ::Components::EnterpriseComponent_ptr
    Sender_Factory_CoWorkEr_Factory::create (ACE_ENV_SINGLE_ARG_DECL)
    ACE_THROW_SPEC ((::CORBA::SystemException, ::Components::CCMException))
    {
      ::Components::EnterpriseComponent_ptr retval =
        ::Components::EnterpriseComponent::_nil ();

      ACE_NEW_THROW_EX (retval, Sender_CoWorkEr, CORBA::NO_MEMORY ());
      ACE_CHECK_RETURN (::Components::EnterpriseComponent::_nil ());
      return retval;
    }

    extern "C" CUTS_EXEC_Export
    ::Components::HomeExecutorBase_ptr
    create_Example_Sender_Factory_CoWorkEr_Factory_Impl (void)
    {
      ::Components::HomeExecutorBase_ptr retval =
        ::Components::HomeExecutorBase::_nil ();

      ACE_NEW_RETURN (
        retval,
        Sender_Factory_CoWorkEr_Factory,
        ::Components::HomeExecutorBase::_nil ());
      return retval;
    }
  }
}

// Code generation completed at
