/* SLICEStub.h
   Generated by gSOAP 2.7.8c from SLICE.h
   Copyright (C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef SLICEStub_H
#define SLICEStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_CORBA__CORBA_x002ecompletion_USCOREstatus
#define SOAP_TYPE_CORBA__CORBA_x002ecompletion_USCOREstatus (52)
/* CORBA:CORBA.completion_status */
enum CORBA__CORBA_x002ecompletion_USCOREstatus {CORBA__CORBA_x002ecompletion_USCOREstatus__COMPLETED_USCOREYES = 0, CORBA__CORBA_x002ecompletion_USCOREstatus__COMPLETED_USCORENO = 1, CORBA__CORBA_x002ecompletion_USCOREstatus__COMPLETED_USCOREMAYBE = 2};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/




#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (6)
/* Primitive xsd:anyType schema type: */
class SOAP_CMAC xsd__anyType
{
public:
	char *__item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 6; } /* = unique id SOAP_TYPE_xsd__anyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyType() : __item(NULL), soap(NULL) { }
	virtual ~xsd__anyType() { }
};
#endif

#ifndef SOAP_TYPE_xsd__ID_
#define SOAP_TYPE_xsd__ID_ (10)
/* Primitive xsd:ID schema type: */
class SOAP_CMAC xsd__ID_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_xsd__ID_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__ID_() : __item(NULL) { }
	virtual ~xsd__ID_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__anyURI_
#define SOAP_TYPE_xsd__anyURI_ (12)
/* Primitive xsd:anyURI schema type: */
class SOAP_CMAC xsd__anyURI_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_xsd__anyURI_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyURI_() : __item(NULL) { }
	virtual ~xsd__anyURI_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (13)
/* Primitive xsd:int schema type: */
class SOAP_CMAC xsd__int : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_xsd__int */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__int()  { }
	virtual ~xsd__int() { }
};
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (14)
/* Primitive xsd:string schema type: */
class SOAP_CMAC xsd__string : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_xsd__string */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__string() : __item(NULL) { }
	virtual ~xsd__string() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (15)
/* Primitive xsd:unsignedInt schema type: */
class SOAP_CMAC xsd__unsignedInt : public xsd__anyType
{
public:
	unsigned int __item;
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_xsd__unsignedInt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedInt()  { }
	virtual ~xsd__unsignedInt() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (17)
/* Primitive xsd:unsignedShort schema type: */
class SOAP_CMAC xsd__unsignedShort : public xsd__anyType
{
public:
	unsigned short __item;
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_xsd__unsignedShort */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedShort()  { }
	virtual ~xsd__unsignedShort() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eTime_USCOREStamp__
#define SOAP_TYPE_SLICE__CUTS_x002eTime_USCOREStamp__ (51)
/* Primitive SLICE:CUTS.Time_Stamp schema type: */
class SOAP_CMAC SLICE__CUTS_x002eTime_USCOREStamp__ : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eTime_USCOREStamp__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eTime_USCOREStamp__()  { }
	virtual ~SLICE__CUTS_x002eTime_USCOREStamp__() { }
};
#endif

#ifndef SOAP_TYPE_CORBA__CORBA_x002ecompletion_USCOREstatus_
#define SOAP_TYPE_CORBA__CORBA_x002ecompletion_USCOREstatus_ (53)
/* Primitive CORBA:CORBA.completion_status schema type: */
class SOAP_CMAC CORBA__CORBA_x002ecompletion_USCOREstatus_ : public xsd__anyType
{
public:
	enum CORBA__CORBA_x002ecompletion_USCOREstatus __item;
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_CORBA__CORBA_x002ecompletion_USCOREstatus_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CORBA__CORBA_x002ecompletion_USCOREstatus_()  { }
	virtual ~CORBA__CORBA_x002ecompletion_USCOREstatus_() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eBinding_USCOREFailed
#define SOAP_TYPE_SLICE__CUTS_x002eBinding_USCOREFailed (21)
/* Primitive SLICE:CUTS.Binding_Failed schema type: */
class SOAP_CMAC SLICE__CUTS_x002eBinding_USCOREFailed : public xsd__anyType
{
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eBinding_USCOREFailed */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eBinding_USCOREFailed()  { }
	virtual ~SLICE__CUTS_x002eBinding_USCOREFailed() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eID_USCORENot_USCOREFound
#define SOAP_TYPE_SLICE__CUTS_x002eID_USCORENot_USCOREFound (22)
/* Primitive SLICE:CUTS.ID_Not_Found schema type: */
class SOAP_CMAC SLICE__CUTS_x002eID_USCORENot_USCOREFound : public xsd__anyType
{
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eID_USCORENot_USCOREFound */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eID_USCORENot_USCOREFound()  { }
	virtual ~SLICE__CUTS_x002eID_USCORENot_USCOREFound() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eOperation_USCOREFailed
#define SOAP_TYPE_SLICE__CUTS_x002eOperation_USCOREFailed (23)
/* Primitive SLICE:CUTS.Operation_Failed schema type: */
class SOAP_CMAC SLICE__CUTS_x002eOperation_USCOREFailed : public xsd__anyType
{
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eOperation_USCOREFailed */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eOperation_USCOREFailed()  { }
	virtual ~SLICE__CUTS_x002eOperation_USCOREFailed() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eRegistration_USCOREFailed
#define SOAP_TYPE_SLICE__CUTS_x002eRegistration_USCOREFailed (24)
/* Primitive SLICE:CUTS.Registration_Failed schema type: */
class SOAP_CMAC SLICE__CUTS_x002eRegistration_USCOREFailed : public xsd__anyType
{
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eRegistration_USCOREFailed */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eRegistration_USCOREFailed()  { }
	virtual ~SLICE__CUTS_x002eRegistration_USCOREFailed() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eRegistration_USCORELimit
#define SOAP_TYPE_SLICE__CUTS_x002eRegistration_USCORELimit (25)
/* Primitive SLICE:CUTS.Registration_Limit schema type: */
class SOAP_CMAC SLICE__CUTS_x002eRegistration_USCORELimit : public xsd__anyType
{
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eRegistration_USCORELimit */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eRegistration_USCORELimit()  { }
	virtual ~SLICE__CUTS_x002eRegistration_USCORELimit() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eComponent_USCORERegistration
#define SOAP_TYPE_SLICE__CUTS_x002eComponent_USCORERegistration (26)
/* SLICE:CUTS.Component_Registration */
class SOAP_CMAC SLICE__CUTS_x002eComponent_USCORERegistration : public xsd__anyType
{
public:
	class CORBA__ObjectReference *agent;	/* required element of type CORBA:ObjectReference */
	char *name;	/* required element of type xsd:string */
	char *ipaddr;	/* required element of type xsd:string */
	char *hostname;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eComponent_USCORERegistration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eComponent_USCORERegistration() : agent(NULL), name(NULL), ipaddr(NULL), hostname(NULL) { }
	virtual ~SLICE__CUTS_x002eComponent_USCORERegistration() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002ePath_USCOREElement
#define SOAP_TYPE_SLICE__CUTS_x002ePath_USCOREElement (27)
/* SLICE:CUTS.Path_Element */
class SOAP_CMAC SLICE__CUTS_x002ePath_USCOREElement : public xsd__anyType
{
public:
	char *node;	/* required element of type xsd:string */
	char *src;	/* required element of type xsd:string */
	char *dst;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002ePath_USCOREElement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002ePath_USCOREElement() : node(NULL), src(NULL), dst(NULL) { }
	virtual ~SLICE__CUTS_x002ePath_USCOREElement() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eTime_USCOREInfo
#define SOAP_TYPE_SLICE__CUTS_x002eTime_USCOREInfo (29)
/* SLICE:CUTS.Time_Info */
class SOAP_CMAC SLICE__CUTS_x002eTime_USCOREInfo : public xsd__anyType
{
public:
	int total;	/* required element of type SLICE:CUTS.Time_Stamp */
	int max_;	/* required element of type SLICE:CUTS.Time_Stamp */
	int min_;	/* required element of type SLICE:CUTS.Time_Stamp */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eTime_USCOREInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eTime_USCOREInfo()  { }
	virtual ~SLICE__CUTS_x002eTime_USCOREInfo() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eEvent_USCORETime_USCOREInfo
#define SOAP_TYPE_SLICE__CUTS_x002eEvent_USCORETime_USCOREInfo (30)
/* SLICE:CUTS.Event_Time_Info */
class SOAP_CMAC SLICE__CUTS_x002eEvent_USCORETime_USCOREInfo : public xsd__anyType
{
public:
	SLICE__CUTS_x002eTime_USCOREInfo *time;	/* required element of type SLICE:CUTS.Time_Info */
	int max_USCOREevents;	/* required element of type xsd:int */
	int min_USCOREevents;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eEvent_USCORETime_USCOREInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eEvent_USCORETime_USCOREInfo() : time(NULL) { }
	virtual ~SLICE__CUTS_x002eEvent_USCORETime_USCOREInfo() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eTime_USCORESample
#define SOAP_TYPE_SLICE__CUTS_x002eTime_USCORESample (31)
/* SLICE:CUTS.Time_Sample */
class SOAP_CMAC SLICE__CUTS_x002eTime_USCORESample : public xsd__anyType
{
public:
	int count;	/* required element of type xsd:int */
	SLICE__CUTS_x002eTime_USCOREInfo *time;	/* required element of type SLICE:CUTS.Time_Info */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eTime_USCORESample */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eTime_USCORESample() : time(NULL) { }
	virtual ~SLICE__CUTS_x002eTime_USCORESample() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eAction_USCOREMeasurement
#define SOAP_TYPE_SLICE__CUTS_x002eAction_USCOREMeasurement (32)
/* SLICE:CUTS.Action_Measurement */
class SOAP_CMAC SLICE__CUTS_x002eAction_USCOREMeasurement : public xsd__anyType
{
public:
	int type;	/* required element of type xsd:int */
	SLICE__CUTS_x002eTime_USCORESample *time;	/* required element of type SLICE:CUTS.Time_Sample */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eAction_USCOREMeasurement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eAction_USCOREMeasurement() : time(NULL) { }
	virtual ~SLICE__CUTS_x002eAction_USCOREMeasurement() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eWorker_USCOREMeasurement
#define SOAP_TYPE_SLICE__CUTS_x002eWorker_USCOREMeasurement (34)
/* SLICE:CUTS.Worker_Measurement */
class SOAP_CMAC SLICE__CUTS_x002eWorker_USCOREMeasurement : public xsd__anyType
{
public:
	int type;	/* required element of type xsd:int */
	class CUTS_x002e_USCORESE_USCOREAction_USCOREMeasurement_USCORESeq *actions;	/* required element of type ArrayOfCUTS.Action-Measurement */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eWorker_USCOREMeasurement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eWorker_USCOREMeasurement() : actions(NULL) { }
	virtual ~SLICE__CUTS_x002eWorker_USCOREMeasurement() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eExit_USCOREPoint_USCORETime
#define SOAP_TYPE_SLICE__CUTS_x002eExit_USCOREPoint_USCORETime (36)
/* SLICE:CUTS.Exit_Point_Time */
class SOAP_CMAC SLICE__CUTS_x002eExit_USCOREPoint_USCORETime : public xsd__anyType
{
public:
	char *exit_USCOREpoint_USCORE;	/* required element of type xsd:string */
	SLICE__CUTS_x002eTime_USCORESample *time_USCOREsample_USCORE;	/* required element of type SLICE:CUTS.Time_Sample */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eExit_USCOREPoint_USCORETime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eExit_USCOREPoint_USCORETime() : exit_USCOREpoint_USCORE(NULL), time_USCOREsample_USCORE(NULL) { }
	virtual ~SLICE__CUTS_x002eExit_USCOREPoint_USCORETime() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eMapped_USCOREPort_USCOREMeasurement
#define SOAP_TYPE_SLICE__CUTS_x002eMapped_USCOREPort_USCOREMeasurement (38)
/* SLICE:CUTS.Mapped_Port_Measurement */
class SOAP_CMAC SLICE__CUTS_x002eMapped_USCOREPort_USCOREMeasurement : public xsd__anyType
{
public:
	int owner;	/* required element of type xsd:int */
	SLICE__CUTS_x002eTime_USCORESample *transit_USCOREtime;	/* required element of type SLICE:CUTS.Time_Sample */
	SLICE__CUTS_x002eTime_USCORESample *process_USCOREtime;	/* required element of type SLICE:CUTS.Time_Sample */
	class CUTS_x002e_USCORESE_USCOREExit_USCOREPoint_USCORETime_USCORESeq *exit_USCOREtimes;	/* required element of type ArrayOfCUTS.Exit-Point-Time */
	class CUTS_x002e_USCORESE_USCOREWorker_USCOREMeasurement_USCORESeq *workers;	/* required element of type ArrayOfCUTS.Worker-Measurement */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eMapped_USCOREPort_USCOREMeasurement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eMapped_USCOREPort_USCOREMeasurement() : transit_USCOREtime(NULL), process_USCOREtime(NULL), exit_USCOREtimes(NULL), workers(NULL) { }
	virtual ~SLICE__CUTS_x002eMapped_USCOREPort_USCOREMeasurement() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002ePort_USCOREMeasurement
#define SOAP_TYPE_SLICE__CUTS_x002ePort_USCOREMeasurement (40)
/* SLICE:CUTS.Port_Measurement */
class SOAP_CMAC SLICE__CUTS_x002ePort_USCOREMeasurement : public xsd__anyType
{
public:
	char *port;	/* required element of type xsd:string */
	class CUTS_x002e_USCORESE_USCOREMapped_USCOREPort_USCOREMeasurement_USCORESeq *measurements;	/* required element of type ArrayOfCUTS.Mapped-Port-Measurement */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002ePort_USCOREMeasurement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002ePort_USCOREMeasurement() : port(NULL), measurements(NULL) { }
	virtual ~SLICE__CUTS_x002ePort_USCOREMeasurement() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eBenchmark_USCOREData
#define SOAP_TYPE_SLICE__CUTS_x002eBenchmark_USCOREData (42)
/* SLICE:CUTS.Benchmark_Data */
class SOAP_CMAC SLICE__CUTS_x002eBenchmark_USCOREData : public xsd__anyType
{
public:
	int owner;	/* required element of type xsd:int */
	int timestamp;	/* required element of type SLICE:CUTS.Time_Stamp */
	class CUTS_x002e_USCORESE_USCOREPort_USCOREMeasurement_USCORESeq *ports;	/* required element of type ArrayOfCUTS.Port-Measurement */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eBenchmark_USCOREData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eBenchmark_USCOREData() : ports(NULL) { }
	virtual ~SLICE__CUTS_x002eBenchmark_USCOREData() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eCollection_USCOREStatistics
#define SOAP_TYPE_SLICE__CUTS_x002eCollection_USCOREStatistics (43)
/* SLICE:CUTS.Collection_Statistics */
class SOAP_CMAC SLICE__CUTS_x002eCollection_USCOREStatistics : public xsd__anyType
{
public:
	int start_USCOREtime;	/* required element of type xsd:int */
	int finish_USCOREtime;	/* required element of type xsd:int */
	unsigned int component_USCOREcount;	/* required element of type xsd:unsignedInt */
	char *id;	/* optional attribute */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_SLICE__CUTS_x002eCollection_USCOREStatistics */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         SLICE__CUTS_x002eCollection_USCOREStatistics() : id(NULL) { }
	virtual ~SLICE__CUTS_x002eCollection_USCOREStatistics() { }
};
#endif

#ifndef SOAP_TYPE_CORBA__ObjectReference
#define SOAP_TYPE_CORBA__ObjectReference (44)
/* CORBA:ObjectReference */
class SOAP_CMAC CORBA__ObjectReference : public xsd__anyType
{
public:
	int __sizeurl;	/* sequence of elements <url> */
	char **url;	/* required element of type xsd:anyURI */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_CORBA__ObjectReference */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CORBA__ObjectReference() : url(NULL) { }
	virtual ~CORBA__ObjectReference() { }
};
#endif

#ifndef SOAP_TYPE_CORBA__CORBA_x002eTypeCode
#define SOAP_TYPE_CORBA__CORBA_x002eTypeCode (45)
/* CORBA:CORBA.TypeCode */
class SOAP_CMAC CORBA__CORBA_x002eTypeCode : public xsd__anyType
{
public:
	char *definition;	/* required element of type xsd:anyURI */
	char *typename_;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_CORBA__CORBA_x002eTypeCode */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CORBA__CORBA_x002eTypeCode() : definition(NULL), typename_(NULL) { }
	virtual ~CORBA__CORBA_x002eTypeCode() { }
};
#endif

#ifndef SOAP_TYPE_CORBA__CORBA_x002eAny
#define SOAP_TYPE_CORBA__CORBA_x002eAny (46)
/* CORBA:CORBA.Any */
class SOAP_CMAC CORBA__CORBA_x002eAny : public xsd__anyType
{
public:
	CORBA__CORBA_x002eTypeCode *type;	/* required element of type CORBA:CORBA.TypeCode */
	xsd__anyType *value;	/* required element of type xsd:anyType */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_CORBA__CORBA_x002eAny */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CORBA__CORBA_x002eAny() : type(NULL), value(NULL) { }
	virtual ~CORBA__CORBA_x002eAny() { }
};
#endif

#ifndef SOAP_TYPE_CORBA__CORBA_x002eSystemException
#define SOAP_TYPE_CORBA__CORBA_x002eSystemException (47)
/* CORBA:CORBA.SystemException */
class SOAP_CMAC CORBA__CORBA_x002eSystemException : public xsd__anyType
{
public:
	unsigned int minor;	/* required element of type xsd:unsignedInt */
	enum CORBA__CORBA_x002ecompletion_USCOREstatus completion_USCOREstatus;	/* required element of type CORBA:CORBA.completion_status */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_CORBA__CORBA_x002eSystemException */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CORBA__CORBA_x002eSystemException()  { }
	virtual ~CORBA__CORBA_x002eSystemException() { }
};
#endif

#ifndef SOAP_TYPE__CORBA__SourceIDL
#define SOAP_TYPE__CORBA__SourceIDL (48)
/* CORBA:SourceIDL */
class SOAP_CMAC _CORBA__SourceIDL
{
public:
	char *source;	/* required element of type xsd:string */
	char *version;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE__CORBA__SourceIDL */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _CORBA__SourceIDL() : source(NULL), version(NULL), soap(NULL) { }
	virtual ~_CORBA__SourceIDL() { }
};
#endif

#ifndef SOAP_TYPE__CORBA__SourceRepositoryID
#define SOAP_TYPE__CORBA__SourceRepositoryID (49)
/* CORBA:SourceRepositoryID */
class SOAP_CMAC _CORBA__SourceRepositoryID
{
public:
	char *repositoryID;	/* required element of type xsd:string */
	char *version;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE__CORBA__SourceRepositoryID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _CORBA__SourceRepositoryID() : repositoryID(NULL), version(NULL), soap(NULL) { }
	virtual ~_CORBA__SourceRepositoryID() { }
};
#endif

#ifndef SOAP_TYPE_CUTS_x002e_USCORESE_USCOREPath_USCORESequence
#define SOAP_TYPE_CUTS_x002e_USCORESE_USCOREPath_USCORESequence (28)
/* SOAP encoded array of SLICE:CUTS.Path_Element schema type: */
class SOAP_CMAC CUTS_x002e_USCORESE_USCOREPath_USCORESequence : public xsd__anyType
{
public:
	SLICE__CUTS_x002ePath_USCOREElement **__ptritem;
	int __size;
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_CUTS_x002e_USCORESE_USCOREPath_USCORESequence */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CUTS_x002e_USCORESE_USCOREPath_USCORESequence() : __ptritem(NULL) { }
	virtual ~CUTS_x002e_USCORESE_USCOREPath_USCORESequence() { }
};
#endif

#ifndef SOAP_TYPE_CUTS_x002e_USCORESE_USCOREAction_USCOREMeasurement_USCORESeq
#define SOAP_TYPE_CUTS_x002e_USCORESE_USCOREAction_USCOREMeasurement_USCORESeq (33)
/* SOAP encoded array of SLICE:CUTS.Action_Measurement schema type: */
class SOAP_CMAC CUTS_x002e_USCORESE_USCOREAction_USCOREMeasurement_USCORESeq : public xsd__anyType
{
public:
	SLICE__CUTS_x002eAction_USCOREMeasurement **__ptritem;
	int __size;
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_CUTS_x002e_USCORESE_USCOREAction_USCOREMeasurement_USCORESeq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CUTS_x002e_USCORESE_USCOREAction_USCOREMeasurement_USCORESeq() : __ptritem(NULL) { }
	virtual ~CUTS_x002e_USCORESE_USCOREAction_USCOREMeasurement_USCORESeq() { }
};
#endif

#ifndef SOAP_TYPE_CUTS_x002e_USCORESE_USCOREWorker_USCOREMeasurement_USCORESeq
#define SOAP_TYPE_CUTS_x002e_USCORESE_USCOREWorker_USCOREMeasurement_USCORESeq (35)
/* SOAP encoded array of SLICE:CUTS.Worker_Measurement schema type: */
class SOAP_CMAC CUTS_x002e_USCORESE_USCOREWorker_USCOREMeasurement_USCORESeq : public xsd__anyType
{
public:
	SLICE__CUTS_x002eWorker_USCOREMeasurement **__ptritem;
	int __size;
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_CUTS_x002e_USCORESE_USCOREWorker_USCOREMeasurement_USCORESeq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CUTS_x002e_USCORESE_USCOREWorker_USCOREMeasurement_USCORESeq() : __ptritem(NULL) { }
	virtual ~CUTS_x002e_USCORESE_USCOREWorker_USCOREMeasurement_USCORESeq() { }
};
#endif

#ifndef SOAP_TYPE_CUTS_x002e_USCORESE_USCOREExit_USCOREPoint_USCORETime_USCORESeq
#define SOAP_TYPE_CUTS_x002e_USCORESE_USCOREExit_USCOREPoint_USCORETime_USCORESeq (37)
/* SOAP encoded array of SLICE:CUTS.Exit_Point_Time schema type: */
class SOAP_CMAC CUTS_x002e_USCORESE_USCOREExit_USCOREPoint_USCORETime_USCORESeq : public xsd__anyType
{
public:
	SLICE__CUTS_x002eExit_USCOREPoint_USCORETime **__ptritem;
	int __size;
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_CUTS_x002e_USCORESE_USCOREExit_USCOREPoint_USCORETime_USCORESeq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CUTS_x002e_USCORESE_USCOREExit_USCOREPoint_USCORETime_USCORESeq() : __ptritem(NULL) { }
	virtual ~CUTS_x002e_USCORESE_USCOREExit_USCOREPoint_USCORETime_USCORESeq() { }
};
#endif

#ifndef SOAP_TYPE_CUTS_x002e_USCORESE_USCOREMapped_USCOREPort_USCOREMeasurement_USCORESeq
#define SOAP_TYPE_CUTS_x002e_USCORESE_USCOREMapped_USCOREPort_USCOREMeasurement_USCORESeq (39)
/* SOAP encoded array of SLICE:CUTS.Mapped_Port_Measurement schema type: */
class SOAP_CMAC CUTS_x002e_USCORESE_USCOREMapped_USCOREPort_USCOREMeasurement_USCORESeq : public xsd__anyType
{
public:
	SLICE__CUTS_x002eMapped_USCOREPort_USCOREMeasurement **__ptritem;
	int __size;
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_CUTS_x002e_USCORESE_USCOREMapped_USCOREPort_USCOREMeasurement_USCORESeq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CUTS_x002e_USCORESE_USCOREMapped_USCOREPort_USCOREMeasurement_USCORESeq() : __ptritem(NULL) { }
	virtual ~CUTS_x002e_USCORESE_USCOREMapped_USCOREPort_USCOREMeasurement_USCORESeq() { }
};
#endif

#ifndef SOAP_TYPE_CUTS_x002e_USCORESE_USCOREPort_USCOREMeasurement_USCORESeq
#define SOAP_TYPE_CUTS_x002e_USCORESE_USCOREPort_USCOREMeasurement_USCORESeq (41)
/* SOAP encoded array of SLICE:CUTS.Port_Measurement schema type: */
class SOAP_CMAC CUTS_x002e_USCORESE_USCOREPort_USCOREMeasurement_USCORESeq : public xsd__anyType
{
public:
	SLICE__CUTS_x002ePort_USCOREMeasurement **__ptritem;
	int __size;
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_CUTS_x002e_USCORESE_USCOREPort_USCOREMeasurement_USCORESeq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         CUTS_x002e_USCORESE_USCOREPort_USCOREMeasurement_USCORESeq() : __ptritem(NULL) { }
	virtual ~CUTS_x002e_USCORESE_USCOREPort_USCOREMeasurement_USCORESeq() { }
};
#endif

#ifndef SOAP_TYPE__CORBA__CORBA_x002eSystemExceptionMessage
#define SOAP_TYPE__CORBA__CORBA_x002eSystemExceptionMessage (77)
/* CORBA:CORBA.SystemExceptionMessage */
class SOAP_CMAC _CORBA__CORBA_x002eSystemExceptionMessage
{
public:
	CORBA__CORBA_x002eSystemException *_USCOREreturn;	/* optional element of type CORBA:CORBA.SystemException */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE__CORBA__CORBA_x002eSystemExceptionMessage */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _CORBA__CORBA_x002eSystemExceptionMessage() : _USCOREreturn(NULL), soap(NULL) { }
	virtual ~_CORBA__CORBA_x002eSystemExceptionMessage() { }
};
#endif

#ifndef SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eBinding_USCOREFailed
#define SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eBinding_USCOREFailed (79)
/* CORBA:_exception.CUTS.Binding_Failed */
class SOAP_CMAC _CORBA___USCOREexception_x002eCUTS_x002eBinding_USCOREFailed
{
public:
	SLICE__CUTS_x002eBinding_USCOREFailed *exception;	/* optional element of type SLICE:CUTS.Binding_Failed */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eBinding_USCOREFailed */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _CORBA___USCOREexception_x002eCUTS_x002eBinding_USCOREFailed() : exception(NULL), soap(NULL) { }
	virtual ~_CORBA___USCOREexception_x002eCUTS_x002eBinding_USCOREFailed() { }
};
#endif

#ifndef SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eID_USCORENot_USCOREFound
#define SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eID_USCORENot_USCOREFound (81)
/* CORBA:_exception.CUTS.ID_Not_Found */
class SOAP_CMAC _CORBA___USCOREexception_x002eCUTS_x002eID_USCORENot_USCOREFound
{
public:
	SLICE__CUTS_x002eID_USCORENot_USCOREFound *exception;	/* optional element of type SLICE:CUTS.ID_Not_Found */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eID_USCORENot_USCOREFound */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _CORBA___USCOREexception_x002eCUTS_x002eID_USCORENot_USCOREFound() : exception(NULL), soap(NULL) { }
	virtual ~_CORBA___USCOREexception_x002eCUTS_x002eID_USCORENot_USCOREFound() { }
};
#endif

#ifndef SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eOperation_USCOREFailed
#define SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eOperation_USCOREFailed (83)
/* CORBA:_exception.CUTS.Operation_Failed */
class SOAP_CMAC _CORBA___USCOREexception_x002eCUTS_x002eOperation_USCOREFailed
{
public:
	SLICE__CUTS_x002eOperation_USCOREFailed *exception;	/* optional element of type SLICE:CUTS.Operation_Failed */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE__CORBA___USCOREexception_x002eCUTS_x002eOperation_USCOREFailed */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _CORBA___USCOREexception_x002eCUTS_x002eOperation_USCOREFailed() : exception(NULL), soap(NULL) { }
	virtual ~_CORBA___USCOREexception_x002eCUTS_x002eOperation_USCOREFailed() { }
};
#endif

#ifndef SOAP_TYPE_SLICE__collect_USCOREperformance_USCOREdataResponse
#define SOAP_TYPE_SLICE__collect_USCOREperformance_USCOREdataResponse (85)
/* SLICE:collect_performance_dataResponse */
struct SLICE__collect_USCOREperformance_USCOREdataResponse
{
};
#endif

#ifndef SOAP_TYPE_SLICE__collect_USCOREperformance_USCOREdata
#define SOAP_TYPE_SLICE__collect_USCOREperformance_USCOREdata (88)
/* SLICE:collect_performance_data */
struct SLICE__collect_USCOREperformance_USCOREdata
{
};
#endif

#ifndef SOAP_TYPE_SLICE__execution_USCOREtimeResponse
#define SOAP_TYPE_SLICE__execution_USCOREtimeResponse (89)
/* SLICE:execution_timeResponse */
struct SLICE__execution_USCOREtimeResponse
{
public:
	SLICE__CUTS_x002eEvent_USCORETime_USCOREInfo *_USCOREreturn;	/* RPC return element */	/* optional element of type SLICE:CUTS.Event_Time_Info */
};
#endif

#ifndef SOAP_TYPE_SLICE__execution_USCOREtime
#define SOAP_TYPE_SLICE__execution_USCOREtime (93)
/* SLICE:execution_time */
struct SLICE__execution_USCOREtime
{
public:
	int path_USCOREid;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_SLICE__unbind_USCOREto_USCOREpathResponse
#define SOAP_TYPE_SLICE__unbind_USCOREto_USCOREpathResponse (94)
/* SLICE:unbind_to_pathResponse */
struct SLICE__unbind_USCOREto_USCOREpathResponse
{
};
#endif

#ifndef SOAP_TYPE_SLICE__unbind_USCOREto_USCOREpath
#define SOAP_TYPE_SLICE__unbind_USCOREto_USCOREpath (97)
/* SLICE:unbind_to_path */
struct SLICE__unbind_USCOREto_USCOREpath
{
public:
	int path_USCOREid;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_SLICE__bind_USCOREto_USCOREpathResponse
#define SOAP_TYPE_SLICE__bind_USCOREto_USCOREpathResponse (101)
/* SLICE:bind_to_pathResponse */
struct SLICE__bind_USCOREto_USCOREpathResponse
{
public:
	int _USCOREreturn;	/* RPC return element */	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_SLICE__bind_USCOREto_USCOREpath
#define SOAP_TYPE_SLICE__bind_USCOREto_USCOREpath (102)
/* SLICE:bind_to_path */
struct SLICE__bind_USCOREto_USCOREpath
{
public:
	CUTS_x002e_USCORESE_USCOREPath_USCORESequence *path;	/* optional element of type ArrayOfCUTS.Path-Element */
	unsigned short flags;	/* required element of type xsd:unsignedShort */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (105)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	void *dummy;	/* transient */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (106)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (108)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (109)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (110)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (9)
typedef char *xsd__ID;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (11)
typedef char *xsd__anyURI;
#endif

#ifndef SOAP_TYPE__SOAP_ENC__arrayType
#define SOAP_TYPE__SOAP_ENC__arrayType (20)
typedef char *_SOAP_ENC__arrayType;
#endif

#ifndef SOAP_TYPE_SLICE__CUTS_x002eTime_USCOREStamp
#define SOAP_TYPE_SLICE__CUTS_x002eTime_USCOREStamp (50)
typedef int SLICE__CUTS_x002eTime_USCOREStamp;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of SLICEStub.h */
