project (RTConfigComponent): mfc, picmllib {
  after += PICML RTConfig


  macros += PICML_HAS_DLL _USRDLL _WINDLL
  sharedname = RTConfigComponent
  libs += PICML RTConfig
  pch_header = StdAfx.h
  pch_source = StdAfx.cpp


  specific {
     use_lib_modifier =
  }

  specific (vc6,vc7,vc71,vc8) {
     link_options += /DEF:Component.def
  }

  Source_Files {
    $(GME_ROOT)/SDK/BON/ComponentLib.idl
    StdAfx.cpp
    $(GME_ROOT)/SDK/BON/ComHelp.cpp
    $(GME_ROOT)/SDK/BON/ComponentDll.cpp
    $(GME_ROOT)/SDK/BON/ComponentObj.cpp
    Component.rc
    Component.def
    RawComponent.cpp
    UdmApp.cpp
  }

  Header_Files {
    ComponentConfig.h
    ComponentLib.h
    $(GME_ROOT)/SDK/BON/ComHelp.h
    $(GME_ROOT)/SDK/BON/ComponentDll.h
    $(GME_ROOT)/SDK/BON/ComponentObj.h
    $(GME_ROOT)/SDK/BON/GMECOM.h
    RawComponent.h
    Resource.h
    StdAfx.h
    UdmApp.h
    UdmConfig.h
  }

  Resource_Files {
    CompIcon.ico
  }
}

project (RegisterRTConfigComponent): picmllib {
  after += RTConfigComponent
  custom_only           = 1

  Register_Files {
    $(COSMIC_ROOT)\bin\RTConfigComponent.dll
  }
}
