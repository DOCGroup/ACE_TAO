project (IDLGenerator): bon {
   sharedname = IDLGenerator
   includes += $(COSMIC_ROOT)/PIM/PICML/interpreters/IDLGenerator

   specific {
     use_lib_modifier =
   }

   specific (vc6,vc7,vc71,vc8) {
     link_options += /DEF:Component.def
   }

   Source_Files {
     $(GME_ROOT)/SDK/BON/ComponentLib.idl
     $(GME_ROOT)/SDK/BON/BON.cpp
     BON2Component.cpp
     $(GME_ROOT)/SDK/BON/BONImpl.cpp
     $(GME_ROOT)/SDK/BON/ComHelp.cpp
     $(GME_ROOT)/SDK/BON/Common.cpp
     Component.rc
     $(GME_ROOT)/SDK/BON/ComponentDll.cpp
     $(GME_ROOT)/SDK/BON/ComponentObj.cpp
     DependencyVisitor.cpp
     $(GME_ROOT)/SDK/BON/Events.cpp
     $(GME_ROOT)/SDK/BON/Exceptions.cpp
     $(GME_ROOT)/SDK/BON/Extensions.cpp
     IDLEmitVisitor.cpp
     IDLStream.cpp
     IDMLBonExtension.cpp
     $(GME_ROOT)/SDK/BON/MON.cpp
     $(GME_ROOT)/SDK/BON/MONImpl.cpp
     StdAfx.cpp
     $(GME_ROOT)/SDK/BON/Utils.cpp
   }

   Header_Files {
     $(GME_ROOT)/SDK/BON/BON.h
     BON2Component.h
     $(GME_ROOT)/SDK/BON/BONImpl.h
     $(GME_ROOT)/SDK/BON/ComHelp.h
     ComponentConfig.h
     ComponentLib.h
     $(GME_ROOT)/SDK/BON/ComponentDll.h
     $(GME_ROOT)/SDK/BON/ComponentObj.h
     DependencyVisitor.h
     $(GME_ROOT)/SDK/BON/Events.h
     $(GME_ROOT)/SDK/BON/Exceptions.h
     $(GME_ROOT)/SDK/BON/Extensions.h
     IDLEmitVisitor.h
     IDLStream.h
     IDMLBonExtension.h
     $(GME_ROOT)/SDK/BON/MON.h
     $(GME_ROOT)/SDK/BON/MONImpl.h
     Resource.h
     StdAfx.h
     $(GME_ROOT)/SDK/BON/Utils.h
   }

   Resource_Files {
     CompIcon.ico
   }
}

project (RegisterIDLGenerator) : register {
  after += IDLGenerator
  custom_only = 1

  Register_Files {
    $(COSMIC_ROOT)\bin\IDLGenerator.dll
  }
}
