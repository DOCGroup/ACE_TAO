<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name="PICML" guid="{144ECCB2-BDC0-487E-B225-8A9C6DC1C37D}" cdate="Sun Aug 27 00:19:59 2006" mdate="Sun Aug 27 00:19:59 2006" >

	<comment>This tool supports $CIAO_ROOT/docs/schema/CIAOServerResources.xsd version 1.7. 
Please check the cvs repository if this is the most recent version of this file.</comment>

	<author></author>

	<folder name = "RootFolder" metaref = "1000"  subfolders = "ComponentAnalyses ComponentBuild ComponentImplementations ComponentPackages ComponentTypes DeploymentPlans ImplementationArtifacts InterfaceDefinitions PackageConfigurations PathDiagrams PredefinedTypes Targets TopLevelPackages WorkerLibraries" >
		<constraint type="function" name="AllParams">
			<![CDATA[method;gme::Model;;ocl::Set;
			parts (InParameter) + parts (InoutParameter) + parts (OutParameter)]]>
		</constraint>
		<constraint type="function" name="ComponentParentType">
			<![CDATA[method;gme::FCO;;gme::FCO;
			if self.isInstance()
then
   let myType = self.type() in
   if myType.isType()
   then
      myType
   else
      myType.ComponentParentType()
   endif
else
   self
endif]]>
		</constraint>
		<constraint type="function" name="ConnectorParents">
			<![CDATA[method;gme::Reference;;ocl::Bag;
			self.connectedFCOs(publish)->iterate (c : gme::FCO; acc = Bag{} | acc + Bag{c.parent()})]]>
		</constraint>
		<constraint type="function" name="MonolithicImpls">
			<![CDATA[method;gme::Atom;;ocl::Set;
			self.connectedFCOs(Implementation)->iterate
 (i: gme::Reference; acc = Set{} | acc + Set{i.refersTo()})]]>
		</constraint>
		<constraint type="function" name="allAscendants">
			<![CDATA[method;gme::Model;visited: ocl::Set;ocl::Set;
			let parents = self.ascendants() in
   let visited = visited.including(self) in
   parents->iterate( i : gme::Model ; accu = Set{} |
      if ( visited.includes(i) or i = self ) then
         accu.including(i)
      else
         accu.including(i) + i.allAscendants(visited)
      endif
)]]>
		</constraint>
		<constraint type="function" name="allFileScopeDecls">
			<![CDATA[method;gme::Folder;;ocl::Set;
			let closure = self.models ("File") in
          if (closure->size < 1) then
          Set{}
          else
          closure->iterate (x ; accu = Set{} | accu
          + x.parts ()
          - x.parts ("FileRef")
          - x.parts ("ComponentRef")
          - x.parts ("ManagesComponent"))
          endif]]>
		</constraint>
		<constraint type="function" name="allOps">
			<![CDATA[method;gme::Model;top: gme::Model;ocl::Set;
			let ret = localOps () + inheritedOps (top) + supportedOps () + inheritedSupportedOps () in
          ret]]>
		</constraint>
		<constraint type="function" name="ascendants">
			<![CDATA[method;gme::Model;;ocl::Set;
			self.referenceParts(Inherits)->iterate
 (i: gme::Reference; acc = Set{} | acc + Set{i.refersTo()})]]>
		</constraint>
		<constraint type="function" name="inheritedOps">
			<![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
			let parents = self.referenceParts ("Inherits") in
          parents->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          if (parent == top) then Set{}
          else
          parent.localOps () + parent.inheritedOps (top)
          endif))]]>
		</constraint>
		<constraint type="function" name="inheritedSupportedOps">
			<![CDATA[method;gme::Model;;ocl::Set;
			let parents= referenceParts ("Inherits") in
          parents->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          parent.supportedOps () + parent.inheritedSupportedOps ()))]]>
		</constraint>
		<constraint type="function" name="inheritsRecursive">
			<![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
			let inherits = referenceParts ("Inherits") in
          inherits->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          Set {parent} +
          (if (parent != top) then parent.inheritsRecursive (top)
          else Set {}
          endif)))]]>
		</constraint>
		<constraint type="function" name="localOps">
			<![CDATA[method;gme::Model;;ocl::Set;
			self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
          self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
		</constraint>
		<constraint type="function" name="supportedOps">
			<![CDATA[method;gme::Model;;ocl::Set;
			let supported_set = referenceParts ("Supports") in
          supported_set->iterate (ref; accu = Set{} | accu +
          (let supported = ref.refersTo ().oclAsType (gme::Model) in
          supported.localOps () + supported.inheritedOps (supported)))]]>
		</constraint>
		<attrdef name="Abstract" metaref = "3283" valuetype = "boolean" defvalue = "false">
			<dispname>Abstract:</dispname>
			<regnode name="help" value = "Flag that specifys if the worker is abstract. An abstract worker is one that cannot be used directly in a class as a worker. However, it can be subclassed by other workers."></regnode>
		</attrdef>
		<attrdef name="DataValue" metaref = "1001" valuetype = "string" defvalue = "">
			<dispname>value</dispname>
		</attrdef>
		<attrdef name="Location" metaref = "2970" valuetype = "string" defvalue = "">
			<dispname>Location</dispname>
			<regnode name="help" value = "Specifies the location of the object on disk. It can be a relative or absolute location."></regnode>
		</attrdef>
		<attrdef name="LogAction" metaref = "3414" valuetype = "boolean" defvalue = "false">
			<dispname>Enable Logging:</dispname>
			<regnode name="help" value = "This determines whether or not to log an action. The semantics of logging is dependent on the interpreter."></regnode>
		</attrdef>
		<attrdef name="ORBServices" metaref = "1022" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Period" metaref = "3416" valuetype = "integer" defvalue = "1000">
			<dispname>Period (msec):</dispname>
			<regnode name="help" value = "The period of the action. The units of value is milliseconds."></regnode>
		</attrdef>
		<attrdef name="Postcondition" metaref = "3421" valuetype = "string" defvalue = "">
			<dispname>Postcondition:</dispname>
			<regnode name="help" value = "Defines the effects of executing the previous action."></regnode>
		</attrdef>
		<attrdef name="Precondition" metaref = "3334" valuetype = "string" defvalue = "">
			<dispname>Precondition:</dispname>
			<regnode name="help" value = "Defines the condition that allows execution of the next action."></regnode>
		</attrdef>
		<attrdef name="PrefixTag" metaref = "1023" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Probability" metaref = "3417" valuetype = "double" defvalue = "1.0">
			<dispname>Probability</dispname>
			<regnode name="help" value = "The probability of the action occurring."></regnode>
		</attrdef>
		<attrdef name="Repetitions" metaref = "3415" valuetype = "integer" defvalue = "1">
			<dispname>Number of Repeitions:</dispname>
			<regnode name="help" value = "Specifies the number of repetitions for an operation. Actions with 0 repetitions are considered non-repetitive actions."></regnode>
		</attrdef>
		<attrdef name="ResourceUsageKind" metaref = "1024" valuetype = "enum" defvalue = "None">
			<dispname>resourceUsage</dispname>
			<enumitem dispname = "None" value = "None"></enumitem>
			<enumitem dispname = "InstanceUsesResource" value = "InstanceUsesResource"></enumitem>
			<enumitem dispname = "ResourceUsesInstance" value = "ResourceUsesInstance"></enumitem>
			<enumitem dispname = "PortUsesResource" value = "PortUsesResource"></enumitem>
			<enumitem dispname = "ResourceUsesPort" value = "ResourceUsesPort"></enumitem>
		</attrdef>
		<attrdef name="SatisfierPropertyKind" metaref = "1025" valuetype = "enum" defvalue = "Quantity">
			<dispname>kind</dispname>
			<enumitem dispname = "Quantity" value = "Quantity"></enumitem>
			<enumitem dispname = "Capacity" value = "Capacity"></enumitem>
			<enumitem dispname = "Minimum" value = "Minimum"></enumitem>
			<enumitem dispname = "Maximum" value = "Maximum"></enumitem>
			<enumitem dispname = "Selection" value = "Selection"></enumitem>
			<enumitem dispname = "Attribute" value = "Attribute"></enumitem>
		</attrdef>
		<attrdef name="SpecifyIdTag" metaref = "1026" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="UUID" metaref = "1027" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="VersionTag" metaref = "1028" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="benchmarkIterations" metaref = "1029" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="componentPort" metaref = "1031" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="configuration" metaref = "1032" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="dynamic" metaref = "3175" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="exclusiveProvider" metaref = "1036" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="exclusiveUser" metaref = "1037" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="fileName" metaref = "1038" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="iterations" metaref = "1041" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="label" metaref = "1042" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="libraryexport" metaref = "1043" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="location" metaref = "1044" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="optional" metaref = "1045" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="out_event_port_type" metaref = "1046" valuetype = "enum" defvalue = "DirectConnect">
			<enumitem dispname = "DirectConnect" value = "DirectConnect"></enumitem>
			<enumitem dispname = "RTEventChannel" value = "RTEventChannel"></enumitem>
		</attrdef>
		<attrdef name="priority" metaref = "1048" valuetype = "integer" defvalue = "-1">
		</attrdef>
		<attrdef name="rate" metaref = "1050" valuetype = "integer" defvalue = "-1">
		</attrdef>
		<attrdef name="requiredName" metaref = "1051" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="requiredType" metaref = "1052" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="requiredUUID" metaref = "1053" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="resolution" metaref = "1054" valuetype = "enum" defvalue = "microseconds">
			<enumitem dispname = "seconds" value = "seconds"></enumitem>
			<enumitem dispname = "miliseconds" value = "miliseconds"></enumitem>
			<enumitem dispname = "microseconds" value = "microseconds"></enumitem>
		</attrdef>
		<attrdef name="resourcePort" metaref = "1055" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="resourceType" metaref = "1056" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="sharedname" metaref = "1057" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="timeperiod" metaref = "1059" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="warmup" metaref = "1061" valuetype = "integer" defvalue = "">
		</attrdef>
		<atom name = "Average" metaref = "1063" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Average.bmp"></regnode>
		</atom>
		<atom name = "Boolean" metaref = "1064" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "Byte" metaref = "1065" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "ComponentPackage" metaref = "1066"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="SingleComponentInteface" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs(PackageInterface)->size() = 1 
or
self.connectedFCOs(Implementation)->forAll (i : Reference | i.refersTo().kindName() = "ComponentAssembly")
]]>
				<dispname>A ComponentPackage that contains a reference to a MonolithicImplementation should also refer to the corresponding component interface</dispname>
			</constraint>
			<constraint name="UniqueMonolithicImpls" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let impls = self.bagConnectedFCOs(Implementation) in
   impls->isUnique (a : ComponentImplementationReference | a.refersTo().name.trim())
     and
   impls->isUnique (a: ComponentImplementationReference | a.name.trim())]]>
				<dispname>Monolithic Implementations of a ComponentPackage should be unique</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let packages = project.allInstancesOf (ComponentPackage) in
   packages->forAll 
                       (x : ComponentPackage | 
                          self <> x implies 
                                   (
                                     (  x.UUID.trim() <> self.UUID.trim()  )
                                     or
                                     ( x.UUID.trim() = ""  or self.UUID.trim() = "")
                                   ) 
                       )]]>
				<dispname>Every Component Package should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidImplementationdstCardinality66" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Implementation ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentPackage as "dst" over Implementation, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPackageInterfacedstCardinality116" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PackageInterface ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentPackage as "dst" over PackageInterface, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="ComponentPackage.bmp"></regnode>
		</atom>
		<atom name = "DisplayNode" metaref = "2844" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidDstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "dst" over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality129" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "src" over SrcEdge, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="vertex.bmp"></regnode>
		</atom>
		<atom name = "Edge" metaref = "2089" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidDstEdgesrcCardinality41" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", DstEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Edge as "src" over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgedstCardinality130" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", SrcEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Edge as "dst" over SrcEdge, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
		</atom>
		<atom name = "EnumValue" metaref = "1069" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="enumvalue.bmp"></regnode>
		</atom>
		<atom name = "Environment" metaref = "3337" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Node.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "ExternalReferenceEndPoint" metaref = "2847"  attributes = "location">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ExternalReferenceEndPoint.bmp"></regnode>
		</atom>
		<atom name = "FixedIterationBenchmarks" metaref = "1071"  attributes = "benchmarkIterations">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidBenchmarkCharacteristicsdstCardinality26" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BenchmarkType as "dst" over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Discrete-Benchmark.bmp"></regnode>
		</atom>
		<atom name = "GenericObject" metaref = "1072" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "GenericValue" metaref = "1073" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "GenericValueObject" metaref = "1074" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "ImplementationArtifact" metaref = "1075"  attributes = "configuration UUID label location">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueDependencies" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(ArtifactDependsOn) in
   artifacts->isUnique (a : ImplementationArtifactReference | a.refersTo().name().trim())]]>
				<dispname>Dependent artifacts of an implementation artifact should be unique</dispname>
			</constraint>
			<constraint name="UniqueDependentArtifacts" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(ArtifactDependency) in
   artifacts->isUnique (a : ImplementationArtifact |  a.name().trim() )]]>
				<dispname>Dependent artifacts of an implementation artifact should be unique</dispname>
			</constraint>
				<regnode name = "icon" value ="ImplementationArtifact.bmp"></regnode>
		</atom>
		<atom name = "ImplementationDependency" metaref = "1076"  attributes = "requiredType">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ImplementationDependency.bmp"></regnode>
		</atom>
		<atom name = "Jitter" metaref = "1077" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Jitter.bmp"></regnode>
		</atom>
		<atom name = "Label" metaref = "1078" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidLabelConnectionsrcCardinality83" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", LabelConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to Label as "src" over LabelConnection, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="label.bmp"></regnode>
		</atom>
		<atom name = "LongInteger" metaref = "1080" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "Maximum" metaref = "1081" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Max.bmp"></regnode>
		</atom>
		<atom name = "Minimum" metaref = "1082" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Min.bmp"></regnode>
		</atom>
		<atom name = "MonolithicImplementation" metaref = "1083"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="RequiredInterface" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs (Implements)->size() = 1]]>
				<dispname>Every MonolithicComponentImplementation should implement a Component interface.</dispname>
			</constraint>
			<constraint name="UniqueArtifacts" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(MonolithprimaryArtifact) in
  artifacts->isUnique (a : ImplementationArtifactReference |  a.name().trim())]]>
				<dispname>Primary Artifacts of a MonolithicImplementation should be unique</dispname>
			</constraint>
			<constraint name="ValidImplementsdstCardinality72" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Implements ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentImplementation as "dst" over Implements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMonolithprimaryArtifactdstCardinality96" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", MonolithprimaryArtifact ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MonolithicImplementation as "dst" over MonolithprimaryArtifact, has to match 1..*.</dispname>
			</constraint>
				<regnode name = "icon" value ="MonolithicImplementation.bmp"></regnode>
		</atom>
		<atom name = "PackageConfiguration" metaref = "1085"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniquePackageConfiguration" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let folder = project.allInstancesOf(PackageConfiguration) in
          folder->isUnique (e1 : PackageConfiguration | e1.name)]]>
				<dispname>PackageConfiguration should be unique within a project</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let packages = project.allInstancesOf (PackageConfiguration) in
   packages->forAll 
                       (x : PackageConfiguration | 
                          self <> x implies 
                                   (
                                     (  x.UUID.trim() <> self.UUID.trim()  )
                                     or
                                     ( x.UUID.trim() = ""  or self.UUID.trim() = "")
                                   ) 
                       )]]>
				<dispname>Every PackageConfiguration should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidPackageConfBasePackagedstCardinality102" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PackageConfBasePackage ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfBasePackage, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfReferencedstCardinality106" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PackageConfReference ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfReference, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfSpecializedConfigdstCardinality110" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PackageConfSpecializedConfig ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfSpecializedConfig, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="PackageConfiguration.bmp"></regnode>
		</atom>
		<atom name = "PeriodicBenchmarks" metaref = "1086"  attributes = "timeperiod">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidBenchmarkCharacteristicsdstCardinality26" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BenchmarkType as "dst" over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Periodic-Bench.bmp"></regnode>
		</atom>
		<atom name = "PrivateFlag" metaref = "1087" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidMakeMemberPrivatesrcCardinality85" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", MakeMemberPrivate ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PrivateFlag as "src" over MakeMemberPrivate, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="private.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "PublishConnector" metaref = "2848" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="MatchingPublishConsumer" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(deliverTo) in
   let publishers = self.connectedFCOs(publish) in
      publishers->forAll ( i : OutEventPort | 
          let supertypes = i.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
             consumers->forAll (j: InEventPort |
                    supertypes->one (k: gme::FCO | k.name() = j.refersTo().name()  )
             or i.refersTo().name() = j.refersTo().name()   )
)]]>
				<dispname>An OutEventPort connected to an InEventPort via a PublishConnector should be of the same type or a subtype of InEventPort</dispname>
			</constraint>
			<constraint name="Require2Connections" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs(publish)->size() = 1 and self.connectedFCOs(deliverTo)->size() >= 1]]>
				<dispname>A PublishConnector should connect one OutEventPort with one or more InEventPorts</dispname>
			</constraint>
			<constraint name="ValidPublishHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(publish)->forAll (x : FCO | x.parent() <> self.parent()) 
and
self.connectedFCOs(deliverTo)->forAll (x : FCO | x.parent() <> self.parent())]]>
				<dispname>A PublishConnector cannot be used to make connections between In/OutEventPorts that are delegates and not ports of component instances</dispname>
			</constraint>
			<constraint name="ValidpublishsrcCardinality149" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", publish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PublishConnector as "src" over publish, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
		</atom>
		<atom name = "QoSConnector" metaref = "3455" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidEventSinkPublishdstCardinality50" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", EventSinkPublish ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to QoSConnector as "dst" over EventSinkPublish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidEventSourcePublishsrcCardinality53" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", EventSourcePublish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to QoSConnector as "src" over EventSourcePublish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidFacetInvokedstCardinality62" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", FacetInvoke ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to QoSConnector as "dst" over FacetInvoke, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidRecepInvokesrcCardinality123" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", RecepInvoke ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to QoSConnector as "src" over RecepInvoke, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
		</atom>
		<atom name = "RealNumber" metaref = "1091" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "ShortInteger" metaref = "1092" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "State" metaref = "3338" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="HasPrecondition" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let conns = self.attachingConnections ("src", Transition) in

conns->size > 1 implies
  conns->forAll (iter : Transition | 
                        iter.Precondition.trim ().size > 0)
]]>
				<dispname>States with more than one transition must define a precondition for all transitions.</dispname>
			</constraint>
			<constraint name="ValidFinishdstCardinality64" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Finish ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to State as "dst" over Finish, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="State.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "String" metaref = "1093" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "Task" metaref = "1094" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWorkLoadOperationConnectionsrcCardinality137" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", WorkLoadOperationConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Task as "src" over WorkLoadOperationConnection, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="task.bmp"></regnode>
		</atom>
		<atom name = "TimeProbe" metaref = "1095" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidTimerConnectionsrcCardinality131" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", TimerConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TimeProbe as "src" over TimerConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTimerEventSinkConnsrcCardinality133" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", TimerEventSinkConn ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TimeProbe as "src" over TimerEventSinkConn, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="timer.bmp"></regnode>
		</atom>
		<atom name = "TopLevelPackage" metaref = "1096" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidpackagedstCardinality148" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", package ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to TopLevelPackage as "dst" over package, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="TopLevelPackage.bmp"></regnode>
		</atom>
		<atom name = "TriggerBenchmarks" metaref = "1097" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidBenchmarkCharacteristicsdstCardinality26" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BenchmarkType as "dst" over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Trigger-Bench.bmp"></regnode>
		</atom>
		<atom name = "TypeEncoding" metaref = "1098" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "TypeKind" metaref = "1099" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<set name = "CollocationGroup" metaref = "1100" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setCollocationGroup"></regnode>
				<regnode name = "icon" value ="ComponentSet"></regnode>
			<pointerspec name = "set">
				<pointeritem desc = "ComponentAssemblyReference"></pointeritem>
				<pointeritem desc = "ComponentRef"></pointeritem>
				<pointeritem desc = "SharedComponentReference"></pointeritem>
			</pointerspec>
		</set>
		<set name = "TaskSet" metaref = "1101" attributes = "priority rate" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setTaskSet"></regnode>
				<regnode name = "icon" value ="taskset.bmp"></regnode>
			<constraint name="ValidWorkloadCharacteristicssrcCardinality139" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", WorkloadCharacteristics ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to TaskSet as "src" over WorkloadCharacteristics, has to match 1.</dispname>
			</constraint>
			<pointerspec name = "set">
				<pointeritem desc = "Task"></pointeritem>
			</pointerspec>
		</set>
		<set name = "Workspaces" metaref = "1102" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setWorkspace"></regnode>
				<regnode name = "icon" value ="Workspace.bmp"></regnode>
			<pointerspec name = "set">
				<pointeritem desc = "Project"></pointeritem>
			</pointerspec>
		</set>
		<connection name = "ArtifactDependency" metaref = "1103" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcArtifactDependency"></regnode>
				<regnode name = "dName" value ="dstArtifactDependency"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ArtifactDependsOn" metaref = "1104" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcArtifactDependsOn"></regnode>
				<regnode name = "dName" value ="dstArtifactDependsOn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ImplementationArtifactReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ArtifactDeployRequirement" metaref = "1105" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcArtifactDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstArtifactDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ArtifactExecParameter" metaref = "1106" >
				<regnode name = "labelFormatStr" value ="execParameter"></regnode>
				<regnode name = "sName" value ="srcArtifactExecParameter"></regnode>
				<regnode name = "dName" value ="dstArtifactExecParameter"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ArtifactInfoProperty" metaref = "1107" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcArtifactInfoProperty"></regnode>
				<regnode name = "dName" value ="dstArtifactInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AssemblyConfigProperty" metaref = "2849" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcAssemblyConfigProperty"></regnode>
				<regnode name = "dName" value ="dstAssemblyConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AssemblyDeployRequirement" metaref = "2850" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcAssemblyDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstAssemblyDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PublishConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AssemblyselectRequirement" metaref = "2851" >
				<regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
				<regnode name = "sName" value ="srcAssemblyselectRequirement"></regnode>
				<regnode name = "dName" value ="dstAssemblyselectRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AttributeDelegate" metaref = "2852" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcAttributeDelegate"></regnode>
				<regnode name = "dName" value ="dstAttributeDelegate"></regnode>
				<regnode name = "color" value ="0x408080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssembly AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component Attribute"></pointeritem>
					<pointeritem desc = "Component ReadonlyAttribute"></pointeritem>
					<pointeritem desc = "ComponentRef Attribute"></pointeritem>
					<pointeritem desc = "ComponentRef ReadonlyAttribute"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AttributeMappingDelegate" metaref = "2853" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcAttributeMappingDelegate"></regnode>
				<regnode name = "dName" value ="dstAttributeMappingDelegate"></regnode>
				<regnode name = "color" value ="0x008080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssembly AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssembly AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference AttributeMapping"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AttributeMappingValue" metaref = "2854" >
				<regnode name = "labelFormatStr" value ="attValue"></regnode>
				<regnode name = "sName" value ="srcAttributeMappingValue"></regnode>
				<regnode name = "dName" value ="dstAttributeMappingValue"></regnode>
				<regnode name = "color" value ="0x808000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssembly AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AttributeValue" metaref = "2855" >
				<regnode name = "labelFormatStr" value ="attValue"></regnode>
				<regnode name = "sName" value ="srcAttributeValue"></regnode>
				<regnode name = "dName" value ="dstAttributeValue"></regnode>
				<regnode name = "color" value ="0x800080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component Attribute"></pointeritem>
					<pointeritem desc = "Component ReadonlyAttribute"></pointeritem>
					<pointeritem desc = "ComponentRef Attribute"></pointeritem>
					<pointeritem desc = "ComponentRef ReadonlyAttribute"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "BenchmarkCharacteristics" metaref = "1115" >
				<regnode name = "sName" value ="srcBenchmarkCharacteristics"></regnode>
				<regnode name = "dName" value ="dstBenchmarkCharacteristics"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "FixedIterationBenchmarks"></pointeritem>
					<pointeritem desc = "PeriodicBenchmarks"></pointeritem>
					<pointeritem desc = "TriggerBenchmarks"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Latency"></pointeritem>
					<pointeritem desc = "Throughput"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Bridge2Interconnect" metaref = "1116" >
				<regnode name = "sName" value ="srcBridge2Interconnect"></regnode>
				<regnode name = "dName" value ="dstBridge2Interconnect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Bridge"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Interconnect"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ComponentConfigProperty" metaref = "1117" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcComponentConfigProperty"></regnode>
				<regnode name = "dName" value ="dstComponentConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ComponentInfoProperty" metaref = "1118" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcComponentInfoProperty"></regnode>
				<regnode name = "dName" value ="dstComponentInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ComponentOperation" metaref = "1119" >
				<regnode name = "labelFormatStr" value ="benchmarks"></regnode>
				<regnode name = "sName" value ="srcComponentOperation"></regnode>
				<regnode name = "dName" value ="dstComponentOperation"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CompRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ComponentProperty" metaref = "1120" >
				<regnode name = "labelFormatStr" value ="property"></regnode>
				<regnode name = "sName" value ="srcComponentProperty"></regnode>
				<regnode name = "dName" value ="dstComponentProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentPropertyDescription"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ConfigProperty" metaref = "1121" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcConfigProperty"></regnode>
				<regnode name = "dName" value ="dstConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CriticalPath" metaref = "3062" >
				<regnode name = "labelFormatStr" value ="CriticalPath"></regnode>
				<regnode name = "sName" value ="srcCriticalPath"></regnode>
				<regnode name = "dName" value ="dstCriticalPath"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PathReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "DstEdge" metaref = "2094" >
				<regnode name = "sName" value ="srcDstEdge"></regnode>
				<regnode name = "dName" value ="dstDstEdge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ConnectedComponent"></pointeritem>
					<pointeritem desc = "DisplayNode"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Edge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "EdgeProperty" metaref = "3063" >
				<regnode name = "sName" value ="srcPropertyConnector"></regnode>
				<regnode name = "dName" value ="dstPropertyConnector"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Edge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Effect" metaref = "3339" attributes = "Postcondition" >
				<regnode name = "sName" value ="srcInputEffect"></regnode>
				<regnode name = "dName" value ="dstInputEffect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Action"></pointeritem>
					<pointeritem desc = "CompositeAction"></pointeritem>
					<pointeritem desc = "InputAction"></pointeritem>
					<pointeritem desc = "OutputAction"></pointeritem>
					<pointeritem desc = "PeriodicAction"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "State"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "EventSinkDelegate" metaref = "2856" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcEventSinkDelegate"></regnode>
				<regnode name = "dName" value ="dstEventSinkDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "EventSinkPublish" metaref = "3464" >
				<regnode name = "sName" value ="srcEventSinkPublish"></regnode>
				<regnode name = "dName" value ="dstEventSinkPublish"></regnode>
				<regnode name = "color" value ="0x00FF00"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "dstLabel1" value="PublishDst"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "QoSConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "EventSourceDelegate" metaref = "2857" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcEventSourceDelegate"></regnode>
				<regnode name = "dName" value ="dstEventSourceDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "EventSourcePublish" metaref = "3465" >
				<regnode name = "sName" value ="srcEventSourcePublish"></regnode>
				<regnode name = "dName" value ="dstEventSourcePublish"></regnode>
				<regnode name = "color" value ="0x00FF00"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "srcLabel1" value="PublishSrc"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "QoSConnector"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ExtResourceConn" metaref = "1124" >
				<regnode name = "sName" value ="srcExtResourceConn"></regnode>
				<regnode name = "dName" value ="dstExtResourceConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ExecutorProject"></pointeritem>
					<pointeritem desc = "ServantProject"></pointeritem>
					<pointeritem desc = "StubProject"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ExternalResources"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ExternalDelegate" metaref = "2858" >
				<regnode name = "labelFormatStr" value ="references"></regnode>
				<regnode name = "sName" value ="srcExternalDelegate"></regnode>
				<regnode name = "dName" value ="dstExternalDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ExternalReferenceEndPoint"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "FacetDelegate" metaref = "2859" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcFacetDelegate"></regnode>
				<regnode name = "dName" value ="dstFacetDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "FacetInvoke" metaref = "3466" >
				<regnode name = "sName" value ="srcFacetInvoke"></regnode>
				<regnode name = "dName" value ="dstFacetInvoke"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "dstLabel1" value="InvokeDst"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "QoSConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Finish" metaref = "3340" >
				<regnode name = "sName" value ="srcFinish"></regnode>
				<regnode name = "dName" value ="dstFinish"></regnode>
				<regnode name = "color" value ="0xFF00FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "State"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "InputAction"></pointeritem>
					<pointeritem desc = "PeriodicAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Implementation" metaref = "1127" >
				<regnode name = "labelFormatStr" value ="implementation"></regnode>
				<regnode name = "sName" value ="srcImplementation"></regnode>
				<regnode name = "dName" value ="dstImplementation"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentImplementationReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ImplementationCapability" metaref = "1128" >
				<regnode name = "labelFormatStr" value ="capability"></regnode>
				<regnode name = "sName" value ="srcImplementationCapability"></regnode>
				<regnode name = "dName" value ="dstImplementationCapability"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Capability"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ImplementationDependsOn" metaref = "1129" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcImplementationDependsOn"></regnode>
				<regnode name = "dName" value ="dstImplementationDependsOn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ImplementationDependency"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Implements" metaref = "1130" >
				<regnode name = "labelFormatStr" value ="implements"></regnode>
				<regnode name = "sName" value ="srcImplements"></regnode>
				<regnode name = "dName" value ="dstImplements"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "InfoProperty" metaref = "1133" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcInfoProperty"></regnode>
				<regnode name = "dName" value ="dstInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Input" metaref = "3341" >
				<regnode name = "sName" value ="srcInput"></regnode>
				<regnode name = "dName" value ="dstInput"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "InEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "InputAction"></pointeritem>
					<pointeritem desc = "PeriodicAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "InstanceMapping" metaref = "1134" >
				<regnode name = "labelFormatStr" value ="runsOn"></regnode>
				<regnode name = "sName" value ="srcInstanceMapping"></regnode>
				<regnode name = "dName" value ="dstInstanceMapping"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CollocationGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "NodeReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Interconnect2Bridge" metaref = "1135" >
				<regnode name = "sName" value ="srcInterconnect2Bridge"></regnode>
				<regnode name = "dName" value ="dstInterconnect2Bridge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Interconnect"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Bridge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Interconnect2Node" metaref = "1136" >
				<regnode name = "sName" value ="srcInterconnect2Node"></regnode>
				<regnode name = "dName" value ="dstInterconnect2Node"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Interconnect"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Node"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "LabelConnection" metaref = "1137" >
				<regnode name = "sName" value ="srcLabelConnection"></regnode>
				<regnode name = "dName" value ="dstLabelConnection"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Member"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Label"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MakeMemberPrivate" metaref = "1138" >
				<regnode name = "sName" value ="srcMakeMemberPrivate"></regnode>
				<regnode name = "dName" value ="dstMakeMemberPrivate"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Member"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PrivateFlag"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ManagesComponent" metaref = "1139" >
				<regnode name = "sName" value ="srcManagesComponent"></regnode>
				<regnode name = "dName" value ="dstManagesComponent"></regnode>
				<regnode name = "color" value ="0x00FF00"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentFactory"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component"></pointeritem>
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MetricConnection" metaref = "1140" >
				<regnode name = "labelFormatStr" value ="measures"></regnode>
				<regnode name = "sName" value ="srcMetricConnection"></regnode>
				<regnode name = "dName" value ="dstMetricConnection"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Latency"></pointeritem>
					<pointeritem desc = "Throughput"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MonolithDeployRequirement" metaref = "1141" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcMonolithDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstMonolithDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ImplementationRequirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MonolithExecParameter" metaref = "1142" >
				<regnode name = "labelFormatStr" value ="execParameter"></regnode>
				<regnode name = "sName" value ="srcMonolithExecParameter"></regnode>
				<regnode name = "dName" value ="dstMonolithExecParameter"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MonolithprimaryArtifact" metaref = "1143" >
				<regnode name = "labelFormatStr" value ="primaryArtifact"></regnode>
				<regnode name = "sName" value ="srcMonolithprimaryArtifact"></regnode>
				<regnode name = "dName" value ="dstMonolithprimaryArtifact"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ImplementationArtifactReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MultiInput" metaref = "3418" >
				<regnode name = "sName" value ="srcMultiInput"></regnode>
				<regnode name = "dName" value ="dstMultiInput"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Environment"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "InputAction"></pointeritem>
					<pointeritem desc = "PeriodicAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Node2Interconnect" metaref = "1144" >
				<regnode name = "sName" value ="srcNode2Interconnect"></regnode>
				<regnode name = "dName" value ="dstNode2Interconnect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Node"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Interconnect"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfBasePackage" metaref = "1145" >
				<regnode name = "labelFormatStr" value ="basePackage"></regnode>
				<regnode name = "sName" value ="srcPackageConfBasePackage"></regnode>
				<regnode name = "dName" value ="dstPackageConfBasePackage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfConfigProperty" metaref = "1146" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcPackageConfConfigProperty"></regnode>
				<regnode name = "dName" value ="dstPackageConfConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfReference" metaref = "1147" >
				<regnode name = "labelFormatStr" value ="reference"></regnode>
				<regnode name = "sName" value ="srcPackageConfReference"></regnode>
				<regnode name = "dName" value ="dstPackageConfReference"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentPackageReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfSelectRequirement" metaref = "1148" >
				<regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
				<regnode name = "sName" value ="srcPackageConfSelectRequirement"></regnode>
				<regnode name = "dName" value ="dstPackageConfSelectRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfSpecializedConfig" metaref = "1149" >
				<regnode name = "labelFormatStr" value ="specializedConfig"></regnode>
				<regnode name = "sName" value ="srcPackageConfSpecializedConfig"></regnode>
				<regnode name = "dName" value ="dstPackageConfSpecializedConfig"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfigProperty" metaref = "1150" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcPackageConfigProperty"></regnode>
				<regnode name = "dName" value ="dstPackageConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageInfoProperty" metaref = "1151" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcPackageInfoProperty"></regnode>
				<regnode name = "dName" value ="dstPackageInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageInterface" metaref = "1152" >
				<regnode name = "labelFormatStr" value ="realizes"></regnode>
				<regnode name = "sName" value ="srcPackageInterface"></regnode>
				<regnode name = "dName" value ="dstPackageInterface"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PathProperty" metaref = "3064" >
				<regnode name = "labelFormatStr" value ="pathProperty"></regnode>
				<regnode name = "sName" value ="srcPathProperty"></regnode>
				<regnode name = "dName" value ="dstPathProperty"></regnode>
				<regnode name = "color" value ="0x00F000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Path"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PortQoS" metaref = "3467" >
				<regnode name = "sName" value ="srcPortQoS"></regnode>
				<regnode name = "dName" value ="dstPortQoS"></regnode>
				<regnode name = "color" value ="0xf4a460"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component InEventPort"></pointeritem>
					<pointeritem desc = "Component OutEventPort"></pointeritem>
					<pointeritem desc = "Component ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "Component RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "QoSCharRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "QoSReq" metaref = "3470" >
				<regnode name = "sName" value ="srcQoSReq"></regnode>
				<regnode name = "dName" value ="dstQoSReq"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "QoSConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "QoSCharRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "RecepInvoke" metaref = "3471" >
				<regnode name = "sName" value ="srcRecepInvoke"></regnode>
				<regnode name = "dName" value ="dstRecepInvoke"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "srcLabel1" value="InvokeSrc"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "QoSConnector"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ReceptacleDelegate" metaref = "2860" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcReceptacleDelegate"></regnode>
				<regnode name = "dName" value ="dstReceptacleDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Shares" metaref = "1155" >
				<regnode name = "labelFormatStr" value ="shares"></regnode>
				<regnode name = "sName" value ="srcShares"></regnode>
				<regnode name = "dName" value ="dstShares"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Node"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "SharedResource"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "SrcEdge" metaref = "2101" >
				<regnode name = "sName" value ="srcSrcEdge"></regnode>
				<regnode name = "dName" value ="dstSrcEdge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Edge"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ConnectedComponent"></pointeritem>
					<pointeritem desc = "DisplayNode"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "TimerConnection" metaref = "1156" >
				<regnode name = "labelFormatStr" value ="getTime"></regnode>
				<regnode name = "sName" value ="srcTimerConnection"></regnode>
				<regnode name = "dName" value ="dstTimerConnection"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "TimeProbe"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "TimerEventSinkConn" metaref = "1157" >
				<regnode name = "labelFormatStr" value ="getTime"></regnode>
				<regnode name = "sName" value ="srcTimerEventSinkConn"></regnode>
				<regnode name = "dName" value ="dstTimerEventSinkConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "EventRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "TimeProbe"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Transition" metaref = "3342" attributes = "Precondition" >
				<regnode name = "sName" value ="srcInternalPrecondition"></regnode>
				<regnode name = "dName" value ="dstInternalPrecondition"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "State"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Action"></pointeritem>
					<pointeritem desc = "CompositeAction"></pointeritem>
					<pointeritem desc = "InputAction"></pointeritem>
					<pointeritem desc = "OutputAction"></pointeritem>
					<pointeritem desc = "PeriodicAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WorkLoadOperationConnection" metaref = "1160" >
				<regnode name = "sName" value ="srcWorkLoadOperationConnection"></regnode>
				<regnode name = "dName" value ="dstWorkLoadOperationConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Task"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WorkloadCharacteristics" metaref = "1161" >
				<regnode name = "sName" value ="srcWorkloadCharacteristics"></regnode>
				<regnode name = "dName" value ="dstWorkloadCharacteristics"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Latency"></pointeritem>
					<pointeritem desc = "Throughput"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "TaskSet"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "deliverTo" metaref = "2861" >
				<regnode name = "labelFormatStr" value ="deliverTo"></regnode>
				<regnode name = "sName" value ="srcdeliverTo"></regnode>
				<regnode name = "dName" value ="dstdeliverTo"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PublishConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "emit" metaref = "2862" >
				<regnode name = "labelFormatStr" value ="emits"></regnode>
				<regnode name = "sName" value ="srcemit"></regnode>
				<regnode name = "dName" value ="dstemit"></regnode>
				<regnode name = "color" value ="0x8F0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly InEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "invoke" metaref = "2863" >
				<regnode name = "labelFormatStr" value ="invokes"></regnode>
				<regnode name = "sName" value ="srcinvoke"></regnode>
				<regnode name = "dName" value ="dstinvoke"></regnode>
				<regnode name = "color" value ="0x00008F"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "package" metaref = "1165" >
				<regnode name = "labelFormatStr" value ="package"></regnode>
				<regnode name = "sName" value ="srcpackage"></regnode>
				<regnode name = "dName" value ="dstpackage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "TopLevelPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PackageConfigurationReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "publish" metaref = "2864" >
				<regnode name = "labelFormatStr" value ="publish"></regnode>
				<regnode name = "sName" value ="srcpublish"></regnode>
				<regnode name = "dName" value ="dstpublish"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Component OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssembly OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PublishConnector"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<reference name = "Alias" metaref = "1167" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAlias"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="alias.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "AttributeMapping" metaref = "2865">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeMapping"></regnode>
			<constraint name="MatchingAttributeMappingDelegateType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let myAttr : Model = self.refersTo() in
let attrs = myAttr.referenceParts(AttributeMember) in
let delegates = self.connectedFCOs(AttributeMappingDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can only be used to delegate values to AttributeMappings of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attr: Model = self.refersTo() in
let attrType = attr.referenceParts(AttributeMember) in
let props = self.connectedFCOs(AttributeMappingValue) in
    attrType->forAll (myType : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         myType.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can only be used to delegate property values to attributes of the same type</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are prohibited</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeMappingValue)->size() <= 1]]>
				<dispname>An AttributeMapping can only have a single Property value associated with it.</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingDelegatesrcCardinality19" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", AttributeMappingDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to AttributeMapping as "src" over AttributeMappingDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingValuedstCardinality22" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", AttributeMappingValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to AttributeMapping as "dst" over AttributeMappingValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(AttributeMappingDelegate)->forAll (x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>An AttributeMapping of an assembly can only be delegated to an AttributeMapping in a different assembly</dispname>
			</constraint>
			<regnode name = "icon" value ="AttributeMapping.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Attribute"></pointeritem>
				<pointeritem desc = "ReadonlyAttribute"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "AttributeMember" metaref = "1169">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeMember"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Boxed" metaref = "1170" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyBoxed"></regnode>
			<constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[let boxedref = refersTo () in
          boxedref.kindName <> "ValueDef" and boxedref.kindName <> "EventDef"]]>
				<dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="boxed.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Collection" metaref = "1171" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCollection"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="variablecollection.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CompRef" metaref = "1172">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCompRef"></regnode>
			<constraint name="ValidComponentOperationsrcCardinality33" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", ComponentOperation ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to CompRef as "src" over ComponentOperation, has to match 1.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentAssemblyReference" metaref = "1173">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentAssemblyReference"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "DeploymentPlan" implies self.refersTo().isInstance()
   endif]]>
				<dispname>A Deployment Plan can only contain references to instances of components/component assemblies; references to component/assembly types are not allowed.</dispname>
			</constraint>
			<constraint name="InstanceReferenceOnly" eventmask = "0x80000004" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" => self.refersTo().isInstance()
   endif]]>
				<dispname>A ComponentAssemblyReference or a ComponentRef within a component assembly can only refer to an assembly instance, or a component instance respectively. </dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are prohibited</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[self.refersTo().parent() <> self.parent()]]>
				<dispname>A ComponentAssemblyReference/ComponentRef cannot be defined within the same assembly that contains the referred ComponentAssembly/Component.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentAssembly"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentImplementationReference" metaref = "1174">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentImplementationReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are disallowed</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentAssembly"></pointeritem>
				<pointeritem desc = "MonolithicImplementation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentPackageReference" metaref = "1175" attributes = "requiredType requiredUUID requiredName">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentPackageReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ComponentImplementationReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="PackageReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentPackage"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentRef" metaref = "1176">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentRef"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "DeploymentPlan" implies self.refersTo().isInstance()
   endif]]>
				<dispname>A Deployment Plan can only contain references to instances of components/component assemblies; references to component/assembly types are not allowed.</dispname>
			</constraint>
			<constraint name="InstanceReferenceOnly" eventmask = "0x80000004" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" => self.refersTo().isInstance()
   endif]]>
				<dispname>A ComponentAssemblyReference or a ComponentRef within a component assembly can only refer to an assembly instance, or a component instance respectively. </dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidImplementssrcCardinality71" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Implements ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentRef as "src" over Implements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageInterfacesrcCardinality115" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PackageInterface ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentRef as "src" over PackageInterface, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[self.refersTo().parent() <> self.parent()]]>
				<dispname>A ComponentAssemblyReference/ComponentRef cannot be defined within the same assembly that contains the referred ComponentAssembly/Component.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Constant" metaref = "1177" attributes = "VersionTag SpecifyIdTag value">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyConstant"></regnode>
			<constraint name="LegalConstantType" eventmask = "0x400" depth = "1" priority = "1">
				<![CDATA[let x = refersTo () in
          x.isTypeOf (String) or
          x.isTypeOf (LongInteger) or
          x.isTypeOf (Enum) or
          x.isTypeOf (ShortInteger) or
          x.isTypeOf (RealNumber) or
          x.isTypeOf (Byte) or
          x.isTypeOf (Boolean)]]>
				<dispname>A Constant must be a Boolean, Byte, ShortInteger, LongInteger, RealNumber, String or Enum</dispname>
			</constraint>
			<constraint name="LegalConstantValue" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = refersTo () in
    let y = value.toInteger () in
          (x.isTypeOf (Boolean) implies ((y = 0 or y = 1) or (let z = value.trim ().toUpper () in z = "TRUE" or z = "FALSE"))) and
          (x.isTypeOf (Byte) implies (y >= 0 and y < 256)) and
          (x.isTypeOf (ShortInteger) implies (y > -32769 and y < 32768)) and
          (x.isTypeOf (LongInteger) implies (value.toReal () >= -2147483648 and value.toReal () <= 2147483647)) and
          (x.isTypeOf (RealNumber) implies value.trim ().match ("^\-?[0-9]+\.[0-9]*$")) and
          (x.isTypeOf (Enum) implies x.oclAsType (gme::Model).parts ()->collect (w : gme::FCO | w.name)->exists (z : ocl::String | z = value.trim ()))]]>
				<dispname>Constant's value does not match type or is out of range</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="value" metaref = "1178" valuetype = "string" defvalue = "">
			</attrdef>
			<regnode name = "icon" value ="const.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "DataType" metaref = "1179">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDataType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>DataType should reference a PredefinedType and cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="DataType.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Discriminator" metaref = "1180">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDiscriminator"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<regnode name = "icon" value ="discriminator.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "EventRef" metaref = "1181">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyEventRef"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="eventref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ExceptionRef" metaref = "1182">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExceptionRef"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="exceptionref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ExternalResources" metaref = "1183">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExternalResources"></regnode>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "FileRef" metaref = "1184">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyFileRef"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="fileref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "File"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "GetException" metaref = "1185">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyGetException"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="getexception.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ImplementationArtifactReference" metaref = "1186">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyImplementationArtifactReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ImplementationArtifactReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "InEventPort" metaref = "1187" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInEventPort"></regnode>
			<constraint name="MatchingEventSink" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(EventSinkDelegate)  in
 consumers->forAll ( i : InEventPort |  self.refersTo().name() = i.refersTo().name() )]]>
				<dispname>An InEventPort can only be delegated to another InEventPort of the same type</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidDstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "dst" over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidEmitsHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(emit)->forAll (x : Connection | x.parent() <> self.parent())]]>
				<dispname>Within a single assembly, an InEventPort can be connected to an OutEventPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidInputdstCardinality76" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Input ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InEventPort as "dst" over Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(EventSinkDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only InEventPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality129" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "src" over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="ineventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "InParameter" metaref = "1188">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="in.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Inherits" metaref = "1189">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInherits"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="inherits.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "InoutParameter" metaref = "1190">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInoutParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="inout.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "LookupKey" metaref = "1191">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyLookupKey"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="lookupkey.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Member" metaref = "1192">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyMember"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ParentNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[name <> parent ().name]]>
				<dispname>A member may not have the same name as its container.</dispname>
			</constraint>
			<constraint name="ValidMakeMemberPrivatedstCardinality86" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "NodeReference" metaref = "1193">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyNodeReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>NodeReference cannot be null</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "Node"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "OperationRef" metaref = "1194">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOperationRef"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidComponentOperationdstCardinality34" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", ComponentOperation ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OperationRef as "dst" over ComponentOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMetricConnectiondstCardinality90" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", MetricConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OperationRef as "dst" over MetricConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTimerConnectiondstCardinality132" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", TimerConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OperationRef as "dst" over TimerConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWorkLoadOperationConnectiondstCardinality138" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WorkLoadOperationConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OperationRef as "dst" over WorkLoadOperationConnection, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="operationref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "FactoryOperation"></pointeritem>
				<pointeritem desc = "LookupOperation"></pointeritem>
				<pointeritem desc = "OnewayOperation"></pointeritem>
				<pointeritem desc = "TwowayOperation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "OutEventPort" metaref = "1195" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider single_destination out_event_port_type">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutEventPort"></regnode>
			<constraint name="MatchingEmitConsumer" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(emit)  in
 consumers->forAll ( i : InEventPort | 
     let supertypes = self.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
         supertypes->one (k: gme::FCO | k.name() = i.refersTo().name())
     or self.refersTo().name() = i.refersTo().name()
)]]>
				<dispname>An OutEventPort should be connected to an InEventPort of the same type, or the OutEventPort should be a subtype of InEventPort</dispname>
			</constraint>
			<constraint name="MatchingEventDelegate" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let publishers = self.connectedFCOs(EventSourceDelegate)  in
 publishers->forAll ( i : OutEventPort |  self.refersTo().name() = i.refersTo().name() 
                              and
                              self.single_destination = i.single_destination)]]>
				<dispname>An OutEventPort can only be delegated to another OutEventPort of the same type and should have consistent values for single_destination attribute</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="SingleConsumer" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(emit)->size() <= 1]]>
				<dispname>Every OutEventPort can emit events to only one InEventPort</dispname>
			</constraint>
			<constraint name="ValidDstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "dst" over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidEmitsHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(emit)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, an InEventPort can be connected to an OutEventPort only when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidEventConnection" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[if self.single_destination
then
     self.attachingConnections(publish)->size() = 0
else
     self.attachingConnections(emit)->size() = 0
endif
]]>
				<dispname>The type of an OutEventPort's connections  must agree with the value of its single_destination attribute.</dispname>
			</constraint>
			<constraint name="ValidEventSourcePublishdstCardinality54" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", EventSourcePublish ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OutEventPort as "dst" over EventSourcePublish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(EventSourceDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only OutEventPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidPublishConnection" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let connectors = self.connectedFCOs (publish) in
     connectors->forAll ( c1, c2 |  c1 <> c2 => c1.parent() <> c2.parent() )]]>
				<dispname>An OutEventPort can only be connected to multiple PublishConnectors  when shared between a ComponentAssembly/Component and it's reference.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality129" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "src" over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<constraint name="ValidemitdstCardinality144" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", emit ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OutEventPort as "dst" over emit, has to match 0..1.</dispname>
			</constraint>
			<attrdef name="single_destination" metaref = "1196" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<regnode name = "icon" value ="outeventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "OutParameter" metaref = "1197">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="out.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PackageConfigurationReference" metaref = "1198">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPackageConfigurationReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>PackageConfigurationReference cannot be null</dispname>
			</constraint>
			<constraint name="ValidpackagesrcCardinality147" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", package ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PackageConfigurationReference as "src" over package, has to match 1.</dispname>
			</constraint>
			<regnode name = "icon" value ="PackageConfigurationReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PackageConfiguration"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PathReference" metaref = "3065">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPathReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are disallowed</dispname>
			</constraint>
			<constraint name="ValidCriticalPathsrcCardinality39" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", CriticalPath ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PathReference as "src" over CriticalPath, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "Path"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ProvidedRequestPort" metaref = "1199" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyProvidedRequestPort"></regnode>
			<constraint name="MatchingFacet" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(FacetDelegate)  in
 consumers->forAll ( i : InEventPort |  self.refersTo().name() = i.refersTo().name() )]]>
				<dispname>A ProvidedRequestPort can only be delegated to another ProvidedRequestPort of the same type</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidDstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "dst" over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidInvokesHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(invoke)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, a ProvidedRequestPort can only be connected to a RequiredRequestPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(FacetDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only ProvidedRequestPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality129" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "src" over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="providedrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "QoSCharRef" metaref = "3472">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyQoSCharRef"></regnode>
			<constraint name="NoNullQoSCharReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null References to QoS charcteristics is not allowed.</dispname>
			</constraint>
			<pointerspec name = "ref">
			</pointerspec>
		</reference>
		<reference name = "RequiredRequestPort" metaref = "1201" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider multiple_connections">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyRequiredRequestPort"></regnode>
			<constraint name="MatchingProvidedRequestPort" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let facets = self.connectedFCOs(invoke) in
  facets->forAll ( i : ProvidedRequestPort | 
     let supertypes = i.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
         (supertypes->one (k: gme::FCO | k.name() = self.refersTo().name())
             or self.refersTo().name() = i.refersTo().name() )
         
)]]>
				<dispname>A RequiredRequestPort should be connected to a ProvidedRequestPort of the same type, or the RequiredRequestPort should be a supertype of ProvidedRequestPort</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidDstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "dst" over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidInvokesHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(invoke)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, an RequiredRequestPort can only be connected to an ProvidedRequestPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(ReceptacleDelegate)->forAll (x | x.parent()  = self.parent() implies x <> self)]]>
				<dispname>Only RequiredRequestPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidReceptacleConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.multiple_connections => self.attachingConnections(invoke)->size() <= 1
]]>
				<dispname>A RequiredRequestPort can be connected to multiple ProvidedRequestPorts only if its multiple_connections attribute is true.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality129" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "src" over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="multiple_connections" metaref = "1202" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ReturnType" metaref = "1203">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyReturnType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="return.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "SetException" metaref = "1204">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySetException"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="setexception.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "SharedComponentReference" metaref = "3182">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySharedComponentReference"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentRef"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Supports" metaref = "1205">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySupports"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="supports.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Variable" metaref = "3437">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyVariable"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Undefined variable (null reference)</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "RealNumber"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WorkerType" metaref = "2987">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyWorkerType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Undefined type (null reference)</dispname>
			</constraint>
			<regnode name = "icon" value ="workerref.gif"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Worker"></pointeritem>
			</pointerspec>
		</reference>
		<model name = "Action" metaref = "3343" attributes = "Repetitions LogAction" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="DanglingAction" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[if self.kindName () = "Action" and self.isInstance () then
  let parent : Component = self.parent () in
  let workers = parent.parts (WorkerType) in

  workers.exists (iter : WorkerType | iter->name () = self.name ())
else
  true
endif]]>
				<dispname>The name of action instances must match the name of a worker.</dispname>
			</constraint>
			<constraint name="ValidEffectdstCardinality46" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as "dst" over Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTransitionsrcCardinality135" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as "src" over Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "2916" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "2917" attributes = "Repetitions LogAction" >
				<part metaref = "2918" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Aggregate" metaref = "1206" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="aggregate.bmp"></regnode>
			<constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
				<dispname>Members of an aggregate type must have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Member" metaref = "1207" kind = "Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "1208" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1209" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ArtifactContainer" metaref = "1210" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueImplementationArtifactReferences" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.referenceParts(ImplementationArtifactReference) in
   artifacts->isUnique (i : ImplementationArtifactReference | i.name.trim())]]>
				<dispname>ImplementationArtifactReferences should have unique names</dispname>
			</constraint>
			<constraint name="UniqueImplementationArtifacts" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.atomParts(ImplementationArtifact) in
   artifacts->isUnique (i : ImplementationArtifact | i.name.trim())]]>
				<dispname>Implementation Artifacts should have unique names</dispname>
			</constraint>
			<constraint name="ValidArtifactContainerPartCardinality151" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ImplementationArtifact" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ArtifactContainer, has to match 1..*.</dispname>
			</constraint>
			<role name = "ArtifactDependency" metaref = "1211" kind = "ArtifactDependency"></role>
			<role name = "ArtifactDependsOn" metaref = "1212" kind = "ArtifactDependsOn"></role>
			<role name = "ArtifactDeployRequirement" metaref = "1213" kind = "ArtifactDeployRequirement"></role>
			<role name = "ArtifactExecParameter" metaref = "1214" kind = "ArtifactExecParameter"></role>
			<role name = "ArtifactInfoProperty" metaref = "1215" kind = "ArtifactInfoProperty"></role>
			<role name = "ImplementationArtifact" metaref = "1216" kind = "ImplementationArtifact"></role>
			<role name = "ImplementationArtifactReference" metaref = "1217" kind = "ImplementationArtifactReference"></role>
			<role name = "Property" metaref = "1218" kind = "Property"></role>
			<role name = "Requirement" metaref = "1219" kind = "Requirement"></role>
			<aspect name = "Packaging" metaref = "1220" >
				<part metaref = "1221" role = "ArtifactDependency" primary = "yes" linked = "no"></part>
				<part metaref = "1222" role = "ArtifactDependsOn" primary = "yes" linked = "no"></part>
				<part metaref = "1223" role = "ArtifactDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "1224" role = "ArtifactExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "1225" role = "ArtifactInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1226" role = "ImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "1227" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "1228" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "1229" role = "Requirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Attribute" metaref = "1230" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
				<regnode name = "icon" value ="attribute.bmp"></regnode>
			<constraint name="DelegateOrValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size = 1 implies self.attachingConnections(AttributeDelegate)->size = 0]]>
				<dispname>A value can be specified for an Attribute directly, or it can have a value delegated to it via an AttributeMapping, but not both.</dispname>
			</constraint>
			<constraint name="MatchingAttributeDelegateType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let delegates = self.connectedFCOs(AttributeDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can be used to delegate values to attributes of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let props = self.connectedFCOs(AttributeValue) in
    attrs->forAll (attr : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>The type of the value of a property should match the type of the attribute.</dispname>
			</constraint>
			<constraint name="SingleDelegate" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeDelegate)->size() <= 1]]>
				<dispname>An attribute can be delegated to from only one AttributeMapping</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size() <= 1]]>
				<dispname>Only one value can be specified for an attribute</dispname>
			</constraint>
			<constraint name="ValidAttributeDelegatesrcCardinality17" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", AttributeDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ReadonlyAttribute as "src" over AttributeDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidAttributeValuedstCardinality24" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", AttributeValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ReadonlyAttribute as "dst" over AttributeValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidReadonlyAttributePartCardinality174" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "AttributeMember" metaref = "1231" kind = "AttributeMember"></role>
			<role name = "GetException" metaref = "1232" kind = "GetException"></role>
			<role name = "SetException" metaref = "1233" kind = "SetException"></role>
			<aspect name = "InterfaceDefinition" metaref = "1234" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1235" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1236" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1237" role = "SetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "BenchmarkAnalysis" metaref = "1238" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "Average" metaref = "1239" kind = "Average"></role>
			<role name = "BenchmarkCharacteristics" metaref = "1240" kind = "BenchmarkCharacteristics"></role>
			<role name = "CompRef" metaref = "1241" kind = "CompRef"></role>
			<role name = "ComponentOperation" metaref = "1242" kind = "ComponentOperation"></role>
			<role name = "Event" metaref = "1243" kind = "Event"></role>
			<role name = "EventRef" metaref = "1244" kind = "EventRef"></role>
			<role name = "FactoryOperation" metaref = "1245" kind = "FactoryOperation"></role>
			<role name = "FixedIterationBenchmarks" metaref = "1246" kind = "FixedIterationBenchmarks"></role>
			<role name = "Jitter" metaref = "1247" kind = "Jitter"></role>
			<role name = "Latency" metaref = "1248" kind = "Latency"></role>
			<role name = "LookupOperation" metaref = "1249" kind = "LookupOperation"></role>
			<role name = "Maximum" metaref = "1250" kind = "Maximum"></role>
			<role name = "MetricConnection" metaref = "1251" kind = "MetricConnection"></role>
			<role name = "Minimum" metaref = "1252" kind = "Minimum"></role>
			<role name = "OnewayOperation" metaref = "1253" kind = "OnewayOperation"></role>
			<role name = "OperationRef" metaref = "1254" kind = "OperationRef"></role>
			<role name = "PeriodicBenchmarks" metaref = "1255" kind = "PeriodicBenchmarks"></role>
			<role name = "Task" metaref = "1256" kind = "Task"></role>
			<role name = "TaskSet" metaref = "1257" kind = "TaskSet"></role>
			<role name = "Throughput" metaref = "1258" kind = "Throughput"></role>
			<role name = "TimeProbe" metaref = "1259" kind = "TimeProbe"></role>
			<role name = "TimerConnection" metaref = "1260" kind = "TimerConnection"></role>
			<role name = "TimerEventSinkConn" metaref = "1261" kind = "TimerEventSinkConn"></role>
			<role name = "TriggerBenchmarks" metaref = "1262" kind = "TriggerBenchmarks"></role>
			<role name = "TwowayOperation" metaref = "1263" kind = "TwowayOperation"></role>
			<role name = "WorkLoadOperationConnection" metaref = "1264" kind = "WorkLoadOperationConnection"></role>
			<role name = "WorkloadCharacteristics" metaref = "1265" kind = "WorkloadCharacteristics"></role>
			<aspect name = "ComponentMetrics" metaref = "1266" >
				<part metaref = "1267" role = "BenchmarkCharacteristics" primary = "yes" linked = "no"></part>
				<part metaref = "1268" role = "CompRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1269" role = "ComponentOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1270" role = "EventRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1271" role = "FixedIterationBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "1272" role = "Latency" primary = "yes" linked = "no"></part>
				<part metaref = "1273" role = "MetricConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1274" role = "OperationRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1275" role = "PeriodicBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "1276" role = "Task" primary = "yes" linked = "no"></part>
				<part metaref = "1277" role = "TaskSet" primary = "yes" linked = "no"></part>
				<part metaref = "1278" role = "Throughput" primary = "yes" linked = "no"></part>
				<part metaref = "1279" role = "TimeProbe" primary = "yes" linked = "no"></part>
				<part metaref = "1280" role = "TimerConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1281" role = "TimerEventSinkConn" primary = "yes" linked = "no"></part>
				<part metaref = "1282" role = "TriggerBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "1283" role = "WorkLoadOperationConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1284" role = "WorkloadCharacteristics" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Bridge" metaref = "1285" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Bridge"></regnode>
			<constraint name="ValidBridge2InterconnectdstCardinality28" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Bridge2Interconnect ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Bridge as "dst" over Bridge2Interconnect, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidInterconnect2BridgesrcCardinality79" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Interconnect2Bridge ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Bridge as "src" over Interconnect2Bridge, has to match 1..*.</dispname>
			</constraint>
			<role name = "Resource" metaref = "1286" kind = "Resource"></role>
			<aspect name = "Target" metaref = "1287" attributes = "label" >
				<part metaref = "1288" role = "Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Capability" metaref = "1289" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Capability.bmp"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<constraint name="NoCapacityOrQuantity" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let sp = self.modelParts(SatisfierProperty) in
          sp->forAll (elem : SatisfierProperty | elem.SatisfierPropertyKind <> #Capacity && elem.SatisfierPropertyKind <> #Quantity)]]>
				<dispname>Capability elements cannot have a SatisfierProperty with kind Capacity or Quantity</dispname>
			</constraint>
			<role name = "SatisfierProperty" metaref = "1290" kind = "SatisfierProperty"></role>
			<aspect name = "Packaging" metaref = "1291" attributes = "resourceType" >
				<part metaref = "1292" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Component" metaref = "1293" attributes = "VersionTag SpecifyIdTag UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x80000004" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" implies self.isInstance()
   endif]]>
				<dispname>Only assembly or component instances can be created inside a Component Assembly</dispname>
			</constraint>
			<constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
				<dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
			</constraint>
			<constraint name="NoEmitsUsesPortNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ()->forAll (
  a, b : gme::Reference | (a.oclAsType (OutEventPort).single_destination = true
                                        and b.isTypeOf (RequiredRequestPort)
                                       )
  implies
    a.name <> b.name)]]>
				<dispname>None of a Component's RequiredRequestPort names can be the same as any of its single-destination OutEventPort names</dispname>
			</constraint>
			<constraint name="NoInheritsAndSupports" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts ("Inherits")->size () > 0 implies parts ("Supports")->size () = 0]]>
				<dispname>A component that has a base component may not also support interfaces</dispname>
			</constraint>
			<constraint name="NoSameTypePortNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts (InEventPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (OutEventPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (ProvidedRequestPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (RequiredRequestPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)]]>
				<dispname>A Component's ports of the category must all have unique names</dispname>
			</constraint>
			<constraint name="NonRedundantProperties" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.bagConnectedFCOs (AssemblyConfigProperty)->isUnique( x: Property | x.name().trim())]]>
				<dispname>A Property can be associated with a Component only once.</dispname>
			</constraint>
			<constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts ("Inherits")->size < 2]]>
				<dispname>ComponentDef and ComponentManager may have only one parent</dispname>
			</constraint>
			<constraint name="PropertyAsAttribute" eventmask = "0x800" depth = "1" priority = "2">
				<![CDATA[let properties = self.connectedFCOs(AssemblyConfigProperty) in
  properties->forAll (x : AssemblyConfigProperty |
        let attributes = self.modelParts(ReadonlyAttribute) in
             not attributes->exists (attr : ReadonlyAttribute |
                           x.name() = attr.name() )) ]]>
				<dispname>A Property has the same name as an Attribute of the Component.  To specify values for the Component's attributes, connect the Property direcly to the attribute available as a port.</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let components = project.allInstancesOf (Component) in
   components->forAll  (x : Component | 
                         (self <> x)  
                            implies
                         (
                            (  x.UUID.trim() <> self.UUID.trim()  )
                              or
                            (  x.UUID.trim() = ""  or  self.UUID.trim() = ""   )
                         )
              )
                         ]]>
				<dispname>Every Component instance should have a unique UUID</dispname>
			</constraint>
			<constraint name="UniqueWorkerType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let workers = self->parts (WorkerType) in
   workers->isUnique (iter : WorkerType | iter->name ())]]>
				<dispname>Component contains duplicate worker names</dispname>
			</constraint>
			<constraint name="ValidComponentPartCardinality152" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Environment" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by Component, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Action" metaref = "3396" kind = "Action"></role>
			<role name = "Attribute" metaref = "1294" kind = "Attribute"></role>
			<role name = "CompositeAction" metaref = "3397" kind = "CompositeAction"></role>
			<role name = "Effect" metaref = "3346" kind = "Effect"></role>
			<role name = "Environment" metaref = "3347" kind = "Environment"></role>
			<role name = "Finish" metaref = "3348" kind = "Finish"></role>
			<role name = "InEventPort" metaref = "1295" kind = "InEventPort"></role>
			<role name = "Input" metaref = "3349" kind = "Input"></role>
			<role name = "InputAction" metaref = "3398" kind = "InputAction"></role>
			<role name = "MultiInput" metaref = "3419" kind = "MultiInput"></role>
			<role name = "OutEventPort" metaref = "1296" kind = "OutEventPort"></role>
			<role name = "OutputAction" metaref = "3399" kind = "OutputAction"></role>
			<role name = "PeriodicAction" metaref = "3400" kind = "PeriodicAction"></role>
			<role name = "ProvidedRequestPort" metaref = "1297" kind = "ProvidedRequestPort"></role>
			<role name = "ReadonlyAttribute" metaref = "1298" kind = "ReadonlyAttribute"></role>
			<role name = "RequiredRequestPort" metaref = "1299" kind = "RequiredRequestPort"></role>
			<role name = "State" metaref = "3350" kind = "State"></role>
			<role name = "Supports" metaref = "1300" kind = "Supports"></role>
			<role name = "Transition" metaref = "3351" kind = "Transition"></role>
			<role name = "Variable" metaref = "3438" kind = "Variable"></role>
			<role name = "WorkerType" metaref = "2988" kind = "WorkerType"></role>
			<aspect name = "InterfaceDefinition" metaref = "1301" attributes = "VersionTag SpecifyIdTag UUID label" >
				<part metaref = "1302" role = "Attribute" primary = "yes" linked = "yes"></part>
				<part metaref = "1303" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1304" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1305" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1306" role = "ReadonlyAttribute" primary = "yes" linked = "yes"></part>
				<part metaref = "1307" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1308" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
			<aspect name = "Behavior" metaref = "1978" attributes = "VersionTag SpecifyIdTag UUID label" >
				<part metaref = "3401" role = "Action" primary = "yes" linked = "no"></part>
				<part metaref = "3402" role = "CompositeAction" primary = "yes" linked = "no"></part>
				<part metaref = "3352" role = "Effect" primary = "yes" linked = "no"></part>
				<part metaref = "3353" role = "Environment" primary = "yes" linked = "no"></part>
				<part metaref = "3354" role = "Finish" primary = "yes" linked = "no"></part>
				<part metaref = "2000" role = "InEventPort" primary = "no" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "3355" role = "Input" primary = "yes" linked = "no"></part>
				<part metaref = "3403" role = "InputAction" primary = "yes" linked = "no"></part>
				<part metaref = "3420" role = "MultiInput" primary = "yes" linked = "no"></part>
				<part metaref = "2001" role = "OutEventPort" primary = "no" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "3404" role = "OutputAction" primary = "yes" linked = "no"></part>
				<part metaref = "3405" role = "PeriodicAction" primary = "yes" linked = "no"></part>
				<part metaref = "2002" role = "ProvidedRequestPort" primary = "no" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "2003" role = "RequiredRequestPort" primary = "no" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "3356" role = "State" primary = "yes" linked = "no"></part>
				<part metaref = "3357" role = "Transition" primary = "yes" linked = "no"></part>
				<part metaref = "3439" role = "Variable" primary = "yes" linked = "no"></part>
				<part metaref = "2989" role = "WorkerType" primary = "yes" kindaspect = "Behavior" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentAssembly" metaref = "1309" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x80000004" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" implies self.isInstance()
   endif]]>
				<dispname>Only assembly or component instances can be created inside a Component Assembly</dispname>
			</constraint>
			<constraint name="RequiredComponentPackage" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let instances = self.modelParts(Component) in
let packages = project.allInstancesOf (ComponentPackage) in
instances->forAll (x : Component |
    let myType = x.ComponentParentType() in
         packages->exists (pkg: ComponentPackage | 
               let pkgInterfaces = pkg.connectedFCOs(PackageInterface) in 
               let mimpls = pkg.MonolithicImpls() in
               mimpls->size() >= 1 and pkgInterfaces->size() = 1 and
               mimpls->forAll (impl  : MonolithicImplementation | 
                     let impleIfs = impl.connectedFCOs(Implements) in 
                          impleIfs->size() = 1 and
                          impleIfs->forAll (ref1 : Reference | 
                                              pkgInterfaces->forAll (ref2 : Reference |  
                                                                     ref1.refersTo().name = ref2.refersTo().name
                                                                      and 
                                                                     ref1.refersTo().name = myType.name() 
                                                                    )
                                           ) 
                               )
                          )
                   )]]>
				<dispname>Every component instance in an assembly should have a corresponding MonolithicImplementation implementing its interface and packaged in a ComponentPackage.</dispname>
			</constraint>
			<constraint name="RequiredMonolithicImplementation" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let instances = self.modelParts(Component) in
let monolithicImpls = project.allInstancesOf (MonolithicImplementation) in
instances->forAll (x : Component | 
         let myType = x.ComponentParentType() in
                 monolithicImpls->exists ( impl : MonolithicImplementation | 
                    let interfaces = impl.connectedFCOs(Implements) in
                     interfaces->size() = 1 and
                         interfaces->exists (interface : Reference |
                             interface.refersTo().name() = myType.name() )  ) )
                                                            ]]>
				<dispname>Every component instance in an assembly should have a corresponding MonolithicImplementation, or there should exist a MonolithicImplementation for the corresponding component type</dispname>
			</constraint>
			<constraint name="UniqueAttributeMappingNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts(AttributeMapping)->isUnique( x : AttributeMapping | x.name().trim())]]>
				<dispname>AttributeMappings used in a ComponentAssembly should have unique names</dispname>
			</constraint>
			<constraint name="UniqueConnectorNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let connectors = self.atomParts(PublishConnector) in
          connectors->isUnique (i : PublishConnector | i.name.trim())]]>
				<dispname>Connectors used in a ComponentAssembly should have unique names</dispname>
			</constraint>
			<constraint name="UniqueInstanceName" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let components = self.modelParts(Component) in
          components->isUnique (i : Component | i.name.trim())]]>
				<dispname>Components of an Assembly should have unique names</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let mappings = self.referenceParts (AttributeMapping) in
    let children = self.modelParts(ComponentAssembly) in
           mappings->forAll ( x : AttributeMapping | 
                let delegates = x.connectedFCOs("dstAttributeMappingDelegate", AttributeMappingDelegate) in
                       delegates->forAll ( y : FCO |
                              let  delParent : Model = y.parent() in
                                          children->exists ( z : ComponentAssembly | delParent.name() = z.name() ) ) ) ]]>
				<dispname>AttributeMappings can only be delegated from a high-level assembly to sub-assemblies, and not vice-versa (Change the connection direction)</dispname>
			</constraint>
			<constraint name="ValidCriticalPathdstCardinality40" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", CriticalPath ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentAssembly as "dst" over CriticalPath, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidImplementsdstCardinality72" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Implements ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentImplementation as "dst" over Implements, has to match 0..1.</dispname>
			</constraint>
			<role name = "AssemblyConfigProperty" metaref = "2866" kind = "AssemblyConfigProperty"></role>
			<role name = "AssemblyDeployRequirement" metaref = "2867" kind = "AssemblyDeployRequirement"></role>
			<role name = "AssemblyselectRequirement" metaref = "2868" kind = "AssemblyselectRequirement"></role>
			<role name = "AttributeDelegate" metaref = "2869" kind = "AttributeDelegate"></role>
			<role name = "AttributeMapping" metaref = "2870" kind = "AttributeMapping"></role>
			<role name = "AttributeMappingDelegate" metaref = "2871" kind = "AttributeMappingDelegate"></role>
			<role name = "AttributeMappingValue" metaref = "2872" kind = "AttributeMappingValue"></role>
			<role name = "AttributeValue" metaref = "2873" kind = "AttributeValue"></role>
			<role name = "Component" metaref = "1318" kind = "Component"></role>
			<role name = "ComponentAssembly" metaref = "1319" kind = "ComponentAssembly"></role>
			<role name = "ComponentAssemblyReference" metaref = "2874" kind = "ComponentAssemblyReference"></role>
			<role name = "ComponentPackage" metaref = "1320" kind = "ComponentPackage"></role>
			<role name = "ComponentPackageReference" metaref = "1321" kind = "ComponentPackageReference"></role>
			<role name = "ComponentRef" metaref = "2875" kind = "ComponentRef"></role>
			<role name = "EventSinkDelegate" metaref = "2876" kind = "EventSinkDelegate"></role>
			<role name = "EventSinkPublish" metaref = "3482" kind = "EventSinkPublish"></role>
			<role name = "EventSourceDelegate" metaref = "2877" kind = "EventSourceDelegate"></role>
			<role name = "EventSourcePublish" metaref = "3483" kind = "EventSourcePublish"></role>
			<role name = "ExternalDelegate" metaref = "2878" kind = "ExternalDelegate"></role>
			<role name = "ExternalReferenceEndPoint" metaref = "2879" kind = "ExternalReferenceEndPoint"></role>
			<role name = "FacetDelegate" metaref = "2880" kind = "FacetDelegate"></role>
			<role name = "FacetInvoke" metaref = "3484" kind = "FacetInvoke"></role>
			<role name = "InEventPort" metaref = "1327" kind = "InEventPort"></role>
			<role name = "OutEventPort" metaref = "1328" kind = "OutEventPort"></role>
			<role name = "PortQoS" metaref = "3485" kind = "PortQoS"></role>
			<role name = "Property" metaref = "1329" kind = "Property"></role>
			<role name = "ProvidedRequestPort" metaref = "1330" kind = "ProvidedRequestPort"></role>
			<role name = "PublishConnector" metaref = "2881" kind = "PublishConnector"></role>
			<role name = "QoSCharRef" metaref = "3486" kind = "QoSCharRef"></role>
			<role name = "QoSConnector" metaref = "3487" kind = "QoSConnector"></role>
			<role name = "QoSReq" metaref = "3489" kind = "QoSReq"></role>
			<role name = "RecepInvoke" metaref = "3491" kind = "RecepInvoke"></role>
			<role name = "ReceptacleDelegate" metaref = "2882" kind = "ReceptacleDelegate"></role>
			<role name = "RequiredRequestPort" metaref = "1333" kind = "RequiredRequestPort"></role>
			<role name = "Requirement" metaref = "1334" kind = "Requirement"></role>
			<role name = "deliverTo" metaref = "2883" kind = "deliverTo"></role>
			<role name = "emit" metaref = "2884" kind = "emit"></role>
			<role name = "invoke" metaref = "2885" kind = "invoke"></role>
			<role name = "publish" metaref = "2886" kind = "publish"></role>
			<aspect name = "Packaging" metaref = "1339" attributes = "UUID label" >
				<part metaref = "2887" role = "AssemblyConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "2888" role = "AssemblyDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "2889" role = "AssemblyselectRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "2890" role = "AttributeDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "2891" role = "AttributeMapping" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "2892" role = "AttributeMappingDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "2893" role = "AttributeMappingValue" primary = "yes" linked = "no"></part>
				<part metaref = "2894" role = "AttributeValue" primary = "yes" linked = "no"></part>
				<part metaref = "1348" role = "Component" primary = "yes" linked = "no"></part>
				<part metaref = "1349" role = "ComponentAssembly" primary = "yes" linked = "no"></part>
				<part metaref = "2895" role = "ComponentAssemblyReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "1350" role = "ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "1351" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
				<part metaref = "2896" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "2897" role = "EventSinkDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "2898" role = "EventSourceDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "2899" role = "ExternalDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "2900" role = "ExternalReferenceEndPoint" primary = "yes" linked = "no"></part>
				<part metaref = "2901" role = "FacetDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "1357" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1358" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1359" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "1360" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "2902" role = "PublishConnector" primary = "yes" linked = "no"></part>
				<part metaref = "2903" role = "ReceptacleDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "1363" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1364" role = "Requirement" primary = "yes" linked = "no"></part>
				<part metaref = "2904" role = "deliverTo" primary = "yes" linked = "no"></part>
				<part metaref = "2905" role = "emit" primary = "yes" linked = "no"></part>
				<part metaref = "2906" role = "invoke" primary = "yes" linked = "no"></part>
				<part metaref = "2907" role = "publish" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "3084" attributes = "UUID label" >
				<part metaref = "3085" role = "Component" primary = "no" linked = "no"></part>
				<part metaref = "3492" role = "ComponentAssemblyReference" primary = "no" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "3493" role = "ComponentRef" primary = "no" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3494" role = "EventSinkPublish" primary = "yes" linked = "no"></part>
				<part metaref = "3495" role = "EventSourcePublish" primary = "yes" linked = "no"></part>
				<part metaref = "3496" role = "FacetInvoke" primary = "yes" linked = "no"></part>
				<part metaref = "3497" role = "InEventPort" primary = "no" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "3498" role = "OutEventPort" primary = "no" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "3499" role = "PortQoS" primary = "yes" linked = "no"></part>
				<part metaref = "3500" role = "Property" primary = "no" linked = "no"></part>
				<part metaref = "3501" role = "ProvidedRequestPort" primary = "no" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "3502" role = "QoSCharRef" primary = "yes" linked = "no"></part>
				<part metaref = "3503" role = "QoSConnector" primary = "yes" linked = "no"></part>
				<part metaref = "3504" role = "QoSReq" primary = "yes" linked = "no"></part>
				<part metaref = "3505" role = "RecepInvoke" primary = "yes" linked = "no"></part>
				<part metaref = "3506" role = "RequiredRequestPort" primary = "no" kindaspect = "InterfaceDefinition" linked = "yes"></part>
			</aspect>
		</model>
		<model name = "ComponentContainer" metaref = "1369" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidComponentContainerPartCardinality153" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "ComponentConfigProperty" metaref = "1370" kind = "ComponentConfigProperty"></role>
			<role name = "ComponentInfoProperty" metaref = "1371" kind = "ComponentInfoProperty"></role>
			<role name = "ComponentProperty" metaref = "1372" kind = "ComponentProperty"></role>
			<role name = "ComponentPropertyDescription" metaref = "1373" kind = "ComponentPropertyDescription"></role>
			<role name = "ComponentRef" metaref = "1374" kind = "ComponentRef"></role>
			<role name = "Property" metaref = "1375" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1376" >
				<part metaref = "1377" role = "ComponentConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1378" role = "ComponentInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1379" role = "ComponentProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1380" role = "ComponentPropertyDescription" primary = "yes" linked = "no"></part>
				<part metaref = "1381" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1382" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentFactory" metaref = "1383" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="componentfactory.bmp"></regnode>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
				<dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts ("Inherits")->size < 2]]>
				<dispname>ComponentDef and ComponentManager may have only one parent</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidComponentFactoryPartCardinality154" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "LookupKey" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidManagesComponentdstCardinality88" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", ManagesComponent ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentFactory as "dst" over ManagesComponent, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Aggregate" metaref = "1384" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1385" kind = "Alias"></role>
			<role name = "Attribute" metaref = "1386" kind = "Attribute"></role>
			<role name = "Collection" metaref = "1387" kind = "Collection"></role>
			<role name = "Constant" metaref = "1388" kind = "Constant"></role>
			<role name = "Enum" metaref = "1389" kind = "Enum"></role>
			<role name = "Exception" metaref = "1390" kind = "Exception"></role>
			<role name = "FactoryOperation" metaref = "1391" kind = "FactoryOperation"></role>
			<role name = "Inherits" metaref = "1392" kind = "Inherits"></role>
			<role name = "LookupKey" metaref = "1393" kind = "LookupKey"></role>
			<role name = "LookupOperation" metaref = "1394" kind = "LookupOperation"></role>
			<role name = "OnewayOperation" metaref = "1395" kind = "OnewayOperation"></role>
			<role name = "ReadonlyAttribute" metaref = "1396" kind = "ReadonlyAttribute"></role>
			<role name = "Supports" metaref = "1397" kind = "Supports"></role>
			<role name = "SwitchedAggregate" metaref = "1398" kind = "SwitchedAggregate"></role>
			<role name = "TwowayOperation" metaref = "1399" kind = "TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "1400" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1401" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1402" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1403" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "1404" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1405" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1406" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1407" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1408" role = "FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1409" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1410" role = "LookupKey" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1411" role = "LookupOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1412" role = "OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1413" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "1414" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1415" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1416" role = "TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentImplementationContainer" metaref = "1417" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ImplementationXor" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[(self.modelParts (ComponentAssembly)->size = 1 implies self.atomParts (MonolithicImplementation)->size = 0)and
          (self.atomParts (MonolithicImplementation)->size = 1 implies self.modelParts (ComponentAssembly)->size = 0)]]>
				<dispname>ComponentImplementation can either be Monolithic or be assembly based, but not both</dispname>
			</constraint>
			<constraint name="UniquePrimaryArtifacts" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.referenceParts(ImplementationArtifactReference) in
   artifacts->isUnique (i : ImplementationArtifactReference | i.name.trim())]]>
				<dispname>Primary Artifacts of a MonolithicImplementation should have unique names</dispname>
			</constraint>
			<constraint name="ValidComponentImplementationContainerPartCardinality155" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentImplementation" ) -> size + self.parts( "MonolithicImplementation" ) -> size + self.parts( "ComponentAssembly" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidComponentImplementationContainerPartCardinality156" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidComponentImplementationContainerPartCardinality157" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Implements" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidComponentImplementationContainerPartCardinality158" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PathReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "Capability" metaref = "1418" kind = "Capability"></role>
			<role name = "ComponentAssembly" metaref = "1419" kind = "ComponentAssembly"></role>
			<role name = "ComponentRef" metaref = "1420" kind = "ComponentRef"></role>
			<role name = "ConfigProperty" metaref = "1421" kind = "ConfigProperty"></role>
			<role name = "CriticalPath" metaref = "3066" kind = "CriticalPath"></role>
			<role name = "ImplementationArtifactReference" metaref = "1422" kind = "ImplementationArtifactReference"></role>
			<role name = "ImplementationCapability" metaref = "1423" kind = "ImplementationCapability"></role>
			<role name = "ImplementationDependency" metaref = "1424" kind = "ImplementationDependency"></role>
			<role name = "ImplementationDependsOn" metaref = "1425" kind = "ImplementationDependsOn"></role>
			<role name = "ImplementationRequirement" metaref = "1426" kind = "ImplementationRequirement"></role>
			<role name = "Implements" metaref = "1427" kind = "Implements"></role>
			<role name = "InfoProperty" metaref = "1428" kind = "InfoProperty"></role>
			<role name = "MonolithDeployRequirement" metaref = "1429" kind = "MonolithDeployRequirement"></role>
			<role name = "MonolithExecParameter" metaref = "1430" kind = "MonolithExecParameter"></role>
			<role name = "MonolithicImplementation" metaref = "1431" kind = "MonolithicImplementation"></role>
			<role name = "MonolithprimaryArtifact" metaref = "1432" kind = "MonolithprimaryArtifact"></role>
			<role name = "PathReference" metaref = "3067" kind = "PathReference"></role>
			<role name = "Property" metaref = "1433" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1434" >
				<part metaref = "1435" role = "Capability" primary = "yes" linked = "no"></part>
				<part metaref = "1436" role = "ComponentAssembly" primary = "yes" linked = "no"></part>
				<part metaref = "1437" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1438" role = "ConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "3068" role = "CriticalPath" primary = "yes" linked = "no"></part>
				<part metaref = "1439" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "1440" role = "ImplementationCapability" primary = "yes" linked = "no"></part>
				<part metaref = "1441" role = "ImplementationDependency" primary = "yes" linked = "no"></part>
				<part metaref = "1442" role = "ImplementationDependsOn" primary = "yes" linked = "no"></part>
				<part metaref = "1443" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "1444" role = "Implements" primary = "yes" linked = "no"></part>
				<part metaref = "1445" role = "InfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1446" role = "MonolithDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "1447" role = "MonolithExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "1448" role = "MonolithicImplementation" primary = "yes" linked = "no"></part>
				<part metaref = "1449" role = "MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "3069" role = "PathReference" primary = "yes" kindaspect = "PathDiagram" linked = "no"></part>
				<part metaref = "1450" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentPropertyDescription" metaref = "1451" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ComponentProperty.bmp"></regnode>
			<constraint name="ValidComponentPropertyDescriptionPartCardinality159" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentPropertyDescription, has to match 1.</dispname>
			</constraint>
			<role name = "DataType" metaref = "1452" kind = "DataType"></role>
			<aspect name = "Packaging" metaref = "1453" >
				<part metaref = "1454" role = "DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CompositeAction" metaref = "3358" attributes = "Repetitions LogAction" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="composite.bmp"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="DanglingAction" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[if self.kindName () = "Action" and self.isInstance () then
  let parent : Component = self.parent () in
  let workers = parent.parts (WorkerType) in

  workers.exists (iter : WorkerType | iter->name () = self.name ())
else
  true
endif]]>
				<dispname>The name of action instances must match the name of a worker.</dispname>
			</constraint>
			<constraint name="ValidCompositeActionPartCardinality160" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Finish" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by CompositeAction, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidCompositeActionPartCardinality161" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "InputAction" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by CompositeAction, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidEffectdstCardinality46" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as "dst" over Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTransitionsrcCardinality135" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as "src" over Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "Action" metaref = "3359" kind = "Action"></role>
			<role name = "CompositeAction" metaref = "3360" kind = "CompositeAction"></role>
			<role name = "Effect" metaref = "3406" kind = "Effect"></role>
			<role name = "Finish" metaref = "3407" kind = "Finish"></role>
			<role name = "InputAction" metaref = "3361" kind = "InputAction"></role>
			<role name = "OutputAction" metaref = "3362" kind = "OutputAction"></role>
			<role name = "Property" metaref = "3326" kind = "Property"></role>
			<role name = "State" metaref = "3408" kind = "State"></role>
			<role name = "Transition" metaref = "3409" kind = "Transition"></role>
			<aspect name = "Behavior" metaref = "3329" attributes = "Repetitions LogAction" >
				<part metaref = "3391" role = "Action" primary = "yes" linked = "no"></part>
				<part metaref = "3392" role = "CompositeAction" primary = "yes" linked = "no"></part>
				<part metaref = "3410" role = "Effect" primary = "yes" linked = "no"></part>
				<part metaref = "3411" role = "Finish" primary = "yes" linked = "no"></part>
				<part metaref = "3393" role = "InputAction" primary = "yes" linked = "no"></part>
				<part metaref = "3394" role = "OutputAction" primary = "yes" linked = "no"></part>
				<part metaref = "3331" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "3412" role = "State" primary = "yes" linked = "no"></part>
				<part metaref = "3413" role = "Transition" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ConnectedComponent" metaref = "2011" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidDstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "dst" over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality129" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as "src" over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<role name = "DstEdge" metaref = "2114" kind = "DstEdge"></role>
			<role name = "InEventPort" metaref = "2013" kind = "InEventPort"></role>
			<role name = "OutEventPort" metaref = "2014" kind = "OutEventPort"></role>
			<role name = "ProvidedRequestPort" metaref = "2015" kind = "ProvidedRequestPort"></role>
			<role name = "RequiredRequestPort" metaref = "2016" kind = "RequiredRequestPort"></role>
			<aspect name = "PathDiagram" metaref = "3131" >
				<part metaref = "3132" role = "DstEdge" primary = "yes" linked = "no"></part>
				<part metaref = "3133" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3134" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3135" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3136" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "DeploymentPlan" metaref = "1455" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniquePropertyNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let properties = self.modelParts(Property) in
          properties->isUnique (i : Property | i.name.trim())]]>
				<dispname>Names of the properties in a deployment plan should be unique</dispname>
			</constraint>
			<role name = "CollocationGroup" metaref = "1456" kind = "CollocationGroup"></role>
			<role name = "ComponentAssemblyReference" metaref = "1457" kind = "ComponentAssemblyReference"></role>
			<role name = "ComponentRef" metaref = "1458" kind = "ComponentRef"></role>
			<role name = "InstanceMapping" metaref = "1459" kind = "InstanceMapping"></role>
			<role name = "NodeReference" metaref = "1460" kind = "NodeReference"></role>
			<role name = "Property" metaref = "3626" kind = "Property"></role>
			<role name = "SharedComponentReference" metaref = "3183" kind = "SharedComponentReference"></role>
			<aspect name = "NodeMapping" metaref = "1461" attributes = "UUID label" >
				<part metaref = "1462" role = "CollocationGroup" primary = "yes" linked = "no"></part>
				<part metaref = "1463" role = "ComponentAssemblyReference" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "1464" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1465" role = "InstanceMapping" primary = "yes" linked = "no"></part>
				<part metaref = "1466" role = "NodeReference" primary = "yes" kindaspect = "Target" linked = "no"></part>
				<part metaref = "3627" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "3184" role = "SharedComponentReference" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Domain" metaref = "1467" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Domain"></regnode>
			<role name = "Bridge" metaref = "1468" kind = "Bridge"></role>
			<role name = "Bridge2Interconnect" metaref = "1469" kind = "Bridge2Interconnect"></role>
			<role name = "Interconnect" metaref = "1470" kind = "Interconnect"></role>
			<role name = "Interconnect2Bridge" metaref = "1471" kind = "Interconnect2Bridge"></role>
			<role name = "Interconnect2Node" metaref = "1472" kind = "Interconnect2Node"></role>
			<role name = "Node" metaref = "1473" kind = "Node"></role>
			<role name = "Node2Interconnect" metaref = "1474" kind = "Node2Interconnect"></role>
			<role name = "Property" metaref = "1475" kind = "Property"></role>
			<role name = "SharedResource" metaref = "1476" kind = "SharedResource"></role>
			<role name = "Shares" metaref = "1477" kind = "Shares"></role>
			<aspect name = "Target" metaref = "1478" attributes = "UUID label" >
				<part metaref = "1479" role = "Bridge" primary = "yes" linked = "no"></part>
				<part metaref = "1480" role = "Bridge2Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "1481" role = "Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "1482" role = "Interconnect2Bridge" primary = "yes" linked = "no"></part>
				<part metaref = "1483" role = "Interconnect2Node" primary = "yes" linked = "no"></part>
				<part metaref = "1484" role = "Node" primary = "yes" linked = "no"></part>
				<part metaref = "1485" role = "Node2Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "1486" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "1487" role = "SharedResource" primary = "yes" linked = "no"></part>
				<part metaref = "1488" role = "Shares" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Enum" metaref = "1489" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="enum.bmp"></regnode>
			<constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" priority = "1">
				<![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
				<dispname>An enum's member names must be unique</dispname>
			</constraint>
			<constraint name="ValidEnumPartCardinality162" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "EnumValue" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by Enum, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "EnumValue" metaref = "1490" kind = "EnumValue"></role>
			<aspect name = "InterfaceDefinition" metaref = "1491" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1492" role = "EnumValue" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Event" metaref = "1493" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="event.bmp"></regnode>
			<constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (Event).abstract = false)
          in
          if (self.abstract = true) then
          concrete_parents->size = 0
          else
          concrete_parents->size < 2
          endif]]>
				<dispname>An abstract Event can have no concrete parent, if it is concrete it can have at most one.</dispname>
			</constraint>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "1494" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "Aggregate" metaref = "1495" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1496" kind = "Alias"></role>
			<role name = "Attribute" metaref = "1497" kind = "Attribute"></role>
			<role name = "Collection" metaref = "1498" kind = "Collection"></role>
			<role name = "Constant" metaref = "1499" kind = "Constant"></role>
			<role name = "Enum" metaref = "1500" kind = "Enum"></role>
			<role name = "Exception" metaref = "1501" kind = "Exception"></role>
			<role name = "FactoryOperation" metaref = "1502" kind = "FactoryOperation"></role>
			<role name = "Inherits" metaref = "1503" kind = "Inherits"></role>
			<role name = "MakeMemberPrivate" metaref = "1504" kind = "MakeMemberPrivate"></role>
			<role name = "Member" metaref = "1505" kind = "Member"></role>
			<role name = "OnewayOperation" metaref = "1506" kind = "OnewayOperation"></role>
			<role name = "PrivateFlag" metaref = "1507" kind = "PrivateFlag"></role>
			<role name = "ReadonlyAttribute" metaref = "1508" kind = "ReadonlyAttribute"></role>
			<role name = "Supports" metaref = "1509" kind = "Supports"></role>
			<role name = "SwitchedAggregate" metaref = "1510" kind = "SwitchedAggregate"></role>
			<role name = "TwowayOperation" metaref = "1511" kind = "TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "1512" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<part metaref = "1513" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1514" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1515" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "1516" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1517" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1518" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1519" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1520" role = "FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1521" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1522" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
				<part metaref = "1523" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1524" role = "OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1525" role = "PrivateFlag" primary = "yes" linked = "no"></part>
				<part metaref = "1526" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "1527" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1528" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1529" role = "TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Exception" metaref = "1552" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="exception.bmp"></regnode>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Member" metaref = "1553" kind = "Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "1554" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1555" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ExecutorProject" metaref = "1556" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidExecutorProjectPartCardinality163" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ExecutorProject, has to match 1.</dispname>
			</constraint>
			<constraint name="execOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>One An executor project can exist as a part of the Component Project</dispname>
			</constraint>
			<role name = "ImplementationArtifactReference" metaref = "1557" kind = "ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "1558" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "1559" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "FactoryOperation" metaref = "1560" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="factory.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation's exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation's parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ExceptionRef" metaref = "1561" kind = "ExceptionRef"></role>
			<role name = "InParameter" metaref = "1562" kind = "InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "1563" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1564" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1565" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "File" metaref = "1566" attributes = "PrefixTag" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueFileIncludes" eventmask = "0x400" depth = "1" priority = "1">
				<![CDATA[referenceParts (FileRef)->forAll (x, y : gme::Reference | x <> y implies x.refersTo ().name <> y.refersTo ().name)]]>
				<dispname>A file cannot be included more than once</dispname>
			</constraint>
			<role name = "Aggregate" metaref = "1567" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1568" kind = "Alias"></role>
			<role name = "Boxed" metaref = "1569" kind = "Boxed"></role>
			<role name = "Collection" metaref = "1570" kind = "Collection"></role>
			<role name = "Component" metaref = "1571" kind = "Component"></role>
			<role name = "ComponentFactory" metaref = "1572" kind = "ComponentFactory"></role>
			<role name = "ComponentRef" metaref = "1573" kind = "ComponentRef"></role>
			<role name = "Constant" metaref = "1574" kind = "Constant"></role>
			<role name = "Enum" metaref = "1575" kind = "Enum"></role>
			<role name = "Event" metaref = "1576" kind = "Event"></role>
			<role name = "Exception" metaref = "1577" kind = "Exception"></role>
			<role name = "FileRef" metaref = "1578" kind = "FileRef"></role>
			<role name = "ManagesComponent" metaref = "1579" kind = "ManagesComponent"></role>
			<role name = "Object" metaref = "1580" kind = "Object"></role>
			<role name = "Package" metaref = "1581" kind = "Package"></role>
			<role name = "SwitchedAggregate" metaref = "1582" kind = "SwitchedAggregate"></role>
			<role name = "ValueObject" metaref = "1583" kind = "ValueObject"></role>
			<aspect name = "InterfaceDefinition" metaref = "1584" attributes = "PrefixTag" >
				<part metaref = "1585" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1586" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1587" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1588" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1589" role = "Component" primary = "yes" linked = "no"></part>
				<part metaref = "1590" role = "ComponentFactory" primary = "yes" linked = "no"></part>
				<part metaref = "1591" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1592" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1593" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1594" role = "Event" primary = "yes" linked = "no"></part>
				<part metaref = "1595" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1596" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1597" role = "ManagesComponent" primary = "yes" linked = "no"></part>
				<part metaref = "1598" role = "Object" primary = "yes" linked = "no"></part>
				<part metaref = "1599" role = "Package" primary = "yes" linked = "no"></part>
				<part metaref = "1600" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1601" role = "ValueObject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ImplementationRequirement" metaref = "1602" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ImplementationRequirement.bmp"></regnode>
			<role name = "Property" metaref = "1603" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1604" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
				<part metaref = "1605" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "InputAction" metaref = "3371" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="InputAction.bmp"></regnode>
			<constraint name="ValidFinishsrcCardinality63" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Finish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InputActionBase as "src" over Finish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidInputsrcCardinality75" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Input ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InputActionBase as "src" over Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMultiInputsrcCardinality97" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", MultiInput ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InputActionBase as "src" over MultiInput, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "2023" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "2934" >
				<part metaref = "2935" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Interconnect" metaref = "1606" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Interconnect"></regnode>
			<constraint name="ValidInterconnect2NodedstCardinality82" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Interconnect2Node ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Interconnect as "dst" over Interconnect2Node, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidNode2InterconnectsrcCardinality99" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Node2Interconnect ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Interconnect as "src" over Node2Interconnect, has to match 1..*.</dispname>
			</constraint>
			<role name = "Resource" metaref = "1607" kind = "Resource"></role>
			<aspect name = "Target" metaref = "1608" attributes = "label" >
				<part metaref = "1609" role = "Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Latency" metaref = "1610" attributes = "fileName priority rate warmup iterations resolution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Latency.bmp"></regnode>
			<constraint name="ValidBenchmarkCharacteristicssrcCardinality25" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", BenchmarkCharacteristics ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as "src" over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMetricConnectionsrcCardinality89" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", MetricConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as "src" over MetricConnection, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWorkloadCharacteristicsdstCardinality140" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WorkloadCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as "dst" over WorkloadCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<role name = "Average" metaref = "1611" kind = "Average"></role>
			<role name = "Jitter" metaref = "1612" kind = "Jitter"></role>
			<role name = "Maximum" metaref = "1613" kind = "Maximum"></role>
			<role name = "Minimum" metaref = "1614" kind = "Minimum"></role>
			<aspect name = "DataAnalysis" metaref = "1615" attributes = "fileName priority rate warmup iterations resolution" >
				<part metaref = "1616" role = "Average" primary = "yes" linked = "no"></part>
				<part metaref = "1617" role = "Jitter" primary = "yes" linked = "no"></part>
				<part metaref = "1618" role = "Maximum" primary = "yes" linked = "no"></part>
				<part metaref = "1619" role = "Minimum" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "LookupOperation" metaref = "1620" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="lookup.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation's exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation's parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ExceptionRef" metaref = "1621" kind = "ExceptionRef"></role>
			<role name = "InParameter" metaref = "1622" kind = "InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "1623" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1624" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1625" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "MPC" metaref = "1626" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "Project" metaref = "1627" kind = "Project"></role>
			<role name = "Workspaces" metaref = "1628" kind = "Workspaces"></role>
			<aspect name = "Workspace" metaref = "1629" >
				<part metaref = "1630" role = "Project" primary = "yes" linked = "no"></part>
				<part metaref = "1631" role = "Workspaces" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Node" metaref = "1632" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Node"></regnode>
			<role name = "Resource" metaref = "1633" kind = "Resource"></role>
			<aspect name = "Target" metaref = "1634" attributes = "label" >
				<part metaref = "1635" role = "Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Object" metaref = "1636" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="object.bmp"></regnode>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[if (self.local = true) then
          true
          else
          let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
          parents->forAll (x : gme::Model | x.oclAsType (Object).local = false)
          endif]]>
				<dispname>A non-local Object cannot inherit from a local one</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="NotLocalAndAbstract" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not local or not abstract]]>
				<dispname>An ObjectDef cannot be both local and abstract</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "1637" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<attrdef name="local" metaref = "1638" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "Aggregate" metaref = "1639" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1640" kind = "Alias"></role>
			<role name = "Attribute" metaref = "1641" kind = "Attribute"></role>
			<role name = "Collection" metaref = "1642" kind = "Collection"></role>
			<role name = "Constant" metaref = "1643" kind = "Constant"></role>
			<role name = "Enum" metaref = "1644" kind = "Enum"></role>
			<role name = "Exception" metaref = "1645" kind = "Exception"></role>
			<role name = "Inherits" metaref = "1646" kind = "Inherits"></role>
			<role name = "OnewayOperation" metaref = "1647" kind = "OnewayOperation"></role>
			<role name = "ReadonlyAttribute" metaref = "1648" kind = "ReadonlyAttribute"></role>
			<role name = "SwitchedAggregate" metaref = "1649" kind = "SwitchedAggregate"></role>
			<role name = "TwowayOperation" metaref = "1650" kind = "TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "1651" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
				<part metaref = "1652" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1653" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1654" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "1655" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1656" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1657" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1658" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1659" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1660" role = "OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1661" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "1662" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1663" role = "TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "OnewayOperation" metaref = "1664" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="oneway.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation's parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "InParameter" metaref = "1665" kind = "InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "1666" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1667" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "OutputAction" metaref = "3374" attributes = "Repetitions LogAction" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="OutputAction.bmp"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="DanglingAction" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[if self.kindName () = "Action" and self.isInstance () then
  let parent : Component = self.parent () in
  let workers = parent.parts (WorkerType) in

  workers.exists (iter : WorkerType | iter->name () = self.name ())
else
  true
endif]]>
				<dispname>The name of action instances must match the name of a worker.</dispname>
			</constraint>
			<constraint name="UnknownOutput" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let parent : Component = self.parent () in
let ports = parent.parts (OutEventPort) in

ports.exists (iter : OutEventPort | iter->name () = self.name ())
]]>
				<dispname>The name of the output action must match the name of an OutEventPort</dispname>
			</constraint>
			<constraint name="ValidEffectdstCardinality46" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as "dst" over Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTransitionsrcCardinality135" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as "src" over Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "2939" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "2038" attributes = "Repetitions LogAction" >
				<part metaref = "2039" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Package" metaref = "1668" attributes = "VersionTag PrefixTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
			<constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.parts ()->size > 0]]>
				<dispname>A package cannot be empty</dispname>
			</constraint>
			<constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts ()->forAll (
          x, y : gme::FCO | x.name == y.name implies (x == y or
          (x.oclIsTypeOf (Package) and y.oclIsTypeOf (Package)) or
          (x.oclIsTypeOf (gme::Connection) or y.oclIsTypeOf (gme::Connection)))
          )
          ]]>
				<dispname>Declarations in a Package must have unique names unless they are themselves Packages</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Aggregate" metaref = "1669" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1670" kind = "Alias"></role>
			<role name = "Boxed" metaref = "1671" kind = "Boxed"></role>
			<role name = "Collection" metaref = "1672" kind = "Collection"></role>
			<role name = "Component" metaref = "1673" kind = "Component"></role>
			<role name = "ComponentFactory" metaref = "1674" kind = "ComponentFactory"></role>
			<role name = "ComponentRef" metaref = "1675" kind = "ComponentRef"></role>
			<role name = "Constant" metaref = "1676" kind = "Constant"></role>
			<role name = "Enum" metaref = "1677" kind = "Enum"></role>
			<role name = "Event" metaref = "1678" kind = "Event"></role>
			<role name = "Exception" metaref = "1679" kind = "Exception"></role>
			<role name = "ManagesComponent" metaref = "1680" kind = "ManagesComponent"></role>
			<role name = "Object" metaref = "1681" kind = "Object"></role>
			<role name = "Package" metaref = "1682" kind = "Package"></role>
			<role name = "SwitchedAggregate" metaref = "1683" kind = "SwitchedAggregate"></role>
			<role name = "ValueObject" metaref = "1684" kind = "ValueObject"></role>
			<aspect name = "InterfaceDefinition" metaref = "1685" attributes = "VersionTag PrefixTag SpecifyIdTag" >
				<part metaref = "1686" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1687" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1688" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1689" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1690" role = "Component" primary = "yes" linked = "no"></part>
				<part metaref = "1691" role = "ComponentFactory" primary = "yes" linked = "no"></part>
				<part metaref = "1692" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1693" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1694" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1695" role = "Event" primary = "yes" linked = "no"></part>
				<part metaref = "1696" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1697" role = "ManagesComponent" primary = "yes" linked = "no"></part>
				<part metaref = "1698" role = "Object" primary = "yes" linked = "no"></part>
				<part metaref = "1699" role = "Package" primary = "yes" linked = "no"></part>
				<part metaref = "1700" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1701" role = "ValueObject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PackageConfigurationContainer" metaref = "1702" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="PackageConfXor" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts(PackageConfigurationReference)->size = 1
          xor self.referenceParts(ComponentPackageReference)->size = 1
          xor self.atomParts(ComponentPackage)->size = 1]]>
				<dispname>A PackageConfiguration can either specialize another PackageConfiguration, or contain a ComponentPackage, or contain a reference to a ComponentPackage</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality164" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality165" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfiguration" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality166" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentPackageReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality167" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfBasePackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality168" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality169" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfSpecializedConfig" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "ComponentPackage" metaref = "1703" kind = "ComponentPackage"></role>
			<role name = "ComponentPackageReference" metaref = "1704" kind = "ComponentPackageReference"></role>
			<role name = "PackageConfBasePackage" metaref = "1705" kind = "PackageConfBasePackage"></role>
			<role name = "PackageConfConfigProperty" metaref = "1706" kind = "PackageConfConfigProperty"></role>
			<role name = "PackageConfReference" metaref = "1707" kind = "PackageConfReference"></role>
			<role name = "PackageConfSelectRequirement" metaref = "1708" kind = "PackageConfSelectRequirement"></role>
			<role name = "PackageConfSpecializedConfig" metaref = "1709" kind = "PackageConfSpecializedConfig"></role>
			<role name = "PackageConfiguration" metaref = "1710" kind = "PackageConfiguration"></role>
			<role name = "Property" metaref = "1711" kind = "Property"></role>
			<role name = "Requirement" metaref = "1712" kind = "Requirement"></role>
			<aspect name = "Packaging" metaref = "1713" >
				<part metaref = "1714" role = "ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "1715" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
				<part metaref = "1716" role = "PackageConfBasePackage" primary = "yes" linked = "no"></part>
				<part metaref = "1717" role = "PackageConfConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1718" role = "PackageConfReference" primary = "yes" linked = "no"></part>
				<part metaref = "1719" role = "PackageConfSelectRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "1720" role = "PackageConfSpecializedConfig" primary = "yes" linked = "no"></part>
				<part metaref = "1721" role = "PackageConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "1722" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "1723" role = "Requirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PackageContainer" metaref = "1724" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="MatchingInterfaces" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let pkgInterface = self.referenceParts (ComponentRef) in
let impls = self.referenceParts(ComponentImplementationReference) in
  impls->forAll (i : ComponentImplementationReference | 
        let implementation: ComponentImplementation = i.refersTo() in
        let interfaces = implementation.connectedFCOs(Implements) in
            interfaces->forAll ( j: Component | 
               pkgInterface->forAll ( k: ComponentRef |
                       j.name() = k.refersTo().name() ) ) )]]>
				<dispname>Monolithic implementation in a ComponentPackage should all implement the same component interface</dispname>
			</constraint>
			<constraint name="ValidPackageContainerPartCardinality170" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageContainerPartCardinality171" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageContainerPartCardinality172" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageInterface" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "ComponentImplementationReference" metaref = "1725" kind = "ComponentImplementationReference"></role>
			<role name = "ComponentPackage" metaref = "1726" kind = "ComponentPackage"></role>
			<role name = "ComponentRef" metaref = "1727" kind = "ComponentRef"></role>
			<role name = "Implementation" metaref = "1728" kind = "Implementation"></role>
			<role name = "PackageConfigProperty" metaref = "1729" kind = "PackageConfigProperty"></role>
			<role name = "PackageInfoProperty" metaref = "1730" kind = "PackageInfoProperty"></role>
			<role name = "PackageInterface" metaref = "1731" kind = "PackageInterface"></role>
			<role name = "Property" metaref = "1732" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1733" >
				<part metaref = "1734" role = "ComponentImplementationReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "1735" role = "ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "1736" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1737" role = "Implementation" primary = "yes" linked = "no"></part>
				<part metaref = "1738" role = "PackageConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1739" role = "PackageInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1740" role = "PackageInterface" primary = "yes" linked = "no"></part>
				<part metaref = "1741" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Path" metaref = "2116" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "ComponentRef" metaref = "2066" kind = "ComponentRef"></role>
			<role name = "ConnectedComponent" metaref = "2024" kind = "ConnectedComponent"></role>
			<role name = "DisplayNode" metaref = "2845" kind = "DisplayNode"></role>
			<role name = "DstEdge" metaref = "2117" kind = "DstEdge"></role>
			<role name = "Edge" metaref = "2118" kind = "Edge"></role>
			<role name = "EdgeProperty" metaref = "3070" kind = "EdgeProperty"></role>
			<role name = "InEventPort" metaref = "2026" kind = "InEventPort"></role>
			<role name = "OutEventPort" metaref = "2027" kind = "OutEventPort"></role>
			<role name = "Property" metaref = "2080" kind = "Property"></role>
			<role name = "ProvidedRequestPort" metaref = "2028" kind = "ProvidedRequestPort"></role>
			<role name = "RequiredRequestPort" metaref = "2029" kind = "RequiredRequestPort"></role>
			<role name = "SrcEdge" metaref = "2119" kind = "SrcEdge"></role>
			<aspect name = "PathDiagram" metaref = "3137" >
				<part metaref = "3138" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3139" role = "ConnectedComponent" primary = "yes" linked = "no"></part>
				<part metaref = "3140" role = "DisplayNode" primary = "yes" linked = "no"></part>
				<part metaref = "3141" role = "DstEdge" primary = "yes" linked = "no"></part>
				<part metaref = "3142" role = "Edge" primary = "yes" linked = "no"></part>
				<part metaref = "3143" role = "EdgeProperty" primary = "yes" linked = "no"></part>
				<part metaref = "3144" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3145" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3146" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "3147" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3148" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "3149" role = "SrcEdge" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Paths" metaref = "3072" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "Path" metaref = "3073" kind = "Path"></role>
			<role name = "PathProperty" metaref = "3074" kind = "PathProperty"></role>
			<role name = "Property" metaref = "3075" kind = "Property"></role>
			<aspect name = "PathDiagram" metaref = "3150" >
				<part metaref = "3151" role = "Path" primary = "yes" linked = "no"></part>
				<part metaref = "3152" role = "PathProperty" primary = "yes" linked = "no"></part>
				<part metaref = "3153" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PeriodicAction" metaref = "3377" attributes = "Period Probability" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="timer.bmp"></regnode>
			<constraint name="ValidFinishsrcCardinality63" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Finish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InputActionBase as "src" over Finish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidInputsrcCardinality75" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Input ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InputActionBase as "src" over Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMultiInputsrcCardinality97" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", MultiInput ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InputActionBase as "src" over MultiInput, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "2941" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "2942" attributes = "Period Probability" >
				<part metaref = "2943" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Project" metaref = "1742" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="comp-proj.bmp"></regnode>
			<role name = "ExecutorProject" metaref = "1743" kind = "ExecutorProject"></role>
			<role name = "ExtResourceConn" metaref = "1744" kind = "ExtResourceConn"></role>
			<role name = "ExternalResources" metaref = "1745" kind = "ExternalResources"></role>
			<role name = "ImplementationArtifact" metaref = "1746" kind = "ImplementationArtifact"></role>
			<role name = "ServantProject" metaref = "1747" kind = "ServantProject"></role>
			<role name = "StubProject" metaref = "1748" kind = "StubProject"></role>
			<aspect name = "ComponentLibraries" metaref = "1749" >
				<part metaref = "1750" role = "ExecutorProject" primary = "yes" linked = "no"></part>
				<part metaref = "1751" role = "ExtResourceConn" primary = "yes" linked = "no"></part>
				<part metaref = "1752" role = "ExternalResources" primary = "yes" linked = "no"></part>
				<part metaref = "1753" role = "ServantProject" primary = "yes" linked = "no"></part>
				<part metaref = "1754" role = "StubProject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Property" metaref = "1755" attributes = "DataValue" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Property.bmp"></regnode>
			<constraint name="ValidAttributeMappingValuesrcCardinality21" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", AttributeMappingValue ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Property as "src" over AttributeMappingValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPropertyPartCardinality173" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by Property, has to match 1.</dispname>
			</constraint>
			<role name = "DataType" metaref = "1756" kind = "DataType"></role>
			<aspect name = "Packaging" metaref = "1757" attributes = "DataValue" >
				<part metaref = "1758" role = "DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ReadonlyAttribute" metaref = "1785" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
			<constraint name="DelegateOrValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size = 1 implies self.attachingConnections(AttributeDelegate)->size = 0]]>
				<dispname>A value can be specified for an Attribute directly, or it can have a value delegated to it via an AttributeMapping, but not both.</dispname>
			</constraint>
			<constraint name="MatchingAttributeDelegateType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let delegates = self.connectedFCOs(AttributeDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can be used to delegate values to attributes of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let props = self.connectedFCOs(AttributeValue) in
    attrs->forAll (attr : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>The type of the value of a property should match the type of the attribute.</dispname>
			</constraint>
			<constraint name="SingleDelegate" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeDelegate)->size() <= 1]]>
				<dispname>An attribute can be delegated to from only one AttributeMapping</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size() <= 1]]>
				<dispname>Only one value can be specified for an attribute</dispname>
			</constraint>
			<constraint name="ValidAttributeDelegatesrcCardinality17" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", AttributeDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ReadonlyAttribute as "src" over AttributeDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidAttributeValuedstCardinality24" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", AttributeValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ReadonlyAttribute as "dst" over AttributeValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidReadonlyAttributePartCardinality174" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "AttributeMember" metaref = "1786" kind = "AttributeMember"></role>
			<role name = "GetException" metaref = "1787" kind = "GetException"></role>
			<aspect name = "InterfaceDefinition" metaref = "1788" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1789" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1790" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Requirement" metaref = "1791" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
			<role name = "Property" metaref = "1792" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1793" attributes = "resourceType" >
				<part metaref = "1794" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Resource" metaref = "1795" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Resource"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<role name = "SatisfierProperty" metaref = "1796" kind = "SatisfierProperty"></role>
			<aspect name = "Target" metaref = "1797" attributes = "resourceType" >
				<part metaref = "1798" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "SatisfierProperty" metaref = "1799" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SatisfierProperty.bmp"></regnode>
			<constraint name="ValidSatisfierPropertyPartCardinality175" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by SatisfierProperty, has to match 1.</dispname>
			</constraint>
			<role name = "DataType" metaref = "1800" kind = "DataType"></role>
			<aspect name = "Target" metaref = "3180" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<part metaref = "3181" role = "DataType" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "Packaging" metaref = "1801" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<part metaref = "1802" role = "DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ServantProject" metaref = "1803" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidServantProjectPartCardinality176" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "FileRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ServantProject, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidServantProjectPartCardinality177" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ServantProject, has to match 1.</dispname>
			</constraint>
			<constraint name="servantOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>Only A servant project can exists as a part of the Component project</dispname>
			</constraint>
			<role name = "FileRef" metaref = "1804" kind = "FileRef"></role>
			<role name = "ImplementationArtifactReference" metaref = "1805" kind = "ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "1806" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "1807" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1808" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "SharedResource" metaref = "1809" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SharedResource"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<constraint name="ValidSharessrcCardinality127" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", Shares ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to SharedResource as "src" over Shares, has to match 1..*.</dispname>
			</constraint>
			<role name = "SatisfierProperty" metaref = "1810" kind = "SatisfierProperty"></role>
			<aspect name = "Target" metaref = "1811" attributes = "resourceType" >
				<part metaref = "1812" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "StubProject" metaref = "1813" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidStubProjectPartCardinality178" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "FileRef" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by StubProject, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidStubProjectPartCardinality179" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by StubProject, has to match 1.</dispname>
			</constraint>
			<constraint name="stubOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>Only One stub project can exisit as a part of the Component project</dispname>
			</constraint>
			<role name = "FileRef" metaref = "1814" kind = "FileRef"></role>
			<role name = "ImplementationArtifactReference" metaref = "1815" kind = "ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "1816" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "1817" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1818" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "SwitchedAggregate" metaref = "1819" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
			<constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[parts (Member)->forAll (
          x : gme::FCO | let labels = x.connectedFCOs ()
          in
          labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
          )]]>
				<dispname>A default member cannot have multiple labels</dispname>
			</constraint>
			<constraint name="LegalDiscriminatorType" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[referenceParts (Discriminator) -> forAll (
          x : gme::Reference | x.refersTo ().isTypeOf (Enum) or
          x.refersTo ().isTypeOf (Boolean) or
          x.refersTo ().isTypeOf (Byte) or
          x.refersTo ().isTypeOf (ShortInteger) or
          x.refersTo ().isTypeOf (LongInteger))]]>
				<dispname>Discriminator must have integer, character, boolean or enum type</dispname>
			</constraint>
			<constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" priority = "1">
				<![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
				<dispname>Labels in the same scope must be unique</dispname>
			</constraint>
			<constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
				<dispname>Members of an aggregate type must have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidSwitchedAggregatePartCardinality180" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Label" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidSwitchedAggregatePartCardinality181" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Discriminator" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidSwitchedAggregatePartCardinality182" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "LabelConnection" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Discriminator" metaref = "1820" kind = "Discriminator"></role>
			<role name = "Label" metaref = "1821" kind = "Label"></role>
			<role name = "LabelConnection" metaref = "1822" kind = "LabelConnection"></role>
			<role name = "Member" metaref = "1823" kind = "Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "1824" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1825" role = "Discriminator" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1826" role = "Label" primary = "yes" linked = "no"></part>
				<part metaref = "1827" role = "LabelConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1828" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Throughput" metaref = "1829" attributes = "fileName priority rate warmup iterations resolution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Throughput.bmp"></regnode>
			<constraint name="ValidBenchmarkCharacteristicssrcCardinality25" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", BenchmarkCharacteristics ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as "src" over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMetricConnectionsrcCardinality89" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", MetricConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as "src" over MetricConnection, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWorkloadCharacteristicsdstCardinality140" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WorkloadCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as "dst" over WorkloadCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<role name = "Average" metaref = "1830" kind = "Average"></role>
			<role name = "Jitter" metaref = "1831" kind = "Jitter"></role>
			<role name = "Maximum" metaref = "1832" kind = "Maximum"></role>
			<role name = "Minimum" metaref = "1833" kind = "Minimum"></role>
			<aspect name = "DataAnalysis" metaref = "1834" attributes = "fileName priority rate warmup iterations resolution" >
				<part metaref = "1835" role = "Average" primary = "yes" linked = "no"></part>
				<part metaref = "1836" role = "Jitter" primary = "yes" linked = "no"></part>
				<part metaref = "1837" role = "Maximum" primary = "yes" linked = "no"></part>
				<part metaref = "1838" role = "Minimum" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "TopLevelPackageContainer" metaref = "1839" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="TopLevelPackageConfiguration.bmp"></regnode>
			<constraint name="ValidTopLevelPackageContainerPartCardinality183" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "TopLevelPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTopLevelPackageContainerPartCardinality184" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfigurationReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidTopLevelPackageContainerPartCardinality185" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "package" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PackageConfigurationReference" metaref = "1840" kind = "PackageConfigurationReference"></role>
			<role name = "TopLevelPackage" metaref = "1841" kind = "TopLevelPackage"></role>
			<role name = "package" metaref = "1842" kind = "package"></role>
			<aspect name = "Packaging" metaref = "1843" >
				<part metaref = "1844" role = "PackageConfigurationReference" primary = "yes" linked = "no"></part>
				<part metaref = "1845" role = "TopLevelPackage" primary = "yes" linked = "no"></part>
				<part metaref = "1846" role = "package" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "TwowayOperation" metaref = "1847" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="twoway.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation's exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation's parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidTwowayOperationPartCardinality186" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ReturnType" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by TwowayOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ExceptionRef" metaref = "1848" kind = "ExceptionRef"></role>
			<role name = "InParameter" metaref = "1849" kind = "InParameter"></role>
			<role name = "InoutParameter" metaref = "1850" kind = "InoutParameter"></role>
			<role name = "OutParameter" metaref = "1851" kind = "OutParameter"></role>
			<role name = "ReturnType" metaref = "1852" kind = "ReturnType"></role>
			<aspect name = "InterfaceDefinition" metaref = "1853" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1854" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1855" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1856" role = "InoutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1857" role = "OutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1858" role = "ReturnType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ValueObject" metaref = "1859" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="value.bmp"></regnode>
			<constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let concrete_parents =
          self.parts ("Inherits")->select (x : gme::Reference | x.refersTo ().oclAsType (ValueObject).abstract = false)
          in
          if (self.abstract = true) then
          concrete_parents->size = 0
          else
          concrete_parents->size < 2
          endif]]>
				<dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
			</constraint>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "1860" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "Aggregate" metaref = "1861" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1862" kind = "Alias"></role>
			<role name = "Attribute" metaref = "1863" kind = "Attribute"></role>
			<role name = "Collection" metaref = "1864" kind = "Collection"></role>
			<role name = "Constant" metaref = "1865" kind = "Constant"></role>
			<role name = "Enum" metaref = "1866" kind = "Enum"></role>
			<role name = "Exception" metaref = "1867" kind = "Exception"></role>
			<role name = "FactoryOperation" metaref = "1868" kind = "FactoryOperation"></role>
			<role name = "Inherits" metaref = "1869" kind = "Inherits"></role>
			<role name = "MakeMemberPrivate" metaref = "1870" kind = "MakeMemberPrivate"></role>
			<role name = "Member" metaref = "1871" kind = "Member"></role>
			<role name = "OnewayOperation" metaref = "1872" kind = "OnewayOperation"></role>
			<role name = "PrivateFlag" metaref = "1873" kind = "PrivateFlag"></role>
			<role name = "ReadonlyAttribute" metaref = "1874" kind = "ReadonlyAttribute"></role>
			<role name = "Supports" metaref = "1875" kind = "Supports"></role>
			<role name = "SwitchedAggregate" metaref = "1876" kind = "SwitchedAggregate"></role>
			<role name = "TwowayOperation" metaref = "1877" kind = "TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "1878" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<part metaref = "1879" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1880" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1881" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "1882" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1883" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1884" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1885" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1886" role = "FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1887" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1888" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
				<part metaref = "1889" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1890" role = "OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1891" role = "PrivateFlag" primary = "yes" linked = "no"></part>
				<part metaref = "1892" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "1893" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1894" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1895" role = "TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Worker" metaref = "2956" attributes = "Abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="worker.gif"></regnode>
			<role name = "Action" metaref = "3385" kind = "Action"></role>
			<role name = "CompositeAction" metaref = "3386" kind = "CompositeAction"></role>
			<role name = "OutputAction" metaref = "3387" kind = "OutputAction"></role>
			<aspect name = "Behavior" metaref = "2958" attributes = "Abstract" >
				<part metaref = "3388" role = "Action" primary = "yes" linked = "no"></part>
				<part metaref = "3389" role = "CompositeAction" primary = "yes" linked = "no"></part>
				<part metaref = "3390" role = "OutputAction" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WorkerFile" metaref = "2971" attributes = "Location" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
				<regnode name = "icon" value ="file.bmp"></regnode>
			<role name = "Worker" metaref = "2972" kind = "Worker"></role>
			<role name = "WorkerPackage" metaref = "2973" kind = "WorkerPackage"></role>
			<aspect name = "Behavior" metaref = "2990" attributes = "Location" >
				<part metaref = "2991" role = "Worker" primary = "yes" linked = "no"></part>
				<part metaref = "2992" role = "WorkerPackage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WorkerLibrary" metaref = "2964" attributes = "Location" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueWorker" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let workers = self->parts (Worker) in
    workers->isUnique (iter : Worker | iter->name ())]]>
				<dispname>Worker library constains duplicate worker names</dispname>
			</constraint>
			<role name = "WorkerFile" metaref = "2977" kind = "WorkerFile"></role>
			<aspect name = "Behavior" metaref = "2966" attributes = "Location" >
				<part metaref = "2979" role = "WorkerFile" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WorkerPackage" metaref = "2981" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
			<role name = "Worker" metaref = "2982" kind = "Worker"></role>
			<role name = "WorkerPackage" metaref = "2983" kind = "WorkerPackage"></role>
			<aspect name = "Behavior" metaref = "2993" >
				<part metaref = "2994" role = "Worker" primary = "yes" linked = "no"></part>
				<part metaref = "2995" role = "WorkerPackage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<folder name = "ComponentAnalyses" metaref = "1896"  rootobjects = "BenchmarkAnalysis" >
		</folder>
		<folder name = "ComponentBuild" metaref = "1897"  rootobjects = "MPC" >
		</folder>
		<folder name = "ComponentImplementations" metaref = "1898"  rootobjects = "ComponentImplementationContainer" >
			<constraint name="UniqueComponentImplementations" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.models(ComponentImplementationContainer) in
   artifacts->isUnique (i : ComponentImplementationContainer | i.name.trim())]]>
				<dispname>ComponentImplementationContainers should have unique names</dispname>
			</constraint>
		</folder>
		<folder name = "ComponentPackages" metaref = "1899"  rootobjects = "PackageContainer" >
		</folder>
		<folder name = "ComponentTypes" metaref = "1900"  rootobjects = "ComponentContainer" >
		</folder>
		<folder name = "DeploymentPlans" metaref = "1901"  rootobjects = "DeploymentPlan" >
		</folder>
		<folder name = "ImplementationArtifacts" metaref = "1903"  rootobjects = "ArtifactContainer" >
		</folder>
		<folder name = "InterfaceDefinitions" metaref = "1904"  rootobjects = "File" >
			<constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" priority = "1">
				<![CDATA[allFileScopeDecls ()->forAll (
          x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
          )]]>
				<dispname>Declarations at global scope must have unique names unless they are Packages</dispname>
			</constraint>
		</folder>
		<folder name = "PackageConfigurations" metaref = "1905"  rootobjects = "PackageConfigurationContainer" >
		</folder>
		<folder name = "PathDiagrams" metaref = "3173"  rootobjects = "Paths" >
		</folder>
		<folder name = "PredefinedTypes" metaref = "1906"  rootobjects = "Boolean Byte GenericObject GenericValue GenericValueObject LongInteger RealNumber ShortInteger String TypeEncoding TypeKind" >
		</folder>
		<folder name = "Targets" metaref = "1907"  rootobjects = "Domain" >
		</folder>
		<folder name = "TopLevelPackages" metaref = "1908"  rootobjects = "TopLevelPackageContainer" >
		</folder>
		<folder name = "WorkerLibraries" metaref = "2968"  rootobjects = "WorkerLibrary" >
		</folder>
	</folder>
</paradigm>
