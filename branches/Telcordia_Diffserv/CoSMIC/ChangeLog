Tue Aug 29 00:33:54 UTC 2006  Sumant Tambe <sutambe@nospam>

	Fixed a deployment plan interpreter bug and refactored 
	unique identifier creation code. Fixed UUIDManager mpc.

	* PIM/PICML/addons/UUIDManager/UUIDManager.mpc
	* PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp
	* PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.h

Mon Aug 28 19:38:17 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:

          Added code to make sure that the 'referred' attribute
          of a ReturnType is set before emitting a diagnostic
          that is has been added to the model from imported IDL,
          since this attribute may be looked up as part of
          emitting the diagnostic. Also added code to recreate
          the ComponentImplementations, ImplementationArtifacts,
          and ComponentTypes folders, if we are importing an
          XME file and the modeler has removed one or more of
          them for some reason.

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

          Added a check that prevents a bailout when checking for
          a match between multiple openings of a module, as part
          of the process of determining whether one of the module
          openings has been imported from XME or not.

        * PIM/PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/DIDLEmitVisitor.cpp:

          Cosmetic changes.

Mon Aug 28 19:16:34 UTC 2006  Sumant Tambe <sutambe@nospam>

  Added some missing files.

  * PSM/CQML/interpreters/DeploymentPlanFramework/Injector.cpp

Mon Aug 28 16:18:52 UTC 2006  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp: Removed
          an extraneous line which dealt with setting namespaces.  This
          was cause by an accidental check-in that should have been done
          after a new GME version has been released.

Mon Aug 28 07:35:09 UTC 2006  Sumant Tambe  <sutambe@nospam>

  Changed the NetQoS interpreter to generate deployment plans
        using the Deployment Plan Framework.

  * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp
  * PSM/CQML/interpreters/NetQoS/NetQoS.mpc
  * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
  * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h

Mon Aug 28 07:15:09 UTC 2006  Sumant Tambe  <sutambe@nospam>

  Fixed these files to compile as per the new refactored
  CoSMIC code.

  * PIM/PICML/interpreters/BGMLComponent/UdmApp.cpp
  * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp
  * PIM/PICML/interpreters/MPCComponent/UdmApp.cpp
  * PIM/PICML/interpreters/Path/PathVisitor.cpp
  * PIM/PICML/interpreters/Path/PathVisitor.h
  * PIM/PICML/interpreters/PathComponent/UdmApp.cpp
  * PIM/PICML/interpreters/Target/DomainVisitor.cpp
  * PIM/PICML/interpreters/Target/DomainVisitor.h
  * PIM/PICML/interpreters/TargetComponent/UdmApp.cpp
  * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
  * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h

Mon Aug 28 01:15:09 UTC 2006  Sumant Tambe  <sutambe@nospam>

        Refactored some CoSMIC code into Utils directory in COSMIC_ROOT.
        Most probably it will break some builds. It is being worked upon.

  * cosmic.mwc
  * cosmic_common.mpb
  * cqmllib.mpb
  * picmllib.mpb
  * PIM/PICML/addons/UUIDManager/RawComponent.cpp
  * PIM/PICML/addons/UUIDManager/UUIDManager.mpc
  * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlan.mpc
  * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp
  * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.h
  * PIM/PICML/interpreters/DeploymentPlanComponent/ComponentConfig.h
  * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp
  * PIM/PICML/interpreters/Package/PackageVisitor.cpp
  * PIM/PICML/interpreters/Package/PackageVisitor.h
  * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp
  * PIM/PICML/interpreters/PICML/PICML.mpc
  * PIM/PICML/interpreters/PICML/Utils.cpp
  * PIM/PICML/paradigms/PICML.xmp
  * PSM/CQML/interpreters/CQML/CQML.mpc
  * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc
  * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp
  * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h
  * PSM/CQML/interpreters/FaultTolerance/FaultTolerance.mpc
  * PSM/CQML/interpreters/FaultToleranceComponent/FaultToleranceComponent.mpc
  * PSM/CQML/interpreters/FaultToleranceComponent/UdmApp.cpp
  * PSM/CQML/interpreters/Interpreters.mwc
  * PSM/CQML/interpreters/NetQoS/NetQoS.mpc
  * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
  * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h
  * PSM/CQML/interpreters/NetQoSComponent/NetQoSComponent.mpc
  * PSM/CQML/interpreters/NetQoSComponent/UdmApp.cpp
  * udm.mpb
  * Utils
  * utils.mpb
  * Utils/Utils.cpp
  * Utils/Utils.h
  * Utils/Utils.mpc
  * Utils/Utils_export.h
  * Utils/XercesString.cpp
  * Utils/XercesString.h

Sat Aug 26 03:24:09 UTC 2006  Sumant Tambe  <sutambe@nospam>

  Added infoProperty support in PICML and CQML DeploymentPlan sheet.
        Improved DeploymentPlanFramework Injector interface.

  * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp
  * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.h
  * PIM/PICML/paradigms/PICML-uml.xme
  * PIM/PICML/paradigms/PICML.xme
  * PIM/PICML/paradigms/PICML.xml
  * PIM/PICML/paradigms/PICML.xmp
  * PSM/CQML/examples/BasicSP.xme
  * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc
  * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp
  * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h
  * PSM/CQML/interpreters/DeploymentPlanFramework/Injector.h
  * PSM/CQML/interpreters/FaultTolerance/FTAdders.cpp
  * PSM/CQML/interpreters/FaultTolerance/FTAdders.h
  * PSM/CQML/interpreters/FaultTolerance/FTInjector.cpp
  * PSM/CQML/interpreters/FaultTolerance/FTInjector.h
  * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
  * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h
  * PSM/CQML/paradigms/CQML-uml.xme
  * PSM/CQML/paradigms/CQML.xme
  * PSM/CQML/paradigms/CQML.xml
  * PSM/CQML/paradigms/CQML.xmp

Thu Aug 24 02:59:56 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/SLICE-Path.xme:
        * PIM/SIML/examples/SLICE.xme:
        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:
        * PIM/WSML/examples/SLICE.xme:

          Updated files to reflect the latest changes in the paradigms.

        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:

          Fixed a bug where the directory of the interpreter was not
          included in the list of includes.

        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.cpp:

          Fixed a bug where the namespaces were not separated by a comma
          in the generated code.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Updates to ensure that we can use these tools without having an
          internet connection.  Need to figure out a more robust
          solution.

        * demos/STI/BDCWebService/SLICE.h:
        * demos/STI/BDCWebService/SLICE.wsdl:
        * demos/STI/BDCWebService/SLICEC.cpp:
        * demos/STI/BDCWebService/SLICEH.h:
        * demos/STI/BDCWebService/SLICEStub.h:
        * demos/STI/BDC_CCMClient/BDC_CCMClient.cpp:
        * demos/STI/BDC_WSClient/BDC_Client.cs:

          Minor updates to make the output look good for the demo.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Atom.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Attribute.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Author.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Comment.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connection.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connpoint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Constraint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Folder.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Model.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Name.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/ObjectFactory.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Project.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Reference.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Regnode.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Set.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Value.java:

          Removed these files.

Thu Aug 17 02:36:11 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/paradigms/icons/component.bmp:  Updated icon to a
          better looking icon :-)

        * PIM/SIML/examples/SLICE.xme:  Updated example so that the layout
          of the items that we want to show are not convoluted.

        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:  Updated paradigm to reflect the
          changes in the WSML paradigm.

        * PIM/SIML/paradigms/icons/address.bmp:
        * PIM/SIML/paradigms/icons/binding.bmp:
        * PIM/SIML/paradigms/icons/binding.gif:
        * PIM/SIML/paradigms/icons/bindingoperation.gif:
        * PIM/SIML/paradigms/icons/definitions.gif:
        * PIM/SIML/paradigms/icons/documentation.bmp:
        * PIM/SIML/paradigms/icons/element.bmp:
        * PIM/SIML/paradigms/icons/fault.bmp:
        * PIM/SIML/paradigms/icons/import.bmp:
        * PIM/SIML/paradigms/icons/input.bmp:
        * PIM/SIML/paradigms/icons/message.bmp:
        * PIM/SIML/paradigms/icons/messages.bmp:
        * PIM/SIML/paradigms/icons/notification.bmp:
        * PIM/SIML/paradigms/icons/oneway.gif:
        * PIM/SIML/paradigms/icons/operation.gif:
        * PIM/SIML/paradigms/icons/operationport.gif:
        * PIM/SIML/paradigms/icons/output.bmp:
        * PIM/SIML/paradigms/icons/part.bmp:
        * PIM/SIML/paradigms/icons/port.gif:
        * PIM/SIML/paradigms/icons/porttype.bmp:
        * PIM/SIML/paradigms/icons/requestresponse.bmp:
        * PIM/SIML/paradigms/icons/schema.bmp:
        * PIM/SIML/paradigms/icons/schemaimport.gif:
        * PIM/SIML/paradigms/icons/schemareference.gif:
        * PIM/SIML/paradigms/icons/service.bmp:
        * PIM/SIML/paradigms/icons/soapbinding.gif:
        * PIM/SIML/paradigms/icons/solicitresponse.bmp:
        * PIM/SIML/paradigms/icons/types.bmp:
        * PIM/SIML/paradigms/icons/wsdlport.bmp:

          Icons for the WSML paradigm.

        * PIM/WSML/examples/SLICE.xme:  Updated example so that the layout
          of the items that we want to show are not convoluted.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated paradigm to add icons.

        * PIM/WSML/paradigms/icons/address.bmp:
        * PIM/WSML/paradigms/icons/attribute.bmp:
        * PIM/WSML/paradigms/icons/binding.bmp:
        * PIM/WSML/paradigms/icons/binding.gif:
        * PIM/WSML/paradigms/icons/bindingoperation.gif:
        * PIM/WSML/paradigms/icons/definitions.gif:
        * PIM/WSML/paradigms/icons/documentation.bmp:
        * PIM/WSML/paradigms/icons/element.bmp:
        * PIM/WSML/paradigms/icons/fault.bmp:
        * PIM/WSML/paradigms/icons/import.bmp:
        * PIM/WSML/paradigms/icons/input.bmp:
        * PIM/WSML/paradigms/icons/message.bmp:
        * PIM/WSML/paradigms/icons/messages.bmp:
        * PIM/WSML/paradigms/icons/notification.bmp:
        * PIM/WSML/paradigms/icons/oneway.gif:
        * PIM/WSML/paradigms/icons/operation.gif:
        * PIM/WSML/paradigms/icons/operationport.gif:
        * PIM/WSML/paradigms/icons/output.bmp:
        * PIM/WSML/paradigms/icons/part.bmp:
        * PIM/WSML/paradigms/icons/port.gif:
        * PIM/WSML/paradigms/icons/porttype.bmp:
        * PIM/WSML/paradigms/icons/requestresponse.bmp:
        * PIM/WSML/paradigms/icons/schema.bmp:
        * PIM/WSML/paradigms/icons/schemaimport.gif:
        * PIM/WSML/paradigms/icons/schemareference.gif:
        * PIM/WSML/paradigms/icons/service.bmp:
        * PIM/WSML/paradigms/icons/soapbinding.gif:
        * PIM/WSML/paradigms/icons/solicitresponse.bmp:
        * PIM/WSML/paradigms/icons/types.bmp:
        * PIM/WSML/paradigms/icons/wsdlport.bmp:

          Icons for the WSML paradigm.

Tue Aug 15 22:09:34 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/SIML/interpreters/GatewayGenerator/Resource.h: Added file
          necessary to ensure compilation.

Mon Aug 14 23:13:29 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/decorators/PICMLDecorator.mpc:  Added _WINDLL _USRDLL
          and _ATL_DLL back to the list of macros.  GME crashes without
          these macros.

        * PIM/PICML/examples/SLICE-Path.xme:  Updated to add a timeout
          value of 7 seconds.  This is so that multiple clients can fetch
          the value of the execution time from the BDC.

        * demos/STI/BDC_CCMClient/BDC_CCMClient.cpp:
        * demos/STI/BDC_CCMClient/BDC_CCMClient.mpc:  New CCM client which
          does the same job as the Web Service client.

        * demos/STI/BDC_WSClient/BDC_Client.cs:  Updated WS client to
          print 0 if the Web Service is not yet up.

        * demos/STI/BDCClient/BDCClient.csproj:
        * demos/STI/BDCClient/BDCClient.sln:
        * demos/STI/BDCClient/BDC_Client.cs:
        * demos/STI/BDCClient/CUTSBenchmark_Data_Collector.cs:
        * demos/STI/BDCClient/Properties/AssemblyInfo.cs:

          Removed these files.

Mon Aug 14 02:41:35 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * picml.mwc:  Added new workspace to build just the PICML
          interpreters, decorators and add-ons.

Sun Aug 13 23:04:21 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * bon.mpb:  Added mfc as a base project, since BON requires mfc in
          almost all cases.

        * PIM/PICML/decorators/PICMLDecorator.mpc:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:
          Updated the files to reflect the refactoring of base projects.

        * PIM/PICML/interpreters/IDLGenerator/ComponentConfig.h:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:

          Updated to add support for SIML.  I haven't checked in all of
          the files yet, since doing so will require latest alpha version
          of GME.

Sun Aug 13 21:48:29 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/SLICE-Path.xme:
        * PIM/WSML/interpreters/WSDLExporter/build.xml:
        * PIM/WSML/interpreters/WSDLImporter/build.xml:

        * bon.mpb:  Don't depend on xerces.  There are interpreters which
          don't need xerces.

        * cqmllib.mpb:
        * picmllib.mpb:  Add xerces explicitly to the list of base
          projects.

        * udm.mpb:  Use UDM_3RDPARTY_PATH to find zlib.

        * demos/STI/BDCClient/BDC_Client.cs:  Reduced the time interval
          for polling the BDC from 20s to 10s.  Catch
          System.Net.WebException to make sure that we don't crash if
          there is any problem with the network.

Wed Aug  9 20:08:32 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xme:

          Fixed "DanglingAction" constraint.

Wed Aug  9 18:42:34 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Fixed inconsistency in metamodel and XML backend.

Wed Aug  9 02:38:01 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * demos/STI/BDCWebService/BDC.mpc:

          Updated to reflect the new names for the generated code.

        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector.h:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector.cpp:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector.nsmap:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollectorService.cpp:

          Added a version of the generated code as a backup.

        * demos/STI/BDCWebService/BDCWebService.cpp:

          Removed this file.

Wed Aug  9 02:07:49 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/SLICE-Path.xme:  Added a new example which
          doesn't depend on database, and has critical path defined.

        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:
          New file to build the GatewayGenerator interpreter.

Wed Aug  9 00:45:48 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/SIML/examples/SLICE.xme:  Updated example to reflect the
          integration of CCM and Web Services.

        * PIM/SIML/interpreters/GatewayGenerator/BON2Component.h:
        * PIM/SIML/interpreters/GatewayGenerator/BON2Component.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/CompIcon.ico:
        * PIM/SIML/interpreters/GatewayGenerator/Component.rc:
        * PIM/SIML/interpreters/GatewayGenerator/ComponentConfig.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX1.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX1.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX2.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX2.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX3.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX3.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX4.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX4.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/StdAfx.h:
        * PIM/SIML/interpreters/GatewayGenerator/StdAfx.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/WSMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/WSMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/component.def:

          New interpreter which generates the integration glue code
          automatically from the model.

        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:

          Updated paradigm to reflect changes that were necessitated by
          the interpreter.

        * bon.mpb:
        * register.mpb:
        * udm.mpb:

          New base projects to reflect their true purpose.

        * demos/STI/BDCWebService/BDCWebService.cpp:
        * demos/STI/BDCWebService/CUTS_Benchmark_Data_Collector.nsmap:
        * demos/STI/BDCWebService/SLICE.h:
        * demos/STI/BDCWebService/SLICEC.cpp:

          Minor modifications to reflect change in the name of the
          WebService.

        * picmllib.mpb:
        * cqmllib.mpb:

          Refactored the files to use the newly created base projects.

        * PIM/SIML/interpreters/GatewayGenerator/SIMLVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLVisitor.cpp:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrols.nsmap:
        * demos/STI/BDCWebService/SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.h:
        * demos/STI/BDCWebService/SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.cpp:

          Removed these files.

Sat Aug  5 20:55:32 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * demos/STI/BDCWebService/BDC.mpc:
        * demos/STI/BDCWebService/BDCWebService.cpp:
        * demos/STI/BDCWebService/CORBA.nsmap:
        * demos/STI/BDCWebService/CORBA.wsdl:
        * demos/STI/BDCWebService/CORBA_.nsmap:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrols.nsmap:
        * demos/STI/BDCWebService/SLICE.h:
        * demos/STI/BDCWebService/SLICE.wsdl:
        * demos/STI/BDCWebService/SLICEC.cpp:
        * demos/STI/BDCWebService/SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.h:
        * demos/STI/BDCWebService/SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.cpp:
        * demos/STI/BDCWebService/SLICEH.h:
        * demos/STI/BDCWebService/SLICEStub.h:
        * demos/STI/BDCWebService/typemap.dat:

          Handwritten implementation of the CUTS Benchmark_Data_Collector
          exposed as a web service.

        * demos/STI/BDCClient/BDCClient.csproj:
        * demos/STI/BDCClient/BDCClient.sln:
        * demos/STI/BDCClient/BDC_Client.cs:
        * demos/STI/BDCClient/CUTSBenchmark_Data_Collector.cs:
        * demos/STI/BDCClient/Properties/AssemblyInfo.cs:

          A web service client written in C# which queries the information
          from the BDC web service.


Sat Aug  5 07:05:06 UTC 2006  Sumant Tambe  <sutambe@nospam>

        Fixed some minor inconsistencies.

        * PIM/PICML/examples/RobotAssembly.xme:

        * PIM/PICML/paradigms/PICML-monolith.xmp:
        * PIM/PICML/paradigms/PICML.xmp:

        * PSM/CQML/examples/BasicSP.xme:

        * PSM/CQML/interpreters/NetQoSComponent/UdmApp.cpp:

        * PSM/CQML/paradigms/CQML-uml.xme:
        * PSM/CQML/paradigms/CQML.xme:
        * PSM/CQML/paradigms/CQML.xml:
        * PSM/CQML/paradigms/CQML.xmp:

Sat Aug  5 05:40:45 UTC 2006  Sumant Tambe  <sutambe@nospam>

        QoS characteristics such as RT, FT and Event-channel configuration
        has been removed out of PICML and are moved to new PSM level language
        called CQML. The old version of PICML can be found in PICML-monolith.xme.

        The new PSM level language, CQML, has been added to COSMIC_ROOT/PSM/.
        FT interpreter has been moved to be a CQML interpreter rather than
        PICML interpreter. NetQoS interpreter has been added for CQML. The
        DeploymentPlanFramework has also been moved to CQML.

        * PIM/PICML/interpreters/Interpreters.mwc:

        * PIM/PICML/paradigms/PICML-monolith.xme:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        * PSM/CQML:

        * PSM/CQML/examples:

        * PSM/CQML/examples/BasicSP.xme:

        * PSM/CQML/interpreters:

        * PSM/CQML/interpreters/CQML:

        * PSM/CQML/interpreters/CQML/CQML.mpc:

        * PSM/CQML/interpreters/DeploymentPlanFramework:

        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc:
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework_Export.h:
        * PSM/CQML/interpreters/DeploymentPlanFramework/Injector.h:

        * PSM/CQML/interpreters/FaultTolerance:

        * PSM/CQML/interpreters/FaultTolerance/FTAdders.h:
        * PSM/CQML/interpreters/FaultTolerance/FTAdders.cpp:
        * PSM/CQML/interpreters/FaultTolerance/FTInjector.h:
        * PSM/CQML/interpreters/FaultTolerance/FTInjector.cpp:
        * PSM/CQML/interpreters/FaultTolerance/FTVisitors.h:
        * PSM/CQML/interpreters/FaultTolerance/FTVisitors.cpp:
        * PSM/CQML/interpreters/FaultTolerance/FaultTolerance.mpc:
        * PSM/CQML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PSM/CQML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
        * PSM/CQML/interpreters/FaultTolerance/FaultTolerance_Export.h:
        * PSM/CQML/interpreters/FaultTolerance/common.h:

        * PSM/CQML/interpreters/FaultToleranceComponent:

        * PSM/CQML/interpreters/FaultToleranceComponent/CompIcon.ico:
        * PSM/CQML/interpreters/FaultToleranceComponent/Component.def:
        * PSM/CQML/interpreters/FaultToleranceComponent/Component.rc:
        * PSM/CQML/interpreters/FaultToleranceComponent/ComponentConfig.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/FaultToleranceComponent.mpc:
        * PSM/CQML/interpreters/FaultToleranceComponent/RawComponent.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/RawComponent.cpp:
        * PSM/CQML/interpreters/FaultToleranceComponent/StdAfx.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/StdAfx.cpp:
        * PSM/CQML/interpreters/FaultToleranceComponent/UdmApp.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/UdmApp.cpp:
        * PSM/CQML/interpreters/FaultToleranceComponent/UdmConfig.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/resource.h:

        * PSM/CQML/interpreters/Interpreters.mwc:
        * PSM/CQML/interpreters/NetQoS:

        * PSM/CQML/interpreters/NetQoS/NetQoS.mpc:
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h:
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp:
        * PSM/CQML/interpreters/NetQoS/NetQoS_Export.h:

        * PSM/CQML/interpreters/NetQoSComponent:

        * PSM/CQML/interpreters/NetQoSComponent/Component.def:
        * PSM/CQML/interpreters/NetQoSComponent/Component.rc:
        * PSM/CQML/interpreters/NetQoSComponent/ComponentConfig.h:
        * PSM/CQML/interpreters/NetQoSComponent/NetQoSComponent.mpc:
        * PSM/CQML/interpreters/NetQoSComponent/RawComponent.h:
        * PSM/CQML/interpreters/NetQoSComponent/RawComponent.cpp:
        * PSM/CQML/interpreters/NetQoSComponent/StdAfx.h:
        * PSM/CQML/interpreters/NetQoSComponent/StdAfx.cpp:
        * PSM/CQML/interpreters/NetQoSComponent/UdmApp.h:
        * PSM/CQML/interpreters/NetQoSComponent/UdmApp.cpp:
        * PSM/CQML/interpreters/NetQoSComponent/UdmConfig.h:
        * PSM/CQML/interpreters/NetQoSComponent/compicon.ico:
        * PSM/CQML/interpreters/NetQoSComponent/resource.h:

        * PSM/CQML/paradigms:

        * PSM/CQML/paradigms/CQML-uml.xme:
        * PSM/CQML/paradigms/CQML.xme:
        * PSM/CQML/paradigms/CQML.xml:
        * PSM/CQML/paradigms/CQML.xmp:
        * PSM/CQML/paradigms/icons:

        * PSM/CQML/paradigms/icons/Any.bmp:
        * PSM/CQML/paradigms/icons/Assembly.bmp:
        * PSM/CQML/paradigms/icons/AttributeMapping.bmp:
        * PSM/CQML/paradigms/icons/Average.bmp:
        * PSM/CQML/paradigms/icons/BandedConnection.bmp:
        * PSM/CQML/paradigms/icons/BandedConnectionRef.bmp:
        * PSM/CQML/paradigms/icons/Bridge.bmp:
        * PSM/CQML/paradigms/icons/Capability.bmp:
        * PSM/CQML/paradigms/icons/ComponentPackage.bmp:
        * PSM/CQML/paradigms/icons/ComponentProperty.bmp:
        * PSM/CQML/paradigms/icons/ComponentSet.bmp:
        * PSM/CQML/paradigms/icons/ConnectionBand.bmp:
        * PSM/CQML/paradigms/icons/Connector.bmp:
        * PSM/CQML/paradigms/icons/DataType.bmp:
        * PSM/CQML/paradigms/icons/Discrete-Benchmark.bmp:
        * PSM/CQML/paradigms/icons/Domain.bmp:
        * PSM/CQML/paradigms/icons/EnvironmentConf.bmp:
        * PSM/CQML/paradigms/icons/ExternalReferenceEndPoint.bmp:
        * PSM/CQML/paradigms/icons/FOU.bmp:
        * PSM/CQML/paradigms/icons/ImplementationArtifact.bmp:
        * PSM/CQML/paradigms/icons/ImplementationArtifactReference.bmp:
        * PSM/CQML/paradigms/icons/ImplementationDependency.bmp:
        * PSM/CQML/paradigms/icons/ImplementationReference.bmp:
        * PSM/CQML/paradigms/icons/ImplementationRequirement.bmp:
        * PSM/CQML/paradigms/icons/InputAction.bmp:
        * PSM/CQML/paradigms/icons/Interconnect.bmp:
        * PSM/CQML/paradigms/icons/Jitter.bmp:
        * PSM/CQML/paradigms/icons/Latency.bmp:
        * PSM/CQML/paradigms/icons/Max.bmp:
        * PSM/CQML/paradigms/icons/Min.bmp:
        * PSM/CQML/paradigms/icons/MonolithicImplementation.bmp:
        * PSM/CQML/paradigms/icons/Node.bmp:
        * PSM/CQML/paradigms/icons/NodeGroup.bmp:
        * PSM/CQML/paradigms/icons/OutputAction.bmp:
        * PSM/CQML/paradigms/icons/PackageConfiguration.bmp:
        * PSM/CQML/paradigms/icons/PackageConfigurationReference.bmp:
        * PSM/CQML/paradigms/icons/PackageReference.bmp:
        * PSM/CQML/paradigms/icons/Periodic-Bench.bmp:
        * PSM/CQML/paradigms/icons/PolicySet.bmp:
        * PSM/CQML/paradigms/icons/PolicySetRef.bmp:
        * PSM/CQML/paradigms/icons/PriorityModelPolicy.bmp:
        * PSM/CQML/paradigms/icons/Property.bmp:
        * PSM/CQML/paradigms/icons/RPG.bmp:
        * PSM/CQML/paradigms/icons/RTModel.bmp:
        * PSM/CQML/paradigms/icons/Requirement.bmp:
        * PSM/CQML/paradigms/icons/Resource.bmp:
        * PSM/CQML/paradigms/icons/ResourceContainer.bmp:
        * PSM/CQML/paradigms/icons/SatisfierProperty.bmp:
        * PSM/CQML/paradigms/icons/SharedResource.bmp:
        * PSM/CQML/paradigms/icons/SharedRiskGroup.bmp:
        * PSM/CQML/paradigms/icons/SimpleThreadPool.bmp:
        * PSM/CQML/paradigms/icons/StartState.bmp:
        * PSM/CQML/paradigms/icons/State.bmp:
        * PSM/CQML/paradigms/icons/ThreadPoolLane.bmp:
        * PSM/CQML/paradigms/icons/ThreadPoolRef.bmp:
        * PSM/CQML/paradigms/icons/ThreadPoolWithLanes.bmp:
        * PSM/CQML/paradigms/icons/Throughput.bmp:
        * PSM/CQML/paradigms/icons/TimerState.bmp:
        * PSM/CQML/paradigms/icons/TopLevelPackage.bmp:
        * PSM/CQML/paradigms/icons/Trigger-Bench.bmp:
        * PSM/CQML/paradigms/icons/action.bmp:
        * PSM/CQML/paradigms/icons/aggregate.bmp:
        * PSM/CQML/paradigms/icons/aggregateref.bmp:
        * PSM/CQML/paradigms/icons/alias.bmp:
        * PSM/CQML/paradigms/icons/aliasref.bmp:
        * PSM/CQML/paradigms/icons/attribute.bmp:
        * PSM/CQML/paradigms/icons/boolean.bmp:
        * PSM/CQML/paradigms/icons/boxed.bmp:
        * PSM/CQML/paradigms/icons/boxedref.bmp:
        * PSM/CQML/paradigms/icons/byte.bmp:
        * PSM/CQML/paradigms/icons/comp-proj.bmp:
        * PSM/CQML/paradigms/icons/component.bmp:
        * PSM/CQML/paradigms/icons/componentfactory.bmp:
        * PSM/CQML/paradigms/icons/componentfactoryref.bmp:
        * PSM/CQML/paradigms/icons/componentref.bmp:
        * PSM/CQML/paradigms/icons/composite.bmp:
        * PSM/CQML/paradigms/icons/conjunction_group.bmp:
        * PSM/CQML/paradigms/icons/const.bmp:
        * PSM/CQML/paradigms/icons/discriminator.bmp:
        * PSM/CQML/paradigms/icons/disjunction_group.bmp:
        * PSM/CQML/paradigms/icons/ec_consumer.bmp:
        * PSM/CQML/paradigms/icons/ec_dependency.bmp:
        * PSM/CQML/paradigms/icons/ec_event.bmp:
        * PSM/CQML/paradigms/icons/ec_option.bmp:
        * PSM/CQML/paradigms/icons/ec_proxy.bmp:
        * PSM/CQML/paradigms/icons/ec_proxy_consumer.bmp:
        * PSM/CQML/paradigms/icons/ec_proxy_supplier.bmp:
        * PSM/CQML/paradigms/icons/ec_resource_factory.bmp:
        * PSM/CQML/paradigms/icons/ec_supplier.bmp:
        * PSM/CQML/paradigms/icons/ec_supplier_id.bmp:
        * PSM/CQML/paradigms/icons/enum.bmp:
        * PSM/CQML/paradigms/icons/enumref.bmp:
        * PSM/CQML/paradigms/icons/enumvalue.bmp:
        * PSM/CQML/paradigms/icons/event.bmp:
        * PSM/CQML/paradigms/icons/event_sink.bmp:
        * PSM/CQML/paradigms/icons/event_source.bmp:
        * PSM/CQML/paradigms/icons/eventref.bmp:
        * PSM/CQML/paradigms/icons/eventtype-port.bmp:
        * PSM/CQML/paradigms/icons/eventtype.bmp:
        * PSM/CQML/paradigms/icons/exception.bmp:
        * PSM/CQML/paradigms/icons/exceptionref.bmp:
        * PSM/CQML/paradigms/icons/factory.bmp:
        * PSM/CQML/paradigms/icons/file.bmp:
        * PSM/CQML/paradigms/icons/fileref.bmp:
        * PSM/CQML/paradigms/icons/genericobject.bmp:
        * PSM/CQML/paradigms/icons/genericvalue.bmp:
        * PSM/CQML/paradigms/icons/genericvalueobject.bmp:
        * PSM/CQML/paradigms/icons/getexception.bmp:
        * PSM/CQML/paradigms/icons/in.bmp:
        * PSM/CQML/paradigms/icons/inevent_lf.bmp:
        * PSM/CQML/paradigms/icons/inevent_rt.bmp:
        * PSM/CQML/paradigms/icons/ineventport.bmp:
        * PSM/CQML/paradigms/icons/inherits.bmp:
        * PSM/CQML/paradigms/icons/inout.bmp:
        * PSM/CQML/paradigms/icons/label.bmp:
        * PSM/CQML/paradigms/icons/logical_and_group.bmp:
        * PSM/CQML/paradigms/icons/long.bmp:
        * PSM/CQML/paradigms/icons/lookup.bmp:
        * PSM/CQML/paradigms/icons/lookupkey.bmp:
        * PSM/CQML/paradigms/icons/member.bmp:
        * PSM/CQML/paradigms/icons/ns_admin.bmp:
        * PSM/CQML/paradigms/icons/ns_config.bmp:
        * PSM/CQML/paradigms/icons/ns_constraint.bmp:
        * PSM/CQML/paradigms/icons/ns_consumer.bmp:
        * PSM/CQML/paradigms/icons/ns_event.bmp:
        * PSM/CQML/paradigms/icons/ns_filter-port.bmp:
        * PSM/CQML/paradigms/icons/ns_filter.bmp:
        * PSM/CQML/paradigms/icons/ns_option.bmp:
        * PSM/CQML/paradigms/icons/ns_proxy.bmp:
        * PSM/CQML/paradigms/icons/ns_proxy_consumer.bmp:
        * PSM/CQML/paradigms/icons/ns_proxy_supplier.bmp:
        * PSM/CQML/paradigms/icons/ns_qos-port.bmp:
        * PSM/CQML/paradigms/icons/ns_qos.bmp:
        * PSM/CQML/paradigms/icons/ns_resource_factory-port.bmp:
        * PSM/CQML/paradigms/icons/ns_resource_factory.bmp:
        * PSM/CQML/paradigms/icons/ns_supplier.bmp:
        * PSM/CQML/paradigms/icons/object.bmp:
        * PSM/CQML/paradigms/icons/objectref.bmp:
        * PSM/CQML/paradigms/icons/oneway.bmp:
        * PSM/CQML/paradigms/icons/operationref.bmp:
        * PSM/CQML/paradigms/icons/out.bmp:
        * PSM/CQML/paradigms/icons/outevent_lf.bmp:
        * PSM/CQML/paradigms/icons/outevent_rt.bmp:
        * PSM/CQML/paradigms/icons/outeventport.bmp:
        * PSM/CQML/paradigms/icons/package.bmp:
        * PSM/CQML/paradigms/icons/private.bmp:
        * PSM/CQML/paradigms/icons/project.bmp:
        * PSM/CQML/paradigms/icons/providedrequestport.bmp:
        * PSM/CQML/paradigms/icons/readonlyattribute.bmp:
        * PSM/CQML/paradigms/icons/realnumber.bmp:
        * PSM/CQML/paradigms/icons/receptacle_lf.bmp:
        * PSM/CQML/paradigms/icons/receptacle_rt.bmp:
        * PSM/CQML/paradigms/icons/requiredrequestport.bmp:
        * PSM/CQML/paradigms/icons/return.bmp:
        * PSM/CQML/paradigms/icons/rt_info-port.bmp:
        * PSM/CQML/paradigms/icons/rt_info.bmp:
        * PSM/CQML/paradigms/icons/rtec_proxy_consumer.bmp:
        * PSM/CQML/paradigms/icons/rtec_proxy_supplier.bmp:
        * PSM/CQML/paradigms/icons/rtec_resource_factory-port.bmp:
        * PSM/CQML/paradigms/icons/rtec_resource_factory.bmp:
        * PSM/CQML/paradigms/icons/setexception.bmp:
        * PSM/CQML/paradigms/icons/setexceptionref.bmp:
        * PSM/CQML/paradigms/icons/short.bmp:
        * PSM/CQML/paradigms/icons/string.bmp:
        * PSM/CQML/paradigms/icons/supports.bmp:
        * PSM/CQML/paradigms/icons/switchedaggregate.bmp:
        * PSM/CQML/paradigms/icons/switchedaggregateref.bmp:
        * PSM/CQML/paradigms/icons/task.bmp:
        * PSM/CQML/paradigms/icons/taskset.bmp:
        * PSM/CQML/paradigms/icons/timer.bmp:
        * PSM/CQML/paradigms/icons/twoway.bmp:
        * PSM/CQML/paradigms/icons/typeencoding.bmp:
        * PSM/CQML/paradigms/icons/typekind.bmp:
        * PSM/CQML/paradigms/icons/value.bmp:
        * PSM/CQML/paradigms/icons/valueref.bmp:
        * PSM/CQML/paradigms/icons/variablecollection.bmp:
        * PSM/CQML/paradigms/icons/variablecollectionref.bmp:
        * PSM/CQML/paradigms/icons/vertex.bmp:
        * PSM/CQML/paradigms/icons/worker.gif:
        * PSM/CQML/paradigms/icons/workerref.gif:
        * PSM/CQML/paradigms/icons/workspace.bmp:

        * cosmic.mwc:
        * cqmllib.mpb:

          Moved following these files to COSMIC_ROOT/PSM/CQML/interpreters

        * PIM/PICML/interpreters/DeploymentPlanFramework:

        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework_Export.h:
        * PIM/PICML/interpreters/DeploymentPlanFramework/Injector.h:

        * PIM/PICML/interpreters/FaultTolerance:

        * PIM/PICML/interpreters/FaultTolerance/FTAdders.h:
        * PIM/PICML/interpreters/FaultTolerance/FTAdders.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FTInjector.h:
        * PIM/PICML/interpreters/FaultTolerance/FTInjector.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FTVisitors.h:
        * PIM/PICML/interpreters/FaultTolerance/FTVisitors.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance.mpc:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance_Export.h:
        * PIM/PICML/interpreters/FaultTolerance/common.h:

        * PIM/PICML/interpreters/FaultToleranceComponent:

        * PIM/PICML/interpreters/FaultToleranceComponent/CompIcon.ico:
        * PIM/PICML/interpreters/FaultToleranceComponent/Component.aps:
        * PIM/PICML/interpreters/FaultToleranceComponent/Component.def:
        * PIM/PICML/interpreters/FaultToleranceComponent/Component.rc:
        * PIM/PICML/interpreters/FaultToleranceComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/FaultToleranceComponent.mpc:
        * PIM/PICML/interpreters/FaultToleranceComponent/RawComponent.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/FaultToleranceComponent/StdAfx.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/FaultToleranceComponent/UdmApp.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/FaultToleranceComponent/UdmConfig.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/resource.h:

Sat Aug  5 03:04:39 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/SIML/examples/SLICE.xme: Example model of SLICE scenario in
          SIML.

        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLVisitor.cpp:

          Bon Extender files for SIML.  These need tweaking.

        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:
        * PIM/SIML/paradigms/icons/Any.bmp:
        * PIM/SIML/paradigms/icons/Assembly.bmp:
        * PIM/SIML/paradigms/icons/AttributeMapping.bmp:
        * PIM/SIML/paradigms/icons/Average.bmp:
        * PIM/SIML/paradigms/icons/BandedConnection.bmp:
        * PIM/SIML/paradigms/icons/BandedConnectionRef.bmp:
        * PIM/SIML/paradigms/icons/Bridge.bmp:
        * PIM/SIML/paradigms/icons/Capability.bmp:
        * PIM/SIML/paradigms/icons/ComponentPackage.bmp:
        * PIM/SIML/paradigms/icons/ComponentProperty.bmp:
        * PIM/SIML/paradigms/icons/ComponentSet.bmp:
        * PIM/SIML/paradigms/icons/ConnectionBand.bmp:
        * PIM/SIML/paradigms/icons/Connector.bmp:
        * PIM/SIML/paradigms/icons/DataType.bmp:
        * PIM/SIML/paradigms/icons/Discrete-Benchmark.bmp:
        * PIM/SIML/paradigms/icons/Domain.bmp:
        * PIM/SIML/paradigms/icons/EnvironmentConf.bmp:
        * PIM/SIML/paradigms/icons/ExternalReferenceEndPoint.bmp:
        * PIM/SIML/paradigms/icons/FOU.bmp:
        * PIM/SIML/paradigms/icons/ImplementationArtifact.bmp:
        * PIM/SIML/paradigms/icons/ImplementationArtifactReference.bmp:
        * PIM/SIML/paradigms/icons/ImplementationDependency.bmp:
        * PIM/SIML/paradigms/icons/ImplementationReference.bmp:
        * PIM/SIML/paradigms/icons/ImplementationRequirement.bmp:
        * PIM/SIML/paradigms/icons/InputAction.bmp:
        * PIM/SIML/paradigms/icons/Interconnect.bmp:
        * PIM/SIML/paradigms/icons/Jitter.bmp:
        * PIM/SIML/paradigms/icons/Latency.bmp:
        * PIM/SIML/paradigms/icons/Max.bmp:
        * PIM/SIML/paradigms/icons/Min.bmp:
        * PIM/SIML/paradigms/icons/MonolithicImplementation.bmp:
        * PIM/SIML/paradigms/icons/Node.bmp:
        * PIM/SIML/paradigms/icons/NodeGroup.bmp:
        * PIM/SIML/paradigms/icons/OutputAction.bmp:
        * PIM/SIML/paradigms/icons/PackageConfiguration.bmp:
        * PIM/SIML/paradigms/icons/PackageConfigurationReference.bmp:
        * PIM/SIML/paradigms/icons/PackageReference.bmp:
        * PIM/SIML/paradigms/icons/Periodic-Bench.bmp:
        * PIM/SIML/paradigms/icons/PolicySet.bmp:
        * PIM/SIML/paradigms/icons/PolicySetRef.bmp:
        * PIM/SIML/paradigms/icons/PriorityModelPolicy.bmp:
        * PIM/SIML/paradigms/icons/Property.bmp:
        * PIM/SIML/paradigms/icons/RPG.bmp:
        * PIM/SIML/paradigms/icons/RTModel.bmp:
        * PIM/SIML/paradigms/icons/Requirement.bmp:
        * PIM/SIML/paradigms/icons/Resource.bmp:
        * PIM/SIML/paradigms/icons/ResourceContainer.bmp:
        * PIM/SIML/paradigms/icons/SatisfierProperty.bmp:
        * PIM/SIML/paradigms/icons/SharedResource.bmp:
        * PIM/SIML/paradigms/icons/SharedRiskGroup.bmp:
        * PIM/SIML/paradigms/icons/SimpleThreadPool.bmp:
        * PIM/SIML/paradigms/icons/StartState.bmp:
        * PIM/SIML/paradigms/icons/State.bmp:
        * PIM/SIML/paradigms/icons/ThreadPoolLane.bmp:
        * PIM/SIML/paradigms/icons/ThreadPoolRef.bmp:
        * PIM/SIML/paradigms/icons/ThreadPoolWithLanes.bmp:
        * PIM/SIML/paradigms/icons/Throughput.bmp:
        * PIM/SIML/paradigms/icons/TimerState.bmp:
        * PIM/SIML/paradigms/icons/TopLevelPackage.bmp:
        * PIM/SIML/paradigms/icons/Trigger-Bench.bmp:
        * PIM/SIML/paradigms/icons/action.bmp:
        * PIM/SIML/paradigms/icons/aggregate.bmp:
        * PIM/SIML/paradigms/icons/aggregateref.bmp:
        * PIM/SIML/paradigms/icons/alias.bmp:
        * PIM/SIML/paradigms/icons/aliasref.bmp:
        * PIM/SIML/paradigms/icons/attribute.bmp:
        * PIM/SIML/paradigms/icons/boolean.bmp:
        * PIM/SIML/paradigms/icons/boxed.bmp:
        * PIM/SIML/paradigms/icons/boxedref.bmp:
        * PIM/SIML/paradigms/icons/byte.bmp:
        * PIM/SIML/paradigms/icons/comp-proj.bmp:
        * PIM/SIML/paradigms/icons/component.bmp:
        * PIM/SIML/paradigms/icons/componentfactory.bmp:
        * PIM/SIML/paradigms/icons/componentfactoryref.bmp:
        * PIM/SIML/paradigms/icons/componentref.bmp:
        * PIM/SIML/paradigms/icons/composite.bmp:
        * PIM/SIML/paradigms/icons/conjunction_group.bmp:
        * PIM/SIML/paradigms/icons/const.bmp:
        * PIM/SIML/paradigms/icons/discriminator.bmp:
        * PIM/SIML/paradigms/icons/disjunction_group.bmp:
        * PIM/SIML/paradigms/icons/ec_consumer.bmp:
        * PIM/SIML/paradigms/icons/ec_dependency.bmp:
        * PIM/SIML/paradigms/icons/ec_event.bmp:
        * PIM/SIML/paradigms/icons/ec_option.bmp:
        * PIM/SIML/paradigms/icons/ec_proxy.bmp:
        * PIM/SIML/paradigms/icons/ec_proxy_consumer.bmp:
        * PIM/SIML/paradigms/icons/ec_proxy_supplier.bmp:
        * PIM/SIML/paradigms/icons/ec_resource_factory.bmp:
        * PIM/SIML/paradigms/icons/ec_supplier.bmp:
        * PIM/SIML/paradigms/icons/ec_supplier_id.bmp:
        * PIM/SIML/paradigms/icons/enum.bmp:
        * PIM/SIML/paradigms/icons/enumref.bmp:
        * PIM/SIML/paradigms/icons/enumvalue.bmp:
        * PIM/SIML/paradigms/icons/event.bmp:
        * PIM/SIML/paradigms/icons/event_sink.bmp:
        * PIM/SIML/paradigms/icons/event_source.bmp:
        * PIM/SIML/paradigms/icons/eventref.bmp:
        * PIM/SIML/paradigms/icons/eventtype-port.bmp:
        * PIM/SIML/paradigms/icons/eventtype.bmp:
        * PIM/SIML/paradigms/icons/exception.bmp:
        * PIM/SIML/paradigms/icons/exceptionref.bmp:
        * PIM/SIML/paradigms/icons/factory.bmp:
        * PIM/SIML/paradigms/icons/file.bmp:
        * PIM/SIML/paradigms/icons/fileref.bmp:
        * PIM/SIML/paradigms/icons/genericobject.bmp:
        * PIM/SIML/paradigms/icons/genericvalue.bmp:
        * PIM/SIML/paradigms/icons/genericvalueobject.bmp:
        * PIM/SIML/paradigms/icons/getexception.bmp:
        * PIM/SIML/paradigms/icons/in.bmp:
        * PIM/SIML/paradigms/icons/inevent_lf.bmp:
        * PIM/SIML/paradigms/icons/inevent_rt.bmp:
        * PIM/SIML/paradigms/icons/ineventport.bmp:
        * PIM/SIML/paradigms/icons/inherits.bmp:
        * PIM/SIML/paradigms/icons/inout.bmp:
        * PIM/SIML/paradigms/icons/label.bmp:
        * PIM/SIML/paradigms/icons/logical_and_group.bmp:
        * PIM/SIML/paradigms/icons/long.bmp:
        * PIM/SIML/paradigms/icons/lookup.bmp:
        * PIM/SIML/paradigms/icons/lookupkey.bmp:
        * PIM/SIML/paradigms/icons/member.bmp:
        * PIM/SIML/paradigms/icons/ns_admin.bmp:
        * PIM/SIML/paradigms/icons/ns_config.bmp:
        * PIM/SIML/paradigms/icons/ns_constraint.bmp:
        * PIM/SIML/paradigms/icons/ns_consumer.bmp:
        * PIM/SIML/paradigms/icons/ns_event.bmp:
        * PIM/SIML/paradigms/icons/ns_filter-port.bmp:
        * PIM/SIML/paradigms/icons/ns_filter.bmp:
        * PIM/SIML/paradigms/icons/ns_option.bmp:
        * PIM/SIML/paradigms/icons/ns_proxy.bmp:
        * PIM/SIML/paradigms/icons/ns_proxy_consumer.bmp:
        * PIM/SIML/paradigms/icons/ns_proxy_supplier.bmp:
        * PIM/SIML/paradigms/icons/ns_qos-port.bmp:
        * PIM/SIML/paradigms/icons/ns_qos.bmp:
        * PIM/SIML/paradigms/icons/ns_resource_factory-port.bmp:
        * PIM/SIML/paradigms/icons/ns_resource_factory.bmp:
        * PIM/SIML/paradigms/icons/ns_supplier.bmp:
        * PIM/SIML/paradigms/icons/object.bmp:
        * PIM/SIML/paradigms/icons/objectref.bmp:
        * PIM/SIML/paradigms/icons/oneway.bmp:
        * PIM/SIML/paradigms/icons/operationref.bmp:
        * PIM/SIML/paradigms/icons/out.bmp:
        * PIM/SIML/paradigms/icons/outevent_lf.bmp:
        * PIM/SIML/paradigms/icons/outevent_rt.bmp:
        * PIM/SIML/paradigms/icons/outeventport.bmp:
        * PIM/SIML/paradigms/icons/package.bmp:
        * PIM/SIML/paradigms/icons/private.bmp:
        * PIM/SIML/paradigms/icons/project.bmp:
        * PIM/SIML/paradigms/icons/providedrequestport.bmp:
        * PIM/SIML/paradigms/icons/readonlyattribute.bmp:
        * PIM/SIML/paradigms/icons/realnumber.bmp:
        * PIM/SIML/paradigms/icons/receptacle_lf.bmp:
        * PIM/SIML/paradigms/icons/receptacle_rt.bmp:
        * PIM/SIML/paradigms/icons/requiredrequestport.bmp:
        * PIM/SIML/paradigms/icons/return.bmp:
        * PIM/SIML/paradigms/icons/rt_info-port.bmp:
        * PIM/SIML/paradigms/icons/rt_info.bmp:
        * PIM/SIML/paradigms/icons/rtec_proxy_consumer.bmp:
        * PIM/SIML/paradigms/icons/rtec_proxy_supplier.bmp:
        * PIM/SIML/paradigms/icons/rtec_resource_factory-port.bmp:
        * PIM/SIML/paradigms/icons/rtec_resource_factory.bmp:
        * PIM/SIML/paradigms/icons/setexception.bmp:
        * PIM/SIML/paradigms/icons/setexceptionref.bmp:
        * PIM/SIML/paradigms/icons/short.bmp:
        * PIM/SIML/paradigms/icons/string.bmp:
        * PIM/SIML/paradigms/icons/supports.bmp:
        * PIM/SIML/paradigms/icons/switchedaggregate.bmp:
        * PIM/SIML/paradigms/icons/switchedaggregateref.bmp:
        * PIM/SIML/paradigms/icons/task.bmp:
        * PIM/SIML/paradigms/icons/taskset.bmp:
        * PIM/SIML/paradigms/icons/timer.bmp:
        * PIM/SIML/paradigms/icons/twoway.bmp:
        * PIM/SIML/paradigms/icons/typeencoding.bmp:
        * PIM/SIML/paradigms/icons/typekind.bmp:
        * PIM/SIML/paradigms/icons/value.bmp:
        * PIM/SIML/paradigms/icons/valueref.bmp:
        * PIM/SIML/paradigms/icons/variablecollection.bmp:
        * PIM/SIML/paradigms/icons/variablecollectionref.bmp:
        * PIM/SIML/paradigms/icons/vertex.bmp:
        * PIM/SIML/paradigms/icons/worker.gif:
        * PIM/SIML/paradigms/icons/workerref.gif:
        * PIM/SIML/paradigms/icons/workspace.bmp:

          New metamodel for SIML (System Integration Modeling Language).

Thu Aug  3 04:38:25 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/examples/AmazonWebServices.wsdl:
        * PIM/WSML/examples/AmazonWebServices.xme:
        * PIM/WSML/examples/CORBA.wsdl:
        * PIM/WSML/examples/CORBA.xsd:
        * PIM/WSML/examples/GoogleSearch.wsdl:
        * PIM/WSML/examples/GoogleSearch.xme:
        * PIM/WSML/examples/SLICE.wsdl:
        * PIM/WSML/examples/SLICE.xme:

          New directory with some example models and WSDL files.

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExportVisitor.java:

          Fixed a bug where we generated mis-matched names of messages
          between portType and binding.

        * PIM/WSML/paradigms/WSML-uml.xme:
        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xml:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated to reflect the latest round of changes.

Tue Aug  1 17:04:15 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/RawComponent.h:
        * PIM/PICML/addons/UUIDManager/RawComponent.cpp:

          The UUID manager now manages (creates/valdates) the UUIDs of
          the following PICML elements:

            - Component
            - ComponentAssembly
            - ComponentPackage
            - ComponentImplementation
            - DeploymentPlan
            - Domain
            - ImplementationArtifact
            - MonolithicImplementation

Tue Aug  1 15:14:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Added an activate environment input action to all components
          with a database worker so that a database connection could
          be established at component activation time.

Sun Jul 30 05:38:29 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/paradigms/WSML-uml.xme:
        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xml:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated metamodel to add an attribute called Order on Element
          which allows us to preserver the ordering of elements within a
          Schema.  Also removed the gazillion built-in types by creating a
          single element called AtomicType, which has an enum attribute
          with the various typecode choices.

        * PIM/WSML/interpreters/WSDLExporter/build.xml:

        * PIM/WSML/interpreters/WSDLExporter/src/WSML.xsd:

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExportVisitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExporter.java:

          First working version of the WSDLExporter.

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_udm_xml_0.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd_0.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd_1.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/AtomicType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Attribute.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Binding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingPortType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindsOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BodyBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BodyParts.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Definitions.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Documentation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Element.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibilityElement.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensiblePort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FactoryRepository.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Fault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FaultMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FaultRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderPart.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/IORef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Import.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Input.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/InputMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/InputRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Message.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/MessageRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Messages.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/MgaObject.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/NotificationOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OneWayOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Operation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OperationRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Output.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OutputMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OutputRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Part.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PartRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Port.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PortBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PortType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Referrable.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RequestResponseOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolder.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolderFileFactory.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolderStringFactory.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPAddress.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPBody.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPFault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPFaultExtension.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeader.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeaderFault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeaders.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Schema.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaBuiltins.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaImport.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaReference.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Service.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SolicitResponseOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Types.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Utils.java:
        * PIM/WSML/interpreters/WSDLExporter/src/test/TestExample.java:

        * PIM/WSML/interpreters/WSDLImporter/build.xml:

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Updates to accomodate changes to the metamodel.


        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PrimitiveTypes.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsAnyUri.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsBase64Binary.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsBoolean.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsByte.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDate.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDateTime.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDecimal.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDouble.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDuration.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsEntities.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsEntity.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsFloat.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGDay.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGMonth.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGMonthDay.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGYear.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGYearMonth.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsHexBinary.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsId.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsIdRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsIdRefs.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsInt.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsLanguage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsLong.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNcName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNegativeInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNmToken.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNmTokens.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNonNegativeInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNonPositiveInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNormalizedString.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNotation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsPositiveInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsQName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsShort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsString.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsTime.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsToken.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedByte.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedInt.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedLong.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedShort.java:

          Removed these files.

Fri Jul 28 19:32:51 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.cpp:

          Rewrote class binding_visitor to traverse the AST for
          all its actions, instead of traversing the DOM tree for
          some of them, and generating based on the contents of
          the corresponding port_type elements. This latter approach
          made the correctness of the generated XML dependent on
          the order of processing IDL files on the command line.
          Also refactored generation of 'fault' elements in class
          port_type_visitor to be similar to that conceived for
          class binding_visitor.

Fri Jul 28 17:11:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/RawComponent.cpp (verify_uuid):

          Fixed bug in UUID manager that was causing an infinite loop
          when a component was added to the model. It was a result
          of using CW2A () incorrectly.

          Currently, this bug was only present in the vc8 version.

Fri Jul 28 16:38:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.cpp:

          Fixed build error on vc8 resulting from insert () operation
          when constructing the hashdef for the CIDL file.

Fri Jul 28 04:37:56 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Refactored the model to reduce the number of projects generated
          by the CUTS interpreter and showcase some of the new functionality
          of the CIDL and CUTS interpreter.

Fri Jul 28 02:51:27 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/CIDLComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/CIDL_Interpreter/CIDL_Interpreter.mpc:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.cpp:

          Changed the entry point for the intepreter. Instead of creating
          CIDL files based on the interface definitions, we now genereate
          CIDL files based on the component implemenations.

        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.cpp:

          Removed these files.

Thu Jul 27 19:09:15 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:

          Fixed typos in code generation.

Thu Jul 27 15:01:56 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.cpp:

          Fixed several minor problems.

Thu Jul 27 04:00:09 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLExporter/build.xml:  Updated to use
          SLICE as example.

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExportVisitor.java:

          Initial attempt at WSDL export.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Separate the type definitions into elements and types, and add
          them into separate maps.  This ensures that we have accurate
          type information.

        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/dre/WSML/WSDLImporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Atom.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Attribute.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Author.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Comment.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Connection.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Connpoint.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Constraint.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Folder.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Model.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Name.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/ObjectFactory.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Project.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Reference.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Regnode.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Set.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Value.java:

          Removed these files.

Wed Jul 26 22:21:27 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp::

          Added support for interfaces as members and operation
          parameters.

Wed Jul 26 20:46:00 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/service_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.cpp:

          - Added 'schemaLocation' attribute to 'schema' element under
            'types'.

          - Added 'name' attribute to 'fault' element under 'binding'.

          - Removed all occurrences of 'Service', 'Binding', and 'Port'
            suffixes from generated code - they are not required by
            the mapping.

Wed Jul 26 04:00:55 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Reverted the change that removed slashes in File element names
          so that CUTS generated files still compile.  Jeff is working on
          the right fix.

        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:  Added an
          int return type to the member function to make it compile using
          VC8.

        * PIM/WSML/interpreters/WSDLExporter/build.xml:  New ant build file for
          building WSDLExporter tool.

        * PIM/WSML/interpreters/WSDLExporter/src/WSML.xsd:

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExportVisitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExporter.java:

          Files for the WSDLExporter tool.

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_udm_xml.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_udm_xml_0.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd_0.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd_1.java:

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Attribute.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Binding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingPortType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindsOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BodyBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BodyParts.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Definitions.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Documentation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Element.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibilityElement.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensiblePort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FactoryRepository.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Fault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FaultMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FaultRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderPart.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/IORef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Import.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Input.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/InputMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/InputRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Message.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/MessageRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Messages.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/MgaObject.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/NotificationOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OneWayOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Operation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OperationRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Output.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OutputMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OutputRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Part.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PartRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Port.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PortBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PortType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PrimitiveTypes.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Referrable.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RequestResponseOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolder.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolderFileFactory.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolderStringFactory.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPAddress.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPBody.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPFault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPFaultExtension.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeader.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeaderFault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeaders.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Schema.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaBuiltins.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaImport.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaReference.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Service.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SolicitResponseOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Types.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Utils.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsAnyUri.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsBase64Binary.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsBoolean.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsByte.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDate.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDateTime.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDecimal.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDouble.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDuration.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsEntities.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsEntity.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsFloat.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGDay.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGMonth.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGMonthDay.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGYear.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGYearMonth.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsHexBinary.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsId.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsIdRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsIdRefs.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsInt.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsLanguage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsLong.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNcName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNegativeInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNmToken.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNmTokens.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNonNegativeInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNonPositiveInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNormalizedString.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNotation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsPositiveInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsQName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsShort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsString.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsTime.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsToken.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedByte.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedInt.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedLong.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedShort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/package.html:

        * PIM/WSML/interpreters/WSDLExporter/src/test/TestExample.java:

          Udm generated API for WSML metamodel.

        * PIM/WSML/interpreters/WSDLImporter/build.xml:  Updated ant
          buildfile to build using environment variables.

        * PIM/WSML/paradigms/WSML-uml.xme:
        * PIM/WSML/paradigms/WSML.xml:

          New files required to use WSML with Udm.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated paradigm to put all the Message elements in a Definition
          underneath a Messages element, as they were polluting the
          top-level of a Definition.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Updated WSDLImporter to reflect changes in the paradigm.  The
          WSDLImporter also does validation of the input WSDL file against
          the WSDL schema.  So, the WSDLImporter only accepts valid WSDL
          files.

Tue Jul 25 23:24:53 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * POIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:
        * POIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:

          Fixed bug in 'import' attribute generation, and in 'name'
          attribute generation for ComplexType (IDL sequence).

Tue Jul 25 19:10:41 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/message_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:

          Fixed bug in message part generation when the type is array
          or sequence, and factored out some common type name
          generating code.

Tue Jul 25 17:00:29 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLStream.cpp:

          - Added logic to discover and generate an IDL #include
            for a base component, if it is in a different File
            model than its child.

          - Changed generation of filenames for output to always use
            the stripped name of the File model, removing any forward
            slashes that may have been added for other reasons.

          - Fixed a bug in the logic of ordering model elements in a
            given scope for IDL generation.

        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:

          Removed generation of 'xsd' qualifier before 'types' element.

        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:

          Changed to lower case some overlooked occurrences of 'SOAP-ENC'.

Mon Jul 24 19:56:25 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/IDL_to_WSDL.mpc:

          Changed installation of executable to $COSMIC_ROOT/bin.

Sun Jul 23 04:36:42 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Changed the names of the built-in types to be prefixed by Xs so
          that confusion doesn't reign when types such as int are used in
          the BON Extender code.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Updated to reflect change in the paradigm.

Sun Jul 23 03:10:54 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/message_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/message_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/service_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/service_visitor.h:

          New visitors, specialized to add types, messages, port
          types, bindings and services to the generated WSDL document.

        * PIM/WSML/interpreters/IDL_to_WSDL/IDL_to_WSDL.mpc:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_produce.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/README:

          Modified files. The idl_to_wsdl_visitor class is now a base
          class for the new visitors described above.

        * PIM/WSML/interpreters/IDL_to_WSDL/be_sunsoft.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_sunsoft.h:

          Removed files, stream output is not used by this backend.

Sat Jul 22 08:20:28 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC.ise: Updated installer to reflect new release
          of CoSMIC.

        * Installer/CoSMIC-Installer.aip:
        * Installer/CoSMIC-Installer.ise:

          Removed these files.

        * Installer/RegisterParadigm/RegisterParadigm.cpp: Updated the
          file to remove registration of OCML, since we don't release OCML
          anymore.

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf:  Updated to reflect upcoming
          CoSMIC-0.5.2.

        * default.features:  Added cidl=1 to enable building CUTS.
          Unnecessary complications...

        * Release.mwc:  New file to allow building all the pieces of
          CoSMIC that should be released.

Sat Jul 22 04:52:02 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          First complete version of the WSDLImporter.  Still needs work
          with respect to placement of elements.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Minor modifications including removal of name attribute from
          Definitions.

Fri Jul 21 08:22:32 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/build.xml: Minor updates.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Closer to completion, but not yet there.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:  Updated paradigm to make the
          connection between a BindingOperation and the bound Operation of
          the PortType explicit.

Thu Jul 20 09:06:55 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/build.xml:  Updated to
          reflect the parameters used for testing.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Added more functionality.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Atom.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Attribute.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Author.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Comment.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connection.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connpoint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Constraint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Folder.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Model.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Name.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/ObjectFactory.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Project.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Reference.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Regnode.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Set.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Value.java:

          Regenerated to fix the problem with the original dtd2xsd
          conversion.

        * PIM/WSML/interpreters/WSDLImporter/mga.xsd:  Added the converted
          mga.xsd file so that it is permanent.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:  Updated to move Port into
          Service.

Wed Jul 19 23:56:47 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp: Updated the
          visitor such that config/info properties attached to a component
          type are captured in the ccd file.

Tue Jul 18 03:08:12 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/build.xml: Updated the file
          such that this file doesn't need to be modified locally.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:

          Updated to reflect the split of the visitor logic into a
          separate class.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          New file which implements the visitation logic.

        * PIM/WSML/paradigms/WSML.xmp:  Added the paradigm file too to the
          repository.
        * PIM/WSML/paradigms/WSML.xme:  Updated paradigm to support
          setting attributes on a Definitions element.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/BindingImpl.java:

          Removed this file.

Fri Jul 14 22:28:21 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/build.xml:  Ant file for
          building WSDLImporter.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/BindingImpl.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:

          WSDImporter java source files.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Atom.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Attribute.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Author.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Comment.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connection.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connpoint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Constraint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Folder.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Model.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Name.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/ObjectFactory.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Project.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Reference.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Regnode.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Set.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Value.java:

          XML Schema to Java compiler (xjc) generated java files
          corresponding to the elements in mga.xsd.

Fri Jul 14 03:36:45 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.h:

          Fixed generation for valuetype inheritance and component
          inheritance and interface support.

Thu Jul 13 17:34:41 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:

          Fixed bug in generation of binding name.

Thu Jul 13 15:22:45 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/IDL_to_WSDL_BE_Export.h:

          New file, over looked in previous checkin.

        * PIM/WSML/interpreters/IDL_to_WSDL/README:

          Removed irrelevant item.

        * PIM/WSML/interpreters/IDL_to_WSDL/be_init.cpp (BE_post_init):

           Added call to frontend datastore class to set option to
           disable implied IDL generation from IDL3 constructs.

Thu Jul 13 15:01:54 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/be_extern.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_helper.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_helper.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_init.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_produce.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_sunsoft.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_sunsoft.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/EntityResolver.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/EntityResolver.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/IDL_to_WSDL.mpc:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/README:
        * PIM/WSML/interpreters/IDL_to_WSDL/XercesString.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/XercesString.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/XML_Error_Handler.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/XML_Error_Handler.h:

          New files, backend and MPC file for an IDL to WSDL translator.

Tue Jul 11 05:20:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Next version of the SLICE scenario with behavior.

Mon Jul 10 04:46:59 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Added 'Author', 'Comment' and 'Version' information to the
          model.

Mon Jul 10 03:57:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Re-birth of the SLICE scenario without any behavior.

Sun Jul  9 20:05:02 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/ComponentConfig.h:
        * PIM/PICML/addons/UUIDManager/RawComponent.h:
        * PIM/PICML/addons/UUIDManager/RawComponent.cpp:
        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:

          - Refactored the UUIDManager to get it ready for enhancements
            of truely managing UUIDs of all elements w/ a UUID.
          - The UUID manager no longer validates the UUIDs at load time
            due to GME exceptions, which I haven't resolved at this
            moment.

        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
        * PIM/PICML/interpreters/QoSMapping/QoSMappingVisitor.cpp:

          Fixed compiler warnings.

        * PIM/PICML/addons/UUIDManager/Component_Listener.h:
        * PIM/PICML/addons/UUIDManager/Component_Listener.cpp:

          Removed these files.

Fri Jul  7 21:40:21 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/paradigms/WSML.xme:  Updated to fix problems that were
          detected when actually modeling an example.  Added support for
          all the XML schema datatypes.

Thu Jul  6 05:28:52 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/paradigms/WSML.xme:  First version of Web Services
          Modeling Language (WSML).

Thu Jun 29 05:42:31 UTC 2006  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp: Fixed the
          AfxMessageBox() to not show a warning dialog box on successful
          generation.

Tue Jun 27 23:59:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/install.dat:
        * bin/installer.pl:

          Simple perl script that will install the CoSMIC interpreters
          if the regular registration method fails. Eventually the
          input file will become a XML-based file.

Sat Jun 24 02:53:04 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:  Fixed a
          compilation error with VC8.

Fri Jun 23 23:14:42 UTC 2006  Jeff parsons  <j.parosns@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.h:

          Fixed typo.

Fri Jun 23 19:43:48 UTC 2006  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/be_extern.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:

          - idl_to_picml backend changes corresponding to recent
            frontend changes to elminate memory leaks.

          - Change to MPC file to reflect recent changes to the
            inclusion of TAO/Version.h.

Fri Jun 23 01:54:18 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:
          Removed some legacy interpreters.

        * cosmic.mwc:
          Removed some legacy projects.

Fri Jun 16 22:10:48 UTC 2006  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * ChangeLog:  Integrated the version of CoSMIC from the ARMS
          X_5_1_REFRESH branch to the Subversion repository.  RIP CVS!

Tue Jun 13 04:54:27 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
          Fixed a few constraint violations in the FaultTolerance folder

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Added new constraints in the FaultTolerance paradigm sheet.

Thu Jun  8 17:18:23 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/Injector.h:
          Minor #ifdef changes.

        * PIM/PICML/interpreters/FaultTolerance/FTAdders.h:
        * PIM/PICML/interpreters/FaultTolerance/FTAdders.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FTInjector.h:
        * PIM/PICML/interpreters/FaultTolerance/FTInjector.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FTVisitors.h:
        * PIM/PICML/interpreters/FaultTolerance/FTVisitors.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance.mpc:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
        * PIM/PICML/interpreters/FaultTolerance/common.h:
          Restructured the FaultTolerance interpreter.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Added a few constraints in the FaultTolerance paradigm sheet.

Wed Jun  7 18:01:27 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.h:

          Support for generating simple cases of recursive IDL types.

Sun Jun  4 20:38:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Update the model(s) and regenerated the source code to match the new
          name decorations of the PICML interpreter.

        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_BDC_Ex.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_Shared_A.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_Shared_B.cdp:

          Regenerated the descriptors w/ the new entry points.

        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

          Removed this file.

Sat Jun  3 02:25:56 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:  Don't use
          ACE_NEW since Xerces doesn't override all the versions of
          operator new(), especially the new(nothrow_t) ones, which
          results in compile errors.  For now, just use plain new.  Fixes
          a compile error with VC8.

Fri Jun  2 04:42:45 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          InputAction elements in CBML now can contain Property
          elements.

Fri May 26 21:07:55 UTC 2006  Stoyan Paunov  <spaunov@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Fixed the bug which has to do with multiple ComponentImplementation-
          Descriptions having the same name, which leads to overwriting some
          files at descriptor generation time and ultimately to erroneous
          parsing of the PackageConfiguration

Fri May 26 20:01:26 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp: Updated the model
          to include the importance bin packer.

Fri May 26 18:03:14 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_BDC_Ex.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

          - Fixed errors in the model.
          - Revert the model back to the regular BDC.

Wed May 23 7:58:46 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

  * PIM/PICML/examples/RT1H/RT1H_Combined.xme

Thu May 18 19:36:13 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_BDC_Ex.cdp:

          Updated the RT1H model to include the extended BDC.

Mon May 15 23:02:30 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Sample_Strings/Sample_Strings.xme: Added the
          PICML model for the sample strings.

        * PIM/PICML/examples/Sample_Strings/descriptors/Analyzer.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/AnalyzerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Analyzer_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Analyzer_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Analyzer_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/AssemblyPlannerManager.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_Impl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Monolithic_Impl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Benchmark_Data_Collector.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Benchmark_Data_Collector_Ex.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/ComponentPackage.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/ConfigOp_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/ControllerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_Adapter_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/DeploymentPlan.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/Domain.cdd:
        * PIM/PICML/examples/Sample_Strings/descriptors/EffectorSecondary_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Main.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Main_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Main_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Main_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Secondary.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Secondary_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Secondary_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Secondary_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/EffectoryMain_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/EnvDectector_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Env_Dectector_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Env_Detector.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Env_Detector_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Env_Detector_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_Adapter_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_Adapter_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/MonolithicImplementation.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/OutputManager.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Adapter_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Manager.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_ManagerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Manager_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Manager_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Manager_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/PlanAnalyzerAssembly.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_Analyzer.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_AnalyzerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_Analyzer_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_Analyzer_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_Analyzer_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/PlannerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/PlannerOne_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/PlannerThree_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Manager.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_ManagerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Manager_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Manager_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Manager_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_One.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_One_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_One_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_One_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Three.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Three_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Three_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Three_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACE.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACE.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACE.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACE.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACEAllocation.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT10H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT10H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT10H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT10H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT11H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT11H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT11H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT11H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT1H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT1H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT1H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT1H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT2H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT2H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT2H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT2H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT3H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT3H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT3H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT3H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT4H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT4H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT4H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT4H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT5H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT5H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT5H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT5H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT6H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT6H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT6H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT6H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT7H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT7H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT7H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT7H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT8H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT8H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT8H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT8H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT9H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT9H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT9H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT9H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzer.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzer_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzer_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzer_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPacker.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPackerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPacker_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPacker_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPacker_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManager.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManagerImpl.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManagerImplMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManager_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManager_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManager_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/TopLevelPackage.tpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_Adapter_svnt.iad:

        Added the descriptors for the sample strings.

        * PIM/PICML/examples/Sample_Strings/source/Config_Op.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Config_Op.idl:
        * PIM/PICML/examples/Sample_Strings/source/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main.idl:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary.idl:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector.idl:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types.idl:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Planner.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Planner.idl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One.idl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three.idl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Sample_Strings.mwc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8_CoWorkEr.cpp:

        Added the CUTS generated code for the sample strings.

Sat May 13 00:24:46 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/descriptors/README: Added the README file.

Sat May 13 00:13:59 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/SPACE.xme: Updated the model to include
          the "Component Types" folder.

Sat May 13 00:09:37 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_Impl.cid:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_Package.cpd:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Monolithic_Impl.cid:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Package.cpd:
        * PIM/PICML/examples/SPACE/descriptors/BDC_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low.cid:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Benchmark_Data_Collector.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Benchmark_Data_Collector_Ex.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Domain.cdd:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Station.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Linux.cid:
        * PIM/PICML/examples/SPACE/descriptors/NodeDetails.dat:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo.cid:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo_Package.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/RACE.cdp:
        * PIM/PICML/examples/SPACE/descriptors/SPACE.cdp:
        * PIM/PICML/examples/SPACE/descriptors/SPACE.cid:
        * PIM/PICML/examples/SPACE/descriptors/SPACE.pcd:
        * PIM/PICML/examples/SPACE/descriptors/SPACE_Package.cpd:
        * PIM/PICML/examples/SPACE/descriptors/SPACE_PackageConfiguration.pcd:
        * PIM/PICML/examples/SPACE/descriptors/Space_Station.cid:
        * PIM/PICML/examples/SPACE/descriptors/TopLevelPackage.tpd:
        * PIM/PICML/examples/SPACE/descriptors/VxWorks.cid:
        * PIM/PICML/examples/SPACE/descriptors/deployment.dat:
        * PIM/PICML/examples/SPACE/descriptors/run_test.pl:

        Descriptors for the SPACE model.

Fri May 12 11:32:52 UTC 2006  James H. Hill  <hillj@isis.vaderbilt.edu>

        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Comm_Component.idl:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Event_Types.idl:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/SPACE.xme:
        * PIM/PICML/examples/SPACE/SPACE_CUTS.mwc:

          Checkin of valid model that deploys.

Thu May 11 23:03:47 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/Backup_Gizmo_High.cidl:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High.idl:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low.cidl:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low.idl:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Comm_Component.cidl:
        * PIM/PICML/examples/SPACE/Comm_Component.idl:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Compression_Component.cidl:
        * PIM/PICML/examples/SPACE/Compression_Component.idl:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Event_Types.cidl:
        * PIM/PICML/examples/SPACE/Event_Types.idl:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Exec_Component.cidl:
        * PIM/PICML/examples/SPACE/Exec_Component.idl:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Filter_Component.cidl:
        * PIM/PICML/examples/SPACE/Filter_Component.idl:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Ground_Component.cidl:
        * PIM/PICML/examples/SPACE/Ground_Component.idl:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Primary_Gizmo.cidl:
        * PIM/PICML/examples/SPACE/Primary_Gizmo.idl:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/SPACE_CUTS.mwc:

          Initial checkin of generated code.

Thu May 11 22:47:23 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/SPACE.xme:

          Fixed version skewing in the model.

Thu May 11 16:02:09 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp:

          Merged changes that somehow didn't get picked up when the ARMS
          branch was made.

Thu May 11 14:31:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc:

          Regenerated implemenation code to be consistent with
          CUTS architecture.

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:

          Regenerated implemenation code to be consistent with
          CUTS architecture.

        * PIM/PICML/examples/SPACE/SPACE.xme:

          Finished implementing the initial scenario.

Wed May 10 20:50:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:

          Updated the generated code to be consistent w/ the CUTS
          architecture.

        * PIM/PICML/examples/SPACE/SPACE.xme:

          Still completing the PICML model.

Wed May 10 7:58:46 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

  * PIM/PICML/interpreters/Package/PackageVisitor.cpp

    Added genration of infoProperties and configProperties
    on assemblies.

Wed May 10 6:58:46 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme

        Added web input datapter models.

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp

        Made connection names unique in generated deployment plans.

Wed May 10 00:58:46 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:

          Updated generated code to reflect changes in the CUTS
          architecture.

Fri May  5 06:34:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Added state variables to the I/O Automata language.
          - Added conditional workflows to I/O Automata language.

        * PIM/PICML/paradigms/icons/composite.bmp:

          Added missing bitmap.

Fri Apr 28 03:04:46 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op.idl:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main.idl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary.idl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector.idl:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types.idl:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One.idl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three.idl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_String.xme:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc:
        * PIM/PICML/examples/RACE/RACE.xme:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
        * PIM/PICML/examples/SPACE/SPACE.xme:

          Updated all examples to latest PICML paradigm and regenerated
          all the source files.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Behavior specification can have a concept of a CompositeAction,
            which allows hierarchial specification of workloads.
          - Removed WorkerActions from the metamodel. Everything is now
            expressed in terms of actions, instead of worker actions.

        * PIM/PICML/paradigms/icons/State.bmp:
        * PIM/PICML/paradigms/icons/action.bmp:
        * PIM/PICML/paradigms/icons/file.bmp:
        * PIM/PICML/paradigms/icons/worker.gif:
        * PIM/PICML/paradigms/icons/workerref.gif:
        * PIM/PICML/examples/Hog_String/Hog_Config_OpES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_OpS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_MainES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_MainS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_SecondaryES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_SecondaryS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Env_DetectorES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Env_DetectorS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_TypesS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_OneES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_OneS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_ThreeES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_ThreeS.cpp:
        * PIM/PICML/paradigms/icons/InOutAction.bmp:
        * PIM/PICML/paradigms/icons/InputState.bmp:
        * PIM/PICML/paradigms/icons/InternalAction.bmp:
        * PIM/PICML/paradigms/icons/OutputState.bmp:
        * PIM/PICML/paradigms/icons/ShutdownState.bmp:
        * PIM/PICML/paradigms/icons/StartupState.bmp:

          Removed these files.

Sat Apr 22 21:18:54 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/SPACE.xme:

          Initial PICML model of the SPACE example.

Fri Apr 21 23:19:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/SLICE.xme:
        * PIM/PICML/examples/SLICE/SLICE_CUTS.mwc:

          - Regenerated the code and updated model to use the new features of the
            interpreter.
          - The names of the library files are now placed in the
            'libs' section of the executor project.
          - The location of the worker file is placed in the 'includes' section
            of the executor project.
          - The location of the worker library is placed in the 'libpaths' section
            of the executor project.
          - The locations can handle environment variables in the format $(...).

        * PIM/PICML/examples/SLICE/slice-results.sql:

Thu Apr 20 02:19:51 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/Config_Op.cidl:
        * PIM/PICML/examples/SLICE/Config_Op.idl:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main.cidl:
        * PIM/PICML/examples/SLICE/Effector_Main.idl:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector.cidl:
        * PIM/PICML/examples/SLICE/Env_Detector.idl:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Error_Recovery.cidl:
        * PIM/PICML/examples/SLICE/Error_Recovery.idl:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types.idl:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_One.cidl:
        * PIM/PICML/examples/SLICE/Planner_One.idl:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_Three.cidl:
        * PIM/PICML/examples/SLICE/Planner_Three.idl:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/SLICE.xme:
        * PIM/PICML/examples/SLICE/SLICE_CUTS.mwc:

          Finish implementing the SLICE scenario.

        * PIM/PICML/examples/SLICE/Effector_Secondary.cidl:
        * PIM/PICML/examples/SLICE/Effector_Secondary.idl:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.mpc:

          Removed these files.

Wed Apr 19 09:29:16 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:

          Updated the periodic task to 1 Hz instead of 1000 Hz. This
          will make it consitent with the RT1H_Combined model.

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/SLICE_CUTS.mwc:

          Regenerated the source code with the new UDM interpreter for CUTS.

Tue Apr 18 23:38:14 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Merged changes after April ARMS demo.

Tue Apr 18 23:06:52 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Merging changes after April ARMS demo.

Sun Apr  9 16:24:27 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Merged the last checkin by Jai with the latest FT requirements folder.

Sun Apr  9 01:12:20 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Fixed the version skew caused by some overlapping checkins

Fri Apr  7 19:19:40 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/Injector.h:

          Changed the interface to support the ability of fixing the primary
          component's assignment and just inject replica assignement.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

          Supports above interface functionality.

        * PIM/PICML/interpreters/FaultToleranceComponent/UdmApp.cpp:

          Changed to start web-browser from within the interpreter.

Fri Apr  7 17:33:12 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/example/RT1H/RT1H_Combined.xme:

          Added the "importance" config property to the RT1H assembly.

Fri Apr  7 14:33:42 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/example/RT1H/RT1H_Combined.xme:

          Made changes to the package configuration elements to match
          their corresponding deployment plan names.

Fri Apr  7 14:05:51 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/example/RT1H/RT1H_Combined.xme:

          Changed the model to add memory and bandwidth execparameters to
          all the monolithic implementations that are part of the RT1H
          assembly.

Thu Apr  6 21:21:40 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
          Added some fault tolerance elements such as more SRGs.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
          The BranchNBound algorithm work in this version.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Changed FOURequirement to FOU_Requirement.

Thu Apr  6 19:49:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          - Added the extended BDC to the shared components assemblies.

Mon Apr  3 08:08:17 UTC 2006  William Otte <wotte>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme

          Minor changes to support demo.

Thu Apr  6 15:48:48 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op.idl:
        * PIM/PICML/examples/Hog_String/Hog_Config_OpES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_OpS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main.idl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_MainES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_MainS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary.idl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_SecondaryES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_SecondaryS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector.idl:
        * PIM/PICML/examples/Hog_String/Hog_Env_DetectorES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Env_DetectorS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types.idl:
        * PIM/PICML/examples/Hog_String/Hog_Event_TypesS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One.idl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_OneES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_OneS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three.idl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_ThreeES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_ThreeS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_String.cdp:
        * PIM/PICML/examples/Hog_String/Hog_String.xme:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc: Added the
          generated code for the "hog_string".

        * PIM/PICML/examples/Hog_string/Hog_string.xme: Removed this file.

Thu Apr  6 15:40:13 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * CUTS/cuts/CPUWorker.cpp: Calibrated the CPU worker for the
          blades.

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp: Modified the
          CPU workload coefficient of the WLGs.

Thu Apr  6 06:32:14 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Use the
          getPath() to generate names of ImplementationArtifacts and
          MonolithicImplementations.  Thanks to Stoyan for motivating this
          change.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to add
          more constraints to catch errors within ComponentPackage and
          ComponentImplementation.

Thu Apr  6 02:22:12 UTC 2006  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Use the
          getPath() to generate names of the primaryArtifact element
          inside a MonolithicImplementationDescription.  Thanks to Stoyan
          for reporting this enhancement.

Thu Apr  6 01:55:17 UTC 2006  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/decorators/CommonError.h:  Added a using statement to
          fix a compilation error with VC8.

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:  Fixes to
          allow compilation of IDLImporter with VC8.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Generate a
          UUID for the PackageConfigurationDescription element.  Also
          generate TopLevelPackageDescription elements with names as given
          in the model instead of overwriting the same file by using
          "package.tpd" for every TopLevelPackageDescription element.
          Thanks to Stoyan for pointing out these bugs.

Mon Apr  3 22:51:21 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          - Change the BDC to the extended BDC.
          - Moved the BDC to blade10 in the deployment plans.

        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/SLICE.xme:
        * PIM/PICML/examples/SLICE/descriptors/SLICE.cdp:
        * PIM/PICML/examples/SLICE/descriptors/System_Monitor.cdp:

          Updated the publication rate and regenerated the desciptors.

Mon Apr  3 19:56:46 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
          Changed CriticalPath_FTRequirements

Mon Apr  3 08:08:17 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
          Added some test cases for the FT Injector interpreter.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
          Integration of FT Injector with the DeploymentPlanFramework
          is complete. (components, connections and random node assignment)

Sun Apr  2 09:14:19 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
          Changed FaultTolerance folder.

        * PIM/PICML/interpreters/DeploymentPlanFramework/Injector.h:
          Updated DeploymentPlanFramework's injector interface.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Updated some FT elements.

Sat Apr  1 08:44:14 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Added FaultTolerance folder and other FT elements.

Sat Apr  1 05:07:03 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Updated the
          interpreter to generate specificType and supportedType elements
          for all the different port types in addition to the component
          types.

Fri Mar 31 20:23:16 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

          Refactored the interpreter to use DeploymentPlanFramework

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Changed FT paradigm sheet.

Thu Mar 30 18:02:52 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:

          Added changes to the deployment plan framework to add QoS injectors.


Wed Mar 29 18:25:07 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:

          First cut prototype of the deployment plan framework.

Wed Mar 29 17:37:41 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:
        * PIM/PICML/interpreters/FlatPlan:
        * PIM/PICML/interpreters/FlatPLanComponent:

          Made changes to remove the FlatPlan and FlatPlanComponent
          directories and its associated files.

          Update the interpreters.mwc to reflect the above change.

Wed Mar 29 23:25:23 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlan/Plan_Export.h:

          Removed the above mentioned files as they were no longer used.

Wed Mar 29 16:54:59 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlan.mpc:

          Made changes to use the new visitor files while creating the
          DeploymentPlan library.

Wed Mar 29 16:53:18 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.def:

          Made changes to create the flattened deployment plan DLL.

Wed Mar 29 16:50:31 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.def:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.rc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:

          Made changes to generate the flattened deployment plans.

Wed Mar 29 16:41:59 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlan_Export.h:

          Added new files under the DeploymentPlan directory, that
          generate the flattened deployment plans.

          The goal here is to get rid of the unnecessary directories
          in the CoSMIC repository.

          We will maintain the flattened deployment plan interpreter
          from this directory from now on.

          All other directories will be removed in the upcoming release.

Wed Mar 29 13:03:23 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme

Wed Mar 29 12:12:20 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

          Created new helper functions to generate deployment plan
          descriptor given a set of components and their connections.

Wed Mar 29 00:07:51 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

        More changes to the flat plan interpreter to separate the logic of
        parsing the deployment plan paradigm sheet and the actual
        generation of XML descriptors.

Wed Mar 29 05:20:34 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework_Export.h:

          The FlatPlanFramework has been renamed as DeploymentPlanFramework.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

          Changed dependencies.

        * PIM/PICML/interpreters/Interpreters.mwc:

          Added FaultTolerance and DeploymentPlanFramework projects

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Minor fixes in FT paradigm sheet.

Wed Mar 29 03:20:39 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:
          Modified to not build Fault Tolerance stuff and so called FlatPlanFramework

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Rechecking because apparently these files were not checked in successfully.

        * PIM/PICML/interpreters/FlatPlan/FlatPlanFramework.mpc:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanFrameworkVisitor.h:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanFramework_Export.h:

          Removed these files as these were checked in the FlatPlan directory
          errneously.

Tue Mar 28 20:17:38 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:
          Added FaultTolerance, FaultToleranceComponent, FlatPlanFramework

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Changed the meta-model to add Fault Tolerance elements.

        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance.mpc
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h
        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance_Export.h

          New Fault Tolerance interpreter along with FaultToleranceComponent

        * PIM/PICML/interpreters/FlatPlanFramework
          First cut of Flatplan Framework to integrate other interpreters
          into the original flatplan interpreter.

Tue Mar 28 20:15:17 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Removed the
          "Processor" Requirement which was causing constraint
          violations.  It is not used at present.

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Added
          support for generating RepositoryIds of Components in the .ccd
          file.

Tue Mar 28 14:07:03 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

          Made changes restructuring the flat plan interpreter to separate
          out the logic parsing the deployment plan paradigm sheet from
          point where it is used to write the XML descriptors.

Fri Mar 24 22:03:21 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to the flat plan interpreter to add execParameter
          tag into the MonolithicDeploymentDescription elements.

Fri Mar 24 15:49:16 UTC 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme

          Enhanced RA with elements necessary to support dynamic resource
          allocation and enhanced RT1High to have CPU utilization
          information.

Fri Mar 24 07:49:16 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/Hog_string/Hog_string.xme:  Updated the Hog
          assembly to reflect the change in the hostnames as well as the
          increase in the number of hosts.

Fri Mar 24 07:22:20 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated the model to
          fix the erroneous criticalPath element in the RT1H assembly.

Fri Mar 24 02:53:18 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Updated the flat plan interpreter to generate correct
          deployment plans when shared components are included.

Fri Mar 24 02:52:17 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Updated the model with the shared component scenario.
          Used the newly added shared component reference element to
          refer to the shared component in the deployment plan paradigm
          sheet.

          Thanks to Krishnakumar for discussing the solution.

Fri Mar 24 00:10:18 UTC 2006  Krishnkumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated the model to
          add more nodes.

        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:  Updated the
          descriptors.

Thu Mar 23 23:59:21 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        Made changes to the deployment plan paradigm sheet to support
        shared component deployments.

Thu Mar 23 17:13:52 2006  Nishanth Shanakran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Hog_string/Hog_string.xme:

        Modified the "hog" string so that it's identical to RT1High.

Thu Mar 23 21:39:21 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made a fix to include the right set of component assembly
          parents while creating the connections.

Thu Mar 23 07:49:42 UTC 2006  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated the model to
          include the assemblies and the deployment plans for the shared
          component deployment scenario.

        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:  Regenerated these
          files.

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:  Fixed a
          compilation problem where a string constant was split into two
          lines with an embedded newline character.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a
          problem where the UUID add-on was not getting triggered when
          elements are copied wholesale, i.e., when a whole assembly is
          cut'n paste and renamed, the individual components present in
          the two assemblies ended up sharing the same UUIDs.  Now the
          interpreter doesn't assume that UUIDs, if present are valid,
          i.e., component instances don't share the same UUID.  It checks
          it and changes it accordingly if they are the same.

Tue Mar 21 22:28:17 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made lot of cosmetic changes

Mon Mar 20 17:39:29 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Hog_string/Hog_string.xme:

        Added the model for the "hog_string".

Mon Mar 20 16:12:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

        Updated model to contain a deployment plan with on the
        components in the critical path. The deployment plan is
        called Critical-Path.

Fri Mar 17 20:16:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:

        Changed the periodic event's timeout to 1000 msecs.

        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:

        Changed the periodic event's timeout to 10000 msec for
        debugging purposes.

        * PIM/PICML/examples/SLICE/descriptors/node_map.dat:

  Updated the port number for the node mapping.

Fri Mar 17 19:52:36 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Added constraint NoSameTypePortNameClash to Component in
            ComponentType paradigm sheet. This constraint disallows
            name clashes between a Component's ports of the same
            category (facet, event sink, etc.). Violation of this
            constraint means that generated IDL won't compile, since
            implied IDL operations corresponding to the ports will
            be overloaded, which is not allowed in IDL.

          - Added constraint NoEmitsUsesPortNameClash to Component
            ComponentType paradigm sheet. Both emits (in PICML, an
            OutEventPort with the single_destination attribute set
            to TRUE) and uses (in PICML, a RequiredRequestPort) ports
            generate implied IDL operations called 'connect_<port name>',
            so a name clash must be disallowed for the same reason
            as above.

          - Rewrote the description (output error message) in the
            ValidEventConnection constraint in the AssemblyConnections
            paradigm sheet to cover all the logic of the constraint,
            rather than just half the logic as previously.

Thu Mar 16 23:56:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

        Regenerated the path diagram with the Nilabja's fix.

        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

        Regenerated the flat plan descriptors.

        * PIM/PICML/examples/SLICE/Config_Op.cidl:
        * PIM/PICML/examples/SLICE/Config_Op.idl:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main.cidl:
        * PIM/PICML/examples/SLICE/Effector_Main.idl:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Secondary.cidl:
        * PIM/PICML/examples/SLICE/Effector_Secondary.idl:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Env_Detector.cidl:
        * PIM/PICML/examples/SLICE/Env_Detector.idl:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types.cidl:
        * PIM/PICML/examples/SLICE/Event_Types.idl:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_One.cidl:
        * PIM/PICML/examples/SLICE/Planner_One.idl:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_Three.cidl:
        * PIM/PICML/examples/SLICE/Planner_Three.idl:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/SLICE.xme:
        * PIM/PICML/examples/SLICE/SLICE_CUTS.mwc:

        * PIM/PICML/examples/SLICE/descriptors/SLICE.cdp:
        * PIM/PICML/examples/SLICE/descriptors/System_Monitor.cdp:
        * PIM/PICML/examples/SLICE/descriptors/node_map.dat:

        Added the SLICE scenario to PICML examples.

Thu Mar 16 21:58:30 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp:
          Changed the code to diferentiate between Input and Output ports


Tue Mar 14 21:55:27 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

        Removed the cuts_coworker_id attributes from the model
        since it has no meaning in CUTS and the component id
        is taken from the context.

Tue Mar 14 21:47:51 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Config_Op.idl:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Main.idl:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary.idl:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Env_Detector.idl:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types.idl:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_One.idl:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three.idl:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:

        - Updated generated code to reflect changes in CUTS
          framework.
        - Remove the cuts_coworker_id () attribute from all the interface
          definitions for the application string since the id is provide
          by the DAnCE infrastructure.

        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

        Regenerated deployment descriptors. There were no changes. Just
        unconsciously did it!! :o)

Sat Mar 11 06:04:19 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed the
          format of the value of the criticalPath property as requested by
          Nishanth.

Fri Mar  10 21.50:11 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Corrected more entrypoint typos.

Fri Mar  10 21:18:21 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Made changes to the RACE model to change the entrypoint names
          of RACE controller and also the library names of the TargetManager
          implementation.

Fri Mar  10 21:10:35 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Target/DomainVisitor.cpp:

          Made changes to change the descriptor tag from Deployment:Domain
          to Deployment:domain.

Fri Mar 10 20:08:41 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp: Fixed a bug
          in the generation of the criticalPath configProperty.  Also
          changed the format of the configProperty to ease parsing.
          Thanks to Nishanth for reporting the problem.

Fri Mar 10 20:06:36 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
          Added the Top Level Packages for Application String.

Fri Mar  10 18:56:45 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to the interpreter to generate the EventEmitter
          tag appropriately.

Thu Mar  9 23:36:56 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a
          silly thinko where the internalEndPoints were not getting
          attached to the connection element.

Thu Mar  9 06:40:58 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme: Updated the model to
          reflect changes to the PathComponent and PackageComponent.  We
          now use a '/' to delineate nodes in the criticalPath as well as
          the configProperty elements created to capture properties
          attached to the criticalPath.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp: Fixed the
          interpreter to use '/' as the tokenizer element.

        * PIM/PICML/interpreters/Target/DomainVisitor.h:
        * PIM/PICML/interpreters/Target/DomainVisitor.cpp:  Updated the
          interpreter to generate XML for Resource elements.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to support
          the required extensions to SatisfierProperty for generation of
          valid component domain descriptors.

Thu Mar  9 05:40:55 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to insert "." instead of "_" in the path names
          of the instances, implementations and artifacts.

Thu Mar  9 04:48:01 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
          Fixed the Path interpreter to give node names with 'getPath'

Thu Mar   9 03:07:55 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to support selective deployment and shared
          components in the flattened deployment plan.

          Thanks to Krishnakumar for many helpful discussions leading
          to the solution for this problem.

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to get the UUIDs integrated with the path
          to create the instance deployment description names.

Wed Mar  8 16:50:45 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to the deployment plan interpreter to create
          instance description names with the collocation group name
          and the node name appended. This will allow duplicate instances
          to be deployed across different collocation groups.

          Thanks to Krishnakumar for helpful discussions leading to
          this solution.

Wed Mar  8 16:12:10 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Config_Op.cidl:
        * PIM/PICML/examples/RT1H/Config_Op.idl:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main.cidl:
        * PIM/PICML/examples/RT1H/Effector_Main.idl:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary.cidl:
        * PIM/PICML/examples/RT1H/Effector_Secondary.idl:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector.cidl:
        * PIM/PICML/examples/RT1H/Env_Detector.idl:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types.cidl:
        * PIM/PICML/examples/RT1H/Event_Types.idl:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One.cidl:
        * PIM/PICML/examples/RT1H/Planner_One.idl:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three.cidl:
        * PIM/PICML/examples/RT1H/Planner_Three.idl:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

          Checked in the neccessary source files to run the RTH1
          demo.

Wed Mar  8 16:00:56 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

  * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

    Made changes to use the names entered by the modeler
    for the artifact names. Previously, we were using the
    unique UUIDs.

Wed Mar  8 05:50:27 UTC 2006 Jaiganesh B <jai@dre.vanderbilt.edu>

  * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

    Fixed the logic of generating UUIDs to not prepend
    an _, unless they are used as IDs and IDREFs in XML
    terminology.

    Thanks to Krishnakumar for suggesting this fix.

Wed Mar  8 04:43:18 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated model to fix
          constraint errors due to duplicated UUIDs.  This will most
          likely cause errors during deployment.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed the
          logic of generating UUIDs to not prepend an _, unless it is
          needed.  Thanks to James for suggesting this fix.  Now, the
          UUIDs that are stored in the models are unadorned with _.  Fixed
          code where the idref attribute for component instances inside
          internalEndPoint were replaced with text elements which will
          break deployment since the schema uses an IDREF.

        * PIM/PICML/interpreters/Target/DomainVisitor.cpp:  Formatted the
          code.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:  Updated metamodel to fix some
          wrong constraints which didn't check for unique UUIDs
          effectively.

Wed Mar  8 01:42:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS/cuts/fe/PICML/PICMLBonX.h:
        * CUTS/cuts/fe/PICML/PICMLBonX.cpp:

          Regenerated BON extensions to match the metamodel.

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Verified the changes to the metamodel do not break anything.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Remodeled the changes that were missing from the version
          that was last checked in. In other words, there was a
          version mismatch.

Tue Mar  7 23:57:10 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS/cuts/System_Metric.h:
        * CUTS/cuts/System_Metric.inl:
        * CUTS/cuts/System_Metric.cpp:

          The component metrics of the system can be accessed
          outside the class.

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Updated the model to have the BDC as a shared component.

Tue Mar 7 23:18:55 UTC 2006  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

          Made changes to the FlatPlan interpreter to add support
          for selective deployments (ReDac), shared components support
          and UUID support.

Tue Mar 7 23:15:56 UTC 2006  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Made changes to add UUID attribute to the DeploymentPlan.

Tue Mar  7 19:47:47 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RACE/RACE.xme:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Updated the models to reflect the changes in CUTS. More
          specifically, update the location of the
          Benchmark_Data_Collector and its artifacts.

Mon Mar  6 21:25:34 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/addons/UUIDManager/component.def:  Fixed a warning
          about inconsistent name of the target dll.

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated to add an
          example of how path-specific properties can be assigned to an
          assembly.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a bug
          where we traversed null references.

        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp: Fixed a wrong
          check-in where somehow this file had the same contents as
          PackageComponent/UdmApp.cpp.

Mon Mar 6 16:34:01 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp

          Merge changes to support package config handlers from head.

Mon Feb 27 16:34:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Fixed bug in deployment plan specification for RT1H. The
          BDC was deployed on two seperate host, which meant
          replication which is not supported.

Mon Feb 27 15:50:26 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Combined the RACE + CUTS models into a single model until
          we have full generation for generating flat plans with
          shared components.

Mon Feb 27 04:44:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:

          Updated the RT1H model to reflect the changes to CUTS. All the
          components now use a Testing_Service interface.

Sun Feb 26 09:38:15 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:

          Updated the RT1H model to reflect the changes to CUTS.

Tue Feb 21 23:00:18 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:

          PICML model of RT1HIGH to be used the LM March Demo.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Updated the PeriodicAction method with a Probability attribute.
          - Fixed constraint that verifies each action has a parent worker.
          - Added constraint that verifies each output action's name matches
            the name of the output event port.

        * PIM/PICML/paradigms/icons/workerref.gif:

          Image for the WorkerType element.

Sat Feb 18 00:00:06 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Updated
          Package interpreter to generate descriptors for capturing
          critical path information required by RACE.

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:  Updated to reflect
          changes in the metamodel.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to support
          capturing critical path related metadata.

        * picmllib.mpb:  Removed the dialog box prompt from the
          interpreter registration.

Wed Feb 15 22:55:34 UTC 2006  Nilabja R  <nilabjar@invalid.domain>

        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
          Added a dialog box to change port order.

Tue Feb 14 19:34:39 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp

          Resolved compile errors/warnings associated with
          Borland Builder.

Mon Feb 13 16:37:21 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp (usage):

          Removed a redundant usage message and fixed formatting of
          another one.

Sun Feb 12 19:33:44 UTC 2006  NilabjaR  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp:
          Updated for the Path Diagram Interpreter

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Updated for changes in the Critical Path Component

Sat Feb 11 02:31:30 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/RegisterParadigm/RegisterParadigm.mpc:  Updated file
          to include dependencies.

        * PIM/PICML/decorators/PICMLDecorator.mpc:  Fixed file to depend
          on the global picmllib.mpb and not duplicate settings.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Visit the
          RootFolders inside RootFolder.  This takes care of handling
          libraries.  But this can also lead to problems, if the
          component/assembly instances in libraries don't have UUIDs.

        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp:  Fixed a
          warning.

        * picmllib.mpb:  Updated to include a generic outputext.

        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.sln:

          Removed this file.

Fri Feb 10 22:04:41 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

          Replaced usage of 'I_TRUE' and 'I_FALSE' with 'true'
          and 'false' respectively, to correspond with the changes
          in

          Wed Feb  8 18:26:11 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>


Wed Feb  8 20:58:10 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * picmllib.mpb:

          Added compile flag specific to Visual Studio that disables
          warning C4251, which is a bogus warning about exporting
          class members that are instantiations of some STL container
          template type.

Wed Feb  8 19:30:10 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Added 'cmdline' items to:

          - use the feature file at $COSMIC_ROOT/default.features
          - include $COSMIC_ROOT in the search path for base
            projects

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Added overlooked files to the MPC project. Thanks to Will
          Otte <wotte@dre.vanderbilt.edu> for pointing out the
          oversight.

Wed Feb  8 18:26:11 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:

          Removed all use of 'idl_bool' (typedef of long) and replaced
          with native 'bool'.

Wed Feb  8 17:54:02 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Added support for union discriminators of type char.

Wed Feb  8 17:16:49 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp (visit_valuebox):

          Added support for boxed valuetypes.

Tue Feb  7 17:24:46 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xml:

          Changed the LegalConstantValue constraint to use the toReal()
          conversion for the attribute value when bounds checking
          a PICML LongInteger constant type. The toInteger() conversion
          has a 32-bit bound, the same as that intended for LongInteger,
          so any rhs literal integer would get wrapped around to a
          legal value. Thanks again to Zoltan Molnar
          <zolmol@isis.vanderbilt.edu> and to Steve Baker
          <Stever_D_Baker@Raytheon.com> for their suggestions.

Mon Feb  6 23:18:59 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xml:

          - Added an aspect to WorkerFile.
          - Changed the name of the aspect in the WML paradigm sheet
            from Behavior to WorkerBehavior, to avoid an aspect name
            clash.
          - Removed an attribute in WML that wasn't attached to
            anything.
          - Changed the LegalDiscriminatorType constraint to accept
            a Discriminator of type Byte, which allows IDL unions
            with a discriminator of type Char to be imported without
            constratint violations.
          - Changed LegalConstantValue constraint to make the allowed
            limits of a LongInteger to be within the limits accepted
            by the Constrain Manager. Thanks to Zoltan Molnar
            <zolmol@isis.vanderbilt.edu> for help with this fix.

Mon Feb  6 21:52:28 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Renamed these files (by removing them) to the pair of
          (added) files below.

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:

          New name for removed files above.

        * PIM/PICML/interpreters/IDLImporter/picml_dom_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_dom_visitor.h:

          Renamed these files (by removing them) to the pair of
          (added) files below.

        * PIM/PICML/interpreters/IDLImporter/xme_dom_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/xme_dom_visitor.h:

          New name for removed files above.

        * PIM/PICML/interpreters/IDLImporter/removing_closure_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/removing_closure_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/removing_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/removing_visitor.h:

          New files, containing visitors which are subclasses of the
          base class visitor in xme_dom_visitor.{h,cpp}. The removing
          visitor traverses the DOM tree and removes anything whose
          GME id has not been added to a table by the adding visitor
          (which traverses the IDL of the input files).
          Each removal also spawns an instance of the removing closure
          visitor, which also traverses the DOM tree and removes
          references that refer to removed items and connections that
          have removed items as an endpoint. References are removed
          recursively until no more are discovered.

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/XML_Error_Handler.cpp:
        * PIM/PICML/interpreters/IDLImporter/XercesString.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:

          Changes to assist and stay in sync with the above changes.

        * PIM/PICML/docs/Importing_IDL.doc:
        * PIM/PICML/docs/Importing_IDL.pdf:

          Updates to documentation reflecting the above changes.

Mon Feb  6 16:49:10 UTC 2006  Stoyan Paunov  <spaunov@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:

          fixs for the compile error for the UUIDManager project.

        * PIM/PICML/interpreters/RTConfig/RTConfigVisitor.h:
        * PIM/PICML/interpreters/RTConfig/RTConfigVisitor.cpp:

          Tying up couple of loose screws in the RTConfig interpreter.

        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.vcproj:

          Removed this file.

Fri Feb  3 00:51:05 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/Component.rc:
        * PIM/PICML/addons/UUIDManager/ComponentConfig.h:
        * PIM/PICML/addons/UUIDManager/StdAfx.h:
        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:
        * PIM/PICML/addons/UUIDManager/component.def:
        * PIM/PICML/addons/UUIDManager/RawComponent.cpp
        * PIM/PICML/addons/UUIDManager/RawComponent.h
        * PIM/PICML/addons/UUIDManager/Component_Listener.cpp
        * PIM/PICML/addons/UUIDManager/Component_Listener.h

          Implemented the UUIDManager as a RawComponent.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated the CUTS/WML portion of PICML. Added constaints
          and simplified the I/O Automata and WML DSMLs.

        * cosmic.mwc:

          Added the UUIDManager back to the regular build.

Thu Jan 26 20:25:58 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Stubbed out the IOAutomata interpreter since we are no longer
          using configuration file in the new version of CUTS.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated the PICML paradigm with the CUTS modeling elements. This
          includes a new folder for containing workers and the ability for
          components to contain instances of worker actions and worker types.

        * PIM/PICML/paradigms/icons/worker.gif:

          GME image for the worker elements.

Fri Jan 20 19:29:35 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/BON2Component.cpp:

          Tried to fix bug WRT to importing a PICML model, but it's located
          in the BON library.

        * PIM/PICML/interpreters/PICML/Utils.cpp:

          Browse for folder dialog is displayed as a a modal dialog box.
          Also fixed bug where displaying dialog would cause GME to
          hide and the dialog would not show.

        * cosmic.mwc:

          Removed the UUIDManager from the default project build. It will remain
          this way until the bug in BON mentioned above is fixed.

        * PIM/PICML/interpreters/PathComponent/RegisterPathComponent.vcproj:

          Removed this file.

Fri Jan 20 15:30:17 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IOAutomata/README.txt: Added new into the repo.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Simplified/changed I/O Automata meta-model. Actions are changed from atoms
          to models which contain properties. Due to this change, the I/O Automata
          interpreter will not build in the CoSMIC source. Please checkout my Dec 14
          version if you want to build that interpreter.

        * PIM/PICML/paradigms/icons/State.bmp: Added a 'S'!

Tue Jan 17 20:07:45 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:  Updated the decorator
          to display shared components and component assemblies.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Updated the
          interpreter to add support for sharing components and component
          assemblies across different component assemblies.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to support
          shared components and component assemblies.

Sat Jan 14 00:46:12 UTC 2006  Nilabja Roy  <nilabjar@invalid.domain>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated paradigms to reflect CoSMIC-0.4.8 release.

Fri Jan 13 21:48:05 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf:
          The format of the Release Note and the Readme updated

        * PIM/PICML/interpreters/Path/Path.mpc:
        * PIM/PICML/interpreters/PathComponent/PathComponent.mpc:
          These are done to add the BOOST path to the Path Project

        * PIM/PICML/interpreters/PathComponent/Component.rc:
        * PIM/PICML/interpreters/PathComponent/resource.h:
          These are to change the icon file in the Path Project

        * PIM/PICML/interpreters/Path/Path.vcproj:

        * PIM/PICML/interpreters/PathComponent/Component.aps:
        * PIM/PICML/interpreters/PathComponent/PathComponent.vcproj:

          Removed these files. Unnecessary files

Wed Jan 11 03:10:54 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * Installer/CoSMIC-Installer.ise:
          Changed to prepare for the release of CoSMIC 0.4.8

        * PIM/OCML/interpreters/TAOServiceConfExporter/GNUmakefile:
        * PIM/OCML/interpreters/TAOServiceConfExporter/GNUmakefile.SvcConfExporter:

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf:

        * PIM/PICML/interpreters/Interpreters.mwc:
          Changed to include the new interpreter for Path Diagram

        * PIM/PICML/interpreters/Path/Path.mpc:
        * PIM/PICML/interpreters/Path/Path.vcproj:
        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
        * PIM/PICML/interpreters/Path/Path_Export.h:

        * PIM/PICML/interpreters/PathComponent/Component.aps:
        * PIM/PICML/interpreters/PathComponent/Component.def:
        * PIM/PICML/interpreters/PathComponent/Component.rc:
        * PIM/PICML/interpreters/PathComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/PathComponent/PathComponent.mpc:
        * PIM/PICML/interpreters/PathComponent/PathComponent.vcproj:
        * PIM/PICML/interpreters/PathComponent/Pathicon.ico:
        * PIM/PICML/interpreters/PathComponent/RawComponent.h:
        * PIM/PICML/interpreters/PathComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/PathComponent/RegisterPathComponent.vcproj:
        * PIM/PICML/interpreters/PathComponent/StdAfx.h:
        * PIM/PICML/interpreters/PathComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/PathComponent/UdmApp.h:
        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/PathComponent/UdmConfig.h:
        * PIM/PICML/interpreters/PathComponent/resource.h:

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Changed to add the new extension of PICML , Path Diagrams.
          This module generates all the possible paths that can take
          place in the run-time.

Wed Jan 11 02:36:07 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/addons/UUIDManager/ComponentConfig.h:  Fixed the
          hardcoded path to GME_ROOT to get this project to compile on
          Windows XP x64.

        * PIM/PICML/interpreters/QoSMappingComponent/RawComponent.h:
          Added required but missing file to the directory.

Tue Jan 10 16:41:18 2006  James H. Hill <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/BON2Component.h:
        * PIM/PICML/addons/UUIDManager/BON2Component.cpp:

          Fixed compilation issues.

        * PIM/PICML/interpreters/PICML/Utils.cpp:

          The validation routine for UUIDs does uses a UUID data
          structure on the stack to temporarily store the UUID instead
          of dynamically allocating a structure each time.

Tue Jan 10 02:32:47 2006  James H. Hill <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/BON2Component.h:
        * PIM/PICML/addons/UUIDManager/BON2Component.cpp:
        * PIM/PICML/addons/UUIDManager/Component.rc:
        * PIM/PICML/addons/UUIDManager/ComponentConfig.h:
        * PIM/PICML/addons/UUIDManager/Resource.h:
        * PIM/PICML/addons/UUIDManager/StdAfx.h:
        * PIM/PICML/addons/UUIDManager/StdAfx.cpp:
        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:
        * PIM/PICML/addons/UUIDManager/component.def:

          Created an add-on to managed the specification of UUIDs on
          Component and ComponentAssembly elements. Whenever an
          Component or ComponentAssembly is inserted into the model,
          a UUID is generated and stored in the model. Whenever an
          instance of a Component or a ComponentAssembly is inserted
          a UUID is generated and stored into the model. Also, if
          the UUID is manually changed by the user and its invalid,
          a new UUID is generated.

        * PIM/PICML/interpreters/PICML/Utils.h:
        * PIM/PICML/interpreters/PICML/Utils.cpp:

          Added a routine that validates an existing UUID.

        * cosmic.mwc:

          Excluded CUTS from the default build of CoSMIC since its
          not ready for nightly builds.

Sat Jan  7 05:13:29 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/QoSMappingComponent/CompIcon.ico:
          Updated icon to be different from PackageComponent.

        * PIM/PICML/interpreters/RTConfigComponent/CompIcon.ico:
        * PIM/PICML/interpreters/RTConfigComponent/Component.rc:
        * PIM/PICML/interpreters/RTConfigComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/RTConfigComponent/RTConfigComponent.mpc:
        * PIM/PICML/interpreters/RTConfigComponent/resource.h:

          Fixed icon to show up differently than the PackageComponent.
          The problem was due to two different image types, one at 32x32
          pixels and 16 colours, and another at 16x16 pixels and 16
          colours, being present within the same file.  This file
          was originally copied from PackageComponent's CompIcon.ico and
          only the 32x32 pixels, 16 colours was overridden.  But GME uses
          16x16 pixels, 16 colours by default.  So both this interpreter
          and PackageComponent ended up showing the same icon :-(

        * PIM/PICML/interpreters/IOAutomataComponent/Component.aps:
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib.tlb:
        * PIM/PICML/interpreters/RTConfigComponent/CompIcon_RTConfig.ico:
        * PSM/CCM/EQAL/interpreters/ComponentConfig.old:
        * PSM/CCM/MIDCESS/interpreters/ComponentConfig.old:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/ComponentConfig.old:

          Removed these files.

Thu Jan  5 20:07:26 2006  hillj  <hillj@isis.vanderbilt.edu>
        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Updated the IDL generator to skip IDL models/files that
          are defined in GME read-only libraries.

Thu Jan  5 08:42:17 2006  hillj  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.cpp:

          Fixed a bug in the CIDL interpreter involving the usage
          of modules. If multiple ComponentFactorys had the same name
          but in seperate Packages, it would create a single file and
          overwrite each the CIDL definitions. Now, each IDL file in a
          model generates its own CIDL file. All factories defined in
          that file are defined in the CIDL file. The interpreter also
          preserves Package location, which is represented as a module.

        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.cpp:

          Updated the IDL stream generator to reflect the changes above.

Tue Jan  3 16:25:16 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC-Installer.ise:

          Updated to reflect the addition of two new interpreters.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:

          Updated to fix the generation of UUIDs.  We no longer use the
          path of each element as the UUID, but generate UUIDs and store
          in the corresponding model element as an attribute.  This
          ensures that the UUIDs are not only unique, but also that they
          can be reused across multiple invocations of the interpreter.

        * PIM/PICML/paradigms/icons/boolean.bmp:
        * PIM/PICML/paradigms/icons/byte.bmp:
        * PIM/PICML/paradigms/icons/genericobject.bmp:
        * PIM/PICML/paradigms/icons/genericvalue.bmp:
        * PIM/PICML/paradigms/icons/genericvalueobject.bmp:
        * PIM/PICML/paradigms/icons/realnumber.bmp:
        * PIM/PICML/paradigms/icons/short.bmp:
        * PIM/PICML/paradigms/icons/string.bmp:
        * PIM/PICML/paradigms/icons/typeencoding.bmp:
        * PIM/PICML/paradigms/icons/typekind.bmp:

          Reverted the reduction in size to 32x32 pixels for these images,
          as they look awful at the lower resolution because they get
          stretched.

        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib.h:
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib_i.c:
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib_p.c:

          Removed these files.

Mon Jan  2 14:42:14 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Added backend option '-r <path>' to be passed instead
          of a list of IDL files. This option will cause the
          IDL importer to process every file having '.idl' or
          '.pidl' as an extension in the passed directory and
          all of its subdirectories.

        * PIM/PICML/interpreters/IDLImporter/picml_dom_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_dom_visitor.h:

          New files defining a visitor that will traverse the
          in-memory DOM tree and remove items not found in the
          corresponding AST formed from IDL files. This visitor
          is in development and is currently a no-op.

Fri Dec 16 16:21:14 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.h:

          Fixed a bug in which a Collection of PredefinedType was not
          getting mapped to generated IDL. Thanks to Prakash Manghwani
          <pmanghwani@bbn.com> for reporting the problem.

Thu Dec 15 17:55:07 2005  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

        Made changes to the monolithic implementation visitor
        to keep track of the interface or the type name, so that
        they can be referenced and matched, when creating the deployment
        plan.

Wed Dec 14 21:10:33 2005  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IOAutomata/IOAutomata.mpc:
        * PIM/PICML/interpreters/IOAutomata/IOAutomataVisitor.h:
        * PIM/PICML/interpreters/IOAutomata/IOAutomataVisitor.cpp:
        * PIM/PICML/interpreters/IOAutomata/IOAutomata_Export.h:

        Added the IOAutomata interpreter. IOAutomata is used to model the intra-component
        behavior in PICML. To find out the capabilities of the interpreter as of this date
        please see www.dre.vanderbilt.edu/~sutambe/files/IOAutomta_report_Dec_13.doc

        * PIM/PICML/interpreters/IOAutomataComponent/CompIcon.ico:
        * PIM/PICML/interpreters/IOAutomataComponent/Component.aps:
        * PIM/PICML/interpreters/IOAutomataComponent/Component.def:
        * PIM/PICML/interpreters/IOAutomataComponent/Component.rc:
        * PIM/PICML/interpreters/IOAutomataComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/IOAutomataComponent/IOAutomataComponent.mpc:
        * PIM/PICML/interpreters/IOAutomataComponent/RawComponent.h:
        * PIM/PICML/interpreters/IOAutomataComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/IOAutomataComponent/StdAfx.h:
        * PIM/PICML/interpreters/IOAutomataComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/IOAutomataComponent/UdmApp.h:
        * PIM/PICML/interpreters/IOAutomataComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/IOAutomataComponent/UdmConfig.h:
        * PIM/PICML/interpreters/IOAutomataComponent/resource.h:

        The IOAutomataComponent implementation for integration with GME

        * PIM/PICML/interpreters/Interpreters.mwc:

        Changed mwc file to build the IOAutomata interpreter and the IOAutomataComponent
        as a part of the CoSMIC solution.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        Changed the PICML meta-model to support behavior representation within a component.

        * PIM/PICML/paradigms/icons/InternalAction.bmp:
        * PIM/PICML/paradigms/icons/ShutdownState.bmp:
        * PIM/PICML/paradigms/icons/StartupState.bmp:
        * PIM/PICML/paradigms/icons/TimerState.bmp:

        Added a few extra icons for the behavior representation of PICML components
        in GME

Wed Dec 14 14:14:42 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/QoSMapping/QoSMappingVisitor.tpp

        Added a file that should have been part of my previous
        commit.

        * PIM/PICML/interpreters/QoSMapping/QoSMappingVisitor.cpp
        * PIM/PICML/interpreters/QoSMapping/QoSMappingVisitor.h

        Fixes for compile problems caused by the QoSConfiguration rename.

Wed Dec 14 00:13:05 2005  Stoyan Paunov  <spaunov@isis.vanderbilt.edu>

          * PIM/PICML/interpreters/Interpreters.mwc
          * PIM/PICML/interpreters/RTConfig/CIAOServerResources.xsd
          * PIM/PICML/interpreters/RTConfig/RTConfig.mpc
          * PIM/PICML/interpreters/RTConfig/RTConfigVisitor.cpp
          * PIM/PICML/interpreters/RTConfig/RTConfigVisitor.h
          * PIM/PICML/interpreters/RTConfig/RTConfig_Export.h
          * PIM/PICML/interpreters/RTConfig/constraints.txt
          * PIM/PICML/interpreters/RTConfigComponent/CompIcon_RTConfig.ico
          * PIM/PICML/interpreters/RTConfigComponent/Component.def
          * PIM/PICML/interpreters/RTConfigComponent/Component.rc
          * PIM/PICML/interpreters/RTConfigComponent/ComponentConfig.h
          * PIM/PICML/interpreters/RTConfigComponent/RTConfigComponent.mpc
          * PIM/PICML/interpreters/RTConfigComponent/RawComponent.cpp
          * PIM/PICML/interpreters/RTConfigComponent/RawComponent.h
          * PIM/PICML/interpreters/RTConfigComponent/StdAfx.cpp
          * PIM/PICML/interpreters/RTConfigComponent/StdAfx.h
          * PIM/PICML/interpreters/RTConfigComponent/UdmApp.cpp
          * PIM/PICML/interpreters/RTConfigComponent/UdmApp.h
          * PIM/PICML/interpreters/RTConfigComponent/UdmConfig.h
          * PIM/PICML/interpreters/RTConfigComponent/resource.h

            Checking in the RTConfig and the RTConfigComponent which comprise
            the interpreter for what was formerly known as QoSML and QoSPML.
            This interpreter is complient with CIAOServerResources.xsd version 1.8


Tue Dec 13 20:50:05 2005  Stoyan Paunov  <spaunov@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/icons/BandedConnection.bmp
        * PIM/PICML/paradigms/icons/BandedConnectionRef.bmp
        * PIM/PICML/paradigms/icons/ConnectionBand.bmp
        * PIM/PICML/paradigms/icons/EnvironmentConf.bmp
        * PIM/PICML/paradigms/icons/PolicySet.bmp
        * PIM/PICML/paradigms/icons/PolicySetRef.bmp
        * PIM/PICML/paradigms/icons/PriorityModelPolicy.bmp
        * PIM/PICML/paradigms/icons/RTModel.bmp
        * PIM/PICML/paradigms/icons/ResourceContainer.bmp
        * PIM/PICML/paradigms/icons/SimpleThreadPool.bmp
        * PIM/PICML/paradigms/icons/ThreadPoolLane.bmp
        * PIM/PICML/paradigms/icons/ThreadPoolRef.bmp
        * PIM/PICML/paradigms/icons/ThreadPoolWithLanes.bmp

          Checking in newest changes to the paradigm and the icons.
            As per Will's request QoS* has been changed to RT*.


Tue Dec 13 22:59:45 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Fixed bug in IDL generation from PICML Components - eliminated
          generation of attribute declarations from parent Components.

2005-12-13  William Otte <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc
        * PIM/PICML/interpreters/QoSMapping/QoSMapping.mpc
        * PIM/PICML/interpreters/QoSMapping/QoSMappingVisitor.cpp
        * PIM/PICML/interpreters/QoSMapping/QoSMappingVisitor.h
        * PIM/PICML/interpreters/QoSMapping/QoSMapping_Export.h
        * PIM/PICML/interpreters/QoSMappingComponent/CompIcon.ico
        * PIM/PICML/interpreters/QoSMappingComponent/Component.def
        * PIM/PICML/interpreters/QoSMappingComponent/Component.rc
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentConfig.h
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib.h
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib.tlb
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib_i.c
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib_p.c
        * PIM/PICML/interpreters/QoSMappingComponent/QoSMappingComponent.mpc
        * PIM/PICML/interpreters/QoSMappingComponent/RawComponent.cpp
        * PIM/PICML/interpreters/QoSMappingComponent/StdAfx.cpp
        * PIM/PICML/interpreters/QoSMappingComponent/StdAfx.h
        * PIM/PICML/interpreters/QoSMappingComponent/UdmApp.cpp
        * PIM/PICML/interpreters/QoSMappingComponent/UdmApp.h
        * PIM/PICML/interpreters/QoSMappingComponent/UdmConfig.h
        * PIM/PICML/interpreters/QoSMappingComponent/dlldata.c
        * PIM/PICML/interpreters/QoSMappingComponent/resource.h

        Added first cut of QoSMapping interpreters.  These will likely be
        redesigned copmletely in the coming weeks.

        * PIM/PICML/paradigms/PICML-uml.xme
        * PIM/PICML/paradigms/PICML.xme
        * PIM/PICML/paradigms/PICML.xml
        * PIM/PICML/paradigms/PICML.xmp

        Changes to the model necessary to accomodate the interpreters.

2005-12-11  William Otte   <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc

        Removed QoSMapping/Component from the workspace.

2005-12-09  William Otte <wotte@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme
        * PIM/PICML/paradigms/PICML.xme
        * PIM/PICML/paradigms/PICML.xml
        * PIM/PICML/paradigms/PICML.xmp

        Added initial cut of QoSModeling.

Thu Dec  8 23:54:16 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/docs/Importing_IDL.doc:
        * PIM/PICML/docs/Importing_IDL.pdf:

          Corrections and updates to IDL Importer documentation.

Wed Dec  7 21:18:21 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/ILDImporter/be_extern.h:
        * PIM/PICML/interpreters/ILDImporter/be_global.h:
        * PIM/PICML/interpreters/ILDImporter/picml_visitor.h:

          Changed 'TAO_PICML_' prefix in ifdef guards to 'IDL_TO_PICML_'.

Wed Dec  7 18:29:19 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/ILDImporter/EntityResolver.cpp:
        * PIM/PICML/interpreters/ILDImporter/EntityResolver.h:

          New files containing a subclass of DOMEntityResolver, used in
          the change below.

        * PIM/PICML/interpreters/ILDImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/ILDImporter/be_global.cpp:
        * PIM/PICML/interpreters/ILDImporter/be_global.h:

          Added code for the IDL importer to locate mga.dtd, which
          is the DTD file used by GME for its XML imports/exports.
          Locating this file is necessary if the IDL importer is
          inputting an XME file to modify instead of creating one
          from scratch. Thanks to Will Otte <wotte@dre.vanderbilt.edu>
          for the CIAO code example that these changes are based on.

        * PIM/PICML/interpreters/ILDImporter/picml_visitor.h:

          Updated a comment.

Wed Dec  7 000:31:42 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/Interpreters/IDLImporter.mpc:
        * PIM/PICML/Interpreters/XML_Error_Handler.h:
        * PIM/PICML/Interpreters/be_extern.h:
        * PIM/PICML/Interpreters/be_global.cpp:
        * PIM/PICML/Interpreters/be_global.h:
        * PIM/PICML/Interpreters/be_init.cpp:
        * PIM/PICML/Interpreters/be_produce.cpp:

          Renamed executable, backend library, export file and
          export macro contain 'IDL_TO_PICML_' instead of
          'TAO_PICML_', since this tool has nothing to do with
          TAO, and the name was confusing to users.

        * PIM/PICML/Interpreters/IDL_TO_PICML_BE_Export.h:

          New file, the result of the renaming described above.

        * PIM/PICML/Interpreters/TAO_PICML_BE_Export.h:

          Removed file, the results of the renaming described above.

        * PIM/PICML/docs/Importing_IDL.doc:
        * PIM/PICML/docs/Importing_IDL.pdf:

          Updated documentation to reflect the above changes.

Tue Dec  6 20:44:18 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/Interpreters/IDLGenerator/BON2Component.cpp:

          Corrected the type of message box that appears when IDL
          generation completes successfully.

Wed Nov 23 17:07:01 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/OCML/interpreters/OCML_Interpreter/BON2Component.h:
        * PIM/OCML/interpreters/OCML_Interpreter/Component.rc:
        * PIM/OCML/interpreters/OCML_Interpreter/ComponentConfig.h:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.mpc:
        * PIM/OCML/interpreters/OCML_Interpreter/component.def:

          Futile attempt to get OCML in a better shape.  It seems that
          some elements have been removed from the metamodel, and the BON
          Xtender code has not been updated.  Checking it in just in case,
          we want to make it work in the future.

        * PIM/PICML/interpreters/BGML/BGML.mpc:
        * PIM/PICML/interpreters/BGML/BGML_Visitor.h:
        * PIM/PICML/interpreters/BGML/BGML_Visitor.cpp:
        * PIM/PICML/interpreters/BGML/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML/Global_Data.h:
        * PIM/PICML/interpreters/BGML/IDL_Util.h:
        * PIM/PICML/interpreters/BGML/IDL_Util.cpp:
        * PIM/PICML/interpreters/BGML/MetricEmitter.h:
        * PIM/PICML/interpreters/BGML/MetricEmitter.cpp:
        * PIM/PICML/interpreters/BGML/Timer_Stream.h:
        * PIM/PICML/interpreters/BGML/Timer_Stream.cpp:
        * PIM/PICML/interpreters/BGML/TypeEmitter.h:
        * PIM/PICML/interpreters/BGML/TypeEmitter.cpp:
        * PIM/PICML/interpreters/BGMLComponent/BGMLComponent.mpc:
        * PIM/PICML/interpreters/BGMLComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/BGMLComponent/UdmConfig.h:
        * PIM/PICML/interpreters/BGML_Base/BGML_Base.mpc:
        * PIM/PICML/interpreters/BGML_Base/BGML_Task_Base.h:
        * PIM/PICML/interpreters/BGML_Base/BGML_Task_Base.cpp:
        * PIM/PICML/interpreters/CIDLComponent/CIDLComponent.mpc:
        * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/CIDLComponent/UdmConfig.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/CIDL_Interpreter.mpc:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.cpp:
        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.cpp:
        * PIM/PICML/interpreters/ConfigExport/ConfigExport.mpc:
        * PIM/PICML/interpreters/ConfigExport/ConfigExportVisitor.h:
        * PIM/PICML/interpreters/ConfigExport/ConfigExportVisitor.cpp:
        * PIM/PICML/interpreters/ConfigExport/UdmApp.cpp:
        * PIM/PICML/interpreters/ConfigExport/UdmConfig.h:
        * PIM/PICML/interpreters/Configurator/Configurator.mpc:
        * PIM/PICML/interpreters/Configurator/UdmApp.cpp:
        * PIM/PICML/interpreters/Configurator/UdmConfig.h:
        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlan.mpc:
        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.rc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmConfig.h:
        * PIM/PICML/interpreters/FlatPlan/FlatPlan.mpc:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlanComponent/Component.rc:
        * PIM/PICML/interpreters/FlatPlanComponent/FlatPlanComponent.mpc:
        * PIM/PICML/interpreters/FlatPlanComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/FlatPlanComponent/UdmConfig.h:
        * PIM/PICML/interpreters/IDLImporter/XML_Error_Handler.cpp:
        * PIM/PICML/interpreters/IDLImporter/XercesString.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/MPCComponent/MPCComponent.mpc:
        * PIM/PICML/interpreters/MPCComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/MPCComponent/UdmConfig.h:
        * PIM/PICML/interpreters/MPC_Interpreter/MPCStream.h:
        * PIM/PICML/interpreters/MPC_Interpreter/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC_Interpreter/MPC_Interpreter.mpc:
        * PIM/PICML/interpreters/MPC_Interpreter/MPC_Visitor.h:
        * PIM/PICML/interpreters/MPC_Interpreter/MPC_Visitor.cpp:
        * PIM/PICML/interpreters/PICML/PICML.mpc:
        * PIM/PICML/interpreters/PICML/Utils.h:
        * PIM/PICML/interpreters/PICML/Utils.cpp:
        * PIM/PICML/interpreters/PICML/XercesString.h:
        * PIM/PICML/interpreters/PICML/XercesString.cpp:
        * PIM/PICML/interpreters/Package/Package.mpc:
        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmConfig.h:
        * PIM/PICML/interpreters/Target/Domain.mpc:
        * PIM/PICML/interpreters/Target/DomainVisitor.h:
        * PIM/PICML/interpreters/Target/DomainVisitor.cpp:
        * PIM/PICML/interpreters/TargetComponent/Component.rc:
        * PIM/PICML/interpreters/TargetComponent/DomainComponent.mpc:
        * PIM/PICML/interpreters/TargetComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/TargetComponent/UdmConfig.h:

          Updated the files to fix the include directives.  The preferred
          method to include the files is to use the format:

          #include "PICML/PICML.h"
          #include "Package/PackageVisitor.h"

          instead of

          #include "PICML.h"
          #include "PackageVisitor.h"

        * PIM/PICML/paradigms/icons/Any.bmp:
        * PIM/PICML/paradigms/icons/Assembly.bmp:
        * PIM/PICML/paradigms/icons/AttributeMapping.bmp:
        * PIM/PICML/paradigms/icons/Average.bmp:
        * PIM/PICML/paradigms/icons/Bridge.bmp:
        * PIM/PICML/paradigms/icons/Capability.bmp:
        * PIM/PICML/paradigms/icons/ComponentPackage.bmp:
        * PIM/PICML/paradigms/icons/ComponentProperty.bmp:
        * PIM/PICML/paradigms/icons/ComponentSet.bmp:
        * PIM/PICML/paradigms/icons/DataType.bmp:
        * PIM/PICML/paradigms/icons/Discrete-Benchmark.bmp:
        * PIM/PICML/paradigms/icons/Domain.bmp:
        * PIM/PICML/paradigms/icons/ExternalReferenceEndPoint.bmp:
        * PIM/PICML/paradigms/icons/ImplementationArtifact.bmp:
        * PIM/PICML/paradigms/icons/ImplementationArtifactReference.bmp:
        * PIM/PICML/paradigms/icons/ImplementationDependency.bmp:
        * PIM/PICML/paradigms/icons/ImplementationReference.bmp:
        * PIM/PICML/paradigms/icons/ImplementationRequirement.bmp:
        * PIM/PICML/paradigms/icons/InputState.bmp:
        * PIM/PICML/paradigms/icons/Interconnect.bmp:
        * PIM/PICML/paradigms/icons/Jitter.bmp:
        * PIM/PICML/paradigms/icons/Latency.bmp:
        * PIM/PICML/paradigms/icons/Max.bmp:
        * PIM/PICML/paradigms/icons/Min.bmp:
        * PIM/PICML/paradigms/icons/MonolithicImplementation.bmp:
        * PIM/PICML/paradigms/icons/Node.bmp:
        * PIM/PICML/paradigms/icons/OutputState.bmp:
        * PIM/PICML/paradigms/icons/PackageConfiguration.bmp:
        * PIM/PICML/paradigms/icons/PackageConfigurationReference.bmp:
        * PIM/PICML/paradigms/icons/PackageReference.bmp:
        * PIM/PICML/paradigms/icons/Periodic-Bench.bmp:
        * PIM/PICML/paradigms/icons/Property.bmp:
        * PIM/PICML/paradigms/icons/Requirement.bmp:
        * PIM/PICML/paradigms/icons/Resource.bmp:
        * PIM/PICML/paradigms/icons/SatisfierProperty.bmp:
        * PIM/PICML/paradigms/icons/SharedResource.bmp:
        * PIM/PICML/paradigms/icons/StartState.bmp:
        * PIM/PICML/paradigms/icons/State.bmp:
        * PIM/PICML/paradigms/icons/Throughput.bmp:
        * PIM/PICML/paradigms/icons/TopLevelPackage.bmp:
        * PIM/PICML/paradigms/icons/Trigger-Bench.bmp:
        * PIM/PICML/paradigms/icons/aggregate.bmp:
        * PIM/PICML/paradigms/icons/aggregateref.bmp:
        * PIM/PICML/paradigms/icons/alias.bmp:
        * PIM/PICML/paradigms/icons/aliasref.bmp:
        * PIM/PICML/paradigms/icons/attribute.bmp:
        * PIM/PICML/paradigms/icons/boolean.bmp:
        * PIM/PICML/paradigms/icons/boxed.bmp:
        * PIM/PICML/paradigms/icons/boxedref.bmp:
        * PIM/PICML/paradigms/icons/byte.bmp:
        * PIM/PICML/paradigms/icons/comp-proj.bmp:
        * PIM/PICML/paradigms/icons/componentfactory.bmp:
        * PIM/PICML/paradigms/icons/componentfactoryref.bmp:
        * PIM/PICML/paradigms/icons/conjunction_group.bmp:
        * PIM/PICML/paradigms/icons/const.bmp:
        * PIM/PICML/paradigms/icons/discriminator.bmp:
        * PIM/PICML/paradigms/icons/disjunction_group.bmp:
        * PIM/PICML/paradigms/icons/ec_consumer.bmp:
        * PIM/PICML/paradigms/icons/ec_dependency.bmp:
        * PIM/PICML/paradigms/icons/ec_event.bmp:
        * PIM/PICML/paradigms/icons/ec_option.bmp:
        * PIM/PICML/paradigms/icons/ec_proxy.bmp:
        * PIM/PICML/paradigms/icons/ec_proxy_consumer.bmp:
        * PIM/PICML/paradigms/icons/ec_proxy_supplier.bmp:
        * PIM/PICML/paradigms/icons/ec_resource_factory.bmp:
        * PIM/PICML/paradigms/icons/ec_supplier.bmp:
        * PIM/PICML/paradigms/icons/ec_supplier_id.bmp:
        * PIM/PICML/paradigms/icons/enum.bmp:
        * PIM/PICML/paradigms/icons/enumref.bmp:
        * PIM/PICML/paradigms/icons/enumvalue.bmp:
        * PIM/PICML/paradigms/icons/event.bmp:
        * PIM/PICML/paradigms/icons/event_sink.bmp:
        * PIM/PICML/paradigms/icons/event_source.bmp:
        * PIM/PICML/paradigms/icons/eventref.bmp:
        * PIM/PICML/paradigms/icons/eventtype-port.bmp:
        * PIM/PICML/paradigms/icons/eventtype.bmp:
        * PIM/PICML/paradigms/icons/exception.bmp:
        * PIM/PICML/paradigms/icons/exceptionref.bmp:
        * PIM/PICML/paradigms/icons/factory.bmp:
        * PIM/PICML/paradigms/icons/fileref.bmp:
        * PIM/PICML/paradigms/icons/genericobject.bmp:
        * PIM/PICML/paradigms/icons/genericvalue.bmp:
        * PIM/PICML/paradigms/icons/genericvalueobject.bmp:
        * PIM/PICML/paradigms/icons/getexception.bmp:
        * PIM/PICML/paradigms/icons/in.bmp:
        * PIM/PICML/paradigms/icons/inevent_lf.bmp:
        * PIM/PICML/paradigms/icons/inevent_rt.bmp:
        * PIM/PICML/paradigms/icons/ineventport.bmp:
        * PIM/PICML/paradigms/icons/inherits.bmp:
        * PIM/PICML/paradigms/icons/inout.bmp:
        * PIM/PICML/paradigms/icons/label.bmp:
        * PIM/PICML/paradigms/icons/logical_and_group.bmp:
        * PIM/PICML/paradigms/icons/long.bmp:
        * PIM/PICML/paradigms/icons/lookup.bmp:
        * PIM/PICML/paradigms/icons/lookupkey.bmp:
        * PIM/PICML/paradigms/icons/member.bmp:
        * PIM/PICML/paradigms/icons/ns_admin.bmp:
        * PIM/PICML/paradigms/icons/ns_config.bmp:
        * PIM/PICML/paradigms/icons/ns_constraint.bmp:
        * PIM/PICML/paradigms/icons/ns_consumer.bmp:
        * PIM/PICML/paradigms/icons/ns_event.bmp:
        * PIM/PICML/paradigms/icons/ns_filter-port.bmp:
        * PIM/PICML/paradigms/icons/ns_filter.bmp:
        * PIM/PICML/paradigms/icons/ns_option.bmp:
        * PIM/PICML/paradigms/icons/ns_proxy.bmp:
        * PIM/PICML/paradigms/icons/ns_proxy_consumer.bmp:
        * PIM/PICML/paradigms/icons/ns_proxy_supplier.bmp:
        * PIM/PICML/paradigms/icons/ns_qos-port.bmp:
        * PIM/PICML/paradigms/icons/ns_qos.bmp:
        * PIM/PICML/paradigms/icons/ns_resource_factory-port.bmp:
        * PIM/PICML/paradigms/icons/ns_resource_factory.bmp:
        * PIM/PICML/paradigms/icons/ns_supplier.bmp:
        * PIM/PICML/paradigms/icons/object.bmp:
        * PIM/PICML/paradigms/icons/objectref.bmp:
        * PIM/PICML/paradigms/icons/oneway.bmp:
        * PIM/PICML/paradigms/icons/operationref.bmp:
        * PIM/PICML/paradigms/icons/out.bmp:
        * PIM/PICML/paradigms/icons/outevent_lf.bmp:
        * PIM/PICML/paradigms/icons/outevent_rt.bmp:
        * PIM/PICML/paradigms/icons/outeventport.bmp:
        * PIM/PICML/paradigms/icons/package.bmp:
        * PIM/PICML/paradigms/icons/private.bmp:
        * PIM/PICML/paradigms/icons/project.bmp:
        * PIM/PICML/paradigms/icons/providedrequestport.bmp:
        * PIM/PICML/paradigms/icons/readonlyattribute.bmp:
        * PIM/PICML/paradigms/icons/realnumber.bmp:
        * PIM/PICML/paradigms/icons/receptacle_lf.bmp:
        * PIM/PICML/paradigms/icons/receptacle_rt.bmp:
        * PIM/PICML/paradigms/icons/requiredrequestport.bmp:
        * PIM/PICML/paradigms/icons/return.bmp:
        * PIM/PICML/paradigms/icons/rt_info-port.bmp:
        * PIM/PICML/paradigms/icons/rt_info.bmp:
        * PIM/PICML/paradigms/icons/rtec_proxy_consumer.bmp:
        * PIM/PICML/paradigms/icons/rtec_proxy_supplier.bmp:
        * PIM/PICML/paradigms/icons/rtec_resource_factory-port.bmp:
        * PIM/PICML/paradigms/icons/rtec_resource_factory.bmp:
        * PIM/PICML/paradigms/icons/setexception.bmp:
        * PIM/PICML/paradigms/icons/setexceptionref.bmp:
        * PIM/PICML/paradigms/icons/short.bmp:
        * PIM/PICML/paradigms/icons/string.bmp:
        * PIM/PICML/paradigms/icons/supports.bmp:
        * PIM/PICML/paradigms/icons/switchedaggregate.bmp:
        * PIM/PICML/paradigms/icons/switchedaggregateref.bmp:
        * PIM/PICML/paradigms/icons/task.bmp:
        * PIM/PICML/paradigms/icons/taskset.bmp:
        * PIM/PICML/paradigms/icons/timer.bmp:
        * PIM/PICML/paradigms/icons/twoway.bmp:
        * PIM/PICML/paradigms/icons/typeencoding.bmp:
        * PIM/PICML/paradigms/icons/typekind.bmp:
        * PIM/PICML/paradigms/icons/value.bmp:
        * PIM/PICML/paradigms/icons/valueref.bmp:
        * PIM/PICML/paradigms/icons/variablecollection.bmp:
        * PIM/PICML/paradigms/icons/variablecollectionref.bmp:
        * PIM/PICML/paradigms/icons/workspace.bmp:

          Scaled down the icons to be 32x32 pixels, since we were losing a
          lot of screen real-estate to icons, especially at lower
          resolutions.  It looks fine even at 1600x1200.  This will be our
          future standard icon size.

        * picmllib.mpb:  Updated to fix the include paths as noted above.

        * PIM/OCML/interpreters/OCML_Interpreter/ComponentConfig.old:
        * PIM/OCML/interpreters/OCML_Interpreter/ConfigureComponent.exe:
        * PIM/OCML/interpreters/OCML_Interpreter/GMESources.txt:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.dsp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.vcproj:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.dsw:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/UdmConfig.h:

          Removed these files.

Mon Nov 21 15:10:05 2005  Stoyan Paunov  <spaunov@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Integrated the QoSPML metamodel in PICML.
          Will add the interpreter soon.


Sat Nov 19 15:21:26 CST 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/MPC_Interpreter/MPCStream.h:
        * PIM/PICML/interpreters/MPC_Interpreter/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC_Interpreter/MPC_Visitor.cpp:

          Added fix to the MPC generation based on problem reported by
          Vasili Goutos. The fix was to update the dependencies between
          the implementation artifacts when there was a base project
          associated.

Sun Nov 13 19:15:06 2005  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added support for capturing internal behaviour of components.
          We use I/O Automata to represent behaviour of components.  Also
          merged in changes from Nilabja for determining individual control
          flows in an assembly.

        * PIM/PICML/paradigms/icons/InOutAction.bmp:
        * PIM/PICML/paradigms/icons/InputAction.bmp:
        * PIM/PICML/paradigms/icons/InputState.bmp:
        * PIM/PICML/paradigms/icons/InternalAction.bmp:
        * PIM/PICML/paradigms/icons/OutputAction.bmp:
        * PIM/PICML/paradigms/icons/OutputState.bmp:
        * PIM/PICML/paradigms/icons/StartState.bmp:
        * PIM/PICML/paradigms/icons/State.bmp:

          Added icons for the I/O Automata extensions.

Fri Nov 11 01:09:24 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:

          Fixed incorrect XML generation for IDL enum values.

Thu Nov 10 23:18:05 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:

          Fixed incorrect XML generation for IDL constants.

Mon Nov  7 23:12:05 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:

          Fixed a problem with passing a string to an internal table
          that was later deleted and was thus retrieved from the
          table as a garbage value.

Mon Oct 31 15:57:54 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/ILDImporter/picml_visitor.cpp:

          Fixed cut-and-paste error that was causing incorrect XML to
          me generated for IDL typedefs. Thanks to Peter Oslej
          <peter.oslej@vrm.sk> for reporting the problem.

Sun Oct 23 19:10:00 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC-Installer.ise:  Updated to reflect the change
          in version.

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf: Updated to reflect CoSMIC version
          0.4.7.

        * PIM/PICML/interpreters/Interpreters.mwc:  Removed the
          default.features argument passed to the command-line.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Relax the rule that prohibited a
          single Property from being used to provide values for multiple
          AttributeMappings.  Thanks to Steven D Baker
          <steven_d_baker@raytheon.com> for motivating this change.

        * Installer/MergeModules/atl.msm:
        * Installer/MergeModules/comcat.msm:
        * Installer/MergeModules/comct232.msm:
        * Installer/MergeModules/comct332.msm:
        * Installer/MergeModules/comctl32.msm:
        * Installer/MergeModules/comdlg32.msm:
        * Installer/MergeModules/dbgrid32.msm:
        * Installer/MergeModules/dblist32.msm:
        * Installer/MergeModules/mci32.msm:
        * Installer/MergeModules/mfc42.msm:
        * Installer/MergeModules/mfc42u.msm:
        * Installer/MergeModules/msadodc.msm:
        * Installer/MergeModules/msbind.msm:
        * Installer/MergeModules/mschrt20.msm:
        * Installer/MergeModules/mscomct2.msm:
        * Installer/MergeModules/mscomctl.msm:
        * Installer/MergeModules/mscomm32.msm:
        * Installer/MergeModules/msdatgrd.msm:
        * Installer/MergeModules/msdatlst.msm:
        * Installer/MergeModules/msdatrep.msm:
        * Installer/MergeModules/msdbrptr.msm:
        * Installer/MergeModules/msderun.msm:
        * Installer/MergeModules/msflxgrd.msm:
        * Installer/MergeModules/mshflxgd.msm:
        * Installer/MergeModules/mshtmpgr.msm:
        * Installer/MergeModules/msinet.msm:
        * Installer/MergeModules/msmapi32.msm:
        * Installer/MergeModules/msmask32.msm:
        * Installer/MergeModules/msrdc20.msm:
        * Installer/MergeModules/msrdo20.msm:
        * Installer/MergeModules/msstdfmt.msm:
        * Installer/MergeModules/msstkprp.msm:
        * Installer/MergeModules/msvbvm60.msm:
        * Installer/MergeModules/msvcirt.msm:
        * Installer/MergeModules/msvcp60.msm:
        * Installer/MergeModules/msvcrt.msm:
        * Installer/MergeModules/mswcrun.msm:
        * Installer/MergeModules/mswinsck.msm:
        * Installer/MergeModules/oareg.msm:
        * Installer/MergeModules/oleaut32.msm:
        * Installer/MergeModules/picclp32.msm:
        * Installer/MergeModules/sysinfo.msm:
        * Installer/MergeModules/tabctl32.msm:

        * PIM/PICML/interpreters/default.features:
        * PIM/PICML/interpreters/picmllib.mpb:

          Removed these files as we don't need them anymore.

Fri Oct 21 000:10:58 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:

          Fixed a bug in visit_component() and visit_home() where
          an attemp to access the GME id of the component or home
          (in an internally maintained table) is made before the
          GME is stored there. Thanks to Like Ma <likemartinma@gmail.com>
          and Hubert Talbot <Hubert.Talbot@criq.qc.ca> for reporting
          the resulting lookup failure.

Sun Oct  9 21:56:25 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.ise:  Updated to correspond to
          CoSMIC-0.4.6

        * Installer/RegisterParadigm/RegisterParadigm.cpp:  Return 0 from
          the custom actions so that the installation rolls back instead
          of proceeding as if nothing happened.

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf:  Updated to reflect the changes
          corresponding to CoSMIC-0.4.6.

Sun Oct  9 20:33:54 2005  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

          Added changes to visit the property elements like
          config property using a separate helper function.

Sun Oct  9 19:46:31 2005  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Added changes to create config property tags for individual
          component instances in a flattened deployment plan.

Thu Oct  6 23:26:05 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/docs/Importing_IDL.doc:
        * PIM/PICML/docs/Importing_IDL.pdf:

          Updated IDL importing documentation.

Thu Oct  6 22:49:51 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/ILDImporter/XML_Error_Handler.cpp:
        * PIM/PICML/interpreters/ILDImporter/XML_Error_Handler.h:

          New files defining an error handler which is then attached
          to a DOM parser before it reads in an XML file (see new
          feature added below).

        * PIM/PICML/interpreters/ILDImporter/IDLImporter.mpc:

          Added new files above to the project generator.

        * PIM/PICML/interpreters/ILDImporter/XercesString.cpp:
        * PIM/PICML/interpreters/ILDImporter/XercesString.h:
        * PIM/PICML/interpreters/ILDImporter/be_produce.cpp:

          Cosmetic changes.

        * PIM/PICML/interpreters/ILDImporter/be_global.cpp:
        * PIM/PICML/interpreters/ILDImporter/be_global.h:
        * PIM/PICML/interpreters/ILDImporter/be_init.cpp:
        * PIM/PICML/interpreters/ILDImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/ILDImporter/picml_visitor.h:

          Added capability to read in an XML file, with the new
          option '-i <xxx.xme>' and, when processing the IDL
          files, check for the existence of each IDL declaration
          and reference in the resulting DOM tree before adding
          it. This means that IDL files updated WITH ADDITIONS ONLY
          can be processed to create an XME file which preserves
          all existing PICML assemblies, packages, implementations,
          etc.

Wed Oct  5 17:23:34 2005  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to generate read only attributes as part
          of the deployment plan, when component instances are selected
          for deployment.

          Thanks to James Hill <james.h.hill@vanderbilt.edu> for pointing
          the bug.

Wed Oct  5 16:19:27 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/RegisterParadigm/RegisterParadigm.mpc:  Included
          Meta.idl to the list of files to be compiled.

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a
          unintended side-effect where the name of the property attached
          to an attribute value was modified to match the name of the
          attribute upon running the interpreter.  Thanks to Steven D
          Baker <Steven_D_Baker@raytheon.com> for reporting the behaviour
          and giving a motivating example where this modification is
          undesirable.

Sun Oct  2 22:14:06 2005  Krishnakumar B  <kitty@spam.invalid.domain>


        * Installer/RegisterParadigm/Register_Paradigm.mpc:

          Removed this file.

Sun Oct 02 21:55:05 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
          Removed the ComponentLib.idl from under a separate MIDL_Files
          section.

Sun Oct  2 21:20:07 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC-Installer.ise:  Updated in preparation for
          CoSMIC release 0.4.6.  Specifically, the installer now creates
          the registry entries for all the interpreters manually instead
          of relying on regsvr32.exe to register.

        * Installer/RegisterParadigm/RegisterParadigm.def:  Updated to
          point to the correct functions to export.

        * Installer/RegisterParadigm/RegisterParadigm.cpp:  Refactored the
          code to remove unused code, and made it more modular.

        * Installer/RegisterParadigm/RegisterParadigm.mpc:  Created a new
          file with the contents of Register_Paradigm.mpc which was
          removed.

        * PIM/OCML/interpreters/OCML_Interpreter/ComponentLib_p.c:
          Removed this file.

        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.vcproj:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.sln:

          Updated to include the paths to the directory on my machine.  We
          should write an MPC file to get rid of this file altogether.

        * PIM/OCML/interpreters/OCML_Interpreter/OCMLVisitor.h:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLVisitor.cpp:

          Fixed line-endings and whitespaces.

        * PIM/PICML/interpreters/Configurator/UdmApp.cpp:  Fixed problem
          with the OCML configurator GUI not waiting for the user to enter
          values before proceeding to set the value of the attribute
          "value".

        * PIM/PICML/decorators/DecoratorConfig.h:
        * PIM/PICML/decorators/PICMLDecorator.mpc:
        * PIM/PICML/interpreters/BGMLComponent/BGMLComponent.mpc:
        * PIM/PICML/interpreters/BGMLComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/CIDLComponent/CIDLComponent.mpc:
        * PIM/PICML/interpreters/CIDLComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/ConfigExport/ComponentConfig.h:
        * PIM/PICML/interpreters/ConfigExport/ConfigExport.mpc:
        * PIM/PICML/interpreters/Configurator/ComponentConfig.h:
        * PIM/PICML/interpreters/Configurator/Configurator.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/EQAL/ComponentConfig.h:
        * PIM/PICML/interpreters/EQAL/EQAL.mpc:
        * PIM/PICML/interpreters/FlatPlanComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/FlatPlanComponent/FlatPlanComponent.mpc:
        * PIM/PICML/interpreters/IDLGenerator/ComponentConfig.h:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:
        * PIM/PICML/interpreters/MPCComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/MPCComponent/MPCComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/TargetComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/TargetComponent/DomainComponent.mpc:

          Updated ComponentConfig.h in all the above directories to define
          the appropriate value of GME_INTERFACES_BASE and GME_BASE
          instead of hardcoding them to C:\Program Files\GME, which
          doesn't work on Windows x64.  Also updated the MPC files to
          build using the MPC built-in MIDL keyword instead of defining a
          custom build.  This fixes some annoying problems with spaces in
          file paths, which causes problems with midl.exe on Windows x64
          (unlike Windows x86).

        * picmllib.mpb:  Removed the MIDL custom definition.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:
        * PIM/PICML/interpreters/MPC_Interpreter/MPCStream.cpp:  Updated
          to accomodate the change in the metamodel, where the cardinality
          of <implements> connection was changed from 0..* to 0..1.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to fix
          problems with constraint definitions for catching invalid uses
          of the publish connection.  Specifically, the metamodel will
          flag violations when trying to connect a publish event port
          using an emit connection.  Add a bunch of constraint related to
          the same.


Thu Sep 29 15:19:28 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:

          Modified the getPath() method, which pops up a message box
          prompting the user for an output directory, to return a
          boolean, and modified the usage to return immediately if
          getPath() returns 'false'. This enables the interpreter
          to correctly abort if the user clicks on 'Cancel' in
          the message box.

        * PIM/PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:

          Added code to make sure a component's parent (if any) gets
          handled when dependencies, and therefore code generation
          order, are getting sorted out.

        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.h:

          Added virtual initialize() method for inserted class Orderable,
          to remove ambiguity about which method in the inheritance
          hierarchy will get called.

Wed Sep 28 16:02:36 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
      * PIM/PICML/interpreters/MPC/MPCStream.cpp:

        Fixed a bug in the MPC interpreter reported by an user. The
        issue was the interpreter was generating projects without the
        _dnc suffix.

Wed Sep 14 16:31:05 2005 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlanVisitor.cpp:

        Made some cosmetic changes.

Wed Sep 14 14:46:08 2005 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlanVisitor.cpp:

        Fixed the interpreter to get rid of duplicate connections
        from the parent assembly.

Mon Sep 12 10:00:05 2005 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlanVisitor.cpp:

        Fixed the flat plan interpreter to create connections
        involving the parents of an assembly, when an assembly
        is chosen as an instance in the deployment plan
        paradigm sheet.

Sat Sep 10 21:40:55 2005 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlanVisitor.cpp:

        Fixed the flat plan interpreter to create the
        right port kinds within the connections of the
        deployment plan.

Wed Sep 7 16:50:35 2005  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlanVisitor.h:

          Made changes to the flat plan interpreter to generate
          configProperty along with instance tags of the
          deployment plan.

Wed Sep 7 15:50:35 2005 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlanVisitor.h:

          Made changes to the flat plan interpreter to attach
          node and collocation group name while creating
          an unique ID for the instances within the deployment
          plan.

Mon Sep 5 20:37:37 2005 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlanVisitor.cpp:

          Fixed the flat plan interpreter to generate
          configProperty elements for InstanceDeploymentDescription
          elements.

          Using the configProperty elements, InstanceDeploymentDescriptions
          could have properties like CPU Utilization associated with
          components.

          Thanks to Josh Chattin <jchattin@atl.lmco.com> and
          Krishnakumar Balasubramanian <kitty@dre.vanderbilt.edu>
          for reporting the problem.

Mon Sep  5 18:57:22 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/License.rtf:
        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf:
        * Installer/CoSMIC-Installer.ise:  Updated to reflect the move
          towards newer release.

        * Installer/RegisterParadigm/RegisterParadigm.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.def:
        * Installer/RegisterParadigm/RegisterParadigm.mpc:  Refactored the
          code to register paradigms.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a bug
          with generating configProperty elements where the contents were
          hooked up to the parent of configProperty.  Thanks to Jai for
          reporting the problem.

        * PIM/PICML/interpreters/PackageComponent/ComponentConfig.h:
          Fixed the GUIDs to be upper-case.  This actually turned out to
          be not an issue at all.

Thu Sep  1 21:13:26 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Add generation of model elements in the ComponentImplementations
          folder, for each component a collection of model elements
          representing a monolithic implementation is generated.

Mon Aug 29 23:35:05 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Added more generation of boilerplate model elements to
          the ImplementationArtifacts folder, now including the
          *_stub, *_svnt, and *_exec artifacts, the entryPoint
          properties, the dependsOn connections and the execParameter
          connections.

Tue Aug 23 22:17:32 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Add generation of XML elements corresponding to the top-level
          folders in PICML, apart from InterfaceDefinitions and
          PredefinedTypes, which were already generated. These folders
          are all empty at this point except for ComponentTypes,
          which contains a ComponentContainer model for each component
          processed in IDL, with a default name of the component's
          local name with "Container" appended. Each of these models
          in turn contains a reference to the component type in
          the InterfaceDefinitions folder, the reference having the
          default name of the component's local name with "Ref"
          appended. This checkin is the first of several that will
          eventually generate the boilerplate model elements needed
          for a complete PICML model, guided in some cases by
          interaction with the modeler.

Wed Aug 10 19:45:04 UTC 2005  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

          Made changes to modify the flat plan interpreter to
          confirm to the modified deployment schema.

          Also, made lot of cosmetic changes to use cool STL features.

Tue Aug  2 18:30:02 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:

          Add no-op (for now) implementation of visit_valuebox(),
          since a  pure virtual version was added to the base class
          ast_visitor.

Wed May 25 20:02:39 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp:  Updated the
          interpreter to add support for the items mentioned in the
          changelog entry below.

        * PIM/PICML/interpreters/TargetComponent/StdAfx.cpp:  Fixed some
          warnings related to pre-compiled headers.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated to add more constraints
          and fixed some cardinalities.

Tue May 24 20:26:00 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to add support for AttributeMapping, allowing delegation
          of multiple ports to a single delegate, and allowing
          specification of dependency of an ImplementationArtifact on
          another without going through a reference. Enhanced the
          metamodel to add a lot of constraints that should have existed
          all along.

Tue May 24 20:19:49 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/DeploymentPlanComponent/StdAfx.cpp:
          Silenced some warnings.

Wed May 18 14:30:13 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC-Installer.ise:

          Updated to fix minor problems with the installer.  Hopefully the
          next version should be easier to release.

Tue May 17 09:47:48 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/decorators/Decorator.rc:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/resource.h:

          Added support for displaying the referenced type of a DataType.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to add support for attribute mapping, exposing
          attributes of a component as ports, and associating property
          values to both attribute mappings and attributes.  Added a bunch
          of constraints.

        * PIM/PICML/paradigms/icons/DataType.bmp:
        * PIM/PICML/paradigms/icons/attribute.bmp:
        * PIM/PICML/paradigms/icons/readonlyattribute.bmp:

          Updated to make these icons look nicer when used as ports.

        * PIM/PICML/paradigms/icons/ExternalReferenceEndPoint.bmp:
        * PIM/PICML/paradigms/icons/AttributeMapping.bmp:

          New icons for these new elements in the metamodel.

Sat May 14 16:26:05 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/IDLMDecorators.cpp:

          Fixed cut and paste error that was keeping facets from beeing
          displayed as ports. Thanks to Krishnakumar B
          <kitty@nospam.invalid.domain> for pointing out the problem.

Fri May 13 16:43:15 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Added a check for modules that contain only nested modules
          and/or forward declarations. Such modules need not be imported
          into PICML, where forward declarations are not necessary.
          Skipping the importation of such modules also avoids a PICML
          constraint violation that checks for an empty Package model
          element.

Fri May 13 15:38:49 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.rc:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/resource.h:

          Added capability to draw attributes as ports in a PICML model.
          Future changes to PICML will use this capability, so that a
          Property model element can be connected to the attribute 'port',
          causing an interpreter to initialize the attribute's value in
          the component instance.

Wed May 11 17:50:59 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:  Fixed a
          bug with using names outside of scope, which resulted in wrong
          names getting generated for nodes.

Fri Apr 29 17:12:46 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a bug
          with duplicate connections being generated when publish
          connections are used.  Thanks to Jai for reporting the problem.

Thu Apr 28 16:14:46 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          In the OCL constraint that checks for unique operation names
          over local, inherited, and supported operations, removed the
          inclusion of model elements FactoryOperation and LookupOperation.
          In CORBA, valuetype factory operations are not inherited, and
          the same name may be reused in derived valuetypes. Neither the
          CCM nor the CORBA spec says anything along these lines about
          home factory and finder operations, so the same ruls is assumed.

Thu Apr 28 15:05:14 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:  Updated to fix the error where
          the constraint enforcing the requirement that each
          ComponentPackage to contain a reference to the Component
          interface that it contains an implementation of.

Thu Apr 28 01:54:54 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp: Updated to
          fix bugs with generation of incorrect package names.  This
          completes the fix that was made previously.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:  Updated to add a
          constraint to check that the ImplementationArtifact names are
          unique, that only instances of component assemblies can be used
          in a deployment plan, as well as requiring each ComponentPackage
          to contain a reference to the Component interface that it
          contains an implementation of.  This is needed to ensure that
          correct package names are generated as outlined in the fix
          above.

Wed Apr 27 22:50:18 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Added a fix
          so that the generated package names for component instances in
          an assembly correspond to the actual names of the packages in
          the model.  This fix is partial.

        * PIM/PICML/paradigms/PICML.xmp:  Updated to add a constraint to
          enforce the condition that ImplementationArtifacts should be
          unique.

Wed Apr 27 17:56:19 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

       * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

         Added code to find the assembly from the component reference.

Tue Apr 26 18:21:27 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC-Installer.ise:  Updated to check-in the latest
          version.

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Updated to
          fix the generation of properties other than "string" type.
          Thanks to Steven D Baker <Steven_D_Baker@raytheon.com> for
          reporting the problem.

Mon Apr 25 16:14:55 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Configurator/Configurator.mpc:  Updated
          to reflect dependency on config_exe project.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:  Updated to fix the
          problem with Require2Connections constraint.  Thanks to Diana
          Ukleja <Diana_Ukleja@raytheon.com> for reporting the problem.

Wed Apr 20 20:43:12 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * gtk.mpb:

          The mpb file for gtk+. This is specific for win32.

Wed Apr 20 20:30:39 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/gtkui/ocml_configurator_ui.mpc (project):
        * PIM/OCML/gtkui/main_window.hpp:
        * PIM/OCML/gtkui/configurator_ui.hpp:
        * PIM/OCML/gtkui/configurator_ui.cpp:
        * PIM/OCML/gtkui/CONFIGURATOR_UI_EXPORT.h:

          Added the gtkui directory, this is the placeholder for
          Configurator UI gtk+ implementation.

Wed Apr 20 14:43:05 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/docs/Importing_IDL.doc:
        * PIM/PICML/docs/Importing_IDL.pdf:

          Updated documentation, removed statement that recursive IDL
          types cannot be imported.

Wed Apr 20 14:28:56 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:

          Added support for recursive IDL types.

Wed Apr 20 09:04:23 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
       * PIM/PICML/interpreters/BGML/BGML_Visitor.cpp:
       * PIM/PICML/interpreters/BGML/TypeEmitter.cpp:

         Added support for handling Valuetype Objects. This was earlier
         added as GenericValue Object and was changed to ValueObject.

Tue Apr 19 21:35:28 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

       * PIM/OCML/ui/ocml_configurator_ui.mpc:

         Added one missing dependent library.

Tue Apr 19 17:31:35 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

       * PIM/PICML/interpreters/Configurator/Configurator.mpc:

         Added cvs tag and fixed a typo.

Tue Apr 19 16:59:53 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

       * PIM/OCML/ui/ocml_configurator_ui.mpc:

         Added CVS tag id.

Sun Apr 17 13:18:12 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

       * PIM/OCML/ocml.mwc:

         Deleted OCML tests from the workspace.

Fri Apr 15 12:55:06 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

       * PIM/PICML/Configurator/UdmApp.cpp:

         Changed the code calling Configurator via the ocml_configurator
         library, now it spawns config_exe.

Fri Apr 15 12:53:27 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/ocml.mwc:
        * PIM/OCML/config_exe/config_exe.cpp:
        * PIM/OCML/config_exe/config_exe.mpc:

          Added config_exe, a binary executable displays the Configurator GUI.

Fri Apr 15 11:04:17 CDT 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/BGMLComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/MPCComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp:

          Fixed the interpreters to generate code from any paradigm if
          possible. Tested for corner cases to make sure they work.

Fri Apr 15 10:02:38 2005  Gan deng  <dengg@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/BON2Component.cpp:

          Fixed to make the interpreter work from any model.

Fri Apr 15 00:49:38 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.ise:  New project file to create
          CoSMIC-Installer using InstallShield-X.

Thu Apr 14 23:27:23 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/ReleaseNotes.rtf:
        * PIM/PICML/Readme.rtf:

          Updated the Readme and ReleaseNotes for the 0.4.5 version.

Thu Apr 14 23:14:31 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/RegisterParadigm/RegisterParadigm.cpp: Return 1 from
          the RegisterParadigm() and UnRegisterParadigm() functions.
          All other return codes are considered to be error codes by
          Windows Installer.

        * PIM/PICML/interpreters/BGMLComponent/ComponentConfig.h: This
          component is not a BON2COMPONENT.  So define it to be a
          RAWCOMPONENT.

Thu Apr 14 18:41:19 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/RegisterParadigm/RegisterParadigm.def:  Removed the
          DESCRIPTION comment line.

        * Installer/RegisterParadigm/Register_Paradigm.mpc: Fixed the file
          to include the RegisterParadigm.def file on the link line.

        * PIM/OCML/ui/ocml_configurator_ui.mpc: Updated to use
          boost_base as a base project.

Thu Apr 14 17:44:53 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/OCML/engine/ocml_engine.mpc:  Changed to use the boost_base
          project as a base project.

        * default.features:  Added boost=1 and wxWindows=1 to the
          default.features list.

Thu Apr 14 14:27:38 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Added
          support for attributes via configProperty in an assembly.  This
          takes care of the case when an attribute is set on an individual
          component instance of a component assembly.

Thu Apr 14 09:48:34 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Added EQAL to the interpreters.mwc file.

Wed Apr 13 17:17:31 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * Installer/CoSMIC-Installer.aip:

          Added UdmDll.dll to the installer.

        * default.features:

          Added wxwindows=1 to the file.

Wed Apr 13 17:04:35 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/examples/BasicSP.xme:
        * PIM/PICML/examples/RobotAssembly.xme: Updated to reflect changes
          in the meta-model.  The user-visible change is due to the fact
          that an attribute, tree_file_name of ImplementationArtifact was
          removed.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Reverted to
          using the component instance's name for the
          MonolithicImplementation's package.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated the constraints to allow connections between a derived
          eventtype publisher and a base eventtype consumer.  As part of
          this, connections can only be made between base receptacle and
          derived facet, in addition to normal same type connections.
          Disallowed creation of references to component types inside
          Deployment Plan.

Wed Apr 13 13:02:29 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * Installer/CoSMIC-Installer.aip:

          Updated the installer file for the 0.4.5 release.

Wed Apr 13 12:17:43 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/paradigms/OCML.xmp:

          Added the OCML.xmp file into the repo.

Wed Apr 13 11:32:14 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Updated to be compatible with the most recent versions
          of ACE_MPC and the Xerces library naming conventions in
          CoSMIC.

Wed Apr 13 07:53:13 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/interpreters.mwc:

          Added IDLImporter directory.

Tue Apr 12 22:23:40 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Configurator/UdmApp.cpp:

          Deleted include to an invalid header file.

Tue Apr 12 22:09:25 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.cpp:

          Changed export macros from the class level to the individual
          public methods. Fixed a pointer error, causing interpreter to crash.

Tue Apr 12 17:16:39 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * cosmic.mwc:

          Added Installer/RegisterParadigm to the root mwc file.

Tue Apr 12 17:01:56 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.cpp: Updated
          to start intepretation from the RootFolder.

        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.def:
          Updated to refer to DeploymentPlanComponent.DLL instead of
          DeploymentPlan.DLL.

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:

        * PIM/PICML/interpreters/PICML/XercesString.h: Added exports for
          comparison operator functions for XercesString.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp: Updated the
          getPath() function to use "_" as the path delimiter since "/"
          creates invalid XML files.  The long term fix is to use "." as
          well as preventing the initial "." from being generated.  But
          this will need the next version of UDM.

        * PIM/PICML/interpreters/PackageComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp:

        * PIM/PICML/interpreters/TargetComponent/Component.def: Updated to
          fix the name

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added support for deploying component assemblies in addition to
          plain component instances.  Relaxed a constraint which required
          an assembly to contain atleast one component, which caused
          problems when a hierarchical assembly contained just two
          sub-assemblies.

Tue Apr 12 17:09:21 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * Installer/RegisterParadigm/StdAfx.h:
        * Installer/RegisterParadigm/StdAfx.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.dsp:
        * Installer/RegisterParadigm/RegisterParadigm.dsw:
        * Installer/RegisterParadigm/RegisterParadigm.mpc:
        * Installer/RegisterParadigm/RegisterParadigm.cpp:

          Created mpc file for the RegisterParadigm and ported to VC71.

Tue Apr 12 14:40:10 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Added some missing checks for null objects before calling
          operations on them.

Tue Apr 12 12:13:04 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp:

          Fixed error, which is causing wrong Utils.h to be included.

Tue Apr 12 12:08:31 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:

          Fixed error, which is causing wrong Utils.h to be included.

Tue Apr 12 11:50:56 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/common/ocml_common.mpc:

          Fixed link error.

Tue Apr 12 11:20:31 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorators.mwc:

          New file, omitted from checkin of

Tue Apr 12 10:55:37 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Configurator/CompIcon.ico:
        * PIM/PICML/interpreters/Configurator/Component.def:
        * PIM/PICML/interpreters/Configurator/Component.rc:
        * PIM/PICML/interpreters/Configurator/ComponentConfig.h:
        * PIM/PICML/interpreters/Configurator/Configurator.mpc:
        * PIM/PICML/interpreters/Configurator/RawComponent.cpp:
        * PIM/PICML/interpreters/Configurator/RawComponent.h:
        * PIM/PICML/interpreters/Configurator/resource.h:
        * PIM/PICML/interpreters/Configurator/StdAfx.cpp:
        * PIM/PICML/interpreters/Configurator/StdAfx.h:
        * PIM/PICML/interpreters/Configurator/UdmApp.cpp:
        * PIM/PICML/interpreters/Configurator/UdmApp.h:
        * PIM/PICML/interpreters/Configurator/UdmConfig.h:

          Added the UDM - Configurator interpreter.

Tue Apr 12 10:40:26 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/common/common_test.cpp:
        * PIM/OCML/common/ocml_common.mpc :
        * PIM/OCML/common/xerces_helpers.cpp:
        * PIM/OCML/engine/configurator.cpp :
        * PIM/OCML/engine/configurator.hpp:
        * PIM/OCML/engine/constraint_engine.cpp :
        * PIM/OCML/engine/constraint_engine.hpp:
        * PIM/OCML/engine/definitions.hpp :
        * PIM/OCML/engine/logic_rules.hpp:
        * PIM/OCML/engine/ocml_engine.mpc :
        * PIM/OCML/engine/option.hpp:
        * PIM/OCML/engine/option.ipp:
        * PIM/OCML/engine/option.tpp :
        * PIM/OCML/engine/option_interface.hpp:
        * PIM/OCML/engine/rule.hpp :
        * PIM/OCML/engine/tree_parser.cpp:
        * PIM/OCML/test/configurator_test.cpp :
        * PIM/OCML/test/configurator_ui_test.cpp:
        * PIM/OCML/test/constraint_engine_test.cpp :
        * PIM/OCML/test/constraint_engine_test_driver.cpp:
        * PIM/OCML/test/definitions_test_driver.cpp:
        * PIM/OCML/test/ocml_test.mpc :
        * PIM/OCML/test/option_value_test_driver.cpp:
        * PIM/OCML/test/rules_test_driver.cpp :
        * PIM/OCML/test/value_test_driver.cpp:
        * PIM/OCML/ui/boolean_option_editor.cpp :
        * PIM/OCML/ui/configurator_ui.cpp:
        * PIM/OCML/ui/ocml_configurator_ui.mpc :

          More ACE dependency extraction.

Mon Apr 11 22:15:44 2005  Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/EQAL.mpc:

          New files to generate VC projects, replacing the hand-written
          projects below.

        * PIM/PICML/interpreters/EQAL/IDLGenerator.dsp:
        * PIM/PICML/interpreters/EQAL/IDLGenerator.dsw:

          Removed files, replace by corresponding MPC files.

Mon Apr 11 19:59:06 CDT 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGMLComponent/UdmApp.cpp:

          Fixed the interpreter to use the getPath function defined in Utils
          directory than define its own!

       * PIM/PICML/interpreters/CIDL_Interpreter/*:

         Created directory to hold the cidl interpreter files. This directory
         holds only the logic (files required for interpretation)

       * PIM/PICML/interpreters/CIDLComponent/*:

         Holds the wrapper classes to create interpreter DLL to register with
         the paradigm

       * PIM/PICML/interpreters/MPC_Interpreter/*:

         Interpreter logic for generating MPC files

       * PIM/PICML/interpreters/MPCComponent/*:

         Wrapper for Registering MPC with GME

       * PIM/PICML/interpreters/Interpreters.mwc:

         Added these interpreters to the list of interpreters

Mon Apr 11 20:12:44 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cosmic.mwc:

          Added directory PIM/PICML/decorators.

        * PIM/PICML/decorators/DecoratorApp.def:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/MaskedBitmap.cpp:
        * PIM/PICML/decorators/StdAfx.cpp:

          Minor changes to enable compilation with VC 7.1.

        * PIM/PICML/interpreters/Interpreters.mwc:

          Added the IDLGenerator directory.

        * PIM/PICML/decorators/PICMLDecorator.mpc:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:

          New files to generate VC projects, replacing the hand-written
          projects below.

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsp:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsw:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.sln:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:
        * PIM/PICML/decorators/Decorator.dsp:
        * PIM/PICML/decorators/Decorator.dsw:

          Removed files, replace by corresponding MPC files.

Mon Apr 11 14:55:19 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/common/ocml_common.mpc:
        * PIM/OCML/engine/ocml_engine.mpc
        * PIM/OCML/test/ocml_test.mpc:
        * PIM/OCML/ui/ocml_configurator_ui.mpc:

          Removed ACE dependency from the project files.

Mon Apr 11 14:50:28 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/ocml.mwc:
        * cosmic.mwc:
        * default.features:
        * picmllib.mpb:

          Added a top-level mwc file.

Mon Apr 11 14:01:52 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/engine/ocml_engine.mpc:
        * PIM/OCML/test/configurator_ui_test.cpp:
        * PIM/OCML/test/ocml_test.mpc:
        * PIM/OCML/ui/boolean_option_editor.hpp:
        * PIM/OCML/ui/configurator_ui.cpp:
        * PIM/OCML/ui/configurator_ui.hpp:
        * PIM/OCML/ui/integer_option_editor.hpp:
        * PIM/OCML/ui/ocml_configurator_ui.mpc:
        * PIM/OCML/ui/option_editor.hpp:
        * PIM/OCML/ui/string_option_editor.hpp:

          Fixed directory and project issues.

Mon Apr 11 13:55:33 CDT 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML:

          Directory that contains the interpreter logic

        * PIM/PICML/interpreters/BGMLComponent:

          Directory that contains the wrapper files needed to create DLL
          and register with GME

Sun Apr 10 22:49:38 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/ConfigExport/ConfigExport.mpc:

          Modified to include the directory of the interpreter, i.e,
          ConfigExport in the search path for header files.

        * PIM/PICML/interpreters/ConfigExport/UdmApp.cpp:

          Modified to get the getPath() function working.

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlan.mpc:
        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlan/Plan_Export.h:

          New files migrated from the old plan directory.

        * PIM/PICML/interpreters/DeploymentPlanComponent/CompIcon.ico:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.def:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.rc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/RawComponent.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/StdAfx.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmConfig.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/resource.h:

          New files migrated from the old plan directory.

        * PIM/PICML/interpreters/Interpreters.mwc: Added the
          DeploymentPlan directory to the list of directories to be
          built.

        * PIM/PICML/interpreters/PICML/PICML.mpc:
        * PIM/PICML/interpreters/PICML/Utils.h:
        * PIM/PICML/interpreters/PICML/Utils.cpp:
        * PIM/PICML/interpreters/PICML/XercesString.h:

          Modifications to refactor common code (like getPath()) lying
          around in multiple files.

        * PIM/PICML/interpreters/Package/Package.mpc:

          Removed references to XercesString which has been refactored as
          above.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:

          Updated to use the archetype()'s name when dumping out names of
          the package references.

        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp:

          Changes related to the above mentioned refactoring.

        * PIM/PICML/interpreters/picmllib.mpb: Updated to use xerces.mpb.

        * PIM/PICML/interpreters/plan/CompIcon.ico:
        * PIM/PICML/interpreters/plan/Component.def:
        * PIM/PICML/interpreters/plan/Component.rc:
        * PIM/PICML/interpreters/plan/ComponentConfig.h:
        * PIM/PICML/interpreters/plan/DeploymentPlan.dsp:
        * PIM/PICML/interpreters/plan/DeploymentPlan.dsw:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PlanVisitor.h:
        * PIM/PICML/interpreters/plan/PlanVisitor.cpp:
        * PIM/PICML/interpreters/plan/RawComponent.h:
        * PIM/PICML/interpreters/plan/RawComponent.cpp:
        * PIM/PICML/interpreters/plan/StdAfx.h:
        * PIM/PICML/interpreters/plan/StdAfx.cpp:
        * PIM/PICML/interpreters/plan/UdmApp.h:
        * PIM/PICML/interpreters/plan/UdmApp.cpp:
        * PIM/PICML/interpreters/plan/UdmConfig.h:
        * PIM/PICML/interpreters/plan/UuidString.h:
        * PIM/PICML/interpreters/plan/UuidString.cpp:
        * PIM/PICML/interpreters/plan/XercesString.h:
        * PIM/PICML/interpreters/plan/XercesString.cpp:
        * PIM/PICML/interpreters/plan/resource.h:

          Removed these files.

Sun Apr 10 20:27:53 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/ConfigExport/ConfigExport.mpc:
        * PIM/PICML/interpreters/ConfigExport/UdmApp.cpp:

          Deleted the getPath() function, which is moved into the
          PICML/Utils.h file.

Sun Apr 10 20:17:04 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/PICML/Utils.h:
        * PIM/PICML/interpreters/PICML/XercesString.cpp:
        * PIM/PICML/interpreters/PICML/XercesString.h:
        * PIM/PICML/interpreters/Package/XercesString.cpp:
        * PIM/PICML/interpreters/Package/XercesString.h:
        * PIM/PICML/interpreters/PICML/PICML.mpc:

          Moved XercesString.* files into the PICML directory (these two
          are common files for all the interpreters.) Created the
          PICML/Utils.h file which includes getPath() function, to display
          a directory selection dialog.

Sun Apr 10 19:52:27 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/ConfigExport/CompIcon.ico:
        * PIM/PICML/interpreters/ConfigExport/Component.def:

        * PIM/PICML/interpreters/Interpreters.mwc:
        * PIM/PICML/interpreters/ConfigExport/CompIcon.ico:
        * PIM/PICML/interpreters/ConfigExport/Component.def:
        * PIM/PICML/interpreters/ConfigExport/Component.rc:
        * PIM/PICML/interpreters/ConfigExport/ComponentConfig.h:
        * PIM/PICML/interpreters/ConfigExport/ConfigExport.mpc:
        * PIM/PICML/interpreters/ConfigExport/ConfigExportVisitor.cpp:
        * PIM/PICML/interpreters/ConfigExport/ConfigExportVisitor.h:
        * PIM/PICML/interpreters/ConfigExport/RawComponent.cpp:
        * PIM/PICML/interpreters/ConfigExport/RawComponent.h:
        * PIM/PICML/interpreters/ConfigExport/StdAfx.cpp:
        * PIM/PICML/interpreters/ConfigExport/StdAfx.h:
        * PIM/PICML/interpreters/ConfigExport/UdmApp.cpp:
        * PIM/PICML/interpreters/ConfigExport/UdmApp.h:
        * PIM/PICML/interpreters/ConfigExport/UdmConfig.h:
        * PIM/PICML/interpreters/ConfigExport/resource.h:

          Switched OCML Service Configuration export interpreter from BON
          to UDM. Now, the interpreter always generates all the service
          configuration files at each interpret request, independent of
          the selected/focused object.

Fri Apr 8 11:11:23 CDT 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML-UML.xme:
        * PIM/PICML/paradigms/PICML.xml:

          Updates to the BGML meta model.

        * PIM/PICML/paradigms/icons/Discrete-Benchmark.bmp:
        * PIM/PICML/paradigms/icons/Periodic-Bench.bmp:
        * PIM/PICML/paradigms/icons/Trigger-Bench.bmp:

          New Icons for the BGML additions to the meta-model.


        * PIM/PICML/interpreters/BGML_Base/BGML_Task_Base.h:
        * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Global_Data.h:
        * PIM/PICML/interpreters/BGML_Interpreter/MetricEmitter.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/MetricEmitter.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/UdmApp.cpp:

          Enhancements to the BGML interpreter to do the following:
          --  generate code from any paradigm sheet and not requiring the
              user to choose the BGML paradigm
          --  rate based benchmarking
          --  allowing the background operations to be different than the
              main benchmarking task

        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.xsd:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:

          Update all Udm based interpreters of the change to BGML!


Fri Apr  8 06:09:13 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PROBLEM-REPORT-FORM:

          Added a problem report form.

Wed Mar 30 22:51:19 2005  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed bug
          which required users to uniquely name multiple instances of a
          single component within the same assembly.  Fixed bug where the
          top-level exploded assembly didn't contain connections between
          components in sub-assemblies.  Thanks to Steven D Baker
          <steven_d_baker@raytheon.com>  for reporting these.

        * PIM/PICML/interpreters/picmllib.mpb:  Added current directory,
          .\ explicitly to the include path.

        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.h:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:

          Removed these leftover erroneous files.

Mon Mar 14 14:50:39 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:

          Provide a standard interface get_stats () operation to access
          the Benchmark data generated from the experiment. Users now will
          be able to interface the data with external tools to analyze the
          statistics.

Sat Mar 05 15:08:24 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/engine/option_rules.tpp:
        * PIM/OCML/ui/boolean_option_editor.cpp:

          Fixed an issue regarding the boolean options. (Displaying wrong
          default value).

Fri Mar 04 09:00:20 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/engine/constraint_engine.cpp engine/option_interface.ipp:
        * PIM/OCML/engine/option_rules.hpp engine/option_rules.tpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBonX.h:
        * PIM/OCML/ui/boolean_option_editor.cpp ui/boolean_option_editor.hpp:
        * PIM/OCML/ui/integer_option_editor.cpp ui/integer_option_editor.hpp:
        * PIM/OCML/ui/option_editor.hpp ui/option_editor.ipp:
        * PIM/OCML/ui/string_option_editor.cpp ui/string_option_editor.hpp:

          Fixed possible sources for memory leak/invalid pointer problems.

Thu Mar 03 15:52:30 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/engine/tree_parser.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/ComponentLib_p.c:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.vcproj:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBonExtension_Manual.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBonX.h:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.ncb:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.suo:

          Changed OCML interpreter so that it exports enum options as
          string options. The idea is to get rid of the enum option
          concept in the configurator perspective.

Wed Mar 02 21:10:25 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/ocml.mwc:
        * PIM/OCML/common/FileSaveDlg.cpp:
        * PIM/OCML/common/FileSaveDlg.hpp:
        * PIM/OCML/common/algorithm.hpp:
        * PIM/OCML/common/algorithm.tpp:
        * PIM/OCML/common/callback_manager.hpp:
        * PIM/OCML/common/common_test.cpp:
        * PIM/OCML/common/exception.hpp:
        * PIM/OCML/common/function.hpp:
        * PIM/OCML/common/function.ipp:
        * PIM/OCML/common/iterator.hpp:
        * PIM/OCML/common/iterator.tpp:
        * PIM/OCML/common/line_parser.hpp:
        * PIM/OCML/common/line_parser.ipp:
        * PIM/OCML/common/line_parser.tpp:
        * PIM/OCML/common/string_utils.hpp:
        * PIM/OCML/common/string_utils.ipp:
        * PIM/OCML/common/xerces_helpers.cpp:
        * PIM/OCML/common/xerces_helpers.hpp:
        * PIM/OCML/common/xerces_helpers.ipp:
        * PIM/OCML/engine/actions.hpp:
        * PIM/OCML/engine/configurator.cpp:
        * PIM/OCML/engine/configurator.hpp:
        * PIM/OCML/engine/configurator.ipp:
        * PIM/OCML/engine/constraint_engine.cpp:
        * PIM/OCML/engine/constraint_engine.hpp:
        * PIM/OCML/engine/constraint_engine.ipp:
        * PIM/OCML/engine/definitions.cpp:
        * PIM/OCML/engine/definitions.hpp:
        * PIM/OCML/engine/definitions.ipp:
        * PIM/OCML/engine/definitions.tpp:
        * PIM/OCML/engine/logic_rules.cpp:
        * PIM/OCML/engine/logic_rules.hpp:
        * PIM/OCML/engine/logic_rules.ipp:
        * PIM/OCML/engine/logic_rules.tpp:
        * PIM/OCML/engine/option.hpp:
        * PIM/OCML/engine/option.ipp:
        * PIM/OCML/engine/option.tpp:
        * PIM/OCML/engine/option_interface.hpp:
        * PIM/OCML/engine/option_interface.ipp:
        * PIM/OCML/engine/option_reference.hpp:
        * PIM/OCML/engine/option_reference.ipp:
        * PIM/OCML/engine/option_reference.tpp:
        * PIM/OCML/engine/option_rules.hpp:
        * PIM/OCML/engine/option_rules.ipp:
        * PIM/OCML/engine/option_rules.tpp:
        * PIM/OCML/engine/option_traits.hpp:
        * PIM/OCML/engine/option_traits.ipp:
        * PIM/OCML/engine/option_value.hpp:
        * PIM/OCML/engine/option_value.ipp:
        * PIM/OCML/engine/option_value.tpp:
        * PIM/OCML/engine/rule.cpp:
        * PIM/OCML/engine/rule.hpp:
        * PIM/OCML/engine/rule.ipp:
        * PIM/OCML/engine/rules_grammar.cpp:
        * PIM/OCML/engine/rules_grammar.hpp:
        * PIM/OCML/engine/rules_grammar.tpp:
        * PIM/OCML/engine/tree_parser.cpp:
        * PIM/OCML/engine/tree_parser.hpp:
        * PIM/OCML/engine/tree_parser.ipp:
        * PIM/OCML/engine/value_parser.cpp:
        * PIM/OCML/engine/value_parser.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/BON2Component.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/DLLEntry.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/StdAfx.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/extern_declarations.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/BooleanEditControl.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/BooleanEditControl.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/BooleanOptionEditor.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/BooleanOptionEditor.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/ClearButton.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/ClearButton.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/DLLEntry.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/DLLEntry.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/EnumEditControl.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/EnumEditControl.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/EnumOptionEditor.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/EnumOptionEditor.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/IntegerEditControl.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/IntegerEditControl.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/IntegerOptionEditor.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/IntegerOptionEditor.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/MainApp.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/MainApp.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/MainFrame.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/MainFrame.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/OptionEditor.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/OptionEditor.ipp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/OptionEditorPanel.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/OptionEditorPanel.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/StringEditControl.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/StringEditControl.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/StringOptionEditor.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/StringOptionEditor.hpp:
        * PIM/OCML/interpreters/OCML_Interpreter/BON2Component.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBonExtension_Manual.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBonX.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLVisitor.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCML_Application.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCML_Utility.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/StdAfx.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/visitor.cpp:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/BON2Component.cpp:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/StdAfx.cpp:
        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.cpp:
        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.hpp:
        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.vcproj:
        * PIM/OCML/interpreters/TAOServiceConfExporter/extern_declarations.hpp:
        * PIM/OCML/test/configurator_test.cpp:
        * PIM/OCML/test/configurator_ui_test.cpp:
        * PIM/OCML/test/constraint_engine_test.cpp:
        * PIM/OCML/test/constraint_engine_test.hpp:
        * PIM/OCML/test/constraint_engine_test_driver.cpp:
        * PIM/OCML/test/definitions_test.cpp:
        * PIM/OCML/test/definitions_test.hpp:
        * PIM/OCML/test/definitions_test.tpp:
        * PIM/OCML/test/definitions_test_driver.cpp:
        * PIM/OCML/test/option_value_test.hpp:
        * PIM/OCML/test/option_value_test.ipp:
        * PIM/OCML/test/option_value_test.tpp:
        * PIM/OCML/test/option_value_test_driver.cpp:
        * PIM/OCML/test/rules_test.cpp:
        * PIM/OCML/test/rules_test.hpp:
        * PIM/OCML/test/rules_test.tpp:
        * PIM/OCML/test/rules_test_driver.cpp:
        * PIM/OCML/test/test.hpp:
        * PIM/OCML/test/test.ipp:
        * PIM/OCML/test/ui_test.cpp:
        * PIM/OCML/test/value_test.hpp:
        * PIM/OCML/test/value_test.ipp:
        * PIM/OCML/test/value_test.tpp:
        * PIM/OCML/test/value_test_driver.cpp:
        * PIM/OCML/text/Exception.hpp:
        * PIM/OCML/text/application.cpp:
        * PIM/OCML/text/application.hpp:
        * PIM/OCML/text/basic_commands.cpp:
        * PIM/OCML/text/basic_commands.hpp:
        * PIM/OCML/text/category_commands.cpp:
        * PIM/OCML/text/category_commands.hpp:
        * PIM/OCML/text/category_commands.tpp:
        * PIM/OCML/text/category_parser.hpp:
        * PIM/OCML/text/environment.cpp:
        * PIM/OCML/text/environment.hpp:
        * PIM/OCML/text/environment.ipp:
        * PIM/OCML/text/main.cpp:
        * PIM/OCML/text/ocml_console_application.cpp:
        * PIM/OCML/text/ocml_console_application.hpp:
        * PIM/OCML/text/option_commands.cpp:
        * PIM/OCML/text/option_commands.hpp:
        * PIM/OCML/text/rule_commands.cpp:
        * PIM/OCML/text/rule_commands.hpp:
        * PIM/OCML/ui/boolean_edit_control.cpp:
        * PIM/OCML/ui/boolean_edit_control.hpp:
        * PIM/OCML/ui/boolean_option_editor.cpp:
        * PIM/OCML/ui/boolean_option_editor.hpp:
        * PIM/OCML/ui/clear_button.cpp:
        * PIM/OCML/ui/clear_button.hpp:
        * PIM/OCML/ui/configurator_ui.cpp:
        * PIM/OCML/ui/configurator_ui.hpp:
        * PIM/OCML/ui/editor_panel.cpp:
        * PIM/OCML/ui/editor_panel.hpp:
        * PIM/OCML/ui/enum_edit_control.cpp:
        * PIM/OCML/ui/enum_edit_control.hpp:
        * PIM/OCML/ui/enum_option_editor.cpp:
        * PIM/OCML/ui/enum_option_editor.hpp:
        * PIM/OCML/ui/integer_edit_control.cpp:
        * PIM/OCML/ui/integer_edit_control.hpp:
        * PIM/OCML/ui/integer_option_editor.cpp:
        * PIM/OCML/ui/integer_option_editor.hpp:
        * PIM/OCML/ui/main_app.cpp:
        * PIM/OCML/ui/main_app.hpp:
        * PIM/OCML/ui/main_frame.cpp:
        * PIM/OCML/ui/main_frame.hpp:
        * PIM/OCML/ui/ocml_configurator_ui.mpc:
        * PIM/OCML/ui/option_editor.hpp:
        * PIM/OCML/ui/option_editor.ipp:
        * PIM/OCML/ui/string_edit_control.cpp:
        * PIM/OCML/ui/string_edit_control.hpp:
        * PIM/OCML/ui/string_option_editor.cpp:
        * PIM/OCML/ui/string_option_editor.hpp:

          Fixed project files invalid file names and changed unix style
          end of line with CRLF.

Wed Mar  2 15:01:40 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/OCML/ocml.mwc:
        * PIM/OCML/common/FileSaveDlg.cpp:
        * PIM/OCML/common/FileSaveDlg.hpp:
        * PIM/OCML/common/OCML_Common_Export.h:
        * PIM/OCML/common/algorithm.hpp:
        * PIM/OCML/common/algorithm.tpp:
        * PIM/OCML/common/callback_manager.hpp:
        * PIM/OCML/common/common_test.cpp:
        * PIM/OCML/common/exception.hpp:
        * PIM/OCML/common/function.hpp:
        * PIM/OCML/common/function.ipp:
        * PIM/OCML/common/iterator.hpp:
        * PIM/OCML/common/iterator.tpp:
        * PIM/OCML/common/line_parser.hpp:
        * PIM/OCML/common/line_parser.ipp:
        * PIM/OCML/common/line_parser.tpp:
        * PIM/OCML/common/ocml_common.mpc:
        * PIM/OCML/common/spirit_helpers.hpp:
        * PIM/OCML/common/string_utils.hpp:
        * PIM/OCML/common/string_utils.ipp:
        * PIM/OCML/common/xerces_helpers.cpp:
        * PIM/OCML/common/xerces_helpers.hpp:
        * PIM/OCML/common/xerces_helpers.ipp:
        * PIM/OCML/engine/OCML_Engine_Export.h:
        * PIM/OCML/engine/actions.hpp:
        * PIM/OCML/engine/common_parsers.hpp:
        * PIM/OCML/engine/configurator.cpp:
        * PIM/OCML/engine/configurator.hpp:
        * PIM/OCML/engine/configurator.ipp:
        * PIM/OCML/engine/constraint_engine.cpp:
        * PIM/OCML/engine/constraint_engine.hpp:
        * PIM/OCML/engine/constraint_engine.ipp:
        * PIM/OCML/engine/definitions.cpp:
        * PIM/OCML/engine/definitions.hpp:
        * PIM/OCML/engine/definitions.ipp:
        * PIM/OCML/engine/definitions.tpp:
        * PIM/OCML/engine/logic_rules.cpp:
        * PIM/OCML/engine/logic_rules.hpp:
        * PIM/OCML/engine/logic_rules.ipp:
        * PIM/OCML/engine/logic_rules.tpp:
        * PIM/OCML/engine/ocml_engine.mpc:
        * PIM/OCML/engine/option.hpp:
        * PIM/OCML/engine/option.ipp:
        * PIM/OCML/engine/option.tpp:
        * PIM/OCML/engine/option_interface.hpp:
        * PIM/OCML/engine/option_interface.ipp:
        * PIM/OCML/engine/option_reference.hpp:
        * PIM/OCML/engine/option_reference.ipp:
        * PIM/OCML/engine/option_reference.tpp:
        * PIM/OCML/engine/option_rules.hpp:
        * PIM/OCML/engine/option_rules.ipp:
        * PIM/OCML/engine/option_rules.tpp:
        * PIM/OCML/engine/option_traits.hpp:
        * PIM/OCML/engine/option_traits.ipp:
        * PIM/OCML/engine/option_value.hpp:
        * PIM/OCML/engine/option_value.ipp:
        * PIM/OCML/engine/option_value.tpp:
        * PIM/OCML/engine/rule.cpp:
        * PIM/OCML/engine/rule.hpp:
        * PIM/OCML/engine/rule.ipp:
        * PIM/OCML/engine/rules_grammar.cpp:
        * PIM/OCML/engine/rules_grammar.hpp:
        * PIM/OCML/engine/rules_grammar.tpp:
        * PIM/OCML/engine/spirit_helpers.hpp:
        * PIM/OCML/engine/tree_parser.cpp:
        * PIM/OCML/engine/tree_parser.hpp:
        * PIM/OCML/engine/tree_parser.ipp:
        * PIM/OCML/engine/value_parser.cpp:
        * PIM/OCML/engine/value_parser.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/BON2Component.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/BON2Component.h:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/CompIcon.ico:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/Component.rc:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/ComponentConfig.h:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/ConfigureComponent.exe:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/DLLEntry.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/GMESources.txt:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/OCMLConfigurationInterpreterBON2Component.dsp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/OCMLConfigurationInterpreterBON2Component.dsw:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/Resource.h:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/StdAfx.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/StdAfx.h:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/component.def:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/dlldata.c:
        * PIM/OCML/interpreters/OCMLConfiguratorInterpreter/extern_declarations.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/BooleanEditControl.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/BooleanEditControl.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/BooleanOptionEditor.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/BooleanOptionEditor.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/ClearButton.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/ClearButton.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/DLLEntry.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/DLLEntry.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/EnumEditControl.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/EnumEditControl.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/EnumOptionEditor.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/EnumOptionEditor.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/GNUmakefile:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/IntegerEditControl.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/IntegerEditControl.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/IntegerOptionEditor.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/IntegerOptionEditor.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/MainApp.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/MainApp.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/MainFrame.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/MainFrame.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/Makefile:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/OptionEditor.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/OptionEditor.ipp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/OptionEditorPanel.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/OptionEditorPanel.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/StringEditControl.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/StringEditControl.hpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/StringOptionEditor.cpp:
        * PIM/OCML/interpreters/OCMLConfiguratorLibrary/StringOptionEditor.hpp:
        * PIM/OCML/interpreters/OCML_Interpreter/BON2Component.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/BON2Component.h:
        * PIM/OCML/interpreters/OCML_Interpreter/CompIcon.ico:
        * PIM/OCML/interpreters/OCML_Interpreter/Component.rc:
        * PIM/OCML/interpreters/OCML_Interpreter/ComponentConfig.h:
        * PIM/OCML/interpreters/OCML_Interpreter/ComponentConfig.old:
        * PIM/OCML/interpreters/OCML_Interpreter/ComponentLib_p.c:
        * PIM/OCML/interpreters/OCML_Interpreter/ConfigureComponent.exe:
        * PIM/OCML/interpreters/OCML_Interpreter/GMESources.txt:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.dsp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.vcproj:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBONExt.log:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBonExtension_Manual.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBonX.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLBonX.h:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.dsw:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.h:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.ncb:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.sln:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.suo:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLUtils.h:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLVisitor.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCMLVisitor.h:
        * PIM/OCML/interpreters/OCML_Interpreter/OCML_Application.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCML_Application.h:
        * PIM/OCML/interpreters/OCML_Interpreter/OCML_Utility.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/OCML_Utility.h:
        * PIM/OCML/interpreters/OCML_Interpreter/Resource.h:
        * PIM/OCML/interpreters/OCML_Interpreter/StdAfx.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/StdAfx.h:
        * PIM/OCML/interpreters/OCML_Interpreter/component.def:
        * PIM/OCML/interpreters/OCML_Interpreter/fco_utils.h:
        * PIM/OCML/interpreters/OCML_Interpreter/visitor.cpp:
        * PIM/OCML/interpreters/OCML_Interpreter/visitor.h:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/BON2Component.cpp:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/BON2Component.h:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/CompIcon.ico:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/Component.rc:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/ComponentConfig.h:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/GMESources.txt:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/OCML_Svc_Conf_ExporterBON2Component.dsp:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/OCML_Svc_Conf_ExporterBON2Component.dsw:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/Resource.h:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/StdAfx.cpp:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/StdAfx.h:
        * PIM/OCML/interpreters/TAOServiceConfExportInterpreter/component.def:
        * PIM/OCML/interpreters/TAOServiceConfExporter/GNUmakefile:
        * PIM/OCML/interpreters/TAOServiceConfExporter/GNUmakefile.SvcConfExporter:
        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.cpp:
        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.dsp:
        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.hpp:
        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.mpc:
        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.vcproj:
        * PIM/OCML/interpreters/TAOServiceConfExporter/extern_declarations.hpp:
        * PIM/OCML/paradigms/OCML.xme:
        * PIM/OCML/paradigms/TAO_Options.xme:
        * PIM/OCML/paradigms/icons/and.bmp:
        * PIM/OCML/paradigms/icons/connector.bmp:
        * PIM/OCML/paradigms/icons/enum_option.bmp:
        * PIM/OCML/paradigms/icons/flag_option.bmp:
        * PIM/OCML/paradigms/icons/if.bmp:
        * PIM/OCML/paradigms/icons/if2.bmp:
        * PIM/OCML/paradigms/icons/not.bmp:
        * PIM/OCML/paradigms/icons/option_enum.bmp:
        * PIM/OCML/paradigms/icons/option_flag.bmp:
        * PIM/OCML/paradigms/icons/option_integer.bmp:
        * PIM/OCML/paradigms/icons/option_port.bmp:
        * PIM/OCML/paradigms/icons/option_string.bmp:
        * PIM/OCML/paradigms/icons/option_toggle.bmp:
        * PIM/OCML/paradigms/icons/or.bmp:
        * PIM/OCML/test/configurator_test.cpp:
        * PIM/OCML/test/configurator_ui_test.cpp:
        * PIM/OCML/test/constraint_engine_test.cpp:
        * PIM/OCML/test/constraint_engine_test.hpp:
        * PIM/OCML/test/constraint_engine_test_driver.cpp:
        * PIM/OCML/test/definitions_test.cpp:
        * PIM/OCML/test/definitions_test.hpp:
        * PIM/OCML/test/definitions_test.tpp:
        * PIM/OCML/test/definitions_test_driver.cpp:
        * PIM/OCML/test/ocml_test.mpc:
        * PIM/OCML/test/option_value_test.hpp:
        * PIM/OCML/test/option_value_test.ipp:
        * PIM/OCML/test/option_value_test.tpp:
        * PIM/OCML/test/option_value_test_driver.cpp:
        * PIM/OCML/test/rules_test.cpp:
        * PIM/OCML/test/rules_test.hpp:
        * PIM/OCML/test/rules_test.tpp:
        * PIM/OCML/test/rules_test_driver.cpp:
        * PIM/OCML/test/test.hpp:
        * PIM/OCML/test/test.ipp:
        * PIM/OCML/test/test.rules:
        * PIM/OCML/test/ui_test.cpp:
        * PIM/OCML/test/value_test.hpp:
        * PIM/OCML/test/value_test.ipp:
        * PIM/OCML/test/value_test.tpp:
        * PIM/OCML/test/value_test_driver.cpp:
        * PIM/OCML/text/Exception.hpp:
        * PIM/OCML/text/application.cpp:
        * PIM/OCML/text/application.hpp:
        * PIM/OCML/text/basic_commands.cpp:
        * PIM/OCML/text/basic_commands.hpp:
        * PIM/OCML/text/category_commands.cpp:
        * PIM/OCML/text/category_commands.hpp:
        * PIM/OCML/text/category_commands.tpp:
        * PIM/OCML/text/category_parser.hpp:
        * PIM/OCML/text/environment.cpp:
        * PIM/OCML/text/environment.hpp:
        * PIM/OCML/text/environment.ipp:
        * PIM/OCML/text/main.cpp:
        * PIM/OCML/text/ocml_console_application.cpp:
        * PIM/OCML/text/ocml_console_application.hpp:
        * PIM/OCML/text/ocml_console_application.mpc:
        * PIM/OCML/text/option_commands.cpp:
        * PIM/OCML/text/option_commands.hpp:
        * PIM/OCML/text/options.bnf:
        * PIM/OCML/text/rule_commands.cpp:
        * PIM/OCML/text/rule_commands.hpp:
        * PIM/OCML/text/test.cmd:
        * PIM/OCML/text/test2.cmd:
        * PIM/OCML/ui/CONFIGURATOR_UI_EXPORT.h:
        * PIM/OCML/ui/boolean_edit_control.cpp:
        * PIM/OCML/ui/boolean_edit_control.hpp:
        * PIM/OCML/ui/boolean_option_editor.cpp:
        * PIM/OCML/ui/boolean_option_editor.hpp:
        * PIM/OCML/ui/clear_button.cpp:
        * PIM/OCML/ui/clear_button.hpp:
        * PIM/OCML/ui/configurator_ui.cpp:
        * PIM/OCML/ui/configurator_ui.hpp:
        * PIM/OCML/ui/editor_panel.cpp:
        * PIM/OCML/ui/editor_panel.hpp:
        * PIM/OCML/ui/enum_edit_control.cpp:
        * PIM/OCML/ui/enum_edit_control.hpp:
        * PIM/OCML/ui/enum_option_editor.cpp:
        * PIM/OCML/ui/enum_option_editor.hpp:
        * PIM/OCML/ui/integer_edit_control.cpp:
        * PIM/OCML/ui/integer_edit_control.hpp:
        * PIM/OCML/ui/integer_option_editor.cpp:
        * PIM/OCML/ui/integer_option_editor.hpp:
        * PIM/OCML/ui/main_app.cpp:
        * PIM/OCML/ui/main_app.hpp:
        * PIM/OCML/ui/main_frame.cpp:
        * PIM/OCML/ui/main_frame.hpp:
        * PIM/OCML/ui/ocml_configurator_ui.mpc:
        * PIM/OCML/ui/option_editor.hpp:
        * PIM/OCML/ui/option_editor.ipp:
        * PIM/OCML/ui/string_edit_control.cpp:
        * PIM/OCML/ui/string_edit_control.hpp:
        * PIM/OCML/ui/string_option_editor.cpp:
        * PIM/OCML/ui/string_option_editor.hpp:

          OCML is moved from PSM into PIM, constraint validation is added
          together with many other features.

Fri Feb 25 18:49:53 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/PICML/PICML.mpc:

        * PIM/PICML/interpreters/Package/Package.mpc:
        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:
        * PIM/PICML/interpreters/Package/Package_Export.h:
        * PIM/PICML/interpreters/Package/XercesString.h:
        * PIM/PICML/interpreters/Package/XercesString.cpp: Missed checkin
          of these files.

Fri Feb 25 18:31:54 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/BasicSP.xme:
        * PIM/PICML/examples/RobotAssembly.xme:

        * PIM/PICML/interpreters/default.features:
        * PIM/PICML/interpreters/picmllib.mpb:
        * PIM/PICML/interpreters/Interpreters.mwc: New MWC file to build
          interpreters using MPC.

        * PIM/PICML/interpreters/PackageComponent/CompIcon.ico:
        * PIM/PICML/interpreters/PackageComponent/Component.def:
        * PIM/PICML/interpreters/PackageComponent/Component.rc:
        * PIM/PICML/interpreters/PackageComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.h:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:
        * PIM/PICML/interpreters/PackageComponent/RawComponent.h:
        * PIM/PICML/interpreters/PackageComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/PackageComponent/StdAfx.h:
        * PIM/PICML/interpreters/PackageComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.h:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmConfig.h:
        * PIM/PICML/interpreters/PackageComponent/resource.h:  Moved to
          a new directory.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated to reflect changes.

Wed Feb 16 11:10:36 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

       * PIM/PICML/examples/BasicSP.xme:
       * PIM/PICML/examples/RobotAssembly.xme:

         Updated examples to reflect changes to the BGML meta model.

       * PIM/PICML/interpreters/BGML_Base/BGML_Base.mpc:
       * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.cpp:
       * PIM/PICML/interpreters/BGML_Interpreter/IDL_Util.cpp:
       * PIM/PICML/interpreters/BGML_Interpreter/IDL_Util.h:
       * PIM/PICML/interpreters/BGML_Interpreter/MetricEmitter.cpp:
       * PIM/PICML/interpreters/BGML_Interpreter/MetricEmitter.h:
       * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
       * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:

         Resolved the issue where two operations in different
         components have same name. In this case, the unique name
         will be a combination of component and operation name. This
         was changed due to an update in the BasicSP example. Thanks
         to Diana Ukleja for pointing this out.

       * PIM/PICML/interpreters/MPC/PICML.cpp:
       * PIM/PICML/interpreters/MPC/PICML.h:
       * PIM/PICML/interpreters/MPC/PICML.xsd:
       * PIM/PICML/interpreters/cidl/PICML.cpp:
       * PIM/PICML/interpreters/cidl/PICML.h:
       * PIM/PICML/interpreters/cidl/PICML.xsd:
       * PIM/PICML/interpreters/domain/PICML.cpp:
       * PIM/PICML/interpreters/domain/PICML.h:
       * PIM/PICML/interpreters/domain/PICML.xsd:
       * PIM/PICML/interpreters/packaging/PICML.cpp:
       * PIM/PICML/interpreters/packaging/PICML.h:
       * PIM/PICML/interpreters/packaging/PICML.xsd:
       * PIM/PICML/interpreters/plan/PICML.cpp:
       * PIM/PICML/interpreters/plan/PICML.h:
       * PIM/PICML/interpreters/plan/PICML.xsd:

         Updated other interpreters to reflect changes to PICML
         meta model.

       * PIM/PICML/paradigms/PICML-uml.xme:
       * PIM/PICML/paradigms/PICML.xme:
       * PIM/PICML/paradigms/PICML.xml:
       * PIM/PICML/paradigms/PICML.xmp:

         Updated the meta model to add a Reference to a Component
         in BGML paradigm when two operations have same name within
         two different components.

Tue Feb 15 22:43:34 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:

          Fixed bug involving non generation of remote reference data
          member within a benchmarking class if the operation takes in
          no arguments. Thanks to Diana Ukleja <Diana_Ukleja@raytheon.com>
          for pointing this out.

Mon Feb 14 16:34:19 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/examples/BasicSP.xme:

          Updated the BasicSP example to include a benchmark example as
          well.

        * PIM/PICML/interpreters/BGML_Interpreter/BenchmarkStream.cpp:
          Fixed a wait on thread manager to the corresponding wait call
          on a ACE_Task. Thus preventing a task waiting on itself to
          finish.

Mon Feb  7 20:37:13 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Added code to BE_GlobalData::cache_files() to create a DOM
          element and GME id for each file, and store these created
          items in their respective tables in the backend. Then, when
          processing the file as part of visit_root(), the DOM element
          and the GME id are simple looked up in the tables. This change
          enables better error checking during the processing of
          included IDL files, since it now doesn't matter if a particular
          included file has not yet been processed as a command line file.
          Previous to this change, a command line omission or misspelling
          would not be caught, and the generated file simple would not
          load into GME. Spelling of the filename on the command line is
          required to be case-sensitive, since tao_picml could be executed
          on a UNIX platform, where case matters in filename spelling.
          Thanks to Sam Abbe <Sam_abbe@raytheon.com> for reporting a
          problem loading an XME file generated from the BasicSP example.

Fri Feb 4 16:17:05 CST 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/Metric_Emitter.cpp:

          Eliminated the generation of export files and export definitions
          these are not needed as currently, all the generated code is
          templatized. This was an error which came out by help from Diana
          Ukleja <diana_ukleja@raytheon.com> and Kitty
          <kitty@dre.vanderbilt.edu>

Thu Jan 27 21:18:11 CST 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/Metric_Emitter.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Metric_Emitter.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/UdmApp.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.h:
        * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.cpp:

          These commits fix the problem that was foundout in the PCES PI
          meeting Dec 12th with the BGML Generated code. The problem was
          when tasks were spawned from an already spawned task and not
          the main thread, waiting on the global thread manager deadlocks
          the system. The solution then is to wait on the tasks one by one
          rather on the thred manager. Thanks to Theckla Lochious
          <theckla@lmco.com> for reporting this problem.

Tue Jan 25 16:08:22 CST 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/Metric_Emitter.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Metric_Emitter.cpp:

          Fixed compilation errors from the generated code. Things should
          work fine now.

Tue Jan 25 13:15:59 CST 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/examples/RobotAssembly.xme:

          Added a priority and rate attributed to the BGML tasks and the
          main benchmarking task. This enables the generation of the main
          task and the background tasks at a given rate or priority. Updated
          the example to refect this.

        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/Metric_Emitter.h:
        * PIM/PICML/interpreters/BGML_Interpreter/Metric_Emitter.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.h:
        * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/UdmApp.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp:
        * PIM/PICML/interpreters/BGML_Interpreter/Global_Data.h:

          Updated the interpreter to generate the benchmark code that
          honor the rate and priority of the benchmarking tasks.

        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.xsd:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.xsd:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

            Regenerated the above files to reflect changes to the paradigm

Tue Jan 25 12:49:33 CST 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

       * PIM/PICML/docs/BGML/BGML_Documentation_Guide.tex:

         Added expiliciltly the fact that user needs to run $ACE_ROOT/bin/mwc.pl
         and not $ACE_ROOT/MPC/mwc.pl. This was thanks to Diana Ukleja
         <diana_ukleja@raytheon.com>

Tue Jan 25 11:57:36 CST 2005 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Base/BGML_Base.mpc:
        * PIM/PICML/interpreters/BGML_Base/BGML_Base.h:
        * PIM/PICML/interpreters/BGML_Base/BGML_Base.cpp:

          Fixed the MPC file to explicitly state the ouput for the BGML_Base
          library as "$ACE_ROOT"/lib. This aviods the problem with VC6 which
          otherwise creates a $ACE_ROOT/lib directory. Cleaned up some of the
          functions in BGML_Base class.

Sun Dec 19 17:17:02 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Updated the paradigm to fix problems with the latest version of
          GME.  Please upgrade to GME-4.11.10 for all CoSMIC related
          activities.

        * PIM/PICML/interpreters/packaging/PackageComponent.dsp:

          Updated to fix the names for the DLLs with the new version of
          Udm.  Next is to write MPC files to generate the projects.

        * PIM/PICML/examples/BasicSP.xme:
        * PIM/PICML/examples/RobotAssembly.xme:

          Updated to reflect change in paradigm.

        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.xsd:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.xsd:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

          Regenerated the files to reflect the change in the paradigm.

        * PIM/PICML/bin/.empty:

          Removed this file.

Thu Dec  9 10:07:20 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:

          Made changes necessitates by Greg Bostrum's <greg.bostrom@hp.com>
          changes on December 7 to the IDL compiler front end.

Tue Dec  7 19:14:37 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/docs/BGML_Documentation_Guide.pdf:

          Added the BGML documentation PDF file into the CVS.

Tue Dec 7 18:48:12 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

       * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:
       * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.h:
       * PIM/PICML/interpreters/BGML_Interpreter/IDL_Util.cpp:
       * PIM/PICML/interpreters/BGML_Interpreter/IDL_Util.h:
       * PIM/PICML/interpreters/BGML_Interpreter/MetricEmitter.cpp:
       * PIM/PICML/interpreters/BGML_Interpreter/MetricEmitter.h:

         Fixed errors in the BGML generated code pointed out by
         Theckla Louchious <theckla.louchious@lmco.com>. These bugs
         pertained to Windows export macros and generated MPC files
         to build the benchmarks. These were discovered prior to the
         PCES PI meeting!!

Tue Dec 07 17:05:48 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * Installer/CoSMIC-Installer.aip:

          Set up the correct version number.
          Added the src and src/BGML_Base directories for the target computer.

Tue Dec 7 10:40:03 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Base/BGML_Base.mpc:
        * PIM/PICML/interpreters/BGML_Interpreter/MPCStream.cpp:

          Fixed errors in the build script files generated by BGML
          interpreters. Thanks to Theckla <theckla.louchious@lmco.com>
          pointing this out.

Sun Dec 05 17:20:00 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * build.pl:

          Added IDLGenerator into the build script.

Sun Dec 05 17:13:56 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * Installer/CoSMIC-Installer.aip:

          Changed the sources for the dll files from PICML/bin to
          CoSMIC/bin. Added the documentation into the installation.

Sun Dec 05 14:25:58 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * bin/orb_tree.xml:

          Moved the file from PICML/bin to CoSMIC/bin.

Sun Dec  5 14:05:04 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/RegisterParadigm/RegisterParadigm.dsp: Updated to fix
          problems with environment variables.

Fri Dec 3 21:31:03 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
          Updated the meta to fix some constraint violations for the
          MPC paradigm.

        * PIM/PICML/examples/BasicSP.xme:
        * PIM/PICML/examples/RobotAssembly.xme:
          Updated examples to reflect meta.

        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:

        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.xsd:

        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.xsd:
        * PIM/PICML/interpreters/cidl/PICML.cpp:

        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.xsd:

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:

        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xml:
          Regenerated files to include changes in the metamodel.

Fri Dec  3 17:03:39 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to fix a problem with a wrong constraint that fired when
          types of facets and receptacles were checked in a publish
          connection.

        * PIM/PICML/interpreters/packaging/PackageVisitor.cpp:

          Allowed support for using a reference to an existing package
          instead of drawing an arbitrary package in the
          PackageConfiguration view.

        * PIM/PICML/examples/BasicSP.xme:
        * PIM/PICML/examples/RobotAssembly.xme:

          Updated the examples to use a reference to a ComponentPackage in
          the PackageConfiguration element.

        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:

        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.xsd:

        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.xsd:
        * PIM/PICML/interpreters/cidl/PICML.cpp:

        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.xsd:

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:

        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Regenerated files to include changes in the metamodel.

Fri Dec 03 15:56:11 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * build.pl:

          Added perl script to compile all the projects for Release build
          with VC6 by invoking msvc_mpc_auto_compile script.

Fri Dec 03 13:20:23 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/plan/DeploymentPlan.dsp (SOURCE):
        * PIM/PICML/interpreters/packaging/PackageComponent.dsp (SOURCE):
        * PIM/PICML/interpreters/domain/Domain.dsp (SOURCE):
        * PIM/PICML/interpreters/cidl/Component.dsp (SOURCE):
        * PIM/PICML/interpreters/MPC/Component.dsp (SOURCE):
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsp (InputPath):
        * PIM/PICML/interpreters/EQAL/EQALBON2Component.dsp (InputPath):
        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp (SOURCE):
        * PIM/PICML/decorators/Decorator.dsp (InputPath):

          Changed the output directory for the binaries and libraries from
          PICML_ROOT to COSMIC_ROOT.

Thu Dec 02 15:05:21 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/plan/DeploymentPlan.dsp:
        * PIM/PICML/interpreters/packaging/PackageComponent.dsp:
        * PIM/PICML/interpreters/domain/Domain.dsp:
        * PIM/PICML/interpreters/cidl/Component.dsp:
        * PIM/PICML/interpreters/MPC/Component.dsp:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsp:
        * PIM/PICML/interpreters/EQAL/EQALBON2Component.dsp:
        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp:
        * PIM/PICML/decorators/Decorator.dsp:

          Changed the output directory for the binaries and libraries from
          PICML_ROOT to COSMIC_ROOT.

Thu Dec 02 14:45:41 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Changed the output directory for the binaries and libraries from
          PICML_ROOT to COSMIC_ROOT.

Wed Nov 24 11:18:35 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interter/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML_Interter/Benchmark_Stream.cpp:

          Fixed interpeters to generate tool specific information similar
          to what TAO IDL compiler generates.

Tue Nov 23 22:59:42 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.vcproj: Fixed
          file to not generate 64-bit stubs.

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PackageComponent.dsp:
        * PIM/PICML/interpreters/packaging/PackageVisitor.h:
        * PIM/PICML/interpreters/packaging/PackageVisitor.cpp: Added
          support for generation of descriptors in the presence of nested
          assemblies.  Currently the nested assemblies are collapsed into
          a single assembly.  However, descriptors for each nested
          assembly is also generated.  Thus testing can be done on
          individual nested assemblies by changing the *.pcd file to point
          to the corresponding .cid file.

Mon Nov 22 20:27:25 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xme:

          Added new constraints to check invalid connections in the case
          of 'publishes' keyword.  Also updated a couple of constraints so
          that they fire on connection.  Fixed a too restrictive
          constraint that prevented a single event consumer from receiving
          events emitted by different emitters.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

        * PIM/PICML/examples/BasicSP.xme:
        * PIM/PICML/examples/RobotAssembly.xme:

        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

          Updated all the of the above to reflect changes in the meta.

        * PIM/PICML/interpreters/packaging/PackageVisitor.h:
        * PIM/PICML/interpreters/packaging/UdmApp.cpp:
        * PIM/PICML/interpreters/packaging/UuidString.h:

          Added include guards and updated the message box displayed to
          use MB_ICONINFORMATION.

Mon Nov 22 10:02:33 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/MetricStream.cpp:

          Fixed errors in the MPC files to compile the Benchmarking files
          generated.

        * PIM/PICML/docs/BGML/BGML_Documentation_Guide.tex:
        * PIM/PICML/docs/BGML/RobotAssembly.png:

          Updated the BGML Documentation guide.

Fri Nov 19 17:59:36 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/docs/BGML:
          Created directory for BGML documentation

        * PIM/PICML/docs/BGML/Average.png:
        * PIM/PICML/docs/BGML/BGML_Documentation_Guide.tex:
        * PIM/PICML/docs/BGML/BGML-Latency-Complete.png:
        * PIM/PICML/docs/BGML/BGML-Latency.png:
        * PIM/PICML/docs/BGML/BGML-Task-Assoc.png:
        * PIM/PICML/docs/BGML/eventref.png:
        * PIM/PICML/docs/BGML/Insert-Benchmark.png:
        * PIM/PICML/docs/BGML/InsertFolder.png:
        * PIM/PICML/docs/BGML/Latency.png:
        * PIM/PICML/docs/BGML/Makefile:
        * PIM/PICML/docs/BGML/Max.png:
        * PIM/PICML/docs/BGML/New_Paradigm.png:
        * PIM/PICML/docs/BGML/operationref.png:
        * PIM/PICML/docs/BGML/RobotAssembly-Intr.png:
        * PIM/PICML/docs/BGML/RobotAssembly-OperationArgs.png:
        * PIM/PICML/docs/BGML/RobotAssembly-OperationCopy.png:
        * PIM/PICML/docs/BGML/RobotAssembly-Operations.png:
        * PIM/PICML/docs/BGML/task.png:
        * PIM/PICML/docs/BGML/taskset.png:
        * PIM/PICML/docs/BGML/Throughput.png:
        * PIM/PICML/docs/BGML/timer.png:

          BGML documentation guide first version committed.

Tue Nov 16 19:28:57 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/MPCStream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/MPCStream.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/BenchmarkStream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/BenchmarkStream.cpp:

          Updated the BGML_Interpreter to fix the following issues:
          (1) All tasks synchronize via a barrier a barrier before starting
              to generate background load. Thanks to
              Andy <gokhale@dre.vanderbilt.edu> for pointing this out.
          (2) Along with the benchmarking files, there is now a mpc build
              file generated to build the benchmark files generated. Thanks
              to Andy for pointing this out.
          (3) Export files are also generated along with the benchmark files
              to ensure smooth working on Windows platforms.

Tue Nov 16 11:14:30 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.me:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML-uml.xme:

          Updated the meta model, in particular, the MPC paradigm. This was
          required to fix the bug in the generated MPC file from the model and
          the need to differentiate between servant projects, which are either
          component servants or normal CORBA servants.

        * PIM/PICML/examples/RobotAssembly.xme:
        * PIM/PICML/examples/BasicSP.xme:

          Updated the MPC paradigms in each of the examples to generate the
          required MPC files. Also updated the implementation artifacts to reflect
          right set of dependencies between the artifacts so that the build
          paradigm generates the right MPC file

        * PIM/PICML/interpreters/MPC/MPCStream.h:
        * PIM/PICML/interpreters/MPC/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:

          Fixed the MPC interpreter generation. The fixes were the
          following: (1) generation of libpaths += in the MPC file (2)
          generation of libs += i.e. generation of dependant libraries (3)
          generation of component servant and normal CORBA servant project
          These should fix bugs pointed out by Theckla
          <theckla.louchious@lmco.com>

        * PIM/PICML/interpreters/*/Picml.h:
        * PIM/PICML/interpreters/*/Picml.cpp:
        * PIM/PICML/interpreters/*/Picml.xsd:
          Updated changes to the meta in all the interpreter
          directories.

Mon Nov 15 12:45:06 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Updated to fix the change in
          name of some OCML interpreters.

        * Installer/RegisterParadigm/RegisterParadigm.cpp: Reverted some
          previous changes in the UnRegister().

        * PIM/PICML/decorators/Decorator.dsp: Fixed incorrect output
          directories in the project file.

        * PSM/CCM/OCML/interpreters/TAOServiceConfExportInterpreter/component.def:
          Fixed the name of the library in the export file.

Mon Nov 15 11:42:03 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/examples/BasicSP.xme: New example developed during
          the hands-on demo to LMCO.

Tue Nov 9 18:44:04 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/MPC/UdmApp.cpp:
        * PIM/PICML/interpreters/cidl/UdmApp.cpp:

          Fixed wrong error messages when interpretation does not start
          from the right aspect

Mon Nov 8 22:39:21 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:
          Changes to the intrepreter generated code to remove errors

        * PIM/PICML/examples/RobotAssembly.xme: Previous commit did not
          get the changes!

Mon Nov  8 20:02:25 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Updated to include
          documentation.

        * PIM/PICML/docs/Importing_IDL.pdf:
        * PIM/PICML/docs/Interface_Definitions.pdf:

          Renamed the old versions which had PDF in their names.

        * PSM/CCM/OCML/paradigms/OCML.xme:
        * PSM/CCM/OCML/paradigms/TAO_Options.xme: Updated to reflect
          changes to include icons.

        * PIM/PICML/docs/Importing_IDL_PDF.pdf:
        * PIM/PICML/docs/Interface_Definitions_PDF.pdf:

          Removed these files.

Mon Nov 08 18:28:11 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added "out_event_port_type" attribute to the OutEventPort atom.

        * PIM/PICML/interpreters/packaging/PackageVisitor.cpp:

          Handled changes in metamodel to generate write XML code for
          the "out_event_port_type".

        * PIM/PICML/paradigms/PICML.xml
        * PIM/PICML/paradigms/PICML.xmp
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

          Updated to reflect changes in the metamodel.

Mon Nov 08 15:02:43 CST 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/examples/RobotAssemly.xme:

          Example updated to reflect implementation changes. Added an
          operation AcceptWorkOrder in the WorkOrderResponses interface.

Mon Nov 08 14:01:47 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/MPC/ComponentConfig.h:
        * PIM/PICML/interpreters/cidl/ComponentConfig.h:
        * PIM/PICML/interpreters/BGML/ComponentConfig.h:

          Added tool tip text for the interpreters

        * PIM/PICML/interpreters/BGML/BGML_Visitor.cpp:
        * PIM/PICML/interpreters/BGML/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML/IDL_Util.h:
        * PIM/PICML/interpreters/BGML/IDL_Util.cpp:
        * PIM/PICML/interpreters/BGML/MetricEmitter.cpp:
        * PIM/PICML/interpreters/BGML/MetricEmitter.h:
        * PIM/PICML/interpreters/BGML/TypeEmitter.cpp:

          Intrepreter changes so that now things work fine. These changes were
          necessitated as a different code path was tested and errors cropped
          up. Fixed this. So things should work.

Mon Nov 08 11:51:11 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:

          Added the hidden tree_file_name attribute to the Implementation
          Artifact. Every PICML element using the OCML metamodel should
          have this attribute for the OCML interpreter to read the .xml file.

Mon Nov 8 09:04:07 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/intrepreters/BGML_Intrepter/Benchmark_Stream.cpp:

          The generated code did not instantiate the template workload
          generated code. Fixed this bug

Sun Nov 7 19:29:16 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/BON2Component.cpp:

          Fixed a bug related to the role type of USE_RT_Info
          connection type. Thanks Arvind Krishna <arvindk@dre.vanderbilt.edu>
          for reporting this bug.

Sun Nov 7 16:10:16 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/cidl/UdmApp.cpp:

          Fixed error message when intrepretation starts from the wrong
          aspect

Sat Nov  6 19:18:00 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/docs/ocml_sample_rule.png:
        * PIM/PICML/docs/ocml_rule_aspect.png:
        * PIM/PICML/docs/ocml_option_aspect.png:
        * PIM/PICML/docs/ocml_configurator.png:
        * PIM/PICML/docs/ocml.html:

          Committed the documentation for the OCML.

Sat Nov  6 19:09:15 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Updated to fix the bug with the
          interpreters not getting registered correctly.

Sat Nov  6 18:57:44 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Updated version of the script.

        * Installer/RegisterParadigm/RegisterParadigm.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.dsp: Minor fixes to
          remove debug messages.

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf: Updated to reflect new release.

        * PIM/PICML/decorators/Decorator.dsp: Updated to dump the DLL into
          $PICML_ROOT/bin.

        * PIM/PICML/examples/RobotAssembly.xme: Updated to reflect the
          latest meta-model.

        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp: Updated to reflect
          changes in meta-model.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme: New versions of meta and
          associated files.

        * PSM/CCM/OCML/interpreters/OCMLConfiguratorInterpreter/OCMLConfigurationInterpreterBON2Component.dsp:
        * PSM/CCM/OCML/interpreters/OCMLConfiguratorLibrary/LoadLibrary.cpp:
        * PSM/CCM/OCML/interpreters/OCMLConfiguratorLibrary/OCMLConfigurator.dsp:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.dsp:
        * PSM/CCM/OCML/interpreters/TAOServiceConfExportInterpreter/OCML_Svc_Conf_ExporterBON2Component.dsp:
        * PSM/CCM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.dsp:

          Updated to dump stuff into $PICML_ROOT/bin and $PICML_ROOT/lib.

        * PSM/CCM/OCML/paradigms/OCML.xme:
        * PSM/CCM/OCML/paradigms/TAO_Options.xme: Exported latest versions
          to avoid the dialog box about "Upgrade to latest version of
          paradigm".

        * PSM/CCM/OCML/paradigms/icons/Fonts.txt:
        * PSM/CCM/OCML/paradigms/icons/Thumbs.db:

          Removed these files.

Thu Nov 4 14:23:30 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp:
          Resolved errors arising from generating the DLL in release mode

Thu Nov  4 13:33:30 2004  Krishankumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsp:
        * PIM/PICML/interpreters/MPC/Component.dsp: More files which
          needed the same fix as done in the previous checkin.

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc: Renamed the
          xerces-c_2 library target to xerces-c_2_5 for the time being to
          get around other issues.

Thu Nov 4 13:26:18 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
       * PIM/PICML/paradigms/PICML.xme:
       * PIM/PICML/examples/RobotAssembly.xme:
         The RobotAssembly.xme file was incorrectly saved as PICML.xme file.
         Fixed this error

Thu Nov  4 13:08:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsp:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsw:

          Added these files so the intepreter can be compiled with
          VC6.

Thu Nov  4 12:55:44 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp:
        * PIM/PICML/interpreters/EQAL/EQALBON2Component.dsp:
        * PIM/PICML/interpreters/cidl/Component.dsp:
        * PIM/PICML/interpreters/domain/Domain.dsp:
        * PIM/PICML/interpreters/packaging/PackageComponent.dsp:
        * PIM/PICML/interpreters/plan/DeploymentPlan.dsp:

          Fixed these project files so that they:
          1. Place the generated dlls into $(PICML_ROOT)/bin
          2. Delete all the intermediate files that are generated,
             for both the Debug and Release versions.

          It can't be that hard to write project files...:-(

        * PIM/PICML/interpreters/PICML/PICML.mpc:
        * PIM/PICML/interpreters/PICML/PICML_Export.h:

        * PIM/PICML/interpreters/PICML_Debug.mwc:
        * PIM/PICML/interpreters/PICML_Release.mwc:

        * PIM/PICML/interpreters/Package/Package.mpc:
        * PIM/PICML/interpreters/Package/Package_Export.h:
        * PIM/PICML/interpreters/Package/SchemaVisitor.h:
        * PIM/PICML/interpreters/Package/SchemaVisitor.cpp:

        * PIM/PICML/interpreters/PackageComponent/CompIcon.ico:
        * PIM/PICML/interpreters/PackageComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.def:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.rc:
        * PIM/PICML/interpreters/PackageComponent/RawComponent.h:
        * PIM/PICML/interpreters/PackageComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/PackageComponent/Resource.h:
        * PIM/PICML/interpreters/PackageComponent/StdAfx.h:
        * PIM/PICML/interpreters/PackageComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.h:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmConfig.h:

        * PIM/PICML/interpreters/debug_libs.mpb:
        * PIM/PICML/interpreters/default.features:
        * PIM/PICML/interpreters/picmllib.mpb:
        * PIM/PICML/interpreters/release_libs.mpb:

          Removed these files.

Thu Nov  4 09:49:33 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:

          Added display of message box to tell the user that generation
          is finished.

Wed Nov  3 18:34:58 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/BON2Component.cpp:
        * PIM/PICML/DependencyVisitor.cpp:
        * PIM/PICML/DependencyVisitor.h:
        * PIM/PICML/IDLEmitVisitor.cpp:
        * PIM/PICML/IDLEmitVisitor.h:
        * PIM/PICML/IDMLBonExtension.cpp:
        * PIM/PICML/IDMLBonExtension.h:

          Changed the name of the namespace containing the BonExtension
          and other classes to IDML from IDML_BON. Also made all the
          inheritances in the BonExtension classes virtual.

Tue Nov 2 14:30:48 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML-uml.xme:
          Added a rate attribute to the tasks in the BGML paradigm

        * PIM/PICML/interpreters/plan/Picml.h:
        * PIM/PICML/interpreters/plan/Picml.cpp:
        * PIM/PICML/interpreters/plan/Picml.xsd:
        * PIM/PICML/interpreters/package/Picml.h:
        * PIM/PICML/interpreters/package/Picml.cpp:
        * PIM/PICML/interpreters/package/Picml.xsd:
        * PIM/PICML/interpreters/domain/Picml.h:
        * PIM/PICML/interpreters/domain/Picml.cpp:
        * PIM/PICML/interpreters/domain/Picml.xsd:
        * PIM/PICML/interpreters/MPC/Picml.h:
        * PIM/PICML/interpreters/MPC/Picml.cpp:
        * PIM/PICML/interpreters/MPC/Picml.xsd:
        * PIM/PICML/interpreters/cidl/Picml.h:
        * PIM/PICML/interpreters/cidl/Picml.cpp:
        * PIM/PICML/interpreters/cidl/Picml.xsd:
        * PIM/PICML/interpreters/BGML/Picml.xsd:
        * PIM/PICML/interpreters/BGML/Picml.h:
        * PIM/PICML/interpreters/BGML/Picml.cpp:
          Updated all the interpreters to reflect the change in the meta model

        * PIM/PICML/examples/RobotAssembly.xme:
          Updated the example to reflect this change

        * PIM/PICML/interpreters/BGML/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML/Metric_Emitter.h:
        * PIM/PICML/interpreters/BGML/Metric_Emitter.cpp:
          BGML intrepter was generating unncesssary Workload source files even when
          no workload elements were modeled. This bug was fixed with this change.

Mon Nov 1 10:40:39 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/MPC/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/Component.dsp:

          Fixed generation of export files for directories that have
          white space between them.

        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp:
        * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.cpp:

          Fixed some errors with Timer information in the interpreter

        * PIM/PICML/interpreters/cidl/Component.dsp:
          Ensured that the generated dll is in PICML_ROOT\bin

Mon Nov 01 09:51:31 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * Installer/RegisterParadigm/RegisterParadigm.cpp:

          OCML paradigm register/unregister code is updated in the installer.

Mon Nov 1 08:29:55 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/MPC/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/Component.dsp:
          Fixed bug reported by Theckla <theckla.louchios@lmco.com>
          involving generation of MPC files that conform to the old
          format.

Fri Oct 29 13:34:27 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/bin/orb_tree.xml:

          Added the OCML TAO options model into the bin directory.

Mon Oct 25 09:30:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Changed outpout directories to $PICML_ROOT/bin for the
          executable and DLL and $PICML_ROOT/lib for the .lib and
          .exp file.

Mon Oct 25 07:41:06 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.dsp:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:

          Changed output directory to $PICML_ROOT/bin for DLLs and
          $PICML_ROOT/lib for .lib and .exp files.

Sun Oct 24 19:05:36 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/cidl/Component.dsp:
        * PIM/PICML/interpreters/MPC/Component.dsp:
        * PIM/PICML/interpreters/BGML/Componenent.dsp:
          Output directory changed to $(PICML_ROOT)/bin/ for the
          interpreter DLLs

Sun Oct 24 17:32:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/EQALBON2Component.dsp:

          Updated the project file to change the output directory
          of the EQAL dll library.

Fri Oct 22 23:35:57 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/packaging/CompIcon.ico: Updated icon
          based on Doug's suggestion.

        * PIM/PICML/interpreters/packaging/UdmApp.cpp: Fixed bug where all
          the descriptor files were generated instead of the ones
          corresponding to the currently focused object in the model
          editor.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp: Updated as a sanity check. No
          modifications were made to the meta-model.

        * PIM/PICML/examples/RobotAssembly.xme:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

          Updated the files to reflect updates to PICML.xml.

Fri Oct 22 10:45:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to get rid of the constraint violation in meta.

        * PIM/PICML/examples/RobotAssembly.xme:

          Updated to relex changes in EQAL.

Fri Oct 22 10:04:13 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/cidl/Component/*:
          Deleted all interpreter files from this directory
        * PIM/PICML/interpreters/cidl/*:
          Added all the required interpreters files back in this directory

        * PIM/PICML/interpreters/MPC/Component/*:
          Deleted all interpreter files from this directory
        * PIM/PICML/interpreters/MPC/*:
          Added all interpreter files to the top level directory

        * PIM/PICML/interpreters/BGML_Interpreter/Component/*:
          Deleted all interpreter files from this directory
        * PIM/PICML/interpreters/BGML_Interpreter/*:
          Added all interpreter files to this top level directory

          This Changelog is a succinct version, as all this is about moving
          a bunch of files around. The main motivation being: to have all the
          intrepreter files in the top level directory rather than having a
          Component directory (one level indirection). The culprit being
          the UDM wizard that added this indirection. This change also includes
          renaming the DLLs (intpreters) generated to "Foo.dll" rather than
          "Component.dll" to make more sense to all.

Thu Oct 21 23:50:24 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Corrected the BGML Meta model for constraint errors. Still there are
          errors from the EQAL meta-model

        * PIM/PICML/examples/RobotAssembly.xme:

          Added BGML capabilities to Example

Thu Oct 21 21:59:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to have a minor change of the EQAL metamodel.

        * PIM/PICML/examples/RobotAssembly.xme:

          Updated to relex changes in EQAL.

Thu Oct 21 21:28:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/ComponentLib.h
        * PIM/PICML/interpreters/EQAL/ComponentLib.tlb
        * PIM/PICML/interpreters/EQAL/ComponentLib_i.c
        * PIM/PICML/interpreters/EQAL/ComponentLib_p.c
        * PIM/PICML/interpreters/EQAL/dlldata.c
        * PIM/PICML/interpreters/EQAL/GMESources.txt
        * PIM/PICML/interpreters/EQAL/BON2Component.dsw

          Removed those files. Either because they are automatically
          generated or no longer used.

        * PIM/PICML/interpreters/EQAL/EQALInterpreter.dsw

          Added this file.

        * PIM/PICML/interpreters/EQAL/BON2Component.cpp

          Updated to add a message box statement only.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to have a minor change of the EQAL metamodel.


Thu Oct 21 14:55:21 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/examples/RobotAssembly.xme: Updated to work after
          Jeff's modifications which caused problems.

        * PIM/PICML/interpreters/packaging/CompIcon.ico: Updated to fix
          Doug's comments.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to fix problems due to Jeff's previous commit.

        * PSM/CCM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.dsp:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.cpp:

          Updated to use environement variables instead of hard-coded
          paths. Fixed a compilation warning.

        * PIM/PICML/examples/BasicSP.xme:

          Removed this file.

Wed Oct 20 21:20:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/BON2Component.cpp
        * PIM/PICML/interpreters/EQAL/BON2Component.h

          Fixed the linking error by adding missing IMPLEMENT_BONEXTENSION
          macro statements.

Wed Oct 20 14:47:10 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/examples/RobotAssembly.xme:

          Added the OCML configuration for Watch Manager and Human Machine
          Interface components.

Wed Oct 20 11:54:28 2004  Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/icons/rtec_resouce_factory.bmp:
        * PIM/PICML/paradigms/icons/ns_resource_factory.bmp

          Changed the icon size to make them smaller.

Mon Oct 18 17:54:28 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Changed aspect names to avoid clashes due to the stricter
          constraint checking of GME 4.9.27. Also rearranged some of
          the crowded paradigm sheets to make them more readable.

Fri Oct  8 14:17:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:

          Fixed decorator to correctly display active and inactive
          objects when modifying the members of the GME Set
          CollocationGroup.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Added an item in the DeploymentPlan paradigm sheet to its
          aspect.

Fri Oct  8 13:33:41 2004  Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/Component/PICML.cpp
        * PIM/PICML/interpreters/BGML_Interpreter/Component/PICML.h
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp
        * PIM/PICML/interpreters/MPC/Component/PICML.h
        * PIM/PICML/interpreters/domain/PICML.cpp
        * PIM/PICML/interpreters/domain/PICML.h
        * PIM/PICML/paradigms/PICML.xml
        * PIM/PICML/paradigms/PICML.xmp

          Updated the above files to fix interpreters build errors,
          since these files were not up to date before.

Fri Oct  1 14:33:41 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Modified code generation so a Component's inherited
          attributes are not generated in the derived Component,
          similarly to inherited ports. Also minor changes to
          formatting of code generation.

Thu Sep 30 16:13:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          - In EventChannelConfiguration paradigm sheet, removed
            duplicate inheritance that had been added to proxies.

          - In EventChannelConfiguration paradigm sheet, removed
            containment of abstract Model RTEC_Proxy in
            EventChannelConfiguration Model, since it was causing
            a duplicate containment error in the metainterpreter.

          - In ComponentType, added containment of Attribute in
            Component, since it was lost in the changes of

            Thu Sep 23 15:06:37 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

Thu Sep 23 15:06:37 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/docs/Interface_Definitions.doc:
        * PIM/PICML/docs/Interface_Definitions_PDF.pdf:
        * PIM/PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.h:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Modified handling of inheritance in Component model elements.
          Formerly, all inheritable types would contain one or more
          Inherits model elements which are GME References referring
          to the inherited type. However, for Components, this made it
          impossible for a Component to display its inherited ports
          in a model and to make connections to such ports. So a
          different mechanism for inheritance is now used for Components.
          A derived Component is created in a model by copying the
          intended base Component as a subtype. This change required
          associated modifications to the PICML decorator, the IDL
          Generator and the IDL Importer. Documentation was changed to
          reflect the update as well.

Thu Sep 16 17:02:20 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters.IDLImporter/XercesString.cpp:

          Added #include <string>.

        * PIM/PICML/interpreters.IDLImporter/picml_visitor.cpp:

          In VC6, a ternary operator ( ? : ) is causing an unnecessary
          and unwanted call to an XStr constructor. Adding const to
          the XMLCh* variable declaration at least makes sure the
          copying version of the constructor is called, so we don't
          have double deletion. This fix is specific to VC6, VC7.1
          does not require it.

Thu Sep 16 15:54:32 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
      * PIM/PICML/paradigms/PICML-uml.xme
        * PIM/PICML/paradigms/PICML.xme
        * PIM/PICML/paradigms/PICML.xmp
        Resolved constraint violations from the BGML paradigm.

Mon Sep 06 19:03:32 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme
        * PIM/PICML/paradigms/PICML.xme
        * PIM/PICML/paradigms/PICML.xmp

          Added "configurator" field to the ImplementationArtifact.

Sat Sep  4 22:16:34 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.dsp:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Modified decorator to include drawing of ComponentAssembly.

Fri Sep  3 17:11:29 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:

          Fixed PICML decorator so that ToolTip messages are displayed
          for ports in referenced Component model elements the same
          as they are in the Component model element itself.

Fri Sep  3 11:23:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/Decorator.rc:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/resource.h:
        * PIM/PICML/decorators/Decorator.dsp:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Fixes and enhancements to PICML decorator:

          - All ports of the referenced component (including the
            inherited ones, see entry below) are displayed in
            ComponentRef.

          - The Inherits icon, if it referred to a component in a
            model, was displaying the ports of the referenced
            component (default GME decorator behavior). The PICML
            decorator now draws this icon, and does not display
            the ports.

Thu Sep  2 16:04:05 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.cpp:

          Cosmetic changes to source code.

        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:

          Modified generator for components to draw inherited ports from
          all ancestors.

Thu Sep 2 15:50:22 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/IDL_Generator/ComponentConfig.h:
        * PIM/PICML/interpreters/IDL_Generator/Component.ico:
        * PIM/PICML/interpreters/IDL_Generator/IDLGenerator.vcproj:
        * PIM/PICML/interpreters/cidl/IDL_Stream.cp:

          Fixed some bugs after the demo to the LMCO folks.

Mon Aug 30 09:40:29 CDT 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xml:

          Fixed the wrong earlier check-in of the PICML.xml.

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/MPC/Component/PICML.h:
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp:
        * PIM/PICML/interpreters/cidl/Component/PICML.h:
        * PIM/PICML/interpreters/cidl/Component/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:

          Reflects changes to the meta by adding new Picml.h and Picml.cpp
          and PICML.xsd

Sun Aug 29 22:46:29 CDT 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added OCL constraints to EQAL.

Sun Aug 29 20:01:29 CDT 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/examples/RobotAssembly.xme:

          Added real-time event channel configuration sheet
          for the RobotAssembly example.

Sat Aug 28 16:56:29 CDT 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        * PIM/PICML/paradigms/icons/conjunction_group.bmp
        * PIM/PICML/paradigms/icons/disjunction_group.bmp
        * PIM/PICML/paradigms/icons/ec_consumer.bmp
        * PIM/PICML/paradigms/icons/ec_dependency.bmp
        * PIM/PICML/paradigms/icons/ec_event.bmp
        * PIM/PICML/paradigms/icons/ec_option.bmp
        * PIM/PICML/paradigms/icons/ec_proxy.bmp
        * PIM/PICML/paradigms/icons/ec_proxy_consumer.bmp
        * PIM/PICML/paradigms/icons/ec_proxy_supplier.bmp
        * PIM/PICML/paradigms/icons/ec_resource_factory.bmp
        * PIM/PICML/paradigms/icons/ec_supplier.bmp
        * PIM/PICML/paradigms/icons/ec_supplier_id.bmp
        * PIM/PICML/paradigms/icons/event_sink.bmp
        * PIM/PICML/paradigms/icons/event_source.bmp
        * PIM/PICML/paradigms/icons/eventtype-port.bmp
        * PIM/PICML/paradigms/icons/eventtype.bmp
        * PIM/PICML/paradigms/icons/logical_and_group.bmp
        * PIM/PICML/paradigms/icons/ns_admin.bmp
        * PIM/PICML/paradigms/icons/ns_config.bmp
        * PIM/PICML/paradigms/icons/ns_constraint.bmp
        * PIM/PICML/paradigms/icons/ns_consumer.bmp
        * PIM/PICML/paradigms/icons/ns_event.bmp
        * PIM/PICML/paradigms/icons/ns_filter-port.bmp
        * PIM/PICML/paradigms/icons/ns_filter.bmp
        * PIM/PICML/paradigms/icons/ns_option.bmp
        * PIM/PICML/paradigms/icons/ns_proxy.bmp
        * PIM/PICML/paradigms/icons/ns_proxy_consumer.bmp
        * PIM/PICML/paradigms/icons/ns_proxy_supplier.bmp
        * PIM/PICML/paradigms/icons/ns_qos-port.bmp
        * PIM/PICML/paradigms/icons/ns_qos.bmp
        * PIM/PICML/paradigms/icons/ns_resource_factory-port.bmp
        * PIM/PICML/paradigms/icons/ns_resource_factory.bmp
        * PIM/PICML/paradigms/icons/ns_supplier.bmp
        * PIM/PICML/paradigms/icons/rt_info-port.bmp
        * PIM/PICML/paradigms/icons/rt_info.bmp
        * PIM/PICML/paradigms/icons/rtec_proxy_consumer.bmp
        * PIM/PICML/paradigms/icons/rtec_proxy_supplier.bmp
        * PIM/PICML/paradigms/icons/rtec_resource_factory-port.bmp
        * PIM/PICML/paradigms/icons/rtec_resource_factory.bmp

          Added icon files for the EQAL. Some of them are
          not used by current metamodel, which might be deleted later.

Thu Aug 26 10:46:29 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Added an attribute to the meta of BGML

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/MPC/Component/PICML.h:
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp:
        * PIM/PICML/interpreters/cidl/Component/PICML.h:
        * PIM/PICML/interpreters/cidl/Component/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
          Reflects changes to the meta by adding new Picml.h and Picml.cpp
          and PICML.xsd

Wed Aug 25 18:13:17 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Added a modeling elements including Workload and Task components
          to the BGML Paradigm

          * PIM/PICML/examples/RobotAssembly.xme:
          Added these components to the example

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/MPC/Component/PICML.h:
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp:
        * PIM/PICML/interpreters/cidl/Component/PICML.h:
        * PIM/PICML/interpreters/cidl/Component/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
          Reflects changes to the meta by adding new Picml.h and Picml.cpp


Wed Aug 25 17:01:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Changed XERCESROOT to XERCESCROOT.

Wed Aug 25 17:39:29 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/RegisterParadigm/RegisterParadigm.def: Fixed a really
          stupid bug where the paradigm unregister function was not
          exported from the DLL. This caused all sorts of problems during
          the creation of the PICML installer. Doh!

        * Installer/RegisterParadigm/RegisterParadigm.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.dsp:

          Minor modifications to installer message outputs.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Modifications to the meta which include renaming ComponentType
          to ComponentRef, addition of support for hierarchical component
          assemblies, additional constraints to ensure
          "correct-by-construction" of PICML models.

        * PIM/PICML/examples/RobotAssembly.xme: Updated to reflect the
          changes in the meta.

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PackageComponent.dsp:
        * PIM/PICML/interpreters/packaging/PackageVisitor.h:
        * PIM/PICML/interpreters/packaging/PackageVisitor.cpp:
        * PIM/PICML/interpreters/packaging/UdmApp.cpp:

          Added support for publishes keyword. Modifications to reflect
          changes in meta.

        * PIM/PICML/interpreters/plan/DeploymentPlan.dsp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PlanVisitor.h:
        * PIM/PICML/interpreters/plan/PlanVisitor.cpp:
        * PIM/PICML/interpreters/MPC/Component/Component.dsp:
        * PIM/PICML/interpreters/MPC/Component/ComponentLib.idl:
        * PIM/PICML/interpreters/MPC/Component/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/Component/PICML.h:
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp:
        * PIM/PICML/interpreters/cidl/Component/Cidlc_Visitor.h:
        * PIM/PICML/interpreters/cidl/Component/Component.dsp:
        * PIM/PICML/interpreters/cidl/Component/PICML.h:
        * PIM/PICML/interpreters/cidl/Component/PICML.cpp:
        * PIM/PICML/interpreters/domain/Domain.dsp:
        * PIM/PICML/interpreters/domain/DomainVisitor.h:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:

          Updated to reflect changes in meta-model.


        * PIM/PICML/paradigms/IDML-uml.xme:
        * PIM/PICML/paradigms/PredefinedTypes.xme:

          Removed these files are they are no longer needed.

        * PIM/PICML/interpreters/MPC/Component/Component.ncb:
        * PIM/PICML/interpreters/MPC/Component/ComponentLib.h:
        * PIM/PICML/interpreters/cidl/Component/Component.ncb:
        * PIM/PICML/interpreters/cidl/Component/ComponentLib.h:
        * PIM/PICML/interpreters/cidl/Component/ComponentLib_i.c:
        * PSM/CCM/CADML/Component/BONComponent.ncb:
        * PSM/CCM/CADML/Component/BONComponent.opt:
        * PSM/CCM/CADML/Component/CADMLBONComponent.plg:
        * PSM/CCM/EQAL/interpreters/BON2Component.ncb:
        * PSM/CCM/EQAL/interpreters/BON2Component.opt:
        * PSM/CCM/EQAL/interpreters/GenerateAllBON2Component.plg:
        * PSM/CCM/MIDCESS/interpreters/BON2Component.ncb:
        * PSM/CCM/MIDCESS/interpreters/BON2Component.opt:
        * PSM/CCM/MIDCESS/interpreters/TargetDataMLBON2Component.plg:
        * PSM/CCM/OCML/interpreters/Configurator/Configurator.ncb:
        * PSM/CCM/OCML/interpreters/Configurator/Configurator.opt:
        * PSM/CCM/OCML/interpreters/Configurator/Configurator.plg:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/BON2Component.ncb:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/BON2Component.opt:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.plg:

          Removed these crap. All these are generated files and have no
          place in CVS.

Wed Aug 25 14:43:48 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Removed the trailing 'D' from the Xerces library name.
          MPC can add a 'd' for the debug version on Windows
          and it will work since Windows is case-insensitive. This
          way you don't have to rename the installed Xerces library.

Wed Aug 25 13:52:53 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/XercesString.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

          Fixed VC6 compile errors.

Wed Aug 25 12:54:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Changed instances of XERCES_ROOT to XERCESROOT, as per
          Kitty's request.

Wed Aug 18 16:02:34 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Replaced an overlooked string containing "IDML" with
          the substring replaced by "PICML".

Wed Aug 18 15:44:59 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/Icons/component.bmp:
        * PIM/PICML/paradigms/Icons/componentref.bmp:

          Replaced the icons with the default icon used by GME in
          models for the metamodel element Model. The corresponding
          reference icon has the usual shortcut arrow added to the
          lower left corner.

Mon Aug 2 20:17:28 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/MPC
          Project for creation and generation of MPC files to build
          Components

        * PIM/PICML/icons/comp-proj.bmp:
        * PIM/PICML/icons/Workspace.bmp:
        * PIM/PICML/icons/project.bmp:
          icons for the MPC project

        * PIM/PICML/MPC/Component/Component.dsp:
        * PIM/PICML/MPC/Component/Component.dsw:
        * PIM/PICML/MPC/Component/compicon.ico:
        * PIM/PICML/MPC/Component/Component.def:
        * PIM/PICML/MPC/Component/ComHelp.cpp:
        * PIM/PICML/MPC/Component/ComponentConfig.h:
        * PIM/PICML/MPC/Component/ComponentLib.h:
        * PIM/PICML/MPC/Component/ComponentObj.h:
        * PIM/PICML/MPC/Component/GMECOM.h:
        * PIM/PICML/MPC/Component/MPCStream.h:
        * PIM/PICML/MPC/Component/MPCStream.cpp:
        * PIM/PICML/MPC/Component/PICML.h:
        * PIM/PICML/MPC/Component/PICML.cpp:
        * PIM/PICML/MPC/Component/MPC_Visitor.h:
        * PIM/PICML/MPC/Component/MPC_Visitor.cpp:
        * PIM/PICML/MPC/Component/ComponentDll.h:
        * PIM/PICML/MPC/Component/ComponentDll.cpp:

          Interpreter files

        * PIM/PICML/MPC/Component/generate_export.pl:
          Perl script to generate the export file



Mon Aug  2 08:56:29 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/IDML/*.*:

          Removed the IDML directory and all its contents. Everything in it
          has been integrated into PICML.

Mon Aug  2 08:25:15 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/docs/Importing_IDL_PDF.pdf:
        * PIM/PICML/docs/Interface_Definitions_PDF.pdf:

          Renamed the PDF files below. Unfortunately necessary since
          they were originally added to CVS without the -kb option
          needed for PDF files, and with CVS there's no way to go
          back once this mistake is made.

Mon Aug  2 08:13:42 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/docs/Importing_IDL.doc:
        * PIM/PICML/docs/Importing_IDL.pdf:
        * PIM/PICML/docs/Interface_Definitions.doc:
        * PIM/PICML/docs/Interface_Definitions.pdf:

          New files, documentation/user guides for the interface
          definition part of PICML, generating and importing IDL
          from/into PICML, and references for mapping PICML interface
          definitions to IDL and vice versa. Including both MS Word and
          PDF versions for future merge into a larger PICML documentation
          file.

Sun Aug  1 23:16:49 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * xerces/*: Removed this directory as we are making binary
          releases of CoSMIC, which means that individual developers can
          have their own pre-built versions of xerces.

Sun Aug  1 21:08:02 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/Interpreters/IDLIMporter/IDLImporter.mpc:
        * PIM/PICML/Interpreters/IDLIMporter/TAO_PICML_BE_Export.h:
        * PIM/PICML/Interpreters/IDLIMporter/XercesString.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/XercesString.h:
        * PIM/PICML/Interpreters/IDLIMporter/be_extern.h:
        * PIM/PICML/Interpreters/IDLIMporter/be_global.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/be_global.h:
        * PIM/PICML/Interpreters/IDLIMporter/be_init.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/be_produce.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/picml_visitor.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/picml_visitor.h:

          New files in a new directory, an IDL importer for PICML.

Thu Jul 29 16:03:55 2004  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:

          Turned the silencer option for the call to regsvr32 in the
          Custom Build Step back on after turning it off for debugging
          purposes and overlooked it in the checkin below.

Thu Jul 29 15:44:29 2004  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.sln:

          Renamed this file as the one below.

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.sln:

          New file, renamed from the one removed above.

        * PIM/PICML/interpreters/IDLGenerator/ComponentLib.h:

          Removed this file since it is generated by ComponentLib.idl.

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:

          Various fixes to get this to work in its new directory, since
          it was moved from IDML.

Thu Jul 29 12:24:29 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Installer build file for
          CoSMIC.

        * Installer/MergeModules/atl.msm:
        * Installer/MergeModules/comcat.msm:
        * Installer/MergeModules/comct232.msm:
        * Installer/MergeModules/comct332.msm:
        * Installer/MergeModules/comctl32.msm:
        * Installer/MergeModules/comdlg32.msm:
        * Installer/MergeModules/dbgrid32.msm:
        * Installer/MergeModules/dblist32.msm:
        * Installer/MergeModules/mci32.msm:
        * Installer/MergeModules/mfc42.msm:
        * Installer/MergeModules/mfc42u.msm:
        * Installer/MergeModules/msadodc.msm:
        * Installer/MergeModules/msbind.msm:
        * Installer/MergeModules/mschrt20.msm:
        * Installer/MergeModules/mscomct2.msm:
        * Installer/MergeModules/mscomctl.msm:
        * Installer/MergeModules/mscomm32.msm:
        * Installer/MergeModules/msdatgrd.msm:
        * Installer/MergeModules/msdatlst.msm:
        * Installer/MergeModules/msdatrep.msm:
        * Installer/MergeModules/msdbrptr.msm:
        * Installer/MergeModules/msderun.msm:
        * Installer/MergeModules/msflxgrd.msm:
        * Installer/MergeModules/mshflxgd.msm:
        * Installer/MergeModules/mshtmpgr.msm:
        * Installer/MergeModules/msinet.msm:
        * Installer/MergeModules/msmapi32.msm:
        * Installer/MergeModules/msmask32.msm:
        * Installer/MergeModules/msrdc20.msm:
        * Installer/MergeModules/msrdo20.msm:
        * Installer/MergeModules/msstdfmt.msm:
        * Installer/MergeModules/msstkprp.msm:
        * Installer/MergeModules/msvbvm60.msm:
        * Installer/MergeModules/msvcirt.msm:
        * Installer/MergeModules/msvcp60.msm:
        * Installer/MergeModules/msvcrt.msm:
        * Installer/MergeModules/mswcrun.msm:
        * Installer/MergeModules/mswinsck.msm:
        * Installer/MergeModules/oareg.msm:
        * Installer/MergeModules/oleaut32.msm:
        * Installer/MergeModules/picclp32.msm:
        * Installer/MergeModules/sysinfo.msm:
        * Installer/MergeModules/tabctl32.msm:

          Merge modules for shipping with the installer.

        * Installer/RegisterParadigm/RegisterParadigm.def:
        * Installer/RegisterParadigm/RegisterParadigm.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.dsp:
        * Installer/RegisterParadigm/RegisterParadigm.dsw:
        * Installer/RegisterParadigm/StdAfx.h:
        * Installer/RegisterParadigm/StdAfx.cpp:

          Implementation of the custom action DLL used to register a
          paradigm with GME when installing CoSMIC.

        * PIM/PICML/License.rtf: License file under which CoSMIC is
          distributed.

        * PIM/PICML/Readme.rtf: README file for CoSMIC.

        * PIM/PICML/ReleaseNotes.rtf: ReleaseNotes for CoSMIC.

        * PIM/PICML/interpreters/packaging/UdmApp.cpp: Fixed a bug where
          the return value of getPath() was being ignored, resulting in
          the interpreter generating files even when the user cancelled
          the action.

        * PIM/PICML/interpreters/domain/DomainVisitor.cpp:
        * PIM/PICML/interpreters/domain/UdmApp.cpp:

          Fixed a bug where the DomainVisitor was not set up correctly,
          which resulted in an "invalid cast" exception from UDM.
          Propagated the fix above to getPath().

        * PIM/PICML/interpreters/plan/UdmApp.cpp: Propagated the fix above
          to getPath().

        * PIM/ChangeLog:

          Removed this file as I moved it one level up here.

Thu Jul 29 10:23:14 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/examples/RobotAssembly.xme:

          Changed the name of an Aggregate member to be different
          than the name of the Aggregate. A constraint to check for
          this has been added as described below.

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xml:
        * PICML/paradigms/PICML.xmp:

          - Added a constraint to check for Member names duplicating
            the name of their container.

          - Combined the two constraints for Metrics and Timer connections
            into one, which has the intended semantics of both.

        * PICML/paradigms/PICMLTemplate.xme:

          Updated the template PICML model to correspond with the
          updated meta-model.

Wed Jul 28 19:49:00 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PICML/interpreters/IDLGenerator/BON2Component.h:
        * PICML/interpreters/IDLGenerator/BON2Component.sln:
        * PICML/interpreters/IDLGenerator/CompIcon.ico:
        * PICML/interpreters/IDLGenerator/Component.rc:
        * PICML/interpreters/IDLGenerator/ComponentConfig.h:
        * PICML/interpreters/IDLGenerator/ComponentLib.h:
        * PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PICML/interpreters/IDLGenerator/DependencyVisitor.h:
        * PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PICML/interpreters/IDLGenerator/IDLEmitVisitor.h:
        * PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:
        * PICML/interpreters/IDLGenerator/IDLStream.cpp:
        * PICML/interpreters/IDLGenerator/IDLStream.h:
        * PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PICML/interpreters/IDLGenerator/IDMLBonExtension.h:
        * PICML/interpreters/IDLGenerator/Resource.h:
        * PICML/interpreters/IDLGenerator/StdAfx.cpp:
        * PICML/interpreters/IDLGenerator/StdAfx.h:
        * PICML/interpreters/IDLGenerator/component.def:

          New files, the IDL generator from IDML integrated into PICML.
          Selection of a File model element (or mutliple File elements)
          from which to start the generation is no longer necessary.
          The interpreter automatically finds all File elements in
          the model and generates an IDL file for each one.

Wed Jul 28 14:51:19 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/componentref.bmp:

          Changed these icons to be rectangular, eliminating
          aliasing problems when they are resized.

        * PICML/paradigms/icons/boundedstring.bmp:
        * PICML/paradigms/icons/file.bmp:
        * PICML/paradigms/icons/fixedcollection.bmp:
        * PICML/paradigms/icons/fixedpoint.bmp:
        * PICML/paradigms/icons/id.bmp:
        * PICML/paradigms/icons/manages.bmp:
        * PICML/paradigms/icons/namedtyperef.bmp:
        * PICML/paradigms/icons/predefined.bmp:
        * PICML/paradigms/icons/prefix.bmp:
        * PICML/paradigms/icons/version.bmp:

          Removed these unused icons from the repository.

        * PICML/decorators/CommonError.cpp:
        * PICML/decorators/CommonError.h:
        * PICML/decorators/CommonSmart.h:
        * PICML/decorators/Decorator.cpp:
        * PICML/decorators/Decorator.dsp:
        * PICML/decorators/Decorator.dsw:
        * PICML/decorators/Decorator.h:
        * PICML/decorators/Decorator.rc:
        * PICML/decorators/Decorator.rgs:
        * PICML/decorators/DecoratorApp.cpp:
        * PICML/decorators/DecoratorApp.def:
        * PICML/decorators/DecoratorConfig.h:
        * PICML/decorators/DecoratorLib.idl:
        * PICML/decorators/DecoratorStd.h:
        * PICML/decorators/DecoratorUtil.cpp:
        * PICML/decorators/DecoratorUtil.h:
        * PICML/decorators/IDMLDecorators.cpp:
        * PICML/decorators/IDMLDecorators.h:
        * PICML/decorators/MaskedBitmap.cpp:
        * PICML/decorators/MaskedBitmap.h:
        * PICML/decorators/StdAfx.cpp:
        * PICML/decorators/StdAfx.h:
        * PICML/decorators/resource.h:

          New directory and files for PICML decorator.

Tue Jul 27 17:38:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp:
        * PICML/paradigms/PICMLTemplate.xme:
        * PICML/paradigms/PredefinedTypes.xme:

          Removed the collection elements added to the PredefinedTypes
          folder in

          Tue Jul 27 16:39:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          and updated all related files.

Tue Jul 27 16:39:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp:

          Integrated the IDML paradigm into PICML. Also added
          elements to the PredefinedTypes folder representing
          collections of commonly used predefined types.

        * PICML/paradigms/PICMLTemplate.xme:
        * PICML/paradigms/PredefinedTypes.xme:

          Added the new predefined types described above to these
          models.

Fri Jul 23 15:12:09 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PICML/interpreters/cidl/Component/IDLStream.cpp:
          Fixed home executor generator for the cidl file. Thanks to Gan
          for pointing this out

Thu Jul 22 22:15:04 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PICML/interpreters/cidl:
          Added support for generation of cidl from the models

        * PICML/interpreters/Component:
          cidl intrepreter directory

        * PICML/interpreters/cidl/Component/UdmApp.h:
        * PICML/interpreters/cidl/Component/UdmApp.cpp:
        * PICML/interpreters/cidl/Component/IDLStream.h:
        * PICML/interpreters/cidl/Component/IDLStream.cpp:
        * PICML/interpreters/cidl/Component/PICML.h:
        * PICML/interpreters/cidl/Component/PICML.cpp:
        * PICML/interpreters/cidl/Component/Cidlc_Visitor.h:
        * PICML/interpreters/cidl/Component/Cidlc_Visitor.cpp:
        * PICML/interpreters/cidl/Component/RawComponent.cpp:
        * PICML/interpreters/cidl/Component/RawComponent.h:
        * PICML/interpreters/cidl/Component/StdAfx.cpp:
        * PICML/interpreters/cidl/Component/CompIcon.ico:
        * PICML/interpreters/cidl/Component/ComponentConfig.h:
        * PICML/interpreters/cidl/Component/ComponentDll.h:
        * PICML/interpreters/cidl/Component/ComponentDll.cpp:
        * PICML/interpreters/cidl/Component/ComponentObj.h:
        * PICML/interpreters/cidl/Component/ComponentObj.cpp:
        * PICML/interpreters/cidl/Component/GMECOM.h:
        * PICML/interpreters/cidl/Component/Component.dsw:
        * PICML/interpreters/cidl/Component/Component.ncb:
        * PICML/interpreters/cidl/Component/Component.def:
        * PICML/interpreters/cidl/Component/Component.dsp:
        * PICML/interpreters/cidl/Component/ComHelp.h:
        * PICML/interpreters/cidl/Component/ComHelp.cpp:
          Workspace for the building the cidl intrepreter

Thu Jul 22 18:54:53 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDML-Meta.xme:

          Updated metamodel, fixed constraint for inheritable types that checks
          for unique contained names so it will skip the PrivateFlag atoms
          and MakeMemberPrivate connections that may appear in a valuetype
          or eventtype.

Thu Jul 22 000:56:30 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/decorators/Decorator.cpp:
        * IDML/decorators/Decorator.h:
        * IDML/decorators/IDMLDecorators.cpp:
        * IDML/decorators/IDMLDecorators.h:

          Added code to generate the type name for instances of components,
          when such instances are added to a PICML model.

Wed Jul 21 13:30:29 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xml:

          Updated the export file and the XML file required to generate
          the interpreter files from UDM

        * PICML/paradigms/Integrating-Tools-with-PICML.txt:

          README files for all tool developers on the steps required for
          them to integrate their tools with the PICML meta.

        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/plan/PICML.h:
        * PICML/interpreters/plan/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:

          Updated the header and .cpp files generated from UDM required
          for the interpreters

Tue Jul 20 15:47:25 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * PICML/paradigms/PICML.xmp:
          Added the Benchmark generation paradigm into PICML. As of now
          only the xmp file has been modified

        * PICML/paradigms/icons/Average.bmp:
        * PICML/paradigms/icons/Min.bmp:
        * PICML/paradigms/icons/Max.bmp:
        * PICML/paradigms/icons/Max.bmp:
        * PICML/paradigms/icons/Jitter.bmp:
        * PICML/paradigms/icons/Latency.bmp:
        * PICML/paradigms/icons/Throughput.bmp:
        * PICML/paradigms/icons/timer.bmp:
        * PICML/paradigms/icons/operationref.bmp:
          Icons used in the paradigm

Thu Jul 15 18:03:06 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/paradigms/PICML.xmp:
        * PICML/paradigms/PICML.xme: Updated to reflect changes made by
          Jeff below to fix the issues with Port connections not showing
          up in PICML models. Now things are working fine!

        * PICML/paradigms/PICML.xml: Regenerated file to reflect change
          in meta.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme: Updated to reflect changes in
          library, i.e IDML, and changes to PICML.

        * PICML/examples/RobotAssembly.xme: Updated to reflect changes in
          meta.

        * PICML/interpreters/domain/PICML.h:
        * PICML/interpreters/domain/PICML.xsd:
        * PICML/interpreters/domain/PICML.cpp:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/plan/PICML.h:
        * PICML/interpreters/plan/PICML.xsd:
        * PICML/interpreters/plan/PICML.cpp: Regenerated to reflect
          regeneration of PICML.xml.


Thu Jul  8 14:13:45 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/interpreters/IDLGenerator/ComponentLib.h:
        * IDML/interpreters/IDLGenerator/ComponentLib_i.c:
        * IDML/interpreters/IDLGenerator/ComponentLib_p.c:

          Removed these files from CVS - they are generated by
          the build.

        * IDML/decorators/Decorator.cpp:
        * IDML/decorators/Decorator.dsp:
        * IDML/decorators/Decorator.dsw:
        * IDML/decorators/IDMLDecorators.cpp:
        * IDML/decorators/IDMLDecorators.h:

          Fiz for a bug with seeing PICML connections to
          component ports. Apparently the IDML decorator, after taking
          over the drawing of a component and its ports, was not getting
          port information back to GME and ultimately to the GME
          default decorator, which draws everything the IDML decorator
          does not.

        * IDML/paradigms/IDML.xmp:

          Apparently this file was not checked in as indicated in the
          ChangeLog entry

          Tue Jun 15 10:47:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>.

Wed Jul 14 18:12:52 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/paradigms/PICML.xml: Regenerated the xml file to the
          updated version of the meta. Forgot to do this with the
          previous check-in.

        * PICML/paradigms/PICML-uml.xme: Updated version of the export.

        * PICML/interpreters/domain/PICML.h:
        * PICML/interpreters/domain/PICML.cpp:
        * PICML/interpreters/domain/PICML.xsd:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/plan/PICML.h:
        * PICML/interpreters/plan/PICML.cpp:
        * PICML/interpreters/plan/PICML.xsd:

          Updated version of the generated API files.


Tue Jul 13 17:14:51 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/interpreters/packaging/PackageVisitor.cpp: Fixed the bug
          with generating "ConfigProperty" instead of "configProperty".

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp: Updated to use "Packaging" as the
          aspect name instead of "Package".

        * PICML/examples/RobotAssembly.xme: Changes to reflect the above
          change.


Thu Jun 24 10:57:57 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/domain/DomainVisitor.cpp:
        * PICML/interpreters/domain/DomainVisitor.h:

          Updated the domain descriptor interpreter.

Thu Jun 24 10:54:06 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/PlanVisitor.cpp:

          Made a change to fix a typo.

Thu Jun 24 10:03:47 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/examples/RobotAssembly.xme:

          Fixed a typo in an attribute name.

Tue Jun 22 15:24:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/examples/RobotAssembly.xme:

          Updated the robot assembly model to incorporate the
          IDL changes.

Mon Jun 21 15:50:02 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Fixed a couple of typos in
          the model which caused exceptions in the run-time.

Mon Jun 21 13:40:51 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * IDML/decorators/Decorator.dsp:
        * IDML/decorators/Decorator.rc: Updated decorator.rc to include the
          right path for the icon files.

        * PICML/examples/RobotAssembly.xme: Updated model to the latest
          version.

        * PICML/interpreters/domain/PICML.h:
        * PICML/interpreters/domain/PICML.xsd:
        * PICML/interpreters/domain/PICML.cpp:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/plan/PICML.h:
        * PICML/interpreters/plan/PICML.xsd:
        * PICML/interpreters/plan/PICML.cpp: Regenerated files to match
          the updates to the meta.

        * PICML/paradigms/PICML.xml: Regenerated to match changes in the
          meta.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp: Updated meta to fix problems with
          using Jeff's decorator. I changed the imported IDML.mga to
          remove the Decorator attribute on Component inside
          ComponentType folder of IDML.

        * PICML/paradigms/icons/PackageReference.bmp:
        * PICML/paradigms/icons/aggregate.bmp:
        * PICML/paradigms/icons/aggregateref.bmp:
        * PICML/paradigms/icons/alias.bmp:
        * PICML/paradigms/icons/aliasref.bmp:
        * PICML/paradigms/icons/attribute.bmp:
        * PICML/paradigms/icons/boolean.bmp:
        * PICML/paradigms/icons/boxed.bmp:
        * PICML/paradigms/icons/boxedref.bmp:
        * PICML/paradigms/icons/byte.bmp:
        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/componentfactory.bmp:
        * PICML/paradigms/icons/componentfactoryref.bmp:
        * PICML/paradigms/icons/componentref.bmp:
        * PICML/paradigms/icons/const.bmp:
        * PICML/paradigms/icons/discriminator.bmp:
        * PICML/paradigms/icons/enum.bmp:
        * PICML/paradigms/icons/enumref.bmp:
        * PICML/paradigms/icons/enumvalue.bmp:
        * PICML/paradigms/icons/event.bmp:
        * PICML/paradigms/icons/eventref.bmp:
        * PICML/paradigms/icons/exception.bmp:
        * PICML/paradigms/icons/exceptionref.bmp:
        * PICML/paradigms/icons/factory.bmp:
        * PICML/paradigms/icons/fileref.bmp:
        * PICML/paradigms/icons/genericobject.bmp:
        * PICML/paradigms/icons/genericvalue.bmp:
        * PICML/paradigms/icons/genericvalueobject.bmp:
        * PICML/paradigms/icons/getexception.bmp:
        * PICML/paradigms/icons/in.bmp:
        * PICML/paradigms/icons/inevent_lf.bmp:
        * PICML/paradigms/icons/inevent_rt.bmp:
        * PICML/paradigms/icons/ineventport.bmp:
        * PICML/paradigms/icons/inherits.bmp:
        * PICML/paradigms/icons/inout.bmp:
        * PICML/paradigms/icons/label.bmp:
        * PICML/paradigms/icons/long.bmp:
        * PICML/paradigms/icons/lookup.bmp:
        * PICML/paradigms/icons/lookupkey.bmp:
        * PICML/paradigms/icons/member.bmp:
        * PICML/paradigms/icons/object.bmp:
        * PICML/paradigms/icons/objectref.bmp:
        * PICML/paradigms/icons/oneway.bmp:
        * PICML/paradigms/icons/out.bmp:
        * PICML/paradigms/icons/outevent_lf.bmp:
        * PICML/paradigms/icons/outevent_rt.bmp:
        * PICML/paradigms/icons/outeventport.bmp:
        * PICML/paradigms/icons/package.bmp:
        * PICML/paradigms/icons/private.bmp:
        * PICML/paradigms/icons/providedrequestport.bmp:
        * PICML/paradigms/icons/readonlyattribute.bmp:
        * PICML/paradigms/icons/realnumber.bmp:
        * PICML/paradigms/icons/receptacle_lf.bmp:
        * PICML/paradigms/icons/receptacle_rt.bmp:
        * PICML/paradigms/icons/requiredrequestport.bmp:
        * PICML/paradigms/icons/return.bmp:
        * PICML/paradigms/icons/setexception.bmp:
        * PICML/paradigms/icons/setexceptionref.bmp:
        * PICML/paradigms/icons/short.bmp:
        * PICML/paradigms/icons/string.bmp:
        * PICML/paradigms/icons/supports.bmp:
        * PICML/paradigms/icons/switchedaggregate.bmp:
        * PICML/paradigms/icons/switchedaggregateref.bmp:
        * PICML/paradigms/icons/twoway.bmp:
        * PICML/paradigms/icons/typeencoding.bmp:
        * PICML/paradigms/icons/typekind.bmp:
        * PICML/paradigms/icons/value.bmp:
        * PICML/paradigms/icons/valueref.bmp:
        * PICML/paradigms/icons/variablecollection.bmp:
        * PICML/paradigms/icons/variablecollectionref.bmp: Updated icons
          to match Jeff's version of the icons.

Sun Jun 20 19:32:17 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/README: Updated to include preliminary documentation on
          building the PICML interpreter.

Sun Jun 20 18:12:55 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/domain/CompIcon.ico:
        * PICML/interpreters/domain/ComponentConfig.h:
        * PICML/interpreters/domain/Domain.dsp:
        * PICML/interpreters/domain/DomainVisitor.cpp:
        * PICML/interpreters/domain/DomainVisitor.h:
        * PICML/interpreters/domain/UdmApp.cpp:

          Made a firct cut version of the interpreter that will generate
          Domain descriptors.

Sun Jun 20 19:00:23 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Updated model to include
          ComponentIOR property.

        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp:
        * PICML/interpreters/packaging/UdmApp.cpp: First version of the
          PICML interpreter which generates all types of descriptors.

        * PICML/paradigms/PICML.xmp: Updated meta to fix problems with
          some constraints which triggered inappropriately.

        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme: Updated to reflect changes in the
          meta.

Sun Jun 20 17:10:38 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/domain/CompIcon.ico:
        * PICML/interpreters/domain/Component.def:
        * PICML/interpreters/domain/Component.rc:
        * PICML/interpreters/domain/ComponentConfig.h:
        * PICML/interpreters/domain/Domain.dsp:
        * PICML/interpreters/domain/Domain.dsw:
        * PICML/interpreters/domain/DomainVisitor.cpp:
        * PICML/interpreters/domain/DomainVisitor.h:
        * PICML/interpreters/domain/PICML.cpp:
        * PICML/interpreters/domain/PICML.h:
        * PICML/interpreters/domain/PICML.xsd:
        * PICML/interpreters/domain/RawComponent.cpp:
        * PICML/interpreters/domain/RawComponent.h:
        * PICML/interpreters/domain/StdAfx.cpp:
        * PICML/interpreters/domain/StdAfx.h:
        * PICML/interpreters/domain/UdmApp.cpp:
        * PICML/interpreters/domain/UdmApp.h:
        * PICML/interpreters/domain/UdmConfig.h:
        * PICML/interpreters/domain/UuidString.cpp:
        * PICML/interpreters/domain/UuidString.h:
        * PICML/interpreters/domain/XercesString.cpp:
        * PICML/interpreters/domain/XercesString.h:
        * PICML/interpreters/domain/resource.h:

          Checked in the files needed for creating the Domain
          descriptor (.cdd) from the PICML models.

Sun Jun 20 16:49:13 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/DeploymentPlan.dsp:
        * PICML/interpreters/plan/PlanVisitor.cpp:
        * PICML/interpreters/plan/PlanVisitor.h:
        * PICML/interpreters/plan/UdmApp.cpp:

          Checked in the interpreter that creates DeploymentPlan
          descriptor.

Sun Jun 20 11:06:35 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/examples/RobotAssembly.xme:

          Updated the RobotAssembly after registering the Deployment
          Plan interpreter.

Sun Jun 20 10:37:03 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/Component.def:

          Made changes to fix the name of the DLL exported.

Sat Jun 19 19:31:27 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Updated model to include
          ComponentIOR property.

        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp: Updated
          interpreter to generate PackageConfiguration descriptor and
          ComponentPackage descriptor. Two more types of descriptors are
          left.

Sat Jun 19 18:12:05 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/CompIcon.ico:
        * PICML/interpreters/plan/ComponentConfig.h:
        * PICML/interpreters/plan/DeploymentPlan.dsp:
        * PICML/interpreters/plan/DeploymentPlan.dsw:
        * PICML/interpreters/plan/PlanVisitor.cpp:
        * PICML/interpreters/plan/PlanVisitor.h:
        * PICML/interpreters/plan/UdmApp.cpp:

          Made changes to the DeploymentPlan interpreters.

Sat Jun 19 16:50:05 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/CompIcon.ico:
        * PICML/interpreters/plan/Component.def
        * PICML/interpreters/plan/Component.rc
        * PICML/interpreters/plan/ComponentConfig.h
        * PICML/interpreters/plan/DeploymentPlan.dsp
        * PICML/interpreters/plan/DeploymentPlan.dsw
        * PICML/interpreters/plan/PICML.cpp
        * PICML/interpreters/plan/PICML.h
        * PICML/interpreters/plan/PICML.xsd
        * PICML/interpreters/plan/PlanVisitor.cpp
        * PICML/interpreters/plan/PlanVisitor.h
        * PICML/interpreters/plan/RawComponent.cpp
        * PICML/interpreters/plan/RawComponent.h
        * PICML/interpreters/plan/StdAfx.cpp
        * PICML/interpreters/plan/StdAfx.h
        * PICML/interpreters/plan/UdmApp.cpp
        * PICML/interpreters/plan/UdmApp.h
        * PICML/interpreters/plan/UdmConfig.h
        * PICML/interpreters/plan/UuidString.cpp
        * PICML/interpreters/plan/UuidString.h
        * PICML/interpreters/plan/XercesString.cpp
        * PICML/interpreters/plan/XercesString.h
        * PICML/interpreters/plan/resource.h

          Added new files for the DeploymentPlan interpretation.

Sat Jun 19 16:25:35 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp:
        * PICML/interpreters/packaging/UdmApp.cpp: Added support to
          generate ImplementationArtifact Descriptors and
          TopLevelPackageDescriptor. Rest in pipeline. Checking in now so
          that Jai can start on his part.

Fri Jun 18 14:22:30 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/docs/IDML_User_Manual.pdf:

          New file, user's manual and reference for IDML and IDLGenerator.

Tue Jun 15 10:47:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/examples/new_test.xme:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:

          Added constraint to metamodel that checks for legal values
          (type and range) for constants. Note that there seems to
          be a problem with GME's Constraint Manager using toInteger()
          to convert a constant's string value to an integer if
          there is a '-' prefix to the string of digits. This issue
          has been raised with gme-users. Also updated template models
          and example model to use the updated paradigm.

Mon Jun 14 18:19:01 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradimgs/IDML-Meta.xme:
        * IDML/paradimgs/IDML.xmp:
        * IDML/paradimgs/IDMLTemplate.xme:
        * IDML/paradimgs/PredefinedTypes.xme:

          Assigned the decorator below to the appropriate metamodel
          elements, and updated the model template files.

Mon Jun 14 17:56:33 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/decorators/CommonError.cpp:
        * IDML/decorators/CommonError.h:
        * IDML/decorators/CommonSmart.h:
        * IDML/decorators/Decorator.cpp:
        * IDML/decorators/Decorator.dsp:
        * IDML/decorators/Decorator.dsw:
        * IDML/decorators/Decorator.h:
        * IDML/decorators/Decorator.rc:
        * IDML/decorators/Decorator.rgs:
        * IDML/decorators/DecoratorApp.cpp:
        * IDML/decorators/DecoratorApp.def:
        * IDML/decorators/DecoratorConfig.h:
        * IDML/decorators/DecoratorLib.idl:
        * IDML/decorators/DecoratorStd.h:
        * IDML/decorators/DecoratorUtil.cpp
        * IDML/decorators/DecoratorUtil.h:
        * IDML/decorators/IDMLDecorators.cpp:
        * IDML/decorators/IDMLDecorators.h:
        * IDML/decorators/MaskedBitmap.cpp:
        * IDML/decorators/MaskedBitmap.h:
        * IDML/decorators/StdAfx.cpp:
        * IDML/decorators/StdAfx.h:
        * IDML/decorators/resource.h:

          New files, a decorator for IDML which:

          - Checks for Members and AttributeMembers to have non-null
            references, and when they do (or when they change), replaces
            the current icon with either the appropriate
            PredefinedType icon or the reference version of the
            appropriate named type icon. This will update immediately
            when something is dragged as a reference and dropped on
            an existing Member or AttributeMember element.

          - Makes sure port icons are facing in the right direction.
            The ProvidedRequestPort icon is symmetrical, but each of
            the others has two mirror image icons, one of which is selected
            by the decorator each time the screen is redrawn. Some of
            the code for this feature was adapted from the default
            decorator in GME source code.

Mon Jun 14 08:57:13 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/interpreters/packaging/PackageVisitor.cpp:
        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/UdmApp.cpp:
        * PICML/interpreters/packaging/UuidString.cpp:
        * PICML/interpreters/packaging/UuidString.h:
        * PICML/interpreters/packaging/XercesString.cpp:
        * PICML/interpreters/packaging/XercesString.h:

          Checking in to work on the office machine.

Sun Jun 13 18:45:52 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Updated to match Robert's
          latest version.

        * PICML/paradigms/PICML.xml:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/packaging/PICML.cpp: Regenerated after minor
          changes to PICML.

        * PICML/interpreters/packaging/UuidString.h:
        * PICML/interpreters/packaging/UuidString.cpp: New files which
          will generate UUIDs.

        * PICML/interpreters/packaging/PackageComponent.dsp:
        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp:
        * PICML/interpreters/packaging/UdmApp.cpp:
        * PICML/interpreters/packaging/XercesString.h:
        * PICML/interpreters/packaging/XercesString.cpp: Closer to
          getting the interpreter working.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp: Updated to reflect changes in the
          meta.

Fri Jun 11 16:07:48 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/interpreters/packaging/PackageComponent.dsp: Removed the
          /s flag to regsvr32 to catch errors in interpreter
          installation.

        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp: New files
          moved from SchemaVisitor.

        * PICML/interpreters/packaging/UdmApp.cpp: Initial code. Checking
          it in to retrieve it from other machines.

        * PICML/interpreters/packaging/XercesString.h:
        * PICML/interpreters/packaging/XercesString.cpp: Utility class to
          make working with Xerces strings easier.

        * PICML/interpreters/packaging/SchemaVisitor.h:
        * PICML/interpreters/packaging/SchemaVisitor.cpp:

          Removed these files as the name SchemaVisitor was not
          appropriate.

Thu Jun 10 18:53:00 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradigms/Icons/ineventport.bmp:
        * IDML/paradigms/Icons/member.bmp:
        * IDML/paradigms/Icons/outeventport.bmp:
        * IDML/paradigms/Icons/requiredrequestport.bmp:

          Resized these icons to 64x64 pixels. They got overlooked
          when I resized all icons the first time.

Wed Jun  9 16:28:03 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/interpreters/Package/Package.mpc: Added PACKAGE_BUILD_DLL
          flag to ensure that the proper export flags are set up.

        * PICML/interpreters/Package/SchemaVisitor.h:
        * PICML/interpreters/Package/SchemaVisitor.cpp: Initial check-in
          to get the interpreter project organized.

        * PICML/interpreters/PackageComponent/PackageComponent.mpc: Added
          use of precompiled headers through StdAfx.h.

        * PICML/interpreters/PackageComponent/PackageComponent.rc:
          Removed the resource entries for Dialog boxes and Uml.xsd.

        * PICML/interpreters/PackageComponent/Resource.h: New version of
          file needed for the project to build.

        * PICML/interpreters/debug_libs.mpb: Added the list of individual
          libraries instead of UdmDll.

        * PICML/interpreters/picmllib.mpb: Added /Zm200 to the project so
          that it will compile PICML.cpp.

        * PICML/interpreters/release_libs.mpb: Added a list of individual
          libraries instead of UdmDll.


        * PICML/interpreters/packaging/CompIcon.ico:
        * PICML/interpreters/packaging/Component.def:
        * PICML/interpreters/packaging/Component.rc:
        * PICML/interpreters/packaging/ComponentConfig.h:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/packaging/PackageComponent.dsp:
        * PICML/interpreters/packaging/PackageComponent.dsw:
        * PICML/interpreters/packaging/RawComponent.h:
        * PICML/interpreters/packaging/RawComponent.cpp:
        * PICML/interpreters/packaging/SchemaVisitor.h:
        * PICML/interpreters/packaging/SchemaVisitor.cpp:
        * PICML/interpreters/packaging/StdAfx.h:
        * PICML/interpreters/packaging/StdAfx.cpp:
        * PICML/interpreters/packaging/UdmApp.h:
        * PICML/interpreters/packaging/UdmApp.cpp:
        * PICML/interpreters/packaging/UdmConfig.h:
        * PICML/interpreters/packaging/resource.h:

          New workspace which brings all the files together and creates a
          single Interpreter DLL. I am taking this approach since the
          other mechanism throws up non-trivial errors and is in general a
          big ball of mud. We need the interpreter to work more than the
          whole infrastructure working with MPC.

Tue Jun  8 14:51:18 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradigms/Icons/aggregateref.bmp:
        * IDML/paradigms/Icons/aliasref.bmp:
        * IDML/paradigms/Icons/boolean.bmp:
        * IDML/paradigms/Icons/boxedref.bmp:
        * IDML/paradigms/Icons/byte.bmp:
        * IDML/paradigms/Icons/componentfactoryref.bmp:
        * IDML/paradigms/Icons/componentref.bmp:
        * IDML/paradigms/Icons/genericobject.bmp:
        * IDML/paradigms/Icons/genericvalue.bmp:
        * IDML/paradigms/Icons/genericvalueobject.bmp:
        * IDML/paradigms/Icons/inevent_lf.bmp:
        * IDML/paradigms/Icons/inevent_rt.bmp:
        * IDML/paradigms/Icons/long.bmp:
        * IDML/paradigms/Icons/outevent_lf.bmp:
        * IDML/paradigms/Icons/outevent_rt.bmp:
        * IDML/paradigms/Icons/realnumber.bmp:
        * IDML/paradigms/Icons/receptacle_lf.bmp:
        * IDML/paradigms/Icons/receptacle_rt.bmp:
        * IDML/paradigms/Icons/setexceptionref.bmp:
        * IDML/paradigms/Icons/short.bmp:
        * IDML/paradigms/Icons/string.bmp:
        * IDML/paradigms/Icons/switchedaggregateref.bmp:
        * IDML/paradigms/Icons/typeencoding.bmp:
        * IDML/paradigms/Icons/typekind.bmp:
        * IDML/paradigms/Icons/valueref.bmp:
        * IDML/paradigms/Icons/variablecollectionref.bmp:

          New icons, used when the type associated with the icon
          is used as a reference.

        * IDML/paradigms/Icons/aggregate.bmp:
        * IDML/paradigms/Icons/alias.bmp:
        * IDML/paradigms/Icons/attribute.bmp:
        * IDML/paradigms/Icons/boxed.bmp:
        * IDML/paradigms/Icons/component.bmp:
        * IDML/paradigms/Icons/componentfactory.bmp:
        * IDML/paradigms/Icons/const.bmp:
        * IDML/paradigms/Icons/discriminator.bmp:
        * IDML/paradigms/Icons/enum.bmp:
        * IDML/paradigms/Icons/enumref.bmp:
        * IDML/paradigms/Icons/enumvalue.bmp:
        * IDML/paradigms/Icons/event.bmp:
        * IDML/paradigms/Icons/eventref.bmp:
        * IDML/paradigms/Icons/exception.bmp:
        * IDML/paradigms/Icons/exceptionref.bmp:
        * IDML/paradigms/Icons/factory.bmp:
        * IDML/paradigms/Icons/fileref.bmp:
        * IDML/paradigms/Icons/getexception.bmp:
        * IDML/paradigms/Icons/in.bmp:
        * IDML/paradigms/Icons/inherits.bmp:
        * IDML/paradigms/Icons/inout.bmp:
        * IDML/paradigms/Icons/label.bmp:
        * IDML/paradigms/Icons/lookup.bmp:
        * IDML/paradigms/Icons/lookupkey.bmp:
        * IDML/paradigms/Icons/member.bmp:
        * IDML/paradigms/Icons/object.bmp:
        * IDML/paradigms/Icons/objectref.bmp:
        * IDML/paradigms/Icons/oneway.bmp:
        * IDML/paradigms/Icons/out.bmp:
        * IDML/paradigms/Icons/package.bmp:
        * IDML/paradigms/Icons/private.bmp:
        * IDML/paradigms/Icons/providedrequestport.bmp:
        * IDML/paradigms/Icons/readonlyattribute.bmp:
        * IDML/paradigms/Icons/return.bmp:
        * IDML/paradigms/Icons/setexception.bmp:
        * IDML/paradigms/Icons/supports.bmp:
        * IDML/paradigms/Icons/switchedaggregate.bmp:
        * IDML/paradigms/Icons/twoway.bmp:
        * IDML/paradigms/Icons/value.bmp:
        * IDML/paradigms/Icons/variablecollection.bmp:

          Made all icons 64x64 pixels in size.

Mon Jun  7 18:20:34 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Updated the RobotAssembly
          model so that it is complete enough for descriptor generation.

        * PICML/interpreters/PICML/PICML.mpc: Added -m to Udm.exe upon
          Endre's suggestion.

        * PICML/interpreters/Package/SchemaVisitor.h: Minor
          modifications.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xml:
        * PICML/paradigms/PICML.xmp: Updated to reflect bugs in the model
          while building the RobotAssembly model.

Fri Jun  4 18:40:17 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: New file which models the
          RobotAssembly scenario requested by LockHeed. The scenario is
          almost done except for adding the implementation artifacts for
          4 components.

        * PICML/interpreters/PackageComponent/PackageComponent.mpc: Added
          PackageComponent.def, the export DEF file to the sources.

        * PICML/paradigms/PICML.xme: Updated to reflect bugs in the
          meta-model uncovered when modeling the RobotAssembly scenario.
          Removed some constraints which triggered at the wrong time.
          There seems to be some bug in the constraint manager.

        * PICML/paradigms/PICML.xmp: New version of the paradigm which
          reflects the above changes.

        * PICML/paradigms/PICMLTemplate.xme:
        * PICML/paradigms/PredefinedTypes.xme: Updated to reflect changes
          in the paradigm.

        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/manages.bmp: New versions of these icons
          from the IDML directory.


        * PICML/paradigms/icons/providedrequestport.bmp:
        * PICML/paradigms/icons/requiredrequestport.bmp: Renamed these
          icons to reflect the renaming in IDML.

        * PICML/paradigms/icons/inrequestport.bmp:
        * PICML/paradigms/icons/outrequestport.bmp:

          Removed these files.

Thu Jun  3 12:36:40 2004  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp: Checking in version which has my
          current set of fixes so that I can work on it from BBN.

Wed Jun  2 15:59:11 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/examples/new_test.xme:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:

          Added constraints to the metamodel, and updated the
          other files accordingly.

Wed Jun  2 15:47:05 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/interpreters/IDLGenerator/BON2Component.cpp:
        * IDML/interpreters/IDLGenerator/BON2Component.h:
        * IDML/interpreters/IDLGenerator/BON2Component.sln:
        * IDML/interpreters/IDLGenerator/CompIcon.ico:
        * IDML/interpreters/IDLGenerator/Component.aps:
        * IDML/interpreters/IDLGenerator/Component.rc:
        * IDML/interpreters/IDLGenerator/ComponentConfig.h:
        * IDML/interpreters/IDLGenerator/ComponentLib.h:
        * IDML/interpreters/IDLGenerator/ComponentLib.tlb:
        * IDML/interpreters/IDLGenerator/ComponentLib_i.c:
        * IDML/interpreters/IDLGenerator/ComponentLib_p.c:
        * IDML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * IDML/interpreters/IDLGenerator/DependencyVisitor.h:
        * IDML/interpreters/IDLGenerator/GMESources.txt:
        * IDML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * IDML/interpreters/IDLGenerator/IDLEmitVisitor.h:
        * IDML/interpreters/IDLGenerator/IDLGeneratorBON2Component.vcproj:
        * IDML/interpreters/IDLGenerator/IDLStream.cpp:
        * IDML/interpreters/IDLGenerator/IDLStream.h:
        * IDML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * IDML/interpreters/IDLGenerator/IDMLBonExtension.h:
        * IDML/interpreters/IDLGenerator/Resource.h:
        * IDML/interpreters/IDLGenerator/StdAfx.cpp:
        * IDML/interpreters/IDLGenerator/StdAfx.h:
        * IDML/interpreters/IDLGenerator/component.def:
        * IDML/interpreters/IDLGenerator/dlldata.c:

          New interpreter, which generates IDL from IDML models.

Wed Jun  2 12:03:02 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/interpreters/PICML/PICML.mpc:
        * PICML/interpreters/PICML/PICML_Export.h: Modified to fix some
          bugs and made PICML a non-MFC application.

        * PICML/interpreters/Package/Package.mpc:
        * PICML/interpreters/Package/SchemaVisitor.h:
        * PICML/interpreters/Package/SchemaVisitor.cpp: Similar changes
          as above. Added new files which will hold the Package
          interpreter logic.

        * PICML/interpreters/PackageComponent/CompIcon.ico:
        * PICML/interpreters/PackageComponent/ComponentConfig.h:
        * PICML/interpreters/PackageComponent/PackageComponent.def:
        * PICML/interpreters/PackageComponent/PackageComponent.rc:
        * PICML/interpreters/PackageComponent/RawComponent.h:
        * PICML/interpreters/PackageComponent/RawComponent.cpp:
        * PICML/interpreters/PackageComponent/StdAfx.h:
        * PICML/interpreters/PackageComponent/StdAfx.cpp:
        * PICML/interpreters/PackageComponent/UdmApp.h:
        * PICML/interpreters/PackageComponent/UdmApp.cpp:
        * PICML/interpreters/PackageComponent/UdmConfig.h:

          Standard files needed to write an interpreter using UDM. These
          files can't be copied en masse to create a new interpreter.
          There are some non-trivial modifications to be made to
          ComponentConfig.h. Hopefully I can also add a perl script to do
          that.

        * PICML/interpreters/debug_libs.mpb:
        * PICML/interpreters/picmllib.mpb:
        * PICML/interpreters/release_libs.mpb: Modified to reflect
          suggestions from Chad.

Thu May 27 13:07:08 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:
        * IDML/examples/new_test.xme:

          Made slight change to metamodel - changed ProvidedRequestPort and
          RequiredRequestPort elements to refer to, instead of an Object,
          and FCO abstract base class of Object and GenericObject. This
          change will allow IDL importing and exporting of facets and
          receptacles that are associated with Object (mapped to
          CORBA::Object in C++). Also updated the related models
          accordingly.

Thu May 27 00:36:39 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp:
        * PICML/paradigms/PICMLTemplate.xme:
        * PICML/paradigms/PredefinedTypes.xme:
        * PICML/paradigms/icons/Bridge.bmp:
        * PICML/paradigms/icons/Node.bmp:
        * PICML/paradigms/icons/Domain.bmp:
        * PICML/paradigms/icons/ComponentSet.bmp:
        * PICML/paradigms/icons/Interconnect.bmp:
        * PICML/paradigms/icons/Resource.bmp:
        * PICML/paradigms/icons/SharedResource.bmp:

          Added the MIDCESS and DeploymentPlan meta modeling
          environment to the
          PICML modeling tool suite.

Sun May 23 01:11:38 2004  Krishnakumar B  <unknown@isis.vanderbilt.edu>

        * IDML/paradigms/IDML-Meta.xme: Modified the OperationTypes to
          refer to the MemberType directly as it causes problems with
          MetaGME2UML. I have also filed a bug report with GME folks;
          will do so if I think it will be a problem with
          UDM/MetaGME2UML.

        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:
        * IDML/examples/new_test.xme:

          Updated to reflect the above change.

        * PICML/bin/.empty: New directory to store the different DLLs and
          the binaries for PICML.

        * PICML/interpreters/PICML/PICML.mpc:

          New MPC file to generate workspace for PICML as a library.

        * PICML/interpreters/PICML/PICML_Export.h: Export file for PICML
          library.

        * PICML/interpreters/PICML_Debug.mwc:
        * PICML/interpreters/PICML_Release.mwc:

          MWC files for PICML. Two versions are necessary because
          some of the libraries needed by PICML e.g., UDM, use _D as library
          decorator, while some like xerces use D as library decorator.
          Thanks to Chad Elliot <elliot_c @ ociweb . com > for suggesting
          this.

        * PICML/interpreters/Package/Package.mpc: New MPC file for
          implementation of the visitor logic.

        * PICML/interpreters/Package/Package_Export.h: Export file for the
          visitor classes to be compiled as a DLL.

        * PICML/interpreters/PackageComponent/PackageComponent.mpc: New
          MPC file for the interpreter to generate Package related
          descriptors.

        * PICML/interpreters/debug_libs.mpb:
        * PICML/interpreters/default.features:
        * PICML/interpreters/picmllib.mpb:
        * PICML/interpreters/release_libs.mpb:

          Default MPC settings for projects using UDM and PICML.

        * PICML/lib/.empty: New directory to store all the libraries and
          the import files.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme:

          XML exports of IDML & PICML generated using MetaGME2UML.


        * PICML/paradigms/PICML.xme: New version of PICML XML export
          file.

        * PICML/paradigms/PICML.xmp: New version of the PICML paradigm.

        * PICML/paradigms/PICML.xml: XML output from UML2XML interpreter.

        * PICML/paradigms/PredefinedTypes.xme: XML export containing definitions
          of IDML predefined types. This file is attached as a library by
          PICMLTemplate.

        * PICML/paradigms/PICMLTemplate.xme: New XML export file that
          should be imported by every PICML model. This file serves as a
          template and includes PredefinedTypes as a library. This file
          should be saved under a new name by users.

        * PICML/examples/BasicSP.mga:
        * PICML/paradigms/PICML.mga:

          Removed these files.

Sat May 22 20:33:28 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/examples/new_test.xme:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:

          Fixed a couple of minor problems with the paradigm, and regenerated
          XML for it and everything that uses it.

Fri May 21 18:37:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/examples/new_test.xme:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:

          Major overhaul of paradigm, to make fewer steps and more
          simplicity for the user.

        * IDML/paradigms/PredefinedTypes.xme:

          New file, a model containing a folder with all the
          basic types.

        * IDML/paradigms/IDMLTemplate.xme:

          New file.
          Users can start from this file instead of creating a new
          project, and they will get an attached read-only library
          with the basic types from the model above.

        * IDML/paradigms/Icons/member.bmp:

          New file, need because after the overhaul of the
          paradigm, Member is no longer abstract.

Thu May 20 11:53:28 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/*:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradimgs/Icons/*.bmp:

          Moved all the IDML files to their own directory. Also
          made minor changes to constraints and turned off name
          display on a couple of icons.

        * IDML/examples/new_test.xme:

          Example model.

        * IDML/paradigms/Icons/file.bmp:
        * IDML/paradigms/Icons/prefix.bmp:
        * IDML/paradigms/Icons/id.bmp:
        * IDML/paradigms/Icons/version.bmp:

          Removed these icons - no longer used.

        * IDML/paradigms/Icons/getexception.bmp:
        * IDML/paradigms/Icons/setexception.bmp:

          Swapped these, they had been saved to the wrong file.

Sun May 16 23:14:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/paradifms/IDML-Meta.xme:
        * PICML/paradigms/IDML.xmp:

          Turned off the name display of some metamodel elememts, so that
          the name is hidden when dragged into the model editor. This
          change is to make things less confusing for the user, since now
          all the names that are not used by the IDL generator interpreter
          (in progress) and not checked by the GME constraint manager are
          not displayed for the user to worry about or try to edit. Also
          created some new metamodel elements which are twins of the
          various elements for the various anonymous types and also for
          the named type reference element. These new elements use the
          same icons as their twins, but their name display is turned
          off as explained above.

Wed May 13 017:32:44 2004  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PICML/paradifms/IDML-Meta.xme:
        * PICML/paradigms/IDML.xmp:

          Made some minor changes to better integrate with PICML.

        * PICML/paradigms/icons/file.bmp:

          New icon, created because the model element File is no longer
          in the root folder.

        * PICML/paradigms/icons/fileref.cmp:

          Modified icon to be similar to the new icon described above.

Wed May  5 02:44:11 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/BasicSP.mga:
        * PICML/examples/BasicSP.xme:

          Added new example to show how to view an assembly. I haven't
          added all the package related material. But those should be
          straightforward.

        * PICML/paradigms/IDML-Meta.xme:

          Made ComponenDef show it's type in instances.

        * PICML/paradigms/IDML.mga:
        * PICML/paradigms/IDML.xmp:

          Updated to reflect the above change.

        * PICML/paradigms/PICML.mga:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp:

          Next version of the paradigm. This time with some constraints.
          More need to be added. The Meta is still pseudo-stable.

        * PICML/paradigms/icons/DataType.bmp:
        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/manages.bmp:

          New icons + old icons resized so that GME doesn't stretch them
          to fit it's idea of how big an idol representing a model should
          be.

Fri Apr 30 18:29:04 2004  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PICML/paradigms/icons/component.bmp:

          Made the icon more elongated, to hopefully make a better-looking
          display when used as a reference.

        * PICML/paradigms/icons/manages.bmp:

          Changed the 'component' piece of this icon to match the change
          to the icon above.

Wed Apr 28 23:32:21 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/paradigms/IDML-Meta.xme:
        * PICML/paradigms/IDML.mga:
        * PICML/paradigms/IDML.xmp:

          Added new meta-model of Interface Definition Modeling Language
          (IDML).


        * PICML/paradigms/PICML.mga:
        * PICML/paradigms/PICML.xmp:

          Added binary mga files and XML exported paradigm so that users
          need not run the interpreter on the PICML meta-model. This file
          can just be registered using File->Register Paradigms, so that
          one can use the paradigm to make models without dealing with the
          complex steps involving aspect mapping.

        * PICML/paradigms/PICML.xme:

          Updated to reflect icons, changes in IDML and some minor changes
          in the connections.

        * PICML/paradigms/icons/Any.bmp:
        * PICML/paradigms/icons/Assembly.bmp:
        * PICML/paradigms/icons/Capability.bmp:
        * PICML/paradigms/icons/ComponentPackage.bmp:
        * PICML/paradigms/icons/ComponentProperty.bmp:
        * PICML/paradigms/icons/Connector.bmp:
        * PICML/paradigms/icons/ImplementationArtifact.bmp:
        * PICML/paradigms/icons/ImplementationArtifactReference.bmp:
        * PICML/paradigms/icons/ImplementationDependency.bmp:
        * PICML/paradigms/icons/ImplementationReference.bmp:
        * PICML/paradigms/icons/ImplementationRequirement.bmp:
        * PICML/paradigms/icons/MonolithicImplementation.bmp:
        * PICML/paradigms/icons/PackageConfiguration.bmp:
        * PICML/paradigms/icons/PackageConfigurationReference.bmp:
        * PICML/paradigms/icons/PackageReference.bmp:
        * PICML/paradigms/icons/Property.bmp:
        * PICML/paradigms/icons/Requirement.bmp:
        * PICML/paradigms/icons/SatisfierProperty.bmp:
        * PICML/paradigms/icons/TopLevelPackage.bmp:
        * PICML/paradigms/icons/aggregate.bmp:
        * PICML/paradigms/icons/alias.bmp:
        * PICML/paradigms/icons/attribute.bmp:
        * PICML/paradigms/icons/boundedstring.bmp:
        * PICML/paradigms/icons/boxed.bmp:
        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/componentfactory.bmp:
        * PICML/paradigms/icons/const.bmp:
        * PICML/paradigms/icons/discriminator.bmp:
        * PICML/paradigms/icons/enum.bmp:
        * PICML/paradigms/icons/enumref.bmp:
        * PICML/paradigms/icons/enumvalue.bmp:
        * PICML/paradigms/icons/event.bmp:
        * PICML/paradigms/icons/eventref.bmp:
        * PICML/paradigms/icons/exception.bmp:
        * PICML/paradigms/icons/exceptionref.bmp:
        * PICML/paradigms/icons/factory.bmp:
        * PICML/paradigms/icons/fileref.bmp:
        * PICML/paradigms/icons/fixedcollection.bmp:
        * PICML/paradigms/icons/fixedpoint.bmp:
        * PICML/paradigms/icons/getexception.bmp:
        * PICML/paradigms/icons/id.bmp:
        * PICML/paradigms/icons/in.bmp:
        * PICML/paradigms/icons/ineventport.bmp:
        * PICML/paradigms/icons/inherits.bmp:
        * PICML/paradigms/icons/inout.bmp:
        * PICML/paradigms/icons/inrequestport.bmp:
        * PICML/paradigms/icons/label.bmp:
        * PICML/paradigms/icons/lookup.bmp:
        * PICML/paradigms/icons/lookupkey.bmp:
        * PICML/paradigms/icons/manages.bmp:
        * PICML/paradigms/icons/namedtyperef.bmp:
        * PICML/paradigms/icons/object.bmp:
        * PICML/paradigms/icons/objectref.bmp:
        * PICML/paradigms/icons/oneway.bmp:
        * PICML/paradigms/icons/out.bmp:
        * PICML/paradigms/icons/outeventport.bmp:
        * PICML/paradigms/icons/outrequestport.bmp:
        * PICML/paradigms/icons/package.bmp:
        * PICML/paradigms/icons/predefined.bmp:
        * PICML/paradigms/icons/prefix.bmp:
        * PICML/paradigms/icons/private.bmp:
        * PICML/paradigms/icons/readonlyattribute.bmp:
        * PICML/paradigms/icons/return.bmp:
        * PICML/paradigms/icons/setexception.bmp:
        * PICML/paradigms/icons/supports.bmp:
        * PICML/paradigms/icons/switchedaggregate.bmp:
        * PICML/paradigms/icons/twoway.bmp:
        * PICML/paradigms/icons/value.bmp:
        * PICML/paradigms/icons/variablecollection.bmp:
        * PICML/paradigms/icons/version.bmp:

          Icons for IDML and PICML.

Tue Apr 27 14:21:09 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/README: Preliminary version of the README file.

        * PICML/paradigms/PICML.xme: First version of the PICML
          meta-model.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
