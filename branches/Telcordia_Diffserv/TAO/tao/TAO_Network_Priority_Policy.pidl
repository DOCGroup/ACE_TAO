// -*- IDL -*-

// ================================================================
/**
 *  @file TAO_Network_Policy.pidl
 *
 *  $Id$
 *
 *  This file contains TAO-specific idl interfaces for adding
 *  network priority support (not part of CORBA
 *  2.6).
 *
 *  The steps to regenerate the code are as follows:
 *
 * 1. Run the tao_idl compiler on the pidl file.  The command used for
 *   this is:
 *
 *   tao_idl
 *       -o orig -Gp -Gd -Ge 1 -GA -SS -Sci
 *       -Wb,export_macro=TAO_Export
 *       -Wb,pre_include="ace/pre.h"
 *       -Wb,post_include="ace/post.h"
 *       TAO_Network_Priority_Policy.pidl
 *
 * 2. The files are ready to use
 */
// ================================================================

#ifndef TAO_TAO_NETWORK_PRIORITY_POLICY_IDL
#define TAO_TAO_NETWORK_PRIORITY_POLICY_IDL

#include "tao/Policy.pidl"

#pragma prefix "tao"

module TAO
{
  typedef long DiffservCodepoint;

  enum NetworkPriorityModel
  {
    CLIENT_PROPAGATED_NETWORK_PRIORITY,
    SERVER_DECLARED_NETWORK_PRIORITY,
    NO_NETWORK_PRIORITY
  };

  const CORBA::PolicyType SERVER_NETWORK_PRIORITY_TYPE = 85;
  const CORBA::PolicyType CLIENT_NETWORK_PRIORITY_TYPE = 86;
  const CORBA::PolicyType NETWORK_PRIORITY_TYPE = 87;

  local interface NetworkPriorityPolicy : CORBA::Policy
    {
      void set_network_priority_model (in NetworkPriorityModel npm);

      void set_request_diffserv_codepoint (in DiffservCodepoint dscp);

      void set_reply_diffserv_codepoint (in DiffservCodepoint dscp);

      DiffservCodepoint get_request_diffserv_codepoint ();

      DiffservCodepoint get_reply_diffserv_codepoint ();

      readonly attribute NetworkPriorityModel network_priority_model;
      readonly attribute DiffservCodepoint request_diffserv_codepoint;
      readonly attribute DiffservCodepoint reply_diffserv_codepoint;
    };
};

#pragma prefix ""

#endif /* TAO_TAO_NETWORK_PRIORITY_POLICY_IDL */
