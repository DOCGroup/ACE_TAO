// generate_component_mpc.pl
//Author: Stoyan Paunov
//PlanGenerator.mpc, spaunov
//$Id$

project(PlanGenerator_stub): ciao_deployment_stub, ciao_race_component {
  after += Input_Adapter_stub
  sharedname = PlanGenerator_stub
  idlflags += -Sc \
              -Wb,stub_export_macro=PLANGENERATOR_STUB_Export \
              -Wb,stub_export_include=PlanGenerator_stub_export.h \
              -Wb,skel_export_macro=PLANGENERATOR_SVNT_Export \
              -Wb,skel_export_include=PlanGenerator_svnt_export.h
  dynamicflags   = PLANGENERATOR_STUB_BUILD_DLL
  libs += Input_Adapter_stub \
          Plan_Analyzer_Interface_stub

  IDL_Files {
    PlanGenerator.idl
  }

  Source_Files {
    PlanGeneratorC.cpp
  }

  Header_Files {
    PlanGeneratorC.h
  }

  Inline_Files {
    PlanGeneratorC.inl
  }
}

project(PlanGenerator_svnt) : ciao_servant_dnc, ciao_race_component {
  after += PlanGenerator_stub \
           Input_Adapter_svnt
  sharedname  = PlanGenerator_svnt
  libs    += PlanGenerator_stub \
             Input_Adapter_stub \
             Input_Adapter_svnt \
             Plan_Analyzer_Interface_stub

  idlflags  +=  -Sc \
                -Wb,export_macro=PLANGENERATOR_SVNT_Export \
                -Wb,export_include=PlanGenerator_svnt_export.h

  dynamicflags = PLANGENERATOR_SVNT_BUILD_DLL

  CIDL_Files {
    PlanGenerator.cidl
  }

  IDL_Files {
    PlanGeneratorE.idl
  }

  Source_Files {
    PlanGeneratorEC.cpp
    PlanGeneratorS.cpp
    PlanGenerator_svnt.cpp
  }

  Header_Files {
    PlanGeneratorEC.h
    PlanGeneratorS.h
    PlanGenerator_svnt.h
  }

  Inline_Files {
    PlanGeneratorEC.inl
    PlanGeneratorS.inl
    PlanGenerator_svnt.inl
  }
}


project(PlanGenerator_exec) : ciao_component_dnc, ciao_config_handlers, ciao_race_component {
  after   += PlanGenerator_svnt XSC_Config_Handlers
  sharedname = PlanGenerator_exec
  libs    += PlanGenerator_stub \
             PlanGenerator_svnt \
             Input_Adapter_stub \
             Input_Adapter_svnt \
             Plan_Analyzer_Interface_stub \
  
  idlflags  +=  -Sc \
                -Wb,export_macro=PLANGENERATOR_EXEC_Export \
                -Wb,export_include=PlanGenerator_exec_export.h
  dynamicflags   = PLANGENERATOR_EXEC_BUILD_DLL

  requires += RepositoryManager
  after += RepositoryManager
  includes += $(CIAO_ROOT)/DAnCE/RepositoryManager

  IDL_Files {
    
  }

  Source_Files {
    PlanGenerator_exec.cpp
    PCVisitorBase.cpp
    PlanGenerator.cpp
    $(CIAO_ROOT)/DAnCE/RepositoryManager/RepositoryManagerDaemonC.cpp
  }
}

project(PlanGenerator_Injector) : ciao_component_dnc, ciao_race_component, taoexe {
   exename = injector

   libs += PlanGenerator_stub

   IDL_Files {
   }
   Source_Files {
      Injector.cpp
   }
}
