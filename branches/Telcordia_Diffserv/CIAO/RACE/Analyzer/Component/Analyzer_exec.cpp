// $Id$
//
// ****              Code generated by the                 ****
// ****  Component Integrated ACE ORB (CIAO) CIDL Compiler ****
// CIAO has been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// CIDL Compiler has been developed by:
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about CIAO is available at:
//    http://www.dre.vanderbilt.edu/CIAO

#include "Analyzer_exec.h"
#include "ciao/CIAO_common.h"

namespace CIAO
{
  namespace RACE
  {
    namespace CIDL_Analyzer_Impl
    {
      //==================================================================
      // Facet Executor Implementation Class:   Analyzer_I_exec_i
      //==================================================================

      Analyzer_I_exec_i::Analyzer_I_exec_i (void)
      {
      }

      Analyzer_I_exec_i::~Analyzer_I_exec_i (void)
      {
      }

      // Operations from ::CIAO::RACE::Analyzer_I

      ::CORBA::Boolean
      Analyzer_I_exec_i::analyze (
        const ::Deployment::DeploymentPlan & /* plan */,
        const ::Deployment::PackageConfiguration & /* package */,
        ::CIAO::RACE::PlannerFlow & /* flow */
        ACE_ENV_ARG_DECL_NOT_USED)
      ACE_THROW_SPEC ((CORBA::SystemException))
      {
        // Your code here.
        return false;
      }

      //==================================================================
      // Component Executor Implementation Class:   Analyzer_exec_i
      //==================================================================

      Analyzer_exec_i::Analyzer_exec_i (void)
      {
      }

      Analyzer_exec_i::~Analyzer_exec_i (void)
      {
      }

      // Supported or inherited operations.

      // Attribute operations.

      ::CIAO::RACE::RACE_Classifications *
      Analyzer_exec_i::classification (
        ACE_ENV_SINGLE_ARG_DECL_NOT_USED)
      ACE_THROW_SPEC ((CORBA::SystemException))
      {
        // Your code here.
        return 0;
      }

      // Port operations.

      ::CIAO::RACE::CCM_Analyzer_I_ptr
      Analyzer_exec_i::get_analyzer (
        ACE_ENV_SINGLE_ARG_DECL_NOT_USED)
      ACE_THROW_SPEC ((CORBA::SystemException))
      {
        // Your code here.
        return ::CIAO::RACE::CCM_Analyzer_I::_nil ();
      }

      // Operations from Components::SessionComponent

      void
      Analyzer_exec_i::set_session_context (
        ::Components::SessionContext_ptr ctx
        ACE_ENV_ARG_DECL)
      ACE_THROW_SPEC ((
                        ::CORBA::SystemException,
                        ::Components::CCMException))
      {
        this->context_ =
        Analyzer_Context::_narrow (
          ctx
          ACE_ENV_ARG_PARAMETER);
        ACE_CHECK;

        if (this->context_ == 0)
        {
          ACE_THROW (CORBA::INTERNAL ());
        }
      }

      void
      Analyzer_exec_i::ciao_preactivate (
        ACE_ENV_SINGLE_ARG_DECL_NOT_USED)
      ACE_THROW_SPEC ((
                        ::CORBA::SystemException,
                        ::Components::CCMException))
      {
        // Your code here.
      }

      void
      Analyzer_exec_i::ciao_postactivate (
        ACE_ENV_SINGLE_ARG_DECL_NOT_USED)
      ACE_THROW_SPEC ((
                        ::CORBA::SystemException,
                        ::Components::CCMException))
      {
        // Your code here.
      }

      void
      Analyzer_exec_i::ccm_activate (
        ACE_ENV_SINGLE_ARG_DECL_NOT_USED)
      ACE_THROW_SPEC ((
                        ::CORBA::SystemException,
                        ::Components::CCMException))
      {
        // Your code here.
      }

      void
      Analyzer_exec_i::ccm_passivate (
        ACE_ENV_SINGLE_ARG_DECL_NOT_USED)
      ACE_THROW_SPEC ((
                        ::CORBA::SystemException,
                        ::Components::CCMException))
      {
        // Your code here.
      }

      void
      Analyzer_exec_i::ccm_remove (
        ACE_ENV_SINGLE_ARG_DECL_NOT_USED)
      ACE_THROW_SPEC ((
                        ::CORBA::SystemException,
                        ::Components::CCMException))
      {
        // Your code here.
      }

      //==================================================================
      // Home Executor Implementation Class:   Analyzer_Home_exec_i
      //==================================================================

      Analyzer_Home_exec_i::Analyzer_Home_exec_i (void)
      {
      }

      Analyzer_Home_exec_i::~Analyzer_Home_exec_i (void)
      {
      }

      // Supported or inherited operations.

      // Home operations.

      // Factory and finder operations.

      // Attribute operations.

      // Implicit operations.

      ::Components::EnterpriseComponent_ptr
      Analyzer_Home_exec_i::create (
        ACE_ENV_SINGLE_ARG_DECL)
      ACE_THROW_SPEC ((
                        ::CORBA::SystemException,
                        ::Components::CCMException))
      {
        ::Components::EnterpriseComponent_ptr retval =
        ::Components::EnterpriseComponent::_nil ();

        ACE_NEW_THROW_EX (
          retval,
          Analyzer_exec_i,
          CORBA::NO_MEMORY ());
        ACE_CHECK_RETURN (::Components::EnterpriseComponent::_nil ());

        return retval;
      }

      extern "C" ANALYZER_EXEC_Export ::Components::HomeExecutorBase_ptr
      create_CIAO_RACE_Analyzer_Home_Impl (void)
      {
        ::Components::HomeExecutorBase_ptr retval =
        ::Components::HomeExecutorBase::_nil ();

        ACE_NEW_RETURN (
          retval,
          Analyzer_Home_exec_i,
          ::Components::HomeExecutorBase::_nil ());

        return retval;
      }
    }
  }
}

