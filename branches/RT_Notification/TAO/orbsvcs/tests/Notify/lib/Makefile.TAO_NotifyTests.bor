# Makefile for building the TAO_NotifyTests library with Borland C++ Builder

NAME = TAO_NotifyTests

TAO_IDL = $(CORE_BINDIR)\tao_idl -g $(CORE_BINDIR)\gperf.exe

OBJFILES = \
	$(OBJDIR)\Activation_Manager.obj \
	$(OBJDIR)\Activation_ManagerC.obj \
	$(OBJDIR)\Activation_ManagerS.obj \
	$(OBJDIR)\Application_Command.obj \
	$(OBJDIR)\Command.obj \
	$(OBJDIR)\Command_Builder.obj \
	$(OBJDIR)\Command_Factory.obj \
	$(OBJDIR)\Command_Factory_T.obj \
	$(OBJDIR)\ConsumerAdmin_Command.obj \
	$(OBJDIR)\Driver.obj \
	$(OBJDIR)\EventChannel_Command.obj \
	$(OBJDIR)\Factories_Define.obj \
	$(OBJDIR)\Filter_Command.obj \
	$(OBJDIR)\LookupManager.obj \
	$(OBJDIR)\Name.obj \
	$(OBJDIR)\Notify_PushConsumer.obj \
	$(OBJDIR)\Notify_PushSupplier.obj \
	$(OBJDIR)\Notify_SequencePushConsumer.obj \
	$(OBJDIR)\Notify_SequencePushSupplier.obj \
	$(OBJDIR)\Notify_StructuredPushConsumer.obj \
	$(OBJDIR)\Notify_StructuredPushSupplier.obj \
	$(OBJDIR)\Notify_Test_Client.obj \
	$(OBJDIR)\Options_Parser.obj \
	$(OBJDIR)\Periodic_Consumer.obj \
	$(OBJDIR)\Periodic_Consumer_Command.obj \
	$(OBJDIR)\Periodic_Supplier.obj \
	$(OBJDIR)\Periodic_Supplier_Command.obj \
	$(OBJDIR)\Priority_Mapping.obj \
	$(OBJDIR)\StructuredEvent.obj \
	$(OBJDIR)\SupplierAdmin_Command.obj \
	$(OBJDIR)\Task_Stats.obj

EXTERNAL_LIBS =

LFLAGS = \
	-j..\..\..\..\tao\PortableServer\$(CONFIG_SUBDIR) -j..\..\..\..\tao\PortableServer \
	-L..\..\..\..\tao\PortableServer\$(CONFIG_SUBDIR) -L..\..\..\..\tao\PortableServer \
	-j..\..\..\..\tao\DynamicAny\$(CONFIG_SUBDIR) -j..\..\..\..\tao\DynamicAny \
	-L..\..\..\..\tao\DynamicAny\$(CONFIG_SUBDIR) -L..\..\..\..\tao\DynamicAny \
	-j..\..\..\..\tao\IORTable\$(CONFIG_SUBDIR) -j..\..\..\..\tao\IORTable \
	-L..\..\..\..\tao\IORTable\$(CONFIG_SUBDIR) -L..\..\..\..\tao\IORTable \
	-j..\..\..\..\orbsvcs\orbsvcs\ETCL\$(CONFIG_SUBDIR) -j..\..\..\..\orbsvcs\orbsvcs\ETCL \
	-L..\..\..\..\orbsvcs\orbsvcs\ETCL\$(CONFIG_SUBDIR) -L..\..\..\..\orbsvcs\orbsvcs\ETCL \
	-j..\..\..\..\orbsvcs\orbsvcs\$(CONFIG_SUBDIR) -j..\..\..\..\orbsvcs\orbsvcs \
	-L..\..\..\..\orbsvcs\orbsvcs\$(CONFIG_SUBDIR) -L..\..\..\..\orbsvcs\orbsvcs \
	-j..\..\..\..\tao\$(CONFIG_SUBDIR) -j..\..\..\..\tao \
	-L..\..\..\..\tao\$(CONFIG_SUBDIR) -L..\..\..\..\tao \
	-j..\..\..\..\..\ace\$(CONFIG_SUBDIR) -j..\..\..\..\..\ace \
	-L..\..\..\..\..\ace\$(CONFIG_SUBDIR) -L..\..\..\..\..\ace \
  -j$(CORE_BINDIR) \
  -L$(CORE_BINDIR)

LIBFILES = \
	TAO_CosNotification$(LIB_DECORATOR).lib \
	TAO_ETCL$(LIB_DECORATOR).lib \
	TAO_CosNaming$(LIB_DECORATOR).lib \
	TAO_Svc_Utils$(LIB_DECORATOR).lib \
	TAO_IORTable$(LIB_DECORATOR).lib \
	TAO_DynamicAny$(LIB_DECORATOR).lib \
	TAO_PortableServer$(LIB_DECORATOR).lib \
	TAO$(LIB_DECORATOR).lib \
	ACE$(LIB_DECORATOR).lib \
	$(EXTERNAL_LIBS)

IDLFILES = \
	$(IDLDIR)\Activation_Manager.idl

!ifdef STATIC
LIB_FLAGS = -DTAO_AS_STATIC_LIBS=1 -DACE_AS_STATIC_LIBS=1
DLL_FLAGS =
!else
LIB_FLAGS =
DLL_FLAGS = -DTAO_NOTIFY_TEST_BUILD_DLL=1
!endif

CFLAGS = \
	-I..\..\..\..\orbsvcs \
	-I..\..\..\.. \
	-I..\..\..\..\tao \
	-I..\..\..\..\.. \
	$(LIB_FLAGS) \
	$(DLL_FLAGS)

CPPDIR = .

IDLDIR = .

INCLUDES = \
	Activation_Manager.h \
	Activation_ManagerC.h \
	Activation_ManagerS.h \
	Application_Command.h \
	Command.h \
	Command_Builder.h \
	Command_Factory.h \
	Command_Factory_T.h \
	ConsumerAdmin_Command.h \
	Driver.h \
	EventChannel_Command.h \
	Factories_Define.h \
	Filter_Command.h \
	LookupManager.h \
	Name.h \
	Notify_PushConsumer.h \
	Notify_PushSupplier.h \
	Notify_SequencePushConsumer.h \
	Notify_SequencePushSupplier.h \
	Notify_StructuredPushConsumer.h \
	Notify_StructuredPushSupplier.h \
	Notify_Test_Client.h \
	Options_Parser.h \
	Periodic_Consumer.h \
	Periodic_Consumer_Command.h \
	Periodic_Supplier.h \
	Periodic_Supplier_Command.h \
	Priority_Mapping.h \
	StructuredEvent.h \
	SupplierAdmin_Command.h \
	Task_Stats.h \
	Command_Factory_T.cpp \
	Activation_ManagerC.i \
	Activation_ManagerS.i \
	Task_Stats.inl \
	Activation_Manager.idl

all: idl_src_files

BASE_BINDIR = ..\..\..\..\..\bin

!include <$(ACE_ROOT)\include\makeinclude\build_library.bor>

#
# IDL Build rules
#

idl_src_files: $(IDLFILES:.idl=C.cpp) $(IDLFILES:.idl=S.cpp)

# IDL File Directory: .
$(IDLDIR)\Activation_ManagerS.cpp $(IDLDIR)\Activation_ManagerC.cpp: $(IDLDIR)\Activation_Manager.idl
	$(TAO_IDL) -I..\..\..\.. -I$(TAO_ROOT)\orbsvcs -Ge 1 -Sc $**
