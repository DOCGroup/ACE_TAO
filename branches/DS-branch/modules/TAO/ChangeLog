Thu Feb 15 02:28:56 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ/README:
        * tests/DiffServ/test.idl:
        * tests/DiffServ/client.cpp:
        * tests/DiffServ/server.cpp:
        * tests/DiffServ/diffserv.mpc:
        
          Added a regression test for the diffserv library.
        
        * MPC/config/diffservpolicy.mpb:
        
          Added a new MPC project

Thu Feb  8 21:36:19 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/POA_Cached_Policies.h:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.h:
        * tao/DiffServPolicy/Server_Network_Priority_Policy.h:
        
          Added documentation.

Thu Feb  8 20:41:20 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.h:
        
          Added documentation in the header files.

Thu Feb  8 20:36:27 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        
          Removed the set_dscp_codepoint () method.

Thu Feb  8 18:08:40 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Root_POA.cpp:
        
          Modified the constructor in the initialization of 
          the network_priority_hook_ private variable.

Mon Feb  5 22:18:25 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Network_Priority_Hook.h:
        * tao/PortableServer/Network_Priority_Hook.cpp:
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.h:
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        
          Replaced the function get_dscp_codepoint with
          set_dscp_codepoint ().
        
          Called the function within the pre_invoke_remote_request ()
          in Default_Servant_Dispatcher.cpp.

Fri Feb  2 20:27:43 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/Network_Priority_Hook.h:
        * tao/PortableServer/Network_Priority_Hook.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Root_POA.cpp:
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.h:
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:
        
          Moved the functionality that was added under the 
          pre_invoke_remote_request () method of 
          Default_Servant_Dispatcher.cpp to the Network_Priority_Hook
          that is defined under the PortableServer library.
        
          Added helper functions in Root_POA class to return the
          registered Network_Priority_Hook.
        
          Provided the implementation for the specialized function
          in the DiffServ library.

Fri Feb  2 17:55:28 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Network_Priority_Hook.h:
        * tao/PortableServer/Network_Priority_Hook.cpp:
        
          Added this hook under POA to help POA make a call on the
          DiffServ Library to cache the SERVER_DECLARED network
          priority policy.
        
          The default implementation is provided under POA, which
          sets the DiffServ codepoint to 0.
        
          A concrete implementation of this hook is provided by the DiffServ
          library.
        
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Root_POA.cpp:
        
          Instantiated the above defined class in the ROOT_POA class
          constructor.
        
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.h:
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:
        
          Provided the concrete implementation for the network priority
          hook that gets used by the POA.

Fri Feb  2 00:38:04 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        
          Modified the pre_invoke_remote_request () to set the 
          DiffServ codepoint to be used for the reply.
        
          The policy is stored in the POA_Cached_Policies class, and
          depending upon the network priority model, the diffserv codepoint
          is obtained.

Fri Feb  2 00:00:19 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        
          Added implementations for the newly added get_dscp_codepoint ()
          method.
        
          Note that now there are implementations for both the 
          get_dscp_codepoint () methods.

Thu Feb  1 23:44:53 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/POA_Cached_Policies.h:
        * tao/PortableServer/POA_Cached_Policies.cpp:
        * tao/PortableServer/POA_Cached_Policies.inl:
        
          Added an enum for specifying the NetworkPriorityModel.
        
          Added 3 new private variables for storing the network
          priority model, the request diffserv codepoint and reply
          diffserv codepoint.
        
          Modified the constructors to initialize the above mentioned
          private variables.
        
          Added new methods to get the values of the above mentioned
          private variables.
        
          Added new methods to set the values of the above mentioned
          private variables.

Thu Feb  1 23:36:55 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
        
          Added a new function get_dscp_codepoint (). Note there are two
          functions now with the same name. One helps in the client-side
          and another helps in the server-side for setting DiffServ
          codepoints.

Thu Feb  1 23:15:32 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Root_POA.cpp:
        
          Added a new method cached_policies () to get the POA's
          cached policies.
        
          This will allow a network priority protocol hook to get access
          to the cached policies, if it can get handle to the POA.

Thu Feb  1 17:52:27 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        
          Made changes to the pre_invoke_remote_request () to get the
          DiffServ codepoint that needs to be used in the reply.
        
          If the CLIENT_PROPAGATED network priority model is used, then
          the service context entry needs to be studied in the request
          to get the reply DiffServ codepoint that needs to be used in the
          reply. This logic can be easily moved in to the DiffServ protocols
          hooks, which can read the service context and return the DiffServ
          codepoint to be used.
        
          If the SERVER_DECLARED network priority model is used, then the
          POA was actually created with the policy, and its the job of the
          POA to store the reply DiffServ codepoint as part of its cached
          policies.
        
        * tao/PortableServer/POA_Cached_Policies.cpp:
        
          Cache the network priority model policy values that was used
          to create the POA. Works with the above description.

Wed Jan 31 22:09:38 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        
          Modified the signature of get_dscp_codepoint () to be called
          from Remote_Invocation.cpp. Please see below.
        
        * tao/Remote_Invocation.cpp:
        
          Modified the send_message () with a logic to add DiffServ
          codepoint to the client server communication. PLease see the
          comments in the file in the send_message () method.

Wed Jan 31 18:55:13 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/Client_Network_Priority_Policy.cpp:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.h:
        
          Changed the signature of the constructor.
        
        * tao/DiffServPolicy/DiffServPolicy.cpp:
        * tao/DiffServPolicy/DiffServPolicy_ORBInitializer.cpp:
        
          Simplified the ORBInitializer by moving the process defines
          to the other file, which actually registers the ORBInitializer
          as well.

Wed Jan 31 18:28:33 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        
          Changed the signature of the get_dscp_codepoint ().

Wed Jan 31 18:14:30 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Connection_Handler.h:
        * tao/Connection_Hanlder.cpp:
        
          Added a new method set_dscp_codepoint () to set the DS codepoints
          in the IP packets. A default implementation is provided
          for the method.
        
        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        
          Provided the concrete implementation for the above defined
          method.

Wed Jan 31 17:40:48 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Profile.cpp:
        
          Modified the get_policies () method. The method builds a 
          PolicyList by looking at the policies in the IOR profile.
        
          If we come across a policy not supported, then we need to update
          the length of the returned PolicyList accordingly.
        
          If we do not do that, some function which uses the returned
          PolicyList could get into memory problems.

Wed Jan 31 17:33:28 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/ORB_Core.cpp:
        
          Modified the service_context_list () method to make a call
          on the DS network priority protocols hooks to add the reply
          DSCP as a service context entry.

Wed Jan 31 17:04:53 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/tao.mpc:
        
          Added the new network priority protocols hooks files for
          compilation.
        
        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
        
          Removed unnecessary includes.

Tue Jan 30 19:22:19 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.inl:
        
          Added set and get functions for the Network Priority Protocols
          Hooks.

Tue Jan 30 19:15:31 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/TAO_Internal.cpp:
        
          Made changes to do a process directive for Default Network
          Priority Protocols Hooks.

Tue Jan 30 18:54:48 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServPolicy.h:
        * tao/DiffServPolicy/DiffServPolicy.cpp:
        
          Added files for registering the DiffServ policy ORB
          initializer.

Tue Jan 30 18:37:38 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy.mpc:
        * tao/DiffServPolicy/TAO_DiffServPolicy.pc.in
        
          Added the pkgconfig files.

Tue Jan 30 18:14:00 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/Server_Network_Priority_Policy.cpp:
        * tao/DiffServPolicy/Server_Network_Priority_Policy.h:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        
          Fixed #includes for compilation errors.

Tue Jan 30 18:12:05 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy.mpc:
        
          Added the MPC file for the Diffserv Policy.

Tue Jan 30 18:09:28 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/orbconf.h:
        
          Added DiffServ policy specific CACHED policy constants.
        
        * tao/IOP_IOR.pidl:
        
          Added DiffServ policy specific service context entry.

Tue Jan 30 16:59:54 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Hooks.h:
        * tao/Default_Network_Priority_Hooks.cpp:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        
          Changed the signature of the set_dscp_codepoint () method.

Mon Jan 29 22:48:41 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
        
          Added a new protocols hooks to handle capabilities related
          to TAO DiffServ policy support.
        
          The TAO DiffServ policy library provides a protocols hooks that
          specializes this protocols hook.
        
          Default implementations are provided in the ase where the DiffServ
          policy is not used by the application.

Mon Jan 29 22:35:04 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.cpp:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.h:
        * tao/DiffServPolicy/DiffServPolicy_Export.h:
        * tao/DiffServPolicy/DiffServPolicy_Factory.cpp:
        * tao/DiffServPolicy/DiffServPolicy_Factory.h:
        * tao/DiffServPolicy/DiffServPolicy_ORBInitializer.cpp:
        * tao/DiffServPolicy/DiffServPolicy_ORBInitializer.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServPolicy.pidl:
        * tao/DiffServPolicy/Server_Network_Priority_Policy.cpp:
        * tao/DiffServPolicy/Server_Network_Priority_Policy.h:
        
          Added a new DiffServ library for creating client-side
          and server-side policies for setting DiffServ codepoints
          to be sent with client-server communications.
        
          Added an ORB_Initializer for loading the DiffServ policy
          factory, as well as registering the DiffServ protocols
          hooks.
        
          DiffServ protocols hooks are used for adding DiffServ specific
          information in the client-server request service context.

Mon Jan 29 19:27:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
          Removed not needed return statements after ACE_THROW_RETURN, fixes
          warnings with HP aCC on IA64

Mon Jan 29 19:11:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter_Registry.cpp:
        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Empty_Param_TypeCode.cpp:
        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/AnyTypeCode/PolicyA.cpp:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/WrongTransactionA.cpp:
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/Codeset/Codeset_Manager_Factory.cpp:
        * tao/Codeset/Codeset_Translator_Factory.cpp:
        * tao/Collocated_Invocation.cpp:
        * tao/CORBANAME_Parser.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.inl
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.inl
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.inl
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Request.inl
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/DynamicInterface/DII_Arguments.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/FILE_Parser.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Lite.h:
        * tao/HTTP_Parser.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Base.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor_Adapter.h:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/IORTable/IOR_Table_Impl.h:
        * tao/IORTable/Table_Adapter.cpp:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/LF_Connect_Strategy.cpp:
        * tao/LF_Connect_Strategy.h:
        * tao/LF_Event.cpp:
        * tao/LF_Event.h:
        * tao/LF_Event_Binder.h:
        * tao/LF_Follower_Auto_Adder.h:
        * tao/LF_Strategy_Complete.h:
        * tao/LocateRequest_Invocation.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/Messaging/Messaging_ORBInitializer.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/MProfile.cpp:
        * tao/Muxed_TMS.cpp:
        * tao/Null_Fragmentation_Strategy.cpp:
        * tao/Null_Fragmentation_Strategy.h:
        * tao/NVList_Adapter.h:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object_T.cpp:
        * tao/ObjectKey_Table.cpp:
        * tao/ObjectKey_Table.h:
        * tao/Objref_VarOut_T.h:
        * tao/operation_details.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.inl
        * tao/ORBInitializer_Registry.cpp:
        * tao/ORBInitializer_Registry.h:
        * tao/ORBInitializer_Registry_Adapter.h:
        * tao/Parser_Registry.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:
        * tao/PI/PI_ORBInitializer.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/PortableServer_ORBInitializer.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.h:
        * tao/Pluggable_Messaging.h:
        * tao/Pluggable_Messaging_Utils.inl
        * tao/Policy_Current_Impl.cpp:
        * tao/Policy_Current_Impl.h:
        * tao/Policy_Current_Impl.inl
        * tao/Policy_Manager.cpp:
        * tao/Policy_Manager.h:
        * tao/Policy_Manager.inl
        * tao/Policy_Set.cpp:
        * tao/Policy_Set.h:
        * tao/Policy_Validator.cpp:
        * tao/Policy_Validator.h:
        * tao/PolicyFactory_Registry_Adapter.h:
        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
        * tao/PortableServer/Local_Servant_Base.cpp:
        * tao/PortableServer/Local_Servant_Base.h:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.h:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/Profile.cpp:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Reactive_Flushing_Strategy.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/Remote_Invocation.h:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Endpoint_Utils.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_ORB_Loader.h:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Stub.h:
        * tao/RTCORBA/RT_Stub_Factory.h:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Service_Callbacks.cpp:
        * tao/Service_Context.h:
        * tao/Strategies/advanced_resource.h:
        * tao/Strategies/COIOP_Transport.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/Optimized_Connection_Endpoint_Selector.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Factory.cpp:
        * tao/Strategies/UIOP_Lite_Factory.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.h:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/Transport_Queueing_Strategies.cpp:
        * tao/TransportCurrent/Current_Impl.cpp:
        * tao/TransportCurrent/Current_Loader.cpp:
        * tao/TransportCurrent/Current_ORBInitializer.cpp:
        * tao/TransportCurrent/Current_ORBInitializer_Base.cpp:
        * tao/Utils/ORB_Manager.cpp:
        * tao/Utils/Servant_Var.inl
        * tao/Utils/Server_Main.cpp:
        * tao/Valuetype/AbstractBase_T.cpp:
        * tao/Wait_On_LF_No_Upcall.cpp:
        * tao/Wait_Strategy.h:
          Layout changes, const improvements and some cleanup of old code
          that is not needed anymore now we removed emulated exceptions

Sun Jan 28 19:59:14 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO version 1.5.6 released.

Fri Jan 26 18:56:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/Object_Adapter.cpp:

          Removed the global scope on the type used in a catch to help vc8
          figure out what to do.

Fri Jan 26 18:45:53 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Removed the extra parenthesis around a throw argument.

Fri Jan 26 18:21:17 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.cpp:

          Removed unused variable warnings from 120 files.

Fri Jan 26 16:59:47 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_check.cpp:

          Fixed incorrect error reporting of undefined struct when
          it is forward declared multiple times.

        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:

          Fixed incomplete initialization of AST_Expression class
          that hold the value of a union case label when the
          discriminator is an enum type, which was causing the
          calculation of the union's default index to be
          incorrect. Thanks to Martin Corino <mcorino@remedy.nl>
          for reporting both the above IDL compiler bugs.

        * tests/IDL_Test/IDL_Test.mpc:

          Uncommented the struct.idl file in the IDL_Files list,
          so it can now be included in the test. The bug it
          covers is the first one described above.

Fri Jan 26 13:46:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.{h,inl,cpp}:

          Removed unused variable warnings from over 200 files.

Fri Jan 26 12:12:12 UTC 2007  Johnny Willemsen  <jwillmesen@remedy.nl>

        * tao/Wait_Strategy.cpp:
          Fixed vc warning

Fri Jan 26 12:05:12 UTC 2007  Johnny Willemsen  <jwillmesen@remedy.nl>

        * tao/Makefile.am:
          Removed CSD_ORBInitializer.{h,cpp}, files where removed from the
          distribution

Thu Jan 25 23:47:24 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.cpp(destroy):

          Replaced a lost '*' in the parameter to indicate it is a pointer,

Thu Jan 25 19:56:33 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.cpp:

          Removed all of the ACE_PRINT_EXCEPTION macros.

Thu Jan 25 19:45:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.cpp
        * orbsvcs/orbsvcs/Notify/Container_T.inl
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.inl
        * orbsvcs/orbsvcs/Notify/Event_Map_T.inl
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp
        * orbsvcs/performance-tests/RTEvent/lib/RIR_Narrow.cpp
        * orbsvcs/tests/Notify/lib/Consumer_T.cpp
        * orbsvcs/tests/Notify/lib/Peer_T.cpp
        * orbsvcs/tests/Notify/lib/Supplier_T.cpp
          Replaced ACE_TYPENAME with typename

Thu Jan 25 17:39:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.{h,cpp,inl}:

          Removed the ACE exception macros from all files.  There are a few
          number of files that still use ACE_PRINT_EXCEPTION.  They will be
          dealt with in my next commit.

Thu Jan 25 13:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
          Temporarily removed struct.idl, when the IDL compiler fix is in the repo
          I will enable this file again

Wed Jan 24 18:46:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:

          Changed the last of the ACE_THROW's to real throw's.

Wed Jan 24 18:25:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/ORB_Core.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/Policy_Creator_T.h:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/PortableServer/poa_macros.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Utils/Server_Main.cpp:

          The first run of my macro removal script picked up a few things to
          remove.  I'll be running this script on the rest of the tree soon.

Wed Jan 24 14:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/struct.idl:
        * tests/IDL_Test/IDL_Test.mpc:
          Added new IDL test file, will fail to compile until Jeff commits a fix
          for the IDL compiler.

        * tests/Any/Recursive/*:
          Added some new test cases, one has been fixed already last week, the other
          one is new and stored in bugzill as 2776

        * tao/*.{h,cpp,inl}:
          Zapped all environment macros except ACE_THROW_SPEC and ACE_THROW_RETURN.

        * *.{h,cpp,inl}:
          Zapped part of the environment macros from everything except the core TAO
          libs, more follow later, first let us stabilize this commit. The goal is to
          get rid of all environment macros

Wed Jan 24 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Instead of Environment.h generate Basic_Types.h as include

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
          Generate throw instead of ACE_THROW

Mon Jan 22 23:14:56 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO version 1.5.5 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
