Tue Jan 30 18:14:00 UTC 2007  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/Server_Network_Priority_Policy.cpp:
          tao/DiffServPolicy/Server_Network_Priority_Policy.h:
          tao/DiffServPolicy/Client_Network_Priority_Policy.h:
          tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        
          Fixed #includes for compilation errors.

Tue Jan 30 18:12:05 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy.mpc:
        
          Added the MPC file for the Diffserv Policy.

Tue Jan 30 18:09:28 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/orbconf.h:
        
          Added DiffServ policy specific CACHED policy constants.
        
          tao/IOP_IOR.pidl:
        
          Added DiffServ policy specific service context entry.

Tue Jan 30 16:59:54 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
          tao/Default_Network_Priority_Hooks.h:
          tao/Default_Network_Priority_Hooks.cpp:
          tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
          tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
        
          Changed the signature of the set_dscp_codepoint () method.

Mon Jan 29 22:48:41 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
          tao/Default_Network_Priority_Protocols_Hooks.h:
          tao/Default_Network_Priority_Protocols_Hooks.cpp:
        
          Added a new protocols hooks to handle capabilities related
          to TAO DiffServ policy support.
        
          The TAO DiffServ policy library provides a protocols hooks that
          specializes this protocols hook.
        
          Default implementations are provided in the ase where the DiffServ
          policy is not used by the application.

Mon Jan 29 22:35:04 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy:
          tao/DiffServPolicy/Client_Network_Priority_Policy.cpp:
          tao/DiffServPolicy/Client_Network_Priority_Policy.h:
          tao/DiffServPolicy/DiffServPolicy_Export.h:
          tao/DiffServPolicy/DiffServPolicy_Factory.cpp:
          tao/DiffServPolicy/DiffServPolicy_Factory.h:
          tao/DiffServPolicy/DiffServPolicy_ORBInitializer.cpp:
          tao/DiffServPolicy/DiffServPolicy_ORBInitializer.h:
          tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
          tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
          tao/DiffServPolicy/DiffServPolicy.pidl:
          tao/DiffServPolicy/Server_Network_Priority_Policy.cpp:
          tao/DiffServPolicy/Server_Network_Priority_Policy.h:
        
          Added a new DiffServ library for creating client-side
          and server-side policies for setting DiffServ codepoints
          to be sent with client-server communications.
        
          Added an ORB_Initializer for loading the DiffServ policy
          factory, as well as registering the DiffServ protocols
          hooks.
        
          DiffServ protocols hooks are used for adding DiffServ specific
          information in the client-server request service context.

Mon Jan 29 19:27:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
          Removed not needed return statements after ACE_THROW_RETURN, fixes
          warnings with HP aCC on IA64

Mon Jan 29 19:11:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter_Registry.cpp:
        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Empty_Param_TypeCode.cpp:
        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/AnyTypeCode/PolicyA.cpp:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/WrongTransactionA.cpp:
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/Codeset/Codeset_Manager_Factory.cpp:
        * tao/Codeset/Codeset_Translator_Factory.cpp:
        * tao/Collocated_Invocation.cpp:
        * tao/CORBANAME_Parser.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.inl
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.inl
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.inl
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Request.inl
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/DynamicInterface/DII_Arguments.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/FILE_Parser.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Lite.h:
        * tao/HTTP_Parser.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Base.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor_Adapter.h:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/IORTable/IOR_Table_Impl.h:
        * tao/IORTable/Table_Adapter.cpp:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/LF_Connect_Strategy.cpp:
        * tao/LF_Connect_Strategy.h:
        * tao/LF_Event.cpp:
        * tao/LF_Event.h:
        * tao/LF_Event_Binder.h:
        * tao/LF_Follower_Auto_Adder.h:
        * tao/LF_Strategy_Complete.h:
        * tao/LocateRequest_Invocation.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/Messaging/Messaging_ORBInitializer.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/MProfile.cpp:
        * tao/Muxed_TMS.cpp:
        * tao/Null_Fragmentation_Strategy.cpp:
        * tao/Null_Fragmentation_Strategy.h:
        * tao/NVList_Adapter.h:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object_T.cpp:
        * tao/ObjectKey_Table.cpp:
        * tao/ObjectKey_Table.h:
        * tao/Objref_VarOut_T.h:
        * tao/operation_details.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.inl
        * tao/ORBInitializer_Registry.cpp:
        * tao/ORBInitializer_Registry.h:
        * tao/ORBInitializer_Registry_Adapter.h:
        * tao/Parser_Registry.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:
        * tao/PI/PI_ORBInitializer.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/PortableServer_ORBInitializer.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.h:
        * tao/Pluggable_Messaging.h:
        * tao/Pluggable_Messaging_Utils.inl
        * tao/Policy_Current_Impl.cpp:
        * tao/Policy_Current_Impl.h:
        * tao/Policy_Current_Impl.inl
        * tao/Policy_Manager.cpp:
        * tao/Policy_Manager.h:
        * tao/Policy_Manager.inl
        * tao/Policy_Set.cpp:
        * tao/Policy_Set.h:
        * tao/Policy_Validator.cpp:
        * tao/Policy_Validator.h:
        * tao/PolicyFactory_Registry_Adapter.h:
        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
        * tao/PortableServer/Local_Servant_Base.cpp:
        * tao/PortableServer/Local_Servant_Base.h:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.h:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/Profile.cpp:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Reactive_Flushing_Strategy.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/Remote_Invocation.h:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Endpoint_Utils.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_ORB_Loader.h:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Stub.h:
        * tao/RTCORBA/RT_Stub_Factory.h:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Service_Callbacks.cpp:
        * tao/Service_Context.h:
        * tao/Strategies/advanced_resource.h:
        * tao/Strategies/COIOP_Transport.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/Optimized_Connection_Endpoint_Selector.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Factory.cpp:
        * tao/Strategies/UIOP_Lite_Factory.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.h:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/Transport_Queueing_Strategies.cpp:
        * tao/TransportCurrent/Current_Impl.cpp:
        * tao/TransportCurrent/Current_Loader.cpp:
        * tao/TransportCurrent/Current_ORBInitializer.cpp:
        * tao/TransportCurrent/Current_ORBInitializer_Base.cpp:
        * tao/Utils/ORB_Manager.cpp:
        * tao/Utils/Servant_Var.inl
        * tao/Utils/Server_Main.cpp:
        * tao/Valuetype/AbstractBase_T.cpp:
        * tao/Wait_On_LF_No_Upcall.cpp:
        * tao/Wait_Strategy.h:
          Layout changes, const improvements and some cleanup of old code
          that is not needed anymore now we removed emulated exceptions

Sun Jan 28 19:59:14 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO version 1.5.6 released.

Fri Jan 26 18:56:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/Object_Adapter.cpp:

          Removed the global scope on the type used in a catch to help vc8
          figure out what to do.

Fri Jan 26 18:45:53 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Removed the extra parenthesis around a throw argument.

Fri Jan 26 18:21:17 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.cpp:

          Removed unused variable warnings from 120 files.

Fri Jan 26 16:59:47 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_check.cpp:

          Fixed incorrect error reporting of undefined struct when
          it is forward declared multiple times.

        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:

          Fixed incomplete initialization of AST_Expression class
          that hold the value of a union case label when the
          discriminator is an enum type, which was causing the
          calculation of the union's default index to be
          incorrect. Thanks to Martin Corino <mcorino@remedy.nl>
          for reporting both the above IDL compiler bugs.

        * tests/IDL_Test/IDL_Test.mpc:

          Uncommented the struct.idl file in the IDL_Files list,
          so it can now be included in the test. The bug it
          covers is the first one described above.

Fri Jan 26 13:46:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.{h,inl,cpp}:

          Removed unused variable warnings from over 200 files.

Fri Jan 26 12:12:12 UTC 2007  Johnny Willemsen  <jwillmesen@remedy.nl>

        * tao/Wait_Strategy.cpp:
          Fixed vc warning

Fri Jan 26 12:05:12 UTC 2007  Johnny Willemsen  <jwillmesen@remedy.nl>

        * tao/Makefile.am:
          Removed CSD_ORBInitializer.{h,cpp}, files where removed from the
          distribution

Thu Jan 25 23:47:24 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.cpp(destroy):

          Replaced a lost '*' in the parameter to indicate it is a pointer,

Thu Jan 25 19:56:33 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.cpp:

          Removed all of the ACE_PRINT_EXCEPTION macros.

Thu Jan 25 19:45:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.cpp
        * orbsvcs/orbsvcs/Notify/Container_T.inl
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.inl
        * orbsvcs/orbsvcs/Notify/Event_Map_T.inl
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp
        * orbsvcs/performance-tests/RTEvent/lib/RIR_Narrow.cpp
        * orbsvcs/tests/Notify/lib/Consumer_T.cpp
        * orbsvcs/tests/Notify/lib/Peer_T.cpp
        * orbsvcs/tests/Notify/lib/Supplier_T.cpp
          Replaced ACE_TYPENAME with typename

Thu Jan 25 17:39:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.{h,cpp,inl}:

          Removed the ACE exception macros from all files.  There are a few
          number of files that still use ACE_PRINT_EXCEPTION.  They will be
          dealt with in my next commit.

Thu Jan 25 13:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
          Temporarily removed struct.idl, when the IDL compiler fix is in the repo
          I will enable this file again

Wed Jan 24 18:46:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:

          Changed the last of the ACE_THROW's to real throw's.

Wed Jan 24 18:25:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/ORB_Core.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/Policy_Creator_T.h:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/PortableServer/poa_macros.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Utils/Server_Main.cpp:

          The first run of my macro removal script picked up a few things to
          remove.  I'll be running this script on the rest of the tree soon.

Wed Jan 24 14:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/struct.idl:
        * tests/IDL_Test/IDL_Test.mpc:
          Added new IDL test file, will fail to compile until Jeff commits a fix
          for the IDL compiler.

        * tests/Any/Recursive/*:
          Added some new test cases, one has been fixed already last week, the other
          one is new and stored in bugzill as 2776

        * tao/*.{h,cpp,inl}:
          Zapped all environment macros except ACE_THROW_SPEC and ACE_THROW_RETURN.

        * *.{h,cpp,inl}:
          Zapped part of the environment macros from everything except the core TAO
          libs, more follow later, first let us stabilize this commit. The goal is to
          get rid of all environment macros

Wed Jan 24 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Instead of Environment.h generate Basic_Types.h as include

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
          Generate throw instead of ACE_THROW

Mon Jan 22 23:14:56 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO version 1.5.5 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
