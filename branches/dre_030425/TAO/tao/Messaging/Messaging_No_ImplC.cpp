// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:314


#include "Messaging_No_ImplC.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "Messaging_No_ImplC.i"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_Priority[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5072),
  ACE_NTOHL (0x696f7269),
  ACE_NTOHL (0x74793a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Priority:1.0
    9,
  ACE_NTOHL (0x5072696f),
  ACE_NTOHL (0x72697479),
  ACE_NTOHL (0x0),  // name = Priority
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_Priority (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_Priority),
    (char *) &_oc_Messaging_Priority,
    0,
    sizeof (Messaging::Priority)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_Priority,
    &_tc_TAO_tc_Messaging_Priority
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RebindMode[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  37,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x62696e64),
  ACE_NTOHL (0x4d6f6465),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/RebindMode:1.0
    11,
  ACE_NTOHL (0x52656269),
  ACE_NTOHL (0x6e644d6f),
  ACE_NTOHL (0x64650000),  // name = RebindMode
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RebindMode (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_RebindMode),
    (char *) &_oc_Messaging_RebindMode,
    0,
    sizeof (Messaging::RebindMode)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RebindMode,
    &_tc_TAO_tc_Messaging_RebindMode
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RoutingType[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f526f),
  ACE_NTOHL (0x7574696e),
  ACE_NTOHL (0x67547970),
  ACE_NTOHL (0x653a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/RoutingType:1.0
    12,
  ACE_NTOHL (0x526f7574),
  ACE_NTOHL (0x696e6754),
  ACE_NTOHL (0x79706500),  // name = RoutingType
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingType (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_RoutingType),
    (char *) &_oc_Messaging_RoutingType,
    0,
    sizeof (Messaging::RoutingType)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RoutingType,
    &_tc_TAO_tc_Messaging_RoutingType
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_Ordering[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f4f72),
  ACE_NTOHL (0x64657269),
  ACE_NTOHL (0x6e673a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Ordering:1.0
    9,
  ACE_NTOHL (0x4f726465),
  ACE_NTOHL (0x72696e67),
  ACE_NTOHL (0x0),  // name = Ordering
    CORBA::tk_ushort,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_Ordering (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_Ordering),
    (char *) &_oc_Messaging_Ordering,
    0,
    sizeof (Messaging::Ordering)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_Ordering,
    &_tc_TAO_tc_Messaging_Ordering
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::RebindPolicy::_tao_class_id = 0;

Messaging::RebindPolicy_ptr
Messaging::tao_RebindPolicy_life::tao_duplicate (
    Messaging::RebindPolicy_ptr p
  )
{
  return Messaging::RebindPolicy::_duplicate (p);
}

void
Messaging::tao_RebindPolicy_life::tao_release (
    Messaging::RebindPolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::RebindPolicy_ptr
Messaging::tao_RebindPolicy_life::tao_nil (
    void
  )
{
  return Messaging::RebindPolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_RebindPolicy_life::tao_marshal (
    Messaging::RebindPolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::RebindPolicy_ptr
Messaging::tao_RebindPolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::RebindPolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_RebindPolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::RebindPolicy **tmp =
    ACE_static_cast (Messaging::RebindPolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::RebindPolicy,
        Messaging::tao_RebindPolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::RebindPolicy,
        Messaging::tao_RebindPolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RebindPolicy, \
        Messaging::tao_RebindPolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RebindPolicy, \
        Messaging::tao_RebindPolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::RebindPolicy::RebindPolicy (void)
{}

Messaging::RebindPolicy::~RebindPolicy (void)
{}

void
Messaging::RebindPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RebindPolicy *tmp = ACE_static_cast (RebindPolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::RebindPolicy_ptr
Messaging::RebindPolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return RebindPolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::RebindPolicy_ptr
Messaging::RebindPolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return RebindPolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          RebindPolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &RebindPolicy::_tao_class_id
                )
            )
        );
}

Messaging::RebindPolicy_ptr
Messaging::RebindPolicy::_duplicate (RebindPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::RebindPolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, RebindPolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::RebindPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RebindPolicy:1.0";
}

CORBA::Boolean
Messaging::RebindPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RebindPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  39,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x62696e64),
  ACE_NTOHL (0x506f6c69),
  ACE_NTOHL (0x63793a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RebindPolicy:1.0
    13,
  ACE_NTOHL (0x52656269),
  ACE_NTOHL (0x6e64506f),
  ACE_NTOHL (0x6c696379),
  ACE_NTOHL (0x0),  // name = RebindPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RebindPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RebindPolicy),
    (char *) &_oc_Messaging_RebindPolicy,
    0,
    sizeof (Messaging::RebindPolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RebindPolicy,
    &_tc_TAO_tc_Messaging_RebindPolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_PriorityRange[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5072),
  ACE_NTOHL (0x696f7269),
  ACE_NTOHL (0x74795261),
  ACE_NTOHL (0x6e67653a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/PriorityRange:1.0
    14,
  ACE_NTOHL (0x5072696f),
  ACE_NTOHL (0x72697479),
  ACE_NTOHL (0x52616e67),
  ACE_NTOHL (0x65000000),  // name = PriorityRange
  2, // member count
    4,
  ACE_NTOHL (0x6d696e00),  // name = min
    CORBA::tk_alias, // typecode kind for typedefs
  64, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x4d657373),
    ACE_NTOHL (0x6167696e),
    ACE_NTOHL (0x672f5072),
    ACE_NTOHL (0x696f7269),
    ACE_NTOHL (0x74793a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Priority:1.0
        9,
    ACE_NTOHL (0x5072696f),
    ACE_NTOHL (0x72697479),
    ACE_NTOHL (0x0),  // name = Priority
        CORBA::tk_short,


  4,
  ACE_NTOHL (0x6d617800),  // name = max
    0xffffffff, // indirection
  0xffffffac, // negative offset (-84)
};

static CORBA::TypeCode _tc_TAO_tc_Messaging_PriorityRange (
    CORBA::tk_struct,
    sizeof (_oc_Messaging_PriorityRange),
    (char *) &_oc_Messaging_PriorityRange,
    0,
    sizeof (Messaging::PriorityRange)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_PriorityRange,
    &_tc_TAO_tc_Messaging_PriorityRange
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_cs.cpp:66

void Messaging::PriorityRange::_tao_any_destructor (void *_tao_void_pointer)
{
  PriorityRange *tmp = ACE_static_cast (PriorityRange*, _tao_void_pointer);
  delete tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:274

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

template class
  TAO_Fixed_Var_T<
      Messaging::PriorityRange
    >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
  TAO_Fixed_Var_T< \
      Messaging::PriorityRange \
    >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::RequestPriorityPolicy::_tao_class_id = 0;

Messaging::RequestPriorityPolicy_ptr
Messaging::tao_RequestPriorityPolicy_life::tao_duplicate (
    Messaging::RequestPriorityPolicy_ptr p
  )
{
  return Messaging::RequestPriorityPolicy::_duplicate (p);
}

void
Messaging::tao_RequestPriorityPolicy_life::tao_release (
    Messaging::RequestPriorityPolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::RequestPriorityPolicy_ptr
Messaging::tao_RequestPriorityPolicy_life::tao_nil (
    void
  )
{
  return Messaging::RequestPriorityPolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_RequestPriorityPolicy_life::tao_marshal (
    Messaging::RequestPriorityPolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::RequestPriorityPolicy_ptr
Messaging::tao_RequestPriorityPolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::RequestPriorityPolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_RequestPriorityPolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::RequestPriorityPolicy **tmp =
    ACE_static_cast (Messaging::RequestPriorityPolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::RequestPriorityPolicy,
        Messaging::tao_RequestPriorityPolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::RequestPriorityPolicy,
        Messaging::tao_RequestPriorityPolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RequestPriorityPolicy, \
        Messaging::tao_RequestPriorityPolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RequestPriorityPolicy, \
        Messaging::tao_RequestPriorityPolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::RequestPriorityPolicy::RequestPriorityPolicy (void)
{}

Messaging::RequestPriorityPolicy::~RequestPriorityPolicy (void)
{}

void
Messaging::RequestPriorityPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RequestPriorityPolicy *tmp = ACE_static_cast (RequestPriorityPolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::RequestPriorityPolicy_ptr
Messaging::RequestPriorityPolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return RequestPriorityPolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::RequestPriorityPolicy_ptr
Messaging::RequestPriorityPolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return RequestPriorityPolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          RequestPriorityPolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &RequestPriorityPolicy::_tao_class_id
                )
            )
        );
}

Messaging::RequestPriorityPolicy_ptr
Messaging::RequestPriorityPolicy::_duplicate (RequestPriorityPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::RequestPriorityPolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, RequestPriorityPolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::RequestPriorityPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RequestPriorityPolicy:1.0";
}

CORBA::Boolean
Messaging::RequestPriorityPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RequestPriorityPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x71756573),
  ACE_NTOHL (0x74507269),
  ACE_NTOHL (0x6f726974),
  ACE_NTOHL (0x79506f6c),
  ACE_NTOHL (0x6963793a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/RequestPriorityPolicy:1.0
    22,
  ACE_NTOHL (0x52657175),
  ACE_NTOHL (0x65737450),
  ACE_NTOHL (0x72696f72),
  ACE_NTOHL (0x69747950),
  ACE_NTOHL (0x6f6c6963),
  ACE_NTOHL (0x79000000),  // name = RequestPriorityPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestPriorityPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestPriorityPolicy),
    (char *) &_oc_Messaging_RequestPriorityPolicy,
    0,
    sizeof (Messaging::RequestPriorityPolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RequestPriorityPolicy,
    &_tc_TAO_tc_Messaging_RequestPriorityPolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::ReplyPriorityPolicy::_tao_class_id = 0;

Messaging::ReplyPriorityPolicy_ptr
Messaging::tao_ReplyPriorityPolicy_life::tao_duplicate (
    Messaging::ReplyPriorityPolicy_ptr p
  )
{
  return Messaging::ReplyPriorityPolicy::_duplicate (p);
}

void
Messaging::tao_ReplyPriorityPolicy_life::tao_release (
    Messaging::ReplyPriorityPolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::ReplyPriorityPolicy_ptr
Messaging::tao_ReplyPriorityPolicy_life::tao_nil (
    void
  )
{
  return Messaging::ReplyPriorityPolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_ReplyPriorityPolicy_life::tao_marshal (
    Messaging::ReplyPriorityPolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::ReplyPriorityPolicy_ptr
Messaging::tao_ReplyPriorityPolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::ReplyPriorityPolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_ReplyPriorityPolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::ReplyPriorityPolicy **tmp =
    ACE_static_cast (Messaging::ReplyPriorityPolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::ReplyPriorityPolicy,
        Messaging::tao_ReplyPriorityPolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::ReplyPriorityPolicy,
        Messaging::tao_ReplyPriorityPolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::ReplyPriorityPolicy, \
        Messaging::tao_ReplyPriorityPolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::ReplyPriorityPolicy, \
        Messaging::tao_ReplyPriorityPolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::ReplyPriorityPolicy::ReplyPriorityPolicy (void)
{}

Messaging::ReplyPriorityPolicy::~ReplyPriorityPolicy (void)
{}

void
Messaging::ReplyPriorityPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  ReplyPriorityPolicy *tmp = ACE_static_cast (ReplyPriorityPolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::ReplyPriorityPolicy_ptr
Messaging::ReplyPriorityPolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return ReplyPriorityPolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::ReplyPriorityPolicy_ptr
Messaging::ReplyPriorityPolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return ReplyPriorityPolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          ReplyPriorityPolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &ReplyPriorityPolicy::_tao_class_id
                )
            )
        );
}

Messaging::ReplyPriorityPolicy_ptr
Messaging::ReplyPriorityPolicy::_duplicate (ReplyPriorityPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::ReplyPriorityPolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, ReplyPriorityPolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::ReplyPriorityPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/ReplyPriorityPolicy:1.0";
}

CORBA::Boolean
Messaging::ReplyPriorityPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_ReplyPriorityPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  46,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x706c7950),
  ACE_NTOHL (0x72696f72),
  ACE_NTOHL (0x69747950),
  ACE_NTOHL (0x6f6c6963),
  ACE_NTOHL (0x793a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/ReplyPriorityPolicy:1.0
    20,
  ACE_NTOHL (0x5265706c),
  ACE_NTOHL (0x79507269),
  ACE_NTOHL (0x6f726974),
  ACE_NTOHL (0x79506f6c),
  ACE_NTOHL (0x69637900),  // name = ReplyPriorityPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyPriorityPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyPriorityPolicy),
    (char *) &_oc_Messaging_ReplyPriorityPolicy,
    0,
    sizeof (Messaging::ReplyPriorityPolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_ReplyPriorityPolicy,
    &_tc_TAO_tc_Messaging_ReplyPriorityPolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::RequestStartTimePolicy::_tao_class_id = 0;

Messaging::RequestStartTimePolicy_ptr
Messaging::tao_RequestStartTimePolicy_life::tao_duplicate (
    Messaging::RequestStartTimePolicy_ptr p
  )
{
  return Messaging::RequestStartTimePolicy::_duplicate (p);
}

void
Messaging::tao_RequestStartTimePolicy_life::tao_release (
    Messaging::RequestStartTimePolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::RequestStartTimePolicy_ptr
Messaging::tao_RequestStartTimePolicy_life::tao_nil (
    void
  )
{
  return Messaging::RequestStartTimePolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_RequestStartTimePolicy_life::tao_marshal (
    Messaging::RequestStartTimePolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::RequestStartTimePolicy_ptr
Messaging::tao_RequestStartTimePolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::RequestStartTimePolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_RequestStartTimePolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::RequestStartTimePolicy **tmp =
    ACE_static_cast (Messaging::RequestStartTimePolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::RequestStartTimePolicy,
        Messaging::tao_RequestStartTimePolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::RequestStartTimePolicy,
        Messaging::tao_RequestStartTimePolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RequestStartTimePolicy, \
        Messaging::tao_RequestStartTimePolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RequestStartTimePolicy, \
        Messaging::tao_RequestStartTimePolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::RequestStartTimePolicy::RequestStartTimePolicy (void)
{}

Messaging::RequestStartTimePolicy::~RequestStartTimePolicy (void)
{}

void
Messaging::RequestStartTimePolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RequestStartTimePolicy *tmp = ACE_static_cast (RequestStartTimePolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::RequestStartTimePolicy_ptr
Messaging::RequestStartTimePolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return RequestStartTimePolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::RequestStartTimePolicy_ptr
Messaging::RequestStartTimePolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return RequestStartTimePolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          RequestStartTimePolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &RequestStartTimePolicy::_tao_class_id
                )
            )
        );
}

Messaging::RequestStartTimePolicy_ptr
Messaging::RequestStartTimePolicy::_duplicate (RequestStartTimePolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::RequestStartTimePolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, RequestStartTimePolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::RequestStartTimePolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RequestStartTimePolicy:1.0";
}

CORBA::Boolean
Messaging::RequestStartTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RequestStartTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  49,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x71756573),
  ACE_NTOHL (0x74537461),
  ACE_NTOHL (0x72745469),
  ACE_NTOHL (0x6d65506f),
  ACE_NTOHL (0x6c696379),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/RequestStartTimePolicy:1.0
    23,
  ACE_NTOHL (0x52657175),
  ACE_NTOHL (0x65737453),
  ACE_NTOHL (0x74617274),
  ACE_NTOHL (0x54696d65),
  ACE_NTOHL (0x506f6c69),
  ACE_NTOHL (0x63790000),  // name = RequestStartTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestStartTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestStartTimePolicy),
    (char *) &_oc_Messaging_RequestStartTimePolicy,
    0,
    sizeof (Messaging::RequestStartTimePolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RequestStartTimePolicy,
    &_tc_TAO_tc_Messaging_RequestStartTimePolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::RequestEndTimePolicy::_tao_class_id = 0;

Messaging::RequestEndTimePolicy_ptr
Messaging::tao_RequestEndTimePolicy_life::tao_duplicate (
    Messaging::RequestEndTimePolicy_ptr p
  )
{
  return Messaging::RequestEndTimePolicy::_duplicate (p);
}

void
Messaging::tao_RequestEndTimePolicy_life::tao_release (
    Messaging::RequestEndTimePolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::RequestEndTimePolicy_ptr
Messaging::tao_RequestEndTimePolicy_life::tao_nil (
    void
  )
{
  return Messaging::RequestEndTimePolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_RequestEndTimePolicy_life::tao_marshal (
    Messaging::RequestEndTimePolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::RequestEndTimePolicy_ptr
Messaging::tao_RequestEndTimePolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::RequestEndTimePolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_RequestEndTimePolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::RequestEndTimePolicy **tmp =
    ACE_static_cast (Messaging::RequestEndTimePolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::RequestEndTimePolicy,
        Messaging::tao_RequestEndTimePolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::RequestEndTimePolicy,
        Messaging::tao_RequestEndTimePolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RequestEndTimePolicy, \
        Messaging::tao_RequestEndTimePolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RequestEndTimePolicy, \
        Messaging::tao_RequestEndTimePolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::RequestEndTimePolicy::RequestEndTimePolicy (void)
{}

Messaging::RequestEndTimePolicy::~RequestEndTimePolicy (void)
{}

void
Messaging::RequestEndTimePolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RequestEndTimePolicy *tmp = ACE_static_cast (RequestEndTimePolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::RequestEndTimePolicy_ptr
Messaging::RequestEndTimePolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return RequestEndTimePolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::RequestEndTimePolicy_ptr
Messaging::RequestEndTimePolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return RequestEndTimePolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          RequestEndTimePolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &RequestEndTimePolicy::_tao_class_id
                )
            )
        );
}

Messaging::RequestEndTimePolicy_ptr
Messaging::RequestEndTimePolicy::_duplicate (RequestEndTimePolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::RequestEndTimePolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, RequestEndTimePolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::RequestEndTimePolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RequestEndTimePolicy:1.0";
}

CORBA::Boolean
Messaging::RequestEndTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RequestEndTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  47,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x71756573),
  ACE_NTOHL (0x74456e64),
  ACE_NTOHL (0x54696d65),
  ACE_NTOHL (0x506f6c69),
  ACE_NTOHL (0x63793a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RequestEndTimePolicy:1.0
    21,
  ACE_NTOHL (0x52657175),
  ACE_NTOHL (0x65737445),
  ACE_NTOHL (0x6e645469),
  ACE_NTOHL (0x6d65506f),
  ACE_NTOHL (0x6c696379),
  ACE_NTOHL (0x0),  // name = RequestEndTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestEndTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestEndTimePolicy),
    (char *) &_oc_Messaging_RequestEndTimePolicy,
    0,
    sizeof (Messaging::RequestEndTimePolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RequestEndTimePolicy,
    &_tc_TAO_tc_Messaging_RequestEndTimePolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::ReplyStartTimePolicy::_tao_class_id = 0;

Messaging::ReplyStartTimePolicy_ptr
Messaging::tao_ReplyStartTimePolicy_life::tao_duplicate (
    Messaging::ReplyStartTimePolicy_ptr p
  )
{
  return Messaging::ReplyStartTimePolicy::_duplicate (p);
}

void
Messaging::tao_ReplyStartTimePolicy_life::tao_release (
    Messaging::ReplyStartTimePolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::ReplyStartTimePolicy_ptr
Messaging::tao_ReplyStartTimePolicy_life::tao_nil (
    void
  )
{
  return Messaging::ReplyStartTimePolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_ReplyStartTimePolicy_life::tao_marshal (
    Messaging::ReplyStartTimePolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::ReplyStartTimePolicy_ptr
Messaging::tao_ReplyStartTimePolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::ReplyStartTimePolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_ReplyStartTimePolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::ReplyStartTimePolicy **tmp =
    ACE_static_cast (Messaging::ReplyStartTimePolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::ReplyStartTimePolicy,
        Messaging::tao_ReplyStartTimePolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::ReplyStartTimePolicy,
        Messaging::tao_ReplyStartTimePolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::ReplyStartTimePolicy, \
        Messaging::tao_ReplyStartTimePolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::ReplyStartTimePolicy, \
        Messaging::tao_ReplyStartTimePolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::ReplyStartTimePolicy::ReplyStartTimePolicy (void)
{}

Messaging::ReplyStartTimePolicy::~ReplyStartTimePolicy (void)
{}

void
Messaging::ReplyStartTimePolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  ReplyStartTimePolicy *tmp = ACE_static_cast (ReplyStartTimePolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::ReplyStartTimePolicy_ptr
Messaging::ReplyStartTimePolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return ReplyStartTimePolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::ReplyStartTimePolicy_ptr
Messaging::ReplyStartTimePolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return ReplyStartTimePolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          ReplyStartTimePolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &ReplyStartTimePolicy::_tao_class_id
                )
            )
        );
}

Messaging::ReplyStartTimePolicy_ptr
Messaging::ReplyStartTimePolicy::_duplicate (ReplyStartTimePolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::ReplyStartTimePolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, ReplyStartTimePolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::ReplyStartTimePolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/ReplyStartTimePolicy:1.0";
}

CORBA::Boolean
Messaging::ReplyStartTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_ReplyStartTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  47,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x706c7953),
  ACE_NTOHL (0x74617274),
  ACE_NTOHL (0x54696d65),
  ACE_NTOHL (0x506f6c69),
  ACE_NTOHL (0x63793a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/ReplyStartTimePolicy:1.0
    21,
  ACE_NTOHL (0x5265706c),
  ACE_NTOHL (0x79537461),
  ACE_NTOHL (0x72745469),
  ACE_NTOHL (0x6d65506f),
  ACE_NTOHL (0x6c696379),
  ACE_NTOHL (0x0),  // name = ReplyStartTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyStartTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyStartTimePolicy),
    (char *) &_oc_Messaging_ReplyStartTimePolicy,
    0,
    sizeof (Messaging::ReplyStartTimePolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_ReplyStartTimePolicy,
    &_tc_TAO_tc_Messaging_ReplyStartTimePolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::ReplyEndTimePolicy::_tao_class_id = 0;

Messaging::ReplyEndTimePolicy_ptr
Messaging::tao_ReplyEndTimePolicy_life::tao_duplicate (
    Messaging::ReplyEndTimePolicy_ptr p
  )
{
  return Messaging::ReplyEndTimePolicy::_duplicate (p);
}

void
Messaging::tao_ReplyEndTimePolicy_life::tao_release (
    Messaging::ReplyEndTimePolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::ReplyEndTimePolicy_ptr
Messaging::tao_ReplyEndTimePolicy_life::tao_nil (
    void
  )
{
  return Messaging::ReplyEndTimePolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_ReplyEndTimePolicy_life::tao_marshal (
    Messaging::ReplyEndTimePolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::ReplyEndTimePolicy_ptr
Messaging::tao_ReplyEndTimePolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::ReplyEndTimePolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_ReplyEndTimePolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::ReplyEndTimePolicy **tmp =
    ACE_static_cast (Messaging::ReplyEndTimePolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::ReplyEndTimePolicy,
        Messaging::tao_ReplyEndTimePolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::ReplyEndTimePolicy,
        Messaging::tao_ReplyEndTimePolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::ReplyEndTimePolicy, \
        Messaging::tao_ReplyEndTimePolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::ReplyEndTimePolicy, \
        Messaging::tao_ReplyEndTimePolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::ReplyEndTimePolicy::ReplyEndTimePolicy (void)
{}

Messaging::ReplyEndTimePolicy::~ReplyEndTimePolicy (void)
{}

void
Messaging::ReplyEndTimePolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  ReplyEndTimePolicy *tmp = ACE_static_cast (ReplyEndTimePolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::ReplyEndTimePolicy_ptr
Messaging::ReplyEndTimePolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return ReplyEndTimePolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::ReplyEndTimePolicy_ptr
Messaging::ReplyEndTimePolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return ReplyEndTimePolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          ReplyEndTimePolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &ReplyEndTimePolicy::_tao_class_id
                )
            )
        );
}

Messaging::ReplyEndTimePolicy_ptr
Messaging::ReplyEndTimePolicy::_duplicate (ReplyEndTimePolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::ReplyEndTimePolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, ReplyEndTimePolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::ReplyEndTimePolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/ReplyEndTimePolicy:1.0";
}

CORBA::Boolean
Messaging::ReplyEndTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_ReplyEndTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  45,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x706c7945),
  ACE_NTOHL (0x6e645469),
  ACE_NTOHL (0x6d65506f),
  ACE_NTOHL (0x6c696379),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/ReplyEndTimePolicy:1.0
    19,
  ACE_NTOHL (0x5265706c),
  ACE_NTOHL (0x79456e64),
  ACE_NTOHL (0x54696d65),
  ACE_NTOHL (0x506f6c69),
  ACE_NTOHL (0x63790000),  // name = ReplyEndTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyEndTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyEndTimePolicy),
    (char *) &_oc_Messaging_ReplyEndTimePolicy,
    0,
    sizeof (Messaging::ReplyEndTimePolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_ReplyEndTimePolicy,
    &_tc_TAO_tc_Messaging_ReplyEndTimePolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::RelativeRequestTimeoutPolicy::_tao_class_id = 0;

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::tao_RelativeRequestTimeoutPolicy_life::tao_duplicate (
    Messaging::RelativeRequestTimeoutPolicy_ptr p
  )
{
  return Messaging::RelativeRequestTimeoutPolicy::_duplicate (p);
}

void
Messaging::tao_RelativeRequestTimeoutPolicy_life::tao_release (
    Messaging::RelativeRequestTimeoutPolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::tao_RelativeRequestTimeoutPolicy_life::tao_nil (
    void
  )
{
  return Messaging::RelativeRequestTimeoutPolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_RelativeRequestTimeoutPolicy_life::tao_marshal (
    Messaging::RelativeRequestTimeoutPolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::tao_RelativeRequestTimeoutPolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::RelativeRequestTimeoutPolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_RelativeRequestTimeoutPolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::RelativeRequestTimeoutPolicy **tmp =
    ACE_static_cast (Messaging::RelativeRequestTimeoutPolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::RelativeRequestTimeoutPolicy,
        Messaging::tao_RelativeRequestTimeoutPolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::RelativeRequestTimeoutPolicy,
        Messaging::tao_RelativeRequestTimeoutPolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RelativeRequestTimeoutPolicy, \
        Messaging::tao_RelativeRequestTimeoutPolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RelativeRequestTimeoutPolicy, \
        Messaging::tao_RelativeRequestTimeoutPolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::RelativeRequestTimeoutPolicy::RelativeRequestTimeoutPolicy (void)
{}

Messaging::RelativeRequestTimeoutPolicy::~RelativeRequestTimeoutPolicy (void)
{}

void
Messaging::RelativeRequestTimeoutPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RelativeRequestTimeoutPolicy *tmp = ACE_static_cast (RelativeRequestTimeoutPolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::RelativeRequestTimeoutPolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return RelativeRequestTimeoutPolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::RelativeRequestTimeoutPolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return RelativeRequestTimeoutPolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          RelativeRequestTimeoutPolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &RelativeRequestTimeoutPolicy::_tao_class_id
                )
            )
        );
}

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::RelativeRequestTimeoutPolicy::_duplicate (RelativeRequestTimeoutPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::RelativeRequestTimeoutPolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, RelativeRequestTimeoutPolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::RelativeRequestTimeoutPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RelativeRequestTimeoutPolicy:1.0";
}

CORBA::Boolean
Messaging::RelativeRequestTimeoutPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RelativeRequestTimeoutPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  55,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5265),
  ACE_NTOHL (0x6c617469),
  ACE_NTOHL (0x76655265),
  ACE_NTOHL (0x71756573),
  ACE_NTOHL (0x7454696d),
  ACE_NTOHL (0x656f7574),
  ACE_NTOHL (0x506f6c69),
  ACE_NTOHL (0x63793a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RelativeRequestTimeoutPolicy:1.0
    29,
  ACE_NTOHL (0x52656c61),
  ACE_NTOHL (0x74697665),
  ACE_NTOHL (0x52657175),
  ACE_NTOHL (0x65737454),
  ACE_NTOHL (0x696d656f),
  ACE_NTOHL (0x7574506f),
  ACE_NTOHL (0x6c696379),
  ACE_NTOHL (0x0),  // name = RelativeRequestTimeoutPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RelativeRequestTimeoutPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RelativeRequestTimeoutPolicy),
    (char *) &_oc_Messaging_RelativeRequestTimeoutPolicy,
    0,
    sizeof (Messaging::RelativeRequestTimeoutPolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RelativeRequestTimeoutPolicy,
    &_tc_TAO_tc_Messaging_RelativeRequestTimeoutPolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RoutingTypeRange[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f526f),
  ACE_NTOHL (0x7574696e),
  ACE_NTOHL (0x67547970),
  ACE_NTOHL (0x6552616e),
  ACE_NTOHL (0x67653a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RoutingTypeRange:1.0
    17,
  ACE_NTOHL (0x526f7574),
  ACE_NTOHL (0x696e6754),
  ACE_NTOHL (0x79706552),
  ACE_NTOHL (0x616e6765),
  ACE_NTOHL (0x0),  // name = RoutingTypeRange
  2, // member count
    4,
  ACE_NTOHL (0x6d696e00),  // name = min
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    38,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x4d657373),
    ACE_NTOHL (0x6167696e),
    ACE_NTOHL (0x672f526f),
    ACE_NTOHL (0x7574696e),
    ACE_NTOHL (0x67547970),
    ACE_NTOHL (0x653a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/RoutingType:1.0
        12,
    ACE_NTOHL (0x526f7574),
    ACE_NTOHL (0x696e6754),
    ACE_NTOHL (0x79706500),  // name = RoutingType
        CORBA::tk_short,


  4,
  ACE_NTOHL (0x6d617800),  // name = max
    0xffffffff, // indirection
  0xffffffa8, // negative offset (-88)
};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingTypeRange (
    CORBA::tk_struct,
    sizeof (_oc_Messaging_RoutingTypeRange),
    (char *) &_oc_Messaging_RoutingTypeRange,
    0,
    sizeof (Messaging::RoutingTypeRange)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RoutingTypeRange,
    &_tc_TAO_tc_Messaging_RoutingTypeRange
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_cs.cpp:66

void Messaging::RoutingTypeRange::_tao_any_destructor (void *_tao_void_pointer)
{
  RoutingTypeRange *tmp = ACE_static_cast (RoutingTypeRange*, _tao_void_pointer);
  delete tmp;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:274

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

template class
  TAO_Fixed_Var_T<
      Messaging::RoutingTypeRange
    >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
  TAO_Fixed_Var_T< \
      Messaging::RoutingTypeRange \
    >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::RoutingPolicy::_tao_class_id = 0;

Messaging::RoutingPolicy_ptr
Messaging::tao_RoutingPolicy_life::tao_duplicate (
    Messaging::RoutingPolicy_ptr p
  )
{
  return Messaging::RoutingPolicy::_duplicate (p);
}

void
Messaging::tao_RoutingPolicy_life::tao_release (
    Messaging::RoutingPolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::RoutingPolicy_ptr
Messaging::tao_RoutingPolicy_life::tao_nil (
    void
  )
{
  return Messaging::RoutingPolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_RoutingPolicy_life::tao_marshal (
    Messaging::RoutingPolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::RoutingPolicy_ptr
Messaging::tao_RoutingPolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::RoutingPolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_RoutingPolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::RoutingPolicy **tmp =
    ACE_static_cast (Messaging::RoutingPolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::RoutingPolicy,
        Messaging::tao_RoutingPolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::RoutingPolicy,
        Messaging::tao_RoutingPolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RoutingPolicy, \
        Messaging::tao_RoutingPolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RoutingPolicy, \
        Messaging::tao_RoutingPolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::RoutingPolicy::RoutingPolicy (void)
{}

Messaging::RoutingPolicy::~RoutingPolicy (void)
{}

void
Messaging::RoutingPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RoutingPolicy *tmp = ACE_static_cast (RoutingPolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::RoutingPolicy_ptr
Messaging::RoutingPolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return RoutingPolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::RoutingPolicy_ptr
Messaging::RoutingPolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return RoutingPolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          RoutingPolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &RoutingPolicy::_tao_class_id
                )
            )
        );
}

Messaging::RoutingPolicy_ptr
Messaging::RoutingPolicy::_duplicate (RoutingPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::RoutingPolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, RoutingPolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::RoutingPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RoutingPolicy:1.0";
}

CORBA::Boolean
Messaging::RoutingPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RoutingPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f526f),
  ACE_NTOHL (0x7574696e),
  ACE_NTOHL (0x67506f6c),
  ACE_NTOHL (0x6963793a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/RoutingPolicy:1.0
    14,
  ACE_NTOHL (0x526f7574),
  ACE_NTOHL (0x696e6750),
  ACE_NTOHL (0x6f6c6963),
  ACE_NTOHL (0x79000000),  // name = RoutingPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RoutingPolicy),
    (char *) &_oc_Messaging_RoutingPolicy,
    0,
    sizeof (Messaging::RoutingPolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_RoutingPolicy,
    &_tc_TAO_tc_Messaging_RoutingPolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::MaxHopsPolicy::_tao_class_id = 0;

Messaging::MaxHopsPolicy_ptr
Messaging::tao_MaxHopsPolicy_life::tao_duplicate (
    Messaging::MaxHopsPolicy_ptr p
  )
{
  return Messaging::MaxHopsPolicy::_duplicate (p);
}

void
Messaging::tao_MaxHopsPolicy_life::tao_release (
    Messaging::MaxHopsPolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::MaxHopsPolicy_ptr
Messaging::tao_MaxHopsPolicy_life::tao_nil (
    void
  )
{
  return Messaging::MaxHopsPolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_MaxHopsPolicy_life::tao_marshal (
    Messaging::MaxHopsPolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::MaxHopsPolicy_ptr
Messaging::tao_MaxHopsPolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::MaxHopsPolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_MaxHopsPolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::MaxHopsPolicy **tmp =
    ACE_static_cast (Messaging::MaxHopsPolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::MaxHopsPolicy,
        Messaging::tao_MaxHopsPolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::MaxHopsPolicy,
        Messaging::tao_MaxHopsPolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::MaxHopsPolicy, \
        Messaging::tao_MaxHopsPolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::MaxHopsPolicy, \
        Messaging::tao_MaxHopsPolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::MaxHopsPolicy::MaxHopsPolicy (void)
{}

Messaging::MaxHopsPolicy::~MaxHopsPolicy (void)
{}

void
Messaging::MaxHopsPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  MaxHopsPolicy *tmp = ACE_static_cast (MaxHopsPolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::MaxHopsPolicy_ptr
Messaging::MaxHopsPolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return MaxHopsPolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::MaxHopsPolicy_ptr
Messaging::MaxHopsPolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return MaxHopsPolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          MaxHopsPolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &MaxHopsPolicy::_tao_class_id
                )
            )
        );
}

Messaging::MaxHopsPolicy_ptr
Messaging::MaxHopsPolicy::_duplicate (MaxHopsPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::MaxHopsPolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, MaxHopsPolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::MaxHopsPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/MaxHopsPolicy:1.0";
}

CORBA::Boolean
Messaging::MaxHopsPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_MaxHopsPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f4d61),
  ACE_NTOHL (0x78486f70),
  ACE_NTOHL (0x73506f6c),
  ACE_NTOHL (0x6963793a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/MaxHopsPolicy:1.0
    14,
  ACE_NTOHL (0x4d617848),
  ACE_NTOHL (0x6f707350),
  ACE_NTOHL (0x6f6c6963),
  ACE_NTOHL (0x79000000),  // name = MaxHopsPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_MaxHopsPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_MaxHopsPolicy),
    (char *) &_oc_Messaging_MaxHopsPolicy,
    0,
    sizeof (Messaging::MaxHopsPolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_MaxHopsPolicy,
    &_tc_TAO_tc_Messaging_MaxHopsPolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:61

int Messaging::QueueOrderPolicy::_tao_class_id = 0;

Messaging::QueueOrderPolicy_ptr
Messaging::tao_QueueOrderPolicy_life::tao_duplicate (
    Messaging::QueueOrderPolicy_ptr p
  )
{
  return Messaging::QueueOrderPolicy::_duplicate (p);
}

void
Messaging::tao_QueueOrderPolicy_life::tao_release (
    Messaging::QueueOrderPolicy_ptr p
  )
{
  CORBA::release (p);
}

Messaging::QueueOrderPolicy_ptr
Messaging::tao_QueueOrderPolicy_life::tao_nil (
    void
  )
{
  return Messaging::QueueOrderPolicy::_nil ();
}

CORBA::Boolean
Messaging::tao_QueueOrderPolicy_life::tao_marshal (
    Messaging::QueueOrderPolicy_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

Messaging::QueueOrderPolicy_ptr
Messaging::tao_QueueOrderPolicy_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return Messaging::QueueOrderPolicy::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
Messaging::tao_QueueOrderPolicy_cast::tao_upcast (
    void *src
  )
{
  Messaging::QueueOrderPolicy **tmp =
    ACE_static_cast (Messaging::QueueOrderPolicy **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        Messaging::QueueOrderPolicy,
        Messaging::tao_QueueOrderPolicy_life
      >;
  template class
    TAO_Objref_Out_T<
        Messaging::QueueOrderPolicy,
        Messaging::tao_QueueOrderPolicy_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::QueueOrderPolicy, \
        Messaging::tao_QueueOrderPolicy_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::QueueOrderPolicy, \
        Messaging::tao_QueueOrderPolicy_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:232

Messaging::QueueOrderPolicy::QueueOrderPolicy (void)
{}

Messaging::QueueOrderPolicy::~QueueOrderPolicy (void)
{}

void
Messaging::QueueOrderPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  QueueOrderPolicy *tmp = ACE_static_cast (QueueOrderPolicy *, _tao_void_pointer);
  CORBA::release (tmp);
}

Messaging::QueueOrderPolicy_ptr
Messaging::QueueOrderPolicy::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return QueueOrderPolicy::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

Messaging::QueueOrderPolicy_ptr
Messaging::QueueOrderPolicy::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return QueueOrderPolicy::_nil ();
    }

  return
      ACE_reinterpret_cast (
          QueueOrderPolicy_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptr_arith_t,
                  &QueueOrderPolicy::_tao_class_id
                )
            )
        );
}

Messaging::QueueOrderPolicy_ptr
Messaging::QueueOrderPolicy::_duplicate (QueueOrderPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

void *Messaging::QueueOrderPolicy::_tao_QueryInterface (ptr_arith_t type)
{
  void *retv = 0;

  if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &ACE_NESTED_CLASS (::Messaging, QueueOrderPolicy)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptr_arith_t,
              &::CORBA::Policy::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                CORBA::Policy_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptr_arith_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }

  if (retv != 0)
    {
      this->_add_ref ();
    }

  return retv;
}

const char* Messaging::QueueOrderPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/QueueOrderPolicy:1.0";
}

CORBA::Boolean
Messaging::QueueOrderPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_QueueOrderPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x4d657373),
  ACE_NTOHL (0x6167696e),
  ACE_NTOHL (0x672f5175),
  ACE_NTOHL (0x6575654f),
  ACE_NTOHL (0x72646572),
  ACE_NTOHL (0x506f6c69),
  ACE_NTOHL (0x63793a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/QueueOrderPolicy:1.0
    17,
  ACE_NTOHL (0x51756575),
  ACE_NTOHL (0x654f7264),
  ACE_NTOHL (0x6572506f),
  ACE_NTOHL (0x6c696379),
  ACE_NTOHL (0x0),  // name = QueueOrderPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_QueueOrderPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_QueueOrderPolicy),
    (char *) &_oc_Messaging_QueueOrderPolicy,
    0,
    sizeof (Messaging::QueueOrderPolicy)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (Messaging)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_QueueOrderPolicy,
    &_tc_TAO_tc_Messaging_QueueOrderPolicy
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr _tao_elem
  )
{
  Messaging::RebindPolicy_ptr _tao_objptr =
    Messaging::RebindPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RebindPolicy>::insert (
      _tao_any,
      Messaging::RebindPolicy::_tao_any_destructor,
      Messaging::_tc_RebindPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RebindPolicy>::extract (
        _tao_any,
        Messaging::RebindPolicy::_tao_any_destructor,
        Messaging::_tc_RebindPolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Messaging::RebindPolicy,Messaging::RebindPolicy_var,Messaging::tao_RebindPolicy_life>;
  template class TAO::Any_Impl_T<Messaging::RebindPolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::RebindPolicy, Messaging::RebindPolicy_var>
# pragma instantiate TAO::Any_Impl_T<Messaging::RebindPolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Messaging::PriorityRange &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::insert_copy (
      _tao_any,
      Messaging::PriorityRange::_tao_any_destructor,
      Messaging::_tc_PriorityRange,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Messaging::PriorityRange *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::insert (
      _tao_any,
      Messaging::PriorityRange::_tao_any_destructor,
      Messaging::_tc_PriorityRange,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::PriorityRange *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const Messaging::PriorityRange *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Messaging::PriorityRange *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::extract (
        _tao_any,
        Messaging::PriorityRange::_tao_any_destructor,
        Messaging::_tc_PriorityRange,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO::Any_Dual_Impl_T<Messaging::PriorityRange>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO::Any_Dual_Impl_T<Messaging::PriorityRange>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr _tao_elem
  )
{
  Messaging::RequestPriorityPolicy_ptr _tao_objptr =
    Messaging::RequestPriorityPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::insert (
      _tao_any,
      Messaging::RequestPriorityPolicy::_tao_any_destructor,
      Messaging::_tc_RequestPriorityPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::extract (
        _tao_any,
        Messaging::RequestPriorityPolicy::_tao_any_destructor,
        Messaging::_tc_RequestPriorityPolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Messaging::RequestPriorityPolicy,Messaging::RequestPriorityPolicy_var,Messaging::tao_RequestPriorityPolicy_life>;
  template class TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::RequestPriorityPolicy, Messaging::RequestPriorityPolicy_var,Messaging::tao_RequestPriorityPolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr _tao_elem
  )
{
  Messaging::ReplyPriorityPolicy_ptr _tao_objptr =
    Messaging::ReplyPriorityPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::insert (
      _tao_any,
      Messaging::ReplyPriorityPolicy::_tao_any_destructor,
      Messaging::_tc_ReplyPriorityPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::extract (
        _tao_any,
        Messaging::ReplyPriorityPolicy::_tao_any_destructor,
        Messaging::_tc_ReplyPriorityPolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Messaging::ReplyPriorityPolicy,Messaging::ReplyPriorityPolicy_var,Messaging::tao_ReplyPriorityPolicy_life>;
  template class TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::ReplyPriorityPolicy, Messaging::ReplyPriorityPolicy_var,Messaging::tao_ReplyPriorityPolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr _tao_elem
  )
{
  Messaging::RequestStartTimePolicy_ptr _tao_objptr =
    Messaging::RequestStartTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::insert (
      _tao_any,
      Messaging::RequestStartTimePolicy::_tao_any_destructor,
      Messaging::_tc_RequestStartTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::extract (
        _tao_any,
        Messaging::RequestStartTimePolicy::_tao_any_destructor,
        Messaging::_tc_RequestStartTimePolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
// template class TAO_Object_Manager<Messaging::RequestStartTimePolicy,Messaging::RequestStartTimePolicy_var,Messaging::tao_ReplyStartTimePolicy_life>;
template class TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
// # pragma instantiate TAO_Object_Manager<Messaging::RequestStartTimePolicy, Messaging::RequestStartTimePolicy_var,Messaging::tao_ReplyStartTimePolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr _tao_elem
  )
{
  Messaging::RequestEndTimePolicy_ptr _tao_objptr =
    Messaging::RequestEndTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::insert (
      _tao_any,
      Messaging::RequestEndTimePolicy::_tao_any_destructor,
      Messaging::_tc_RequestEndTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::extract (
        _tao_any,
        Messaging::RequestEndTimePolicy::_tao_any_destructor,
        Messaging::_tc_RequestEndTimePolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
template class TAO_Object_Manager<Messaging::RequestEndTimePolicy,Messaging::RequestEndTimePolicy_var,Messaging::tao_RequestEndTimePolicy_life>;
template class TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::RequestEndTimePolicy, Messaging::RequestEndTimePolicy_var,Messaging::tao_RequestEndTimePolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr _tao_elem
  )
{
  Messaging::ReplyStartTimePolicy_ptr _tao_objptr =
    Messaging::ReplyStartTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::insert (
      _tao_any,
      Messaging::ReplyStartTimePolicy::_tao_any_destructor,
      Messaging::_tc_ReplyStartTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::extract (
        _tao_any,
        Messaging::ReplyStartTimePolicy::_tao_any_destructor,
        Messaging::_tc_ReplyStartTimePolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
template class TAO_Object_Manager<Messaging::ReplyStartTimePolicy,Messaging::ReplyStartTimePolicy_var,Messaging::tao_ReplyStartTimePolicy_life>;
  template class TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::ReplyStartTimePolicy, Messaging::ReplyStartTimePolicy_var,Messaging::tao_ReplyStartTimePolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr _tao_elem
  )
{
  Messaging::ReplyEndTimePolicy_ptr _tao_objptr =
    Messaging::ReplyEndTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::insert (
      _tao_any,
      Messaging::ReplyEndTimePolicy::_tao_any_destructor,
      Messaging::_tc_ReplyEndTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::extract (
        _tao_any,
        Messaging::ReplyEndTimePolicy::_tao_any_destructor,
        Messaging::_tc_ReplyEndTimePolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
template class TAO_Object_Manager<Messaging::ReplyEndTimePolicy,Messaging::ReplyEndTimePolicy_var,Messaging::tao_ReplyEndTimePolicy_life>;
template class TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::ReplyEndTimePolicy, Messaging::ReplyEndTimePolicy_var,Messaging::tao_ReplyEndTimePolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr _tao_elem
  )
{
  Messaging::RelativeRequestTimeoutPolicy_ptr _tao_objptr =
    Messaging::RelativeRequestTimeoutPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::insert (
      _tao_any,
      Messaging::RelativeRequestTimeoutPolicy::_tao_any_destructor,
      Messaging::_tc_RelativeRequestTimeoutPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::extract (
        _tao_any,
        Messaging::RelativeRequestTimeoutPolicy::_tao_any_destructor,
        Messaging::_tc_RelativeRequestTimeoutPolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
template class TAO_Object_Manager<Messaging::RelativeRequestTimeoutPolicy,Messaging::RelativeRequestTimeoutPolicy_var,Messaging::tao_RelativeRequestTimeoutPolicy_life>;
template class TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::RelativeRequestTimeoutPolicy, Messaging::RelativeRequestTimeoutPolicy_var,Messaging::tao_RelativeRequestTimeoutPolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Messaging::RoutingTypeRange &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::insert_copy (
      _tao_any,
      Messaging::RoutingTypeRange::_tao_any_destructor,
      Messaging::_tc_RoutingTypeRange,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingTypeRange *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::insert (
      _tao_any,
      Messaging::RoutingTypeRange::_tao_any_destructor,
      Messaging::_tc_RoutingTypeRange,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RoutingTypeRange *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const Messaging::RoutingTypeRange *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Messaging::RoutingTypeRange *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::extract (
        _tao_any,
        Messaging::RoutingTypeRange::_tao_any_destructor,
        Messaging::_tc_RoutingTypeRange,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr _tao_elem
  )
{
  Messaging::RoutingPolicy_ptr _tao_objptr =
    Messaging::RoutingPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RoutingPolicy>::insert (
      _tao_any,
      Messaging::RoutingPolicy::_tao_any_destructor,
      Messaging::_tc_RoutingPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RoutingPolicy>::extract (
        _tao_any,
        Messaging::RoutingPolicy::_tao_any_destructor,
        Messaging::_tc_RoutingPolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
template class TAO_Object_Manager<Messaging::RoutingPolicy,Messaging::RoutingPolicy_var,Messaging::tao_RoutingPolicy_life>;
template class TAO::Any_Impl_T<Messaging::RoutingPolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::RoutingPolicy, Messaging::RoutingPolicy_var,Messaging::tao_RoutingPolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::RoutingPolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr _tao_elem
  )
{
  Messaging::MaxHopsPolicy_ptr _tao_objptr =
    Messaging::MaxHopsPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::insert (
      _tao_any,
      Messaging::MaxHopsPolicy::_tao_any_destructor,
      Messaging::_tc_MaxHopsPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::extract (
        _tao_any,
        Messaging::MaxHopsPolicy::_tao_any_destructor,
        Messaging::_tc_MaxHopsPolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO_Object_Manager<Messaging::MaxHopsPolicy,Messaging::MaxHopsPolicy_var,Messaging::tao_MaxHopsPolicy_life>;
  template class TAO::Any_Impl_T<Messaging::MaxHopsPolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::MaxHopsPolicy, Messaging::MaxHopsPolicy_var,Messaging::tao_MaxHopsPolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::MaxHopsPolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:52

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr _tao_elem
  )
{
  Messaging::QueueOrderPolicy_ptr _tao_objptr =
    Messaging::QueueOrderPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::insert (
      _tao_any,
      Messaging::QueueOrderPolicy::_tao_any_destructor,
      Messaging::_tc_QueueOrderPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::extract (
        _tao_any,
        Messaging::QueueOrderPolicy::_tao_any_destructor,
        Messaging::_tc_QueueOrderPolicy,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
template class TAO_Object_Manager<Messaging::QueueOrderPolicy,Messaging::QueueOrderPolicy_var,Messaging::tao_QueueOrderPolicy_life>;
template class TAO::Any_Impl_T<Messaging::QueueOrderPolicy>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO_Object_Manager<Messaging::QueueOrderPolicy, Messaging::QueueOrderPolicy_var,Messaging::tao_QueueOrderPolicy_life>
# pragma instantiate TAO::Any_Impl_T<Messaging::QueueOrderPolicy>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
