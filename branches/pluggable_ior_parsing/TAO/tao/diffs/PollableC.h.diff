--- orig/PollableC.h	Fri Apr 28 12:20:09 2000
+++ PollableC.h	Fri Apr 28 12:02:10 2000
@@ -7,20 +7,22 @@
 // Information about TAO is available at:
 //                 http://www.cs.wustl.edu/~schmidt/TAO.html
 
-#ifndef _TAO_IDL_ORIG_POLLABLEC_H_
-#define _TAO_IDL_ORIG_POLLABLEC_H_
+#ifndef _TAO_IDL_TMP_POLLABLEC_H_
+#define _TAO_IDL_TMP_POLLABLEC_H_
+#include "ace/pre.h"
 
-#include "tao/corba.h"
+#include "tao/corbafwd.h"
+
+#if (TAO_HAS_AMI_POLLER == 1)
 
-#if defined (ACE_HAS_MINIMUM_IOSTREAMH_INCLUSION)
-#include "ace/streams.h"
-#endif /* ACE_HAS_MINIMUM_IOSTREAMH_INCLUSION */
+#include "tao/Object.h"
+#include "tao/Exception.h"
+#include "tao/CDR.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "tao/corbafwd.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -61,14 +63,14 @@
   CORBA_PollableSet_var (CORBA_PollableSet_ptr);
   CORBA_PollableSet_var (const CORBA_PollableSet_var &); // copy constructor
   ~CORBA_PollableSet_var (void); // destructor
-  
+
   CORBA_PollableSet_var &operator= (CORBA_PollableSet_ptr);
   CORBA_PollableSet_var &operator= (const CORBA_PollableSet_var &);
   CORBA_PollableSet_ptr operator-> (void) const;
-  
+
   operator const CORBA_PollableSet_ptr &() const;
   operator CORBA_PollableSet_ptr &();
-  // in, inout, out, _retn 
+  // in, inout, out, _retn
   CORBA_PollableSet_ptr in (void) const;
   CORBA_PollableSet_ptr &inout (void);
   CORBA_PollableSet_ptr &out (void);
@@ -98,7 +100,7 @@
   operator CORBA_PollableSet_ptr &();
   CORBA_PollableSet_ptr &ptr (void);
   CORBA_PollableSet_ptr operator-> (void);
-  
+
 private:
   CORBA_PollableSet_ptr &ptr_;
 };
@@ -126,14 +128,14 @@
   CORBA_Pollable_var (CORBA_Pollable_ptr);
   CORBA_Pollable_var (const CORBA_Pollable_var &); // copy constructor
   ~CORBA_Pollable_var (void); // destructor
-  
+
   CORBA_Pollable_var &operator= (CORBA_Pollable_ptr);
   CORBA_Pollable_var &operator= (const CORBA_Pollable_var &);
   CORBA_Pollable_ptr operator-> (void) const;
-  
+
   operator const CORBA_Pollable_ptr &() const;
   operator CORBA_Pollable_ptr &();
-  // in, inout, out, _retn 
+  // in, inout, out, _retn
   CORBA_Pollable_ptr in (void) const;
   CORBA_Pollable_ptr &inout (void);
   CORBA_Pollable_ptr &out (void);
@@ -163,7 +165,7 @@
   operator CORBA_Pollable_ptr &();
   CORBA_Pollable_ptr &ptr (void);
   CORBA_Pollable_ptr operator-> (void);
-  
+
 private:
   CORBA_Pollable_ptr &ptr_;
 };
@@ -187,12 +189,12 @@
   static CORBA_Pollable_ptr _duplicate (CORBA_Pollable_ptr obj);
   static CORBA_Pollable_ptr _narrow (
       CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   static CORBA_Pollable_ptr _unchecked_narrow (
       CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   static CORBA_Pollable_ptr _nil (void)
@@ -202,7 +204,7 @@
 
   virtual CORBA::Boolean is_ready (
       CORBA::ULong timeout,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -210,7 +212,7 @@
     )) = 0;
 
   virtual CORBA_PollableSet_ptr create_pollable_set (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -218,7 +220,7 @@
     )) = 0;
 
   virtual void *_tao_QueryInterface (ptr_arith_t type);
-  
+
   virtual const char* _interface_repository_id (void) const;
 
 protected:
@@ -252,14 +254,14 @@
   CORBA_DIIPollable_var (CORBA_DIIPollable_ptr);
   CORBA_DIIPollable_var (const CORBA_DIIPollable_var &); // copy constructor
   ~CORBA_DIIPollable_var (void); // destructor
-  
+
   CORBA_DIIPollable_var &operator= (CORBA_DIIPollable_ptr);
   CORBA_DIIPollable_var &operator= (const CORBA_DIIPollable_var &);
   CORBA_DIIPollable_ptr operator-> (void) const;
-  
+
   operator const CORBA_DIIPollable_ptr &() const;
   operator CORBA_DIIPollable_ptr &();
-  // in, inout, out, _retn 
+  // in, inout, out, _retn
   CORBA_DIIPollable_ptr in (void) const;
   CORBA_DIIPollable_ptr &inout (void);
   CORBA_DIIPollable_ptr &out (void);
@@ -289,7 +291,7 @@
   operator CORBA_DIIPollable_ptr &();
   CORBA_DIIPollable_ptr &ptr (void);
   CORBA_DIIPollable_ptr operator-> (void);
-  
+
 private:
   CORBA_DIIPollable_ptr &ptr_;
 };
@@ -313,12 +315,12 @@
   static CORBA_DIIPollable_ptr _duplicate (CORBA_DIIPollable_ptr obj);
   static CORBA_DIIPollable_ptr _narrow (
       CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   static CORBA_DIIPollable_ptr _unchecked_narrow (
       CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   static CORBA_DIIPollable_ptr _nil (void)
@@ -327,7 +329,7 @@
     }
 
   virtual void *_tao_QueryInterface (ptr_arith_t type);
-  
+
   virtual const char* _interface_repository_id (void) const;
 
 protected:
@@ -361,14 +363,14 @@
   CORBA_PollableSet_var (CORBA_PollableSet_ptr);
   CORBA_PollableSet_var (const CORBA_PollableSet_var &); // copy constructor
   ~CORBA_PollableSet_var (void); // destructor
-  
+
   CORBA_PollableSet_var &operator= (CORBA_PollableSet_ptr);
   CORBA_PollableSet_var &operator= (const CORBA_PollableSet_var &);
   CORBA_PollableSet_ptr operator-> (void) const;
-  
+
   operator const CORBA_PollableSet_ptr &() const;
   operator CORBA_PollableSet_ptr &();
-  // in, inout, out, _retn 
+  // in, inout, out, _retn
   CORBA_PollableSet_ptr in (void) const;
   CORBA_PollableSet_ptr &inout (void);
   CORBA_PollableSet_ptr &out (void);
@@ -398,7 +400,7 @@
   operator CORBA_PollableSet_ptr &();
   CORBA_PollableSet_ptr &ptr (void);
   CORBA_PollableSet_ptr operator-> (void);
-  
+
 private:
   CORBA_PollableSet_ptr &ptr_;
 };
@@ -422,12 +424,12 @@
   static CORBA_PollableSet_ptr _duplicate (CORBA_PollableSet_ptr obj);
   static CORBA_PollableSet_ptr _narrow (
       CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   static CORBA_PollableSet_ptr _unchecked_narrow (
       CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   static CORBA_PollableSet_ptr _nil (void)
@@ -506,7 +508,7 @@
 #endif /* end #if !defined */
 
 virtual CORBA_DIIPollable_ptr create_dii_pollable (
-    CORBA::Environment &ACE_TRY_ENV = 
+    CORBA::Environment &ACE_TRY_ENV =
       TAO_default_environment ()
   )
   ACE_THROW_SPEC ((
@@ -515,7 +517,7 @@
 
 virtual void add_pollable (
     CORBA_Pollable_ptr potential,
-    CORBA::Environment &ACE_TRY_ENV = 
+    CORBA::Environment &ACE_TRY_ENV =
       TAO_default_environment ()
   )
   ACE_THROW_SPEC ((
@@ -524,7 +526,7 @@
 
 virtual CORBA_Pollable_ptr poll (
     CORBA::ULong timeout,
-    CORBA::Environment &ACE_TRY_ENV = 
+    CORBA::Environment &ACE_TRY_ENV =
       TAO_default_environment ()
   )
   ACE_THROW_SPEC ((
@@ -534,7 +536,7 @@
 
 virtual void remove (
     CORBA_Pollable_ptr potential,
-    CORBA::Environment &ACE_TRY_ENV = 
+    CORBA::Environment &ACE_TRY_ENV =
       TAO_default_environment ()
   )
   ACE_THROW_SPEC ((
@@ -543,7 +545,7 @@
   )) = 0;
 
 virtual CORBA::UShort number_left (
-    CORBA::Environment &ACE_TRY_ENV = 
+    CORBA::Environment &ACE_TRY_ENV =
       TAO_default_environment ()
   )
   ACE_THROW_SPEC ((
@@ -580,4 +582,7 @@
 #pragma warning(pop)
 #endif /* _MSC_VER */
 
+#endif /* TAO_HAS_AMI_POLLER == 1 */
+
+#include "ace/post.h"
 #endif /* ifndef */
