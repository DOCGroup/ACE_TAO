--- orig/PollableC.cpp	Tue Apr 24 23:49:07 2001
+++ PollableC.cpp	Tue Apr 24 13:44:41 2001
@@ -1,6 +1,6 @@
-// -*- C++ -*-
+// -*- C++ -*- $Id$ */
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -21,63 +21,17 @@
 
 #include "PollableC.h"
 
+#if (TAO_HAS_AMI_POLLER == 1)
+
 #include "tao/Stub.h"
 #include "tao/Invocation.h"
-#include "tao/ClientRequestInfo.h"
-#if TAO_HAS_INTERCEPTORS == 1
-#include "tao/RequestInfo_Util.h"
-#endif  /* TAO_HAS_INTERCEPTORS == 1 */
-
-#if defined (__BORLANDC__)
-#pragma option -w-rvl -w-rch -w-ccc -w-aus
-#endif /* __BORLANDC__ */
+#include "tao/Any.h"
 
 #if !defined (__ACE_INLINE__)
 #include "PollableC.i"
 #endif /* !defined INLINE */
 
-CORBA_Pollable_ptr
-tao_CORBA_Pollable_duplicate (
-    CORBA_Pollable_ptr p
-  )
-{
-  return CORBA_Pollable::_duplicate (p);
-}
-
-void
-tao_CORBA_Pollable_release (
-    CORBA_Pollable_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-CORBA_Pollable_ptr
-tao_CORBA_Pollable_nil (
-    void
-  )
-{
-  return CORBA_Pollable::_nil ();
-}
-
-CORBA_Pollable_ptr
-tao_CORBA_Pollable_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return CORBA_Pollable::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_CORBA_Pollable_upcast (
-    void *src
-  )
-{
-  CORBA_Pollable **tmp =
-    ACE_static_cast (CORBA_Pollable **, src);
-  return *tmp;
-}
+ACE_RCSID(tao, PollableC, "$Id$")
 
 // *************************************************************
 // Operations for class CORBA_Pollable_var
@@ -201,7 +155,6 @@
     ACE_static_cast (CORBA_Pollable **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class CORBA_Pollable_out
 // *************************************************************
@@ -327,50 +280,7 @@
 
 const char* CORBA_Pollable::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_Pollable:1.0";
-}
-
-CORBA_DIIPollable_ptr
-tao_CORBA_DIIPollable_duplicate (
-    CORBA_DIIPollable_ptr p
-  )
-{
-  return CORBA_DIIPollable::_duplicate (p);
-}
-
-void
-tao_CORBA_DIIPollable_release (
-    CORBA_DIIPollable_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-CORBA_DIIPollable_ptr
-tao_CORBA_DIIPollable_nil (
-    void
-  )
-{
-  return CORBA_DIIPollable::_nil ();
-}
-
-CORBA_DIIPollable_ptr
-tao_CORBA_DIIPollable_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return CORBA_DIIPollable::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_CORBA_DIIPollable_upcast (
-    void *src
-  )
-{
-  CORBA_DIIPollable **tmp =
-    ACE_static_cast (CORBA_DIIPollable **, src);
-  return *tmp;
+  return "IDL:omg.org/CORBA/Pollable:1.0";
 }
 
 // *************************************************************
@@ -495,7 +405,6 @@
     ACE_static_cast (CORBA_DIIPollable **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class CORBA_DIIPollable_out
 // *************************************************************
@@ -633,50 +542,7 @@
 
 const char* CORBA_DIIPollable::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_DIIPollable:1.0";
-}
-
-CORBA_PollableSet_ptr
-tao_CORBA_PollableSet_duplicate (
-    CORBA_PollableSet_ptr p
-  )
-{
-  return CORBA_PollableSet::_duplicate (p);
-}
-
-void
-tao_CORBA_PollableSet_release (
-    CORBA_PollableSet_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-CORBA_PollableSet_ptr
-tao_CORBA_PollableSet_nil (
-    void
-  )
-{
-  return CORBA_PollableSet::_nil ();
-}
-
-CORBA_PollableSet_ptr
-tao_CORBA_PollableSet_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return CORBA_PollableSet::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_CORBA_PollableSet_upcast (
-    void *src
-  )
-{
-  CORBA_PollableSet **tmp =
-    ACE_static_cast (CORBA_PollableSet **, src);
-  return *tmp;
+  return "IDL:omg.org/CORBA/DIIPollable:1.0";
 }
 
 // *************************************************************
@@ -801,7 +667,6 @@
     ACE_static_cast (CORBA_PollableSet **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class CORBA_PollableSet_out
 // *************************************************************
@@ -990,7 +855,7 @@
   ACE_THROW (CORBA::MARSHAL ());
 }
 
-// TAO extension - the _alloc method.
+// TAO extension - the _alloc method
 CORBA::Exception *CORBA_PollableSet::NoPossiblePollable::_alloc (void)
 {
   CORBA::Exception *retval = 0;
@@ -1044,12 +909,12 @@
 
 void CORBA_PollableSet::UnknownPollable::_tao_encode (
     TAO_OutputCDR &,
-    CORBA::Environment &ACE_TRY_ENV
-  ) const
+    CORBA::Environment &ACE_TRY_ENV) const
 {
   ACE_THROW (CORBA::MARSHAL ());
 }
 
+
 void CORBA_PollableSet::UnknownPollable::_tao_decode (
     TAO_InputCDR &,
     CORBA::Environment &ACE_TRY_ENV
@@ -1087,3 +952,4 @@
   #  pragma instantiate TAO_Object_Manager<CORBA_PollableSet,CORBA_PollableSet_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#endif /* TAO_HAS_AMI_POLLER == 1 */
