Fri Dec 30 16:39:46 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/OS_NS_string.cpp:
        * ace/OS_NS_string.h:
        * ace/OS_NS_string.inl:

          Make ACE_OS::strdup(const char *) and ACE_OS::strdup(const
          wchar_t *) inline.  Provide ACE_OS::strdup_emulation(const
          char *) and ACE_OS::strdup_emulation(const wchar_t *) for
          systems that don't have a native (or type-safe equivalent)
          strdup() and wcsdup() functions.

        * configure.ac:

          Replace scattered feature tests with calls to new
          ACE_FUNC_STRCASECMP, ACE_FUNC_STRNCASECMP, ACE_FUNC_STRDUP,
          ACE_FUNC_WCSCASECMP, ACE_FUNC_WCSNCASECMP, ACE_FUNC_WCSDUP
          autoconf macros.

        * m4/ace_func.m4:

          New file.

          Feature tests for related features (e.g does function exist,
          does it have a prototype, does it have const/non-const args,
          etc.) are scattered all over configure.ac.  This file is for
          ACE_FUNC_FOO macros (similar to autoconf's own AC_FUNC_FOO),
          which bring all these feature tests together in once place.
          This clean-up makes the configure.ac easier to maintain at
          the same time.

          Provide ACE_FUNC_STRCASECMP, ACE_FUNC_STRNCASECMP,
          ACE_FUNC_STRDUP, ACE_FUNC_WCSCASECMP, ACE_FUNC_WCSNCASECMP,
          ACE_FUNC_WCSDUP macros to start things off.

Fri Dec 30 17:52:41 2005  Steve Huston  <shuston@riverace.com>

        * ace/Dev_Poll_Reactor.cpp (work_pending_i): Upon return from
          epoll_wait(), don't blindly set start_pevents_ to events_. If
          epoll_wait() returns -1, this erroneously sets start_pevents_ to
          a value that may not make sense.

Fri Dec 30 12:17:17 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/C++NPv2/AC_Client_Logging_Daemon.cpp:
          Fixed compile error due to expected implicit conversion

Fri Dec 30 15:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks6.1.GNU:
          Added rtp and pthread flags, when rtp is set to 1 we are building
          for real time process model, when pthread is set to 1 we are
          building with the pthread support

Fri Dec 30 15:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.inl:
          Added workaround for incorrect swab include for vxworks 6.1

Fri Dec 30 15:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.1.h:
        * ace/config-vxworks6.2.h:
          Updated after first testing with the RTP model

Fri Dec 30 14:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/C++NPv2/Client_Logging_Daemon.cpp:
          Fixed compile error due to expected implicit conversion

Fri Dec 30 14:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Time_Value.{h,inl}:
          Added assignment operator for a time_t

Fri Dec 30 12:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_time.inl:
          Instead of return -1 return ACE_Time_Value(-1)

Fri Dec 30 12:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_2345_Regression

Fri Dec 30 11:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Reactor/Misc/pingpong.cpp:
        * examples/Reactor/Misc/pingpong.cpp:
          Updated because the constructors of ACE_Time_Value are now explicit

Fri Dec 30 11:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/Gateway/Gateway/Connection_Handler.{h,cpp}:
        * apps/Gateway/Gateway/Event_Channel.cpp:
        * apps/Gateway/Gateway/Gateway.cpp:
        * apps/Gateway/Gateway/Options.{h,cpp}:
        * netsvcs/lib/TS_Clerk_Handler.{h,cpp}:
        * examples/APG/Timers/Timers.cpp:
        * examples/APG/Timers/Upcall.cpp:
          Updated timeouts to be a long and updated some code because
          the constructors of ACE_Time_Value are now explicit

Fri Dec 30 10:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Time_Value.{h,inl}:
          Added += and -= for a time_t

        * examples/APG/ThreadManagement/Priorities.cpp:
        * examples/APG/ThreadManagement/Signals2.cpp:
        * examples/APG/ThreadManagement/Signals.cpp:
        * examples/APG/ThreadManagement/Coop_Cancel.cpp:
          Initialise pointers with 0

Fri Dec 30 10:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Time_Value.h:
          Made all single argument constructors explicit to prevent implicit
          conversions.

Fri Dec 30 10:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Profile_Timer.cpp (elapsed_rusage):
          Use ACE_Time_Value to calculate the time difference. The type
          of time could be FILETIME on Windows and it is not safe to just
          use the - operator on that. This did compile because the
          ACE_Time_Value seems to be used because of implicit conversions

Fri Dec 30 10:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Reference_Counted_Event_Handler_Test.cpp:
          Explicit create ACE_Time_Value's when scheduling timers

Fri Dec 30 09:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Proactor.cpp:
          When setting a ACE_Time_Value to zero use ACE_Time_Value::zero
          instead of 0

Thu Dec 29 11:55:39 2005  Steve Huston  <shuston@riverace.com>

        * ace/DLL.h: Further Doxygen-ized and expanded the documentation.

        * ace/config-macros.h: Add __HP_aCC to the compilers that need to have
          unreachable statements suppressed to avoid a compile diagnostic.

        * ace/config-hpux-11.00.h: Add ACE_LACKS_PERFECT_MULTICAST_FILTERING
          for HP-UX 11iv2 (11.23).

Thu Dec 29 11:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks5.5.x.GNU:
        * include/makeinclude/platform_vxworks6.1.GNU:
          Changed the way we set TAO_IDL

Thu Dec 29 09:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_sched.h:
          Another update to the way we detect if we have to define cpu_set_t,
          older linux versions do have glibc2.3 but not this type.

Wed Dec 28 11:47:17 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/acinclude.m4:

          Remove some long commented-out macros that reimplemented core
          autoconf functionality.

Wed Dec 28 19:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.2.h:
          Another update for the changes in 6.2

Wed Dec 28 19:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.2.h:
          Removed some lacks macros which 6.2 should deliver according
          to the documentation

Wed Dec 28 11:21:55 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add ACE_LACKS_SCHED_H feature test.  Use it in other tests
          that #include <sched.h>.

Wed Dec 28 11:08:18 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/config_h.m4:

          Remove ACE_HAS_3_PARAM_WCSTOK autoconf header template.

        * configure.ac:

          Added description to AC_DEFINE for ACE_HAS_3_PARAM_WCSTOK.

Wed Dec 28 19:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.cpp:
          Rearranged some code to make the autoconf checks for set/get
          affinity easier

Wed Dec 28 10:56:42 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Change ACE_HAS_CPU_SET_T feature test to look in <sched.h>.

          Add ACE_HAS_2_PARAM_SCHED_{GET,SET}AFFINITY feature tests.

Wed Dec 28 16:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.cpp:
          Introduced ACE_HAS_2_PARAM_SCHED_SETAFFINITY and
          ACE_HAS_2_PARAM_SCHED_GETAFFINITY. Some glibc versions ship with
          a two param version.

        * ace/config-linux-common.h:
          Removed the setting for setaffinity/getaffinity based on
          glibc version. Found that even with glibc 2.3 some systems had a
          two param version, some 3.

Wed Dec 28 12:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_sched.h:
          Improved cpu_set_t typedef

Wed Dec 28 11:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Message_Block.h:
          Doxygen improvements

Wed Dec 28 10:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-linux-common.h:
          Glicc 2.3 and newer also have sched_getaffinity and
          sched_setaffinity.

Wed Dec 28 10:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-linux-common.h:
          Glibc 2.3 seems to have cpu_set_t

Wed Dec 28 09:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/os_unistd.h:
          Made some workarounds dependent on BCB version

        * ace/os_include/os_sched.h:
          If ACE_HAS_CPU_SET_T is not defined then typedef cpu_set_t.
          If your platforms has the type cpu_set_t, then set this define
          in the config file

        * ace/OS_NS_Thread.{h,cpp}:
          Added thr_set_affinity and thr_get_affinity to bind a thread
          to a certain CPU. This is part of the extensions proposed in
          bugzilla 2342. Thanks to Robert Iakobashvili
          <coroberti at gmail dot com> for these extensions.

          This will probably break some builds, where we have to add
          ACE_HAS_CPU_SET_T to the config file.

        * ace/README:
          Documented ACE_HAS_CPU_SET_T

Tue Dec 27 19:21:19 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/ace.m4:

          Add ACE_ENABLE_CDR_SWAP_ON_READ, ACE_ENABLE_CDR_SWAP_ON_WRITE,
          ACE_ENABLE_CDR_ALIGNMENT, ACE_ENABLE_STRDUP_EMULATION, and
          ACE_ENABLE_WCSDUP_EMULATION to support --enable options of
          the same name.  Allows users to configure these aspects of
          ACE without editing the generated config.h header.

        * configure.ac:

          Fix typo in ACE_LACKS_MADVISE_PROTOTYPE feature test.

Tue Dec 27 15:14:05 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * THANKS: Added Vladimir Panov to the Hall of Fame.

Tue Dec 27 14:49:20 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/config_h.m4:

          Remove ACE_HAS_STRDUP_EMULATION autoconf header template.

        * configure.ac:

          Changed strdup feature test to set ACE_LACKS_STRDUP instead
          of ACE_HAS_STRDUP_EMULATION.

          Added (missing) ACE_LACKS_STRCHR feature test.

        * ace/README:

          Update ACE_HAS_STRDUP_EMULATION description.  Added
          ACE_HAS_WCSDUP_EMULATION, ACE_LACKS_STRCHR, ACE_LACKS_WCSCHR,
          ACE_LACKS_STRDUP, and ACE_LACKS_WCSDUP descriptions.

        * ace/OS_Memory.h:

          Updated comment explaining that users may want to set
          ACE_HAS_STRDUP_EMULATION if they need to control what memory
          allocator is used to include ACE_HAS_WCSDUP_EMULATION.

        * ace/OS_NS_string.cpp:

          The ACE_HAS_STRDUP_EMULATION feature test macro was being used
          for two purposes.  One is for systems which don't have a native
          strdup().  The other is for when the user needs to control/
          override what memory allocator is used.

          I've separated these options by adding a new ACE_LACKS_STRDUP
          feature test macro. ACE's emulated strdup() implementation is
          used if either ACE_LACK_STRDUP or ACE_HAS_STRDUP_EMULATION is
          set.

          Added ACE_HAS_WCSDUP_EMULATION, similar to the above, for
          symmetry with the wide character version.

Tue Dec 27 14:17:56 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/config_h.m4:

          Remove ACE_HAS_SET_T_ERRNO autoconf header template.

        * configure.ac:

          Change ACE_HAS_SET_T_ERRNO feature test to use "standard"
          ACE_CHECK_HAS_FUNC() macro.

Tue Dec 27 13:36:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/os_include/sys/os_mman.h:

          Provide madvise prototype if ACE_LACKS_MADVISE_PROTOTYPE.

        * configure.ac:

          Added ACE_LACKS_MADVISE_PROTOTYPE feature test.

          This should fix bugzilla bug 2274.  Thanks to Steve Williams
          < steve at telxio dot com > for reporting this and providing
          an initial patch.

Tue Dec 27 13:29:27 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * apps/gperf/Makefile.am:

          Regenerated.

        * apps/gperf/gperf.mpc:

          New file.  Adds rule for building/installing gperf.1 manpage.
          Partially addresses bugzilla bug 2280.

Tue Dec 27 12:45:37 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Fix typo in last change.

Tue Dec 27 12:41:00 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add ACE_HAS_CPU_SET_T, ACE_HAS_PTHREAD_GETAFINITY_NP,
          ACE_HAS_PTHREAD_SETAFFINITY_NP, ACE_HAS_SCHED_GETAFFINITY,
          and ACE_HAS_SCHED_SETAFFINITY feature tests for a patch
          Johnny is preparing.

Tue Dec 27 11:11:15 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/config_h.m4:

          Remove ACE_LACKS_SYSTEM_H autoconf header template.

        * configure.ac:

          Remove ACE_LACKS_SYSTIME_H feature test, and the use of
          ACE_LACKS_SYSTIME_H in other feature test macros.  C.f.

          Tue Dec 27 14:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

Tue Dec 27 11:06:00 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add ACE_LACKS_ALARM feature test.

Tue Dec 27 15:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.1.h:
        * ace/config-vxworks6.2.h:
          Removed ACE_LACKS_DUP2

Tue Dec 27 14:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-cygwin32.h:
        * ace/config-dgux-4.11-epc.h:
        * ace/config-dgux-4.x-ghs.h:
        * ace/config-freebsd.h:
        * ace/config-irix5.3-g++.h:
        * ace/config-irix5.3-sgic++.h:
        * ace/config-irix6.x-common.h:
        * ace/config-linux-common.h:
        * ace/config-macosx-panther.h:
        * ace/config-macosx-tiger.h:
        * ace/config-macosx.h:
        * ace/config-mvs.h:
        * ace/config-openbsd.h:
        * ace/config-psos-diab-mips.h:
        * ace/config-psos-diab-ppc.h:
        * ace/config-psos-diab.h:
        * ace/config-psos-tm.h:
        * ace/config-psosim-g++.h:
        * ace/config-qnx-neutrino.h:
        * ace/config-qnx-rtp-62x.h:
        * ace/config-qnx-rtp-pre62x.h:
        * ace/config-sco-5.0.0-mit-pthread.h:
        * ace/config-sco-5.0.0.h:
        * ace/config-sunos4-g++.h:
        * ace/config-sunos4-sun4.1.4.h:
        * ace/config-sunos4-sun4.x.h:
        * ace/config-tandem-nsk-mips-v2.h:
        * ace/config-tandem-nsk-mips-v3.h:
        * ace/config-tandem.h:
        * ace/config-tru64.h:
        * ace/config-unixware-2.1.2-g++.h:
        * ace/config-unixware-7.1.0.h:
        * ace/config-unixware-7.1.0.udk.h:
        * ace/config-vxworks5.x.h:
        * ace/config-vxworks6.2.h:
        * ace/config-win32-interix.h:
        * ace/README:
          Removed ACE_LACKS_SYSTIME_H, it is not used anymore in ACE

Tue Dec 27 14:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.1.h:
        * ace/config-vxworks6.2.h:
          Added initial version of VxWorks 6.2 config file. This is updated
          based on the documentation, no testing has been done

Tue Dec 27 13:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_select.h:
          Only include selectLib for VxWorks when VxWorks doesn't deliver
          sys/select.h

        * ace/OS_NS_unistd.inl:
          Introduced ACE_LACKS_ALARM to make it easier to determine which
          platform has alarm and which not

        * ace/config-chorus.h:
        * ace/config-psos-diab.h:
        * ace/config-win32-common.h:
          Added ACE_LACKS_ALARM

        * ace/config-vxworks6.1.h:
          Added some documentation about defines which we could drop for
          VxWorks 6.2 according to the documentation

Tue Dec 27 11:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.1.h:
          VxWorks 6.1 has two models, kernel and real time process (rtp).
          Based on the model some API's are not available.

Tue Dec 27 09:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Time_Value.{h,inl}:
          Changed the first argument of the constructor accepting two
          longs to time_t to fix 64bit conversion warnings

Sun Dec 25 09:04:50 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * Merry Christmas, 2005!!!!

Fri Dec 23 13:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-common.h:
          Added ACE_LACKS_SCHED_H, windows doesn't have sched.h

Fri Dec 23 13:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/INET_Addr.inl:
          Fixed warning about unreachable code when ipv6 is enabled

Fri Dec 23 11:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Sock_Connect.cpp:
          Added missing defined

Fri Dec 23 08:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Buffer_Stream_Test.cpp:
          Fixed ambiguity errors with vc6

Fri Dec 23 07:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Time_Value.{h,inl}:
          Removed the set with time_t and changed the set with two longs to
          pass seconds as time_t. This should work on all platforms fine.
          Thanks to JT for the ideas.

        * ace/System_Time.cpp:
          Use the set with two arguments

Thu Dec 22 18:33:29 2005  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_aix_ibm.GNU: Change Visual Age 6 to use
          -qtemplateregistry also. It's faster and doesn't require the same
          strict source organization of templates that -qtempinc does.
          Also stop using the aixshr hack to strip warnings out of the
          linker output - it's not needed with -qtemplateregistry.
          Try removing -qstaticinline - this was an attempt to stop some of
          the duplicate symbol warnings that -qtempinc triggered; hopefully,
          removing this will let the linker/compiler unify singleton instances.

Thu Dec 22 14:35:12 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/rtcorbacommon.mpb:

          Add $(srcdir) relative include path.

Thu Dec 22 14:06:07 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/tao_orb_tests.lst:

          Added Portable_Interceptors/Processing_Mode_Policy/Collocated and
          Portable_Interceptors/Processing_Mode_Policy/Remote to the list.

Thu Dec 22 19:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Reactor/Misc/notification.cpp:
        * examples/Reactor/Misc/test_signals_1.cpp:
          Fixed ambiguity warnings

        * ace/Time_Value.{h,cpp,inl}:
          Don't pass time_t as reference to set, just by value, moved the
          method to the inline file and set tv_usec to 0, thanks to JT
          for this suggestions.

Thu Dec 22 10:43:23 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/cle.pl:
        * bin/ChangeLogEditor/CVSFileLocator.pm:
        * bin/ChangeLogEditor/ChangeLogEntry.pm:
        * bin/ChangeLogEditor/FileLocator.pm:
        * bin/ChangeLogEditor/FileLocatorFactory.pm:
        * bin/ChangeLogEditor/SVNFileLocator.pm:

          Added support for Subversion.  It will automatically switch to
          svn if it detects that it is being run in a directory
          controlled by Subversion.

        * bin/DependencyGenerator/GNUObjectGenerator.pm:
        * bin/DependencyGenerator/MakeObjectGenerator.pm:

          Switch to actual arrays inside the process() method and return the
          reference.  It is faster to push onto an array than an array
          reference.

        * bin/MakeProjectCreator/config/cidlc.mpb:

          Added nmake to the specific section for compile_flags.

        * bin/MakeProjectCreator/modules/GNUACEWorkspaceCreator.pm:

          Added .PHONY when creating named targets to avoid problems with
          target executables that have the same name as the project.

        * bin/depgen.pl:

          Added a -i option to not print an error if no source files are
          provided.

        * include/makeinclude/rules.local.GNU:

          Modified to pass the -i option to depgen.pl and to pass the -n
          option to depgen.pl if inline=1.

Thu Dec 22 12:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.cpp:
          Use taskName to get the task name under VxWorks instead of directly
          using the TCB struct

        * ace/Sock_Connect.cpp:
          Use for VxWorks also the unix way of retrieving the interfaces, the
          VxWorks specific way doesn't work with VxWorks 6.1 anymore

Thu Dec 22 12:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Time_Value.{h,cpp}:
          Added set that accepts time_t, time_t is a 64bit type under
          Windows64.

        * ace/System_Time.cpp:
          Use the new Time_Value::set method that accepts time_t

Thu Dec 22 12:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/WIN32_Proactor.cpp:
          Added workarounds for vc6 which doesn't have ULONG_PTR

Wed Dec 21 06:40:29 2005  Steve Huston  <shuston@riverace.com>

        * ace/Asynch_Acceptor.cpp (set_handle): Added return 0 to success case.
          Also see:
          Fri Dec 16 12:38:27 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

Thu Dec 22 06:12:39 2005  Steve Huston  <shuston@riverace.com>

        * ace/SSL/SSL_SOCK_Stream.cpp: Add missing #include "ace/OS_Memory.h"
          to see ACE_NEW_RETURN. Also changed the type used with
          ioctl (, FIONREAD, ) from u_long to ACE_UINT32 for portability.

        * apps/JAWS2/JAWS/Headers.cpp: Add missing
          #include "ace/OS_NS_stdlib.h" to see ACE_OS::free().

        * apps/JAWS2/JAWS/IO.cpp: Add missing #include "ace/OS_NS_string.h"
          to see ACE_OS::memcpy(). Add missing #include "ace/Min_Max.h" to see
          ACE_MIN.

        * apps/JAWS2/JAWS/Server.cpp: Add missing #include "ace/OS_NS_string.h"
          to see ACE_OS::strcpy().

        * apps/JAWS2/JAWS/Parse_Headers.cpp: Add missing
          #include "ace/Log_Msg.h".

        * examples/APG/Containers/Map_Manager.cpp:
        * examples/APG/Containers/Map_Manager_Specialization.cpp: Add missing
          #include "ace/Log_Msg.h".

        * examples/IPC_SAP/SSL_SAP/SSL-server-poll.cpp: Add missing
          #include "ace/OS_NS_stdlib.h" for ACE_OS::malloc()/free().

Wed Dec 21 12:44:19 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * THANKS: Add Jonathan Sprinkle to the Hall of Fame.

        * configure.ac:

          Define ACE_LACKS_NAMED_POSIX_SEM if platform lacks any of
          sem_open(), sem_close(), or sem_unlink() are undefined.  This
          should help automake builds on Cygwin, which does not provide
          sem_unlink().  Thanks to Jonathan Sprinkle who provided the
          failing config.log.

Wed Dec 21 12:32:10 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/Time_Value.inl:

          Use g++'s __builtin_constant_p() predicate to avoid calling
          ::normalize() if both arguments to ACE_Time_Value::set(long,
          long) are already "normalized".  This avoids an unnecessary
          method call when initializing ACE_Time_Value constants.

Wed Dec 21 11:40:53 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/OS_NS_Thread.cpp (ACE_OS::thr_create):

          If ACE_HAS_PTHREAD_ATTR_SETCREATESUSPEND_NP and THR_SUSPENDED
          is set, use pthread_attr_setcreatesuspend_np() and set thread
          creation attributes so thread is started in "suspended" state.

        * configure.ac:

          Add feature test for ACE_HAS_PTHREAD_ATTR_SETCREATESUSPSEND_NP.

        * ace/README:

          Document ACE_HAS_PTHREAD_ATTR_SETCREATESUSPEND_NP.

Wed Dec 21 19:17:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * netsvcs/clients/Naming/Client/Client_Test.cpp:
          Replaced assert with ACE_ERROR

Wed Dec 21 19:14:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/vc8nmake.mpb:
          With vc8 and nmake we have to pass different compiler flags then
          with vc6 and vc71. To make it easier to use, you can regenerate
          the nmake files for vc8 using: -type nmake -base vc8nmake -recurse
          This way you get the needed flags for vc8

Wed Dec 21 18:45:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * ace/WFMO_Reactor.cpp:
        * protocols/ace/HTBP/HTBP_Session.cpp:
          Initialise pointer with 0

        * include/makeinclude/platform_vxworks6.1.GNU:
        * include/makeinclude/platform_vxworks5.5.x.GNU:
          Use EXEEXT instead of .exe when setting TAO_IDL

Wed Dec 21 18:42:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added bug_2328_regression

Tue Dec 20 17:24:39 2005  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: Define ACE_TEMPLATES_REQUIRE_SOURCE if
          compiling with an IBM compiler and __TEMPINC__ is not defined.
          This covers -qnotempinc and -qtemplateregistry cases (for XL C++ 7).
          Define ACE_TEMPLATES_REQUIRE_PRAGMA if compiling with an IBM
          compiler and -qtempinc was specified on the command line. This
          unifies proper handling and covers both ACE+TAO builds and users'
          inclusion of ACE+TAO in user projects regardless of which template
          model chosen.

        * ace/Local_Name_Space.cpp: Add #include "ace/ACE.h" to see
          ACE::hash_pjw().

        * ace/Malloc_T.h: Add #include "ace/Malloc_Base.h" to see
          ACE_Allocator.

        * ace/POSIX_CB_Proactor.cpp: Add #include "ace/OS_NS_sys_time.h" to see
          ACE_OS::gettimeofday().

        * ace/Sock_Connect.cpp: Removed hack at this compiler version.

        * ace/SString.inl: Add #include "ace/OS_NS_stdlib.h" to see
          ACE_OS::free().

        * ace/SString.cpp: Add #include "ace/OS_Memory.h" to see
          ACE_NEW_RETURN. Change #include "ace/Malloc.h" to "ace/Malloc_T.h"
          to pick up needed symbols.

        * include/makeinclude/platform_aix_ibm.GNU: Added compiler-specific
          section for XL C++ 7. Also removed the explicit setting of
          ACE_TEMPLATES_REQUIRE_[PRAGMA|SOURCE]. The proper one to use is
          determined by whether or not -qtempinc is specified to the compiler.
          Since this is knowable at compile time and what a user does may
          not match what the ACE/TAO build does, proper selection of the
          correct setting is moved to config-aix-4.x.h.

        * include/makeinclude/rules.local.GNU: Add templateregistry.* to the
          file cleanup list. XL C/C++ 7 builds use -qtemplateregistry and
          specify a name templateregistry.$(MAKEFILE).

Tue Dec 20 20:24:39 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/UUID.cpp (ACE_Utils): Move the lock to the top of the
          UUID_Generator::get_timestamp() method to avoid subtle race
          conditions.  Thanks to Howard Finer <hfiner@sonusnet.com> for
          this fix.

Fri Dec 16 12:38:27 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Asynch_Acceptor.{h,cpp}: Added an int return value to
          set_handle() so that errors can be propagated back to callers.
          Thanks to Eyal Car <eyal_car at hotmail dot com> for this fix.
          This closes bugid 2261.

Wed Dec 21 16:19:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * ace/CDR_Base.cpp:
        * ace/CDR_Stream.cpp:
          Fixed 64bit conversion warnings from int to long

        * ace/config-vxworks6.1.h:
          VxWorks 6.1 defines MAP as CPU type, if it is defined,
          undef it so that we can use MAP as typedef throughout ACE/TAO

        * ace/Configuration_Import_Export.cpp:
          Fixed 64bit conversion warning from u_int to u_long

        * ace/Malloc_T.cpp:
          Added some checks for valid pointers before calling memset.
          Thanks to Oh Yoon Sik <boom at estsoft dot com> for reporting
          this.

        * ace/OS_NS_sys_stat.inl (mkdir):
          Replaced c-style cast with C++ cast

        * ace/Basic_Types.h:
          Removed ptr_arith_t, it is not used anymore

        * ace/OS_NS_time.cpp:
          Fixed the month calculation for WinCE.
          Thanks to Oh Yoon Sik <boom at estsoft dot com> for reporting
          this.

        * ace/WIN32_Proactor.cpp:
          The code for ACE_WIN64 should also be used for ACE_WIN32 so
          zapped the ACE_WIN32 specific case

        * include/makeinclude/platform_linux_icc.GNU:
          When optimizations are disabled pass -O2 to the compiler. Always
          disable the floating point optimizations to get correct floats
          in the IDL compiler.

        * examples/Reactor/Misc/test_demuxing.cpp:
          Instead of an ACE_ASSERT, use ACE_ERROR_RETURN

        * tests/Basic_Types_Test.cpp:
          Use ptr_diff_t instead of ptr_arith_t

        * tests/Buffer_Stream_Test.cpp:
          Initialise pointers with 0

        * etc/tao.doxygen:
          Expand all emulated exception macros, that will improve our
          documentation. I will recheck doxygen later and if things look
          correct I will apply the same change to the other configuration
          files.

        * bin/MakeProjectCreator/modules/BorlandProjectCreator.pm:
          Updated because of changes to MPC.

Tue Dec 20 08:02:03 2005  Simon McQueen  <sm@prismtech.com>

        * ACE version 5.4.8 released.

Mon Dec 20 09:58:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * bin/make_release:
          Removed the $0 from the "Generated by " comment inserted into
          the Version.h files.

Mon Dec 19 16:50:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * bin/make_release:
          Removed the extra end of line inserted into the
          Id: ChangeLog,v 4.9518 2005/12/20 10:03:35 bugzilla Exp
          comment from all of the Version.h generators. (Around the same
          line as before.)

Mon Dec 19 14:40:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * bin/make_release:
          Removed the #include "ace/Versioned_Namespace.h" generator
          from line 643 (it wasn't adding the correct end of line
          and concensous was that it was actually in error anyway).

Thu Dec 15 08:08:31 2005  Steve Huston  <shuston@riverace.com>

        * ace/Asynch_IO.h: Clarified arguments and return value for
          ACE_Asynch_Read_Stream::open.

Thu Dec 15 08:06:29 2005  Steve Huston  <shuston@riverace.com>

        * ace/Service_Templates.cpp: Only #include headers if we need to
          instantiate templates; i.e., if using either form of explicit
          template instantiation. This avoids the sigaction issue with
          HP aC++ A.03.56.

Tue Dec 13 12:13:26 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * COPYING: Updated this file to mention compliance issues wrt the
          new "The Energy Policy Act of 2005".  Thanks to Malcolm Spence
          for providing this.

Tue Dec 13 18:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao_cosnotification.doxygen:
          Also parse the subdirectories below Notify and also add inline
          files, the generated doxygen docu was not complete

Tue Dec 13 00:54:04 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/tao_versioning_idl_defaults.mpb:

          New MPC base project containing necessary versioned namespace
          related TAO_IDL flags for PIDL and IDL files in core TAO
          libraries and TAO orbsvcs libraries.

Mon Dec 12 15:31:50 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ace_for_tao.mpc:

          Added "nmake" to the list of Windows-based build types that
          should be considered when adding Windows-specific sources to the
          ace_for_tao subset.

Mon Dec 12 15:23:29 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/tests.mpc (UPIPE_SAP_Test):

          Disable this test in the ace_for_tao configuration.  It depends
          on features not found in the ace_for_tao subset.

Mon Dec 12 14:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/compiler.bor:
          Only when we build without VCL support add _NO_VCL to the compiler
          flags

Mon Dec 12 13:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/vcl.mpb:
          Added verbatim VCL=1 to this base project. This way the correct
          startup objects are linked with the application when vcl is
          used

Sun Dec 11 18:03:05 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/UPIPE_Stream.h (MT_Stream):

          Moved this typedef out of the global namespace to the
          ACE_UPIPE_Stream class.  It is only used within this class.
          Doing so also addresses global namespace pollution issues.

        * examples/ASX/Event_Server/Event_Server/event_server.cpp:
        * examples/ASX/UPIPE_Event_Server/event_server.cpp:

          Reinstated local MT_Stream typedefs.  The global namespace
          pollution fix described above allows this.  Fixes compile-time
          error in single threaded builds.

Thu Dec  8 07:20:25 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Dynamic.h:
        * ace/OS_main.cpp:
        * ace/OS_main.h:
        * ace/TSS_Adapter.h:
        * ace/QoS/QoS_Decorator.cpp:
        * ace/QoS/QoS_Decorator.h:
        * ace/QoS/QoS_Manager.cpp:
        * ace/QoS/QoS_Manager.h:
        * ace/QoS/QoS_Session.h:
        * ace/QoS/QoS_Session_Factory.cpp:
        * ace/QoS/QoS_Session_Factory.h:
        * ace/QoS/QoS_Session_Impl.cpp:
        * ace/QoS/QoS_Session_Impl.h:
        * ace/QoS/QoS_Session_Impl.i:
        * ace/QoS/SOCK_Dgram_Mcast_QoS.cpp:
        * ace/QoS/SOCK_Dgram_Mcast_QoS.h:
        * ace/QoS/SOCK_Dgram_Mcast_QoS.i:

          Fixed versioned namespace support.  The versioning macros calls
          were missing.

Thu Dec  8 08:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/APG/ThreadSafety/threadsafety.mpc:
          Fixed error in this mpc project which caused build errors with
          borland

Wed Dec  7 05:50:01 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * apps/JAWS/clients/Caching/caching.mpc:
        * apps/JAWS2/JAWS/jaws2.mpc:
        * bin/MakeProjectCreator/config/winregistry.mpb:
        * examples/APG/Containers/containers.mpc:
        * examples/APG/Svc_Config/svc_config.mpc:
        * examples/APG/ThreadSafety/threadsafety.mpc:
        * examples/C++NPv2/C++NPv2.mpc:
        * examples/QOS/Diffserv/QOS_Diffserv.mpc:
        * examples/Reactor/Proactor/Proactor.mpc:
        * examples/Reactor/WFMO_Reactor/WFMO_Reactor.mpc:
        * tests/tests.mpc:

          Disable some projects in these MPC files when "ace_for_tao" is
          enabled.

Tue Dec  6 21:34:03 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/ASX/Event_Server/Event_Server/event_server.cpp:
        * examples/ASX/UPIPE_Event_Server/event_server.cpp:

          Removed duplicate "MT_Stream" typedef that made the same typedef
          in `ace/UPIPE_Stream.h' ambiguous.  Fixes a versioned namespace
          build error.

Tue Dec  6 18:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/acedefaults.mpb:
          For vc8 set ExceptionHandling to 2. This enabled the structured
          exception handling. Normally vc8 doesn't catch structured exceptions
          but we except so for some tests and else the disabling of the
          win32 error windows doesn't work. This fixes bugzilla [BUG:2290]
          See also http://www.codecomments.com/archive292-2005-8-578262.html
          for backgroup. Thanks to Steve Huston and Chad Elliott for
          proposing to handle this in this mpb file instead of in the vc8
          base mpc template

Tue Dec  6 01:55:12 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/config-macros.h:

          Removed "#pragma once" directive.  The necessary preprocessor
          symbol definitions necessary to disable this directive
          are generally C++ preprocessor/compiler-specific.  This
          prevents proper configuration of this #pragma in the
          presence of a C compiler.

Mon Dec  5 14:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_stdio.inl:
          With Borland also just use tempnam instead of _tempname

Mon Dec  5 08:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-borland.h:
        * ace/config-win32-dmc.h:
        * ace/OS_NS_stdio.inl:
          Introduced new macros ACE_HAS_NONCONST_TEMPNAM and
          ACE_HAS_NONCONST_FDOPEN. Borland C++ Builder 6 and previous had
          non compliant non const methods but this is now corrected in
          BDS2006, so instead of hacking also a version check in the
          OS_NS_stdio.inl just check for a define and set this in the borland
          config file. Also DMC seems to have one incorrect signature
          so also set it there.

Sun Dec  4 06:49:59 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/SSL/SSL_Context.cpp:

          Use an ACE_Thread_Mutex instead of ACE_Mutex.  The former is
          faster and lighter weight.

Sat Dec  3 17:56:04 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/SSL/SSL_Asynch_BIO.cpp:
        * ace/SSL/SSL_Asynch_Stream.h:

          Replaced ACE_SSL_bio_{read,write} functors with a single
          structure containing static read() and write() methods.
          Functors are overkill in this case.

          Documented why a structure is used instead of a free
          function.

        * ace/SSL/SSL_Context.h:

          Removed obsolete comment.

Sat Dec  3 11:51:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Base_Thread_Adapter.h:

          Removed unnecessary "ace/Global_Macros.h" include directive in
          versioned namespace case.

        * ace/SSL/SSL_Asynch_BIO.cpp:

          Fixed versioned namespace support for free functions in this
          file.

          (BIO_s_Asynch):

          Removed this unnecessary function.  It simply returned the
          address of a global object.  Just take the address directly in
          the calling code.

          (BIO_new_ACE_Asynch, ACE_SSL_make_BIO):

          Renamed BIO factory function to "ACE_SSL_make_BIO", which is
          more consistent with ACE naming conventions.  Removed extern "C"
          declaration, as well, since there's no need for it to be so.

          (ACE_SSL_bio_read, ACE_SSL_bio_write):

          New functors that that make the necessary calls on the
          ACE_SSL_Asynch_Stream object.

          (ACE_Asynch_BIO_read, ACE_Asynch_BIO_write):

          Use new ACE_SSL_bio_{read,write} functors instead of making
          direct calls on the ACE_SSL_Asynch_Stream object.

        * ace/SSL/SSL_Asynch_BIO.h:

          Moved extern "C" BIO callback function prototypes to
          SSL_Asynch_BIO.cpp.  There's no need for them to be visibile to
          the user.

          Renamed BIO factory function to "ACE_SSL_make_BIO", which is
          more consistent with ACE naming conventions.  Removed extern "C"
          declaration, as well, since there's no need for it to be so.

        * ace/SSL/SSL_Asynch_Stream.cpp (open):

          Updated name of BIO factory function.

        * ace/SSL/SSL_Asynch_Stream.h:

          Removed unnecessary free function prototypes.

          (ACE_SSL_Asynch_Stream):

          Replaced friend function declarations with friend structure
          (used as functors) declarations.  Works around scope qualifier
          problems in Sun compilers when used on free functions.

Fri Dec  2 10:27:47 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/msvc_static_order.lst:

          Add RTEventLogAdmin project.

Fri Dec  2 13:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Task.inl:
          Replaced c-style casts with C++ const_cast

Fri Dec  2 11:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/os_include/sys/os_stat.h:
        * ace/os_include/sys/os_timeb.h:
          Made some workarounds for Borland specific on the BCB version.
          That way we can remove them easier in the future when we
          deprecated certain releases

Fri Dec  2 01:25:52 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Versioned_Namespace.h:

          Update preprocessor check to use new config-macros.h specific
          include guard preprocessor symbol.

        * ace/config-macros.h:
        * ace/config-lite.h:

          Moved all macros, preprocessor symbols and some non-C++-specific
          typedefs to the new `config-macros.h' header.  Allows
          configuration macros/values to be used in C sources.

        * ace/config-all.h:

          Removed redundant "ace/ace_wchar.h" include directive.  It's
          already included by `config-lite.h'.

        * ace/config-aix-4.x.h:
        * ace/config-chorus.h:
        * ace/config-cygwin32.h:
        * ace/config-linux-common.h:
        * ace/config-osf1-4.0.h:
        * ace/config-rtems.h:
        * ace/config-sunos5.5.h:
        * ace/config-vxworks5.x.h:
        * ace/config-vxworks6.1.h:

          Relaxed unsupported compiler preprocessor error for non-C++
          compilers. Simplifies use of configuration macros/values in
          presence of C compiler.

        * ace/Makefile.am:
        * ace/ace.mpc:

          Added new config-macros.h header to the appropriate header
          lists.

Fri Dec  2 00:43:12 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Module.h:
        * apps/JAWS/server/HTTP_Request.h:
        * apps/JAWS/server/IO.h:
        * apps/JAWS2/JAWS/Cache_Object.h:
        * apps/JAWS2/JAWS/IO.h:
        * apps/JAWS2/JAWS/IO_Acceptor.h:
        * apps/JAWS2/JAWS/IO_Handler.h:
        * apps/soreduce/Obj_Module.h:
        * examples/APG/Containers/Hash_Map_Hash.h:
        * examples/APG/Containers/RB_Tree_Functors.h:
        * examples/APG/ThreadPools/Request_Handler.h:
        * examples/ASX/Event_Server/Event_Server/Options.h:
        * examples/ASX/Event_Server/Event_Server/event_server.cpp:
        * examples/C++NPv1/Iterative_Logging_Server.h:
        * examples/C++NPv1/Logging_Handler.h:
        * examples/C++NPv1/Logging_Server.h:
        * examples/C++NPv2/Logging_Handler.h:
        * examples/Shared_Malloc/Malloc.h:

          More versioned namespace build fixes.

Thu Dec  1 08:07:23 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Service_Config.cpp (open_i):
        * ace/Service_Config.h (ACE_Service_Config): Don't try to
          register a signal handler if the signal number is < 0!  Thanks
          to Brian Raven <brianr at liffe dot com> for this fix.

Wed Nov 30 13:37:59 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/cidlc.mpb

          Updated to make thie base project consistent with the semantics
          of the boost base projects from MPC.

Tue Nov 29 11:20:12 UTC 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Parse_Node.cpp (make_func_name):

          Do not use a stack instantiated variable length array.  Use a
          dynamically allocated array instead.  Saves us a copy, and
          fixes g++ build errors when using its "-pedantic" command line
          option.

          Fixed string length calculation.  Addresses Service
          Configurator failures when versioned namespace support is
          enabled.

Wed Nov 30 00:33:21 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ACEXML/parser/parser/parser.mpc:
        * bin/MakeProjectCreator/config/avstreams.mpb:
        * bin/MakeProjectCreator/config/rmcast.mpb:
        * netsvcs/clients/Logger/Logger.mpc:
        * netsvcs/servers/servers.mpc:

          Disable these projects when "ace_for_tao" is enabled.

Wed Nov 30 08:58:35 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * html/index.html

          Removed obsolete CIAO components, cleaned up the HTML a bit.

Tue Nov 29 11:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Timer_Queue_T.cpp:
          Use prefix increment operator instead of postfix

Tue Nov 29 07:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Malloc.{h,cpp}:
          Removed copy constructor and name assign methods from ACE_Name_Node,
          these where implemented with an assert saying not implemented. This
          is not a good thing to do and also fixes some warnings in our
          Intel 9.1 beta build. If someone used these methods they would get
          an assert in runtime, now they get a compile error meaning we
          have to implement them

Mon Nov 28 07:26:31 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * protocols/ace/HTBP/HTBP.mpc:

          Added missing "avoids += ace_for_tao".

Mon Nov 28 06:50:04 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/ACE_Init_Test.cpp (run_main):

          Removed unnecessary versioned namespace related "using"
          keyword.

Sun Nov 27 22:37:44 2005  Bala Natarajan <bala_natarajan at symantec dot com>

        * ace/Array_Map.h:

          Included the Sun CC 5.8, as an additional CC compiler that
          requires complete specification for a trait declaration.

          Just for information. Sun CC 5.8 comes with Studio 11, which is
          free (as in FREE BEER!!).

Sun Nov 27 04:05:52 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ace.mpc:
        * ace/ace_for_tao.mpc:
        * bin/MakeProjectCreator/config/aceexe.mpb:
        * bin/MakeProjectCreator/config/acelib.mpb:
        * bin/MakeProjectCreator/config/versioned_namespace.mpb:

          Added versioned namespace MPC support.  Disabled by default.
          Add "versioned_namespace=1" to default.features to enable.

        * Kokyu/Kokyu_defs.h:
        * ace/Asynch_Connector.h:
        * ace/Cleanup.cpp:
        * ace/Cleanup.h:
        * ace/If_Then_Else.h:
        * ace/OS.h:
        * ace/Object_Manager.cpp:
        * ace/Object_Manager.inl:
        * ace/Value_Ptr.h:
        * ace/SSL/SSL_Asynch_Stream.h:
        * ace/SSL/SSL_SOCK_Acceptor.cpp:
        * protocols/ace/HTBP/HTBP_Addr.cpp:
        * protocols/ace/HTBP/HTBP_Addr.h:
        * protocols/ace/HTBP/HTBP_Channel.cpp:
        * protocols/ace/HTBP/HTBP_Channel.h:
        * protocols/ace/HTBP/HTBP_Channel.inl:
        * protocols/ace/HTBP/HTBP_Environment.cpp:
        * protocols/ace/HTBP/HTBP_Environment.h:
        * protocols/ace/HTBP/HTBP_Filter.cpp:
        * protocols/ace/HTBP/HTBP_Filter.h:
        * protocols/ace/HTBP/HTBP_Filter.inl:
        * protocols/ace/HTBP/HTBP_Filter_Factory.cpp:
        * protocols/ace/HTBP/HTBP_Filter_Factory.h:
        * protocols/ace/HTBP/HTBP_ID_Requestor.cpp:
        * protocols/ace/HTBP/HTBP_ID_Requestor.h:
        * protocols/ace/HTBP/HTBP_Inside_Squid_Filter.cpp:
        * protocols/ace/HTBP/HTBP_Inside_Squid_Filter.h:
        * protocols/ace/HTBP/HTBP_Inside_Squid_Filter.inl:
        * protocols/ace/HTBP/HTBP_Notifier.cpp:
        * protocols/ace/HTBP/HTBP_Notifier.h:
        * protocols/ace/HTBP/HTBP_Outside_Squid_Filter.cpp:
        * protocols/ace/HTBP/HTBP_Outside_Squid_Filter.h:
        * protocols/ace/HTBP/HTBP_Outside_Squid_Filter.inl:
        * protocols/ace/HTBP/HTBP_Session.cpp:
        * protocols/ace/HTBP/HTBP_Session.h:
        * protocols/ace/HTBP/HTBP_Session.inl:
        * protocols/ace/HTBP/HTBP_Stream.cpp:
        * protocols/ace/HTBP/HTBP_Stream.h:
        * tests/ACE_Init_Test.cpp:
        * tests/Process_Strategy_Test.h:

          Corrected build errors in versioned namespace builds.

        * bin/MakeProjectCreator/config/acexml.mpb:

          Disable ACEXML libraries when "ace_for_tao" is enabled.

Fri Nov 25 19:04:10 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * NEWS:

          Updated with latest versioned namespace information.

        * ace/ACE_Codecs_export.h:
        * ace/ACE_Memory_export.h:
        * ace/ACE_Reactor_export.h:
        * ace/ACE_Sockets_export.h:
        * ace/ACE_Threads_export.h:
        * ace/ace.mwc:
        * ace/ace_codecs_for_tao.mpc:
        * ace/ace_configuration_for_tao.mpc:
        * ace/ace_memory_for_tao.mpc:
        * ace/ace_reactor_for_tao.mpc:
        * ace/ace_sockets_for_tao.mpc:
        * ace/ace_threads_for_tao.mpc:
        * ace/ace_timer_for_tao.mpc:
        * bin/MakeProjectCreator/config/acecodecslib_for_tao.mpb:
        * bin/MakeProjectCreator/config/acememorylib_for_tao.mpb:
        * bin/MakeProjectCreator/config/acereactorlib_for_tao.mpb:
        * bin/MakeProjectCreator/config/acesocketslib_for_tao.mpb:
        * bin/MakeProjectCreator/config/acethreadslib_for_tao.mpb:
        * bin/MakeProjectCreator/config/acetimerlib_for_tao.mpb:

          Removed smaller ace_for_tao subsets.  Only a single ace_for_tao
          subset library was originally intended.

        * ace/Activation_Queue.h:
        * ace/Barrier.h:
        * ace/Based_Pointer_Repository.h:
        * ace/Codecs.h:
        * ace/Dev_Poll_Reactor.h:
        * ace/File_Lock.h:
        * ace/LSOCK.h:
        * ace/LSOCK_Acceptor.h:
        * ace/LSOCK_CODgram.h:
        * ace/LSOCK_Connector.h:
        * ace/LSOCK_Dgram.h:
        * ace/LSOCK_Stream.h:
        * ace/MEM_Acceptor.h:
        * ace/MEM_Addr.h:
        * ace/MEM_Connector.h:
        * ace/MEM_IO.h:
        * ace/MEM_SAP.h:
        * ace/MEM_Stream.h:
        * ace/MMAP_Memory_Pool.h:
        * ace/Mem_Map.h:
        * ace/Method_Request.h:
        * ace/Msg_WFMO_Reactor.h:
        * ace/Multihomed_INET_Addr.h:
        * ace/PI_Malloc.h:
        * ace/Pagefile_Memory_Pool.h:
        * ace/Priority_Reactor.h:
        * ace/Process.h:
        * ace/Process_Manager.h:
        * ace/Process_Semaphore.h:
        * ace/RW_Process_Mutex.h:
        * ace/SOCK_CODgram.h:
        * ace/SOCK_Dgram_Bcast.h:
        * ace/SOCK_Dgram_Mcast.h:
        * ace/SOCK_SEQPACK_Acceptor.h:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/SOCK_SEQPACK_Connector.h:
        * ace/SV_Shared_Memory.h:
        * ace/Sbrk_Memory_Pool.h:
        * ace/Shared_Memory.h:
        * ace/Shared_Memory_MM.h:
        * ace/Shared_Memory_Pool.h:
        * ace/Shared_Memory_SV.h:
        * ace/Thread_Semaphore.h:
        * ace/UNIX_Addr.h:

          Removed ace_for_tao subset-specific export macro calls and
          include directives.  They are no longer needed.

        * ace/ace_for_tao.mpc:

          Added a number of source files required to build the
          Notification Service and its tests.

        * Kokyu/tests/DSRT_MIF/DSRT_MIF.mpc:
        * ace/QoS/qos.mpc:
        * apps/soreduce/soreduce.mpc:
        * bin/MakeProjectCreator/config/ftclientorb.mpb:
        * bin/MakeProjectCreator/config/htbp.mpb:
        * bin/MakeProjectCreator/config/ifrservice.mpb:
        * bin/MakeProjectCreator/config/naming_serv.mpb:
        * bin/MakeProjectCreator/config/portablegroup.mpb:
        * bin/MakeProjectCreator/config/rtevent_serv.mpb:
        * bin/MakeProjectCreator/config/ssl.mpb:
        * bin/MakeProjectCreator/config/strategies.mpb:
        * bin/MakeProjectCreator/config/tmcast.mpb:
        * examples/APG/Active_Objects/active_objects.mpc:
        * examples/APG/Config/config.mpc:
        * examples/APG/Misc_IPC/misc_ipc.mpc:
        * examples/APG/Naming/naming.mpc:
        * examples/APG/Proactor/proactor.mpc:
        * examples/APG/Processes/processes.mpc:
        * examples/APG/Shared_Memory/shared_memory.mpc:
        * examples/APG/Streams/streams.mpc:
        * examples/APG/Svc_Config/svc_config.mpc:
        * examples/APG/ThreadPools/threadpools.mpc:
        * examples/APG/ThreadSafety/threadsafety.mpc:
        * examples/ASX/Event_Server/Event_Server/Event.mpc:
        * examples/ASX/UPIPE_Event_Server/UPIPE_Event.mpc:
        * examples/C++NPv1/C++NPv1.mpc:
        * examples/C++NPv2/C++NPv2.mpc:
        * examples/Connection/blocking/Connection_Blocking.mpc:
        * examples/Connection/misc/Connection_Misc.mpc:
        * examples/Connection/non_blocking/Connection_Non_Blocking.mpc:
        * examples/IPC_SAP/DEV_SAP/reader/dev_sap_reader.mpc:
        * examples/IPC_SAP/DEV_SAP/writer/dev_sap_writer.mpc:
        * examples/IPC_SAP/FIFO_SAP/fifo_sap.mpc:
        * examples/IPC_SAP/FILE_SAP/file_sap_client.mpc:
        * examples/IPC_SAP/SOCK_SAP/sock_sap.mpc:
        * examples/IPC_SAP/UPIPE_SAP/UPIPE_SAP.mpc:
        * examples/Mem_Map/IO-tests/Mem_Map_IO_Tests.mpc:
        * examples/Mem_Map/file-reverse/Mem_Map_File_Reverse.mpc:
        * examples/Misc/Misc.mpc:
        * examples/Naming/Naming.mpc:
        * examples/OS/Process/OS_Process.mpc:
        * examples/Reactor/Dgram/Reactor_Dgram.mpc:
        * examples/Reactor/FIFO/Reactor_FIFO.mpc:
        * examples/Reactor/Proactor/Proactor.mpc:
        * examples/Service_Configurator/IPC-tests/client/Svc_Cfg_IPC_Client.mpc:
        * examples/Shared_Malloc/Shared_Malloc.mpc:
        * examples/Shared_Memory/Shared_Memory.mpc:
        * examples/Synch/Synch.mpc:
        * examples/System_V_IPC/SV_Message_Queues/SV_Message_Queues.mpc:
        * examples/System_V_IPC/SV_Semaphores/SV_Semaphores.mpc:
        * examples/Threads/Threads.mpc:
        * performance-tests/SCTP/SCTP.mpc:
        * tests/tests.mpc:

          Added "avoids += ace_for_tao" to projects that require features
          of ACE not found in the ace_for_tao subset.  Addresses link-time
          errors.

Fri Nov 25 12:45:20 2005  Steve Huston  <shuston@riverace.com>

        * tests/Proactor_Test.cpp:
        * tests/Proactor_Test_IPV6.cpp: Corrected ACE_Atomic_Op instantiations
          for size_t.

Fri Nov 25 10:00:21 2005  Steve Huston  <shuston@riverace.com>

        * ace/POSIX_Proactor.cpp (ACE_POSIX_Asynch_Timer): Don't explicitly
          call ACE_Asynch_Result_Impl() - it's pointless and isn't listed
          as an ancestor of this class.
          (create_asynch_timer): Use a ACE_POSIX_Asynch_Timer * to match
          the created object type.

        * ace/POSIX_Asynch_IO.cpp: Remove explicit calls to base-class
          constructors from all constructors. It's not needed and seems to
          cause problems on 64-bit code, at least on AIX.

        * include/makeinclude/platform_aix_ibm.GNU: AIX now uses the XPG4 tail
          command syntax, requiring "-n 1" to read the last line; refuses "-1".
          Thanks to Mike Knight <mike dot knight at compuware dot com> for
          alerting us to this.

        * THANKS: Added Mike Knight to the Hall of Fame.

Thu Nov 24 20:00:37 2005  Simon McQueen  <sm@prismtech.com>

        * bin/tao_other_tests.lst:

          Scheduled bug #2316 regression.

Thu Nov 24 14:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_icc.GNU:
          For Intel C++ 9.1 also disable warning 1684

Thu Nov 24 01:38:57 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * bin/fuzz.pl:

          Added a test that flags common versioned namespace related
          errors/misuses.

        * bin/MakeProjectCreator/config/global.features:

          Disable versioned namespace support by default.

        * ace/Atomic_Op.h:
        * ace/Auto_Ptr.h:
        * ace/Barrier.h:
        * ace/Base_Thread_Adapter.h:
        * ace/CDR_Stream.h:
        * ace/Cleanup_Strategies_T.cpp:
        * ace/Dev_Poll_Reactor.h:
        * ace/Functor_String.h:
        * ace/High_Res_Timer.cpp:
        * ace/LSOCK_Connector.inl:
        * ace/Local_Name_Space_T.h:
        * ace/Log_Msg.h:
        * ace/Malloc.h:
        * ace/Malloc_Allocator.h:
        * ace/Message_Queue.h:
        * ace/OS_Memory.h:
        * ace/OS_NS_Thread.cpp:
        * ace/OS_NS_Thread.h:
        * ace/OS_NS_errno.h:
        * ace/OS_NS_math.inl:
        * ace/OS_NS_netdb.cpp:
        * ace/OS_NS_netdb.h:
        * ace/OS_NS_sys_msg.h:
        * ace/OS_NS_time.h:
        * ace/OS_main.cpp:
        * ace/Object_Manager.h:
        * ace/Parse_Node.cpp:
        * ace/Ping_Socket.cpp:
        * ace/Proactor.cpp:
        * ace/Proactor.h:
        * ace/Profile_Timer.cpp:
        * ace/Profile_Timer.inl:
        * ace/SOCK_Dgram_Mcast.cpp:
        * ace/SOCK_Dgram_Mcast.h:
        * ace/SOCK_Dgram_Mcast.inl:
        * ace/SPIPE_Stream.h:
        * ace/Select_Reactor_T.cpp:
        * ace/Service_Config.h:
        * ace/Service_Templates.cpp:
        * ace/Sock_Connect.cpp:
        * ace/Svc_Conf_l.cpp:
        * ace/Svc_Conf_y.cpp:
        * ace/Thread_Manager.cpp:
        * ace/Time_Value.h:
        * ace/Timeprobe.h:
        * ace/Timer_Hash_T.h:
        * ace/Timer_List.cpp:
        * ace/Timer_Queue.cpp:
        * ace/config-lite.h:
        * ace/SSL/SSL_Asynch_BIO.cpp:
        * ace/SSL/SSL_Context.cpp:

          Corrected build errors in versioned namespace builds.

Wed Nov 23 19:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/wrapper_macros.GNU:
          Set xerces to 1 by default if it is not set

Wed Nov 23 11:00:46 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * docs/ACE-guidelines.html: Updated the guidelines to explain how
          TAO binary options should be specified, i.e. as the integral
          values 0 or 1.

Wed Nov 23 09:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_icc.GNU:
          When optimize=0, disable floating point optimizations. This way we
          don't get floating point overflows in the TAO IDL test. If someone
          enables optimize then we just let the compiler optimize things and
          we could get overflows.

Tue Nov 22 17:42:13 2005  Kobi Cohen-Arazi  <kobi.cohenarazi at gmail dot com>

        * ace/Select_Reactor_T.cpp (dispatch):
          Fixed a bug which derived from bug #1890. active_handle_count
          must be updated when state is changed. Every time some handler
          remove add or suspend itself of another handle, state is
          changed, and that should be reflected in the
          active_handle_count.  Thanks for Vadim Iosevich <viosevich at
          gmail dot com>.

Tue Nov 22 18:27:30 2005  Steve Huston  <shuston@riverace.com>

        * m4/tls.m4: Correct botched assignment to ace_TLS_CPPFLAGS when
          additional Kerberos directory is needed.

Tue Nov 22 03:33:14 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * ace/ace_configuration_for_tao.mpc:

          Some groups require ACE_Configuration. This MPC should probably
          help those groups with a smaller library to use instead of
          pulling in the whole ACE library.

Tue Nov 22 01:43:52 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/portablegroup.mpb:

          Rather than disable this project in the ACE_FOR_TAO
          configuration, inherit from acesocketslib_for_tao to allow it to
          be used.

Tue Nov 22 09:40:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * NEWS:

          Added Stoyan Paunov and Arvind S. Krishna entries.

Mon Nov 21 23:56:06 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ace_for_tao.mpc:
        * ace/ace_threads_for_tao.mpc:

          Moved ACE_crc32.cpp to ace_threads_for_tao subset within
          Windows compiler conditional.  It is only needed by the
          SV_Semaphore_Simple listed within that conditional block.

        * ace/ace_timer_for_tao.mpc:
        * bin/MakeProjectCreator/config/acetimerlib_for_tao.mpb:

          New ACE_FOR_TAO timer library subset.

        * ace/Obchunk.cpp:
        * ace/Obchunk.h:
        * ace/Obchunk.inl:
        * ace/Object_Manager.cpp:
        * ace/Object_Manager.h:
        * ace/Object_Manager.inl:
        * ace/Object_Manager_Base.cpp:
        * ace/Object_Manager_Base.h:
        * ace/Obstack.cpp:
        * ace/Obstack.h:
        * ace/Obstack_T.cpp:
        * ace/Obstack_T.h:
        * ace/Obstack_T.inl:

          Added missing versioned namespace support.

        * ace/SSL/SSL_Context.h:

          Removed ACE_SSL_locking_callback prototype since it is not part
          of the public interface, and since a prototype (and definition)
          already exists in the SSL_Context.cpp implementation file.

          Removed static class members and placed them in anonymous
          namespace in the implementation file.

        * ace/SSL_Context.cpp:

          Static class members are now in an anonymous namespace.  There's
          no need to expose them in the corresponding header.

          Mangle global SSL callback functions with the appropriate
          versioned namespace name, if enabled.

          Improved exception safety of lock memory management and
          lock acquisition/release by taking advantage of an
          ACE_Auto_Basic_Array_Ptr and ACE_Mutex, respectively.

        * Kokyu/tests/DSRT_MIF/DSRT_MIF.mpc:
        * apps/drwho/drwho.mpc:
        * apps/soreduce/soreduce.mpc:
        * examples/APG/Active_Objects/active_objects.mpc:
        * examples/APG/Misc_IPC/misc_ipc.mpc:
        * examples/APG/Shared_Memory/shared_memory.mpc:
        * examples/APG/ThreadPools/threadpools.mpc:
        * examples/APG/ThreadSafety/threadsafety.mpc:
        * examples/ASX/Event_Server/Event_Server/Event.mpc:

          Inherit from the appropriate ACE_FOR_TAO subset MPC base
          project.  Addresses unresolved symbol errors.

Tue Nov 22 09:33:30 (IST) 2005  Bala Natarajan <bala_natarajan@symantec.com>

        * bin/MakeProjectCreator/config/portablegroup.mpb:

          Do not build in ACE_FOR_TAO configuration.

Tue Nov 22 09:27:30 (IST) 2005  Bala Natarajan <bala_natarajan@symantec.com>

        * ace/OS_NS_sys_utsname.cpp:
        * ace/OS_NS_sys_utsname.h:
        * ace/OS_NS_sys_utsname.inl:

          Uninlined uname (). Compiling it on Solaris 9 with Studio9,
          and inline enabled is a pain. DOC's scoreboard uses inline=0
          on corona, and hence doesn't show the error. Uninlining solves
          the problem.

        * ace/ace_for_tao.mpc:

          Added a few files to be built in ACE_FOR_TAO config. This fixes
          many errors in gperf and orbsvcs on Solaris.

Mon Nov 21 19:16:30 2005  Steve Huston  <shuston@riverace.com>

        * m4/tls.m4: Make sure we don't lose the user's specified OpenSSL
          location when searching for Kerberos files.

Mon Nov 21 13:26:53 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * NEWS:

          Updated NEWS file to reflect additions to the latest beta.

Mon Nov 21 11:00:02 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/cidlc.mpb

        Added a verbatim section for gnuace targets to pull in the
        boost_filesystem and boost_regex libraries.

Mon Nov 21 08:16:29 2005  Steve Huston  <shuston@riverace.com>

        * ace/SSL/SSL_Context.h: Removed "::" from friend declaration to
          fix compile errors on Solaris, Forte 6 Update 2. (Sun C++ 5.4).

Fri Nov 18 23:07:09 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * include/makeinclude/wrapper_macros.GNU:

          Applied a syntax submitted by Martin Corino <mcorino@rememdy.nl>
          to the setting of $LEX and $YACC. The existing syntax set
          these variables only if they were not already set, but
          unfortunately, GNU make sets them by default. For DOC
          Group purposes, they need to be set to 'flex' and
          'bison' respectively.

Fri Nov 18 17:22:19 2005  Steve Huston  <shuston@riverace.com>

        * protocols/ace/RMCast/Template_Instantiations.cpp: Completed
          template instantiations.

        * protocols/ace/RMCast/Makefile.am:
        * protocols/ace/TMCast/Template_Instantiations.cpp: Explicit
          instantiations needed for TMCast.

        * tests/Based_Pointer_Test.cpp: Added explicit instantiation for
          ACE_Malloc_T<ACE_MMAP_MEMORY_POOL, ACE_Null_Mutex,
          ACE_PI_Control_Block>.

        * tests/DLList_Test.cpp: #include "ace/Malloc_T.h" rather than
          "ace/Malloc.h" to pick up ACE_Allocator<> before the explicit
          instantiation needs it.

Fri Nov 18 14:16:45 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/WIN32_Asynch_IO.cpp (shared_read): Added a new case for
          ERROR_MORE_DATA, which isn't actually an error after all.
          Thanks to Yongming Wang <wangym@gmail.com> for contributing
          this.

Fri Nov 18 10:39:01 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/cidlc.mpb

          Added rest of change intended for:
          Thu Nov 17 18:08:45 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

Thu Nov 17 18:08:45 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * bin/MakeProjectCreator/config/cidlc.mpb:

          Fix submitted by Will Otte <wotte@dre.vanderbilt.edu> intended
          to be part of

          Tue Nov 15 12:44:37 2005  William Otte  <wotte@dre.vanderbilt.edu>

Thu Nov 16 13:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/compiler.bor:
          When VCL is defined, set different startup obj and also define
          PACKAGES

        * include/makeinclude/build_exe.bor:
          Added PACKAGES to the compiler flags

Thu Nov 16 12:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/compiler.bor:
          Added extra linker paths

        * bin/MakeProjectCreator/config/vcl.mpb:
          New base project, usable for building VCL application with Borland
          C++ Builder

        * bin/MakeProjectCreator/config/global.features:
          Disable vcl by default

Wed Nov 16 15:48:29 2005  Steve Huston  <shuston@riverace.com>

        * ace/Hash_Map_Manager_T.h: For Sun CC 5.4 and earlier with explicit
          template instantiation, can't prevent seeing operator= or
          ACE_Hash_Map_Manager explicit templates won't compile. Ick.

        * apps/JAWS3/jaws3/Templates.cpp: Adjusted ACE_Reactor_Token_T type
          usage. Follow-up change to match those in:
          Fri Aug 26 18:01:31 2005  Steve Huston  <shuston@riverace.com>

        * protocols/ace/RMCast/Template_Instantiations.cpp: Added more needed
          instantiations.

Wed Nov 16 14:12:08 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/tao_orb_tests.lst:

          Disabled CSD tests on VxWorks builds.

Tue Nov 15 23:41:39 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Service_Config.cpp (ACE_FACTORY_DEFINE):

          Moved this macro call outside of the versioned namespace.  It
          should be in the global namespace.

        * ace/Svc_Conf.h:
        * ace/Svc_Conf.l:
        * ace/Svc_Conf.y:
        * ace/Svc_Conf_Lexer_Guard.cpp:
        * ace/Svc_Conf_Lexer_Guard.h:
        * ace/Svc_Conf_l.cpp:
        * ace/Svc_Conf_y.cpp:

          Added missing versioned namespace macros.

Tue Nov 15 15:41:19 2005  Steve Huston  <shuston@riverace.com>

        * NEWS: Added WinCE, VC8, ACE_Dev_Poll_Reactor, and ACE_RB_Tree notes.

        * bin/make_release: Generate VC8 files for both Win32 and WinCE.
          Since VC8 uses the same suffixes as VC71, the Win32 files have
          _vc8 appended, and WinCE files have _WinCE appended. WinCE files
          are generated with feature uses_wchar=1, vc8 uses defaults.

        * docs/CE-status.txt: Added some info on CE support under VC8.

Tue Nov 15 12:44:37 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/cidlc.mpb

        Added a directive to remove runtime dependancy on VC71
        runtime libraries on Windows.  Thanks to Kitty for suggesting
        the fix.

Tue Nov 15 11:31:41 2005  Steve Huston  <shuston@riverace.com>

        * ace/Atomic_Op.{h inl} (ACE_Atomic_Op (TYPE c)): Changed the signature
          to be const TYPE& for long and unsigned long. This aligns it with the
          ACE_Atomic_Op template's (const TYPE&) constructor signature and
          resolves undefined references to it in the explicit template builds.

        * ace/Event_Handler.cpp: Added explicit instantiation of
          ACE_Atomic_Op<ACE_SYNCH_MUTEX,long> when ACE_HAS_BUILTIN_ATOMIC_OP
          is not defined. This covers the event handler reference counting
          use of ACE_Atomic_Op.

        * ace/Malloc_Instantiations.cpp: Corrected header file inclusions.

        * protocols/ace/RMCast/Makefile.am:
        * protocols/ace/RMCast/Template_Instantiations.cpp: New file to
          hold all explicit template instantiations needed for RMCast.
          This is a temporary file, only for the ACE 5.5 release. Then it
          can be expunged with the test of the explicit template
          instantiation support.

Tue Nov 15 09:31:29 2005  Steve Huston  <shuston@riverace.com>

        * ace/Dev_Poll_Reactor.{h cpp}: Add an optional decr_refcnt parameter
          to ACE_Dev_Poll_Rector_Repository::unbind () to control whether or
          not the unbound event handler's refcount is to be decremented.
          When registering a handler, remember to increment its refcount if
          needed; conversely, decrement it when all events are removed.
          Be sure to initialize epoll_event structs.

        * tests/Dev_Poll_Reactor_Test.cpp (handle_input): Fix buffer overrun.

Tue Nov 15 13:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_stdio.{cpp.inl}:
          Fixed compile errors in BCB Unicode build

Tue Nov 15 07:28:35 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Service_Config.cpp (initialize): Added a check to avoid
          overwriting a service that's already installed without having it
          explicitly removed first.  Thanks to Domingos Monteiro <d dot
          monteiro at netia dot net> for this fix.

Mon Nov 14 08:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/WIN32_Asynch_IO.cpp:
        * ace/Asynch_Acceptor.cpp:
          Removed check for >= BCB3

        * ace/OS_NS_sys_stat.inl:
          BCB has the normal umask

        * ace/OS_NS_stdio.inl:
          Replaced c-style cast with C++ cast

        * ace/os_include/os_string.h:
          Some BCB specific defines are not needed with BCB6 or newer

Mon Nov 14 07:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/boost_unit_test.mpb:
          Removed this file, not used anymore

        * bin/MakeProjectCreator/config/cidlc.mpb:
          Use base projects for boost_filesystem, boost_regex and
          exceptions, will resolve the link errors in the icc
          linux build

Fri Nov 11 16:04:44 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Emit "idl_stubs" target for IDL projects defining MPC's
          custom_only variable.  Fixes problems with some of the
          scoreboard statistics builds.

Fri Nov 11 11:06:31 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ACEXML/common/common.mpc:
        * ace/ACE_Codecs_export.h:
        * ace/Codecs.h:
        * ace/ace.mwc:
        * ace/ace_codecs_for_tao.mpc:
        * apps/JAWS/server/server.mpc:
        * apps/JAWS3/jaws3/jaws3.mpc:
        * examples/Service_Configurator/IPC-tests/server/Svc_Cfg_IPC_Server.mpc:
        * examples/Threads/Threads.mpc:
        * examples/Web_Crawler/Web_Crawler.mpc:
        * netsvcs/clients/Naming/Client/Client.mpc:
        * netsvcs/clients/Naming/Dump_Restore/Dump_Restore.mpc:
        * netsvcs/lib/lib.mpc:
        * performance-tests/Misc/Misc.mpc:
        * performance-tests/SCTP/SCTP.mpc:
        * performance-tests/Server_Concurrency/Leader_Follower/Svr_Conc_Leader_Follower.mpc:
        * performance-tests/Server_Concurrency/Queue_Based_Workers/Svr_Conc_Queue_Based_Workers.mpc:
        * performance-tests/Synch-Benchmarks/Base_Test/Synch_Benchmarks_Base_Test.mpc:
        * performance-tests/Synch-Benchmarks/Perf_Test/Synch_Benchmarks_Perf_Test.mpc:
        * performance-tests/TCP/TCP.mpc:
        * performance-tests/UDP/UDP.mpc:
        * tests/tests.mpc:

          Addressed some "ace_for_tao" link-time failures.

Fri Nov 11 09:21:53 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * include/makeinclude/wrapper_macros.GNU:

          Added missing "ace_for_tao" support.  Addresses "ace_for_tao"
          build errors in GNU Make based builds.

Fri Nov 11 12:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_sunos5_g++.GNU:
          Removed very old note

Thu Nov 10 09:05:58 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Added a template variable, libname_prefix, that can be set to
          prefix all library names (sharedname, staticname and libs).  Note
          that lit_libs and pure_libs are not affected.

Thu Nov 10 07:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.1.h:
          Added ACE_HAS_SNPRINTF

Wed Nov  9 19:44:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/acecodecslib_for_tao.mpb:
        * ace/ace_codecs_for_tao.mpc:
        * ace/QoS/qos.mpc:
        * ACEXML/common/common.mpc:

          Fixed "ace_for_tao" subset related unresolved symbol errors.

Wed Nov  9 17:05:59 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * ace/config-macosx-tiger.h

        Corrected wchar support for Tiger.

        * include/makeinclude/platform_macosx_tiger_gcc3.3.GNU
        * include/makeinclude/platform_macosx_tiger_gcc4.GNU

        Removed the versioned platform_macros because there were no
        significant changes needed to support GCC3.3 on OS X.

        * include/makeinclude/platform_macosx_tiger.GNU

        Merged platform_macros file.  Set CC and CXX to the desired
        compiler if you wish to use the non-default compiler.

Tue Nov  8 15:27:25 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * ace/config-macosx-tiger.h

        Fixed size of long double for Mac OS X Tiger with GCC 3.3.

Mon Nov  7 16:27:12 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/csd_framework.mpb
        * bin/MakeProjectCreator/config/notifytest.mpb
        * bin/MakeProjectCreator/config/rteventlogadmin.mpb

        Fixes for linking errors on OS X.

Mon Nov  7 15:24:30 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * include/makeinclude/platform_macosx_tiger_gcc3.3.GNU

        Added a macros file for Tiger with GCC 3.3.

Mon Nov  7 14:45:05 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ace/Stats.h:

          Made private section of class ACE_Stats protected, for
          convenient subclassing.

Mon Nov  7 09:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/compiler.bor:
          Added -L$(BCB)\lib\psdk always to the linker flags

Sun Nov  6 21:19:44 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * ace/ace_sockets_for_tao.mpc:

          Fixed another bug with the MPC file.

        * protocols/ace/HTBP/HTBP.mpc:

          Reverted the avoids declaration.

Sun Nov  6 21:02:17 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * ace/ace_for_tao.mpc:
        * ace/ace_threads_for_tao.mpc:
        * protocols/ace/HTBP/HTBP.mpc:
        * protocols/ace/RMCast/RMCast.mpc:
        * protocols/ace/TMCast/TMCast.mpc:
        * protocols/examples/RMCast/Send_Msg/Send_Msg.mpc:
        * protocols/tests/RMCast/RMCast.mpc:

          Fixed subtle errors with ace_for_tao builds.

Sat Nov  5 13:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/APG/Shared_Memory/Hash_Map.cpp:
          Replaced MAP with HASH_MAP to fix compile problems with VxWorks 6.1

Sat Nov  5 13:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Cache_Map_Manager_T.{h,cpp,inl}:
          Replaced MAP_TYPE with CMAP_TYPE, MAP_TYPE is also used on some
          platforms already

        * include/makeinclude/compiler.bor:
          Fixed typo

Fri Nov  4 09:18:17 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Dev_Poll_Reactor.h (Token_Guard):

          Fixed incorrect unimplemented constructor related error that was
          introduced when removing ACE_UNIMPLEMENTED_FUNC macro usage.

Fri Nov  4 14:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/compiler.bor:
          Make sure that we always add $(BCB)\lib to the linker flags

Fri Nov  4 12:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Lazy_Map_Manager_Test.cpp:
          Changed MAP to LAZY_MAP

        * tests/Map_Test.cpp:
          Changed MAP to TEST_MAP

Fri Nov  4 12:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Cache_Map_Manager_T.{h,cpp,inl}:
          Changed MAP to MAP_TYPE to resolve conflicts with VxWorks 6.1
          MAP define

Fri Nov  4 11:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.inl:
          For VxWorks 6.1 also include os_string.h to get swab

Fri Nov  4 10:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Capabilities.{h,cpp}:
          Changed MAP to CAPABILITIES_MAP. VxWorks 6.1 defines the cpu
          type MAP which results in a compile error

        * ace/os_include/sys/os_un.h:
          Only define the struct sockaddr_un with VxWorks versions older
          then 6.1

Fri Nov  4 10:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-vxworks6.1.h:
        * include/makeinclude/platform_vxworks6.1.GNU:
          New files for VxWorks 6.1. This is just a first draft version, a lot
          of porting work has to be done

        * ace/OS_NS_stdlib.cpp:
          Fixed variable not used warning with VxWorks 6.1

Fri Nov  4 10:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.h:
          Only define VX_FP_TASK when it is not defined yet

Fri Nov  4 08:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Global_Macros.h:
          Removed check for BCB3, that is ancient

Thu Nov  3 12:34:30 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Service_Config.h (ACE_DYNAMIC_SERVICE_DIRECTIVE): Added a
          missing '\' at near the end of a macro.  Thanks to Lothar
          Werzinger for this fix.

Thu Nov  3 09:16:23 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Activation_Queue.h:
        * ace/Atomic_Op.h:
        * ace/Condition_Recursive_Thread_Mutex.h:
        * ace/DLL.h:
        * ace/DLL_Manager.h:
        * ace/Dev_Poll_Reactor.h:
        * ace/Framework_Component.h:
        * ace/Get_Opt.h:
        * ace/Mem_Map.h:
        * ace/Message_Queue.cpp:
        * ace/Message_Queue.h:
        * ace/Method_Request.h:
        * ace/Null_Mutex.h:
        * ace/PI_Malloc.h:
        * ace/Process.h:
        * ace/Read_Buffer.h:
        * ace/Select_Reactor.h:
        * ace/Stats.h:
        * ace/TP_Reactor.h:

          Removed unnecessary uses of ACE_UNIMPLEMENTED_FUNC macro.  It is
          only meant to be used for private unimplemented member functions
          in class templates.

        * ace/Versioned_Namespace.h:

          Clarified preprocessor error message.

Wed Nov  2 09:19:04 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ACE.h (strdelete):

          Declare wchar version of ACE::strdelete() with
          ACE_NAMESPACE_INLINE_FUNCTION macro since it is now inlined.
          Addresses duplicate definition errors in wchar-enabled builds.

Wed Nov  2 08:51:29 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.inl:

          Removed ACE_OutputCDR_Auto_Reset. Firstly
          ACE_Utils::Auto_Functor should be used and secondly such classes
          don't serve any purpose beyond Output_CDR.

Tue Nov  1 22:19:03 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Makefile.am (nobase_include_HEADERS):

          Added missing "Versioned_Namespace.h" header.

        * ace/Versioned_Namespace.h:

          Clarified preprocessor error message.

Tue Nov  1 14:28:51 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * ace/config-macosx-tiger.h

        Some changes to fix compile errors in JAWS.  Thanks to Johnny for
        suggesting a fix.

Tue Nov  1 15:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html:
          Updated supported platforms

Tue Nov  1 12:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
        * bin/tao_other_tests.lst:
          Moved Bug_2074_Regression to orbsvcs

Mon Oct 31 13:38:07 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/msvc_static_order.lst:

          Moved the TAO/tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test_Lib
          before TAO/tests/Collocation/Collocation_Test_Stub. This should
          resolve the TP_Foo_* libs compilation errors on static build.

Mon Oct 31 09:54:18 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/Makefile.am:
          Removed Synch_Options.inl and TSS_Adapter.inl.

Mon Oct 31 07:55:57 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Registry.cpp (STRING_SEPARATOR):
        * ace/Registry.h (STRING_SEPARATOR):

          Reintroduced this string as a static class member.  It is also
          used outside of the ACE_Registry class in
          ACE_Registry_Name_Space.  Fixes an unresolved symbol error in
          Borland builds.

Mon Oct 31 14:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Makefile.am:
          Removed Service_Manager.inl

Mon Oct 31 13:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added Bug_2084_Regression

Mon Oct 31 12:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added TAO/tests/Bug_2074_Regression/run_test.pl to the list

Mon Oct 31 10:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/pre.h:
          Reverted change below, makes it much easier to use ACE from
          application projects
          Fri Oct 28 10:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

Mon Oct 31 09:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/gethrtime.cpp:
        * ace/Base_Thread_Adapter.cpp:
          Fixed fuzz errors

Mon Oct 31 08:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_static_order.lst:
          Moved CSD test lib down, let us see the impact on the vc build

Mon Oct 31 06:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/UPIPE_Connector.cpp:
          Added missing include for Linux builds

Sun Oct 30 08:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Task.h:
          Fixed gcc4 compile error

Fri Oct 28 16:07:45 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/SSL/SSL_Context.cpp (ACE_SSL_locking_callback):
          (ACE_SSL_thread_id):

          Removed duplicate definitions.

Fri Oct 28 16:42:12 2005  Don Busch  <busch_d@ociweb.com>

        * bin/MakeProjectCreator/config/messaging_optional.mpb

          Add "after += Messaging" to ensure that CosNaming_Serv and
          CosEvent_Serv always build after Messaging

Fri Oct 28 14:28:13 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Map_Manager.h:

          Include "ace/Default_Constants.h" to pull in
          ACE_DEFAULT_MAP_SIZE definition.

Fri Oct 28 10:42:32 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Copy_Disabled.cpp
        * ace/Copy_Disabled.h:
        * ace/Makefile.am (libACE_la_SOURCES):
        * ace/ace.mpc:

          Reinstituted Copy_Disabled.cpp.  Addresses unresolved symbol
          link-time errors.

Fri Oct 28 09:23:11 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Reverse_Lock_T.h (ACE_Acquire_Method):

          Fixed typo.

Fri Oct 28 14:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Select_Reactor_Base.cpp:
          Fixed possible unitialized warning

Fri Oct 28 10:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/pre.h:
          Removed several arguments for the option push, these are passed
          from the commandline already

Fri Oct 28 07:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-linux-common.h:
          Added ACE_HAS_UALARM

Fri Oct 28 00:01:06 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ACE.cpp:
        * ace/ACE.h:
        * ace/ACE.inl:
        * ace/ACE_crc32.cpp:
        * ace/ACE_crc_ccitt.cpp:
        * ace/ARGV.cpp:
        * ace/ARGV.h:
        * ace/ARGV.inl:
        * ace/ATM_Acceptor.cpp:
        * ace/ATM_Acceptor.h:
        * ace/ATM_Acceptor.inl:
        * ace/ATM_Addr.cpp:
        * ace/ATM_Addr.h:
        * ace/ATM_Addr.inl:
        * ace/ATM_Connector.cpp:
        * ace/ATM_Connector.h:
        * ace/ATM_Connector.inl:
        * ace/ATM_Params.cpp:
        * ace/ATM_Params.h:
        * ace/ATM_Params.inl:
        * ace/ATM_QoS.cpp:
        * ace/ATM_QoS.h:
        * ace/ATM_QoS.inl:
        * ace/ATM_Stream.cpp:
        * ace/ATM_Stream.h:
        * ace/ATM_Stream.inl:
        * ace/Acceptor.cpp:
        * ace/Acceptor.h:
        * ace/Activation_Queue.cpp:
        * ace/Activation_Queue.h:
        * ace/Activation_Queue.inl:
        * ace/Active_Map_Manager.cpp:
        * ace/Active_Map_Manager.h:
        * ace/Active_Map_Manager.inl:
        * ace/Active_Map_Manager_T.cpp:
        * ace/Active_Map_Manager_T.h:
        * ace/Active_Map_Manager_T.inl:
        * ace/Addr.cpp:
        * ace/Addr.h:
        * ace/Addr.inl:
        * ace/Arg_Shifter.cpp:
        * ace/Arg_Shifter.h:
        * ace/Argv_Type_Converter.cpp:
        * ace/Argv_Type_Converter.h:
        * ace/Argv_Type_Converter.inl:
        * ace/Array_Base.cpp:
        * ace/Array_Base.h:
        * ace/Array_Base.inl:
        * ace/Array_Map.cpp:
        * ace/Array_Map.h:
        * ace/Array_Map.inl:
        * ace/Asynch_Acceptor.cpp:
        * ace/Asynch_Acceptor.h:
        * ace/Asynch_Connector.cpp:
        * ace/Asynch_IO.cpp:
        * ace/Asynch_IO.h:
        * ace/Asynch_IO_Impl.cpp:
        * ace/Asynch_IO_Impl.h:
        * ace/Asynch_IO_Impl.inl:
        * ace/Asynch_Pseudo_Task.cpp:
        * ace/Asynch_Pseudo_Task.h:
        * ace/Atomic_Op.cpp:
        * ace/Atomic_Op.h:
        * ace/Atomic_Op.inl:
        * ace/Atomic_Op_T.cpp:
        * ace/Atomic_Op_T.h:
        * ace/Atomic_Op_T.inl:
        * ace/Auto_Event.cpp:
        * ace/Auto_Event.h:
        * ace/Auto_Event.inl:
        * ace/Auto_Functor.cpp:
        * ace/Auto_Functor.h:
        * ace/Auto_Functor.inl:
        * ace/Auto_IncDec_T.cpp:
        * ace/Auto_IncDec_T.h:
        * ace/Auto_IncDec_T.inl:
        * ace/Auto_Ptr.cpp:
        * ace/Auto_Ptr.h:
        * ace/Auto_Ptr.inl:
        * ace/Barrier.cpp:
        * ace/Barrier.h:
        * ace/Barrier.inl:
        * ace/Base_Thread_Adapter.cpp:
        * ace/Base_Thread_Adapter.h:
        * ace/Base_Thread_Adapter.inl:
        * ace/Based_Pointer_Repository.cpp:
        * ace/Based_Pointer_Repository.h:
        * ace/Based_Pointer_T.cpp:
        * ace/Based_Pointer_T.h:
        * ace/Based_Pointer_T.inl:
        * ace/Basic_Stats.cpp:
        * ace/Basic_Stats.h:
        * ace/Basic_Stats.inl:
        * ace/Basic_Types.cpp:
        * ace/Basic_Types.h:
        * ace/Basic_Types.inl:
        * ace/Bound_Ptr.h:
        * ace/Bound_Ptr.inl:
        * ace/CDR_Base.cpp:
        * ace/CDR_Base.h:
        * ace/CDR_Base.inl:
        * ace/CDR_Size.cpp:
        * ace/CDR_Size.h:
        * ace/CDR_Size.inl:
        * ace/CDR_Stream.cpp:
        * ace/CE_Screen_Output.cpp:
        * ace/CE_Screen_Output.h:
        * ace/Cache_Map_Manager_T.cpp:
        * ace/Cache_Map_Manager_T.h:
        * ace/Cache_Map_Manager_T.inl:
        * ace/Cached_Connect_Strategy_T.cpp:
        * ace/Cached_Connect_Strategy_T.h:
        * ace/Caching_Strategies_T.cpp:
        * ace/Caching_Strategies_T.h:
        * ace/Caching_Strategies_T.inl:
        * ace/Caching_Utility_T.cpp:
        * ace/Caching_Utility_T.h:
        * ace/Capabilities.cpp:
        * ace/Capabilities.h:
        * ace/Capabilities.inl:
        * ace/Cleanup.cpp:
        * ace/Cleanup.h:
        * ace/Cleanup.inl:
        * ace/Cleanup_Strategies_T.cpp:
        * ace/Codecs.cpp:
        * ace/Codecs.h:
        * ace/Codeset_IBM1047.cpp:
        * ace/Codeset_IBM1047.h:
        * ace/Codeset_Registry.inl:
        * ace/Condition_Recursive_Thread_Mutex.cpp:
        * ace/Condition_Recursive_Thread_Mutex.h:
        * ace/Condition_T.cpp:
        * ace/Condition_T.h:
        * ace/Condition_T.inl:
        * ace/Condition_Thread_Mutex.cpp:
        * ace/Condition_Thread_Mutex.h:
        * ace/Condition_Thread_Mutex.inl:
        * ace/Configuration.cpp:
        * ace/Configuration.h:
        * ace/Configuration_Import_Export.cpp:
        * ace/Configuration_Import_Export.h:
        * ace/Connection_Recycling_Strategy.cpp:
        * ace/Connection_Recycling_Strategy.h:
        * ace/Connector.cpp:
        * ace/Connector.h:
        * ace/Container_Instantiations.cpp:
        * ace/Containers.cpp:
        * ace/Containers.h:
        * ace/Containers.inl:
        * ace/Containers_T.cpp:
        * ace/Containers_T.h:
        * ace/Containers_T.inl:
        * ace/Copy_Disabled.h:
        * ace/Countdown_Time.cpp:
        * ace/Countdown_Time.h:
        * ace/DEV.cpp:
        * ace/DEV.h:
        * ace/DEV.inl:
        * ace/DEV_Addr.cpp:
        * ace/DEV_Addr.h:
        * ace/DEV_Addr.inl:
        * ace/DEV_Connector.cpp:
        * ace/DEV_Connector.h:
        * ace/DEV_Connector.inl:
        * ace/DEV_IO.cpp:
        * ace/DEV_IO.h:
        * ace/DEV_IO.inl:
        * ace/DLL.cpp:
        * ace/DLL.h:
        * ace/DLL_Manager.cpp:
        * ace/DLL_Manager.h:
        * ace/Date_Time.h:
        * ace/Date_Time.inl:
        * ace/Dev_Poll_Reactor.cpp:
        * ace/Dev_Poll_Reactor.h:
        * ace/Dev_Poll_Reactor.inl:
        * ace/Dirent.h:
        * ace/Dirent.inl:
        * ace/Dirent_Selector.cpp:
        * ace/Dirent_Selector.h:
        * ace/Dirent_Selector.inl:
        * ace/Dump.cpp:
        * ace/Dump.h:
        * ace/Dump_T.cpp:
        * ace/Dump_T.h:
        * ace/Dynamic.cpp:
        * ace/Dynamic.h:
        * ace/Dynamic.inl:
        * ace/Dynamic_Service.cpp:
        * ace/Dynamic_Service.h:
        * ace/Dynamic_Service.inl:
        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Base.h:
        * ace/Env_Value_T.cpp:
        * ace/Env_Value_T.h:
        * ace/Env_Value_T.inl:
        * ace/Event.cpp:
        * ace/Event.h:
        * ace/Event.inl:
        * ace/Event_Handler.cpp:
        * ace/Event_Handler.h:
        * ace/Event_Handler.inl:
        * ace/Event_Handler_T.cpp:
        * ace/Event_Handler_T.h:
        * ace/Event_Handler_T.inl:
        * ace/FIFO.cpp:
        * ace/FIFO.h:
        * ace/FIFO.inl:
        * ace/FIFO_Recv.cpp:
        * ace/FIFO_Recv.h:
        * ace/FIFO_Recv.inl:
        * ace/FIFO_Recv_Msg.cpp:
        * ace/FIFO_Recv_Msg.h:
        * ace/FIFO_Recv_Msg.inl:
        * ace/FIFO_Send.cpp:
        * ace/FIFO_Send.h:
        * ace/FIFO_Send.inl:
        * ace/FIFO_Send_Msg.cpp:
        * ace/FIFO_Send_Msg.h:
        * ace/FIFO_Send_Msg.inl:
        * ace/FILE.cpp:
        * ace/FILE.h:
        * ace/FILE.inl:
        * ace/FILE_Addr.cpp:
        * ace/FILE_Addr.h:
        * ace/FILE_Addr.inl:
        * ace/FILE_Connector.cpp:
        * ace/FILE_Connector.h:
        * ace/FILE_Connector.inl:
        * ace/FILE_IO.cpp:
        * ace/FILE_IO.h:
        * ace/FILE_IO.inl:
        * ace/File_Lock.cpp:
        * ace/File_Lock.h:
        * ace/File_Lock.inl:
        * ace/Filecache.cpp:
        * ace/Filecache.h:
        * ace/FlReactor.cpp:
        * ace/FlReactor.h:
        * ace/Flag_Manip.cpp:
        * ace/Flag_Manip.h:
        * ace/Flag_Manip.inl:
        * ace/Framework_Component.cpp:
        * ace/Framework_Component.h:
        * ace/Framework_Component.inl:
        * ace/Framework_Component_T.cpp:
        * ace/Framework_Component_T.h:
        * ace/Free_List.cpp:
        * ace/Free_List.h:
        * ace/Functor.cpp:
        * ace/Functor.h:
        * ace/Functor.inl:
        * ace/Functor_String.h:
        * ace/Functor_String.inl:
        * ace/Functor_T.cpp:
        * ace/Functor_T.h:
        * ace/Functor_T.inl:
        * ace/Future.cpp:
        * ace/Future.h:
        * ace/Future_Set.cpp:
        * ace/Future_Set.h:
        * ace/Get_Opt.cpp:
        * ace/Get_Opt.h:
        * ace/Get_Opt.inl:
        * ace/Global_Macros.h:
        * ace/Guard_T.cpp:
        * ace/Guard_T.h:
        * ace/Guard_T.inl:
        * ace/Handle_Gobbler.h:
        * ace/Handle_Gobbler.inl:
        * ace/Handle_Ops.cpp:
        * ace/Handle_Ops.h:
        * ace/Handle_Set.cpp:
        * ace/Handle_Set.h:
        * ace/Handle_Set.inl:
        * ace/Hash_Cache_Map_Manager_T.cpp:
        * ace/Hash_Cache_Map_Manager_T.h:
        * ace/Hash_Cache_Map_Manager_T.inl:
        * ace/Hash_Map_Manager.cpp:
        * ace/Hash_Map_Manager.h:
        * ace/Hash_Map_Manager_T.cpp:
        * ace/Hash_Map_Manager_T.h:
        * ace/Hash_Map_Manager_T.inl:
        * ace/Hash_Map_With_Allocator_T.cpp:
        * ace/Hash_Map_With_Allocator_T.h:
        * ace/Hash_Map_With_Allocator_T.inl:
        * ace/Hashable.cpp:
        * ace/Hashable.h:
        * ace/Hashable.inl:
        * ace/High_Res_Timer.cpp:
        * ace/High_Res_Timer.h:
        * ace/High_Res_Timer.inl:
        * ace/ICMP_Socket.cpp:
        * ace/ICMP_Socket.h:
        * ace/ICMP_Socket.inl:
        * ace/INET_Addr.cpp:
        * ace/INET_Addr.h:
        * ace/INET_Addr.inl:
        * ace/IOStream.cpp:
        * ace/IOStream.h:
        * ace/IOStream_T.cpp:
        * ace/IOStream_T.h:
        * ace/IOStream_T.inl:
        * ace/IO_Cntl_Msg.cpp:
        * ace/IO_Cntl_Msg.h:
        * ace/IO_Cntl_Msg.inl:
        * ace/IO_SAP.cpp:
        * ace/IO_SAP.h:
        * ace/IO_SAP.inl:
        * ace/IPC_SAP.cpp:
        * ace/IPC_SAP.h:
        * ace/IPC_SAP.inl:
        * ace/If_Then_Else.h:
        * ace/Init_ACE.cpp:
        * ace/Init_ACE.h:
        * ace/Intrusive_List.cpp:
        * ace/Intrusive_List.h:
        * ace/Intrusive_List.inl:
        * ace/Intrusive_List_Node.cpp:
        * ace/Intrusive_List_Node.h:
        * ace/Intrusive_List_Node.inl:
        * ace/LOCK_SOCK_Acceptor.cpp:
        * ace/LOCK_SOCK_Acceptor.h:
        * ace/LSOCK.cpp:
        * ace/LSOCK.h:
        * ace/LSOCK.inl:
        * ace/LSOCK_Acceptor.cpp:
        * ace/LSOCK_Acceptor.h:
        * ace/LSOCK_CODgram.cpp:
        * ace/LSOCK_CODgram.h:
        * ace/LSOCK_CODgram.inl:
        * ace/LSOCK_Connector.cpp:
        * ace/LSOCK_Connector.h:
        * ace/LSOCK_Connector.inl:
        * ace/LSOCK_Dgram.cpp:
        * ace/LSOCK_Dgram.h:
        * ace/LSOCK_Dgram.inl:
        * ace/LSOCK_Stream.cpp:
        * ace/LSOCK_Stream.h:
        * ace/LSOCK_Stream.inl:
        * ace/Lib_Find.cpp:
        * ace/Lib_Find.h:
        * ace/Local_Memory_Pool.cpp:
        * ace/Local_Memory_Pool.h:
        * ace/Local_Name_Space.cpp:
        * ace/Local_Name_Space.h:
        * ace/Local_Name_Space_T.cpp:
        * ace/Local_Name_Space_T.h:
        * ace/Local_Tokens.cpp:
        * ace/Local_Tokens.h:
        * ace/Local_Tokens.inl:
        * ace/Lock.cpp:
        * ace/Lock.h:
        * ace/Lock.inl:
        * ace/Lock_Adapter_T.cpp:
        * ace/Lock_Adapter_T.h:
        * ace/Lock_Adapter_T.inl:
        * ace/Log_Msg.cpp:
        * ace/Log_Msg.h:
        * ace/Log_Msg_Backend.cpp:
        * ace/Log_Msg_Backend.h:
        * ace/Log_Msg_Callback.cpp:
        * ace/Log_Msg_Callback.h:
        * ace/Log_Msg_IPC.cpp:
        * ace/Log_Msg_IPC.h:
        * ace/Log_Msg_NT_Event_Log.cpp:
        * ace/Log_Msg_NT_Event_Log.h:
        * ace/Log_Msg_UNIX_Syslog.cpp:
        * ace/Log_Msg_UNIX_Syslog.h:
        * ace/Log_Priority.h:
        * ace/Log_Record.cpp:
        * ace/Log_Record.h:
        * ace/Log_Record.inl:
        * ace/Logging_Strategy.cpp:
        * ace/Logging_Strategy.h:
        * ace/MEM_Acceptor.cpp:
        * ace/MEM_Acceptor.h:
        * ace/MEM_Acceptor.inl:
        * ace/MEM_Addr.cpp:
        * ace/MEM_Addr.h:
        * ace/MEM_Addr.inl:
        * ace/MEM_Connector.cpp:
        * ace/MEM_Connector.h:
        * ace/MEM_Connector.inl:
        * ace/MEM_IO.cpp:
        * ace/MEM_IO.h:
        * ace/MEM_IO.inl:
        * ace/MEM_SAP.cpp:
        * ace/MEM_SAP.h:
        * ace/MEM_SAP.inl:
        * ace/MEM_Stream.cpp:
        * ace/MEM_Stream.h:
        * ace/MEM_Stream.inl:
        * ace/MMAP_Memory_Pool.cpp:
        * ace/MMAP_Memory_Pool.h:
        * ace/Makefile.am:
        * ace/Malloc.cpp:
        * ace/Malloc.h:
        * ace/Malloc.inl:
        * ace/Malloc_Allocator.cpp:
        * ace/Malloc_Allocator.inl:
        * ace/Malloc_Base.h:
        * ace/Malloc_Instantiations.cpp:
        * ace/Malloc_T.cpp:
        * ace/Malloc_T.h:
        * ace/Malloc_T.inl:
        * ace/Managed_Object.cpp:
        * ace/Managed_Object.h:
        * ace/Managed_Object.inl:
        * ace/Manual_Event.cpp:
        * ace/Manual_Event.h:
        * ace/Manual_Event.inl:
        * ace/Map.cpp:
        * ace/Map.h:
        * ace/Map_Manager.cpp:
        * ace/Map_Manager.h:
        * ace/Map_Manager.inl:
        * ace/Map_T.cpp:
        * ace/Map_T.h:
        * ace/Map_T.inl:
        * ace/Mem_Map.cpp:
        * ace/Mem_Map.h:
        * ace/Mem_Map.inl:
        * ace/Message_Block.cpp:
        * ace/Message_Block.h:
        * ace/Message_Block.inl:
        * ace/Message_Block_T.cpp:
        * ace/Message_Block_T.h:
        * ace/Message_Block_T.inl:
        * ace/Message_Queue.cpp:
        * ace/Message_Queue.h:
        * ace/Message_Queue.inl:
        * ace/Message_Queue_T.cpp:
        * ace/Message_Queue_T.h:
        * ace/Method_Object.h:
        * ace/Method_Request.cpp:
        * ace/Method_Request.h:
        * ace/Metrics_Cache_T.cpp:
        * ace/Metrics_Cache_T.h:
        * ace/Metrics_Cache_T.inl:
        * ace/Min_Max.h:
        * ace/Module.cpp:
        * ace/Module.h:
        * ace/Module.inl:
        * ace/Msg_WFMO_Reactor.cpp:
        * ace/Msg_WFMO_Reactor.h:
        * ace/Msg_WFMO_Reactor.inl:
        * ace/Multihomed_INET_Addr.cpp:
        * ace/Multihomed_INET_Addr.h:
        * ace/Multihomed_INET_Addr.inl:
        * ace/Multiplexor.h:
        * ace/Multiplexor.inl:
        * ace/Mutex.cpp:
        * ace/Mutex.h:
        * ace/Mutex.inl:
        * ace/NT_Service.cpp:
        * ace/NT_Service.h:
        * ace/NT_Service.inl:
        * ace/Name_Proxy.cpp:
        * ace/Name_Proxy.h:
        * ace/Name_Request_Reply.cpp:
        * ace/Name_Request_Reply.h:
        * ace/Name_Space.cpp:
        * ace/Name_Space.h:
        * ace/Naming_Context.cpp:
        * ace/Naming_Context.h:
        * ace/Node.cpp:
        * ace/Node.h:
        * ace/Notification_Strategy.cpp:
        * ace/Notification_Strategy.h:
        * ace/Notification_Strategy.inl:
        * ace/Null_Barrier.h:
        * ace/Null_Condition.h:
        * ace/Null_Mutex.h:
        * ace/Null_Semaphore.h:
        * ace/OS.h:
        * ace/OS_Errno.cpp:
        * ace/OS_Errno.h:
        * ace/OS_Errno.inl:
        * ace/OS_Log_Msg_Attributes.h:
        * ace/OS_Log_Msg_Attributes.inl:
        * ace/OS_NS_Thread.cpp:
        * ace/OS_NS_Thread.h:
        * ace/OS_NS_Thread.inl:
        * ace/OS_NS_arpa_inet.cpp:
        * ace/OS_NS_arpa_inet.h:
        * ace/OS_NS_arpa_inet.inl:
        * ace/OS_NS_ctype.h:
        * ace/OS_NS_ctype.inl:
        * ace/OS_NS_dirent.cpp:
        * ace/OS_NS_dirent.h:
        * ace/OS_NS_dirent.inl:
        * ace/OS_NS_dlfcn.cpp:
        * ace/OS_NS_dlfcn.h:
        * ace/OS_NS_dlfcn.inl:
        * ace/OS_NS_errno.h:
        * ace/OS_NS_errno.inl:
        * ace/OS_NS_fcntl.cpp:
        * ace/OS_NS_fcntl.h:
        * ace/OS_NS_fcntl.inl:
        * ace/OS_NS_math.cpp:
        * ace/OS_NS_math.h:
        * ace/OS_NS_math.inl:
        * ace/OS_NS_netdb.cpp:
        * ace/OS_NS_netdb.h:
        * ace/OS_NS_netdb.inl:
        * ace/OS_NS_poll.cpp:
        * ace/OS_NS_poll.h:
        * ace/OS_NS_poll.inl:
        * ace/OS_NS_pwd.cpp:
        * ace/OS_NS_pwd.h:
        * ace/OS_NS_pwd.inl:
        * ace/OS_NS_regex.cpp:
        * ace/OS_NS_regex.h:
        * ace/OS_NS_regex.inl:
        * ace/OS_NS_signal.cpp:
        * ace/OS_NS_signal.h:
        * ace/OS_NS_signal.inl:
        * ace/OS_NS_stdio.cpp:
        * ace/OS_NS_stdio.h:
        * ace/OS_NS_stdio.inl:
        * ace/OS_NS_stdlib.cpp:
        * ace/OS_NS_stdlib.h:
        * ace/OS_NS_stdlib.inl:
        * ace/OS_NS_string.cpp:
        * ace/OS_NS_string.h:
        * ace/OS_NS_string.inl:
        * ace/OS_NS_strings.cpp:
        * ace/OS_NS_strings.h:
        * ace/OS_NS_strings.inl:
        * ace/OS_NS_stropts.cpp:
        * ace/OS_NS_stropts.h:
        * ace/OS_NS_stropts.inl:
        * ace/OS_NS_sys_mman.cpp:
        * ace/OS_NS_sys_mman.h:
        * ace/OS_NS_sys_mman.inl:
        * ace/OS_NS_sys_msg.cpp:
        * ace/OS_NS_sys_msg.inl:
        * ace/OS_NS_sys_resource.cpp:
        * ace/OS_NS_sys_resource.h:
        * ace/OS_NS_sys_resource.inl:
        * ace/OS_NS_sys_select.cpp:
        * ace/OS_NS_sys_select.h:
        * ace/OS_NS_sys_select.inl:
        * ace/OS_NS_sys_shm.cpp:
        * ace/OS_NS_sys_shm.h:
        * ace/OS_NS_sys_shm.inl:
        * ace/OS_NS_sys_socket.cpp:
        * ace/OS_NS_sys_socket.h:
        * ace/OS_NS_sys_socket.inl:
        * ace/OS_NS_sys_stat.cpp:
        * ace/OS_NS_sys_stat.h:
        * ace/OS_NS_sys_stat.inl:
        * ace/OS_NS_sys_time.cpp:
        * ace/OS_NS_sys_time.h:
        * ace/OS_NS_sys_time.inl:
        * ace/OS_NS_sys_uio.cpp:
        * ace/OS_NS_sys_uio.h:
        * ace/OS_NS_sys_uio.inl:
        * ace/OS_NS_sys_utsname.cpp:
        * ace/OS_NS_sys_utsname.h:
        * ace/OS_NS_sys_utsname.inl:
        * ace/OS_NS_sys_wait.cpp:
        * ace/OS_NS_sys_wait.h:
        * ace/OS_NS_sys_wait.inl:
        * ace/OS_NS_time.cpp:
        * ace/OS_NS_time.h:
        * ace/OS_NS_time.inl:
        * ace/OS_NS_unistd.cpp:
        * ace/OS_NS_unistd.h:
        * ace/OS_NS_unistd.inl:
        * ace/OS_NS_wchar.cpp:
        * ace/OS_NS_wchar.h:
        * ace/OS_NS_wchar.inl:
        * ace/OS_QoS.cpp:
        * ace/OS_QoS.h:
        * ace/OS_TLI.h:
        * ace/OS_TLI.inl:
        * ace/OS_Thread_Adapter.cpp:
        * ace/OS_Thread_Adapter.h:
        * ace/OS_main.cpp:
        * ace/OS_main.h:
        * ace/PI_Malloc.cpp:
        * ace/PI_Malloc.h:
        * ace/PI_Malloc.inl:
        * ace/POSIX_Asynch_IO.cpp:
        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_CB_Proactor.cpp:
        * ace/POSIX_CB_Proactor.h:
        * ace/POSIX_Proactor.cpp:
        * ace/POSIX_Proactor.h:
        * ace/POSIX_Proactor.inl:
        * ace/Pagefile_Memory_Pool.cpp:
        * ace/Pagefile_Memory_Pool.h:
        * ace/Pagefile_Memory_Pool.inl:
        * ace/Pair.cpp:
        * ace/Pair.h:
        * ace/Pair_T.cpp:
        * ace/Pair_T.h:
        * ace/Pair_T.inl:
        * ace/Parse_Node.cpp:
        * ace/Parse_Node.h:
        * ace/Ping_Socket.cpp:
        * ace/Ping_Socket.h:
        * ace/Ping_Socket.inl:
        * ace/Pipe.cpp:
        * ace/Pipe.h:
        * ace/Pipe.inl:
        * ace/Priority_Reactor.cpp:
        * ace/Priority_Reactor.h:
        * ace/Proactor.cpp:
        * ace/Proactor.h:
        * ace/Proactor.inl:
        * ace/Proactor_Impl.cpp:
        * ace/Proactor_Impl.h:
        * ace/Process.cpp:
        * ace/Process.h:
        * ace/Process.inl:
        * ace/Process_Manager.cpp:
        * ace/Process_Manager.h:
        * ace/Process_Manager.inl:
        * ace/Process_Mutex.cpp:
        * ace/Process_Mutex.h:
        * ace/Process_Mutex.inl:
        * ace/Process_Semaphore.cpp:
        * ace/Process_Semaphore.h:
        * ace/Process_Semaphore.inl:
        * ace/Profile_Timer.cpp:
        * ace/Profile_Timer.h:
        * ace/Profile_Timer.inl:
        * ace/QtReactor.cpp:
        * ace/QtReactor.h:
        * ace/RB_Tree.cpp:
        * ace/RB_Tree.h:
        * ace/RB_Tree.inl:
        * ace/RW_Mutex.cpp:
        * ace/RW_Mutex.h:
        * ace/RW_Mutex.inl:
        * ace/RW_Process_Mutex.cpp:
        * ace/RW_Process_Mutex.h:
        * ace/RW_Process_Mutex.inl:
        * ace/RW_Thread_Mutex.cpp:
        * ace/RW_Thread_Mutex.h:
        * ace/RW_Thread_Mutex.inl:
        * ace/Reactor.cpp:
        * ace/Reactor.h:
        * ace/Reactor.inl:
        * ace/Reactor_Impl.cpp:
        * ace/Reactor_Impl.h:
        * ace/Reactor_Notification_Strategy.cpp:
        * ace/Reactor_Notification_Strategy.h:
        * ace/Reactor_Notification_Strategy.inl:
        * ace/Reactor_Timer_Interface.cpp:
        * ace/Reactor_Timer_Interface.h:
        * ace/Reactor_Token_T.cpp:
        * ace/Reactor_Token_T.h:
        * ace/Read_Buffer.cpp:
        * ace/Read_Buffer.h:
        * ace/Read_Buffer.inl:
        * ace/Recursive_Thread_Mutex.cpp:
        * ace/Recursive_Thread_Mutex.h:
        * ace/Recursive_Thread_Mutex.inl:
        * ace/Recyclable.cpp:
        * ace/Recyclable.h:
        * ace/Recyclable.inl:
        * ace/Refcountable.cpp:
        * ace/Refcountable.h:
        * ace/Refcountable.inl:
        * ace/Refcounted_Auto_Ptr.cpp:
        * ace/Refcounted_Auto_Ptr.h:
        * ace/Refcounted_Auto_Ptr.inl:
        * ace/Registry.cpp:
        * ace/Registry.h:
        * ace/Registry_Name_Space.cpp:
        * ace/Registry_Name_Space.h:
        * ace/Remote_Name_Space.cpp:
        * ace/Remote_Name_Space.h:
        * ace/Remote_Tokens.cpp:
        * ace/Remote_Tokens.h:
        * ace/Remote_Tokens.inl:
        * ace/Reverse_Lock_T.cpp:
        * ace/Reverse_Lock_T.h:
        * ace/Reverse_Lock_T.inl:
        * ace/SOCK.cpp:
        * ace/SOCK.h:
        * ace/SOCK.inl:
        * ace/SOCK_Acceptor.cpp:
        * ace/SOCK_Acceptor.h:
        * ace/SOCK_Acceptor.inl:
        * ace/SOCK_CODgram.cpp:
        * ace/SOCK_CODgram.h:
        * ace/SOCK_CODgram.inl:
        * ace/SOCK_Connector.cpp:
        * ace/SOCK_Connector.h:
        * ace/SOCK_Connector.inl:
        * ace/SOCK_Dgram.cpp:
        * ace/SOCK_Dgram.h:
        * ace/SOCK_Dgram.inl:
        * ace/SOCK_Dgram_Bcast.cpp:
        * ace/SOCK_Dgram_Bcast.h:
        * ace/SOCK_Dgram_Bcast.inl:
        * ace/SOCK_IO.cpp:
        * ace/SOCK_IO.h:
        * ace/SOCK_IO.inl:
        * ace/SOCK_SEQPACK_Acceptor.cpp:
        * ace/SOCK_SEQPACK_Acceptor.h:
        * ace/SOCK_SEQPACK_Acceptor.inl:
        * ace/SOCK_SEQPACK_Association.cpp:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/SOCK_SEQPACK_Association.inl:
        * ace/SOCK_SEQPACK_Connector.cpp:
        * ace/SOCK_SEQPACK_Connector.h:
        * ace/SOCK_SEQPACK_Connector.inl:
        * ace/SOCK_Stream.cpp:
        * ace/SOCK_Stream.h:
        * ace/SOCK_Stream.inl:
        * ace/SPIPE.cpp:
        * ace/SPIPE.h:
        * ace/SPIPE.inl:
        * ace/SPIPE_Acceptor.cpp:
        * ace/SPIPE_Acceptor.h:
        * ace/SPIPE_Addr.cpp:
        * ace/SPIPE_Addr.h:
        * ace/SPIPE_Addr.inl:
        * ace/SPIPE_Connector.cpp:
        * ace/SPIPE_Connector.h:
        * ace/SPIPE_Connector.inl:
        * ace/SPIPE_Stream.cpp:
        * ace/SPIPE_Stream.inl:
        * ace/SString.cpp:
        * ace/SString.h:
        * ace/SString.inl:
        * ace/SStringfwd.h:
        * ace/SUN_Proactor.cpp:
        * ace/SUN_Proactor.h:
        * ace/SV_Message.cpp:
        * ace/SV_Message.h:
        * ace/SV_Message.inl:
        * ace/SV_Message_Queue.cpp:
        * ace/SV_Message_Queue.h:
        * ace/SV_Message_Queue.inl:
        * ace/SV_Semaphore_Complex.cpp:
        * ace/SV_Semaphore_Complex.h:
        * ace/SV_Semaphore_Complex.inl:
        * ace/SV_Semaphore_Simple.cpp:
        * ace/SV_Semaphore_Simple.h:
        * ace/SV_Semaphore_Simple.inl:
        * ace/SV_Shared_Memory.cpp:
        * ace/SV_Shared_Memory.h:
        * ace/SV_Shared_Memory.inl:
        * ace/Sample_History.cpp:
        * ace/Sample_History.h:
        * ace/Sample_History.inl:
        * ace/Sbrk_Memory_Pool.cpp:
        * ace/Sbrk_Memory_Pool.h:
        * ace/Sched_Params.cpp:
        * ace/Sched_Params.h:
        * ace/Sched_Params.inl:
        * ace/Select_Reactor.cpp:
        * ace/Select_Reactor.h:
        * ace/Select_Reactor_Base.cpp:
        * ace/Select_Reactor_Base.h:
        * ace/Select_Reactor_Base.inl:
        * ace/Select_Reactor_T.cpp:
        * ace/Select_Reactor_T.h:
        * ace/Select_Reactor_T.inl:
        * ace/Semaphore.cpp:
        * ace/Semaphore.h:
        * ace/Semaphore.inl:
        * ace/Service_Config.cpp:
        * ace/Service_Config.h:
        * ace/Service_Config.inl:
        * ace/Service_Manager.cpp:
        * ace/Service_Manager.h:
        * ace/Service_Manager.inl:
        * ace/Service_Object.cpp:
        * ace/Service_Object.h:
        * ace/Service_Object.inl:
        * ace/Service_Repository.cpp:
        * ace/Service_Repository.h:
        * ace/Service_Repository.inl:
        * ace/Service_Templates.cpp:
        * ace/Service_Types.cpp:
        * ace/Service_Types.h:
        * ace/Service_Types.inl:
        * ace/Shared_Memory.cpp:
        * ace/Shared_Memory.h:
        * ace/Shared_Memory_MM.cpp:
        * ace/Shared_Memory_MM.h:
        * ace/Shared_Memory_MM.inl:
        * ace/Shared_Memory_Pool.cpp:
        * ace/Shared_Memory_Pool.h:
        * ace/Shared_Memory_SV.cpp:
        * ace/Shared_Memory_SV.h:
        * ace/Shared_Memory_SV.inl:
        * ace/Shared_Object.cpp:
        * ace/Shared_Object.h:
        * ace/Shared_Object.inl:
        * ace/Signal.cpp:
        * ace/Signal.h:
        * ace/Signal.inl:
        * ace/Singleton.cpp:
        * ace/Singleton.h:
        * ace/Singleton.inl:
        * ace/Sock_Connect.cpp:
        * ace/Sock_Connect.h:
        * ace/Static_Object_Lock.h:
        * ace/Stats.cpp:
        * ace/Stats.h:
        * ace/Stats.inl:
        * ace/Strategies_T.cpp:
        * ace/Strategies_T.h:
        * ace/Strategies_T.inl:
        * ace/Stream.cpp:
        * ace/Stream.h:
        * ace/Stream.inl:
        * ace/Stream_Modules.cpp:
        * ace/Stream_Modules.h:
        * ace/String_Base.cpp:
        * ace/String_Base.h:
        * ace/String_Base.inl:
        * ace/String_Base_Const.cpp:
        * ace/String_Base_Const.h:
        * ace/Svc_Conf.h:
        * ace/Svc_Conf_Lexer_Guard.cpp:
        * ace/Svc_Conf_Lexer_Guard.h:
        * ace/Svc_Handler.cpp:
        * ace/Svc_Handler.h:
        * ace/Swap.cpp:
        * ace/Swap.h:
        * ace/Swap.inl:
        * ace/Synch.cpp:
        * ace/Synch_Options.cpp:
        * ace/Synch_Options.h:
        * ace/Synch_Options.inl:
        * ace/Synch_T.cpp:
        * ace/Synch_T.h:
        * ace/Synch_Traits.h:
        * ace/System_Time.cpp:
        * ace/System_Time.h:
        * ace/TLI.cpp:
        * ace/TLI.h:
        * ace/TLI.inl:
        * ace/TLI_Acceptor.cpp:
        * ace/TLI_Acceptor.h:
        * ace/TLI_Connector.cpp:
        * ace/TLI_Connector.h:
        * ace/TLI_Connector.inl:
        * ace/TLI_Stream.cpp:
        * ace/TLI_Stream.h:
        * ace/TLI_Stream.inl:
        * ace/TP_Reactor.cpp:
        * ace/TP_Reactor.h:
        * ace/TP_Reactor.inl:
        * ace/TSS_Adapter.cpp:
        * ace/TSS_Adapter.h:
        * ace/TSS_Adapter.inl:
        * ace/TSS_T.cpp:
        * ace/TSS_T.h:
        * ace/TSS_T.inl:
        * ace/TTY_IO.cpp:
        * ace/TTY_IO.h:
        * ace/Task.cpp:
        * ace/Task.h:
        * ace/Task.inl:
        * ace/Task_Ex_T.cpp:
        * ace/Task_Ex_T.h:
        * ace/Task_Ex_T.inl:
        * ace/Task_T.cpp:
        * ace/Task_T.h:
        * ace/Task_T.inl:
        * ace/Template_Instantiations.cpp:
        * ace/Test_and_Set.cpp:
        * ace/Test_and_Set.h:
        * ace/Thread.cpp:
        * ace/Thread.h:
        * ace/Thread.inl:
        * ace/Thread_Adapter.cpp:
        * ace/Thread_Adapter.h:
        * ace/Thread_Adapter.inl:
        * ace/Thread_Control.cpp:
        * ace/Thread_Control.h:
        * ace/Thread_Control.inl:
        * ace/Thread_Exit.cpp:
        * ace/Thread_Exit.h:
        * ace/Thread_Hook.cpp:
        * ace/Thread_Hook.h:
        * ace/Thread_Manager.cpp:
        * ace/Thread_Manager.h:
        * ace/Thread_Manager.inl:
        * ace/Thread_Mutex.cpp:
        * ace/Thread_Mutex.h:
        * ace/Thread_Mutex.inl:
        * ace/Thread_Semaphore.cpp:
        * ace/Thread_Semaphore.h:
        * ace/Thread_Semaphore.inl:
        * ace/Time_Request_Reply.cpp:
        * ace/Time_Request_Reply.h:
        * ace/Time_Value.cpp:
        * ace/Time_Value.h:
        * ace/Time_Value.inl:
        * ace/Timeprobe.cpp:
        * ace/Timeprobe.h:
        * ace/Timeprobe.inl:
        * ace/Timeprobe_T.cpp:
        * ace/Timeprobe_T.h:
        * ace/Timer_Hash.cpp:
        * ace/Timer_Hash.h:
        * ace/Timer_Heap.cpp:
        * ace/Timer_Heap.h:
        * ace/Timer_Heap_T.cpp:
        * ace/Timer_Heap_T.h:
        * ace/Timer_List.cpp:
        * ace/Timer_List.h:
        * ace/Timer_Queue.cpp:
        * ace/Timer_Queue.h:
        * ace/Timer_Queue_Adapters.cpp:
        * ace/Timer_Queue_Adapters.h:
        * ace/Timer_Queue_Adapters.inl:
        * ace/Timer_Queue_T.cpp:
        * ace/Timer_Queue_T.h:
        * ace/Timer_Queue_T.inl:
        * ace/Timer_Queuefwd.h:
        * ace/Timer_Wheel.cpp:
        * ace/Timer_Wheel.h:
        * ace/Timer_Wheel_T.cpp:
        * ace/Timer_Wheel_T.h:
        * ace/TkReactor.cpp:
        * ace/TkReactor.h:
        * ace/Token.cpp:
        * ace/Token.h:
        * ace/Token.inl:
        * ace/Token_Collection.cpp:
        * ace/Token_Collection.h:
        * ace/Token_Collection.inl:
        * ace/Token_Invariants.cpp:
        * ace/Token_Invariants.h:
        * ace/Token_Manager.cpp:
        * ace/Token_Manager.h:
        * ace/Token_Manager.inl:
        * ace/Token_Request_Reply.cpp:
        * ace/Token_Request_Reply.h:
        * ace/Token_Request_Reply.inl:
        * ace/Trace.cpp:
        * ace/Trace.h:
        * ace/Typed_SV_Message.cpp:
        * ace/Typed_SV_Message.h:
        * ace/Typed_SV_Message.inl:
        * ace/Typed_SV_Message_Queue.cpp:
        * ace/Typed_SV_Message_Queue.h:
        * ace/Typed_SV_Message_Queue.inl:
        * ace/UNIX_Addr.cpp:
        * ace/UNIX_Addr.h:
        * ace/UNIX_Addr.inl:
        * ace/UPIPE_Acceptor.cpp:
        * ace/UPIPE_Acceptor.h:
        * ace/UPIPE_Acceptor.inl:
        * ace/UPIPE_Addr.h:
        * ace/UPIPE_Connector.cpp:
        * ace/UPIPE_Connector.h:
        * ace/UPIPE_Connector.inl:
        * ace/UPIPE_Stream.cpp:
        * ace/UPIPE_Stream.h:
        * ace/UPIPE_Stream.inl:
        * ace/UUID.cpp:
        * ace/UUID.h:
        * ace/UUID.inl:
        * ace/Unbounded_Queue.cpp:
        * ace/Unbounded_Queue.h:
        * ace/Unbounded_Queue.inl:
        * ace/Unbounded_Set.cpp:
        * ace/Unbounded_Set.h:
        * ace/Unbounded_Set.inl:
        * ace/Value_Ptr.h:
        * ace/Vector_T.cpp:
        * ace/Vector_T.h:
        * ace/Vector_T.inl:
        * ace/WFMO_Reactor.cpp:
        * ace/WFMO_Reactor.h:
        * ace/WFMO_Reactor.inl:
        * ace/WIN32_Asynch_IO.cpp:
        * ace/WIN32_Asynch_IO.h:
        * ace/WIN32_Proactor.cpp:
        * ace/WIN32_Proactor.h:
        * ace/XML_Svc_Conf.cpp:
        * ace/XML_Svc_Conf.h:
        * ace/XTI_ATM_Mcast.cpp:
        * ace/XTI_ATM_Mcast.h:
        * ace/XTI_ATM_Mcast.inl:
        * ace/XtReactor.cpp:
        * ace/XtReactor.h:
        * ace/ace.mpc:
        * ace/ace_wchar.h:
        * ace/ace_wchar.inl:
        * ace/config-lite.h:
        * ace/gethrtime.cpp:
        * ace/SSL/SSL_Asynch_Stream.cpp:
        * ace/SSL/SSL_Asynch_Stream.h:
        * ace/SSL/SSL_Context.cpp:
        * ace/SSL/SSL_Context.h:
        * ace/SSL/SSL_Context.inl:
        * ace/SSL/SSL_SOCK.cpp:
        * ace/SSL/SSL_SOCK.h:
        * ace/SSL/SSL_SOCK.i:
        * ace/SSL/SSL_SOCK_Acceptor.cpp:
        * ace/SSL/SSL_SOCK_Acceptor.h:
        * ace/SSL/SSL_SOCK_Acceptor.i:
        * ace/SSL/SSL_SOCK_Connector.cpp:
        * ace/SSL/SSL_SOCK_Connector.h:
        * ace/SSL/SSL_SOCK_Connector.i:
        * ace/SSL/SSL_SOCK_Stream.cpp:
        * ace/SSL/SSL_SOCK_Stream.h:
        * ace/SSL/SSL_SOCK_Stream.i:

          Added versioned namespace support.

          Removed some empty and/or unnecessary `.cpp' and `.inl' files.

          Hid some static class member constants declared in headers in
          the corresponding implementation `.cpp' file.

Thu Oct 27 11:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Process_Strategy_Test.cpp:
        * tests/Reactor_Dispatch_Order_Test.cpp:
          64bit fixes

Thu Oct 27 11:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Threads/barrier2.cpp:
          64bit fixes

Thu Oct 27 11:58:07 2005  Simon McQueen  <sm@prismtech.com>

        * bin/tao_other_tests.lst:

          Three new FT regression tests.

Thu Oct 27 09:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added TAO Bug_2201_Regression test

Wed Oct 26 17:22:12 2005  Don Busch  <busch_d@ociweb.com>

        * bin/MakeProjectCreator/config/event_serv.mpb
        * bin/MakeProjectCreator/config/messaging.mpb
        * bin/MakeProjectCreator/config/messaging_optional.mpb
        * bin/MakeProjectCreator/config/naming_serv.mpb

          This is a footprint reduction fix, eliminating a library dependency.
          TAO 1.4 introduced a new dependency on the Messaging, Valuetype,
          PI, and CodecFactory libraries for the CosNaming_Serv and
          CosEvent_Serv libraries.  Turning off CORBA Messaging did not remove
          this dependency. Thus, any application that uses CosNaming_Serv or
          CosEvent_Serv, but not CORBA Messaging, depends on those libraries
          anyway. This change eliminates the CosNaming_Serv and CosEvent_Serv
          dependencies on Messaging (and thus PI, CodecFactory, and Valuetype)
          when CORBA Messaging and Interceptors are turned off.  It reduces
          the footprint in that case by about 600K.
          There is a TAO ChangeLog entry with the same timestamp that
          descibes the TAO changes.

Wed Oct 26 12:26:01 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Codeset_Registry.cpp (locale_to_registry_i):
          (registry_to_locale_i):

          Corrected reversed destination and source arguments in memcpy()
          call.

          Improved const correctness.  Revealed the above memcpy()
          problem.

        * ace/Codeset_Registry.h:
        * ace/Codeset_Registry_db.cpp:

          Made registry entry array "const" to prevent the above memcpy()
          problem from being potentially reintroduced in the future.  Also
          provides the compiler with additional optimization opportunities
          (e.g. placing the array in read-only memory).

        * apps/mkcsregdb/mkcsregdb.cpp (init_output, fini_output):

          Updated output to generate an array of const registry entries in
          accordance with the changes made to ace/Codeset_Registry.h.

Wed Oct 26 15:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_cidlc.pl:
          Print an error if no configurations have been build, at that moment
          we just didn't build something which we have to handle as error

Wed Oct 26 12:58:17 2005  Simon McQueen  <sm@prismtech.com>

        * ace/OS_NS_stdio.inl:

          Added a ACE_WIN32 implementation for ACE_OS::vsnprintf for
          wide chars using ::_vsnwprintf, in the style of the existing
          ACE_OS::vsnprintf for normal chars.

          This (hopefully) fixes bug #2208.

Tue Oct 25 22:18:03 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/CDR_Stream.h (OutputCDR_Auto_Reset):
        * ace/CDR_Stream.inl (OutputCDR_Auto_Reset):

          Prepend "ACE_" to this class (described in ChangeLog entry "Fri
          Aug 26 11:43:01 2005  Justin Michel  <michel_j@ociweb.com>") to
          address potential global namespace pollution issues, and to be
          consistent with ACE naming conventions.

          Adding missing ACE_Export.  Addresses unresolved symbol errors
          in Windows and g++ 4 builds when inlining is disabled and
          TAO_RESET_OUTPUT_CDR_AFTER_SEND is defined to 1.

          Use "this" pointer to reference class members, as dictated by
          ACE coding conventions/guidelines.

Tue Oct 25 09:05:47 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/msvc_static_order.lst:

          Rolled back
          "Mon Oct 24 12:58:45 MST 2005  Yan Dai  <dai_y@ociweb.com>" change,
          the entry should be project file name.

Tue Oct 25 08:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-qnx-rtp-62x.h:
          Added ACE_HAS_3_PARAM_WCSTOK

Tue Oct 25 08:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Pipe_Test.cpp:
          Fixed invalid assert

Mon Oct 24 12:58:45 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/msvc_static_order.lst:

          Corrected the entry TAO/tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test.
          The library name should be used instead of project name.

Mon Oct 24 10:21:39 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/ACE-guidelines.html:

          Added shared library guidelines.

Mon Oct 24 14:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>


        * ace/OS_NS_Thread.inl:
          Fixed typo in VxWorks part

        * ace/config-vxworks5.x.h:
          Added some extra ACE_LACKS_x for VxWorks

Mon Oct 24 07:19:29 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Dev_Poll_Reactor.cpp: Fixed a couple of bugs that
          were causing core dumps.  Thanks to Oh Yoon Sik
          <boom@estsoft.com> for these fixes.

Sun Oct 23 13:05:33 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tests/Pipe_Test.cpp (run_main): Updated this test to be a bit
          cleaner.

        * tests/Dirent_Test.cpp: Fixed a typo in the comments - this test
          exericses the ACE_Dirent class, not the ACE_OS_Dirent class.

Fri Oct 21 07:46:47 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Dev_Poll_Reactor.cpp (open): Set notification pipe into
          non-blocking mode to prevent deadlock.  Thanks to Oh Yoon Sik
          <boom at estsoft dot com> for this fix.

Mon Oct 24 10:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/templates/gnu.mpd:
          Corrected the way we pass the include paths to windres

Mon Oct 24 08:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/wrapper_macros.GNU:
          Pass RCFLAGS to the resource compiler

Mon Oct 24 08:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.{h,inl}:
          64bit fixes

Mon Oct 24 08:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/templates/gnu.mpd:
          Generate includes for the resource compiler, this fixes compile
          problems of the resource file when it contains includes that
          expect an include path being set

Mon Oct 24 06:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/ace_qt.mpb:
          Update to enable to define specific versions of the
          QT library(-ies) needed to be linked for Windows based
          builds as with *nix based builds.

Sun Oct 23 22:27:45 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Global_Macros.h:
        * ace/Versioned_Namespace.h:

          Disable versioned namespace support for MSVC++ 6.  It's
          preprocessor can't handle the required macro expansions.

Sun Oct 23 21:48:15 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/README:

          Added documentation that describes how to override the default
          versioned namespace name when ACE_HAS_VERSIONED_NAMESPACE is
          defined.

        * ace/Version.h:

          Removed "ace/Versioned_Namespace.h" include directive.  It
          caused some resource compilers on Windows some grief.

        * ace/Versioned_Namespace.h:

          Updated required header filename in preprocessor error message.
          This header should now be included through "ace/config-lite.h".

        * ace/config-lite.h:

          Include "ace/Version.h" and "ace/Versioned_Namespace.h" to pull
          in versioned namespace support (disabled by default).

        * ace/post.h:
        * ace/pre.h:

          Removed versioned namespace support.  Versioned namespace
          declarations must now be added directly to the appropriate ACE
          library headers.  Addresses premature closure of versioned
          namespace.

Sun Oct 23 06:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/templates/bor.mpd:
          Generate new RC_FLAGS with the includes that need to be passed to
          the resource compiler

        * include/makeinclude/build_dll.bor:
        * include/makeinclude/build_exe.bor:
          Use the new RC_FLAGS

Sat Oct 22 11:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Codeset_Registry.h:
          Doxygen improvements

Fri Oct 21 14:28:54 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/MakeProjectCreator/config/csd_pt_test_exe.mpb:

          Added dependency on pi base project since the PI.h is included
          in the test application for the static initialization.

Fri Oct 21 10:54:44 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/msvc_static_order.lst:

          Added TAO/tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test_Lib.

Fri Oct 21 11:44:33 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * ace/CDR_Stream.h

          Fixed a typo in the optimization description of
          ACE_LACKS_CDR_ALIGNMENT flag.

Fri Oct 21 07:09:57 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/msvc_static_order.lst:

          Add CosEvent_IDL project before CosEvent, CosEvent_Skel, and
          CosEvent_Serv.

Fri Oct 21 12:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Proactor.h:
          Added virtual destructor to the dummy ACE_Proactor that is
          enabled when the ACE_Proactor can't be used

Fri Oct 21 12:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Log_Msg.cpp:
          Fixed compile problem in Linux builds

Fri Oct 21 12:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.{h,inl} (sbrk):
          Use ptrdiff_t as argument type to fix 64bit conversions

Fri Oct 21 12:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Message_Queue_T.{h,cpp}:
          Changed cur_count to size_t and use prefix operators instead
          of postfix

Fri Oct 21 11:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/compiler.bor:
          BCBVER must be explicitly defined by the end user and must
          be set to a supported value, else just don't build.

Fri Oct 21 10:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Log_Msg.cpp (log)
          Check for passing of NULL pointers to %C and %w
          formatting strings and replace them with "(null)" to avoid
          crashes.  Thanks to Scooter <im-scooter at yandex dot ru> for
          reporting this. Fixes bugzilla bug 2276

Thu Oct 20 22:20:26 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Dev_Poll_Reactor.cpp (open): Disabling the notify pipe was
          failing, but now it works.  Thanks to Oh Yoon Sik <boom at
          estsoft dot com> for this fix.

Thu Oct 20 14:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Base.cpp:
          Removed character before #include

Thu Oct 20 08:53:47 2005  Arvind S. Krishna  <arvindk@doc.dre.vanderbilt.edu>

        * ace/CDR_Base.cpp:
        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:
        * ace/CDR_Stream.inl:
        * ace/Message_Block.cpp:

          CORBA specification mandates alignment of basic types to their
          natural boundaries. However, in certain situations (1) where
          such alignment is not needed by the platform and/or (2)
          homogeneous systems exists on the client and server sides, this
          alignment can be ignored to improve (de)marshaling
          efficiency. This commit adds the ACE_LACKS_CDR_ALIGNMENT flag to
          the CDR streams that enables applications to ignore alignment
          during (de)marshaling. This macro should be used when ACE_CDR is
          both the (de)marshaler. Additionally, use this option only when
          byte orders of the two machines are the same.  This restriction
          is temporary and will be removed in a subsequent commit.

Thu Oct 29 11:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_unistd.{h,inl}:
          Changed the return value and arguments of ualarm from u_int
          to u_long to fix 64bit problems

Wed Oct 19 18:57:53 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/OS_NS_stdio.inl (flock_init): Only allocate the
          memory for the name if the call to ACE_OS::open() succeeds.
          This fixes a subtle memory leak.  Thanks to Sandeep Deshpande
          <sandeep dot bvb at gmail dot com> for this fix!

Wed Oct 19 09:56:31 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * include/makeinclude/platform_macosx_tiger_gcc4.GNU:

          Disable symbol visibility support by default.  Apple's g++ 4
          compiler doesn't appear to correctly support visibility
          attributes, at least as well as the vanilla g++.  Thanks to
          Will, Kitty and J.T. for testing and tracking the problem.

Wed Oct 19 09:26:34 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ACE.h (strdelete):

          Declare this function with the ACE_NAMESPACE_INLINE_FUNCTION.
          Addresses case where this method is inlined, and should not be
          marked "extern".

Wed Oct 19 09:23:13 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/pre.h:

          Moved include directive for "ace/Version.h" before existing
          pragmas in this file.  Addresses Borland preprocessor warnings
          regarding duplicate "pushed" options.  Thanks to Johnny for
          suggesting this fix.

Wed Oct 19 08:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CDR_File_Test.cpp:
          Fixed compile error

Wed Oct 19 07:43:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Reactor_Token_T.h:
          Removed code for including the .inl file, it is not there, just
          a waste of bytes ;-)

Wed Oct 19 00:23:02 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Global_Macros.h (ACE_FACTORY_DEFINE):
          (ACE_FACTORY_NAMESPACE_DEFINE):

          Don't bother qualifying the SERVICE_CLASS name with
          ACE_VERSIONED_NAMESPACE_NAME scope.  That scoped is already
          pulled in by a "using" clause.  Addresses compile-time errors
          caused by calling the ACE_FACTORY_{NAMESPACE_}DEFINE macro
          within a namespace and passing the locally scoped name of the
          SERVICE_CLASS rather than the fully qualified one.

Tue Oct 18 23:23:14 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        The following changes comprise the core implementation of
        "versioned namespace" support in ACE.  When enabled, all ACE
        library code will be wrapped within a namespace, such as
        "ACE_5_4_7", to prevent symbol conflicts with other versions of
        ACE shared libraries in third party libraries.  This feature is
        disabled by default to preserve backward compatibility.

        * ace/Global_Macros.h:

          Updated ACE Service Configurator macros to take into account
          versioned namespace when enabled.

        * ace/Parse_Node.cpp (ACE_Function_Node, make_func_name):
        * ace/Parse_Node.h:

          Check if factory function is using the ACE naming convention.
          If so, it is likely that the ACE factory function macros
          (e.g. ACE_FACTORY_DECLARE) were used to declare and define it,
          so mangle the function name to include the ACE versioned
          namespace name as is done in the ACE macros.  Otherwise, leave
          the function name as is.

        * ace/README:

          Added description for new ACE_HAS_VERSIONED_NAMESPACE
          preprocessor symbol.

        * ace/Version.h:

          Include "ace/Versioned_Namespace.h" to pull in versioned
          namespace macros.

        * ace/Versioned_Namespace.h:

          New header containing core versioned namespace macros.

        * ace/ace.mpc (Header_Files):

          Added "Versioned_Namespace.h" to list of headers.

        * ace/pre.h:

          Include "ace/Version.h" to pull in versioned namespace support.

        * ace/post.h:

          End versioned namespace block, if enabled.

        * bin/make_release (update_version_files):

          Generate include directive for "ace/Versioned_Namespace.h" when
          creating "ace/Version.h".

Tue Oct 18 23:08:34 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ACE.cpp (strdelete):
        * ace/ACE.inl (strdelete):

          Inlined this function.  It simply calles operator delete[] on a
          pointer to char or wchar_t.  Reduces footprint if it is never
          called, and optimizes the call at run-time slightly if it is
          called.

Tue Oct 18 20:51:19 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/csd_framework.mpb:

          Remove "core" from list of base projects.  Just because
          we use the CSD framework, doesn't necessarily mean that
          the project should be installed.  It needs to explictly
          inherit from core (or install, install-bin, install-lib,
          or install-headers) for that.

Tue Oct 18 18:06:43 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/kokyu_dsrt_schedulers.mpb:

          Add $(TAO_BUILDDIR)/examples/Kokyu_dsrt_schedulers to
          includes for automake builds.

Tue Oct 18 17:24:26 MST 2005  Yan Dai  <dai_y@ociweb.com>

        Merged in the CSD (Custom Servant Dispatching) feature from OCI.

        * bin/tao_orb_tests.lst:

          Added CSD tests.

        * bin/MakeProjectCreator/config/csd_framework.mpb:
        * bin/MakeProjectCreator/config/csd_threadpool.mpb:
        * bin/MakeProjectCreator/config/csd_tp_test_lib.mpb:
        * bin/MakeProjectCreator/config/csd_tp_test_exe_c.mpb:
        * bin/MakeProjectCreator/config/csd_tp_test_exe_b.mpb:
        * bin/MakeProjectCreator/config/csd_tp_test_exe_a.mpb:
        * bin/MakeProjectCreator/config/csd_tp_foo_c_lib.mpb:
        * bin/MakeProjectCreator/config/csd_tp_foo_b_lib.mpb:
        * bin/MakeProjectCreator/config/csd_tp_foo_a_lib.mpb:
        * bin/MakeProjectCreator/config/csd_pt_testservant_lib.mpb:
        * bin/MakeProjectCreator/config/csd_pt_testinf_lib.mpb:
        * bin/MakeProjectCreator/config/csd_pt_test_exe.mpb:

          Added base projects for the CSD strategies and tests.

Tue Oct 18 22:24:11 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.h:
          Changed type of readmincharacters from int to unsigned int.
          Fixes compile time warning.

Tue Oct 18 09:53:29 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        From Mickael P. Golovin <migel at garant dot ru>
        * ace/Argv_Type_Converter.cpp:

          Fixed strdup()/operator delete() mismatches.  Strings allocated
          by strdup() should be deallocated using free().

        This was also reported by Gerolf Reinwardt <Gerolf dot
        reinwardt at siemens dot com>.

Mon Oct 17 22:05:37 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          Removed :: qualifiers from terminal interface
          function calls. This should fix compile problems
          on Cygwin.

Mon Oct 17 13:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/notifytest.mpb:
          Added notication_serv as base project, needed for collocated
          tests

Mon Oct 17 10:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/FILE_IO.inl:
          Removed some not needed c-style casts

        * tests/CDR_File_Test.cpp:
          Explicitly initialise memory with 0 when we are using a
          profiler.

Mon Oct 17 09:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Time_Value.{h,inl}:
        * ace/UUID.cpp:
          Fixed 64bit conversion problems. Added a to_usec method
          to ACE_Time_Value that returns the total of sec and usec
          as ACE_UINT64 and use that in UUID.cpp.
          Thanks to James Megquier <jmegq at radiance dot com>.
          This fixes bugzilla 2263

Sun Oct 16 13:01:12 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * protocols/ace/RMCast/Acknowledge.cpp:

          Fix typo in last change.

Sun Oct 16 12:05:45 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/config-netbsd.h:

          Define ACE_HAS_TERMIOS.

Sun Oct 16 11:59:05 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Updated tty feature checks to define ACE_HAS_TERMIO and/or
          ACE_HAS_TERMIOS.

Sun Oct 16 19:39:10 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.h:
          Fixed Doxygen tags.

Sun Oct 16 09:27:25 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * protocols/ace/RMCast/Acknowledge.{h,cpp}
        * protocols/ace/RMCast/Parameters.h:
          Added some fixes so that the default size of the hash map won't
          be so huge.  Thanks to Felix Li <fengli at gmail dot com> for
          these fixes.

Sun Oct 16 17:17:50 2005  Olli Savia  <ops@iki.fi>

        * ace/OS.h:
        * ace/config-cray.h:
        * ace/config-cygwin32.h:
        * ace/config-dgux-4.11-epc.h:
        * ace/config-dgux-4.x-ghs.h:
        * ace/config-freebsd.h:
        * ace/config-hpux-11.00.h:
        * ace/config-irix6.x-common.h:
        * ace/config-linux-common.h:
        * ace/config-lynxos.h:
        * ace/config-m88k.h:
        * ace/config-macosx-panther.h:
        * ace/config-macosx-tiger.h:
        * ace/config-macosx.h:
        * ace/config-openbsd.h:
        * ace/config-qnx-neutrino.h:
        * ace/config-qnx-rtp-62x.h:
        * ace/config-qnx-rtp-pre62x.h:
        * ace/config-rtems.h:
        * ace/config-sco-5.0.0-mit-pthread.h:
        * ace/config-sco-5.0.0.h:
        * ace/config-sunos5.4-centerline-2.x.h:
        * ace/config-sunos5.4-g++.h:
        * ace/config-sunos5.4-sunc++-4.x.h:
        * ace/config-sunos5.5.h:
        * ace/config-tandem.h:
        * ace/config-unixware-2.01-g++.h:
        * ace/config-unixware-2.1.2-g++.h:
        * ace/config-unixware-7.1.0.h:
        * ace/config-unixware-7.1.0.udk.h:
        * ace/config-win32-interix.h:
          Replaced old TTY_IO related macros with the new
          ACE_HAS_TERMIOS macro.

        * ace/TTY_IO.cpp:
          Added include "ace/config-lite.h" to pull feature macro
          definitions.

Sun Oct 16 16:14:48 2005  Olli Savia  <ops@iki.fi>

        * ace/README:
        * ace/TTY_IO.cpp:
          Introduce new macros ACE_HAS_TERMIO and ACE_HAS_TERMIOS to
          select between old ioctl based interface and POSIX terminal
          interface. The old macros ACE_HAS_TERM_IOCTLS and
          ACE_HAS_NEW_TERMIOS_STRUCT are not used anymore. Thanks
          to J.T. Conklin for motivating this change.

Sun Oct 16 12:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Don't run Big_AMI test in minimum builds

Sat Oct 15 00:57:19 2005  Steve Totten  <totten_s@ociweb.com>

        * bin/tao_other_tests.lst:

          Added TAO/orbsvcs/examples/CosEC/TypedSimple/run_test.pl to
          the nightly tests.

Fri Oct 14 22:30:40 2005  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ace/config-macosx-tiger.h (ACE_HAS_NEW_TERMIOS_STRUCT): Defined
          the macro ACE_HAS_NEW_TERMIOS_STRUCT to fix compilation errors
          on Mac OS X Tiger.

Fri Oct 14 14:56:16 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * ace/ACE.cpp:
        * ace/SOCK_Connector.cpp:

          Reverted the change from Fri Sep  2 15:08:27 2005  Justin Michel
          due to suspicions that it might be inadvertently responsible for
          observed additional jitter in TAO performance tests.  The
          motivation for the original change and a patch to restore the
          original change is documented in Bugzilla #2246.

Fri Oct 14 11:49:29 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ACEXML/apps/svcconf/Makefile.am:

          Tweak to use pkgconfigdir and @libdir@/pkgconfig instead of
          pkgconfdatadir and ${prefix}/lib/pkgconfig to be consistent with
          all our other Makefile.am's.  This will hold until we regenerate
          all the ACE Makefile.am's from MPC.  [Bug 2266]

Fri Oct 14 14:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

         Reverted the change below, causes compile problems

          Fri Oct 14 10:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>
          * ace/SSL/SSL_Asynch_BIO.{h,cpp}:
          Fixed 64bit conversion warnings

Fri Oct 14 12:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/soreduce/Library.cpp:
          Fixed 64bit problem

Fri Oct 14 11:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SOCK_IO.{h,inl}:
          64bit fix

Fri Oct 14 10:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SSL/SSL_Asynch_BIO.{h,cpp}:
          Fixed 64bit conversion warnings

        * ace/OS_NS_unistd.{h,inl}:
          Let getpagesize return a long

Fri Oct 14 08:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * protocols/ace/HTBP/HTBP_Session.cpp:
          Fixed signed/unsigned warning

Thu Oct 13 17:39:31 2005  Steve Huston  <shuston@riverace.com>

        * ace/TTY_IO.cpp: Changed ACE_TTY_IO_{ODD EVEN MARK SPACE} to
          char* from ACE_TCHAR* since the strings they're compared to (from
          Serial_Params) are char* always.

        * ace/config-win32-common.h: Removed the check for UNDER_CE >= 0x400
          && UNDER_CE < 0x500 when deciding whether or not to define E...
          symbols. Windows Mobile 5 requires them as well.

Thu Oct 13 13:58:44 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/config-g++-common.h (ACE_IMPORT_SINGLETON_DECLARE):
          (ACE_IMPORT_SINGLETON_DECLARATION):

          Suppress "-pedantic" error caused by use of g++ "extern
          template" extension by preceding the expression with
          "__extension__".

Thu Oct 13 15:38:29 2005  Steve Huston  <shuston@riverace.com>

        * ace/RB_Tree.{cpp h}: Follow-up to:
          Fri Jul  9 21:23:13 2004  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

          Don't include a tree pointer in each RB_Tree_Node just to be able to
          get back to the tree to retrieve the allocator. Leave the allocator
          pointer in ACE_RB_Tree_Base, and add a ACE_RB_Tree::remove_children_i
          method that uses the allocator to release memory. Thank you to
          Sergei Kuchin <skuchin at mqsoftware dot com> for this improvement.

Thu Oct 13 20:42:00 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          Enable noncanonical input processing on POSIX systems.

Thu Oct 13 19:18:44 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          Oops. Use tcsetattr() instead of tcgetattr() to set terminal
          parameters.

Thu Oct 13 18:49:15 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          TTY_IO class now uses POSIX terminal interface if it is
          available. Should fix compile problems on various
          platforms.

Thu Oct 13 15:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Threads/task_four.cpp:
        * examples/Reactor/Proactor/post_completions.cpp:
          Fixed warning in MinGW build

Thu Oct 13 17:51:04 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          Fixed wchar issues.

Thu Oct 13 14:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Don't run the Hang_Shutdown test in a single threaded build

Thu Oct 13 14:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_arpa_inet.cpp:
        * ace/Pipe.cpp:
          64bit fixes

Thu Oct 13 13:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Threads/tss2.cpp:
          Fixed warning in MinGW build

Thu Oct 13 13:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_static_order.lst:
          Added tests/DLL_Test_Parent

Thu Oct 13 13:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Configuration.{h,cpp}:
        * ace/FILE_IO.cpp:
          64bit fixes

Thu Oct 13 13:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Message_Queue.{h,cpp,inl}:
        * ace/Message_Queue_T.{h,cpp}:
          Changed message_count to be a size_t to fix 64bit conversion warnings
          in code that uses this.

Thu Oct 13 13:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.{h,inl}:
          Changed return type of priority_control from int to long to fix
          64bit issues.

        * ace/Mem_Map.{h,inl}:
        * ace/OS_NS_sys_shm.{h,inl}:
          Fixed 64bit conversion warnings

Thu Oct 13 11:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_stdlib.{h,cpp,inl}:
          Let readline return ssize_t instead of int to fix 64bit
          conversion issues

Thu Oct 13 07:49:37 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          Include OS_NS_string.h to fix compile error on various platforms.

Wed Oct 12 23:55:23 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
          Rearranged includes to fix compile error on LynxOS.

Wed Oct 12 23:08:43 2005  Olli Savia  <ops@iki.fi>

        * ace/CDR_Stream.inl:
        * ace/CDR_Stream.cpp:
        * ace/SString.cpp:
          Fixed might be unitialized warning in FC4 build.

Wed Oct 12 22:50:39 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.cpp:
        * ace/config-freebsd.h:
        * ace/config-irix6.x-common.h:
        * ace/config-linux-common.h:
        * ace/config-openbsd.h:
        * ace/config-win32-interix.h:
          Changed ACE_USES_NEW_TERMIOS_STRUCT to ACE_HAS_NEW_TERMIOS_STRUCT
          to better follow ACE naming conventions.

Wed Oct 12 22:32:33 2005  Olli Savia  <ops@iki.fi>

        * ace/TTY_IO.h:
        * ace/TTY_IO.cpp:
          TTY_IO class overhaul. See NEWS for more information.

        * NEWS:
          Added TTY_IO changes.

Wed Oct 12 12:02:46 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Based_Pointer_Test.cpp:
        * tests/dll_test_parent_lib.mpb:
        * tests/tests.mpc:

          Fixed project dependencies for tests with an accompanying shared
          library.

Wed Oct 12 12:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/APG/Sockets/Basic.cpp:
        * examples/APG/Streams/Util.h:
        * examples/APG/Streams/CommandTasks.cpp:
        * examples/APG/Threads/Message_Queue.cpp:
        * examples/Reactor/Misc/notification.cpp:
        * examples/Reactor/Misc/test_timer_queue.cpp:
        * examples/Reactor/Multicast/server.cpp:
          Fixed 64bit conversion warnings

Wed Oct 12 09:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/ipv6.mpb:
          Also for cbx we need to add an extra lib

Wed Oct 12 08:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Also raised the level for the rir check

Wed Oct 12 08:10:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Raised the level for the environment macro check to >= 6. This way
          the check is there but we don't run it by default in our daily
          fuzz build

Wed Oct 12 08:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_vxworks5.5.x.GNU:
          Changed the default for exceptions to 1

Tue Oct 11 17:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Stream.cpp (skip_wchar):
          When having a 1.1 stream, we must use
          ACE_OutputCDR::wchar_maxbytes_ instead of sizeof (ACE_CDR::WChar)
          to determine whether we have to read 2 or 4 bytes for a
          ACE_CDR::WChar. This fixes the failing of the TAO Codec test
          under fe linux

Tue Oct 11 08:28:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/INET_Addr{.h .inl}:
          Added additional "is_xx' method for IPv6 address testing.

Tue Oct 11 01:17:10 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        From James Megquier <jmegq at radiance dot com>
        * tests/DLL_Test.cpp (basic_test):
        * tests/tests.mpc:

          Rename DLL_Test library to avoid MPC name conflict with DLL_Test
          executable.  [Bug 2258]

        * ace/config-g++-common.h:

          Sadly, G++ 4.x silently ignores visibility attributes on
          template instantiations, which breaks singletons.  As a
          workaround, we use the GCC visibility pragmas.  And to make them
          fit in a macro, we use C99's _Pragma() (see
          http://gcc.gnu.org/bugzilla/show_bug.cgi?id=17470).  [Bug 2260]

        * ace/Based_Pointer_Repository.h:
        * ace/Obstack.h:
        * ace/Timeprobe.h:
        * examples/Export/dll.h:

          Declare exported (i.e. default visibility) singleton templates
          prior to typedefs that reference  them.  Prevents g++ 4.0 from
          silently making their visibility hidden.  [Bug 2260]

        * include/makeinclude/platform_g++_common.GNU:

          Added "no_hidden_visibility" make flag/variable.  Setting to "1"
          in a platform_macros.GNU file will disable g++ 4.0 visibility
          attribute support.  [Bug 2259]

Tue Oct 11 06:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Guard_T.cpp:
          When ACE_HAS_DUMP is defined include Log_Msg.h to get ACE_DEBUG.
          Thanks to James Megquier <jmegq at radiance dot com> for reporting
          this. This fixes bugzilla bug 2257

        * ACE-INSTALL.html:
          Updated Remedy IT support platforms and added
          Borland C++ Builder 2006 as new support platform. This is now
          publicly announced by Borland.

Mon Oct 10 15:45:17 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_config_handlers.mpb:

          Updated to reflect changes in config handles.

Mon Oct 10 19:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_dirent.cpp:
          Fixed 64bit conversion

Mon Oct 10 13:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Reactor_Timer_Test.cpp:
          Timers are of type long, so update this test to use long for timer
          ids, not int.

Mon Oct 10 10:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added new Big_AMI test

Sun Oct  9 21:34:08 2005  Olli Savia  <ops@iki.fi>

        * ace/config-lynxos.h:
          Do not define ACE_LACKS_SETREGID ACE_LACKS_SETREUID
          on LynxOS 4.x

Fri Oct  7 17:52:38 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/modules/AutomakeWorkspaceHelper.pm:

          Fix typo in recently added TAO_IDL_DEP definition.

Fri Oct  7 17:35:42 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Service_Configurator/IPC-tests/server/Makefile.am:
        * tests/Makefile.am:

          Regenerate to account for recent changes.

Fri Oct  7 13:31:10 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/taoidldefaults.mpb:

          Changed to add -Sa and -St flags to idlflags variable instead of
          tao_idlflags.  This ensures they will be emitted (unless they're
          suppressed by anytypecode.mpb) in the automake build, where the
          value of TAO_IDLFLAGS is set in AutomakeWorkspaceHelper.pm.

          This would have cought recent problems I introduced in TAO when
          splitting out IDL compilation into separate projects.

Fri Oct  7 09:32:06 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/modules/AutomakeWorkspaceHelper.pm:

          Define TAO_IDL_DEP if TAO_IDL is found in the any per-project
          Makefile.am as they are aggregated into the final Makefile.am.

Fri Oct  7 12:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Upgradable_RW_Test.cpp:
          Fixed might be unitialized warning in MinGW build

Fri Oct  7 08:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-borland.h:
          Removed ACE_LACKS_MODE_MASKS, it is in config-win32-common.h.

Fri Oct  7 07:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * protocols/ace/HTBP/HTBP_Stream.{h,cpp,inl}:
        * protocols/ace/HTBP/HTBP_Notifier.{h,cpp,inl}:
        * examples/Service_Configurator/IPC-tests/server/Handle_Thr_Stream.{h,cpp,i}:
        * apps/JAWS/clients/Caching/URL_Locator.{h,cpp,i}:
          Removed empty inline files

        * protocols/ace/HTBP/Makefile.am:
        * examples/Service_Configurator/IPC-tests/server/Makefile.am:
        * apps/JAWS/clients/Caching/Makefile.am:
          Removed inline files we zapped above

Thu Oct  6 15:42:29 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/DLL_Test.cpp:
        * tests/DLL_Test.h:
        * tests/DLL_Test_Impl.cpp:
        * tests/DLL_Test_Parent.cpp:
        * tests/DLL_Test_Parent.h:
        * tests/DLL_Test_Parent_Export.h:
        * tests/dll_test_parent_lib.mpb:

          Moved "Parent" base class to a separate DSO/DLL to break a
          cyclic dependency, in turn allowing its virtual methods to be
          moved out of line.  Addresses dynamic_cast<> failures in g++ 4.0
          builds.  Thanks to Carlos for suggesting this change. [Bug 2143]

          Moved "Child" subclass virtual methods out of line to address
          RTTI related problems when using g++ 4.0's
          -fvisibility-inlines-hidden command line option.      [Bug 2143]

        * tests/tests.mpc:

          Added new DLL_Test_Parent_Lib project.

          Updated DLL_Test project dependencies to reflect new DLL test
          library layout.

          Corrected MPC "dynamicflags" variable for "Based Pointer Test
          Lib" and "DLL Test Lib" projects. "ACE_SVC_BUILD_DLL" not
          "ACE_BUILD_SVC_DLL".

Thu Oct  6 17:56:19 2005  Steve Huston  <shuston@riverace.com>

        Added support for Windows Mobile 5 and Pocket PC 2003 using
        Visual Studio 2005 (Beta 2). Reorganized some of the config-win32-*
        files to ensure OS things are in config-win32-common.h and compiler
        things are in the various compiler files.

        * ace/config-win32-common.h: Now #includes config-WinCE.h. It's
          possible that config-WinCE.h may get chopped down further and/or
          subsumed into config-win32-common.h as config-WinCE.h gets refined.

          Added ACE_LACKS_MODE_MASKS. It's needed on all variants of
          Windows and all compilers.

          Turn on both ACE_USES_WCHAR and UNICODE if either is set. Removed
          this setting from config-WinCE.h.

        * ace/config-win32-borland.h:
        * ace/config-win32-dmc.h:
        * ace/config-win32-ghs.h:
        * ace/config-win32-mingw.h:
        * ace/config-win32-msvc-6.h:
        * ace/config-win32-msvc-7.h:
        * ace/config-win32-msvc-8.h:
        * ace/config-win32-visualage.h: Removed ACE_LACKS_MODE_MASKS.
          Removed ACE_ENDTHREADEX (moved to config-win32-msvc.h).

        * ace/config-win32-msvc.h: Added ACE_ENDTHREADEX with proper
          setting depending on Windows PC vs. Mobile.

        * ace/config-win32.h: Doesn't include config-WinCE.h any longer.

        * ace/config-WinCE.h: Moved the errno value definitions to
          config-win32-msvc-6.h. They're only needed for the eVC 3 and 4
          compilers, which report themselves using the same versions as
          MSVC 6.

        * ace/Object_Manager.cpp (init): Only act on config.h's
          ACE_DISABLE_WIN32_ERROR_WINDOWS setting if on Windows, but not CE.

        * ace/OS_NS_time.h: Only define struct tm for WinCE if compiling
          on something less than Visual Studio 2005.

        * ace/OS_NS_unistd.inl (rmdir, unlink):
        * ace/OS_NS_sys_stat.inl (mkdir, stat): For wchar_t version on WinCE,
          specify the ...W() form of the system call rather than assume
          the call maps to the W form. WinCE can do either A or W now.

        * ace/OS_NS_time.(cpp h) (day_of_week_name[], month_name[]):
        * ace/OS_NS_sys_socket.cpp (socket_init, socket_fini):
          Changed char array from wchar_t to ACE_TCHAR. WinCE can do either
          narrow or wide and this allows it to adjust. Everything was
          initialized using ACE_LIB_TEXT already.

        * ace/OS_NS_stdio.inl (fdopen, rename, freopen): For WinCE, need to
          convert the ACE_TCHAR string to wchar always. There's no char*
          version of fdopen, et al that I can see.

        * ace/Service_Config.(h inl): Only define the alternate
          intialize/resume/suspend/remove methods for WinCE if ACE_USES_WCHAR
          is set. Else there's already a char* version.

        * ace/TSS_T.cpp (ctor): Use ACE_LIB_TEXT around strings for the
          MessageBox() call on CE. This resolves properly depending on the
          build. CE doesn't always use unicode any more.

        * tests/Logging_Strategy_Test.cpp (get_statistics): Use time_t
          instead of int to return the modified time. Makes it portable to
          64 bits.

Thu Oct  6 10:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Extended empty inline files to also ignore lines starting
          with /* as real contents. Will propobly reveal another few files
          we should zap

Thu Oct  6 08:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * netsvcs/lib/Base_Optimizer.h:
        * netsvcs/lib/Client_Logging_Handler.h:
        * netsvcs/lib/Log_Message_Receiver.h:
        * netsvcs/lib/Name_Handler.h:
        * netsvcs/lib/Server_Logging_Handler.h:
        * netsvcs/lib/Server_Logging_Handler_T.h:
        * netsvcs/lib/Token_Handler.h:
        * netsvcs/lib/TS_Clerk_Handler.h:
        * netsvcs/lib/TS_Server_Handler.h:
          Converted documentation to doxygen style

Thu Oct  6 08:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Message_Queue_Test.cpp:
        * tests/Message_Queue_Test_Ex.cpp:
          Fixed might be unitialized warning in MinGW build

Thu Oct  6 08:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * netsvcs/ACE-netsvcs.html:
          Fixed small typo

Wed Oct  5 22:07:19 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add check for ACE_HAS_PTHREAD_GETCONCURRENCY and
          ACE_HAS_PTHREAD_SETCONCURRENCY.

        * ace/OS_NS_Thread.inl:

          Changed ACE_OS::getconcurrency () to use ::pthread_getconcurrency()
          if ACE_HAS_PTHREAD_GETCONCURRENCY is set.

          Changed ACE_OS::setconcurrency () to use ::pthread_setconcurrency()
          if ACE_HAS_PTHREAD_SETCONCURRENCY is set.

        * ace/README:

          Define ACE_HAS_PTHREAD_GETCONCURRENCY and
          ACE_HAS_PTHREAD_SETCONCURRENCY feature test macros.

Wed Oct  5 13:18:26 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/Shared_Malloc/Malloc.cpp:
        * examples/System_V_IPC/SV_Message_Queues/MQ_Client.cpp:
        * examples/System_V_IPC/SV_Semaphores/Semaphores_1.cpp:
        * examples/System_V_IPC/SV_Semaphores/Semaphores_2.cpp:
        * tests/SV_Shared_Memory_Test.cpp:

          More include directive additions/fixes.

Wed Oct  5 13:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CDR_Base.h:
          Doxygen fixes and removed some checks for very old msvc and borland
          versions

Wed Oct  5 12:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/svcconf.mpb:
          Replaced some spaces with a tab, should fix our Cygwin build

Wed Oct  5 10:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/APG/Processes/Spawn.cpp:
          Fixed 64bit conversion warnings

Wed Oct  5 11:11:21 2005  Simon McQueen  <sm@prismtech.com>

        *  bin/MakeProjectCreator/config/core_anytypecode.mpb:

           Add new base MPC base project that links with the TAO_AnyTypeCode
           library but does not inherit from taoidldefaults or set any IDL
           compiler flags. To be used as an alternative to anytypecode.mpb
           for all projects under $ACE_ROOT/TAO/tao.

Wed Oct  5 02:11:28 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ace_os.mpc:

          Removed this file.  It was inadvertently committed.

Wed Oct  5 01:57:37 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * apps/JAWS2/JAWS/Cache_Manager.cpp:
        * examples/APG/Active_Objects/AO.cpp:
        * examples/APG/Active_Objects/AO2.cpp:
        * examples/APG/Shared_Memory/Hash_Map.cpp:
        * tests/Bound_Ptr_Test.cpp:

          Include appropriate headers to address incomplete type
          definition related compile-time errors.  Necessitated by header
          dependency reductions in ACE.

Wed Oct  5 08:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SSL/SSL_Asynch_Stream.cpp:
          Fixed bug 1770 and 1805. Yoav Borer
          Thanks to <yoav dot borer at data-pod dot com> for reporting
          these.

Wed Oct  5 00:41:18 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Activation_Queue.cpp:
        * ace/Activation_Queue.h:

          Moved "ace/Method_Request.h" include directive to implementation
          file.  A forward request in the header will suffice.

        * ace/SOCK_CODgram.h:

          Support export macros specific to ACE subset libraries.

        * ace/ace.mwc:

          Added missing "ace_for_tao" subset MPC files.

        * ace/ace_memory_for_tao.mpc:
        * ace/ace_reactor_for_tao.mpc:
        * ace/ace_sockets_for_tao.mpc:
        * ace/ace_threads_for_tao.mpc:

          New TAO-specific ACE subset MPC files that were not committed
          in initial "ace_for_tao" commit.

Tue Oct  4 14:21:26 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * netsvcs/lib/TS_Clerk_Handler.h:

          More include directive fixes/additions now necessary due to
          header dependency reductions in ACE.

Tue Oct  4 11:12:31 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * apps/JAWS2/JAWS/Cache_Object.h:
        * apps/JAWS2/JAWS/Cache_Object.cpp:

          Include appropriate headers to address incomplete type
          definition related compile-time errors.  Necessitated by header
          dependency reductions in ACE.

          Declare lock members that are meant to be mutable in all cases
          as "mutable", and remove casts that worked around the
          unnecessary "constness" of those members.

Tue Oct  4 10:39:24 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Service_Config.cpp:

          Include "ace/Signal.h" when ACE_LACKS_UNIX_SIGNALS is
          undefined.  Addresses build errors in non-Windows builds.
          Necessitated by header dependency reductions in ACE.

Tue Oct  4 10:00:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * ace/Obstack_T.h:

          Fix warning about nested comments.

Mon Oct  3 13:30:58 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/APG/Containers/Hash_Map.cpp:
        * examples/APG/Shared_Memory/Malloc.cpp:
        * examples/APG/Shared_Memory/PI_Malloc.cpp:
        * examples/APG/Shared_Memory/Pool_Growth.cpp:
        * examples/Shared_Malloc/Malloc.cpp:
        * examples/Shared_Malloc/Malloc.h:
        * examples/Shared_Malloc/test_malloc.cpp:
        * examples/Shared_Malloc/test_multiple_mallocs.cpp:
        * examples/Shared_Malloc/test_persistence.cpp:
        * examples/Shared_Malloc/test_position_independent_malloc.cpp :

          Include appropriate headers to address incomplete type
          definition related compile-time errors.  Necessitated by header
          dependency reductions in ACE.

Mon Oct  3 18:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SSL/SSL_Context.cpp:
          Use prefix increment/decrement instead of postfix

Mon Oct  3 10:48:23 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/ACE_Memory_export.h:
        * ace/ACE_Reactor_export.h:
        * ace/ACE_Sockets_export.h:
        * ace/ACE_Threads_export.h:

          New export headers for a number of ACE subset libraries.

        * ace/Activation_Queue.cpp:
        * ace/Configuration.h:
        * ace/Malloc.cpp:
        * ace/Obstack_T.h:
        * ace/Obstack_T.cpp:
        * ace/Svc_Conf_l.cpp:
        * ace/Timer_Hash_T.cpp:
        * tests/Based_Pointer_Test.cpp:
        * tests/Malloc_Test.cpp:
        * tests/Message_Block_Test.cpp:

          Include appropriate headers to address incomplete type
          definition related compile-time errors.  Necessitated by header
          dependency reductions in ACE.

        * ace/Activation_Queue.h:
        * ace/Barrier.h:
        * ace/Based_Pointer_Repository.h:
        * ace/Dev_Poll_Reactor.h:
        * ace/File_Lock.h:
        * ace/LSOCK.h:
        * ace/LSOCK_Acceptor.h:
        * ace/LSOCK_CODgram.h:
        * ace/LSOCK_Connector.h:
        * ace/LSOCK_Dgram.h:
        * ace/LSOCK_Stream.h:
        * ace/MEM_Acceptor.h:
        * ace/MEM_Addr.h:
        * ace/MEM_Connector.h:
        * ace/MEM_IO.h:
        * ace/MEM_SAP.h:
        * ace/MEM_Stream.h:
        * ace/MMAP_Memory_Pool.h:
        * ace/Mem_Map.h:
        * ace/Method_Request.h:
        * ace/Msg_WFMO_Reactor.h:
        * ace/Multihomed_INET_Addr.h:
        * ace/PI_Malloc.h:
        * ace/Pagefile_Memory_Pool.h:
        * ace/Priority_Reactor.h:
        * ace/Process.h:
        * ace/Process_Manager.h:
        * ace/Process_Semaphore.h:
        * ace/RW_Process_Mutex.h:
        * ace/SOCK_Dgram_Bcast.h:
        * ace/SOCK_Dgram_Mcast.h:
        * ace/SOCK_SEQPACK_Acceptor.h:
        * ace/SOCK_SEQPACK_Association.h:
        * ace/SOCK_SEQPACK_Connector.h:
        * ace/SV_Shared_Memory.h:
        * ace/Sbrk_Memory_Pool.h:
        * ace/Shared_Memory.h:
        * ace/Shared_Memory_MM.h:
        * ace/Shared_Memory_Pool.h:
        * ace/Shared_Memory_SV.h:
        * ace/Thread_Semaphore.h:
        * ace/UNIX_Addr.h:

          Support export macros specific to ACE subset libraries.

        * ace/Array_Map.h:

          Comment cleanup.

        * ace/High_Res_Timer.h:

          Removed trailing whitespace.

        * ace/Malloc.h:

          Removed extraneous headers unnecessary for the types declared in
          this header.

        * ace/OS_NS_Thread.inl (ACE_Thread_ID):

          Prefer initialization of thread_id_ member in base member
          initializer list rather than constructor body.

        * ace/ace.mpc:
        * ace/ace.mwc:
        * ace/ace_for_tao.mpc:
        * ace/ace_os.mpc:

          Add support ACE subsets (predominantly TAO-specific).

        * ace/svcconf.mpb:

          Moved Svc_Conf parser and lexer generation Make rules to this
          MPC base project.  Allows subset projects to inherit these
          rules.

        * bin/MakeProjectCreator/config/ace_for_tao.mpb:
        * bin/MakeProjectCreator/config/acememorylib_for_tao.mpb:
        * bin/MakeProjectCreator/config/acenosubsets.mpb:
        * bin/MakeProjectCreator/config/acereactorlib_for_tao.mpb:
        * bin/MakeProjectCreator/config/acesocketslib_for_tao.mpb:
        * bin/MakeProjectCreator/config/acethreadslib_for_tao.mpb:

          New TAO-specific ACE subset MPC support.  Enabled when
          "ace_for_tao" is set to "1" in an MPC features file.

        * bin/MakeProjectCreator/config/aceexe.mpb:
        * bin/MakeProjectCreator/config/acelib.mpb:

          Support "ace_for_tao" subset.

        * bin/MakeProjectCreator/config/global.features:

          Disabled "ace_for_tao" feature by default.

        * bin/MakeProjectCreator/config/taolib.mpb:

          Inherit "ace_for_tao" feature project.  Causes TAO-based
          projects to use the "ace_for_tao" subset libraries when that
          feature is enabled.

Mon Oct  3 12:50:00 2005  Simon Massey  <simon.massey@prismtech.com>

        * ace/Asynch_IO.h:

          Remove some more Doxygen warnings from the scoreboard.

Mon Oct  3 13:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Server_Concurrency/Leader_Follower/leader_follower.cpp:
          Fixed might be unitialized warning in Cygwin build

Mon Oct  3 12:50:00 2005  Simon Massey  <simon.massey@prismtech.com>

        * ace/ACE.h:
        * ace/Acceptor.h:
        * ace/Stats.h:
        * ace/Containers_T.h:

          Remove some Doxygen warnings from the scoreboard.

Mon Oct  3 11:27:13 2005  Simon McQueen  <sm@prismtech.com>

        * bin/tao_other_tests.lst:

          Scheduled TAO/orbsvcs/tests/Bug_2248_Regression.

Mon Oct  3 09:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_gnuwin32_common.GNU:
          Changed the default of exceptions to be 1

Mon Oct  3 06:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Log_Msg.{h,cpp}:
          Changed type of msg_off_ from int to long to fix 64bit
          conversion warnings

Sun Oct  2 19:18:01 2005  Olli Savia  <ops@iki.fi>

        * ace/config-lynxos.h:
          Added contents from config-lynxos4.0.0.h to this file.
          config-lynxos4.0.0.h is no longer needed.

        * ace/config-lynxos4.0.0.h:
          Removed this file.

Sat Oct  1 11:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_stdio.cpp:
          Fixed _open_osfhandle call

Fri Sep 30 14:00:36 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * bin/fuzz.pl:

          Added a new test, check_for_refcountservantbase, that will
          report occurrences of PortableServer::RefCountServantBase in
          code.  This is good because the default is now changed in TAO to
          reflect the change in the CORBA spec.

          Changed all error and warning messages to be consistently
          printed with the keyword "Error: " or "Warning: " followed by
          the filename and line number where the problem occurred, then
          followed by a text description of the problem.  This makes the
          messages' format consistent with that output by grep and
          compilers so that one can use tools like emacs' 'compile' mode
          to step through the fuzz errors and easily fix things.

Fri Sep 30 10:34:24 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add feature checks for ACE_LACKS_INTMAX_T, ACE_LACKS_INTPTR_T,
          ACE_LACKS_UINTMAX_T, and ACE_LACKS_UINTPTR_T.

        * ace/README:

          Define ACE_LACKS_INTMAX_T, ACE_LACKS_UINTMAX_T, and
          ACE_LACKS_UINTPTR_T feature test macros.

Fri Sep 30 13:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/modules/BorlandWorkspaceCreator.pm:
          Corrected the directory changing code to take 2 or more deep
          relative paths into account. Merged this fix from the MPC
          templates bmake. Thanks to Chad Elliott for fixing these.

Fri Sep 30 08:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-borland.h:
        * ace/config-win32-msvc-6.h:
        * ace/OS_NS_stdio.cpp:
        * ace/OS_NS_stdio.inl:
        * ace/OS_NS_unistd.inl:
        * ace/README:
          Added new ACE_LACKS_INTPTR_T and use this. This type is used to call
          _open_osfhandle on windows. It seems not to be available with BCB6
          and earlier and msvc6. Thanks to Simon McQueen for notifying me that
          msvc6 also lacks this.

Fri Sep 30 07:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SOCK_IO.cpp:
        * ace/SOCK_Dgram_Bcast.cpp:
        * ace/SOCK_Dgram.cpp:
        * ace/OS_NS_unistd.inl:
        * ace/OS_NS_stdio.inl:
        * ace/OS_NS_stdio.cpp:
        * ace/MEM_IO.cpp:
        * ace/ACE.cpp:
          Fixed 64bit conversion warnings when building on win32 with 64bit
          warnings enabled

Thu Sep 29 16:07:02 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * bin/FOCUS:
          Directory where FOCUS related work will be added.

        * bin/FOCUS/ChangeLog:
        * bin/FOCUS/FOCUS.pl:
        * bin/FOCUS/NEWS:
        * bin/FOCUS/PROBLEM-REPORT-FORM:
        * bin/FOCUS/Parser:
        * bin/FOCUS/README:
        * bin/FOCUS/VERSION:
        * bin/FOCUS/docs:
        * bin/FOCUS/specializations:

          FOCUS related files and directories. Please read the Changelog
          in FOCUS for more details on each component.

        * bin/FOCUS/specializations/Context-Specific-Optimizations:
        * bin/FOCUS/specializations/Flushing_Strategy:
        * bin/FOCUS/specializations/Messaging_Strategy:
        * bin/FOCUS/specializations/Protocol_Family:
        * bin/FOCUS/specializations/README:
        * bin/FOCUS/specializations/Reactor_Family:
        * bin/FOCUS/specializations/Wait_Strategy:

          Specializations for the different components in ACE+TAO. Each
          directory contains the specialization files for specializing the
          appropriate component/strategy.

        * bin/FOCUS/Parser/FOCUSParser.pm:

          Parser/weaver that reads the specialization description and
          performs the transformations.

        * bin/FOCUS/docs/FOCUS.html:

          Start at the documentation effort.

          The Changelogs within the FOCUS directory will capture the
          different changes henceforth.

Thu Sep 29 13:28:29 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * bin/fuzz.pl (check_for_refcountservantbase):

          Added a new fuzz check to catch derivations to
          PortableServer::RefCountServantBase.  Obviously, this check only
          applied to TAO, and the test itself isn't very discriminating as
          it simply looks for the presence of
          "PortableServer::RefCountServantBase" in a file and doesn't
          attempt to detect derivation.  There are also no means to turn
          off the check in comments.  But it's better than nothing.

Thu Sep 29 15:18:24 2005  Simon McQueen  <sm@prismtech.com>

        * bin/tao_other_tests.lst:

          Scheduled TAO/orbsvcs/tests/Bug_2247_Regression.

Thu Sep 29 12:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/footprint_stats.sh:
          Fixed codeset library name

Thu Sep 29 09:03:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * apps/JAWS2/JAWS/IO_Acceptor.cpp:
          Fixed unused parameters

Thu Sep 29 09:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * html/Stats/footer.html:
        * html/Stats/configuration.shtml:
        * html/Stats/navigation.html:
        * html/Stats/index.shtml:
        * html/Stats/detailed_footprint.shtml:
          I have taken the files currently on the webserver and updated
          cvs with these versions. This way we can update these files
          in cvs and update the webserver automatically. I will reconfigure
          the stats build to copy all the files in this directory to
          the webserver when the build is ready

        * html/Stats/footprint.shtml:
        * html/Stats/img.html:
        * html/Stats/simple_footprint.shtml:
        * html/Stats/performance.shtml:
        * html/Stats/compilation.shtml:
          New files

        * bin/footprint_stats.sh:
          Also generate the footprint of the new core TAO libs we added
          the last months

Thu Sep 29 08:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * html/index.html:
          Fixed typo

Thu Sep 29 07:59:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_fcntl.cpp:
          Use C++ cast instead of c-style cast

        * ace/FILE_Connector.cpp:
          Small layout fix

Wed Sep 28 11:38:07 2005  Chad Elliott  <elliott_c@ociweb.com>

        Committing the following change on behalf of Wallace Zhang
        <zhang_w@ociweb.com>.

        * bin/tao_orb_tests.lst:

          Enabled a new Smart Proxy test,i.e.,
          $TAO_ROOT/tests/Smart_Proxies/dtor/run_test.pl

Wed Sep 28 07:46:57 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/Atomic_Op.cpp:
        * ace/Atomic_Op.h:
        * ace/Atomic_Op.inl:
        * ace/Object_Manager.cpp:

          Revert change:
          Fri Sep 16 19:54:20 2005  J.T. Conklin  <jtc@acorntoolworks.com>

          As the new ACE_Atomic_Op<ACE_Thread_Mutex, unsigned long>
          template specialization was not found responsible for the
          TAO performance regressions.

Wed Sep 28 11:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html:
          Small updates to Borland documentation

Wed Sep 28 07:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/compiler.bor:
          At the moment BCBVER is not set, we default to BCB6.

Tue Sep 27 13:40:45 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_config_handlers.mpb
        * bin/MakeProjectCreator/config/ciao_xml_utils.mpb

        Added files that should have been part of the previous commit.

Tue Sep 27 13:12:28 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_client.mpb

        Removed another obsolete ciao base project.

        * bin/MakeProjectCreator/config/ciao_client_dnc.mpb
        * bin/MakeProjectCreator/config/ciao_component_dnc.mpb
        * bin/MakeProjectCreator/config/ciao_servant_dnc.mpb
        * bin/MakeProjectCreator/config/ciao_server_dnc.mpb

        Revamped the CIAO base project structure to fix deficiencies
        exposed by the especially strict linker on MacOS.

Tue Sep 27 10:29:49 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_component.mpb
        * bin/MakeProjectCreator/config/ciao_servant.mpb
        * bin/MakeProjectCreator/config/ciao_server.mpb

        Removed obsolete CIAO base projects.

Tue Sep 27 13:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/ciao_DAnCE.doxygen:
          Removed zapped XML_Helpers directory

Tue Sep 27 10:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Also detect ACE_THROW in an ACE_TRY block

Mon Sep 26 10:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Extended fuzz check to detect ACE_THROW_RETURN in an ACE_TRY block,
          in that case ACE_TRY_THROW should be used.

Mon Sep 26 10:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/ciao_xml_helpers.doxygen:
        * etc/ciao_config_handlers.doxygen:
          Renamed ciao_xml_helpers to ciao_config_handlers. Corrected also
          paths, fixes errors in the doxygen build

        * bin/generate_doxygen.pl:
          Updated change above

Sat Sep 24 12:56:20 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * ace/Acceptor.cpp:
        * ace/Strategies_T.cpp (accept_svc_handler):

          Errno of failed accept() call is potentially not preserved due
          to unguarded call of svc_handler->close().  Thus when
          accept_svc_handler() returns -1 the errno value may be due to a
          subsequent failure in the svc_handler->close() method rather
          than the original accept() failure,  making handling of the
          accept() failures difficult. Thanks to Russell Mora
          <russell_mora at symantec dot com> for the patch.

Fri Sep 23 10:07:25 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * ace/config-macosx-tiger.h
        * include/makeinclude/platform_macosx_tiger_gcc4.GNU

          Updates for Tiger compatibility. Thanks to Michael van der
          Westhuizen (r1mikey at gmail dot com) for help with tracking
          down some troublesome issues in the platform_macros.

Thu Sep 22 12:40:20 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/ace.m4:

          Set BUILD_TAO_FLRESOURCE, BUILD_TAO_QTRESOURCE,
          BUILD_TAO_TKRESOURCE, and BUILD_TAO_XTRESOURCE automake
          conditionals if --enable-fl-reactor, --enable-qt-reactor,
          --enable-tk-reactor, or --enable-xt-reactor are specified
          at configure time.

Thu Sep 22 08:40:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * tests/run_test.lst:
          Stop based_pointer_test running on VxWorks and Static builds.

Thu Sep 22 08:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/ASX/Event_Server/Event_Server/event_server.cpp:
        * performance-tests/Synch-Benchmarks/Perf_Test/Performance_Test_Options.h:
          64bit fix

        * bin/fuzz.pl:
          Extended fuzz check to detect several corba calls without an
          ACE_CHECK in between

        * ace/SOCK_Dgram.cpp:
          Small layout fixes

        * ace/Service_Config.h:
          Added missing ACE_LIB_TEXT to some macros

Tue Sep 20 10:37:24 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Pipe.inl: Added #include of "ace/ACE.h" to get the
          right class definition for the ACE:: methods.  Thanks to Simon
          Massey for reporting this.

Tue Sep 20 15:20:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added new TAO/tests/CallbackTest/*.pl tests.

Tue Sep 20 10:10:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * tests/Based_Pointer_Test.cpp:
          Attempt to fix bug 2232 (Implimented the diffs found there).

Tue Sep 20 08:43:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * bin/tao_other_tests.lst:
          Added new IPV6 specific tests.

Tue Sep 20 08:29:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added new TAO/tests/BiDirectional/run_test_ipv6.pl
          IPV6 test.

Mon Sep 19 11:43:59 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * docs/ACE-guidelines.html: Added a guideline that disallows the use of
          assert() macros et al. in core ACE, TAO, and CIAO
          library/framework code.  Thanks to Dave Giovannini <giovanninid
          at ociweb dot com> and Carlos O'Ryan for motivating this.

        * protocols/ace/RMCast/Socket.cpp: Replaced the use of ACE_OS::write()
          and ACE_OS::read() with the new ACE_Pipe::send() and
          ACE_Pipe::recv() methods thanks to Felix's enhancements.

        * ace/Pipe.{h,inl,cpp}: Added a full complement of send*() and recv*()
          methods so that the code is portable across different operating
          systems without requiring user-level #ifdefs.  Thanks to Felix
          Li <fengli@gmail.com> for submitting these enhancements.

Mon Sep 19 12:35:39 2005  Justin Michel  <michel_j@ociweb.com>

        * tests/MT_SOCK_Test.cpp:

          Fix use of ACE_static_cast from my  Fri Sep 2 checkin.

Mon Sep 19 10:51:26 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/generate_doxygen.pl

          Removed obsolete CIAO projects from Doxygen generation.

        * etc/ciao_xml_helpers.doxygen

          Updated path to new config_handlers.

        * etc/ciao_assembly_deployer.doxygen
        * etc/ciao_componentserver.doxygen
        * etc/ciao_daemon.doxygen
        * etc/ciao_serveractivator.doxygen

          Removed obsolete ciao doxygen files.

Sun Sep 18 17:28:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/INET_Addr.cpp:
          Fixed bug in ACE_INET_Addr::string_to_addr().

Sun Sep 18 17:26:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/Log_Msg.cpp:
          Fixed compile error in latest addition to code.

Sun Sep 18 10:08:05 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Log_Msg.cpp (log): Check for passing of NULL pointers to %s
          formatting strings and replace them with "(null") to avoid
          crashes.  Thanks to Steven Xie <steven.xie@mpathix.com> for
          reporting this and to J.T. for suggesting the fix.

        * protocols/ace/RMCast/Acknowledge.cpp (ACE_RMCast):
          made the default ACE_Hash_Map_Manager size be 10 rather than
          1024.  Thanks to Felix Li <fengli@gmail.com> for reporting
          this.

Fri Sep 16 19:54:20 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/Atomic_Op.cpp:
        * ace/Atomic_Op.h:
        * ace/Atomic_Op.inl:
        * ace/Object_Manager.cpp:

          #if 0 ACE_Atomic_Op<ACE_Thread_Mutex, unsigned long>
          specialization to see if it's responsible for recent
          TAO performance degradation.

Fri Sep 16 10:57:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * bin/tao_orb_tests.lst:

          Added new TAO/tests/IPV6 test to runlist (only when config
          IPV6 defined).

Thu Sep 15 12:35:27 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * THANKS:

          Added Jin Zhi Ye.

        * ace/os_include/os_stdio.h:

          #undef fgetc and fputc if they are defined, as macro expansion
          conflicts with our use of the same names in the ACE_OS wrapper
          functions.  Reported by Jin Zhi Ye <jinzhiye at kedacom dot com>.

Thu Sep 15 18:55:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/Atomic_Op.inl:

          Small fix to get rid of annoying warning on Windows concerning
          unary '-'.

Wed Sep 14 13:36:34 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Changed ACE_HAS_MEMCPY_LOOP_UNROLL feature test code such that
          smemcpy() correctly returns it's first argument.

          Added third argument to ACE_HAS_MEMCPY_LOOP_UNROLL's AC_DEFINE
          to provide the description for config.h.

Tue Sep 13 14:38:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * include/makeinclude/platform_vxworks5.5.x.GNU:

          Changed munching step for VxWorks SIMPC builds to generate asm
          output to circumvent compiler output problem in certain files.

        * include/makeinclude/rules.lib.GNU:

          Small change to make output of prelink step visible for static
          libraries build for VxWorks with -frepo.

Tue Sep 13 09:30:03 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * ace/OS_NS_string.{h,cpp,inl}:
          Updated the loop unrolled memcpy version name to fast_memcpy
          rather than smemcpy.

Tue Sep 13 09:18:54 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * configure.ac:

          Fixed the autoconf test that checks for memcpy loop unrolling
          optimization, by (1) removing the testit function and replacing
          it with a function pointer, (2) by properly setting the right
          ACE macro when the test succeeds and (3) enabling the flag only
          when the test produces a result > 10% for all sizes between
          1..16.

Tue Sep 13 14:10:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tests/Cached_Accept_Conn_Test.cpp:
        * tests/Cached_Conn_Test.cpp:
        * tests/Message_Block_Test.cpp:

          Fixed problems with explicit template instantiations and
          VxWorks builds.

Tue Sep 13 11:52:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * apps/JAWS2/JAWS/Cache_Manager_T.cpp:
        * examples/APG/Logging/LogManager.h:
        * examples/APG/Logging/Use_Multiple_Sinks.cpp:
        * examples/APG/Logging/Use_Ostream.cpp:
        * examples/C++NPv1/Logging_Client.cpp:
        * examples/C++NPv2/Select_Reactor_Logging_Server.cpp:
        * examples/C++NPv2/Server_Shutdown.cpp:
        * examples/C++NPv2/TP_Reactor_Logging_Server.cpp:
        * examples/Export/test.cpp:

          Fixed for environments defining ACE_USES_OLD_IOSTREAMS
          (which unfortunately is the case for Windows x64 at the
          moment due to shortcomings in the Platform SDK).

Tue Sep 13 10:30:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * bin/tao_orb_tests.lst:
          Added Bug_2234_Regression test.

Tue Sep 13 10:11:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * bin/tao_orb_tests.lst:
          Excluded a few tests based on 'IPV6' configuration because
          they use features which are not IPv6 compatible (yet) like
          SHMIOP.

Fri Sep  9 18:57:31 2005  Steve Huston  <shuston@riverace.com>

        * ace/Sock_Connect.cpp (bind_port): Replace variable s_addr with
          addr_p. s_addr is a macro on some systems (in this case, Solaris 8)
          and caused problems.

Fri Sep  9 11:05:27 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/config-lynxos4.0.0.h:
          Added new config file to accomodate new version of LynxOS.

Thu Sep  8 16:33:38 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/tls.m4:

          Added support for --with-openssl, --with-openssl-include, and
          --with-openssl-libdir options so users can select or override
          the location of the OpenSSL libraries.

Thu Sep  8 18:43:12 2005  Steve Huston  <shuston@riverace.com>

        * tests/Based_Pointer_Test.cpp (mmap_remap_test): Don't keep increasing
          the allocation until the base pointer changes without checking for
          an allocation failure. This caused all memory to be absorbed on AIX
          without remapping the base, then the log file was so big that
          the log processor for the scoreboard ran out of memory processing it.

Thu Sep  8 06:47:11 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/GNUACEProjectCreator.pm:

          Allow files with .. in the path to count in the VPATH setting.

Wed Sep  7 14:44:58 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/SSL/Makefile.am:
        * examples/C++NPv2/Makefile.am:
        * examples/IPC_SAP/SSL_SAP/Makefile.am:

          Regenerated.

        * bin/MakeProjectCreator/config/ace_openssl.mpb:

          Use 'compile_flags' instead of 'includes' to set compile flags
          to @ACE_TLS_CPPFLAGS@.  Thanks to Chad Elliot for this hint.

          Uncomment automake "specific" block.

Tue Sep  6 22:02:16 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/ace_openssl.mpb:

          Subtract /usr/kerberos/includes from includes for automake
          builds.

          Changed ${ACE_TLS_FOO} to @ACE_TLS_FOO@ so variables will be
          substituted by the values obtained by the configure script.

Tue Sep  6 21:56:43 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * m4/tls.m4:

          Changed to substitute ACE_TLS_CPPFLAGS and ACE_TLS_LDFLAGS like
          was done with ACE_TLS_LIBS.

Tue Sep  6 19:43:47 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/automake.features:

          New features file for automake build.

Tue Sep  6 17:37:15 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/ssl.mpb:
        * ace/SSL/ssl.mpc:

          Changed to inherit from ace_openssl.mpb instead of openssl.mpb.

        * bin/MakeProjectCreator/config/ace_openssl.mpb:

          New file, similar to other ace_*.mpb files, so we can
          override values inherited from MPC's openssl.mpb.

Tue Sep  6 12:20:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/Object_Manager.cpp:

          Changed to invoke ACE_Atomic_Op<ACE_Thread_Mutex, unsigned
          long>::init_functions () to initialize function pointers.

        * ace/Atomic_Op.cpp:
        * ace/Atomic_Op.h:
        * ace/Atomic_Op.inl:

          Added ACE_Atomic_Op<ACE_Thread_mutex, unsigned long> template
          specialization using the existing atomic operations for longs
          with judicious use of casts.  The implementation isn't ideal,
          since two sets of function pointers need to be set.  This can
          be revisited when we add specializations for int and unsigned
          int.

Tue Sep  6 10:32:23 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Change the position of the use of custom 'output_option' setting.
          Ensure that the input file is the last thing on the command line.

Tue Sep  6 12:51:19 UTC 2005  Don Sharp  <Donald.Sharp@prismtech.com>

        * apps/JAWS2/JAWS/IO.h
          Small fix to counter LynxOS' defining ERROR_MESSAGE

Tue Sep  6 08:46:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * include/makeinclude/platform_vxworks5.5.x.GNU:
          Small fix for '-frepo' builds with shared libs.

Mon Sep  5 14:56:53 2005  Boris Kolpackov  <boris@kolpackov.net>

        * protocols/ace/RMCast/Socket.cpp:

        Reverted this change: "Replaced calls to read/write with
        recv_n/send_n to make things work with BCB on Windows".
        It breaks VC6.

Sun Sep  4 22:27:19 2005  Boris Kolpackov  <boris@kolpackov.net>

        * protocols/ace/RMCast/Link.cpp:

        Aligned receiving buffer manually. This is necessary because
        some of the broken compilers (like BCB) do not adhere to the
        standard when it some to the alignment of the buffers returned
        by operator new. Thanks to Vladislav Zverev <vladislav at gtss
        dot spb dot ru> for reporting this.

        * protocols/ace/RMCast/Socket.cpp:
        * protocols/ace/RMCast/Socket.h:

        Added the from argument to the recv() function. Made the Reactor
        interface code executed only when it is actually used. Replaced
        calls to read/write with recv_n/send_n to make things work with
        BCB on Windows. Thanks to Vladislav Zverev <vladislav at gtss
        dot spb dot ru> for suggestions.

Fri Sep  2 08:29:38 2005  Arvind S. Krishna  <arvindk@tango.dre.vanderbilt.edu>

        * ace/OS_NS_string.h:
        * ace/OS_NS_string.cpp:
        * ace/OS_NS_string.inl:

          Updated the ACE_OS::memcpy optimization to factor out the loop
          unrolled code into a separate function. This should enable
          memcpy function itself to be inlined. Thanks to JT jtc at
          acorntoolworks dot com.

Fri Sep  2 10:44:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/SOCK_Dgram{.h .cpp}:
        * ace/SOCK_Dgram_Mcast{.h .cpp}:
          Added IPv6 multicast support for Win32 (>= XP Pro/Server 2003).

        * tests/Multicast_Test_IPV6.cpp:
          Changed to do IPv6 multicast for non-linux systems as well.

        * bin/MakeProjectCreator/config/ipv6.mpb:
          Added new feature config for IPv6 support.
          Adds additional link library Iphlpapi.lib for windows projects
          (MPC types vc6, vc7, vc71, vc8, nmake, borland and bmake)
          and sets macro ACE_HAS_IPV6.

        * bin/MakeProjectCreator/config/global.features:
        * bin/MakeProjectCreator/config/acedefaults.mpb:
          Introduced 'ipv6' feature.

Fri Sep  2 15:08:27 2005  Justin Michel  <michel_j@ociweb.com>

        * ace/ACE.cpp:

          The code that waited for connections to complete had problems
          with some Windows machines. The code now doesn't trust the write
          bit in select() to indicate an accepted connection.

        * ace/SOCK_Connector.cpp:

          There was a workaround for ACE_WIN32 that would wait 35ms and
          retry after the first connection failure. It wouldn't retry the
          connect(), but would just retry select(). This workaround
          appears to be unnecessary for current Windows machines, so I
          changed the #ifdef ACE_WIN32 to #ifdef ACE_HAS_NON_BLOCKING_BUG.

        * ace/config-win32-common.h:

          ACE would always default to a ACE_DEFAULT_BACKLOG of 5. Changed
          to default to SOMAXCONN on Win32. This special value is used by
          Winsock listen() to indicate that the machine should
          automatically pick a suitable default.

        * tests/MT_SOCK_Test.cpp:

          This test is really to verify that the listen() backlog feature
          works correctly.  Updated the code to make this testable and
          consistent. The code now sleeps in the server thread to give the
          30 client threads time to attempt to connect. Only 5-9 clients
          should succeed, because the Acceptor is created with a listen()
          backlog=5.

Thu Sep  1 17:28:25 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/Atomic_Op.cpp:
        * ace/Atomic_Op.h:

          Added ACE_Atomic_Op<ACE_Thread_Mutex, long> template
          specialization for AMD64 when compiled with GCC.

Thu Sep  1 17:38:10 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/ciao_tests.lst

        Corrected the path to the hello test.

Thu Sep  1 18:00:31 2005  Steve Huston  <shuston@riverace.com>

        * tests/Based_Pointer_Test.cpp: Corrected to build on MSVC 6,
          lacking template typedefs. Thanks to Johnny Willemsen for
          this fix.

Thu Sep  1 15:05:55 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * bin/MakeProjectCreator/config/ciao_client_dnc.mpb
        * bin/MakeProjectCreator/config/ciao_servant_dnc.mpb

        Updates to support the CIAO reorganization.

Thu Sep  1 19:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/templates/bor.mpd:
          For MPC projects that are custom_only and only have IDL
          build rules the install target didn't work anymore. If the project
          is not an dll or exe, we generate an include of install.bor
          and set the install types to includes. This way the install
          target works for the generate borland makefiles

Thu Sep  1 11:55:39 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * ace/OS_NS_unistd.cpp (num_processors, num_processors_online):

          Provide implementation for *BSD and MacOSX.

Thu Sep 01 10:42:17 2005  Gary Maxey <gary.maxey@hp.com>

        * ace/config-tandem-nsk-mips-v3.h:
          Defined ACE_SIZEOF_WCHAR

Thu Sep  1 15:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SV_Message_Queue.h:
          Fixed copy/paste error

Thu Sep  1 14:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/POSIX_Proactor.cpp:
        * ace/SV_Message_Queue.{h,inl}:
          Fixed 64bit warnings

        * ace/UPIPE_Connector.cpp:
          Fixed formatting

Thu Sep  1 14:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Timer_Heap_T.cpp:
          Fixed 64bit conversion error

Thu Sep  1 10:10:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ACE.cpp:
        * ace/LSOCK.{h,cpp}:
          Fixed 64bit conversion problems

Thu Sep  1 10:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_icc.GNU:
          Suppress warning 1684 with Intel 9. This is:
          Conversion from pointer to same-sized integral type
          (potential portability problem)

Thu Sep  1 09:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_sys_socket.{h,inl}:
          Updated return value of send/recv methods from int to ssize_t to
          fix problems on 64bit systems. On 32bit systems int is size of
          ssize_t so no backward compatibility issues. This is part of
          bug 2203

        * ace/OS_NS_unistd.inl:
          Replaced c-style cast with C++ cast

Thu Sep  1 08:20:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * include/makeinclude/platform_vxworks5.5.x.GNU:
          Added missing library searchpath for '-frepo' builds.

Thu Sep  1 07:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Service_Config.h:
          Added ACE_REMOVE_SERVICE_DIRECTIVE that works with plain svc.conf
          and the xml version. Thanks to
          Lothar Werzinger <lothar at xcerla dot com> for creating this new
          macro

Wed Aug 31 14:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/DLL_Manager.cpp:
          Initialize pointer to zero

Wed Aug 31 14:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/MEM_Stream.{h,inl}:
        * ace/OS_NS_sys_msg.{h,inl}:
          64bit fixes

        * ace/Framework_Component.cpp:
          Initialize pointer to zero

Wed Aug 31 08:48:19 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * configure.ac:
          Added a test to see if memcpy unrolling improves performance as
          opposted to a vanilla memcpy. This optimization is thanks to
          Mike Martinez martinez_m at oci dot com.

        * OS_NS_string.inl:
          Updated ACE_OS::memcpy to use the corresponding loop unrolling
          based on a flag set by configure.

Wed Aug 31 10:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Get_Opt.cpp:
          Fixed 64bit conversion warning

Wed Aug 31 10:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/LSOCK.{h,cpp} (recv_handle):
          Changed the type of the len argument from int to ssize_t to
          fix 64bit conversion problems

Wed Aug 31 10:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Log_Msg_UNIX_Syslog.{h,cpp}:
        * ace/Log_Record.{h,inl}:
          Fixed 64bit conversion problems

Wed Aug 31 10:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Timer_Heap_T.{h,cpp}:
          Fixed 64bit conversion problems

Wed Aug 31 07:39:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/Sock_Connect.cpp:
          Fixed WChar problem.

Wed Aug 31 06:10:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Based_Pointer_Test_Lib.cpp:
          Fixed GCC 4 error

Tue Aug 30 14:50:18 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/OS_NS_Thread.inl (ACE_Thread_ID):

          Moved small functions out-of-line.  Reduces footprint and
          improves performance slightly.

        From Patrick Bennett <Patrick.Bennett@inin.com>
        * ace/OS_NS_Thread.cpp (operator==):
        * ace/Thread_Manager.inl (operator=-):

        Corrected thread id/handle equality logic.  It was previously
        inverted.

Tue Aug 30 18:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Based_Pointer_Test.cpp:
          Corrected remap test, some platforms grow the mmap area
          downwards. This fixes bugzilla bug 2226. Thanks to
          James Megquier <jmegquier at gmail dot com> for reporting this and
          Steve Williams <steve at telxio dot com> for validating this.

Tue Aug 30 18:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_icc.GNU:
          Use -fPIC instead -KPIC

Tue Aug 30 18:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Based_Pointer_Test.cpp:
          Some more wchar fixes

Tue Aug 30 18:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_Thread.{h,cpp}:
          Made the methods id, handle and to_string of the ACE_Thread_Id
          class const. Thanks to Felix Wyss <FelixW at inin dot com>
          for reporting this.

Tue Aug 30 18:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_icc.GNU:
          Use icpc as C++ compiler.

Tue Aug 30 14:49:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/README:
          Added description for new ACE_HAS_IPV6_V6ONLY macro.

Tue Aug 30 13:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_win32_icc.GNU:
          First version of Intel C++ compiler on Windows using GNU make

        * ace/config-win32-msvc-7.h:
          Only define ACE_HAS_EXCEPTIONS when it is not defined yet

Tue Aug 30 12:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Array_Map.h:
          The 64bit version of the Intel C++ compiler can only work together
          with the latest Platform SDK (June 2005). This SDK ships with an
          old version of the system header files, this is not the same as
          shipped with Visual C++ 2003. This SDK has the old STL implementation
          as shipped with VC6, so we need the workaround for the VC6 compiler
          also with the latest SDK. It seems newer system header files define
          _CPPLIB_VER, when this is not defined we have old header file, so
          made another check, when _MSC_VER is defined, but not _CPPLIB_VER
          we assume older header files and use the vc6 way of reverse
          iterator usage. Hopefully Microsoft ships a platform SDK soon which
          has updated header files

Tue Aug 30 12:22:17 2005  Simon McQueen  <sm@prismtech.com>

        * apps/JAWS2/JAWS/IO.cpp:
        * apps/JAWS2/JAWS/IO.h:

          Removed mispelled message type 'CONFORMATION'.

Tue Aug 30 10:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Process_Manager.cpp:
        * ace/WFMO_Reactor.cpp:
          Fixed incorrect checks for MSC_VER, it should be _MSC_VER

Tue Aug 30 10:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Based_Pointer_Test.cpp:
          Fixed compile error

Tue Aug 30 09:00:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/Default_Constants.h:
          Added some new default macros for IPv6.

        * ace/INET_Addr{.cpp .h .inl}:
          Added more (IPv6 specific) functionality (is_xxx methods).
          Changed get_host_addr() to return IPv6 formatted string for
          IPv4 mapped IPv6 addresses (argumentation inside:).
          Changed string_to_addr() to recognize and handle extended
          IPv6 textual address format, i.e. '[' <ipv6> ']'.

        * ace/Sock_Connect.cpp:
          Added support for retrieval of IPv6 local interfaces to
          ACE::get_ip_interfaces().
          Supported for Windows XP (and newer) and Linux (possibly other
          *nixes as well).

Tue Aug 30 06:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_icc.GNU:
          When inlining is disabled, add -fno-inline to the compiler flags.
          This should fix the assembler errors the Intel 9 compiler on
          linux gives

Mon Aug 29 17:26:49 2005  Steve Huston  <shuston@riverace.com>

        * ace/Reactor_Token_T.h: Set the default queueing policy to
          ACE_Token::FIFO, instead of ACE_TOKEN_TYPE::FIFO to work around
          MSVC 6's inability to deal with the definition inside a
          template class argument. This hack can be removed after
          ACE 5.5 is released.

Mon Aug 29 19:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Based_Pointer_Test.cpp:
          Wchar fixes

Mon Aug 29 14:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Based_Pointer_Test.cpp:
          Fixed GCC compile error

Mon Aug 29 14:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Object_Manager.cpp:
          Also for Intel C++ call the _CrtSetReportMode

Mon Aug 29 10:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/nmake.features:
          New features file for the nmake project type

Mon Aug 29 09:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/MMAP_Memory_Pool.cpp:
          Fixed bugzilla bug 2218, when an ACE_MMAP_Memory_Pool memory
          segment base address is moved due to a remapping operation,
          the ACE_Based_Pointer_Repository is updated with the new
          base address, but the old mapping was not removed.

          Thanks to Steve Williams <steve at telxio dot com> for reporting
          this and supplying the fix and regression test below.

Mon Aug 29 09:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/MMAP_Memory_Pool.cpp:
          Fixed bugzilla bug 2216, when an ACE_MMAP_Memory_Pool is created
          using an existing backing store, the ACE_Based_Pointer_repository
          was not updated with the mapped segment information.

          Thanks to Steve Williams <steve at telxio dot com> for reporting
          this and supplying the fix and regression test below.

Mon Aug 29 09:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Based_Pointer_Repository.h:
          Export the based pointer repository from the dll as singleton.
          Fixes bugzilla bug 1919.

        * tests/Based_Pointer_Test.cpp:
        * tests/Based_Pointer_Test_Lib.cpp:
          New test for bugzilla bug 1919. Thanks to Steve Williams
          <steve at telxio dot com> for creating this test

        * tests/run_test.lst:
          Added Based_Pointer_Test

        * tests/tests.mpc:
          Added Based_Pointer_Test

Sun Aug 28 14:25:07 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * ace/Reactor.h:
        * ace/Reactor.cpp:
        * ace/Reactor.inl:
        * ace/Select_Reactor.h:
        * ace/Select_Reactor_Base.h:
        * ace/Select_Reactor_T.cpp:
        * ace/Select_Reactor_T.h:
        * ace/TP_Reactor.cpp:

          The reactor framework in ACE allows plug and play of different
          reactors such as Select, TP, Devpoll etc. The TAO middleware
          implementation and applications that run atop TAO typically use
          one particular implementation of the Reactor. For example, a
          single-threaded application might use select_* reactors. The
          Reactor framework uses the bridge pattern to transparently
          invoke operations on the right reactors. When the concrete
          Reactor is known, it should be possible to specialize the
          framework to use the concrete reactor directly rather than use
          the bridge.

          As a part of the Feature Oriented Customizer (FOCUS) tool being
          developed in my research, we are trying to specialize frameworks
          when the concrete implementation type is known a priori. FOCUS
          provides an XML based transformation engine, where the
          specialization transformations are captured in XML file and a
          weaver specializes the code.

          To help in this transformation process, this commit adds markers
          within the source code. These markers are added as special
          comments. For example, //@@
          REACTOR_SPL_INCLUDE_FORWARD_DECL_ADD_HOOK represents a hook
          where forward declarations and include files are added by the
          weaver. As these markers are comments therefore should not
          affect normal applications in *any* manner. Additionally,
          applications that use multiple reactor implementations not be
          affected/do not need any change. Currently, these
          specializations are targeted for TAO middleware, where
          applications know the target reactor a priori and want to
          leverage the specialization to improve performance.

Sun Aug 28 14:13:25 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * ace/Object_Manager.cpp:
        * ace/Naming_Context.cpp:
        * ace/Log_Msg.cpp:

          When ACE_HAS_TRACE flag is defined, the aforementioned files did
          not include the Trace.h include. This commit fixes the
          resulting compilation problems.

Fri Aug 26 18:01:31 2005  Steve Huston  <shuston@riverace.com>

        * ace/Select_Reactor.cpp:
        * ace/Select_Reactor_Base.h:
        * ace/Select_Reactor_T.(h cpp):
        * ace/Reactor_Token_T.(h cpp): Moved the definition/implementation of
          ACE_Select_Reactor_Token_T and its associated token-type selection
          macros to new file Reactor_Token_T.(h cpp); retargeted
          ACE_Select_Reactor_Token_T to call the ACE_Reactor_Impl interface
          rather than ACE_Select_Reactor. Renamed the class
          ACE_Reactor_Token_T to reflect this refactoring. This allows the
          token to be used in reactor implementations that are not derived
          from ACE_Select_Reactor.

        * ace/ace.mpc:
        * ace/Makefile.am: Added the new files Reactor_Token_T.cpp and .h.

        * ace/Dev_Poll_Reactor.(h cpp): Replace the use of ACE_SYNCH_MUTEX with
          ACE_Reactor_Token_T for the reactor's internal-protecting lock.
          Allows threads wishing to twiddle with the registrations or run the
          event loop to properly notify and synchronize with another thread
          that's already running the event loop.
          Also Clarified documentation on the queue-type members of
          ACE_Dev_Poll_Reactor_Notify.

        * ace/POSIX_Proactor.cpp (ACE_POSIX_SIG_Proactor::handle_events_i):
          Retry the wait on EINTR. Previous comments said this automatically
          happened because ACE_OSCALL_RETURN did it; it no longer does that,
          so explicit EINTR check code was added here.

        * apps/JAWS3/jaws3/Event_Dispatcher.h: Correct for the new reactor
          token type defined, above.

        * tests/MT_Reference_Counted_Event_Handler_Test.cpp: Added ACE_TEXT
          where needed for ACE_DEBUG statements.

        * tests/Multicast_Test.cpp: After stopping the reactor loop on test
          timeout, wait for the task's thread(s) to exit or there's a race
          between thread exit and deleting the task's memory.

Fri Aug 26 10:52:38 2005  Gary Maxey <gary.maxey@hp.com>

        * ace/Array_Map.inl:

          In operator[], broke complex statement into two statements.
          Compiler got confused by the original statement and generated
          incorrect code.

Fri Aug 26 11:43:01 2005  Justin Michel  <michel_j@ociweb.com>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.inl:
        * ace/CDR_Stream.cpp:

          Add a new simple class using RAII to call reset on an output CDR
          when it goes out of scope. This is used to implement a new TAO
          option that will reset() output CDRs after sending each request.

          Add an optional ACE_Lock* to one of the input CDR
          constructors. This is used by one of the TAO Any_Impl derived
          classes to provide thread safety for its internal CDR.

Fri Aug 26 11:02:21 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/fuzz.pl:

          Enhanced the check_for_ace_check function to detect the use of
          ACE_CHECK/ACE_CHECK_RETURN from within an ACE_TRY block.

Fri Aug 26 09:40:08 2005  Justin Michel  <michel_j@ociweb.com>

        * ace/OS_NS_Thread.cpp:

          Add missing ACE_ADAPT_RETVAL functions for calls to ::pthread*
          routines.  This allows the caller to check the errno to find out
          what went wrong.

Fri Aug 26 09:06:32 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/fuzz.pl:

          Fixed the detection of missing ACE_CHECK/ACE_TRY_CHECK.  It was
          missing most ACE_ENV_ARG_PARAMETER's due to a fouled up regular
          expression.

Fri Aug 26 13:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Reactor.cpp (schedule_timer):
          Fixed implicit conversion from long to int to long, found
          by 64bit warnings

        * ace/POSIX_Asynch_IO.cpp:
          Fixed 64bit bit conversion warning

Thu Aug 25 18:53:31 2005  Steve Huston  <shuston@riverace.com>

        * tests/Array_Map_Test.cpp: Don't attempt to build this test if
          using explicit template instantiation. It's hopeless trying STL
          code with explicit templates, especially portably.

        * tests/Time_Value_Test.cpp: Fixed typo.

Thu Aug 25 11:40:36 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * ace/Task.cpp (activate): Corrected misuse of the argument
          'grp_id' rather than the data member 'grp_id_'.  This prevented
          activate() from being able to join existing group.  Thanks to
          Kevin Heifner <heifner_k at ociweb dot com> for catching this.

Thu Aug 25 12:32:18 2005  Steve Huston  <shuston@riverace.com>

        * tests/Process_Manual_Event_Test.cpp: Removed #if0 block put in
          for testing and fixed compile error.

Wed Aug 24 19:09:31 2005  Steve Huston  <shuston@riverace.com>

        * configure.ac: Copied in updated copyright paragraph from COPYING.

        * ace/OS_NS_Thread.cpp: Formatting fixes.

        * tests/Process_Manual_Event_Test.cpp: ACE_ERROR formatting
          corrections (%p needs a string); code format fixes.

Wed Aug 24 17:15:28 2005  Steve Huston  <shuston@riverace.com>

        * ace/Stream_Modules.h: Added some info about ACE_Stream_Head so
          I don't have to keep looking it up ;-)

Wed Aug 24 12:39:04 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/fuzz.pl:

          Fixed this script to work with the ACE_ENV_ARG_PARAMTER and
          ACE_ENV_SINGLE_ARG_PARAMETER macros.  This will begin to check all
          of the missing ACE_CHECK/ACE_TRY_CHECK's again.

Wed Aug 24 08:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Select_Reactor_Base.cpp:
          Fixed possible unitialized used warning

Tue Aug 23 22:56:33 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Dev_Poll_Reactor.cpp (close):

          Removed unnecessary zeroing of underlying epoll data structure
          array.

          Deallocate epoll event data structure array and /dev/poll event
          handler file descriptor array after closing the epoll and
          /dev/poll file descriptor, respectively, to ensure consistent
          finalization of resources, to prevent potential destruction of
          event resources while waiting for events in another thread.
          It's not clear whether such a scenario will occur since a lock
          is currently held but better to be consistent.

Tue Aug 23 22:35:00 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Array_Map_Test.cpp (reference_count_test):

          Added some assertions to further verify correct ACE_Array_Map
          operation.

        * tests/Dev_Poll_Reactor_Test.cpp (handle_input):

          Fixed loop variable increment.  A for-scope variable was
          shadowing the "bytes_read" value, preventing the loop variable
          from being updated correctly.

Tue Aug 23 22:24:16 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/Atomic_Op_T.cpp:
        * ace/Atomic_Op_T.inl:

          Moved inlined constructor to the ".inl" inline source file.

Tue Aug 23 22:17:29 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * apps/JAWS2/JAWS/JAWS.h:

          Fixed '"JAWS_NTRACE" is not defined' g++ 4.0 preprocessor symbol
          warning.

Tue Aug 23 19:59:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/IO_Handler.{h,cpp}:
          Tried to fix gcc4 errors

Tue Aug 23 18:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Configuration.cpp:
          Explicitly initialize local variables

        * ace/OS_NS_sys_socket.inl:
          Removed not needed c-style casts that caused 64bit warnings

Mon Aug 22 09:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/bmake.features
        * bin/MakeProjectCreator/config/borland.features
        * bin/MakeProjectCreator/config/em3.features
        * bin/MakeProjectCreator/config/gnuace.features
        * bin/MakeProjectCreator/config/vc6.features
        * bin/MakeProjectCreator/config/vc71.features
        * bin/MakeProjectCreator/config/vc8.features
          New features file for each project type we ship in the release.
          This files are read by MPC for the correct type when generating
          makefiles.

        * bin/make_release:
          No need to generate multiple default.features file in the
          release proces, this is now handled in the features file
          per project type

Mon Aug 22 08:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-unixware-7.1.0.udk.h:
          Removed commented out define

Mon Aug 22 08:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc-8.h:
          Disable warning 4290 again

Mon Aug 22 08:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Configuration.{h,cpp}:
          Moved operator != out of header file to cpp file

Mon Aug 22 11:09:07 2005  Olli Savia  <ops@iki.fi>

        * include/makeinclude/platform_lynxos.GNU:
          Improved shared library support for LynxOS 4.0

Sun Aug 21 13:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Select_Reactor_T.cpp (check_handles):
          Pass select_handles as 0 on Win32, this was now just done for
          Win64, but it is not needed on Win32 and also causes conversion
          warnings when 64bit checks are enabled on win32.

Sun Aug 21 11:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/msvc_static_order.lst:
          Added the new core libs

Fri Aug 19 14:15:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/Sock_Connect.cpp:
          Reverted IPv6 related to accomodate some TAO builds which have
          ACE_HAS_IPV6 but do not have my TAO IPv6 changes yet.
          Will commit all at a later moment.

Fri Aug 19 13:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Name_Request_Reply.cpp:
          Fixed conversion warning

Fri Aug 19 13:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/DLL_Manager.cpp
        * ace/Log_Msg.cpp
        * ace/MEM_Acceptor.cpp
        * ace/MEM_IO.inl
        * ace/Select_Reactor_Base.cpp
        * ace/SV_Semaphore_Complex.cpp
        * ace/UUID.cpp
        * ace/WIN32_Asynch_IO.cpp
          Fixed conversion warnings given by Visual C++ 2003 at warning
          level 4. Used the correct types for intermediate variables, no
          casts are needed.

Fri Aug 19 12:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/CORBA_macros.h:
          For HP aCC use the special ACE_THROW_RETURN to fix the warnings
          that the compiler gives

Fri Aug 19 09:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao_pi.doxygen:
        * etc/tao_pi_server.doxygen:
        * etc/tao_anytypecode.doxygen:
          New config files

        * etc/tao_portableserver.doxygen:
          Cleanup

        * html/index.html:
          Added new libs

        * bin/generate_doxygen.pl:
          Also generate documentation for the new projects

Fri Aug 19 09:04:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/Sock_Connect.cpp:
          Added include of OS_NS_stdio.h since some builds otherwise miss out
          on things like ACE_OS::fopen() and such (now for real).

        * ace/SOCK_Connector.cpp:
          Reverted change which was meant for Sock_Connect.cpp:-(

Fri Aug 19 08:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc-7.h:
          Disable 4290 again, a scoreboard build showed that we need to
          disable it, but didn't had that problem on my local systme

Fri Aug 19 08:33:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/Sock_Connect.cpp:
          Added include of OS_NS_stdio.h since some builds otherwise miss out
          on things like ACE_OS::fopen() and such.

Fri Aug 19 07:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        Merged changes from the AnyRefactor branch as below

        Wed Aug 17 07:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/anytypecode.mpb:
        * bin/MakeProjectCreator/config/taoclient.mpb:
        * bin/MakeProjectCreator/config/taoidldefaults.mpb:
          By default we now suppress Any and Typecode generation with -Sa
          and -St but when the AnyTypeCode library is used, then these
          options are removed from the idl flags. This way simple apps
          don't get this lib by default

        Tue Aug 16 19:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc-7.h:
        * ace/config-win32-msvc-8.h:
          Removed disabling of warning 4290

        * ace/CORBA_macros.h:
          Removed special ACE_THROW_RETURN for win32 and HP aCC, this
          is not needed and only gives a lot of warnings at level 4
          with msvc

        Thu Aug 11 10:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/orbsvcsexe.mpb:
          Added AnyTypeCode

        Wed Aug 10 11:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/orbsvcslib.mpb:
          Added AnyTypeCode as base project.

        Wed Aug 10 09:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/valuetype.mpb:
          Added AnyTypeCode as base project

        Wed Aug 10 08:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/taoclient.mpb:
          Just for short, added anytypecode to the client. This should really be
          dependent on the idl compiler flags

        Fri Jul 29 18:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/codecfactory.mpb
        * bin/MakeProjectCreator/config/dynamicany.mpb
        * bin/MakeProjectCreator/config/ifr_client.mpb
        * bin/MakeProjectCreator/config/iormanip.mpb
        * bin/MakeProjectCreator/config/strategies.mpb
          Added AnyTypeCode as base project

        Thu Jul 28 12:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/anytypecode.mpb:
          New base project

Thu Aug 18 09:34:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * ace/Sock_Connect.cpp:
          Added support for retrieval of IPv6 local interfaces to
          ACE::get_ip_interfaces().
          Supported for Windows XP (and newer) and Linux (possibly other
          *nixes as well).

Wed Aug 17 18:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Message_Block.{h,cpp,inl}:
          In case a locking strategy is used, also make sure we use the
          lock when accessing the reference count of the ACE_Data_Block.
          Thanks to Viktor Chernenko
          <viktor dot chernenko at med dot ge dot com> for reporting this
          and supplying some patches to start with. This should fix
          according to Viktor some crashes in the notificaion service
          under high load.

Wed Aug 17 15:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Condition_Recursive_Thread_Mutex.{h,cpp}:
          Moved ACE_Condition_Recursive_Thread_Mutex constructor
          implementation from header to cpp file

Wed Aug 17 15:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/Waiter.cpp:
          Call find_by_index instead of find

Tue Aug 16 19:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/Assoc_Array.{h,cpp}:
        * apps/JAWS2/JAWS/Concurrency.cpp:
          Changed find(int) to find_by_index (int), to resolve
          ambiguity warnings of the HP aCC compiler

Tue Aug 16 11:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/Pipeline_Handler_T.cpp:
          Replaced c-style cast with reinterpret cast

Tue Aug 16 11:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-hpux-11.00.h:
          Added ACE_HAS_WORKING_EXPLICIT_TEMPLATE_DESTRUCTOR

Tue Aug 16 06:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/Assoc_Array.cpp:
          Removed pragma once

Mon Aug 15 21:55:00 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * apps/JAWS2/JAWS/IO_Handler.cpp: #include "JAWS/Filecach.h"
          to get the definition of JAWS_Cached_FILE.  Thanks to
          Simon Massey and Steve Huston for reporting this.

Mon Aug 15 11:03:42 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * bin/MakeProjectCreator/config/dslogadmin_serv.mpb:

          Changed to inherit from utils.

Mon Aug 15 09:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/DLL_Manager.cpp:
          We first try to find the file using the decorator so that when a
          filename with and without decorator is used, we get the file with
          the same decorator as the ACE dll has and then as last resort
          the one without. For example with msvc, the debug build has a "d"
          decorator, but the release build has none and we really want to get
          the debug version of the library in a debug application instead
          of the release one.

          Thanks to Vitaly Belekhov <vitaly at megasignal dot com> for
          reporting this and supply the patches. This fixed bugzilla
          2210

Sun Aug 14 11:27:54 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * apps/JAWS2/JAWS/IO_Handler.cpp (handle_transmit_file): Fixed
          a bug where

            delete (ACE_Filecache_Handle *) result.act ();

          should have been

            delete (JAWS_Cached_FILE *) result.act ();

          Thanks to Anand Rathi <anandprathi@yahoo.co.in> for reporting
          this.

Fri Aug 12 12:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/Parse_Headers.{h,cpp}:
          Changed STATUS_CODE enum to fix compile errors with VxWorks

Thu Aug 11 16:04:30 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * ace/OS_NS_stdio.inl (ACE_HAS_WCHAR vsnprintf): This is an
          actively edited file today!  Fixed the name of the last
          argument in the call so that it actually matches the name
          of the argument in the arg list.

Thu Aug 11 14:13:22 2005  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU:

          ACE will not compile with SunCC 5.6 or 5.7 if native exceptions
          are disabled unless STLPort is used.

Thu Aug 11 12:29:39 2005  Steve Huston  <shuston@riverace.com>

        * ace/Time_Value.inl (msec): When moving tv_sec to ACE_UINT64,
          static cast it to the desired ACE_UINT64, not ACE_UINT32.

        * ace/ace_wchar.inl (convert):
        * ace/OS_NS_unistd.inl (read):
        * ace/OS_NS_stdio.inl (fread, fwrite):
        * ace/OS_NS_sys_socket.inl (sendto): Use proper types portable to
          64 bits.

        * ace/Functor.inl (ACE_Hash<ACE_UINT64>): If unsigned long is
          not 4 bytes, don't try to cast 64 bits down to 4 bytes.

        * ace/OS_NS_stdio.inl (ACE_HAS_WCHAR vsnprintf): This is the same
          situation as ACE_OS::vsprintf - the X/Open/XPG folks got it right
          and added the maxlen argument when defining wide-char *printf
          functions, so just use vswprintf() - there's no such thing as
          vswnprintf().

Thu Aug 11 06:44:44 2005  Chad Elliott  <elliott_c@ociweb.com>

        * bin/depgen.pl:
        * bin/DependencyGenerator/DependencyWriterFactory.pm:
        * bin/DependencyGenerator/MakeDependencyWriter.pm:
        * bin/DependencyGenerator/MakeObjectGenerator.pm:
        * bin/DependencyGenerator/ObjectGeneratorFactory.pm:

          Added a generic make dependency generator.

        * bin/MakeProjectCreator/config/smart_proxies.mpb:

          Switched orbsvcslib with taolib_with_idl since Smart Proxies have
          nothing to do with orbsvcs.

        * bin/MakeProjectCreator/modules/AutomakeWorkspaceHelper.pm:

          Added support for CIAO and a hook for correctly modifying the
          library path to account for differences with the automake layout
          of ACE and TAO.

        * bin/MakeProjectCreator/templates/gnu.mpd:

          If static_libs_only is set to 1, build up a list of libraries upon
          which the BIN target will be dependent.  This will cause binaries
          to re-link in the event that a static library is updated.

Thu Aug 11 09:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_stdio.inl:
          Made the wchar vsnprintf a notsup, linux doesn't support this and
          I don't have time to fix this.

Thu Aug 11 07:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/Concurrency.cpp:
          Fixed single threaded build

Thu Aug 11 07:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_NS_stdio.inl:
          Added wchar vsnprintf version, was declared but not implemented

Wed Aug 10 15:43:37 2005  Gary Maxey <gary.maxey@hp.com>

        * tests/run_test.lst:
          Excluded tests inappropriate for HP-NSK platform

Wed Aug 10 11:27:01 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * ace/OS_NS_stdio.inl (vsnprintf):

          Fixed "no return statement in function returning non-void"
          warning.

          Removed uses of deprecated ACE_OSCALL macro.

Wed Aug 10 10:03:40 2005  Gary Maxey <gary.maxey@hp.com>

        * ace/OS_NS_stdio.inl:
        * ace/Process.cpp

          Regarding change:
          Fri Jul 22 13:29:32 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>
          use vsnprintf only if the platform supports it.

Wed Aug 10 07:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/IO.cpp:
        * apps/JAWS2/JAWS/IO_Acceptor.cpp:
        * apps/JAWS2/JAWS/IO_Handler.h:
          Fixed compile errors in Cygwin build

Wed Aug 10 07:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/Reaper.h:
          Fixed compile error in single threaded builds

Tue Aug  9 16:57:09 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/MakeProjectCreator/config/taolib.mpb:
          Added the codeset project to the "after" list to ensure the
          codeset library is built for any project that also depends on
          TAO. This is necessary because there are some executables that
          depend on libTAO and may therefore depend on libTAO_Codeset, but
          do not include taoexe in the MPC base project list. For example
          some of the CIAO executables have no need for the build elements
          brought in by taoidldefaults base project.

Tue Aug  9 11:11:50 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * bin/MakeProjectCreator/config/negotiate_codesets.mpb:
          Removed unused compiler macro.

        * bin/MakeProjectCreator/config/orbsvcsexe.mpb:
        * bin/MakeProjectCreator/config/rt_client.mpb:
        * bin/MakeProjectCreator/config/rt_server.mpb:
          Added dependency on negotiate_codesets feature so that the
          TAO_Codeset library will be added in the correct order,
          if desired.

        * bin/MakeProjectCreator/config/taoexe.mpb:
          Added Codeset project to the After list to ensure that the
          Codeset library is available for dynamic linking for those
          applications that require it.

Tue Aug  9 10:48:39 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/OS_NS_stdio.cpp (snprintf): Added a wchar_t version of
          snprintf().  Thanks to Simon Massey for reporting this.

Tue Aug  9 13:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/make_release:
          Added sxd to files that should not get crlf conversion

Tue Aug  9 13:18:43 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ace/Global_Macros.h:

          Added missing '#' before a 'define'.

Tue Aug  9 11:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-msvc-6.h:
          Added ACE_HAS_NO_THROW_SPEC

        * ace/Global_Macros.h:
          Simplified ACE_THROW_SPEC specificiation. This way with vc71 and vc8
          we get exception specifications.

Tue Aug  9 10:59:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Svc_Conf_l.cpp:
          Forced a commit of this file, will probably solve the regeneration
          errors

        * apps/JAWS2/JAWS/Waiter.h:
          Added missing include

Mon Aug  8 12:54:51 2005  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.cpp (open): Reverted these changes:
          Fri Apr 22 18:02:37 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

          * ace/Log_Msg.cpp (open): Fixed a problem with LOGGER and logger_key
            and the backend_->open() call.  Thanks to Jerry D. De Master
            <jdemaste at rite-solutions dot com> for reporting this.

          Tue Jan 18 08:17:10 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

          * ace/Log_Msg.cpp (open): Fixed the logic to pass prog_name
            rather than logger_key, which fixes a bug with syslog.  Thanks
            to Robert Iakobashvili <roberti@GoNetworks.com> for this fix.

          They broke a fix from:
          Sat Dec  1 19:39:22 2001  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.h: Improved the documentation for open() to note the
          role of the logger_key argument when LOGGER and SYSLOG are set in
          flags.
          To get the progr_name used as the syslog/event log source ID, pass
          a 0 logger_key.

        * ace/SOCK_Dgram_Mcast.h: Clarified that instead of using set_option,
          use ACE_SOCK::set_option().

        * ace/DEV_Addr.{h inl cpp}: Fix non-0-terminated name possibility
          when setting a new name. Thanks to James Damour
          <james dot damour at request dot com> for this fix.
          Also introduced a private enum to define the length of the name
          buffer and use the new value to limit string copy sizes.

        * THANKS: Added James Damour to the Hall of Fame.

Mon Aug  8 10:44:16 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * ace/OS_NS_stdio.inl
        * ace/Process.cpp

        Fixed a compilation problem from:

        Fri Jul 22 13:29:32 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

Mon Aug  8 09:57:15 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * ace/config-macosx-tiger.h
        * include/makeinclude/platform_macosx_tiger_gcc4.GNU

        Adding preliminary support for OS X 10.4

Mon Aug  8 13:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * apps/JAWS2/JAWS/IO.cpp:
        * apps/JAWS2/JAWS/Concurrency.{h,cpp}:
          Fixed compile problems in single threaded build

Sat Aug  6 17:25:04 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Svc_Conf.l: Removed the ' and " characters to avoid
          problems with Lex.  Thanks to Rohini Madhavan <ro_madhavan at
          sify dot com> and Brian Buesker <bbuesker at qualcomm dot com>
          for helping with this.

Wed Aug  3 12:35:23 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Asynch_Acceptor.{h,cpp}:
        * ace/Asynch_Connector.{h,cpp}: Fixed the code so it doesn't try
          to build on Windows CE.  Thanks to Alan Anderson
          <Alan.Anderson@sdsmt.edu> for reporting this.

        * ace/DEV_Addr.cpp (set): NULL-terminate the devname_ string.
          Thanks to James Damour <james.damour@request.com> for reporting
          this problem.

Tue Aug  2 14:01:39 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * THANKS: Added Abdel Rigumye <rigumyea at ociweb dot com>,
          who is the 2000th contributor to ACE+TAO+CIAO!!!!

Fri Jul 22 13:29:32 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ace/Process.cpp (command_line): Changed the use of
          ACE_OS::vsprintf() to use the new ACE_OS::vsnprintf().  Thanks
          to Xue for this suggestion, as well.

        * ace/OS_NS_stdio.{h,inl}: Added support for ACE_OS::vsnprintf().
          Thanks to Xue Yong Zhi <seclib at seclib dot com> for this
          suggestion.

Mon Aug  8 08:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/tao_orb_tests.lst:
          Added two new collocation tests

        * apps/JAWS2/JAWS/jaws2.mpc:
          New MPC file

Fri Aug 05 07:37:20 2005  Simon Massey  <sma@prismtech.com>

        * ACE version 5.4.7 released.


