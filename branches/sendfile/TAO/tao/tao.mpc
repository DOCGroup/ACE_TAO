//$Id$
project(TAO) : acelib, core, tao_output, taodefaults, pidl, extra_core {
  sharedname   = TAO
  dynamicflags = TAO_BUILD_DLL

  // It is no longer necessary to override IDL_Files since it is a
  // custom build type and comes from the taoidldefaults base project.

  Source_Files(TAO_COMPONENTS) {
    Abstract_Servant_Base.cpp
    Acceptor_Filter.cpp
    Acceptor_Registry.cpp
    Adapter.cpp
    Adapter_Factory.cpp
    Adapter_Registry.cpp
    AnyTypeCode_Adapter.cpp
    Argument.cpp
    Asynch_Queued_Message.cpp
    Asynch_Reply_Dispatcher_Base.cpp
    Base_Transport_Property.cpp
    BiDir_Adapter.cpp
    Bind_Dispatcher_Guard.cpp
    Block_Flushing_Strategy.cpp
    Blocked_Connect_Strategy.cpp
    BooleanSeqC.cpp
    Cache_Entries.cpp
    CDR.cpp
    CharSeqC.cpp
    Cleanup_Func_Registry.cpp
    Client_Strategy_Factory.cpp
    ClientRequestInterceptor_Adapter_Factory.cpp
    Codeset_Manager.cpp
    Codeset_Manager_Factory_Base.cpp
    Codeset_Translator_Base.cpp
    Collocated_Invocation.cpp
    Collocation_Proxy_Broker.cpp
    Collocation_Resolver.cpp
    Connect_Strategy.cpp
    Connection_Handler.cpp
    Connection_Purging_Strategy.cpp
    Connector_Registry.cpp
    CONV_FRAMEC.cpp
    CORBA_String.cpp
    CORBALOC_Parser.cpp
    CORBANAME_Parser.cpp
    CurrentC.cpp
    debug.cpp
    default_client.cpp
    Default_Collocation_Resolver.cpp
    Default_Endpoint_Selector_Factory.cpp
    Default_Protocols_Hooks.cpp
    default_resource.cpp
    default_server.cpp
    Default_Stub_Factory.cpp
    Default_Thread_Lane_Resources_Manager.cpp
    DLL_Parser.cpp
    DomainC.cpp
    DoubleSeqC.cpp
    Dynamic_Adapter.cpp
    Endpoint.cpp
    Endpoint_Selector_Factory.cpp
    Environment.cpp
    Exception.cpp
    Exclusive_TMS.cpp
    Fault_Tolerance_Service.cpp
    FILE_Parser.cpp
    FloatSeqC.cpp
    Flushing_Strategy.cpp
    GIOP_Message_Base.cpp
    GIOP_Message_Generator_Parser.cpp
    GIOP_Message_Generator_Parser_10.cpp
    GIOP_Message_Generator_Parser_11.cpp
    GIOP_Message_Generator_Parser_12.cpp
    GIOP_Message_Generator_Parser_Impl.cpp
    GIOP_Message_Lite.cpp
    GIOP_Message_Locate_Header.cpp
    GIOP_Message_State.cpp
    GIOP_Message_Version.cpp
    GIOP_Utils.cpp
    GIOPC.cpp
    IFR_Client_Adapter.cpp
    IIOP_Acceptor.cpp
    IIOP_Connection_Handler.cpp
    IIOP_Connector.cpp
    IIOP_Endpoint.cpp
    IIOP_EndpointsC.cpp
    IIOP_Factory.cpp
    IIOP_Lite_Factory.cpp
    IIOP_Profile.cpp
    IIOP_Transport.cpp
    IIOPC.cpp
    Incoming_Message_Queue.cpp
    Incoming_Message_Stack.cpp
    Invocation_Adapter.cpp
    Invocation_Base.cpp
    Invocation_Endpoint_Selectors.cpp
    IOP_IORC.cpp
    IOPC.cpp
    IOR_Parser.cpp
    IORInterceptor_Adapter.cpp
    IORInterceptor_Adapter_Factory.cpp
    Leader_Follower.cpp
    Leader_Follower_Flushing_Strategy.cpp
    LF_CH_Event.cpp
    LF_Connect_Strategy.cpp
    LF_Event.cpp
    LF_Event_Binder.cpp
    LF_Event_Loop_Thread_Helper.cpp
    LF_Follower.cpp
    LF_Follower_Auto_Adder.cpp
    LF_Follower_Auto_Ptr.cpp
    LF_Invocation_Event.cpp
    LF_Strategy.cpp
    LF_Strategy_Complete.cpp
    LocalObject.cpp
    LocateRequest_Invocation.cpp
    LocateRequest_Invocation_Adapter.cpp
    LongDoubleSeqC.cpp
    LongLongSeqC.cpp
    LongSeqC.cpp
    LRU_Connection_Purging_Strategy.cpp
    Managed_Types.cpp
    MCAST_Parser.cpp
    Messaging_PolicyValueC.cpp
    Messaging_SyncScopeC.cpp
    MMAP_Allocator.cpp
    MProfile.cpp
    Muxed_TMS.cpp
    New_Leader_Generator.cpp
    NVList_Adapter.cpp
    Object.cpp
    Object_KeyC.cpp
    Object_Loader.cpp
    Object_Proxy_Broker.cpp
    Object_Ref_Table.cpp
    ObjectIdListC.cpp
    ObjectKey_Table.cpp
    OctetSeqC.cpp
    operation_details.cpp
    ORB.cpp
    ORBInitializer_Registry.cpp
    ORBInitializer_Registry_Adapter.cpp
    orb_typesC.cpp
    ORB_Core.cpp
    ORB_Core_Auto_Ptr.cpp
    ORB_Core_TSS_Resources.cpp
    ORB_Table.cpp
    ParameterModeC.cpp
    params.cpp
    Parser_Registry.cpp
    PI_ForwardC.cpp
    Pluggable_Messaging.cpp
    Pluggable_Messaging_Utils.cpp
    Policy_Current.cpp
    Policy_Current_Impl.cpp
    Policy_ForwardC.cpp
    Policy_Manager.cpp
    Policy_Set.cpp
    Policy_Validator.cpp
    PolicyC.cpp
    PolicyFactory_Registry_Adapter.cpp
    PolicyFactory_Registry_Factory.cpp
    PortableInterceptorC.cpp
    Principal.cpp
    Profile.cpp
    Profile_Transport_Resolver.cpp
    Protocol_Factory.cpp
    Protocols_Hooks.cpp
    Queued_Message.cpp
    Reactive_Connect_Strategy.cpp
    Reactive_Flushing_Strategy.cpp
    Refcounted_ObjectKey.cpp
    Remote_Invocation.cpp
    Remote_Object_Proxy_Broker.cpp
    Reply_Dispatcher.cpp
    Request_Dispatcher.cpp
    Resource_Factory.cpp
    Resume_Handle.cpp
    Sequence.cpp
    Server_Strategy_Factory.cpp
    ServerRequestInterceptor_Adapter_Factory.cpp
    Service_Callbacks.cpp
    Service_Context.cpp
    Services_Activate.cpp
    ShortSeqC.cpp
    StringSeqC.cpp
    Stub.cpp
    Stub_Factory.cpp
    Synch_Invocation.cpp
    Synch_Queued_Message.cpp
    Synch_Reply_Dispatcher.cpp
    SystemException.cpp
    Tagged_Components.cpp
    Tagged_Profile.cpp
    TAO_Internal.cpp
    TAO_Server_Request.cpp
    TAO_Singleton_Manager.cpp
    TAOC.cpp
    target_specification.cpp
    Thread_Lane_Resources.cpp
    Thread_Lane_Resources_Manager.cpp
    Thread_Per_Connection_Handler.cpp
    TimeBaseC.cpp
    Transport.cpp
    Transport_Acceptor.cpp
    Transport_Cache_Manager.cpp
    Transport_Connector.cpp
    Transport_Descriptor_Interface.cpp
    Transport_Mux_Strategy.cpp
    Transport_Queueing_Strategies.cpp
    Transport_Timer.cpp
    TSS_Resources.cpp
    TypeCodeFactory_Adapter.cpp
    Typecode_typesC.cpp
    ULongLongSeqC.cpp
    ULongSeqC.cpp
    UserException.cpp
    UShortSeqC.cpp
    Valuetype_Adapter.cpp
    Wait_On_Leader_Follower.cpp
    Wait_On_LF_No_Upcall.cpp
    Wait_On_Reactor.cpp
    Wait_On_Read.cpp
    Wait_Strategy.cpp
    WCharSeqC.cpp
    WrongTransactionC.cpp
    WStringSeqC.cpp
    GUIResource_Factory.cpp
  }

  Header_Files {
    Abstract_Servant_Base.h
    Acceptor_Filter.h
    Acceptor_Impl.h
    Acceptor_Registry.h
    Adapter.h
    Adapter_Factory.h
    Adapter_Registry.h
    Allocator.h
    AnyTypeCode_Adapter.h
    Any_Insert_Policy_T.h
    Arg_Traits_T.h
    Argument.h
    Array_VarOut_T.h
    Asynch_Queued_Message.h
    Asynch_Reply_Dispatcher_Base.h
    Auto_Functor.h
    Base_Transport_Property.h
    Basic_Arguments.h
    Basic_Argument_T.h
    Basic_Types.h
    BD_String_Argument_T.h
    BiDir_Adapter.h
    Bind_Dispatcher_Guard.h
    Blocked_Connect_Strategy.h
    Block_Flushing_Strategy.h
    BooleanSeqC.h
    BooleanSeqS.h
    Buffer_Allocator_T.h
    Buffering_Constraint_Policy.h
    Cache_Entries.h
    CDR.h
    CharSeqC.h
    CharSeqS.h
    Cleanup_Func_Registry.h
    ClientRequestInterceptor_Adapter.h
    Client_Strategy_Factory.h
    Codeset_Descriptor_Base.h
    Codeset_Manager.h
    Codeset_Manager_Factory_Base.h
    Codeset_Translator_Base.h
//    Codeset_Translator_Factory.h  *** file is for backwardscompatibility only
//                                  *** there should be no dependencies on it
    Collocated_Invocation.h
    Collocation_Proxy_Broker.h
    Collocation_Resolver.h
    Collocation_Strategy.h
    Condition.h
    Connection_Handler.h
    Connection_Purging_Strategy.h
    Connector_Impl.h
    Connector_Registry.h
    Connect_Strategy.h
    CONV_FRAMEC.h
    CONV_FRAMES.h
    corbafwd.h
    corba.h
    CORBALOC_Parser.h
    CORBA_methods.h
    CORBANAME_Parser.h
    CORBA_String.h
    CurrentC.h
    CurrentS.h
    debug.h
    default_client.h
    Default_Collocation_Resolver.h
    Default_Endpoint_Selector_Factory.h
    default_environment.h
    default_ports.h
    Default_Protocols_Hooks.h
    default_resource.h
    default_server.h
    Default_Stub_Factory.h
    Default_Thread_Lane_Resources_Manager.h
    DLL_Parser.h
    DomainC.h
    DoubleSeqC.h
    DoubleSeqS.h
    Dynamic_Adapter.h
    Endpoint.h
    Endpoint_Selector_Factory.h
    Environment.h
    Exception_Data.h
    Exception.h
    Exclusive_TMS.h
    Fault_Tolerance_Service.h
    FILE_Parser.h
    Fixed_Array_Argument_T.h
    Fixed_Size_Argument_T.h
    FloatSeqC.h
    FloatSeqS.h
    Flushing_Strategy.h
    GIOPC.h
    GIOP_Message_Base.h
    GIOP_Message_Generator_Parser_10.h
    GIOP_Message_Generator_Parser_11.h
    GIOP_Message_Generator_Parser_12.h
    GIOP_Message_Generator_Parser.h
    GIOP_Message_Generator_Parser_Impl.h
    GIOP_Message_Lite.h
    GIOP_Message_Locate_Header.h
    GIOP_Message_State.h
    GIOP_Message_Version.h
    GIOPS.h
    GIOP_Utils.h
    GUIResource_Factory.h
    IFR_Client_Adapter.h
    IIOP_Acceptor.h
    IIOPC.h
    IIOP_Connection_Handler.h
    IIOP_Connector.h
    IIOP_Endpoint.h
    IIOP_EndpointsC.h
    IIOP_Factory.h
    IIOP_Lite_Factory.h
    IIOP_Profile.h
    IIOP_Transport.h
    Incoming_Message_Queue.h
    Incoming_Message_Stack.h
    Invocation_Adapter.h
    Invocation_Base.h
    Invocation_Endpoint_Selectors.h
    Invocation_Utils.h
    IOPC.h
    IOP_IORC.h
    IOPS.h
    IORInterceptor_Adapter_Factory.h
    IORInterceptor_Adapter.h
    IOR_Parser.h
    Leader_Follower_Flushing_Strategy.h
    Leader_Follower.h
    LF_CH_Event.h
    LF_Connect_Strategy.h
    LF_Event_Binder.h
    LF_Event.h
    LF_Event_Loop_Thread_Helper.h
    LF_Follower_Auto_Adder.h
    LF_Follower_Auto_Ptr.h
    LF_Follower.h
    LF_Invocation_Event.h
    LF_Strategy_Complete.h
    LF_Strategy.h
    LocalObject.h
    LocateRequest_Invocation_Adapter.h
    LocateRequest_Invocation.h
    LongDoubleSeqC.h
    LongDoubleSeqS.h
    LongLongSeqC.h
    LongLongSeqS.h
    LongSeqC.h
    LongSeqS.h
    LRU_Connection_Purging_Strategy.h
    Managed_Types.h
    MCAST_Parser.h
    Messaging_PolicyValueC.h
    Messaging_SyncScopeC.h
    MMAP_Allocator.h
    MProfile.h
    Muxed_TMS.h
    New_Leader_Generator.h
    Object_Argument_T.h
    Object.h
    objectid.h
    ObjectIdListC.h
    Object_KeyC.h
    ObjectKey_Table.h
    Object_Loader.h
    Object_Proxy_Broker.h
    Object_Ref_Table.h
    Object_T.h
    Objref_VarOut_T.h
    OctetSeqC.h
    OctetSeqS.h
    operation_details.h
    orbconf.h
    ORB_Constants.h
    ORB_Core_Auto_Ptr.h
    ORB_Core_TSS_Resources.h
    ORB_Core.h
    ORB.h
    ORBInitializer_Registry.h
    ORBInitializer_Registry_Adapter.h
    ORB_Table.h
    orb_typesC.h
    orb_typesS.h
    ParameterModeC.h
    ParameterModeS.h
    params.h
    Parser_Registry.h
    PI_ForwardC.h
    Pluggable_Messaging.h
    Pluggable_Messaging_Utils.h
    PolicyC.h
    PolicyFactory_Registry_Adapter.h
    Policy_ForwardC.h
    Policy_ForwardS.h
    Policy_Current.h
    Policy_Current_Impl.h
    Policy_Manager.h
    Policy_Set.h
    PolicyS.h
    Policy_Validator.h
    PortableInterceptorC.h
    PortableInterceptor.h
    PortableInterceptorS.h
    Principal.h
    Profile.h
    Profile_Transport_Resolver.h
    Protocol_Factory.h
    Protocols_Hooks.h
    Pseudo_VarOut_T.h
    Queued_Message.h
    Reactive_Connect_Strategy.h
    Reactive_Flushing_Strategy.h
    Refcounted_ObjectKey.h
    Remote_Invocation.h
    Remote_Object_Proxy_Broker.h
    Reply_Dispatcher.h
    Request_Dispatcher.h
    Resource_Factory.h
    Resume_Handle.h
    Seq_Out_T.h
    Sequence.h
    Sequence_T.h
    Seq_Var_T.h
    Server_Strategy_Factory.h
    Service_Callbacks.h
    Service_Context.h
    Services_Activate.h
    ServicesC.h
    ServicesS.h
    ShortSeqC.h
    ShortSeqS.h
    Special_Basic_Arguments.h
    Special_Basic_Argument_T.h
    StringSeqC.h
    StringSeqS.h
    Stub_Factory.h
    Stub.h
    Synch_Invocation.h
    Synch_Queued_Message.h
    Synch_Reply_Dispatcher.h
    SystemException.h
    Tagged_Components.h
    Tagged_Profile.h
    TAOC.h
    TAO_Export.h
    TAO_Internal.h
    TAO_Server_Request.h
    TAOS.h
    TAO_Singleton.h
    TAO_Singleton_Manager.h
    target_specification.h
    Thread_Lane_Resources.h
    Thread_Lane_Resources_Manager.h
    Thread_Per_Connection_Handler.h
    TimeBaseC.h
    TimeBaseS.h
    Timeprobe.h
    Transport_Acceptor.h
    Transport_Cache_Manager.h
    Transport_Connector.h
    Transport_Descriptor_Interface.h
    Transport.h
    Transport_Mux_Strategy.h
    Transport_Queueing_Strategies.h
    Transport_Timer.h
    TSS_Resources.h
    TypeCodeFactory_Adapter.h
    Typecode_typesC.h
    Typecode_typesS.h
    UB_String_Arguments.h
    UB_String_Argument_T.h
    ULongLongSeqC.h
    ULongLongSeqS.h
    ULongSeqC.h
    ULongSeqS.h
    UserException.h
    UShortSeqC.h
    UShortSeqS.h
    Valuetype_Adapter.h
    Var_Array_Argument_T.h
    varbase.h
    VarOut_T.h
    Var_Size_Argument_T.h
    Version.h
    Versioned_Namespace.h
    Wait_On_Leader_Follower.h
    Wait_On_LF_No_Upcall.h
    Wait_On_Reactor.h
    Wait_On_Read.h
    Wait_Strategy.h
    WCharSeqC.h
    WCharSeqS.h
    WrongTransactionC.h
    WrongTransactionS.h
    WStringSeqC.h
    WStringSeqS.h
  }

  Inline_Files {
    *.i
    *.inl
  }

  Template_Files {
    *_T.cpp
    Acceptor_Impl.cpp
    Condition.cpp
    Connector_Impl.cpp
    TAO_Singleton.cpp
    orb.idl
  }

  Pkgconfig_Files {
    TAO.pc.in
  }
}
