##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## /acebuilds/ACE_wrappers-repository/bin/mwc.pl -include /acebuilds/MPC/config -include /acebuilds/MPC/templates -feature_file /acebuilds/ACE_wrappers-repository/local.features -noreldefs -type automake -exclude build,Kokyu

ACE_BUILDDIR = $(top_builddir)
ACE_ROOT = $(top_srcdir)

noinst_PROGRAMS =
## Makefile.SSL_SAP_Client.am 

if BUILD_SSL
noinst_PROGRAMS += client

client_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(SSL_ROOT)/include \
  -I/usr/kerberos/include \
  -DACE_HAS_SSL=1

client_SOURCES = \
  SSL-client.cpp \
  SSL-client.h

client_LDADD = \
 $(top_builddir)/ace/SSL/libACE_SSL.la $(top_builddir)/ace/libACE.la -lssl -lcrypto

endif BUILD_SSL

## Makefile.SSL_SAP_Client_Simple.am 

if BUILD_SSL
noinst_PROGRAMS += client-simple

client_simple_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(SSL_ROOT)/include \
  -I/usr/kerberos/include \
  -DACE_HAS_SSL=1

client_simple_SOURCES = \
  SSL-client-simple.cpp \
  SSL-client-simple.h

client_simple_LDADD = \
 $(top_builddir)/ace/SSL/libACE_SSL.la $(top_builddir)/ace/libACE.la -lssl -lcrypto

endif BUILD_SSL

## Makefile.SSL_SAP_Server.am 

if BUILD_SSL
noinst_PROGRAMS += server

server_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(SSL_ROOT)/include \
  -I/usr/kerberos/include \
  -DACE_HAS_SSL=1

server_SOURCES = \
  SSL-server.cpp \
  SSL-client-simple.h \
  SSL-client.h \
  SSL-server-fancy.h

server_LDADD = \
 $(top_builddir)/ace/SSL/libACE_SSL.la $(top_builddir)/ace/libACE.la -lssl -lcrypto

endif BUILD_SSL

## Makefile.SSL_SAP_Server_Fancy.am 

if BUILD_SSL
noinst_PROGRAMS += server-fancy

server_fancy_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(SSL_ROOT)/include \
  -I/usr/kerberos/include \
  -DACE_HAS_SSL=1

server_fancy_SOURCES = \
  SSL-server-fancy.cpp \
  SSL-server-fancy.h

server_fancy_LDADD = \
 $(top_builddir)/ace/SSL/libACE_SSL.la $(top_builddir)/ace/libACE.la -lssl -lcrypto

endif BUILD_SSL

## Makefile.SSL_SAP_Server_Poll.am 

if BUILD_SSL
noinst_PROGRAMS += server-poll

server_poll_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(SSL_ROOT)/include \
  -I/usr/kerberos/include \
  -DACE_HAS_SSL=1

server_poll_SOURCES = \
  SSL-server-poll.cpp \
  SSL-client-simple.h \
  SSL-client.h \
  SSL-server-fancy.h

server_poll_LDADD = \
 $(top_builddir)/ace/SSL/libACE_SSL.la $(top_builddir)/ace/libACE.la -lssl -lcrypto

endif BUILD_SSL

## Makefile.SSL_SAP_Server_Simple.am 

if BUILD_SSL
noinst_PROGRAMS += server-simple

server_simple_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(SSL_ROOT)/include \
  -I/usr/kerberos/include \
  -DACE_HAS_SSL=1

server_simple_SOURCES = \
  SSL-server-simple.cpp \
  SSL-client-simple.h \
  SSL-client.h \
  SSL-server-fancy.h

server_simple_LDADD = \
 $(top_builddir)/ace/SSL/libACE_SSL.la $(top_builddir)/ace/libACE.la -lssl -lcrypto

endif BUILD_SSL

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
