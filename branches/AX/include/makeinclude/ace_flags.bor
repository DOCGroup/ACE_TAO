#
# Flags	specific for compiling ACE library and applications
# with Borland C++Builder
#

!ifdef STATIC
DLL_FLAG=0
DLL_NAME=
!else
DLL_FLAG=1
DLL_NAME=dll
!endif

#
# Compiler flags
#
!ifdef DEBUG
ACE_CFLAGS = -I$(ACE_ROOT) -DACE_HAS_DLL=$(DLL_FLAG) -DACE_OS_HAS_DLL=$(DLL_FLAG) -DACE_NO_INLINE=1
!else
ACE_CFLAGS = -I$(ACE_ROOT) -DACE_HAS_DLL=$(DLL_FLAG) -DACE_OS_HAS_DLL=$(DLL_FLAG)
!endif
!ifdef SSL_ROOT
SSL_CFLAGS = -I$(SSL_ROOT)\inc32 -DACE_HAS_SSL=1
!endif
ACE_SSL_CFLAGS = -I$(ACE_ROOT) -DACE_SSL_HAS_DLL=$(DLL_FLAG)
ACE_QOS_CFLAGS = -I$(ACE_ROOT) -DACE_QoS_HAS_DLL=$(DLL_FLAG)
ACE_RMCAST_CFLAGS = -I$(ACE_ROOT) -DACE_RMCAST_HAS_DLL=$(DLL_FLAG)
TAO_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_HAS_DLL=$(DLL_FLAG)
TAO_DOMAIN_FLAGS = -I$(ACE_ROOT)\TAO -DTAO_DOMAIN_HAS_DLL=$(DLL_FLAG)
TAO_DYNAMICANY_CFLAGS =	-I$(ACE_ROOT)\TAO -DTAO_DYNAMICANY_HAS_DLL=$(DLL_FLAG)
TAO_DYNAMICINTERFACE_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_DYNAMICINTERFACE_HAS_DLL=$(DLL_FLAG)
TAO_BIDIRGIOP_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_BIDIRGIOP_HAS_DLL=$(DLL_FLAG)
TAO_IFR_CLIENT_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_IFR_CLIENT_HAS_DLL=$(DLL_FLAG)
TAO_STRATEGIES_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_STRATEGIES_HAS_DLL=$(DLL_FLAG)
TAO_PORTABLESERVER_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_PORTABLESERVER_HAS_DLL=$(DLL_FLAG)
TAO_IORMANIP_CFLAGS = -I$(ACE_ROOT)\TAO	-DTAO_IORMANIP_HAS_DLL=$(DLL_FLAG)
TAO_IORTABLE_CFLAGS = -I$(ACE_ROOT)\TAO	-DTAO_IORTABLE_HAS_DLL=$(DLL_FLAG)
TAO_SMARTPROXIES_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_SMARTPROXIES_HAS_DLL=$(DLL_FLAG)
TAO_TYPECODEFACTORY_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_TYPECODEFACTORY_HAS_DLL=$(DLL_FLAG)
TAO_RTCORBA_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_RTCORBA_HAS_DLL=$(DLL_FLAG)
TAO_RTPORTABLESERVER_CFLAGS = -I$(ACE_ROOT)\TAO -DTAO_RTPORTABLESERVER_HAS_DLL=$(DLL_FLAG)
TAO_IDL_BE_CFLAGS = -I$(ACE_ROOT)\TAO\TAO_IDL -I$(ACE_ROOT)\TAO\TAO_IDL\be_include \
	-DTAO_IDL_BE_HAS_DLL=$(DLL_FLAG)
TAO_IDL_FE_CFLAGS = -I$(ACE_ROOT)\TAO\TAO_IDL -I$(ACE_ROOT)\TAO\TAO_IDL\fe \
	-I$(ACE_ROOT)\TAO\TAO_IDL\include -I$(ACE_ROOT)\TAO\TAO_IDL\util -DTAO_IDL_FE_HAS_DLL=$(DLL_FLAG)
TAO_SVC_UTILS_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_SVC_UTILS_HAS_DLL=$(DLL_FLAG)
TAO_AV_CFLAGS =	-I$(ACE_ROOT)\TAO\orbsvcs -DTAO_AV_HAS_DLL=$(DLL_FLAG)
TAO_CONCURRENCY_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_CONCURRENCY_HAS_DLL=$(DLL_FLAG)
TAO_EVENT_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_EVENT_HAS_DLL=$(DLL_FLAG)
TAO_FT_CFLAGS =	-I$(ACE_ROOT)\TAO\orbsvcs -DTAO_FT_HAS_DLL=$(DLL_FLAG)
TAO_LIFECYCLE_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_LIFECYCLE_HAS_DLL=$(DLL_FLAG)
TAO_LOADBALANCING_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_LOADBALANCING_HAS_DLL=$(DLL_FLAG)
TAO_LOG_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_LOG_HAS_DLL=$(DLL_FLAG)
TAO_NAMING_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_NAMING_HAS_DLL=$(DLL_FLAG)
TAO_NOTIFY_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_NOTIFY_HAS_DLL=$(DLL_FLAG)
TAO_PROPERTY_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs	-DTAO_PROPERTY_HAS_DLL=$(DLL_FLAG)
TAO_RTEVENT_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_RTEVENT_HAS_DLL=$(DLL_FLAG)
TAO_RTOLDEVENT_CFLAGS =	-I$(ACE_ROOT)\TAO\orbsvcs -DTAO_RTOLDEVENT_HAS_DLL=$(DLL_FLAG)
TAO_RTSCHED_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_RTSCHED_HAS_DLL=$(DLL_FLAG)
TAO_RTSCHEDEVENT_CFLAGS	= -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_RTSCHEDEVENT_HAS_DLL=$(DLL_FLAG)
TAO_SECURITY_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs	-DTAO_SECURITY_HAS_DLL=$(DLL_FLAG)
TAO_SSLIOP_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_SSLIOP_HAS_DLL=$(DLL_FLAG)
TAO_TIME_CFLAGS	= -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_TIME_HAS_DLL=$(DLL_FLAG)
TAO_TRADING_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs -DTAO_TRADING_HAS_DLL=$(DLL_FLAG)

#
# Libraries
#
ACE_LIB	= $(CORE_BINDIR)\ace$(LIB_DECORATOR).lib
!ifdef SSL_ROOT
SSL_LIB	= $(SSL_ROOT)\out32$(DLL_NAME)\libeay32.lib $(SSL_ROOT)\out32$(DLL_NAME)\ssleay32.lib
!endif
ACE_SSL_LIB = $(CORE_BINDIR)\ACE_SSL$(LIB_DECORATOR).lib
ACE_QOS_LIB = $(CORE_BINDIR)\ACE_QoS$(LIB_DECORATOR).lib
NETSVCS_LIB = $(CORE_BINDIR)\netsvcs$(LIB_DECORATOR).lib
ACE_RMCAST_LIB = $(CORE_BINDIR)\ACE_RMCast$(LIB_DECORATOR).lib
TAO_LIB	= $(CORE_BINDIR)\TAO$(LIB_DECORATOR).lib
TAO_DOMAIN_LIB = $(CORE_BINDIR)\TAO_Domain$(LIB_DECORATOR).lib
TAO_DYNAMICANY_LIB = $(CORE_BINDIR)\TAO_DynamicAny$(LIB_DECORATOR).lib
TAO_DYNAMICINTERFACE_LIB = $(CORE_BINDIR)\TAO_DynamicInterface$(LIB_DECORATOR).lib
TAO_BIDIRGIOP_LIB = $(CORE_BINDIR)\TAO_BiDirGIOP$(LIB_DECORATOR).lib
TAO_IFR_CLIENT_LIB = $(CORE_BINDIR)\TAO_IFR_Client$(LIB_DECORATOR).lib
TAO_PORTABLESERVER_LIB = $(CORE_BINDIR)\TAO_PortableServer$(LIB_DECORATOR).lib
TAO_STRATEGIES_LIB = $(CORE_BINDIR)\TAO_Strategies$(LIB_DECORATOR).lib
TAO_IORMANIP_LIB = $(CORE_BINDIR)\TAO_IORManip$(LIB_DECORATOR).lib
TAO_IORTABLE_LIB = $(CORE_BINDIR)\TAO_IORTable$(LIB_DECORATOR).lib
TAO_SMARTPROXIES_LIB = $(CORE_BINDIR)\TAO_SmartProxies$(LIB_DECORATOR).lib
TAO_TYPECODEFACTORY_LIB = $(CORE_BINDIR)\TAO_TypeCodeFactory$(LIB_DECORATOR).lib
TAO_RTCORBA_LIB = $(CORE_BINDIR)\TAO_RTCORBA$(LIB_DECORATOR).lib
TAO_RTPORTABLESERVER_LIB = $(CORE_BINDIR)\TAO_RTPortableServer$(LIB_DECORATOR).lib
TAO_IDL_BE_LIB = $(CORE_BINDIR)\TAO_IDL_BE$(LIB_DECORATOR).lib
TAO_IDL_FE_LIB = $(CORE_BINDIR)\TAO_IDL_FE$(LIB_DECORATOR).lib
TAO_SVC_UTILS_LIB = $(CORE_BINDIR)\TAO_Svc_Utils$(LIB_DECORATOR).lib
TAO_AV_LIB = $(CORE_BINDIR)\TAO_AV$(LIB_DECORATOR).lib
TAO_CONCURRENCY_LIB = $(CORE_BINDIR)\TAO_CosConcurrency$(LIB_DECORATOR).lib
TAO_EVENT_LIB =	$(CORE_BINDIR)\TAO_CosEvent$(LIB_DECORATOR).lib
TAO_FT_LIB = $(CORE_BINDIR)\TAO_FaultTolerance$(LIB_DECORATOR).lib
TAO_LIFECYCLE_LIB = $(CORE_BINDIR)\TAO_CosLifeCycle$(LIB_DECORATOR).lib
TAO_LOADBALANCING_LIB =	$(CORE_BINDIR)\TAO_LoadBalancing$(LIB_DECORATOR).lib
TAO_LOG_LIB = $(CORE_BINDIR)\TAO_DsLogAdmin$(LIB_DECORATOR).lib
TAO_NAMING_LIB = $(CORE_BINDIR)\TAO_CosNaming$(LIB_DECORATOR).lib
TAO_NOTIFY_LIB = $(CORE_BINDIR)\TAO_CosNotification$(LIB_DECORATOR).lib
TAO_PROPERTY_LIB = $(CORE_BINDIR)\TAO_CosProperty$(LIB_DECORATOR).lib
TAO_RTEVENT_LIB	= $(CORE_BINDIR)\TAO_RTEvent$(LIB_DECORATOR).lib
TAO_RTOLDEVENT_LIB = $(CORE_BINDIR)\TAO_RTOLDEvent$(LIB_DECORATOR).lib
TAO_RTSCHED_LIB	= $(CORE_BINDIR)\TAO_RTSched$(LIB_DECORATOR).lib
TAO_RTSCHEDEVENT_LIB = $(CORE_BINDIR)\TAO_RTSchedEvent$(LIB_DECORATOR).lib
TAO_SECURITY_LIB = $(CORE_BINDIR)\TAO_Security$(LIB_DECORATOR).lib
TAO_SSLIOP_LIB = $(CORE_BINDIR)\TAO_SSLIOP$(LIB_DECORATOR).lib
TAO_TIME_LIB = $(CORE_BINDIR)\TAO_CosTime$(LIB_DECORATOR).lib
TAO_TRADING_LIB	= $(CORE_BINDIR)\TAO_CosTrading$(LIB_DECORATOR).lib

TAO_RTEVENT_TEST_CFLAGS = -I$(ACE_ROOT)\TAO\orbsvcs\tests\Event\lib -DEC_TEST_HAS_DLL=$(DLL_FLAG)
TAO_RTEVENT_TEST_LIB    = $(CORE_BINDIR)\ECTests$(LIB_DECORATOR).lib
