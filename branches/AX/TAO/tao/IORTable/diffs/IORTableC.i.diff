--- orig/IORTableC.i	Wed Apr 25 00:32:42 2001
+++ IORTableC.i	Tue Apr 24 13:44:52 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -31,6 +31,49 @@
 #if !defined (_IORTABLE_TABLE___CI_)
 #define _IORTABLE_TABLE___CI_
 
+ACE_INLINE IORTable::Table_ptr
+tao_IORTable_Table_duplicate (
+    IORTable::Table_ptr p
+  )
+{
+  return IORTable::Table::_duplicate (p);
+}
+
+ACE_INLINE void
+tao_IORTable_Table_release (
+    IORTable::Table_ptr p
+  )
+{
+  CORBA::release (p);
+}
+
+ACE_INLINE IORTable::Table_ptr
+tao_IORTable_Table_nil (
+    void
+  )
+{
+  return IORTable::Table::_nil ();
+}
+
+ACE_INLINE IORTable::Table_ptr
+tao_IORTable_Table_narrow (
+    CORBA::Object *p,
+    CORBA::Environment &ACE_TRY_ENV
+  )
+{
+  return IORTable::Table::_narrow (p, ACE_TRY_ENV);
+}
+
+ACE_INLINE CORBA::Object *
+tao_IORTable_Table_upcast (
+    void *src
+  )
+{
+  IORTable::Table **tmp =
+    ACE_static_cast (IORTable::Table **, src);
+  return *tmp;
+}
+
 
 #endif /* end #if !defined */
 
@@ -38,34 +81,49 @@
 #if !defined (_IORTABLE_LOCATOR___CI_)
 #define _IORTABLE_LOCATOR___CI_
 
+ACE_INLINE IORTable::Locator_ptr
+tao_IORTable_Locator_duplicate (
+    IORTable::Locator_ptr p
+  )
+{
+  return IORTable::Locator::_duplicate (p);
+}
 
-#endif /* end #if !defined */
-
-ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const IORTable::AlreadyBound &_tao_aggregate)
+ACE_INLINE void
+tao_IORTable_Locator_release (
+    IORTable::Locator_ptr p
+  )
 {
-  // first marshal the repository ID
-  if (strm << _tao_aggregate._id ())
-    return 1;
-  else
-    return 0;
+  CORBA::release (p);
 }
 
-ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &,IORTable::AlreadyBound&)
+ACE_INLINE IORTable::Locator_ptr
+tao_IORTable_Locator_nil (
+    void
+  )
 {
-  return 1;
+  return IORTable::Locator::_nil ();
 }
 
-ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const IORTable::NotFound &_tao_aggregate)
+ACE_INLINE IORTable::Locator_ptr
+tao_IORTable_Locator_narrow (
+    CORBA::Object *p,
+    CORBA::Environment &ACE_TRY_ENV
+  )
 {
-  // first marshal the repository ID
-  if (strm << _tao_aggregate._id ())
-    return 1;
-  else
-    return 0;
+  return IORTable::Locator::_narrow (p, ACE_TRY_ENV);
 }
 
-ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &,IORTable::NotFound&)
+ACE_INLINE CORBA::Object *
+tao_IORTable_Locator_upcast (
+    void *src
+  )
 {
-  return 1;
+  IORTable::Locator **tmp =
+    ACE_static_cast (IORTable::Locator **, src);
+  return *tmp;
 }
+
+
+#endif /* end #if !defined */
 
