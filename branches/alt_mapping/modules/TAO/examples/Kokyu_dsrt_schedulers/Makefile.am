##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)

SUBDIRS = \
        . \
        fp_example \
        mif_example \
        muf_example

CLEANFILES =
BUILT_SOURCES =

## Makefile.Kokyu_DSRT_Schedulers.am

if BUILD_EXCEPTIONS
if BUILD_RT_CORBA

BUILT_SOURCES += \
  FP_SchedulingC.cpp \
  FP_SchedulingC.h \
  FP_SchedulingC.inl \
  FP_SchedulingS.inl

CLEANFILES += \
  FP_Scheduling-stamp \
  FP_SchedulingC.cpp \
  FP_SchedulingC.h \
  FP_SchedulingC.inl \
  FP_SchedulingS.inl

FP_SchedulingC.cpp FP_SchedulingC.h FP_SchedulingC.inl FP_SchedulingS.inl: FP_Scheduling-stamp

FP_Scheduling-stamp: $(srcdir)/FP_Scheduling.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -Wb,export_macro=Kokyu_DSRT_Schedulers_Export -Wb,export_include=Kokyu_dsrt_schedulers_export.h $(srcdir)/FP_Scheduling.idl
	@touch $@

BUILT_SOURCES += \
  MIF_SchedulingC.cpp \
  MIF_SchedulingC.h \
  MIF_SchedulingC.inl \
  MIF_SchedulingS.inl

CLEANFILES += \
  MIF_Scheduling-stamp \
  MIF_SchedulingC.cpp \
  MIF_SchedulingC.h \
  MIF_SchedulingC.inl \
  MIF_SchedulingS.inl

MIF_SchedulingC.cpp MIF_SchedulingC.h MIF_SchedulingC.inl MIF_SchedulingS.inl: MIF_Scheduling-stamp

MIF_Scheduling-stamp: $(srcdir)/MIF_Scheduling.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -Wb,export_macro=Kokyu_DSRT_Schedulers_Export -Wb,export_include=Kokyu_dsrt_schedulers_export.h $(srcdir)/MIF_Scheduling.idl
	@touch $@

BUILT_SOURCES += \
  Kokyu_qosC.cpp \
  Kokyu_qosC.h \
  Kokyu_qosC.inl \
  Kokyu_qosS.inl

CLEANFILES += \
  Kokyu_qos-stamp \
  Kokyu_qosC.cpp \
  Kokyu_qosC.h \
  Kokyu_qosC.inl \
  Kokyu_qosS.inl

Kokyu_qosC.cpp Kokyu_qosC.h Kokyu_qosC.inl Kokyu_qosS.inl: Kokyu_qos-stamp

Kokyu_qos-stamp: $(srcdir)/Kokyu_qos.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -Wb,export_macro=Kokyu_DSRT_Schedulers_Export -Wb,export_include=Kokyu_dsrt_schedulers_export.h $(srcdir)/Kokyu_qos.idl
	@touch $@

BUILT_SOURCES += \
  MUF_SchedulingC.cpp \
  MUF_SchedulingC.h \
  MUF_SchedulingC.inl \
  MUF_SchedulingS.inl

CLEANFILES += \
  MUF_Scheduling-stamp \
  MUF_SchedulingC.cpp \
  MUF_SchedulingC.h \
  MUF_SchedulingC.inl \
  MUF_SchedulingS.inl

MUF_SchedulingC.cpp MUF_SchedulingC.h MUF_SchedulingC.inl MUF_SchedulingS.inl: MUF_Scheduling-stamp

MUF_Scheduling-stamp: $(srcdir)/MUF_Scheduling.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -Wb,export_macro=Kokyu_DSRT_Schedulers_Export -Wb,export_include=Kokyu_dsrt_schedulers_export.h $(srcdir)/MUF_Scheduling.idl
	@touch $@

BUILT_SOURCES += \
  EDF_SchedulingC.cpp \
  EDF_SchedulingC.h \
  EDF_SchedulingC.inl \
  EDF_SchedulingS.inl

CLEANFILES += \
  EDF_Scheduling-stamp \
  EDF_SchedulingC.cpp \
  EDF_SchedulingC.h \
  EDF_SchedulingC.inl \
  EDF_SchedulingS.inl

EDF_SchedulingC.cpp EDF_SchedulingC.h EDF_SchedulingC.inl EDF_SchedulingS.inl: EDF_Scheduling-stamp

EDF_Scheduling-stamp: $(srcdir)/EDF_Scheduling.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -Wb,export_macro=Kokyu_DSRT_Schedulers_Export -Wb,export_include=Kokyu_dsrt_schedulers_export.h $(srcdir)/EDF_Scheduling.idl
	@touch $@

noinst_LTLIBRARIES = libKokyu_DSRT_Schedulers.la

libKokyu_DSRT_Schedulers_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I$(ACE_ROOT)/Kokyu \
  -DKOKYU_DSRT_SCHEDULERS_BUILD_DLL

libKokyu_DSRT_Schedulers_la_SOURCES = \
  EDF_SchedulingC.cpp \
  FP_Scheduler.cpp \
  FP_SchedulingC.cpp \
  Kokyu_qosC.cpp \
  MIF_Scheduler.cpp \
  MIF_SchedulingC.cpp \
  MUF_Scheduler.cpp \
  MUF_SchedulingC.cpp \
  Task_Stats.cpp \
  utils.cpp

noinst_HEADERS = \
  EDF_Scheduling.idl \
  EDF_SchedulingC.h \
  EDF_SchedulingC.inl \
  EDF_SchedulingS.inl \
  FP_Scheduler.h \
  FP_Scheduling.idl \
  FP_SchedulingC.h \
  FP_SchedulingC.inl \
  FP_SchedulingS.inl \
  Kokyu_dsrt_schedulers_export.h \
  Kokyu_qos.idl \
  Kokyu_qosC.h \
  Kokyu_qosC.inl \
  Kokyu_qosS.inl \
  MIF_Scheduler.h \
  MIF_Scheduling.idl \
  MIF_SchedulingC.h \
  MIF_SchedulingC.inl \
  MIF_SchedulingS.inl \
  MUF_Scheduler.h \
  MUF_Scheduling.idl \
  MUF_SchedulingC.h \
  MUF_SchedulingC.inl \
  MUF_SchedulingS.inl \
  Task_Stats.h \
  Task_Stats.inl \
  utils.h

endif BUILD_RT_CORBA
endif BUILD_EXCEPTIONS

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
