// $Id$

project(CCM_generic_stub_idl) : install, ciaolib_with_idl {
  idlflags  += -Wb,stub_export_include=CCM_Generic_Stub_Export.h \
               -Wb,stub_export_macro=CCM_GENERIC_STUB_Export \
               -Wb,skel_export_include=CCM_Generic_Skel_Export.h \
               -Wb,skel_export_macro=CCM_GENERIC_SKEL_Export
  custom_only = 1

  IDL_Files {
    idlflags += -Gxhst -Gxhsk -SS -Sci
    CCM_GenericContext.idl
  }

  IDL_Files {
    idlflags += -SS -Sci
    CCM_ClientContainerInterceptorRegistration.idl
    CCM_ClientContainerInterceptor.idl
    CCM_ContainerInterceptor.idl
    CCM_ContainerServerRequestInfo.idl
    CCM_ServantContainerInterceptor.idl
    CCM_ServerContainerInterceptorRegistration.idl
    CCM_ContainerRequestInfo.idl
    CCM_ContainerStubRequestInfo.idl
    CCM_InvalidRegistration.idl
    CCM_ServantContainerInterceptorRegistration.idl
    CCM_StubContainerInterceptor.idl
    CCM_ContainerClientRequestInfo.idl
    CCM_ContainerServantRequestInfo.idl
    CCM_GenericComponent.idl
    CCM_ServerContainerInterceptor.idl
    CCM_StubContainerInterceptorRegistration.idl
  }

  IDL_Files {
    idlflags += -Ssi
    CCM_QoS.idl
  }

  specific {
    install_dir = ccm/Generic
  }
}

project(CCM_generic_stub) : install, ciaolib_with_idl, ciao_output, ccm_lem_stub, pi_server {
  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)
  dynamicflags += CCM_GENERIC_STUB_BUILD_DLL
  after += CCM_generic_stub_idl CCM_lem_stub
  libs += CCM_lem_stub
  IDL_Files {
  }

  Header_Files {
    CCM_Generic_Stub_Export.h
    CCM_ClientContainerInterceptorC.h
    CCM_ContainerInterceptorC.h
    CCM_ContainerServerRequestInfoC.h
    CCM_GenericContextC.h
    CCM_ServantContainerInterceptorC.h
    CCM_ServerContainerInterceptorRegistrationC.h
    CCM_ClientContainerInterceptorRegistrationC.h
    CCM_ContainerRequestInfoC.h
    CCM_ContainerStubRequestInfoC.h
    CCM_InvalidRegistrationC.h
    CCM_ServantContainerInterceptorRegistrationC.h
    CCM_StubContainerInterceptorC.h
    CCM_ContainerClientRequestInfoC.h
    CCM_ContainerServantRequestInfoC.h
    CCM_GenericComponentC.h
    CCM_QoSC.h
    CCM_ServerContainerInterceptorC.h
    CCM_StubContainerInterceptorRegistrationC.h
  }

  Inline_Files {
    CCM_QoSC.inl
  }

  Source_Files {
    CCM_ClientContainerInterceptorC.cpp
    CCM_ContainerInterceptorC.cpp
    CCM_ContainerServerRequestInfoC.cpp
    CCM_GenericContextC.cpp
    CCM_ServantContainerInterceptorC.cpp
    CCM_ServerContainerInterceptorRegistrationC.cpp
    CCM_ClientContainerInterceptorRegistrationC.cpp
    CCM_ContainerRequestInfoC.cpp
    CCM_ContainerStubRequestInfoC.cpp
    CCM_InvalidRegistrationC.cpp
    CCM_ServantContainerInterceptorRegistrationC.cpp
    CCM_StubContainerInterceptorC.cpp
    CCM_ContainerClientRequestInfoC.cpp
    CCM_ContainerServantRequestInfoC.cpp
    CCM_GenericComponentC.cpp
    CCM_QoSC.cpp
    CCM_ServerContainerInterceptorC.cpp
    CCM_StubContainerInterceptorRegistrationC.cpp
  }

  specific {
    install_dir = ccm/Generic
  }
}

project(CCM_generic_skel) : install, ciaolib_with_idl, ciao_output, valuetype, ifr_client, ccm_lem_stub, ccm_generic_stub, portableserver {
  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)
  dynamicflags += CCM_GENERIC_SKEL_BUILD_DLL
  after += CCM_generic_stub_idl
  IDL_Files {
  }
  Source_Files {
    CCM_QoSS.cpp
  }
  Header_Files {
    CCM_QoSS.h
  }
  specific {
    install_dir = ccm/Generic
  }
}
