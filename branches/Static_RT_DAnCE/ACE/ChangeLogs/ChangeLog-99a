Sat Jul 31 20:29:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp: Moved the comment regarding *printf to where it
          belongs.

        * ace/OS.h: Removed an extra trailing semicolon following
          IPPROTO_TCP.

Sat Jul 31 19:27:50 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Shared_Malloc/test_position_independent_malloc.cpp:
          Now that position-independent malloc works, I finished
          integrating all the features in this test.

Sat Jul 31 19:06:05 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Pipe.cpp:
          The third argument to ACE_OS::setsockopt() is a "const char*" no
          sense in casting it to void*!

Sat Jul 31 18:55:34 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Asynch_IO_Impl.{h, cpp}:
          Fixed compiler errors: redefinition of destructors of the
          classes in this file. Removed inline declaration of destructors
          and defined those which hadnt been defined.

Sat Jul 31 17:54:32 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * etc/enforce_ace_try.diff:
          Apply this patch file and then compile to enforce the correct
          use of ACE_TRY macros. It renames the exception(), clear() and
          print_exception() methods in the CORBA::Environment class.

Sat Jul 31 17:39:42 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Timeprobe_T.cpp:
          Print timeprobe results with higher precision (3 decimal
          digits), this is useful for extremely fine grained analysis
          where just microseconds won't cut it.

Sat Jul 31 12:07:48 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ace: Updated comments in all the header files so that references
          to method names like ACE_Event_Handler::handle_input() were
          changed to <ACE_Event_Handler::handle_input>.  This change
          enables the class2man scripts to use the appropriate "code" font
          for these names in the auto-generated documentation.

        * ace/Asynch_IO_Impl: Moved the
          virtual destructors for all the ACE_Asynch_*_Impl classes into
          the *.cpp file, which is where they belong.

        * ace/Functor_T.h: Moved the destructor of ACE_Command_Callback
          out of the header file and into the *.cpp file.

        * ace/Sched_Params.h: Updated the documentation a bit to mention
          the ACE_SCHED_{FIFO,RR,OTHER} policies explicitly.  Thanks to
          Peter Mueller <pmueller@decrc.abb.de> for motivating this.

        * ace/Synch_T: Moved the implementations of ACE_Read_Guard and
          ACE_Write_Guard out of the class header and into the *.i file,
          which is where they belong.

        * ace/Based_Pointer_T.i (operator *): In order to distinquish a
          "NULL" pointer we keep a value of -1 in target.

        * ace/Based_Pointer_T.i: I was forgetting to check if
          rhs == 0 for the ACE_Based_Pointer<> class.  This leads to weird
          behavior when assigning a "NULL" pointer.

        * examples/Reactor/Misc/notification.cpp: Cleaned up the program so
          that it looks better and doesn't crash and burn when signals occur.

        * ace/Pipe.cpp (open): We now set the default size of the
          ACE_Pipes that are implemented as Internet or UNIX-domain
          sockets to ACE_DEFAULT_MAX_SOCKET_BUFSIZ.  This will speed up
          the Reactor's notify() method and prevent it from deadlocking as
          quickly.  Thanks to Detlef Becker <Detlef.Becker@med.siemens.de>
          for testing this out.

        * ace/OS.h: Added a new macro called ACE_IPPROTO_TCP that factors
          out the differences between PHARLAPs and "normal" systems.

        * ace/Strategies_T.{i,cpp}: Added some additional ACE_ERROR printouts
          if open() methods fail in constructors.

        * ace/Strategies_T: The logic for creating a new Singleton wasn't
          dynamic enough.  It's now intelligent enough to create a new
          SVC_HANDLER if it's not given one.  Thanks to Hao Ruan
          <hruan@lucent.com> for reporting this.

Sat Jul 31 15:57:16 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ACE version 5.0 released.  Party on Wayne.

Sat Jul 31 12:20:59 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/version_tests/version_tests.dsw:
        * tests/version_tests/Hash_Map_Bucket_Iterator_Test.dsp:
        * tests/version_tests/Cached_Conn_Test.dsp:
        * tests/version_tests/Cached_Accept_Conn_Test.dsp: Added three
          missing version_tests project files.

Sat Jul 31 00:22:46 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Basic_Types_Test.dsp:
        * tests/Collection_Test.dsp:
        * tests/Dynamic_Priority_Test.dsp:
        * tests/New_Fail_Test.dsp:
        * tests/Reverse_Lock_Test.dsp:
        * tests/SOCK_Connector_Test.dsp:
        * tests/SOCK_Send_Recv_Test.dsp:
        * tests/Thread_Mutex_Test.dsp:
        * tests/Timeprobe_Test.dsp:
        * tests/Upgradable_RW_Test.dsp: Rebuilt.  ACE_Init_Test.dsp is
          still broken.

Fri Jul 30 10:27:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-10.x.h: Allow building w/o threads - set _REENTRANT
          if not set, to pick up _r functions; move
          ACE_HAS_NONCONST_SELECT_ TIMEVAL out of the threads-only
          section.

Fri Jul 30 08:36:43 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Commented out the ACE_TRACE calls in ACE_OS::mutex_lock()
          and ACE_OS::thread_mutex_lock() to avoid infinite recursion.  Thanks
          to Ulf Jaehrig <jaehrig@desys.com> for reporting this.

Fri Jul 30 03:33:14 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
        * bin/auto_compile_wrapper:
        * bin/run_all_list.pm:
          Added options to run only the tests that do not require threads
          (-single_threaded) and that do not require the full corba
          profile (-minimum_corba).  Also added options to disable the cvs
          update, to execute realclean before compiling and to print some
          debugging info.

Thu Jul 29 20:44:56 1999  Ossama Othman  <othman@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU:

          Override minimum_corba variable if it isn't set to 1 (i.e. if
          minimum_corba is not enabled).  This change was needed to make
          it easier to disable some TAO ORB services, examples and tests
          that rely on CORBA features that aren't supported in the minimum
          CORBA specification.

Thu Jul 29 19:04:12 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Atomic_Op.i:
        * ace/Filecache.cpp:

          Replaced raw ACE_*_Guards with their corresponding
          ACE_GUARD_RETURN macros.  This corrects "unused variable"
          warnings when building ACE without thread support.  See David's
          ChangeLog entry from Fri May 14 16:10:29 1999 for a better
          description of why this was necessary.

Thu Jul 29 18:29:46 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/run_all_list.pm: Moved the RUN_LIST definition from
          auto_compile to this file to reduce the work to maintain the
          list and allow auto_compile and run_all_win32.pl to synchronize
          the tests being run.

        * bin/auto_compile:
        * bin/run_all_win32.pl: Removed definition of RUN_LIST and use the
          run_all_list module.

Thu Jul 29 17:30:14 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Makefile[.am] (pkginclude_HEADERS): Removed Future_Node.*
          Thanks to John Tucker <jtucker@infoglide.com> and Michael Garvin
          <mgarvin@nortelnetworks.com> for reporting this.

Thu Jul 29 14:47:10 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Select_Reactor_T.cpp (dispatch_notification_handlers):

          This code is used for picking up updates from non-owner threads.
          However, it is also useful for picking up notifications from the
          notify pipe (even though the notify is part of the I/O handle
          set in the Select_Reactor).  Therefore, we have enabled this
          code for the single-threaded case also.  Thanks to Irfan for
          this fix.

Thu Jul 29 14:32:28 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/ACE.cpp:
          Linux without returns a different errno (EOPNOTSUPP) if the
          connector or acceptor runs out of file descriptors.

        * ace/OS.i:
          The Errno_Guard constructor was not using an argument in
          platforms without exceptions.

Thu Jul 29 13:59:15 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.47 released.

Thu Jul 29 12:32:01 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/WFMO_Reactor.cpp (ACE_WFMO_Reactor):
        * ace/Select_Reactor_T.cpp (ACE_Select_Reactor_T): I forgot to
          initialize <deactivated_> flag in one of the two ctors.  Thanks
          to Ruediger Franke <Ruediger.Franke@decrc.abb.de> for catching
          this one.

Thu Jul 29 01:04:03 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
        * bin/auto_compile_wrapper:
          Updated to include the latest round of changes, new tests and
          several improvements to send email and stuff.

Wed Jul 28 18:29:46 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/config-win32.h:
          Removed ACE_HAS_STD_TEMPLATE_SPECIALIZATION
          definition. See below.

        * ace/config-win32-common.h:
          Added ACE_HAS_STD_TEMPLATE_SPECIALIZATION
          definition, since there is a place for MSVC 6.0 stuff like this.
          Also added ACE_HAS_BROKEN_IMPLICIT_CONST_CAST
          definition for a generated code bug fix that just didn't have one version
          that would satisfy both SunCC and MSVC.

Wed Jul 28 18:26:53 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
        * ace/Message_Block.h:
        * ace/Message_Block.cpp:
        * ace/Message_Block_T.h:
        * ace/Message_Block_T.cpp:
          Re-implemented the clone() method without data copies in a
          backwards compatible way, a new clone_nocopy() method was added
          so classes that inherit from Data_Block and only override
          clone() will work correctly.
          Also fixed the implementation of Locked_Data_Blocked because it
          is used in TAO and we need zero-copy clone() operations in that
          case.

Wed Jul 28 16:16:27 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (set): Fixed a unsigned/signed conversion problem
          that caused negative usec value in ACE_Time_Value.  Thanks to
          Jerry D. De Master <jdemaste@ipdinc.com> for reporting the bug.
          (FILETIME): Removed some unused macros for dealing with older
          Borland C++ compilers.  Thanks to Jody and Gonzo for confirming
          this.

Wed Jul 28 13:44:15 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACE-INSTALL.html: Remind users to pick the right configurations
          when building from MSVC project files.  Thanks to Jerry D. De
          Master <jdemaste@ipdinc.com> for suggesting this.

Wed Jul 28 13:26:36 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: for VxWorks (thru Tornado 1.0.1),
          -fno-implicit-templates is broken for x86 targets,
          not all targets.

Wed Jul 28 13:09:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: updated libACE size breakdown.

Wed Jul 28 12:08:56 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/CDR_Stream.cpp (reset_contents):

          Modified call to clone() so that it uses the newly added
          zero-copy semantics.  A data copy was already being made in
          ACE_InputCDR::steal_from(), which also calls
          ACE_InputCDR::reset_contents().  Two data copies were being
          performed.  This change reduces the number of data copies to
          one.  Thanks to Carlos for this change.

Wed Jul 28 11:23:36 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Message_Block.h:
        * ace/Message_Block.cpp (clone):

          Added argument that allows the characteristics of an
          ACE_Data_Block to be copied without copying the data that the
          ACE_Data_Block holds.  This modification is part of a zero-copy
          optimization for TAO.  Thanks to Carlos for implementing this
          change.

Wed Jul 28 09:48:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added guideline about testing
          for definition of a macro before using it.  Thanks to
          Susan Liebeskind <susan.liebeskind@gtri.gatech.edu> for
          providing this guideline.

Wed Jul 28 00:06:32 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace: Added a new Makefile.bor file for BCB4.  Thanks to Christopher
          Kohlhoff <chris@kohlhoff.com> for contributing this.

Tue Jul 27 23:25:18 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/lib/Server_Logging_Handler_T.cpp (open): Updated a
          comment to point out that we use a thread-per-connection
          concurrency model.  Thanks to Raghu Nambiath
          <raghun@wipinfo.soft.net> for reporting this.

Tue Jul 27 21:05:23 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_tru64_cxx.GNU (ACE_DU_SUBVERSION):
          fixed typo:  -v instead of v-.  Thanks to
          Doug Anderson <dla@home.com> for reporting this.

Tue Jul 27 16:58:54 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/ACE.cpp (out_of_handles): Added bug-fixes for RedHat5.2 and
          FreeBSD. Thanks to James Megquier <jmegq@bbn.com> for discovering
          and testing out the bug-fix on RedHat5.2 and Russell.L.Carter
          <rcarter@pinyon.org> for sending in a patch for FreeBSD. These
          bug fixes are for: $ACE_ROOT/tests/
          Cached_Conn_Test  and  Cached_Accept_Conn_Test.

Tue Jul 27 16:55:44 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_kcc.GNU (MATHLIB): KCC needs
          to have this defined.

Tue Jul 27 16:18:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated note about shared libraries
          on VxWorks.  In particular, they don't provide copies
          of global (static) variables in the library.  So, "programs"
          that share a library will also share the static variables in
          the library. [Bug 86]

Tue Jul 27 14:26:37 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_Dgram: Removed the QoS_Params from open() and
          ACE_SOCK_Dgram since they don't appear to be useful.  Thanks to
          Vidya Narayanan <CVN065@lmpsil02.comm.mot.com> for suggesting
          this.

Tue Jul 27 14:41:26 1999  Steve Huston  <shuston@riverace.com>

        * ace/Codeset_IBM1047.cpp: Added a static variable only for HP aC++
          to make it stop warning of an empty translation unit.

Tue Jul 27 14:16:55 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.cpp (cancel_thr): This method should return
          the result of thread cancel operation if async_cancel is used.
          Thanks to Peter Mueller <pmueller@decrc.abb.de> for suggesting
          the fix.

Mon Jul 26 20:50:37 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS: Addded a new pair of priority() fields as place
          holders for the forthcoming DiffServ QoS features.  Thanks to
          Vidya Narayanan <CVN065@lmpsil02.comm.mot.com> for suggesting
          this.

Tue Jul 27 13:28:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (getuid): removed extra ACE_TRACE with
          ACE_WIN32 or CHORUS.  Thanks to Jerry D. De Master
          <jdemaste@ipdinc.com> for reporting this.

Tue Jul 27 11:10:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/System_V_IPC/Makefile: on VxWorks only, fixed
          so that make all, etc., work properly (by just printing
          the message that these examples aren't used on VxWorks).

Tue Jul 27 10:25:41 1999  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Added a note about required HP-UX 10.20
          patch. Updated aC++ versions.

        * ace/Process.{h cpp} (ACE_Process_Options::command_line): Added
          'const' to make the entire array and contents const. Restores
          ability for users of pre-5.0 to still pass char **. Thanks to
          Bill Tovrea <gwtovrea@west.raytheon.com> for reporting this.

        * examples/Connection/non_blocking/Makefile: Re-added LIBS += $(ACELIB)
          (see ChangeLog, 23-Jul-1999) but did it in the section for AIX
          C Set++ and IBM C/C++ only (ifdef TEMPINCDIR). This is needed to
          generate the shared library (libConn) using those compilers.

Mon Jul 26 20:50:37 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Future.h: Moved the static methods until the bottom
          of the ACE_Future_Rep class (again) to workaround a bug with
          Borland's C++ Builder.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for reporting this (again).

Mon Jul 26 20:59:23 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/README:
          Added a brief description of the directory and its current
          contents.  Thanks to Will Skunk <willskunk@homemail.com>
          for motivating this.

Mon Jul 26 20:50:37 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Log_Msg.cpp: Added support for the 'W' (UNICODE) option for
          Win32.  Thanks to Valery Arkhangorodsky
          <valerya@servicesoft.com> for contributing this.

Mon Jul 26 20:58:35 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/POSIX_Asynch_IO.cpp:
        * ace/WIN32_Asynch_IO.cpp: Fixed the double deletion problem of
          the result classes. Thanks to David Digby
          <DWD15274@glaxowellcome.co.uk> and Timothy Schimke
          <Schimke.Timothy@LittonDSD.com> for reporting this.

Mon Jul 26 18:09:09 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/run_tests.sh (Cached_Conn_Test and
          Cached_Accept_Conn_Test): These two tests are known to leak
          memory when compiled with old gcc (g++).  Therefore, we skip
          these tests when using purify and old gcc (g++).  A -p option
          was added to the script to indicate that we want to run with
          purify.

Mon Jul 26 17:09:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Object_Manager.{h,cpp},Makefile: don't create the
          ACE_TOKEN_MANAGER_CREATION_LOCK and
          ACE_TOKEN_INVARIANTS_CREATION_LOCK preallocated objects
          if the Token component isn't build.  This gets rid of
          unresolved references to the ACE_Token_Proxy compoents
          on VxWorks/g++ when Token isn't built.  Thanks to
          Stephane Chatre <schatre@oresis.com> for reporting this.

Mon Jul 26 17:02:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU: don't override
          OBJDIRS on VxWorks with shared libs.  This allows
          make realclean to work properly on VxWorks, when shared
          lib builds are enabled.

Mon Jul 26 15:06:23 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.i:
        * ace/Map_Manager.i:
          Had to cast some return values to avoid MSVC signed/unsigned
          mismatch type warnings (level 4).

        * ace/config-win32.h:
          Added ACE_HAS_STD_TEMPLATE_SPECIALIZATION define, so that
          ACE_TEMPLATE_SPECIALIZATION macro adds the necessart
          'template <>' for MSVC, and so averts many many level 4
          warnings.

Mon Jul 26 14:10:56 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/DLL.cpp (get_handle): Changed the check of <become_owner>
          flag to now reset <close_on_destruction> only if the
          <become_owner> is set. Thanks to Bob McWhirter <bob@werken.com>
          for pointing this out.

Mon Jul 26 12:32:41 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.46 released.

Fri Jul 23 18:20:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-irix6.x-sgic++-nothreads.h:
          Enabled namespaces with MIPSPro 7.2 or higher.

Fri Jul 23 16:40:15 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/ACE.cpp:
          Fixed typos in error return values for ACE::execname()

Fri Jul 23 14:51:48 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Service_Configurator/IPC-tests/Handle_L_CODgram,
          examples/Service_Configurator/IPC-tests/Handle_L_Dgram,
          examples/Service_Configurator/IPC-tests/Handle_L_Pipe:
          Cleaned this stuff up so that it builds correctly when
          ACE_LACKS_UNIX_DOMAIN_SOCKETS is enabled.  Thanks to
          David for reporting this.

        * examples/Service_Configurator/IPC-tests/server/Handle_L_Pipe:
          Made upper_case() a method in the Handle_L_Pipe class.

        * examples/Service_Configurator/IPC-tests/server/Handle_L_Pipe.cpp,
          examples/Service_Configurator/IPC-tests/server/Handle_L_CODgram.cpp:
          Removed the bizarre hacks for SunOS4.  This stuff probably
          hasn't been tested since 1992!

Fri Jul 23 14:16:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/OS.i (ACE_OS::read): (only non-Win32), if call fails and
          errno is EAGAIN, change it to EWOULDBLOCK. Improve portability for
          platforms where EAGAIN and EWOULDBLOCK are different values and
          both used, like HP-UX.

        * ace/Malloc_T.cpp (ACE_Malloc<> ctor): Added missing newline in error
          message.

Fri Jul 23 12:09:18 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i: Fixed some mismatched ifdef/endif comments.

        * ace/ACE.cpp (execname): Fixed some misuses of ACE_HAS_WIN32
          macros where they should have been ACE_WIN32.  Thanks to Andy
          for noticing this.

Fri Jul 23 11:28:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Memory_Pool.cpp (init_acquire): shmat() returns -1 on
          failure, not 0.  Thanks to Kevin Liu
          <kliu@fitch.math.uwaterloo.ca> for reporting this.

Fri Jul 23 11:35:31 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Connection/non_blocking/tests_lsock_{acceptor,
          connector.cpp}: disabled if ACE_LACKS_UNIX_DOMAIN_SOCKETS.
          Thanks to Alain Magloire <alain@qnx.com> for reporting this.

        * examples/Connection/non_blocking/Makefile: removed unneeded
          LIBS (=$(ACELIB)) and BUILD macro definitions.

Fri Jul 23 10:07:05 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_qnx_neutrino.GNU: added
          CROSS-COMPILE macro definition.  Thanks to
          Alain Magloire <alain@qnx.com> for reporting this.

Fri Jul 23 08:58:56 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Service_Config.h: Clarified the fact that the
          ACE_Service_Config uses the Monostate pattern, so there can only
          be one of them per-process.  Thanks to Ralf Kluthe
          <kluthe@iti.mu-luebeck.de> for reporting this.

Fri Jul 23 07:49:31 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_sunc++.GNU: added
          comment about options for producing 64-bit binaries.
          Thanks to Jeff Franks <Jeffrey_Franks@i-o.com> for
          raising this issue.

Fri Jul 23 03:10:31 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Strategies_T.cpp (find_or_create_svc_handler_i):
        * ace/Cached_Connect_Strategy_T.cpp (cached_connect):

          I had added the new_connection() method that lets go of the lock
          for the duration of the connect(), but forgot to use it in the
          above functions ;)  It should be fine now.

        * tests/Cached_Conn_Test.cpp (cached_connect):
        * tests/Cached_Accept_Conn_Test.cpp (cached_connect):

          Host of the remote address should be ACE_LOCALHOST instead of
          ACE_DEFAULT_SERVER_HOST.

Thu Jul 22 23:23:26 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Handle_Gobbler.h (class ACE_Handle_Gobbler): Inlined
          declaration of the functions.

Thu Jul 22 20:03:54 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Acceptor.cpp: For sanity's sake, initialize all the data
          members to 0 in the ACE_Strategy_Acceptor constructor.  Thanks
          to Jody Hagins <jody@atdesk.com> for reporting this.

        * ace/Acceptor.cpp: The service_port_ data member in the
          ACE_Strategy_Acceptor wasn't being initialized to 0.  Thanks to
          Jody Hagins <jody@atdesk.com> for reporting this.

        * ace/Acceptor.cpp: Modified the dump() and info() methods so that
          don't do bad things if service_name_ and service_description_
          are NULL.  Thanks to Jody Hagins <jody@atdesk.com> for this
          suggestion.

        * ace/Message_Queue_T.h: Clarified what the errnos get set to when
          timeouts occur or queues are deactivated.  Thanks to
          John Forest <forestj@res.raytheon.com> for suggesting this.

Thu Jul 22 16:55:14 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Stats.cpp:
          Fixed message that had a %s but no argument!

Thu Jul 22 15:12:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Codeset_IBM1047.{h,cpp}: wrapped with #ifdef ACE_MVS
          so that the code doesn't occupy any space on platforms
          other than MVS.

Thu Jul 22 14:22:41 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Shared_Malloc/Malloc.cpp: fixed explicit
          template instantiations so that there are no duplications
          with ACE_LACKS_SBRK and ACE_LACKS_SYSV_SHMEM.

Thu Jul 22 12:17:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-lynxos.h: removed ACE_LACKS_FORK on PowerPC.
          All of the ACE tests that fork now succeed.

Thu Jul 22 11:54:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/SV_Shared_Memory_Test.cpp (child): added a one
          second sleep to give the parent a chance to create the
          semaphore.  This allows the test to succeed on LynxOS/PPC
          (with fork ()).

        * tests/Process_Mutex_Test.cpp,Process_Strategy_Test.cpp (main):
          added a one second sleep after spawning each server, to give it
          a chance to start.  Also, wrapped some string literals with
          ASYS_TEXT.  Again, success on LynxOS/PPC with fork ().

Thu Jul 22 10:42:06 1999  Clarence M. Weaver  <clarence_m_weaver@md.northgrum.com>

        * ACE-INSTALL.html: added steps for running the ACE tests
          on VxWorks platforms that lack NFS.

Thu Jul 22 10:25:31 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Log_Record.cpp,SString.cpp: wrapped #include of
          ace/streams.h with #ifndef ACE_LACKS_IOSTREAMS_TOTALLY.
          [Bug 84]

Thu Jul 22 09:55:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: updated commit message guideline
          to show ChangeLogTag example.

Thu Jul 22 02:15:46 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Handle_Gobbler (class ACE_Handle_Gobbler): New class that
          gobbles up handles :) This class is useful when we need to
          control the number of handles available for a process.  Mostly
          used for testing purposes.

          Note that even though the new files are in the ace directory,
          they are not part of the ace library.  The files only contain
          inline functions and Handle_Gobbler.h is only included where
          needed.

        * tests/Cached_Conn_Test.cpp:
        * tests/Cached_Accept_Conn_Test.cpp:

          Added Handle_Gobbler to the test to reduce the iterations
          required before handles run out and purging starts.

Wed Jul 21 21:45:22 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Reactor.cpp: Applied ACE_NOTREACHED to several
          run_*_event_loop methods.

        * docs/ACE-guidelines.html: Updated ASYS_TEXT usage.

        * ace/RB_Tree.cpp:
        * tests/Cache_Map_Manager_Test.cpp: Applied ASYS_TEXT liberally.

Wed Jul 21 21:19:36 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added note about ACE support for
          shared libraries on VxWorks.  It's still under
          development.

Wed Jul 21 18:38:00 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Strategies_T.h (ACE_Cached_Connect_Strategy): Renamed
          <connection_cache_> to <connection_map_>.

        * ace/Hash_Cache_Map_Manager_T.cpp (find): Finding and updating
          the attributes is faster through the find() that uses an entry.
          Therefore, for find (key, value) and find (key) we go to
          find (key, entry) instead of going to the base class.

        * ace/Cached_Connect_Strategy_T.cpp:

          - ACE_Cached_Connect_Strategy_Ex::check_hint_i
          - ACE_Cached_Connect_Strategy_Ex::find

          Update the caching attributes directly since we don't do a
          find() on the cache map.

Wed Jul 21 15:54:25 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/DLL.cpp: ACE_HAS_MOSTLY_UNICODE_APIS fixes.

        * ace/OS.i (ctime):
        * ace/OS.cpp (ctime): One copy should only be available when
          ACE_HAS_MOSTLY_UNICODE_APIS is defined.  Thanks to Steve for
          reporting this.

Wed Jul 21 15:21:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Env_Value_Test.cpp (main): use the single-process
          version if ACE_LACKS_FORK, in addition to if
          ACE_HAS_NONSTATIC_OBJECT_MANAGER.

        * tests/Time_Service_Test.cpp (main): neuter if ACE_LACKS_FORK,
          because the test uses ACE_Process::spawn ().

          Thanks to Riaz Syed <syed@Lynx.COM> for reporting these.

Wed Jul 21 11:48:53 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          use full path to $(CC) in egcs version check, to avoid
          warning if it is not on the user's PATH.

Wed Jul 21 11:44:19 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
          Simplified the definition of the ACE_THR_PRI_*_DEF macros from
          (MIN+(MAX-MIN)/2) to ((MIN+MAX)/2), the new definition is not
          only easier to read, makes less operations (and function calls)
          but it is also safer when the the priorities are "backwards" and
          PRI_MAX < PRI_MIN

Wed Jul 21 11:40:31 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_aix4_cset++.GNU:
        * include/makeinclude/platform_hpux_aCC.GNU: Replaced lines like
          "debug=1" with ifeq (,$(debug)) debug=1 endif.

        * include/makeinclude/platform_aix4_g++.GNU:
          Above change for variables, also added -Wl,-bbigtoc when linking
          TAO_IDL, else it runs out of toc space. Don't do it for all links
          because bigtoc introduces a run-time performance penalty.

Wed Jul 21 10:25:07 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp} (tss_base,tss_open): with TSS emulation,
          no longer return indication of whether tss_base allocated
          the ts_storage array.  Instead, added an (optional)
          argument that tss_open can use for that purpose.  This
          allows threads that haven't been spawned by ACE to use
          ACE's TSS emulation.  Thanks to David Hauck
          <davidh@realtimeint.com> for reporting this and testing
          the fix on NT.  And, thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for originally reporting it.

Wed Jul 21 09:34:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Shared_Malloc/test_position_independent_malloc.cpp (main):
          removed declarations of unused argc and argv.

Wed Jul 21 04:32:20 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Reactor.cpp:
        * ace/Reactor.h:
        * ace/Reactor.i:
        * ace/Reactor_Impl.h:
        * ace/Select_Reactor_T.cpp:
        * ace/Select_Reactor_T.h:
        * ace/Select_Reactor_T.i:
        * ace/TP_Reactor.cpp:
        * ace/WFMO_Reactor.cpp:
        * ace/WFMO_Reactor.h:
        * ace/WFMO_Reactor.i: The change was motivated by removing a race
          condition in TP_Reactor during shutdown.  There was a small time
          gap between a thread running TP_Reactor event loop checking its
          end_event_loop flag to the thread actually grabing the token in
          TP_Reactor.  Since the token return to its "normal" state after
          broadcasting, this thread has no chance to notice that the
          reactor has already been shutdowned and thus a deadlock occured.
          In order to fix the problem, we must keep a state indicating
          whether the reactor has been shutdowned or not in the reactor.

          An added benefit of adding this state is that every reactor now
          has its own run_reactor_event_loop which mimic the behavior of
          the static ACE_Reactor::run_event_loop but instead of working on
          the singleton reactor, the added function work on an instance of
          reactor object.  In fact, all event_loop control functions have
          been added.  They are named *_reactor_event_loop to
          differentiate their behavior.   These newly added function use
          the added state in the reactor to control the looping of event
          handling.  All run_reactor_event_loop methods take an extra
          argument of a function pointer.  The function will be called in
          every iteration if it is set.

          Notice that the singleton event loop control functions are still
          available.  Although these function merely forward the call to
          the singleton reactor's *_reactor_event_loop functions, you can
          still use them to control the "main" event loop.  In fact, it is
          required that you use these functions to run the main event loop
          because it facilitates Service_Configurator's "reconfigure"
          feature.

          All reactors now also have two extra functions namely
          "deactivated" which is used to query whether the reactor will
          handle more incoming event or not, and "deactivate" which is
          used to control this new feature.

          An side effect of the change is that, once a reactor get
          deactivated, calls to handle_events will return -1 immediately.
          You can use the "deactivated" method to check if there's
          actually an error in the handle_events method or it simply
          returned because the reactor has been deactivated.  This is also
          how the various "run_reactor_event_loop" handle the situation.
          Notice that this should not cause any backward compatibility
          problem becuase if a user is using his own end_event_loop flag,
          he will not (and should not) invoke any more handle_events after
          the flag has been set.  Also, if he is using the global
          run_event_loop methods (for controling singleton reactor,) they
          should still behave the same.

          To summarize the change:

          1. The run_event_loop control logic has been "pushed" down into
          each individual reactor.  The methods supporting the logic are
          defined in ACE_Reactor and are:

             run_reactor_event_loop ()
             run_alertable_reactor_event_loop ()
             end_reactor_event_loop ()
             reactor_event_loop_done ()
             reset_reactor_event_loop ()

          2. The origianl run_event_loop methods in ACE_Reactor are still
          working but they now use the run_reactor_event_loop methods in
          the implementation of the reactor.

          3. Reactors now keep a state to indicate handle_events should be
          called or not.  They can be controlled thru:

             deactivated ()
             deactivate ()

          methods.

Tue Jul 20 21:31:50 1999  Jim Rogers  jrogers@viasoft.com

        * ace/config-mvs.h: added ACE_HAS_EXCEPTIONS.

Tue Jul 20 21:23:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.* (next_key,total_keys):  with TSS_EMULATION,
          added guard (using preallocated ACE_TSS_KEY_LOCK)
          to access of next_key_.  Uninlined both of these
          functions because they now have the guards.  Thanks
          to Jake Hamby <jehamby@anobject.com> for reporting this.

Tue Jul 20 21:11:02 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          fixed test of g++ for whether it's egcs.  Thanks to
          Erik Johannes <ejohannes@oresis.com> for reporting this.
          (The symptom was that TAO's IORManipulation.cpp wouldn't
          compile due to an internal compiler error.  Adding
          -fno-exceptions works around that.)

Tue Jul 20 18:30:22 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.h:  All functions in
          ACE_Cached_Connect_Strategy_Ex and ACE_Cached_Connect_Strategy
          that contain specific information about the map used by the
          class should not be virtual.

        * ace/Future_Set.cpp (next_readable): Removed extra code that was
          left behind from a debugging stage.  Thanks to author John
          Tucker <jtucker@infoglide.com> for helping with this.

Tue Jul 20 12:02:47 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Threads/task_five.cpp (main): removed
          ACE_NOTREACHED wrapper around the final return statement.
          It's reachable now.

Tue Jul 20 11:46:09 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Shared_Malloc/test_position_independent_malloc.cpp:
          Completely #ifdef'd this example out until we get it working.
          Thanks to David Levine for reporting this.

Tue Jul 20 11:15:23 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated memory requirements discussions.

Tue Jul 20 09:43:36 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Future_Set.cpp (next_readable):

          Fixed unused variable warnings.

Tue Jul 20 09:33:02 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,i} (sigwait): only use the DIGITAL_UNIX sigwait
          massaging with cxx, not with any other compiler.  Thanks to
          Doug Anderson <dla@home.com> for suggesting this, because
          egcs issued warnings with it.

Tue Jul 20 07:06:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU:
          removed -ptr ptrepository.  Let the compiler use its
          default template repository.

        * include/makeinclude/rules.local.GNU (realclean): added
          cxx_repository, for DU cxx.

Tue Jul 20 07:01:57 1999  Doug Anderson  <doug@clark.net>

        * ace/OS.i (sigwait,thr_sigsetmask): added support for
          Cray UNICOS 9.

Mon Jul 19 22:46:54 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Strategies_T.cpp
          (ACE_Cached_Connect_Strategy::new_connection):: We use a reverse
          lock to let go of the lock for the duration of the actual
          connect.  This will allow other threads to hack on the
          connection cache while this thread creates the new connection.
          Thanks to James Whitledge <jwhitledge@spyglass.com> for
          suggesting this.

        * tests/Cached_Accept_Conn_Test.cpp
        * tests/Cached_Conn_Test.cpp
        * tests/Conn_Test.cpp

          Added reverse lock template instantiations.

        * ace/Synch_T: Since the reverse lock constructor that created the
          regular lock was removed, there was no need for the
          <delete_lock_> variable, and <lock_> could be changed into a
          reference (instead of pointer).

Mon Jul 19 23:04:15 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/lib/Logging_Strategy.cpp (init): The ACE_LOG_MSG->open()
          call at the end of the ACE_Logging_Strategy::init() method
          *must* specify the flags and logger key or an application will
          not connect to the client logger daemon automatically when the
          ACE_Log_Msg::LOGGER flag is set in a svc.conf file.  Thanks to
          Jerry De Master <jdemaste@ipdinc.com> for reporting this.

Mon Jul 19 22:11:13 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: cleaned up instructions for building
          on NT for VxWorks target.  Thanks to Stephane Chatre
          <schatre@oresis.com> for reporting that the instructions
          were out of date.

Mon Jul 19 21:38:16 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/run_tests.vxworks:
          Re-enable the Cached_Conn_Test and Cached_Accept_Conn_Test, it
          works on Linux, NT, Solaris, IRIX and HP-UX so we should be
          pretty close. Thanks to Irfan for fixing the problems with this
          test.

Mon Jul 19 21:26:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,i}: reverted sigwait () changes on Digital
          Unix.  They cause examples/Threads/process_manager.cpp
          to not compile on DU 5.0 with cxx 6.2-021.  See
          Mon Jul 19 21:13:16 1999  Doug Anderson  <doug@clark.net>.

Mon Jul 19 21:13:16 1999  Doug Anderson  <doug@clark.net>

        * ace/ACE.cpp,ace/Basic_Types.h,ace/CDR_Stream.{h,cpp},
          ace/SOCK_Dgram_Bcast.cpp,ace/config-cray.h,
          tests/Basic_Types_Test.cpp,tests/Handle_Set_Test.cpp,
          include/makeinclude/platform_cray.GNU

          I finally managed to get the latest and greatest to work on
          the Cray.  Still no CDR support, but that will be post 5.0.

        * ace/OS.{h,i}: added support for egcs on Digital Unix (4.0d & e).
          Fixe problem with legacy workarounds in OS.* for sigwait() and
          cxx/GNU that don't appear to be necessary on 4.0d/e/f with
          neither cxx nor GNU.

        * include/makeinclude/platform_tru64_g++.GNU: added.  Works
          with ace/config-tru64.h.

Mon Jul 19 19:46:50 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.h: Added ACE_*_cast_*_ptr and ACE_*_cast_*_ref for const,
          static, and reinterpret casts.

        * ace/Strategies_T.cpp (find):
        * ace/Cached_Connect_Strategy_T.cpp (find):

          The comparison should be between ACE_PEER_CONNECTOR_ADDR and not
          REFCOUNTED_HASH_RECYCLABLE_ADDRESS.

        * ace/Svc_Handler: Changed <state> to <recycle_state>.  <state>
          was too generic and in some cases a <state> method was already
          present in classes deriving from Svc_Handler.

          Also, added a <recycle_state> accessor.

          The following files were effected:

          - ace/Cached_Connect_Strategy_T.cpp
          - ace/Cached_Connect_Strategy_T.h
          - ace/Caching_Utility_T.cpp
          - ace/Strategies.h
          - ace/Strategies.i
          - ace/Strategies_T.cpp
          - ace/Strategies_T.h
          - ace/Strategies_T.i
          - tests/Cached_Accept_Conn_Test.cpp
          - tests/Cached_Conn_Test.cpp

Mon Jul 19 20:08:15 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Strategies_T.cpp:
          Fixed lookup of connections in the Cached_Connect_Strategy,
          thanks to Irfan for providing this fix.

Mon Jul 19 12:26:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU,
          ace/config-g++-common.h:
          don't #define ACE_HAS_GNUG_PRE_2_8 with Tornado II's
          g++.  It's egcs, though it's version identifier says
          it's 2.7.  Thanks to Thomas Lockhart
          <Thomas.G.Lockhart@jpl.nasa.gov> for reporting this. [Bug 80]

Mon Jul 19 09:50:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/Future.cpp: Added ACE_TYPENAME to template-qualified types.
        * ace/Future.cpp: Added #include "ace/Containers.h" to be sure the
          types necessary for this class is available at template link
          time.

        * apps/gperf/src/Options.h: If on PharLap ETS, clear out its definition
          of EOS to avoid compile errors. Thanks to David Hauck
          <davidh@realtimeint.com> for this fix.

Mon Jul 19 08:12:30 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_tru64_cxx.GNU: added support
          for DU 4.0E and D.

Mon Jul 19 08:08:25 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-(10 11).x-hpc++.h: In the aC++ section, if __HP_aCC
          is not set, set it. Some parts of TAO rely on it, but it's not set
          until the most recent versions of the compiler. Thanks to Brian
          Wallis <Brian.Wallis@sr.com.au> for helping figure this out.

Mon Jul 19 07:53:59 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/SOCK_Dgram_Mcast.cpp (open): added unnecessary const_cast
          of mcast_addr to ACE_Addr &, so that Sun C++ 4.2 will compile
          without error.  Thanks to Andy for this fix.

Sun Jul 18 21:36:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * OS.cpp (sched_params): wrapped DIGITAL_UNIX preprocessor
          symbol in parenthesis.

Sun Jul 18 14:30:54 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/run_tests.sh: Reenabled the Future_Set_Test.  Hopefully,
          this will work on Solaris and the other platforms now!

        * ace/Future*: Added some fixes for Future_Set that should prevent
          it from hanging indefinitely on certain platforms.  Also,
          removed the Future_Node.h and Future_Node.cpp files since they
          are no longer used.  Thanks to John Tucker
          <jtucker@infoglide.com> for contributing these fixes.

        * ace/SOCK_Dgram_Mcast: Finished implementing the QoS-enabled APIs for
          socket datagram multicast.  This required refactoring quite a
          bit of code and adding some new methods that take the
          ACE_QoS_Params.

        * ace/SOCK_Dgram.cpp: Finished integrating the QoS support
          for SOCK dgrams.

        * ace/SOCK_Dgram.cpp: Factored out common code in the
          ACE_SOCK_Dgram constructors.

        * ace/SOCK_Connector: Finished implementing the QoS-enabled
          connect() methods.  To make this cleaner, I've created a new
          "shared_open()" method that factors out the common code.

        * ace/SOCK_Acceptor: Finished implementing the QoS-enabled open()
          method.  To make this cleaner, I've created a new
          "shared_open()" method that factors out the common code.

Sat Jul 17 13:36:03 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/High_Res_Timer.cpp (get_cpuinfo):

          Removed extra `FILE *cpuinfo' declaration.

Sat Jul 17 12:20:25 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/High_Res_Timer: Added integrated support for Alpha and
          Pentium that will eliminate the 5sec startup delay for Linux/PII
          clients using the ACE high resolution timer.  Thanks to Thomas
          Lockhart <Thomas.G.Lockhart@jpl.nasa.gov> for these fixes.

        * netsvcs/servers/main.cpp (main): Fixed a typo caused by recent
          integration of Jerry De Master's fixes.

Fri Jul 16 19:41:05 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/ACE.cpp (out_of_handles): Added a function to check if a
          process is out of handles (file descriptors).  This is required
          to avoid repeating this code in many places.  Also, note that
          all platform specific quirks can be captured in this function.

        * ace/Cached_Connect_Strategy_T.cpp (cached_connect):
        * tests/Cached_Conn_Test.cpp (out_of_sockets_handler):
        * tests/Cached_Accept_Conn_Test.cpp (out_of_sockets_handler):

          Changed the above to use the new ACE::out_of_handles() function.

        * ace/OS.h (ENFILE): Added ENFILE if missing on platform.  In that
          case, ENFILE will equal to EMFILE.

Fri Jul 16 13:55:34 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * include/makeinclude/{build_dll.bor,build_exe.bor,compiler.bor},
          ace/{Makefile.bor,ace.rc}:
          Updated these files to add version information to the DLLs so
          when you right click them in windows explorer you can see what
          version the file is (e.g., "4.6.45").  Thanks to Christopher
          Kohlhoff <chris@kohlhoff.com> for contributing this.

        * netsvcs/servers/main.cpp (main): Disable debugging messages
          if the -d option isn't given to ACE_Service_Config.  Thanks to
          Jerry De Master <jdemaste@ipdinc.com> for reporting this.

        * ace/config-win32-borland.h: Updated this file to enable some
          necessary macros.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for reporting this.

        * tests/DLL_Test.cpp,
          tests/run_test.bat: Updated these to handle the appropriate
          directory where the Borland tests are built.  Thanks to
          Christopher Kohlhoff <chris@kohlhoff.com> for reporting this.

        * netsvcs/lib/Logging_Strategy.cpp (init): When the application
          program is started, none of the log output is sent to the
          Client_Logging_Service.  Further investigation shows that the
          ACE_Log_Msg::open() method is responsible for connecting to the
          client logger if the ACE_Log_Msg::LOGGER flag is set.  However,
          the connections never attempted because the ACE_Log_Msg::open()
          method is called before the Logging_Strategy flags have been
          parsed.  This problem was fixed by rearranging the point at
          which the ACE_LOG_MSG->open() method was called.  Thanks to
          Jerry De Master <jdemaste@ipdinc.com> for contributing this.

        * netsvcs/lib/Client_Logging_Handler.cpp (send),
          netsvcs/lib/Log_Message_Receiver.cpp (log_output):
          All log message output in ACE is done through one of the
          ACE_Log_Record::print() methods.  Each of the overloaded methods
          has a <flags> argument as the second argument.  However, all
          uses of the ACE_Log_Record::print() method in
          Log_Message_Receiver.cpp and Client_Logging_Handler.cpp pass
          zero for the flags argument.  To fix this, simply pass
          ACE_Log_Msg::instance()->flags() instead of 0.  Thanks to Jerry
          De Master <jdemaste@ipdinc.com> for contributing this.

        * ace/Log_Record.cpp (format_msg): Added code for the new
          ACE_Log_Record::format_msg() method that adds the date/time
          stamp to the ACE_Log_Msg::VERBOSE_LITE output.  Thanks to Jerry
          De Master <jdemaste@ipdinc.com> for contributing this.

        * netsvcs/lib/Logging_Strategy.cpp (init): Make sure the
          ACE_Log_Msg::VERBOSE_LITE flag is OR'd into the clr_flags()
          call.  Thanks to Jerry De Master <jdemaste@ipdinc.com> for
          reporting this.

        * netsvcs/lib/Logging_Strategy.cpp (tokenize): Make sure that
          the ACE_Log_Msg::VERBOSE_LITE flag is correctly parsed.  Thanks
          to Jerry De Master <jdemaste@ipdinc.com> for reporting this.

        * ace/Memory_Pool.h: Added a way to set the segment_size in
          ACE_Shared_Memory_Pool_Options and ACE_Shared_Memory_Pool.
          Thanks to Serge Kolgan <skolgan@cisco.com> for this fix.  [This
          feature was actually added a couple of beta releases ago, but
          somehow the ChangeLog entry got lost.]

Fri Jul 16 16:41:22 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Stats.cpp (print_summary):

          Fixed format specifier that was expecting an integer argument.
          It needed an additional percent specifier.

Fri Jul 16 09:20:42 1999  Arturo Montes <mitosys@colomsat.net.co>

        * ace/OS.i: Patch the dl* family to keep ACE
          compatible in SCO OpenServer 5.0.0, 5.0.2, 5.0.4 with 5.0.5

        * ace/config-sco-5.0.0.h: Bring OpenServer up to date.

        * include/makeinclude/platform_sco5.0.0-fsu-pthread.GNU:
          Use gcc-2.95.

Fri Jul 16 11:50:24 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Log_Msg.cpp (log):
        * tests/Basic_Types_Test.cpp (main): Reverted my previous
          change.  It was not a safe assumption.

Fri Jul 16 02:28:10 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Log_Msg.cpp (log): Changed (*va_arg (argp,PTF))(), which
          extracts a function pointer from va_list and makes a call using
          the pointer pointer to ACE_reinterpret_cast (PTF, va_arg (argp,
          long))().  This assumes the sizeof (long) is exactly equal to
          the size of a function pointer.

        * tests/Basic_Types_Test.cpp (main): Narrow down the check to
          ensure sizeof(long) == sizeof (a function pointer) (which is
          true for all the platforms that ACE runs on.)

Fri Jul 16 00:07:23 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Cached_Accept_Conn_Test.cpp (test_connection_management):
          Changed the test to allow for both one listen endpoint or
          multiple listen endpoints.

Thu Jul 15 22:42:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Message_Queue.h: (ACE_MESSAGE_QUEUE_DEFAULT_TYPE):
        * ace/Future_Set.{h,cpp} (ACE_Future_Set): Typedef'ed the
          ACE_Message_Queue to ACE_MESSAGE_QUEUE_DEFAULT_TYPE and use the
          typedef'ed name in ACE_Future_Set's contstructor to get around a
          bug in vxworks' g++ compiler.

Thu Jul 15 22:14:18 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.cpp
        * ace/Cached_Connect_Strategy_T.h
        * ace/Strategies_T.cpp
        * ace/Strategies_T.h

          Changed find()'s signature to help g++.

        * tests/Cached_Accept_Conn_Test.cpp
        * tests/Conn_Test.cpp

          Added template instantiations.

Thu Jul 15 21:32:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/create_ace_build: removed # -*- perl -*- on first
          line so that t/csh users don't trip over it.  Thanks
          to Irfan for reporting this.

Thu Jul 15 20:23:39 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Cached_Conn_Test.cpp (test_connection_management): Changed
          the test to allow for both one listen endpoint or multiple
          listen endpoints.

        * ace/Cached_Connect_Strategy_T.cpp:
        * ace/Strategies_T.cpp

          - find: Since the comparison of
            REFCOUNTED_HASH_RECYCLABLE_ADDRESS doesn't work very well when
            trying to find an idle connection (because there are many idle
            states), we now use the new backet iterator to find a idle
            connection.

          - check_hint_i: Explicitly checks for idleness; previously it
            was simple checking !closed.

        * ace/Strategies.h (ACE_Recyclable): Changed ACE_Recyclable::State
          to ACE_Recyclable_State.

        * ace/Strategies_T.h (ACE_Refcounted_Hash_Recyclable):

          - Added operator!=(ACE_Refcounted_Hash_Recyclable<T>)
          - Removed operator==(T)
          - Added T &subject()
          - Change operator==(ACE_Refcounted_Hash_Recyclable<T>) to check
            for equality in state and subject.

        * ace/Caching_Utility_T.cpp (minimum): Entries marked
          ACE_RECYCLABLE_PURGABLE_BUT_NOT_IDLE should also be considered
          for purging.

        * ace/Cleanup_Strategies_T.cpp (cleanup): The hash map of the
          connection cache may contain duplicates.  Therefore, we are not
          exactly sure which map entry will be removed when calling
          unbind().  Therefore, we use the other unbind() which gives us
          back the value of the entry that was removed.  This way will
          close the correct handler.

        * ace/Svc_Handler.cpp (state): Added a new method that allows the
          user to explcitly set the state of the Svc_Handler. If the
          Svc_Handler does not have a recycler, this method will have no
          effect.

Thu Jul 15 16:39:06 1999  Ossama Othman  <othman@cs.wustl.edu>

        * Makefile:
        * NEWS:

          The NEWS file is no longer a generated file so it was added to
          the list of controlled files.

Thu Jul 15 16:20:43 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Manager.cpp (init): Check to see the acceptor handle
          is ACE_INVALID_HANDLE before the actual initialization to
          prevent this service from being initialized twice.
          (fini): Must call remove_handler with
          ACE_Event_Handler::DONT_CALL since the service manager won't be
          around when the reactor is being destroyed.  Thanks to Gheorghe
          Aprotosoaie <gaprotosoaie@paragonms.com> for reporting this.

Thu Jul 15 16:26:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (spa): use ACE_NEEDS_HUGE_THREAD_STACKSIZE
          instead of hard-coded value.

        * ace/config-vxworks5.x.h: added default
          ACE_NEEDS_HUGE_THREAD_STACKSIZE of 64000.

Thu Jul 15 16:08:48 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h: Moved ACE_HAS_IP_MULTICAST down
          *after* ACE_HAS_WINSOCK2 is defined.  Thanks to Marina for
          reporting this.

Thu Jul 15 16:11:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Basic_Types.h (ACE_U_LongLong): removed user-defined
          conversion to ptr_arith_t.  Replaced with new macro,
          ACE_LONGLONG_TO_PTR.

Thu Jul 15 15:31:49 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/ACE.cpp (timestamp):
        * ace/High_Res_Timer.cpp (print_ave):
        * ace/Local_Tokens.cpp (open):
        * ace/Log_Msg.cpp (log):
        * ace/Log_Record.cpp (format_msg):
        * ace/Naming_Context.cpp (parse_args):
        * ace/OS.cpp (unique_name):

          Fixed warnings and generated by gcc 2.95; mostly due to format
          specifier mismatches and inefficient conversion operator usage.

Thu Jul 15 14:21:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: reverted to the original
          perl magic that goes at the top of every script.  The
          fix that was supposed to work on HP/UX doesn't.  See
          Thu Jul 08 22:15:50 1999  David L. Levine  <levine@cs.wustl.edu>

Thu Jul 15 12:19:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: added -u option, to allow updating the
          version stamps from any directory.  Also, added suppression
          of cvs checkout warning about empty ("New") directories.

        * Makefile: added -u to make_release invocations.

Thu Jul 15 11:39:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.45 released.

Thu Jul 15 11:26:43 1999  David L. Levine  <levine@cs.wustl.edu>

        * Makefile: made NEWS a dependency of release.

Thu Jul 15 10:05:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: removed reference to
          ACE_OS::scanf ().  No such thing.

Thu Jul 15 10:01:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/OS.h: TRANSMIT_FILE_BUFFERS are not defined on PharLap ETS -
          it's a Microsoft-specific extension to Winsock 1.1.

        * ace/config-win32-common.h: ACE_HAS_IP_MULTICAST is only set for
          Winsock 2.

        Thanks to David Hauck <davidh@realtimeint.com> for these fixes.

Thu Jul 15 09:28:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_tru64_cxx.GNU: changed
          4.0f to 4.0F, because that's what sizer -v returns
          on DU 4.0F.  Thanks to Doug Anderson <dla@home.com>
          for reporting this.

        * ace/config-tru64.h: only #define _LIBC_POLLUTION_H_
          with DU >= 5.0.  Thanks to Doug Anderson <dla@home.com>
          for reporting that it's not necessary on DU 4.0F.

Thu Jul 15 09:15:11 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: Corrected template settings for IBM C/C++
          3.6 compiler. It does not get ACE_HAS_STD_TEMPLATE_SPECIALIZATION.

        * include/makeinclude/platform_aix4_cset++.GNU: Delete the
          testAIXCompilerVersion.cpp file after getting the compiler version.

Thu Jul 15 07:33:30 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-tru64.h,config-osf1.h,config-osf1-4.0.h,
          include/makeinclude/platform_tru64_cxx.GNU,platform_osf1_cxx.GNU,
          ACE-INSTALL.html: moved config-osf1.h to config-tru64.h,
          and platform_osf1_cxx.GNU to platform_tru64_cxx.GNU.
          Thanks to Doug Anderson <dla@home.com> for this suggestion.

Wed Jul 14 22:23:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-cray.h: replaced ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA
          with ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION.  The standard
          "template class" explicit instantiations work with version
          3.2.0.1 of the compiler.  Thanks to Doug Anderson <dla@home.com>
          for reporting this.

        * ace/config-ghs-common.h: use
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION with Green Hills 1.8.9
          and later.  Thanks to Carlos for suggesting that we give it
          whirl.  It worked :-)

Wed Jul 14 22:03:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-osf1-4.0.h: enable pragma message disable declbutnotref
          with Digital Unix 4.0f, as well as 5.0.  Thanks to
          Doug Anderson <dla@home.com> for reporting that
          it's necessary.

        * ACE-INSTALL.html: updated config/platform info for
          Digital UNIX 4.0f (and 5.0).

          [Bug 65]

Wed Jul 14 19:44:21 1999  Steve Huston  <shuston@riverace.com>

        * ace/Thread_Manager.cpp (spawn_i): Defer acquiring the thread
          descriptor's lock until just before attempting to start the thread
          to avoid places where the thread descriptor could be destroyed
          while holding the lock (doing that is an undefined operation in
          pthreads, and has particularly bad results on HP-UX 11). If the
          thread creation does fail, release the lock before returning
          the error indication (taking care to guard errno). Removed an
          unreachable block of code which put the thread descriptor on the
          wrong list anyway.
          Removed the #if 1, #else, #endif around the auto_ptr for
          new_thr_desc - if it's still working this close the ACE 5 release,
          it wins. Besides, the use of the auto_ptr was ingrained in the
          rest of the function, without the #if checks.

Wed Jul 14 19:03:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * etc/purify.solaris2: added another UMR suppression for
          __sigprocmask in the Solaris 2.6 threads library.  Thanks
          to Andy for reporting this.

Wed Jul 14 16:30:48 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.h (class ACE_Hash_Map_Bucket_Iterator):
          Added a new class that allows the iteration over the entries of
          a of a particular bucket in a hash map.

        * tests/Hash_Map_Bucket_Iterator_Test.cpp: A test for the new
          ACE_Hash_Map_Bucket_Iterator class.

Wed Jul 14 16:37:33 1999  Ossama Othman  <othman@cs.wustl.edu>

        * Makefile:

          Added Makefile.am and NEWS to the list of controlled files.  The
          file `NEWS' will get generated when a release is made.

        * TODO:
        * acconfig.h:
        * configure.in:
        * configure:

          Minor ACE Configuration Project related updates and fixes.

Wed Jul 14 13:38:12 1999  Steve Huston  <shuston@riverace.com>

        * tests/Cached_Accept_Conn_Test.cpp: Moved defs of Client_Svc_Handler
          and Server_Svc_Handler classes to new file, Cached_Accept_Conn_Test.h
          to make AIX xlC happy.

        * tests/Cached_Conn_Test.cpp: Moved definition of Svc_Handler class
          new file, Cached_Conn_Test.h to make AIX xlC happy.

        * tests/Cached_Accept_Conn_Test.cpp, Cached_Conn_Test.cpp: Don't
          even try to build these on AIX C Set++ 3.1. It can't hack the
          auto template instantiation - overwrites a template generator
          file and tosses its cookies. ACE is still the best C++ compiler
          test on the planet.

Wed Jul 14 16:24:38 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:
          Added new method to efficiently steal the contents of a CDR
          stream and store them in another.

Wed Jul 14 12:05:13 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU (LN_S): on WIN32
          hosts, use cp -p instead of ln -s, because symbolic
          links aren't supported.

Wed Jul 14 11:22:31 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU,
          ACE_INSTALL.html: with egcs (Tornado II) and without
          exception handling, add -Wno-uninitialized to CCFLAGS.
          The version of egcs that is provided with Tornado II
          produces some spurious warnings about uninitialized
          variables (including "this" :-).  This was a problem
          in older versions of egcs, but has since been fixed.
          To avoid the warning, we always disable the warning
          with VxWorks' egcs.

Wed Jul 14 11:20:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: Add ACE_LACKS_SETSCHED for pre-4.3 AIX.

Wed Jul 14 11:15:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Shared_Malloc/Malloc.cpp: only explicitly
          instantiate ACE_Read_Guard<ACE_SYNCH_MUTEX> and
          ACE_Write_Guard<ACE_SYNCH_MUTEX> ifndef ACE_HAS_THREADS.
          With threads, they're explicitly instantiated in
          ace/Synch.cpp.

Wed Jul 14 10:58:30 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:
          Clarified the relationship between this implementation and the
          original SunSoft version.

Wed Jul 14 10:47:45 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_qnx_neutrino.GNU:
          added ACE_HAS_GNUG_PRE_2_8 := 0, so that exception
          handling will be disabled by default.

Wed Jul 14 10:34:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/FD-unclient.cpp: fixed typo,
          ACE_LACKS_UNIX_DOMAIN_SOCKETS instead of
          ACE_HAS_UNIX_DOMAIN_SOCKETS.

Wed Jul 14 10:22:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Singleton.*: added ACE_Unmanaged_Singleton and
          ACE_Unmanaged_TSS_Singleton template class.  They're
          identical to ACE_Singleton and ACE_TSS_Singleton,
          respectively, except that they don't register for
          cleanup with the ACE_Object_Manager.  Therefore,
          the application is responsible for explicitly destroying
          the instance after it is no longer needed (if it wants to
          avoid memory leaks, at least).  The close () static member
          function must be used to explicitly destroy the Singleton.
          Thanks to Valery Arkhangorodsky <valerya@servicesoft.com>
          for suggesting this and providing the code.

Wed Jul 14 10:01:47 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h (ACE_{,U_}ONE_SECOND_IN*): made the trailing
          L or U upper case, for readability.  Thanks to Chris
          for noticing this.

Wed Jul 14 09:40:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU: when setting
          ACE_HAS_GNUG_PRE_2_8, if not g++:  don't override
          the value to null if it was non-null.  Also, clarified
          use of ACE_HAS_GNUG_PRE_2_8:  1 for g++ < 2.8.0,
          0 for g++ >= 2.8.0, undefined for non-g++.

Wed Jul 14 09:29:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Makefile (realclean): remove log/compilations.log*.

Tue Jul 13 22:25:18 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU:
          Disable the "unitialized" warnings with EGCS+exceptions, it
          gives too many bogus warnings to take care of them.

Tue Jul 13 22:16:17 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/ACEutils.pm:
          Wait for non empty files, sometimes the process creates the
          files but does not have enough time to fill its contents.

Tue Jul 13 21:32:44 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h:
        * ltconfig:
        * ltmain.sh:
        * ace/Makefile.am:
        * tests/Makefile.am:

          ACE Configuration Project updates.  Synchronized with current
          version of ACE in CVS repository.

Tue Jul 13 15:22:51 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          set ACE_HAS_GNUG_PRE_2_8 to 0 with egcs (Tornado II).

Tue Jul 13 15:15:43 1999  Steve Huston  <shuston@riverace.com>

        * ace/ace-dll.icc, ace-lib.icc: Corrected source file set; now builds
          (still with some warnings) on AIX, Visual Age C++ 4.

Tue Jul 13 15:11:28 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/run_all_win32.pl: Fixed program output redirection problem.
          Unfortunately, the fix requires one to have either 'sh' or '4nt'
          to redirect output from another perl script correctly.

Tue Jul 13 15:04:35 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_qnx_neutrino.GNU:
          removed full paths from commands, because they're
          prefixed with i386-nto-.

        * ace/config-qnx-neutrino.h: updated to build with egcs.

Tue Jul 13 15:03:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Pipe.cpp (open): moved declaration of local variable
          "one" inside the ACE_LACKS_TCP_NODELAY #ifndef block.

Tue Jul 13 14:57:56 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/SV_Semaphore_Simple.{h,cpp} (init,open,name_2_key):
          added static cast of ACE_INVALID_SEM_KEY to key_t.  key_t
          is unsigned on QNX Neutrino, but we want to keep
          ACE_INVALID_SEM_KEY as -1.

Tue Jul 13 11:57:53 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32.h: Changed CApplication to CWinApp.  Thanks to
          John Morey <jmorey@tbi.com> for pointing this out.

Tue Jul 13 11:13:52 1999  Steve Huston  <shuston@riverace.com>

        * ACE_INSTALL.html: Added some info for building on AIX with
          Visual Age C++.

        * ace/config-aix-4.3.x.h: New file - these version-specific configs
          are particularly useful with Visual Age C++, which has its own
          funky make system that doesn't use the platform_macros.GNU files,
          and so doesn't pick up the ACE_AIX_MAJOR/MINOR_VERS settings which
          are used in config-aix-4.x.h.

        * ace/config-aix-4.x.h: Corrected template settings for Visual Age C++
          and added ACE_HAS_TYPENAME for VAC++ also.

Tue Jul 13 10:40:31 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.cpp (purge_connections): There is
          no need to set the purge percentage again.

Tue Jul 13 10:39:57 1999  Matthew J Braun  <mjb2@cs.wustl.edu>

        * ace/Containers_T.h,i: Altered private member list_ of
          DLList_Iterator to be a pointer rather than a reference. This
          allows the reset method to work because it was overwriting the
          contents of list_ rather than iterating over a different list

Tue Jul 13 09:14:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/Cached_Connect_Strategy_T.cpp (dtor): Added ACE_TYPENAME
          to 'iter' declaration since its type depends on template parameters.

Tue Jul 13 09:11:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_ghs.GNU:
          moved LIBS setting for Green Hills 1.8.9 from
          x86-only to all targets.  Thanks to Dale Wood
          <dale_wood@Mitel.com> for confirming that this
          is necessary for PowerPC targets.

Tue Jul 13 08:18:56 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-osf1.h,config-osf1-4.0.h,
          include/makeinclude/platform_osf1_cxx.GNU:
          added another significant figure to the version identifer,
          e.g., 0x40F and 0x500. [Bug 65]

Tue Jul 13 06:45:53 1999  Steve Huston  <shuston@riverace.com>

        * examples/Shared_Malloc/test_position_independent_malloc.cpp: Moved
          definition of Dummy_Data to test_position_independent_malloc.h, a
          new file, to satisfy AIX IBM C++ template instantiation.

        * include/makeinclude/platform_aix4_cset++.GNU: Turn on/off warnings
          based on compiler version, not OS version. Thanks to Craig
          Rodrigues <rodrigc@mediaone.net> for sending the code in!

        * THANKS: Added Craig Rodrigues to the hall of fame.

        * ace/config-aix-4.1.x.h, config-aix-4.2.x.h: Added setting for
          ACE_AIX_MAJOR_VERS and ACE_AIX_MINOR_VERS if they weren't set
          already. Eases backwards compatibility for those who don't use
          the ACE build macros (horrors! :-). Thanks to Jeff Donner
          <jdonner@schedsys.com> for this suggestion.

Mon Jul 12 18:24:34 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cached_Accept_Conn_Test.cpp:
          This tests explicit purging from the server's point of view.
          When the acceptor in either its accept_svc_handler () or open ()
          runs out of descriptors, purging of unused svc_handlers from the
          connecton cache is requested.

        * tests/Cached_Conn_Test.cpp:
          Defined ACE_HAS_BROKEN_EXTENDED_TEMPLATES for the
          Caching_Strategy_Adapter. If this condition is true, then only
          Least Recently Used Caching Strategy is available. This was
          necessary for compilers which dont accept long template lists,
          for example GNUC version < 8.0. Total credit for this hack
          to get through the old GNUC compiler goes to Irfan
          <irfan@cs.wustl.edu> of the DOC group.

        * tests/Makefile:
          Added Cached_Accept_Conn_Test.cpp.

        * tests/Makefile:
        * tests/run_tests.sh:
        * tests/run_pharlap_tests.bat:
        * tests/run_tests.bat:
        * tests/run_tests.psosim:
        * tests/run_tests.vxworks:
          Added Cached_Conn_Test, Map_Manager_Test and
          Cache_Map_Manager_Test to the above.

Mon Jul 12 17:31:28 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/run_all_win32.pl: Fixed the missing execution output problem
          and simplified how the script gets invoked.  See comments for
          more details.

        * ace/config-win32.h:
        * ace/Object_Manager.h: Updated some unclear comments regarding
          the use and instantiation of non-static object manager.  Thanks
          to John Morey and David for pointing this out.

        * ace/ace_dll.dsp: Merged additional MFC configuration.  Thanks to
          John Morey <jmorey@tbi.com> for submitting the patch.

Mon Jul 12 15:27:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-osf1.h,config-osf1-4.0.h,
          include/makeinclude/platform_osf1_cxx.GNU,
          ACE-INSTALL.html: added support for DU 4.0f.  It needs the
          same #defines that we use on DU 5.0. [Bug 65]

Mon Jul 12 14:41:14 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-win32.h,Object_Manager.h: cleaned up comments
          about the non-static ACE_Object_Manager.  Thanks to
          John Morey <jmorey@tbi.com> for reporting this.

Mon Jul 12 13:54:34 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Cache_Map_Manager_T.{h,i,cpp}:
          Defined ACE_T1 and ACE_T2 which contain the template parameter
          list and added ACE_HAS_BROKEN_EXTENDED_TEMPLATES macro where
          needed. This takes care of the template list for compilers which
          cant accept a long template list, for example: GCC 2.7.2.
          Also changed the purge() to now call the <caching_utility> for
          purging entries form the cache.

        * ace/Hash_Cache_Map_Manager_T.h:
          Added ACE_HAS_BROKEN_EXTENDED_TEMPLATES to complement the
          Cache_Map_Manager class changes.

        * ace/Cached_Connect_Strategy_T.cpp:
          Changed dtor to take care of the
          ACE_HAS_BROKEN_EXTENDED_TEMPLATES definition.

        * ace/Cached_Connect_Strategy_T.h:
          Removed CONNECTION_CACHE_ITERATOR typedef.

        * ace/Caching_Strategies_T.{h,i,cpp}:
          Changed template parameter list and removed dependency on the
          CONTAINER. Removed clear_cache() method.

        * ace/Caching_Utility_T.{h,i,cpp}:
          Added default cleanup strategies to every kind of
          caching_utiltity. ACE_Recyclable_Hanlder_Caching_Utility no
          longer derives form ACE_Pair_Caching_Utility.

        * ace/Cleanup_Strategies_T.{h,i,cpp}:
          Changed ACE_Svc_Cleanup_Strategy to
          ACE_Recyclable_Handler_Cleanup_Strategy.

        * tests/Cache_Map_Manager_Test.cpp:
        * tests/Map_Manager_Test.cpp:
          Made changes to template instantiations.

        * tests/Cached_Conn_Test.cpp:
          Added out_of_sockets_handler() which will do the purging.
          Added a check for ENOBUFS which arose on NT and ENOENT which
          arose on Linux + Solaris. Defined
          ACE_HAS_BROKEN_EXTENDED_TEMPLATES for GCC versions < GCC 2.8.

Mon Jul 12 12:14:45 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-development-process.html: added this page, as
          a start towards a less chaotic development process.

Mon Jul 12 10:05:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/Event_Handler_T.i: Added ACE_TYPENAME on template-dependent types
          in function signatures. Quiets HP-UX aC++.

        * ace/Based_Pointer_Repository.h:
        * ace/Based_Pointer_T.h: Added #include "ace/OS.h" to pick up def. of
          ACE_Export when instantiating templates with AIX IBM C++.

        * include/makeinclude/platform_hpux_aCC.GNU: Removed definition for
          CPP_LOCATION - use aCC - cpp has too many problems, and a fix for
          the pragma warnings was checked into TAO_IDL.

Mon Jul 12 09:26:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * testsr/Makefile: don't build libDLL_Test.so if not building
          shared libraries.  This simplifies the build on static-libs
          only platforms, and can be used by run_tests.sh, below.
          [Bug 62]

        * tests/run_tests.sh: don't run DLL_Test if libDLL_Test.so
          was not built.

Mon Jul 12 07:48:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: updated guideline under CVS
          section to match the other one about always testing
          on egcs.

Sun Jul 11 23:59:52 1999  nanbor  <nanbor@cs.wustl.edu>

        * ACE version 4.6.44 released.

Sat Jul 10 18:05:41 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-kcc-common.h: Added ACE_NEW_THROWS_EXCEPTIONS.
          Thanks to David for pointing this out.

Sat Jul 10 16:22:00 1999  Chris Gill  <cdgill@tango.cs.wustl.edu>

        * ace/config-win32-common.h: wrapped ACE_HAS_TYPENAME_KEYWORD so it is
          only set for MSVC++ 6.0 or higher.  This is to work around a compiler
          bug in MSVC++ 5.0 when trying to compile certain forms with the
          typename keyword in a template method argument list.

Sat Jul 10 13:16:50 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Malloc: Changed the type of pointer used by ACE_Name_Node
          from void * to char * so that we can integrate this cleanly with
          ACE_Based_Pointer<>, which will fail if we use void since we
          can't return from a "void" function!

        * tests/Thread_Pool_Test.cpp (open): Fixed another somewhat bogus
          warning from EGCS related to initialization of loop variables.

        * tests/New_Fail_Test.cpp (main): Make sure to initialize pointers
          so that EGCS doesn't complain.

        * tests/MT_Reactor_Timer_Test.cpp (main): Fixed a signed/unsigned
          mismatch.

        * tests: Added appropriate header comments for all the *.h files.

        * tests/Cache_Map_Manager_Test.cpp: Capitlized the hash_key
          class to be Hash_Key, which is standard ACE programming style.

        * ace/Service_Config.cpp: Added yet another set of
          changes to open_i() so that the -d option is handled
          appropriately.  Thanks to Jonathan Reis
          <reis@minniemouse.cemax.com> for this fix.

        * ace/SOCK_Acceptor.h: Clarified the parameters for
          ACE_SOCK_Acceptor's constructor and open() methods.  Thanks to
          Ron MacKenzie <ronm@SLAC.Stanford.EDU> for motivating this.

Sat Jul 10 13:56:30 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/MT_Reactor_Timer_Test.cpp (main): Fixed signed/unsigned
          comparison.

Sat Jul 10 08:01:36 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: THANKS instead of README.

Fri Jul  9 20:54:30 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/UNIX_Addr.{h,i} (hash):

          Implemented a hash function for ACE_UNIX_Addr instead of relying
          on the base class no-op hash function.  Thanks to Irfan for
          explaining the best way to do this.

Fri Jul  9 20:39:47 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cached_Conn_Test.cpp: Added an Svc_Handler class which
          helped in verifying the course of the program execution.

        * ace/Caching_Utility_T.cpp (minimum): Cleaned up code by removing
          redundant else if statement.

        * tests/Cache_Map_Manager_Test.cpp: Resolved some template typos
          which surfaced on compiling with VxWorks.

Fri Jul 09 20:14:13 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/MT_Reactor_Timer_Test.cpp (main): Added fixes so that test
          can work with WFMO_Reactor (WFMO_Reactor needs an extra
          handle_events() to get started).

        * tests/Conn_Test.cpp (spawn_processes): Only printing reaping
          message when result is not -1.

        * ace/Strategies_T.i (ACE_Refcounted_Hash_Recyclable<T>::operator==):
          The check should be for "and", not "or".

        * tests/Conn_Test.cpp: Since timed accept is implemented using
          select(), and we use timed accepts with threads, we need a real
          lock when using timed accepts even if the OS has thread-safe
          accept.

          Also changed the default number of clients to 5.  Hopefully,
          this won't overrun the backlog on the listen socket.

        * ace/Svc_Handler.cpp (shutdown): Remove self from Reactor only
          when we have a valid handle.  Otherwise, we lose our current
          errno, since the failed remove_handler will set the errno to
          EINVAL.

Fri Jul  9 14:02:52 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: Re-enabled ACE_LACKS_SETSCHED for AIX 4.3.
          The OS defs are not aligned/matched correctly with what they mean
          in this area, but will need to wait til after ACE 5.0 is done
          before straightening it out.

        * ace/WFMO_Reactor.cpp (ACE_WFMO_Reactor_Handler_Repository::bind_i):
          Set errno to EMFILE if the max number of handles is registered,
          instead of leaving a stale errno for the user to figure out.

        * tests/MT_Reactor_Timer_Test.h (Dispatch_Count_Handler): Changed
          type of timers_fired_ from int to size_t so it matches type of
          ACE_MAX_TIMERS.

Fri Jul  9 14:27:10 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Service_Config.cpp (open_i): Be default, disable debugging
          messages.  Only reenable them if the -d option is given.  Thanks
          to Jerry De Master <jdemaste@ipdinc.com> for reporting this.

        * ace/Based_Pointer_T: Factored out all but the operator-> into
          a new class called ACE_Based_Pointer_Basic so that we can use
          this for "basic types" like char *.  Thanks to Irfan for
          pointing this out.

        * ace/Based_Pointer_Repository.cpp (unbind): Fixed a
          bug in the unbind() loop.  Thanks to David Levine and DEC UNIX
          C++ for noticing this!

        * ace/Reactor.i (schedule_wakeup): Fixed a misplaced assignment
          of Event_Handler->reator ().  Thanks to Carlos for reporting
          this.

Fri Jul 09 13:11:33 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Conn_Test.cpp (spawn_threads): ACE_OS::perror takes a
          wchar_t string on CE.

        * tests/test_config.h (set_output): We should use non-unicode
          version of ACE_OS::getenv to initialize test_dir on "regular"
          UNICODE compilation.  Thanks to Steve for reporting this.

          Added more WinCE/UNICODE fixes.

Fri Jul  9 12:16:00 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Caching_Utility_T.cpp (minimum):
          Modified minimum () of ACE_Recyclable_Handler_Utility class so
          that the minimum value is also an entry which is purgable.

        * tests/Cache_Map_Manager_Test.cpp:
          SunC++4.0 compiler doesnt accept typedefs with templates and
          having ::, for example: HASH_MAP::iterator. One has to typedef
          HASH_MAP::iterator and use it to typedef something else. Fixed
          this problem in the above test.

Fri Jul  9 11:39:40 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Dirent.i: Added a pair of checks to open() and close()
          to avoid double deletes.  Thanks to Tom Arbuckle
          <arbuckle@uran.informatik.uni-bonn.de> for pointing this out.

        * ace/Reactor.i: For schedule_timer() and schedule_wakeup(),
          make sure that the Event_Handler is assigned "this" Reactor
          upon successful completion of the operation.  Thanks to
          Dirk Broer <Dirk.Broer@gsfc.nasa.gov> for suggesting this.

Fri Jul  9 11:10:23 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_hpux_aCC.GNU: Re-suppress warning
          829 on 10.x because there's an offending system header file.

        * tests/test_config.h (ACE_Test_Output::set_output): Change test_dir
          to be const because it's initialized with a string literal.

Fri Jul  9 10:52:45 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Caching_Utility_T.cpp (minimum): Checked the state of the
          Refcounted_Hash_Address with ACE_Recyclable::IDLE_AND_PURGABLE.

Fri Jul 09 10:49:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Message_Queue_Test.cpp (main): changed success
          message from timed dequeue test to not contain "timedout",
          because that trips run_tests.check.

Fri Jul 09 10:25:42 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Shared_Memory_MM.h (ACE_Shared_Memory_MM): Changed the
          filename parameter from a non-const string to a const string.
          Thanks to Ulf Jaehrig <jaehrig@desys.com> for pointing out this
          problem.

Fri Jul 09 03:31:34 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Basic_Types.i: added const to each of the static casts.

Fri Jul 09 01:45:25 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/auto_compile_win32.pl: A lot of projects changed names
          recently and thus the file was not working properly.

Thu Jul  8 23:15:06 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * Merging the "ami_phase3" branch on to the main branch. Change
          was done to the CDR_Stream{h,i} files  to add the method
          <byte_order> to the CDR class. Other than that, no change was
          done to ACE.

Thu Jul 08 22:15:50 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: changed the perl magic that
          goes at the top of every perl script, to pick up perl
          from the users path.  This new version works on HP/UX.
          Thanks to Carlos for divining it.

Thu Jul 08 22:05:31 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-linux-common.h: added #define of
          ACE_DEFAULT_BASE_ADDR to 0x40000000 on __powerpc__
          only.

        * ace/config-linuxppcr5.h: removed.  LinuxPPC can
          now use config-linux-lxpthreads.h.

        * ACE-INSTALL.html:  added LinuxPPC info.

          Thanks to Andreas Tobler <a.tobler@schweiz.ch> for helping
          to factor out the code from config-linuxppcr5.h.

Thu Jul  8 21:57:17 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Malloc_T.h:
        * ace/Malloc_T.cpp:
          Changed the Cached_Allocator class to use a char* as the memory
          source.
          It was allocated as char* and deallocated as a char*, but casted
          to T* to use placement new; this was actually unneeded and
          actually an error: the memory does not become a T* until
          placement new is invoked on it. [BUGID:40]

Thu Jul 08 21:34:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-lynxos.h: on PowerPC, set
          ACE_NEEDS_HUGE_THREAD_STACKSIZE to 32000, instead of
          its apparent default of 15000.  On both x86 and ppc,
          #define ACE_MAP_FIXED to 0 and ACE_DEFAULT_BASE_ADDR to
          0 to try to get the OS to always pick shared memory addresses.

          Thanks to Dan Butler <daniel.g.butler@boeing.com> for
          suggesting the use of ACE_NEEDS_HUGE_THREAD_STACKSIZE here.

        * tests/Recursive_Mutex_Test.cpp (main): removed explicit
          stack size setting, now that we're using
          ACE_NEEDS_HUGE_THREAD_STACKSIZE on LynxOS/PPC.

Thu Jul 08 18:47:23 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.cpp:
          Changed:
          entry->ext_id_.state (ACE_Recyclable::IDLE);
          to
          entry->ext_id_.state (ACE_Recyclable::IDLE_AND_PURGABLE);

        * ace/Caching_Utility_T.{h,cpp}:
          Added ACE_Recyclable_Handler_Caching_Utility which takes care
          that the svc_handler to be purged is in the IDLE_AND_PURGABLE
          state.
          Made method minimum () virtual.

        * ace/Strategies.h:
          Added IDLE_AND_PURGABLE and IDLE_BUT_NOT_PURGABLE states and
          removed IDLE state  from the enum. This change was necessary to
          take care of AMI using the Mux Strategy.

        * ace/Strategies_T.cpp (cache_i):
          Made entry state ACE_Recyclable::IDLE_AND_PURGABLE.

        * ace/Startegies_T.i (operator==):
          Added checks for the ACE_Recyclable::IDLE_AND_PURGABLE and
          ACE_Recyclable::IDLE_BUT_NOT_PURGABLE states.

          Thanks to Irfan <irfan@cs.wustl.edu> of the DOC group for
          helping with this.

Thu Jul 08 18:47:23 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Cache_Map_Manager_Test.cpp: Simplified code and output.

Thu Jul 08 14:56:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Basic_Types.{h,i} (ACE_U_LongLong): added operators
          that take ACE_UINT32 arguments corresponding to each of
          the operators that take ACE_U_LongLong & arguments.  This
          solves some more overload resolution ambiguities.

        * ace/Stats.cpp: changed comparisons of ACE_U_LongLong with
          ints to unsigned ints, to avoid overload resolution ambiguity.

Thu Jul 08 14:29:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (gethrtime): cast ts.tv_nsec explicitly to
          ACE_hrtime_t, instead of ACE_UINT32, to avoid overload
          resolution ambiguity now that we have that ACE_U_LongLong
          implicit conversion to ptr_arith_t.

Thu Jul  8 13:50:14 1999  Steve Huston  <shuston@riverace.com>

        * ace/Reactor_Impl.h (dispatch_notifications): Changed ACE_Handle_Set
          arg from const to non-const. Fix in ACE_Select_Reactor_Notify
          requires the ability to change the handle set.

        * ace/WFMO_Reactor.{h cpp}: Corresponding removal of 'const' from
          ACE_WFMO_Reactor_Notify::dispatch_notifications. Signature change
          only - the function is a no-op in this class.

        * ace/Select_Reactor_Base.{h cpp}: In ACE_Select_Reactor_Notify,
          dispatch_notifications(), remove the notify pipe's handle from the
          dispatch handle set when handling a notification. Else it remained
          set and dispatchng I/O handlers came back and ran through it
          again, which artificially increased the count of dispatched
          handlers, and left some input unhandled when it was ready.

        * tests/MT_Reactor_Timer_Test.cpp: Added some verification checks to
          be sure that timer, notify, and input events all are handled at the
          right time.

Thu Jul 08 12:35:23 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/test_config.h: Reorganized WinCE's macros and fix some
          minor unicode problems.

Thu Jul  8 11:33:50 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * Rebuilt the ACE+TAO.tar.gz file.  For some reason, there
          was a ^M at the end of each line!  Thanks to Bruce Edge
          <bedge@sattel.com> for reporting this.

        * ace/Based_Pointer_Repository.cpp (unbind): Rearranged the
          iterator code a bit to see if that'll make DEC C++ happy.

        * ace/OS.h: Moved the ACE_MALLOC_ALIGN macro into OS.h.

        * config-aix-4.x.h,
          config-lynxos.h,
          config-psos-diab-mips.h,
          config-psos-diab-ppc.h,
          config-psos-diab.h,
          config-psos-tm.h,
          config-psosim-g++.h,
          config-sunos5.5.h:
          Added the ACE_MALLOC_ALIGN macro back since it's used in
          an ACE test program.

        * ace/Malloc.cpp: Removed the trailing ';' on the #pragma
          instantiate.  Thanks to David Levine for reporting this.

Thu Jul 08 11:35:53 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added note about IP multicast support
          with Tornado II/VxWorks 5.4.  It's not enabled by default
          in ACE.

Thu Jul  8 11:31:13 1999  Steve Huston  <shuston@riverace.com>

        * tests/Message_Queue_Test.cpp: Added a test to see the correct errno
          is set for a timed-out dequeue operation.

Thu Jul 08 11:30:43 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added note about the uninitialized
          variable warnings from (the old) egcs that is
          distributed with Wind River's Tornado II.

Thu Jul 08 10:40:02 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-linuxppcr5.h: use config-linux-lxpthreads.h
          because thread support works.

        * ace/config-linuxppcr5.h, config-linux-common.h:  use an
          ACE_DEFAULT_BASE_ADDR of 0x40000000, because that allows
          Naming_Test to work.

          With these two changes, all ACE tests pass on LinuxPPC.
          Thanks to Andreas Tobler <a.tobler@schweiz.ch> for the
          fixes and testing.

Thu Jul 08 10:25:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h,Basic_Types.h: added ACE_U_LongLong conversion operator
          to ptr_arith_t.  Moved ptr_arith_t typedef from OS.h to
          Basic_Types.h, so that it can be used by ACE_U_LongLong.
          Thanks to Chris for helping to figure this out.

Thu Jul  8 08:34:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.cpp (log): Don't special-case the %t handling on AIX
          4.3 - just 4.2 and earlier.

Thu Jul  8 00:23:02 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Malloc_T.cpp: Updated all the methods that check
          cp_ptr_ to return immediately if it's 0.  Thanks to Dieter for
          suggesting this.

        * ace/Malloc.cpp (dump): Added a cast to trigger operator void
          * for freep_ (which may be a smart pointer in some
          configurations).

        * ace/Based_Pointer_Repository: Revised the implementation of
          this class to use the "Cheshire-Cat" technique to hide the
          implementation to avoid circular #include dependencies.

        * ace/Token.h (ACE_Token): Clarified that the timeouts are in
          "absolute" time, not relative time.  Thanks to Everett Anderson
          <eea1@cs.wustl.edu> for reporting this.

        * ace/config-win32-borland.h: Only enable
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION if we're running on
          older versions of Borland.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for reporting this.

Wed Jul 07 22:44:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Recursive_Mutex_Test.cpp (main): added comment
          explaining why the stack size is now set.

        * tests/test_config.h: removed special ACE_MAX_PROCESSES
          and ACE_MAX_THREADS values for LynxOS, because most
          tests don't need them.

        * tests/Process_Mutex_Test.cpp: use only 4 processes
          instead of ACE_MAX_PROCESSES, on LynxOS only.  Otherwise,
          the test's ACE_LOG_MSG->op_status assertion fails.

        * ACE-INSTALL.html: removed statements about some tests
          failing on LynxOS/PPC.  Just Naming_Test and
          MM_Shared_Memory_Test fail now.

Wed Jul 07 19:51:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/config-ghs-common.h: removed use of native auto_ptrs, as they
          implement an older specification which lacks the reset method.

Wed Jul  7 17:17:10 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/ARGV.cpp (ACE_ARGV):
        * ace/OS.cpp (ACE_OS_Recursive_Thread_Mutex_Guard):
        * ace/Sched_Params.i (ACE_Sched_Priority_Iterator):

          Added some class members to the member initializer lists to fix
          some "Effective C++" warnings from EGCS.

Wed Jul  7 16:33:29 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cached_Conn_Test.cpp (main): Added default testing of LRU,
          LFU, FIFO caching strategies.

        * tests/Cached_Conn_Test.cpp (parse_args):
        * tests/Cache_Map_Manager_Test (parse_args):
          Runtime selection of different caching strategies
          (lru/lfu/fifo/null) made possible.

        * Caching_Strategies_T.{i,cpp}:
          Removed typos and also definied the virtual destructor for
          ACE_Caching_Strategy.

        * tests/Map_Manager_Test.cpp (test_cache_map_manager):
          Added <null_caching_strategy> to the construction of
          <cache_map_manager> and <hash_cache_map_manager> objects to make
          it in sync with the changes made below.

Wed Jul 07 16:06:45 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Recursive_Mutex_Test.cpp: explicitly set the
          stack size.  This solves the problem on LynxOS/PPC, below, so
          the 65-iteration workaround was removed.  Thanks to Doug for
          this suggestion.

Wed Jul  7 13:27:53 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-win32-borland.h,
          ace/config-win32.h: Added support for the ACE::major_versions(), etc.
          for PC versions of ACE, as well as UNIX.  Thanks to
          Jeff Hellzen <jhellzen@my-deja.com> for suggesting this.

        * ace: Added a new Based_Pointer_T.i file that inlines the
          small methods.

        * ace/Malloc[_T]: Cleaned up the code so that we can use the
          ACE_Based_Pointer<> consistently when
          ACE_HAS_POSITION_INDEPENDENT_MALLOC is enabled and disable.

        * ace/Malloc.h: By default, ACE_MALLOC_PADDING is set to 1 so that
          we don't get "divide by zero" errors.  However, it's only used
          in the computation of the ACE_Malloc_Header if it's > 1.

        * config-aix-4.x.h,
          config-lynxos.h,
          config-psos-diab-mips.h,
          config-psos-diab-ppc.h,
          config-psos-diab.h,
          config-psos-tm.h,
          config-psosim-g++.h,
          config-sunos5.5.h:
          Removed the ACE_MALLOC_ALIGN macro since it should no longer
          be necessary.

        * ace/Malloc.h: Changed the use of macro ACE_MALLOC_ALIGN to
          ACE_MALLOC_PADDING, which is more descriptive.

        * Fixed a typo in the TAO-mail.html program where ace-*
          should have been tao-*.  Thanks to Pedro Alves Ferreira
          <pedro.ferreira@inescn.pt> for reporting this.

        * Fixed all vestiages of "BUG-REPORT-FORM" to say
          "PROBLEM-REPORT-FORM."  Thanks to Neil B. Cohen <nbc@cisco.com>
          for reporting this.

Wed Jul 07 12:27:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-lynxos.h: added ACE_LACKS_FORK for PowerPC
          only.  This cleans up most of the remaining test problems
          on LynxOS/PPC.

Wed Jul 07 11:26:06 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc_T.cpp: Added ASYS_TEXT macros.

Wed Jul  7 09:05:32 1999  Steve Huston  <shuston@riverace.com>

        * ace/Caching_Strategies_T.i (ACE_Caching_Strategy_Adapter<>::purge_
          percent): Don't return a value from a void function.

Wed Jul 07 08:35:24 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/Threads/future1.cpp
        * examples/Threads/future2.cpp
        * tests/Future_Set_Test.cpp
        * tests/Future_Test.cpp

          Fixed some template instantiations.

Wed Jul  7 03:27:16 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Shared_Malloc: Added a new file called
          test_position_independent_malloc.cpp that exercises the new
          "position-independent" features of the ACE_Malloc< class.

        * ace/Malloc_T.cpp: All the ACE_Malloc constructors were calling
          open() without checking the results.  Now, if failure occurs we
          print a message.  In addition, we weren't checking in
          shared_malloc() to make sure that we'd been properly initialized
          by the constructor.  Now, if we aren't initialized correctly we
          return 0.  Thanks to Dietrich Quehl
          <Dietrich.Quehl@med.siemens.de> for reporting these problems.

        * ace/Memory_Pool: Added a new feature to ACE_Shared_Memory_Pool
          and ACE_Shared_Memory_Pool_Options that makes it possible to
          tailor the size of System V shared memory segments without
          breaking any existing ACE code.  Thanks to Serge Kolgan
          <skolgan@cisco.com> for contributing this enhancement.

        * ace/Makefile.bor (OBJFILES): Updated this file to include
          the new Based_Pointer_Repository.obj entry.

        * ace/Makefile: Reran make depend.

        * ace/Makefile: Added the Based_Pointer_Repository.{h,cpp} and
          Based_Pointer_T.{h,cpp} files to the Makefile.

        * ace/Malloc.h: Added the first support for the new "Based Pointer
          Malloc" feature that's described below.

         * ace: Added the Based_Pointer_Repository.{h,cpp} and
          Based_Pointer_T.{h,cpp} files to the release.  These classes
          make it possible to transparently use "pointers" in shared
          memory without having to ensure that the base addresses of all
          the pointers are mapped into separate processes at the same
          absolute memory base address.  Thanks to Dietrich Quehl
          <Dietrich.Quehl@med.siemens.de> for contributing this software.

Wed Jul 07 01:28:40 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp: Added the Based_Pointer_Repository.{h,cpp} and
          Based_Pointer_T.{h,cpp} files to the project files.

        * ace/Based_Pointer_Repository.cpp: Added define ACE_BUILD_DLL.

Tue Jul 06 22:47:04 1999  David L. Levine  <levine@cs.wustl.edu>

         * bin/check_build_logs: filter out Purify warning about
           non-pic R_SPARC_*.

         * ace/config-linuxppcr5.h: commented out #define __USE_XOPEN
           because it's not necessary with glibc 2.1.1.  Thanks to
           Andreas Tobler <toa@pop.agri.ch> for reporting this.

         * ace/OS.i (thr_kill, thr_setprio, sema_destroy, sema_wait, chdir,
           unlink, sema_post, thr_continue, thr_getprio, thr_suspend,
           ioctl): on VxWorks only, removed ACE_ADAPT_RETVAL wrapper from
           system call, because it returns OK/ERROR (except for ioctl,
           which returns driver number/ERROR).  Thanks to Elias Sreih
           <sealstd1@nortelnetworks.com> for reporting this.

         * tests/SOCK_Send_Recv_Test.cpp (server): added 5 second
           sleep so that the code agrees with the comments :-) It now
           passes on LynxOS.  Thanks to Steve Huston for the fix.  Also,
           changed an exit () call to ACE_OS::exit (), and changed a few
           C-style casts to ANSI-style casts.

Tue Jul  6 19:20:16 1999  Steve Huston  <shuston@riverace.com>

         * ace/Cache_Map_Manager_T.h: Removed extra "ace/" from #pragma
           implementation directive.

         * tests/Cache_Map_Manager_Test.cpp: Changed typedefs for KEY and
          VALUE from size_t to ACE_UINT32 to they always pick up the
          specializations for ACE_Hash, etc. On HP-UX and AIX, size_t is
          not the same as ACE_UINT32, and this caused build errors.

         * tests/Conn_Test.cpp: Restrict range of the test on PharLap ETS,
          else it runs out of resources with default configuration.

Tue Jul  6 18:21:37 1999  Everett Anderson  <eea1@cs.wustl.edu>

         * ace/Token_Request_Reply.{h,i,cpp}: Added
          ACE_TOKEN_REQUEST_HEADER_SIZE for the fixed-length portion of
          ACE_Token_Request's Transfer struct, changing length
          calculations accordingly.  Added two bytes to the buffer to
          accomodate '\0' values after the token name and client ID.

         * ace/Remote_Tokens.cpp: Changed the check for failure when
           receiving a reply in request_reply.

Tue Jul  6 18:21:36 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

         * ace/Map_Manager.cpp: Made this file conform to the ACE programming
           guidelines.

Tue Jul  6 18:31:34 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

         * include/makeinclude/platform_irix6.x_sgic++.GNU:
           Removed pesky warnings about functions to big to optimize
           because it would be slow.

Tue Jul  6 18:15:31 1999  Steve Huston  <shuston@riverace.com>

         * ACE_INSTALL.html: Added a further note re PharLap ETS builds.

         * ace/config-pharlap.h: Added ACE_TIMER_SKEW of 10ms.

         * tests/Atomic_Op_Test.dsp:
         * tests/Barrier_Test.dsp:
         * tests/Cache_Map_Manager_Test.dsp:
         * tests/Future_Set_Test.dsp:
           Changed PharLap ETS configurations to put intermediate files in
           ETS_LIB\Debug (like all the others), not in ETS_DLL\Debug.

         * tests/test_config.h: Set ACE_MAX_CLIENTS to 4 for PharLap ETS.

         * tests/run_pharlap_tests.bat: Disabled some tests of unsupported
           facilities.

         * tests/SOCK_Test.cpp: Replaced "localhost" with ACE_LOCALHOST.

Tue Jul  6 17:54:52 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu

        * ace/Caching_Strategies_T.{h,i,cpp}: Added Abstract Base class
          called ACE_Caching_Strategy and ACE_Caching_Strategy_Adaptor
          which facilitate changing of caching strategies at runtime using
          the External Polymorphism pattern.

        * ace/Cached_Connect_Strategy_T.{h, cpp}: Changed the signature of
          the constructor and also removed the <caching_strategy_> member.

        * ace/Cache_Map_Manager_T.{h, cpp}:
        * ace/Hash_Cache_Map_Manager_T.{h,cpp}:
          Changed the signature of the constructor.This was needed to be
          able to use the External Polymorphism pattern.

        * tests/Cache_Map_Manager_Test.cpp:
        * tests/Cached_Conn_Test.cpp:
          Made necessary changes to reflect the changes above.
          Thanks to Irfan of the DOC group for helping with this.

Tue Jul  6 17:34:52 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: Enabled ACE_HAS_PTHREADS_UNIX98_EXT and
          removed ACE_LACKS_RWLOCK_T for AIX 4.3. Moved some other
          ACE_LACKS settings to the pre-4.3 threads section to allow
          taking advantage of more capability on AIX 4.3.

Tue Jul 06 16:29:32 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Moved the string conversion macros before including
          OS.i because we also use them in the file.  Thanks to Carlos for
          reporting this.

        * OS.{h,i,cpp}:
        * Parse_Node.cpp: Windows CE fixes.

Tue Jul 06 15:56:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/ACE.h,Object_Manager.{h,cpp},OS.{h,cpp}
          (ACE_Object_Manager*::init () and fini ()): return 1 instead
          of -1 after the first call, per program invocation.  Thanks
          to Jody Hagins <jody@atdesk.com> for this suggestion.

Tue Jul  6 15:04:49 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS.i (sigwait): Fixed a problem with macro-itis and GCC.  The
          following macro

          # if (__FreeBSD__ < 3) || defined (CHORUS) || defined (ACE_PSOS)

          was always evaluating to true, even when we're not on FreeBSD!.
          The following macro works around this:

          # if (defined (__FreeBSD__) && (__FreeBSD__ < 3)) ||
            defined (CHORUS) || defined (ACE_PSOS)

          Thanks to Elias Sreih <sealstd1@nortelnetworks.com> for
          reporting this and Carlos for suggesting the workaround.

Tue Jul  6 11:39:59 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Updated the comment for ACE_ADAPT_RETVAL to
          clarify why it is needed.  Thanks to Elias Sreih
          <sealstd1@nortelnetworks.com> for motivating this clarification.

Tue Jul  6 10:42:02 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/test_config.h (ACE_INIT_LOG): Fixed a typo in VxWorks'
          definition of ACE_INIT_LOG.  Thanks to David for reporting
          this.

Tue Jul  6 10:17:19 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * include/makeinclude/ace_flags.bor: Removed an extraneous
          "\orbsvcs".  Thanks to Eugene Surovegin (surovegin@softlab.ru)
          for reporting this.

Tue Jul 06 10:17:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/check_build_logs: use mhmail instead of mailx on Suns.
          mailx loses the subject, when run from my cron job.  Thanks
          to Naga for reporting this.

Mon Jul  5 20:45:21 1999  Steve Huston  <shuston@riverace.com>

        * ace/OS.(h i): Added code for support of pthread suspend/resume and
          pthreads reader-writer locks. These features are enabled by setting
          the ACE_HAS_PTHREADS_UNIX98_EXT and removing ACE_LACKS_RWLOCK_T.

        * ace/config-hpux11.h: Added ACE_HAS_PTHREADS_UNIX98_EXT and removed
          ACE_LACKS_RWLOCK_T - this enables native reader/writer locks as well
          as thread suspend and reusme.

        * ace/README: Added ACE_HAS_PTHREADS_UNIX98_EXT.

        * apps/JAWS/server/HTTP_Config.(h cpp):
        * apps/JAWS/server/HTTP_Response.( h cpp): const-corrected char *.

Mon Jul  5 16:39:50 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ACE-INSTALL.html: Updated the discussion to point out
          our support for KAI C++ 3.3, Borland C++ Builder 4.0, and the
          IBM VisualAge C++ compiler.

        * ace/Future.h: Moved the static methods until the bottom
          of the ACE_Future_Rep class to workaround a bug with Borland's
          C++ Builder.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for testing this fix.

        * ace/Timer_Heap_T.cpp (grow_heap): Removed an extra memory
          allocation that snuck in whilst integrating the IBM VisualAge
          C++ compiler patches.  Thanks to David Levine for reporting
          this.

        * Added new Borland Makefiles.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for these.

        * include/makeinclude: Added several new platform configuration
          files for Borland C++ Builder.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for these.

Mon Jul  5 13:08:36 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cache_Map_Manager_Test.cpp: Added ACE_UNUSED_ARG macros
          for <result> to ward off warnings.

Mon Jul 05 13:00:19 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Malloc.i (free): Fixed unused arg warning for <ptr>.

        * examples/Threads/future1.cpp:
        * examples/Threads/future2.cpp:

          Fixed template instantiations.

Mon Jul  5 12:25:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i (strspn):
          This function cannot return -1 to indicate errors, the function
          returns an unsigned integral type.

Mon Jul 05 12:14:56 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i: Wchat_t version of strenvdup should only be available
          on Win32.  Thanks to Bala, Carlos, and David for noticing this.
          (strspn): Ditto to this function.

Mon Jul 05 09:58:07 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: in example config.h for VxWorks on NT,
          use "" style #includes instead of <>.  <> should only be
          used for system headers.

Mon Jul 05 04:11:05 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/version_tests/Future_Set_Test.dsp:
        * tests/version_tests/version_tests.dsw: Added Future_Set_Test
          into version tests workspace.

        * ace/ACE.cpp:
        * ace/ACE.h:
        * ace/DLL.cpp:
        * ace/DLL.h:
        * ace/Env_Value_T.h:
        * ace/Env_Value_T.i:
        * ace/FIFO.cpp:
        * ace/FIFO.h:
        * ace/FIFO.i:
        * ace/FIFO_Recv.cpp:
        * ace/FIFO_Recv.h:
        * ace/FIFO_Recv_Msg.cpp:
        * ace/FIFO_Recv_Msg.h:
        * ace/FIFO_Send.cpp:
        * ace/FIFO_Send.h:
        * ace/FIFO_Send_Msg.cpp:
        * ace/FIFO_Send_Msg.h:
        * ace/FILE_Connector.i:
        * ace/Filecache.cpp:
        * ace/Get_Opt.cpp:
        * ace/INET_Addr.cpp:
        * ace/Local_Name_Space_T.cpp:
        * ace/Log_Record.cpp:
        * ace/Message_Queue_T.cpp:
        * ace/Name_Proxy.cpp:
        * ace/Naming_Context.cpp:
        * ace/Naming_Context.h:
        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:
        * ace/Parse_Node.cpp:
        * ace/Parse_Node.h:
        * ace/Proactor.cpp:
        * ace/Process.cpp:
        * ace/RB_Tree.cpp:
        * ace/Registry_Name_Space.cpp:
        * ace/Remote_Name_Space.cpp:
        * ace/Remote_Name_Space.h:
        * ace/Remote_Tokens.cpp:
        * ace/Remote_Tokens.h:
        * ace/Remote_Tokens.i:
        * ace/SOCK_Dgram_Mcast.cpp:
        * ace/SPIPE_Connector.cpp:
        * ace/SV_Message_Queue.cpp:
        * ace/SV_Semaphore_Simple.cpp:
        * ace/SV_Shared_Memory.cpp:
        * ace/Stats.cpp:
        * ace/Stats.h:
        * ace/Strategies_T.cpp:
        * ace/Strategies_T.i:
        * ace/Svc_Conf.h:
        * ace/Svc_Conf.y:
        * ace/Svc_Conf_y.cpp:
        * ace/Token_Collection.cpp:
        * ace/Token_Collection.h:
        * ace/Token_Collection.i:
        * ace/Token_Invariants.cpp:
        * ace/Token_Invariants.h:
        * ace/UPIPE_Acceptor.cpp:
        * ace/UPIPE_Connector.cpp:
        * ace/UPIPE_Connector.i:
        * ace/WFMO_Reactor.cpp:
        * ace/WIN32_Asynch_IO.cpp:
        * ace/WIN32_Proactor.cpp:
        * ace/config-win32-common.h:
        * tests/CDR_Test.cpp:
        * tests/Cache_Map_Manager_Test.cpp:
        * tests/Collection_Test.cpp:
        * tests/DLL_Test.cpp:
        * tests/DLL_Test.h:
        * tests/DLList_Test.cpp:
        * tests/Dynamic_Priority_Test.cpp:
        * tests/Env_Value_Test.cpp:
        * tests/Handle_Set_Test.cpp:
        * tests/High_Res_Timer_Test.cpp:
        * tests/IOStream_Test.cpp:
        * tests/MT_Reactor_Timer_Test.cpp:
        * tests/Map_Manager_Test.cpp:
        * tests/Map_Test.cpp:
        * tests/Message_Queue_Test.cpp:
        * tests/Naming_Test.cpp:
        * tests/New_Fail_Test.cpp:
        * tests/Pipe_Test.cpp:
        * tests/Priority_Reactor_Test.cpp:
        * tests/Process_Mutex_Test.cpp:
        * tests/Process_Strategy_Test.cpp:
        * tests/Process_Strategy_Test.h:
        * tests/Reactor_Performance_Test.cpp:
        * tests/SOCK_Connector_Test.cpp:
        * tests/SPIPE_Test.cpp:
        * tests/SV_Shared_Memory_Test.cpp:
        * tests/Service_Config_Test.cpp:
        * tests/Thread_Manager_Test.cpp:
        * tests/Time_Service_Test.cpp:
        * tests/Tokens_Test.cpp:
        * tests/UPIPE_SAP_Test.cpp:
        * tests/Upgradable_RW_Test.cpp:
        * tests/test_config.h: Changes to make it possible to write pure
          UNICODE programs on NT.  Now it is possible to compile ACE on NT
          with ACE_HAS_MOSTLY_UNICODE_APIS defined.  Most tests passed
          without trouble.  However, Future_Set_Test is not yet included
          in the version_tests and Dynamic_Priority_Test also
          failed. Thanks to Valery Arkhangorodsky
          <valerya@servicesoft.com> for providing a preliminary patch for
          ACE to motivate the change.

Sun Jul 04 18:57:13 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: when building tao_idl on NT to be
          used for generating code for VxWorks, build without
          ACE_HAS_EXCEPTIONS.  Otherwise, TAO_IDLFLAGS must
          be overridden to be null instead of -Ge 1.  Thanks to
          Carlos for this suggestion.

Sun Jul  4 17:06:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Notify_Performance_Test.cpp,
          tests/Message_Block_Test.cpp,
          tests/Priority_Task_Test.cpp,
          tests/Thread_Pool_Reactor_Test.cpp: Fixed a couple of
          warnings related to initializing char *'s with const char *'s.
          Thanks to SunC++ 5.0 for reporting this.

Sun Jul 04 16:07:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated instructions for building on
          NT host for VxWorks.

Sun Jul 04 15:41:34 1999  David L. Levine  <levine@cs.wustl.edu>

        * many Makefiles: call ace_components via sh, instead of
          directly in the make $(shell) command.  This allows it
          to work on platforms that don't have /bin/sh, such as NT.

Sun Jul  4 12:34:24 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Timer_Hash_T.cpp (cancel): Reversed a comparison from
          <= to > to make the ACE_ASSERT replacement work properly.
          Thanks to David Levine for reporting this.

        * tests/Thread_Pool_Test.cpp (open): We need to define 'int i'
          outside of the for loop to keep EGCS from complaining for some
          reason.

        * ace/Timer_Heap_T.cpp: Reformatted this code to conform to
          the ACE programming guidelines.

        * ace/Timer_Heap_T.cpp (schedule): Replaced an ad hoc check for
          allocator failure with the ACE_ALLOCATOR_RETURN macro.

        * ace/RB_Tree.cpp: Modified Carlo's change so that we add an
          extra set of parens in a special way, rather than using a new
          macro.  This is more consistent with how we deal with this
          problem in other parts of ACE.

        * ace/RB_Tree.cpp (insert_i): Removed an unreachable statement.
          Thanks to David Levine for reporting this.

Sat Jul  3 22:12:07 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Object_Manager.cpp (get_singleton_lock):
          Fixed one of the ACE_Thread_Mutex version of this method. One of
          the braces after an if() statement got "accidentaly" removed;
          binding the "else" part of the statement to the previous if()
          instead.

Sat Jul  3 18:54:18 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/RB_Tree.cpp:
          If the "constructor" parameter in an ACE_NEW_RETURN macro has a
          comma in it (such as Foo(x,y,z)) we need to replace it with a
          macro, so it is seen as a single token by the pre-processor.
          Otherwise it (the pre-processor) gets confused and uses
          the comma as separator. Thanks to David for detecting this one.

Sat Jul  3 15:57:40 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/SOCK_Dgram_Mcast.cpp:
          Fixed error code return, it should be -1 not ACE_INVALID_HANDLE

        * ace/SOCK_Connector.cpp:
          Fixed stray comment characters.

Sat Jul 03 14:04:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: call ace_components via sh, and use single
          instead of double quotes, so that it works with Cygwin
          on NT host.

Sat Jul  3 12:05:46 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_Dgram_Mcast: Modified the subscribe() method to return
          0 or -1 rather than ACE_HANDLE.  Thanks to Vidya Narayanan
          <CVN065@lmpsil02.comm.mot.com> for suggesting this.

        * ace/SOCK_Acceptor,
          ace/SOCK_Connector,
          ace/SOCK: Added the ACE_Protocol_Info *, ACE_SOCK_GROUP, and
          flags parameters to these classes so we can pass down the GQoS
          information.  Thanks to Vidya Narayanan
          <CVN065@lmpsil02.comm.mot.com> for suggesting this.

        * ace/SOCK.h: Added the reuse_addr parameter to open() and the
          ACE_SOCK constructor.

        * tests/Future_Set_Test.cpp (main): We were casting a
          const ASYS_TCHAR * to u_int, yikes!

        * ace/RB_Tree.cpp: Cleaned up the code so it's conformant with the
          ACE programming style, particularly for dynamic memory
          allocation (which wasn't using ACE_NEW).

        * ace/ACE.cpp (get_ip_interfaces): Cleaned up the code so it conforms
          to the ACE programming guidelines.

        * ace/Timer_Hash_T.cpp: Fixed a number mistakes where the return
          value of new wasn't being checked.

        * ace/Timer_Heap_T.cpp,
          ace/Timer_Wheel_T.cpp: Removed the apparently extraneous parens
          used in the ACE_NEW* macros in order to keep EGCS 2.95 happy.
          Thanks to Jody Hagins and Arturo Montes
          <mitosys@colomsat.com.co> for reporting this.  BTW, if this
          causes problems on any compilers please let me know.

        * ace: Reformatted all the ACE_NEW* macros so they conform to
          ACE programming style.

        * ace/Priority_Reactor.cpp: Cleaned up the code to conform to
          the ACE programming style.

        * ace/OS.cpp (tss_base): Cleaned up a loop a bit so it conforms
          to the ACE programming style.

Sat Jul  3 11:09:51 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/WIN32_Asynch_IO.cpp
        * ace/WIN32_Proactor.cpp
          Addressed Doug's @@ Alex comments. It was simply making some
          debug statements conditional upon ACE::debug () flag.

Fri Jul  2 19:50:29 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.h: There was a typo in the ACE_WIN32CALL_RETURN() macro
          for Borland C++.  Thanks to Jody Hagins <jody@atdesk.com> for
          reporting this.

        * ace/config-win32-borland.h: Clarified the fact that this file
          shouldn't be #included directly.  Thanks to Thaddeus Olczyk
          <olczyk@interaccess.com> for motivating this.

Fri Jul 02 22:22:12 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-11.x-hpc++.h: Added
          ACE_HAS_STD_TEMPLATE_METHOD_SPECIALIZATION for aC++.

        * include/makeinclude/platform_hpux_aCC.GNU: Removed the suppression
          of warning 829 (auto convert of string literal to char * deprecated).
          With the exception of some JAWS code, all of ACE has been rid of the
          offenders.

        * websvcs/tests/Makefile: Replace VLDLIBS with correct LDLIBS. Now
          works on AIX.

Fri Jul  2 19:37:16 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Future_Test.cpp:
          The timeout variable was declared in one scope but used in
          another one.  Added another timeout variable to keep it happy.

        * tests/Message_Queue_Test.cpp:
          A pointer was initialize using "0x" i think it was a typo and
          should be "0".

Fri Jul 02 18:28:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux11.h: Added ACE_HAS_BROKEN_T_ERROR.
          Enable threads by default, unless site config explicitly turns it
          off by setting ACE_HAS_THREADS to 0. Thanks to Brian Wallis
          <Brian.Wallis@sr.com.au> for motivating this change.

        * ace/config-hpux-11.x-hpc++.h: Added
          ACE_HAS_STD_TEMPLATE_SPECIALIZATION.

        * include/makeinclude/platform_hpux_aCC.GNU: If on 11.00 and the
          user requests a build w/o threads, set ACE_HAS_THREADS to 0 to
          override the config default (see config-hpux11.h, above).

Fri Jul  2 11:49:12 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cached_Conn_Test.cpp: This is a test which shows how the
          Strategy Connector can automagically as well as explicitly cache
          and purge connection from its connection cache using different
          caching strategies.

        * ace/Cached_Connect_Strategy_T.{h, cpp}: Added a method
          "purge_connections ()" which allows explicit purging of
          connnections from the connection cache.

Fri Jul  2 13:54:14 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Future_Set.cpp,
          ace/Future.cpp: Added ACE_TYPENAME at a couple of places
          to make HP/UX aCC happy.  Thanks to Eric Mitchell
          <emitchell@altaira.com> for reporting this.

        * ace/SOCK_Dgram: Added send() and recv() methods that take
          ACE_OVERLAPPED structures.  Thanks to Vidya Narayanan
          <CVN065@lmpsil02.comm.mot.com> for suggesting this.

        * ace/OS.h: Added an ACE_OVERLAPPED_FLAG that's used to abstract
          away from the WSA_FLAG_OVERLAPPED macro on Win32.  Thanks to
          Vidya Narayanan <CVN065@lmpsil02.comm.mot.com> for suggesting
          this.

        * ace/OS.cpp: Removed unnecessary ';' after ACE_BEGINTHREADEX() and
          ACE_ENDTHREADEX().  Thanks to Kris Johnson
          <kjohnson@gardnersys.com> for reporting this.

        * ace/Service_Config.cpp (open_i): It appears that

          if (ACE::debug ())
            ACE_Log_Msg::disable_debug_messages ();

          should really be

          if (ACE::debug () == 0)
            ACE_Log_Msg::disable_debug_messages ();

          Thanks to Jonathan Reis <reis@minniemouse.cemax.com> for
          reporting this.

        * tests/Future_Test.cpp   (main): Make sure to use absolute time
          rather than relative time for the timeouts.  Thanks to Peter
          Brandstrom <peter.brandstrom@ericsson.com> for reporting this.

Fri Jul 02 13:44:17 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Thread_Pool_Reactor_Test.cpp (worker): Added const fix to
          <msg> and <rendezvous>.

        * tests/Priority_Task_Test.cpp: Added const fix to <usage>.

        * tests/Notify_Performance_Test.cpp (print_results): Added const
          fix to <reactor_type>.

        * tests/Message_Block_Test.cpp: Added const fix to <name_>.

Fri Jul  2 11:49:12 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * Initialized some variables to zero to avoid some silly warnings
          from egcs (with exceptions):

          - ace/Free_List.cpp
          - ace/Malloc.i
          - tests/DLL_Test.cpp
          - tests/Mem_Map_Test.cpp
          - tests/Message_Queue_Test.cpp
          - tests/Reactor_Notify_Test.cpp

Fri Jul  2 11:49:12 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Strategies_T.h (ACE_Cached_Connect_Strategy): Made "virtual"
          methods which were getting overriden in the derived
          Cached_Connect_Strategy_Ex class.

        * ace/Cached_Connect_Strategy_T.{h, cpp}: Added a method
          "purge_connections ()" which allows explicit purging of
          connnections from the connection cache.

        * tests/Cached_Conn_Test.cpp: This is a test which shows how the
          Strategy Connector can automagically as well as explicitly cache
          and purge connection from its connection cache using different
          caching strategies.

Fri Jul  2 11:49:12 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cached_Conn_Test.cpp: This is a test which shows how the
          Strategy Connector can automagically as well as explicitly cache
          and purge connection from its connection cache using different
          caching strategies.

        * ace/Cached_Connect_Strategy_T.{h, cpp}: Added a method
          "purge_connections ()" which allows explicit purging of
          connnections from the connection cache.

Fri Jul 02 11:50:21 1999  Steve Huston  <shuston@riverace.com>

        * ace/ace_lib.dsp: Added Pharlap ETS configurations for Debug and
          Release.

        * ace/config-pharlap.h: Added ACE_LACKS_* definitions to avoid some
          unimplemented memory mapped things. Added a definition for
          ACE_PAGE_SIZE because it's not obvious how to get it at run time.
          Include <embkern.h> because some of the OS functions call ETS
          kernel functions for low-level system info gathering.
          Set ACE_HAS_TSS_EMULATION. The PharLap TSS leaves some to be
          desired, according to TSS_Test.

        * ace/config-win32-common.h: In building for PharLap, don't bring in
          the OS-supplied wsock32.lib - need to use the PharLap one.

        * ace/ACE.cpp: PharLap ETS changes:
          ACE::ldfind: PharLap doesn't have expand environment strings.
          ACE::get_ip_interfaces: Use PharLap kernel functions to find
             interfaces and learn their addresses.
          ACE::terminate_process: Unsupported on PharLap.
          ACE::handle_timed_open: If the open times out, set errno to
             ETIMEDOUT, not ETIME.
          ACE::handle_timed_accept: If the select times out, set errno to
             ETIMEDOUT, not ETIME.
          ACE::sock_error: If not a known error, format a message with the
             error number in it - this is the only chance for a PharLap
             system error to indicate the error number.

        * ace/OS.h: Changed def of ACE_DEFAULT_SERVER_HOST to ACE_LOCALHOST.

        * ace/OS.cpp (ACE_OS::uname): PharLap: Use ETS kernel functions to get
          target processor class. PharLap doesn't do GetSystemInfo.

        * ace/OS.i (ACE_OS::hostname): PharLap: Attempt gethostname if using
          RT version, though this isn't too reliable (requires ethernet and
          BOOTP).
          (ACE_OS::dlerror): PharLap doesn't support FormatMessage,
          so format the error number.
          (ACE_OS::mmap, ACE_OS::mprotect, ACE_OS::msync): PharLap doesn't
          do memory-mapped files.
          (ACE_OS::getpagesize): PharLap - use page size set from config.h.
          Don't know a way to get this info at run time.
          (ACE_OS::hostname (whar_t *, size_t)): PharLap - no wide chars.

        * ace/Log_Msg.cpp (log): PharLap doesn't do FormatMessage, so print
          <unknown error> = %d for %p.

        * ace/Pipe.cpp (open): The protocol level for TCP_NODELAY on PharLap
          is SOL_SOCKET, as opposed to Win32, where it's IPPROTO_TCP.

        * ace/SPIPE_Connector.cpp (connect): PharLap doesn't have the
          SetNamedPipeHandleState function.

        * ace/WFMO_Reactor.cpp: PharLap ETS changes, because PharLap doesn't
          implement async I/O, or WaitForMultipleObjectsEx.
          register_handler_i: (This is a general Winsock 1.1 change) Creating
              an event handle for a socket is not supported.
          ok_to_wait, wait_for_multiple_events: Use WaitForMultipleObjects,
              not WaitForMultipleObjectsEx. Should be fine since the big
              difference is alertable, and that's not supported on ETS anyway.

        * tests/test_config.h: On PharLap, direct all logging to host console.

        * tests/tests_pharlap_msvc.lnk: Cleaned things up; extended stack size
          from 8K to 32K. Change the starting load offset to
          0x100000 - the tests don't all fit in the default range.
          Disabled the target screen driver to make all the test output from
          all threads go to the host, thereby getting saved in the log files.

        * tests/run_pharlap_tests.bat: Fixed names of the executables.

        * tests/Atomic_Op_Test.dsp:
        * tests/Barrier_Test.dsp:
        * tests/Basic_Types_Test.dsp:
        * tests/Buffer_Stream_Test.dsp:
        * tests/CDR_Test_Test.dsp:
        * tests/Collection_Test.dsp:
        * tests/Conn_Test.dsp:
        * tests/DLList_Test.dsp:
        * tests/Dynamic_Priority_Test.dsp:
        * tests/Enum_Interfaces_Test.dsp:
        * tests/Env_Value_Test.dsp:
        * tests/Future_Test.dsp:
        * tests/Handle_Set_Test.dsp:
        * tests/Hash_Map_Manager_Test.dsp:
        * tests/High_Res_Timer_Test.dsp:
        * tests/IOStream_Test.dsp:
        * tests/Map_Manager_Test.dsp:
        * tests/Map_Test.dsp:
        * tests/Mem_Map_Test.dsp:
        * tests/Message_Block_Test.dsp:
        * tests/Message_Queue_Notifications_Test.dsp:
        * tests/Message_Queue_Test.dsp:
        * tests/MM_Shared_Memory_Test.dsp:
        * tests/MT_Reactor_Timer_Test.dsp:
        * tests/MT_SOCK_Test.dsp:
        * tests/Naming_Test.dsp:
        * tests/New_Fail_Test.dsp:
        * tests/Notify_Performance_Test.dsp:
        * tests/OrdMultiSet_Test.dsp:
        * tests/Pipe_Test.dsp:
        * tests/Priority_Buffer_Test.dsp:
        * tests/Priority_Reactor_Test.dsp:
        * tests/Priority_Task_Test.dsp:
        * tests/Process_Mutex_Test.dsp:
        * tests/Process_Strategy_Test.dsp:
        * tests/RB_Tree_Test.dsp:
        * tests/Reactor_Exceptions_Test.dsp:
        * tests/Reactor_Notify_Test.dsp:
        * tests/Reactor_Performance_Test.dsp:
        * tests/Reactor_Timer_Test.dsp:
        * tests/Reactors_Test.dsp:
        * tests/Reader_Writer_Test.dsp:
        * tests/Recursive_Mutex_Test.dsp:
        * tests/Reverse_Lock_Test.dsp:
        * tests/Semaphore_Test.dsp:
        * tests/Service_Config_Test.dsp:
        * tests/Sigset_Ops_Test.dsp:
        * tests/Simple_Message_Block_Test.dsp:
        * tests/SOCK_Connector_Test.dsp:
        * tests/SOCK_Send_Recv_Test.dsp:
        * tests/SOCK_Test.dsp:
        * tests/SPIPE_Test.dsp:
        * tests/SString_Test.dsp:
        * tests/SV_Shared_Memory_Test.dsp:
        * tests/Svc_Handler_Test.dsp:
        * tests/Task_Test.dsp:
        * tests/Thread_Manager_Test.dsp:
        * tests/Thread_Mutex_Test.dsp:
        * tests/Thread_Pool_Reactor_Test.dsp:
        * tests/Thread_Pool_Test.dsp:
        * tests/Time_Service_Test.dsp:
        * tests/Time_Value_Test.dsp:
        * tests/Timeprobe_Test.dsp:
        * tests/Timer_Queue_Test.dsp:
        * tests/Tokens_Test.dsp:
        * tests/TSS_Test.dsp:
        * tests/Upgradeable_RW_Test.dsp:
        * tests/UPIPE_SAP_Test.dsp:
          Fixed settings for PharLap ETS configurations.

        * tests/Conn_Test.cpp (server): If the acceptor fails, do not try to
          close the svc_handler - the failed ACE_Oneshot_Acceptor already
          closed it.

        * tests/SOCK_Send_Recv_Test.cpp: Use ACE_LOCALHOST, not "localhost".

Thu Jul  1 21:49:39 1999  Matthew J Braun  <mjb2@cs.wustl.edu>

        * ace/Containers_T.i,h,cpp
          Added reset () methods to the derived classes of
          ACE_Double_Linked_List_Iterator because the behavior of the base
          class's version was not sufficient (and would cause way fun
          segfaults when used).

        * tests/Map_Manager_Test.cpp
        * tests/DLList_Test.cpp
          ACE_const_cast'ed some string literals to char *'s to appease
          the evil monstrosity that is SC 5.0.

Wed Jun 30 18:11:41 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.i (strncasecmp):

          Corrected ACE_TRACE statement to contain "strncasecmp" instead
          of "strcasecmp."

Thu Jul 01 21:07:22 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.43 released.

Thu Jul 01 10:53:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_ghs.GNU:
          set INCLDIRS, so that wrapper_macros.GNU doesn't insert -I.
          Otherwise, with GHS on NT host, ACE's Signal.h gets #included
          instead of VxWorks' signal.h by target/h/private/sigLibP.h.
          Thanks to Dale Wood <dale_wood@Mitel.com> and
          Dave Steele <Dave_Steele@Mitel.COM> for helping to figure
          this out.

        * include/makeinclude/platform_vxworks5.x_g++.GNU,
          bin/ace_ld: changed -c option to -C [...] --, so
          that its arguments don't need to be quoted.  I
          couldn't figure out a way to quote on NT host.  Thanks
          to Dale Wood <dale_wood@Mitel.com> for enlightening me
          on some of the intricacies of NT.

Thu Jul 01 10:47:41 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/libsize.pl: always use `pwd`, because the PWD environment
          variable doesn't appear to get updated by recursive makes.

Thu Jul 01 08:46:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/check_build_logs: filter out lines from IDL_Cubit
          that contain "0 errors".

Thu Jul 01 00:24:52 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/ACE-guidelines.html: Added a table explaining how to use
          all the different ACE_*_STRING macros.

        * tests/DLList_Test.cpp:
        * tests/Hash_Map_Manager_Test.cpp:
        * tests/Map_Manager_Test.cpp:
        * tests/Message_Block_Test.cpp:
        * tests/Notify_Performance_Test.cpp:
        * tests/Priority_Task_Test.cpp:
        * tests/Thread_Pool_Reactor_Test.cpp:
        * tests/test_config.h: UNICODE fixes.  The usage of ASYS_TCHAR and
          LPCTSTR were mistaken in many places.

Wed Jun 30 16:13:58 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Future_Set_Test.cpp: Added missing template instantiation
          for ACE_Hash_Map_Reverse_Iterator_Ex.  Also, added some fixes
          from John Tucker <jtucker@infoglide.com>.

Wed Jun 30 12:09:22 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ace_bcc.ide:
        * tests/tests_bcc.ide:
        * *.{bpr,bpg}: Removed unused BCB project files.

Tue Jun 29 23:12:58 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i:
          Use ACE_CAST_CONST to keep the silly Sun/CC 4.2 from
          complaining.

Tue Jun 29 22:48:43 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.i (strncasecmp): Changed <n> to <len>.

Tue Jun 29 22:33:55 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i:
          Fixed warnings in green hills and possibly othre EDG-based
          compilers.

        * tests/run_tests.sh:
        * tests/run_tests.vxworks:
          Take Future_Set_Test out, it does not work in too many
          platforms.

Tue Jun 29 21:24:13 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK.cpp (open): Removed an unused variable.  Thanks
          to Carlos for reporting this.

Tue Jun 29 20:53:41 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-irix5.3-g++.h:
          IRIX 5.3 (!) has a DIRENT structure, thanks to Isaac Stoddard
          <i_stoddard@hso.link.com> for providing this fix.

Tue Jun 28 20:19:11 1999  Darrell Brunsch  <brunsch@cs.wustl.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Manually cleaned up these projects and fixed them so they should
          work on NT Alpha again.

Tue Jun 29 18:48:22 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Functor_T.h (class ACE_Pointer_Hash): Added new class for
          hashing pointers on their values.

        * ace/Future_Set: Restored future map to be a
          ACE_Hash_Map_Manager_Ex.

Tue Jun 29 14:45:38 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/run_tests.bat: Removed New_Fail_Test from the
          run_tests.bat (the script for NT).  This tests takes too long to
          run and swaps out the entire machine making is impossible to do
          useful things while the test is running.  Note that the test is
          still there and can be run by hand (i.e., on its own, without
          the run_tests.bat script).

        * ace/Future: Changed the observer collection to be an unbounded
          set and changed the future map to map manager.  These are
          temporary changes to get things compiling again.  Once we figure
          out the correct hashing functions, we can restore the original
          code.

Tue Jun 29 13:38:52 1999  Ossama Othman  <othman@cs.wustl.edu>

        * AUTHORS:

          Added an AUTHORS file to bring ACE closer to recent software
          distribution conventions.

        * Makefile:

          Added Carlos' websvcs directory to the release, in addition to
          the missing top-level ACE Configuration project files and
          directories.

        * config.guess:
        * config.sub:
        * ltconfig:
        * ltmain.sh:
        * missing:
        * mkinstalldirs:

          Updated from latest GNU libtool and GNU automake.

Tue Jun 29 12:07:08 1999  Ossama Othman  <othman@cs.wustl.edu>

        * README:
        * THANKS:

          Moved list of contributors to the file `THANKS' to bring the
          distribution closer to conventional distribution standards.

        * Makefile:

          Added the THANKS file to the list of controlled files so that it
          gets distributed with ACE.

Tue Jun 29 11:27:23 1999  Matthew J Braun  <mjb2@cs.wustl.edu>

        * ace/Containers_T.i: Modified next method in ACE_DLList_Iterator
          to avoid segfaults (a bad thing).

Tue Jun 29 10:54:15 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i:
          Sun/CC was not pleased with a cast from "void* const" to "const
          char*", and rightly so.

Tue Jun 29 09:21:06 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
        * ace/OS.i:
        * ace/SOCK_Dgram.h:
        * ace/SOCK_Dgram.i:
          Fixed the unix version ACE_OS::sendto() call.
          Also fixed the Win32 version and the Win32 version of
          ACE_OS::recvfrom, had to change the signatures to make them safe
          and fit the WinSock2 interfaces.

Tue Jun 29 07:07:30 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/check_build_logs: allow _ with -l and -m options, and
          @ and . with -m option.

Mon Jun 28 21:31:58 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS: Added a constructor to ACE_Flow_Spec to initialize
          its various fields wholesale.  Thanks to Kumar Surender
          <csk037@lmpsil02.comm.mot.com> for this suggestion.

        * ace/SOCK: Added a new constructor and a new open() method
          that pass through the QoS information required by WSASocket().

        * ace/{OS,SOCK_Connector,SOCK_Dgram,SOCK_Dgram_Mcast}: Renamed
          ACE_Connect_QoS_Params to ACE_QoS_Params since (1) it's used in
          ACE_OS::connect() *and* ACE_OS::join_leaf() and (2) it's used
          for Dgrams, which aren't connection oriented.  Thanks to Kumar
          Surender <csk037@lmpsil02.comm.mot.com> for this suggestion.

        * ace/OS: Added set/get methods for time-to-live on the
          ACE_Flow_Spec classes.  This is necessary since RAPI defines
          this.

        * ace/OS: Added a new ACE_OS::recvfrom() method that's a wrapper
          for the WSARecvFrom() on Win32 and (will be) an "emulation" on
          non-Win32 platforms.

        * ace/OS: Added a new ACE_OS::sendto() method that's a wrapper
          for the WSASendTo() on Win32 and an "emulation" on non-Win32
          platforms.

        * ace/OS.h: Updated the QoS documentation to clarify that these
          features are appropriate for IntServ (RSVP) *and* DiffServ.
          Thanks to Kumar Surender <csk037@lmpsil02.comm.mot.com>, Vidya
          Narayanan <CVN065@lmpsil02.comm.mot.com> and Pradeep Avasthi
          <Pradeep.Avasthi@motorola.com> suggesting this.

        * ace/SOCK_Dgram.h: Added send() and recv() methods for
          ACE_SOCK_Dgram that take overlapped I/O parameters.  This is
          needed for the GQoS WinSock API.

Mon Jun 28 21:53:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/libsize.pl: added support for liborbsvcs, and
          for shared libs (with -s option).

        * bin/check_build_logs: fixed command-line argument processing.

Mon Jun 28 17:30:08 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (recvv): We must not passed a null pointer to <flags>
          but a pointer pointing to a real flag.  This fixed the
          SOCK_Send_Recv_Test failing on NT problem.  Thanks to Jody
          Hagins <jody@atdesk.com> for reporting this.

Mon Jun 28 15:10:50 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Strategies_T: Removed ACE_Hash_Addr which was no longer used
          in ACE and is not necessary given the new
          ACE_Hash_Map_Manager_Ex class.

Mon Jun 28 15:00:01 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:
          Added new method to reset the state of a CDR stream without need
          for any memory allocations.

Mon Jun 28 12:48:35 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/check_build_logs: added this script, which checks build
          logs named *.log, of current day.

Mon Jun 28 09:32:59 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/{Future_Set,Future}: Integrated new enhancements to use
          the ACE_Hash_Map_Manager rather than the ACE_DLL_Linked_List to
          speed up notifications for the Future Set.  Thanks to John
          Tucker <jtucker@infoglide.com> for this enhancement.

        * tests: Integrated the Future_Set_Test into this directory and the
          various batch files.  Thanks to John Tucker
          <jtucker@infoglide.com> for this test.

        * ace/Map_Manager.i: Added an ACE_const_cast to the lock_ used
          in the newly const total_size() and current_size() methods.

        * ace/Map_T,
        * ace/Map_Manager,
        * ace/Cache_Map_Manager_T,
        * ace/Active_Map_Manager_T,
        * ace/Hash_Map_Manager_T: The current_size() and total_size() methods
          must be const.

        * ace/OS.i: Fixed a type inconsistency where wchar_t should have been
          char and added a missing ';'.

        * ace/OS.i: Fixed a typo where last_error should have been
          lerror.  Thanks to Chris Gill for reporting this.

        * ace/OS.cpp (ACE_BEGINTHREADEX): Oops, mistyped "_beginthreadex()"
          as "_beingthreadex()".  I must be going through an existential
          phase ;-).  Thanks to Chris Gill for reporting this.

        * ace/OS.i: Fixed a typo where last_error should have been
          lerror.  Thanks to Chris Gill for reporting this.

        * ace/OS.cpp (ACE_BEGINTHREADEX): Oops, mistyped "_beginthreadex()"
          as "_beingthreadex()".  I must be going through an existential
          phase ;-).  Thanks to Chris Gill for reporting this.

Sun Jun 27 18:03:24 1999  Douglas C. Schmidt  <schmidt@danzon.cs.wustl.edu>

        * ACE-INSTALL.html: Updated the discussion for Borland C++
          Building 4.0 and IBM's VisualAge C++ compiler to reference the
          appropriate maintainers.

        * ace/WIN32_Proactor.cpp, ace/WIN32_Asynch_IO.cpp: Added back some
          initializers to keep EGCS happy.

        * ace/config-g++-common.h: Added ACE_LACKS_AUTO_PTR to work around
          an omission within the EGCS standard library.

        * ace/Auto_Ptr.h: If ACE_LACKS_AUTO_PTR is enabled then use our
          version of auto_ptr.  This is necessary to work around problems
          with EGCS.

        * ace/config-g++-common.h: Define ACE_HAS_STANDARD_CPP_LIBRARY so
          that #include <exception> will work properly.  However, this
          required that we also set ACE_USES_OLD_IOSTREAMS, as well.
          Thanks to Carlos for help with this.

        * ace/config-g++-common.h: The EGCS 1.1.1 compiler supports the
          template<> syntax.  If this breaks older EGCS or GCC compilers
          we'll have to handle each of those cases.

        * ace/config-win32-borland.h:
          Added ACE_HAS_STD_TEMPLATE_METHOD_SPECIALIZATION.

        * ace/OS.h: Replaced the const's for ACE_DEFAULT_SHLIB_MODE and
          ACE_SHLIB_INVALID_HANDLE with #defines since it's more portable.

        * ace/OS.i: All the strcasecmp() and strncasecmp() methods were
          broken.  Thanks to David Levine for reporting this.

        * ace/WFMO_Reactor.cpp: Updated the programming style a bit to
          conform to the ACE guidelines.

Sun Jun 27 20:50:02 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        Added support for IBM's VisualAge C++ compiler.

        * ace: Added a new config-visualage.h file that automatically
          includes the proper configurations for IBM's VisualAge C++
          compiler on Win32 and AIX.

        * ace/OS.i: The IBM VisualAge C++ compiler's prototypes for _chdir(),
          _mkdir(), and _tempnam() are broken, so we must add a cast to
          char *.

        * ace/OS.cpp: Added new macros ACE_ENDTHREADEX and
          ACE_BEGINTHREADEX to work around a bugs with _endthreadex() and
          _beginthreadex() on IBM's VisualAge C++ compiler.

        * ace/OS.cpp (ACE_Time_Value::set): Replaced this expression:

          this->tv_.tv_usec = long ((_100ns.QuadPart % (10000 * 1000)) / 10);

          with this expression:

          this->tv_.tv_usec = long ((long (_100ns.QuadPart) % long (10000 * 1000)) / 10);

          to work around a bug with IBM's VisualAge C++ compiler.

        * ace/OS.cpp: Replaced a hard-coded MSVC++'ism for signed long long
          with a use of the ACE_UINT64_LITERAL macro, which works for all
          Win32 C++ compilers.

        * ace/config-win32-visualage.h,
          ace/config-aix-4.x.h: Added a workaround for an IBM VisualAge
          C++ bug with the WIFEXITED and WEXITSTATUS macro.

        * ace/OS.h: Added workarounds for bugs with IBM's VisualAge C++ compiler
          as it pertains to the ACE_DES_FREE_TEMPLATE and
          ACE_DES_FREE_TEMPLATE2 macros.

        * ace/Map_T.h: Added a workaround for a bug with IBM's VisualAge C++
          compiler.  I think this workaround should help with other C++
          compilers, as well.  Also reformated the code to make it
          consistent with the ACE programming guidelines.

        * ace/Hash_Purgable_Map_Manager_T.cpp: Added a workaround for a
          VisualAge C++ bug.

        * ace/config-aix-4.x.h: Added VisualAge C++ compiler support.

        * ace/Timer_Heap_T.cpp: We must hard code numbers like
          1024 for an array size to workaround bugs with the IBM VisualAge
          C++ compiler.

        * ace/Basic_Types.h: Added #defines for ACE_INT64_LITERAL.

        * ace/config-win32-common.h: #include the
          config-win32-visualage.h file.

        * ace: Added the following files for the IBM VisualAge C++ compiler:

          ace-lib.icc - WinNT configuration file to create a static library
          ace-dll.icc - WinNT configuration file to create a dynamic library
          config-win32-visualage.h  - VisualAge C++ defines

        * tests: Added the icc.bat and makeicc.pl files, which build the
          tests for the IBM VisualAge C++ compiler.

        * tests: Added the *.icc project files for the IBM VisualAge C++ compiler.

Sun Jun 27 18:17:43 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CORBA_macros.h:
          On platforms with native C++ exceptions we use ACE_UNUSED_ARG()
          in the throw macros to avoid warnings about the unused
          ACE_TRY_ENV variable.

Sun Jun 27 14:56:16 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/run_tests.bat: Added the patch for running tests compiled
          with Borland C++.  Thanks to Jody Hagins <jody@atdesk.com> for
          the patch.

        * tests/Cache_Map_Manager_Test.dsp: The project file was
          mis-configured.

        * tests/version_tests/version_tests.dsw:
        * tests/version_tests/Cache_Map_Manager_Test.dsp: Added this new
          project file.

Sun Jun 27 12:36:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.{h, i}: Moved non-deprecated iterator base class
          method next (RB_Tree_Node<...>) down into derived forward and
          reverse iterator classes due to method resolution conflict
          with deprecated next (void) method in forward iterator class.
          When the deprecated next method is removed, these will be
          moved out of the derived classes and into the base class.
          Thanks to Matt Braun and Carlos O'Ryan for pointing out
          this problem.

Sat Jun 26 16:22:07 1999  Marina Spivak  <marina@cs.wustl.edu>

        * ace/ace_lib.dsp
        * ace/ace_dll.dsp:
          Updated to include Hash_Map_With_Allocator_T.* files.

Sat Jun 26 16:05:29 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h:
        * configure.in:

          Added support/test for ACE_HAS_MEMCHR macro.

        * ace/Makefile.am:
        * tests/Makefile.am:

          Synchronized with latest version of ACE.

        * m4/features.m4:

          Updated asynchronous IO tests.

Sat Jun 26 14:41:31 1999  Marina Spivak  <marina@cs.wustl.edu>

        * ace/Event_Handler_T.h
          Removed "ACE_Export" - it is not necessary for a template class.

        * ace/Hash_Map_With_Allocator.{h,i,cpp}:
          Added these files to ACE.  These files contain a thin wrapper
          around ACE_Hash_Map_Manager, which is useful when
          ACE_Hash_Map_Manager is used with a shared memory (or memory
          mapped file) allocator (e.g., ACE Naming Service, and TAO Naming
          Service are example use cases).  Please see header file for more
          details.

Sat Jun 26 12:45:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Cache_Map_Manager_Test.cpp: Fixed this test so that it
          compiles with SunC++ 4.2 and its broken C++ templates...  Thanks
          to David Levine for reporting this.

        * ace/Malloc_T.i: Make sure to put ACE_INLINE on all the methods
          in the .i files.  Thank to Marina for reporting this.

        * ace/Hash_Map_Manager_T.h: Fixed the programming style a bit.

        * ace/Arg_Shifter.cpp (ACE_Arg_Shifter): Reformatted this
          stuff a bit.

Sat Jun 26 12:45:26 1999  Jody Hagins <jody@atdesk.com>

        This is a change log for the modifications made to support
        Borland C++Builder 4.0, Patch 1.  Thanks to
        Christopher Kohlhoff <chris@kohlhoff.com> and Chris Uzdavinis
        <chris@uzdavinis.com> for helping with this.

        First, I did not get integrate the makefiles to the BCB environment
        as it requires alot of tools and more time.  I hope to fet to this
        in the somewhat near future.  However, each directory that has stuff
        that I built and tested has a Makefile.bor, which will make whatever
        is there with BCB4.  Note that the makefiles do not, at present,
        have a clean or anything except the default make.

        To build, make sure config.h points to, or simply includes
        ace/config-win32.h.

        Finally, not all the programs and exampales have BCB makefiles.
        However, it should not be too difficult to adapt the ones that are
        there.  In addition, the .bpr files should NOT be used to build
        the libraries, or any examples.  If you want to build examples,
        you will need to start with a fresh project in BCB.

        At present (4.6.42) all tests, except SOCK_Send_Recv_Test run
        successfully, and some of my own tests run.  Also, the TAO services
        and programs seem to be operating as well.

        * ace/Asynch_Acceptor.cpp: Need CancelIO for BCB as well

        * ace/Atomic_Op.i: Need ACE_TEMPLATE_SPECIALIZE on specializations.

        * ace/CDR_Stream.h: Need LongLong for BCB as well

        * ace/Functor.i: Need ACE_TEMPLATE_SPECIALIZE on specializations.

        * ace/Future.h: Work around a BCB4 bug which causes the create()
          method from being seen.

        * ace/IOStream.h: Only want CString stuff for MSC.

        * ace/IOStream_T.cpp: Only want CString stuff for MSC.

        * ace/OS.cpp: _fdopen, in BCB, takes a non-const pointer

        * ace/OS.h: Differentiate between mode masks and user mode masks.

          BCB doesn't like initialized data in precompiled header files so
          define certain constants instead.  A bug in BCB prevents calling
          a destructor explicitly on a typedef declared inside a class.
          So, TEMPLATE3 and TEMPLATE4 versions of ACE_DES_FREE are
          necessary for destruction of templates with more parameters.

          BCB4 has a bug in the RTL that resets the GetLastError() value
          to zero when errno is accessed.  Thus, setting errno to
          ::GetLastError requires a copy.  To keep from having the code
          everywhere, I added ACE_OS::set_errno_to_last_error () and
          ACE_OS::set_errno_to_wsa_last_error (), and used it everywhere
          errno was being set to GetLastError() or WSAGetLastError().

          BCB4 has a bug in the optimizer that screws up the return from
          certain expressions when a variable is set on both sides of an
          assignment.  Thus, the definition of ACE_WIN32CALL_RETURN needed
          to change.

        * ace/OS.i: Use ACE_set_errno_to_last_error where appropriate.
          BCB4 bug requires splitting FILETIME dummy_1, dummy_2; into
          separate declarations.

        * ace/Select_Reactor.h: Need ACE_TEMPLATE_SPECIALIZE on
          specializations.

        * ace/WFMO_Reactor.cpp: Use ACE_set_errno_to_last_error where
          appropriate.  Likewise, fix the use of auto_ptr copy ctor, which
          can not take a const ref.

        * ace/WIN32_Asynch_IO.cpp: Use ACE_set_errno_to_last_error
          where appropriate.  Need CancelIo for BCB as well.

        * ace/WIN32_Proactor.cpp: Use ACE_set_errno_to_last_error
          where appropriate.

        * ace/config-win32-borland.h: Specific build stuff for BCB

        * ace/config-win32-common.h: Differences between BCB and MSC

        * apps/JAWS/PROTOTYPE/JAWS/Cache_Hash_T.cpp: BCB4 bug prevents
          using typedef inside class for explicit dextructor.

        * apps/JAWS/PROTOTYPE/JAWS/Cache_List_T.cpp:
          BCB4 bug prevents using typedef inside class for explicit
          dextructor.

        * apps/JAWS/PROTOTYPE/JAWS/Cache_Manager_T.cpp: BCB4 bug prevents
          using typedef inside class for explicit dextructor.

        * apps/JAWS/PROTOTYPE/JAWS/IO.cpp: Get rid of const warning

        * tests/DLL_Test.cpp: The get_hello function has calling
          convention __cdecl (by default since the calling convention is
          not mentioned).  However, BCB decorates __cdecl with a leading
          underscore (and doesn't decorate __stdcall). Thus, we needed to
          add some decoration to find the function.  Also, added prefix to
          find the executable.

        * tests/Message_Queue_Test.cpp: BCB4 defines a "messages" and by
          default sucks that namespace into the global namespace, so a new
          variable name was needed.

        * tests/Reactor_Exceptions_Test.cpp: The test throws a structured
          exception.  The ISO does not require non C++ exceptions to be
          caught by catch (...).  MSVC catches it but BCB4 does not.  So,
          the code needed to be changed to catch a structured exception as
          well.

        * tests/run_tests.bat: Changed to allow running the BCB tests,
          when in another directory.

Sat Jun 26 08:40:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Proactor.cpp: fixed template instantiation pragmas
          (to match explicit template instantiation directives).

Sat Jun 26 08:21:52 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Signal.h: reordered #includes to avoid warning about
          #pragma once.

Fri Jun 25 22:30:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: always test on egcs before
          commiting.  It catches real problems that are missed
          by some of the other compilers we (well, some of us :-)
          use.

Fri Jun 25 22:20:16 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Future.cpp (detach): changed equality comparison of
          curr_observer from itself to the observer argument.
          Thanks to egcs -W for snagging this.

Fri Jun 25 21:46:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h,ace/Signal.h,ace/config-psos-tm.h
          (ACE_DONT_INCLUDE_ACE_SIGNAL_H): added this interlock
          diagnostic to inform the user when ace/Signal.h gets #included
          instead of signal.h.  Thanks to Dale Wood <Dale_Wood@Mitel.com>
          and Timothy Canham <Timothy.Canham@jpl.nasa.gov> for tripping
          over it, on the same day, and reporting it.

Fri Jun 25 17:22:02 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Select_Reactor_T.cpp (close): Don't call close() on the
          <notify_handler_> if there isn't one.

        * ace/SOCK_Acceptor.cpp (open): The error status was not set
          correctly if listen() failed.

        Thanks to Irfan for helping with this.

Fri Jun 25 16:48:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: don't #include <signal.h> directly on VxWorks.
          When cross-compiling on NT host, the GreenHills compiler
          #includes ace's Signal.h instead of VxWorks' signal.h.
          No comment.  OS.h doesn't need to #include signal.h directly,
          because it gets indirectly #included through sigLib.h.  Thanks
          to Dale Wood <Dale_Wood@Mitel.com> for reporting this.

Fri Jun 25 16:03:59 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Future.cpp: Fixed a couple of places where the set() method
          didn't have the new *this parameter added.

        * ace: Added Future_Set.{h,cpp} and Future_Node.{h,cpp}, as well
          as the new Future.{h,cpp} files to the ACE release.  Thanks to
          John Tucker <jtucker@infoglide.com> for contributing these.

        * ace/Synch.h: Added a comment pointing out that Solaris
          threads do not support timed acquire().  Thanks to Darren
          DeRidder <darren.deridder@bridgewatersys.com> for reporting
          this.

Fri Jun 25 15:07:00 1999  John Tucker <jtucker@infoglide.com>

        The following describes the changes to ACE_Future_Set:

        * I followed the Observer Pattern where the ACE_Future_Set is the
          "Observer" and the ACE_Future_Rep is the "Subject".

        * I created an abstract base class called ACE_Future_Observer<T>
          which contains a single pure virtual member function "update()".

        * The ACE_Future_Rep is modified so that it contains a list of
          ACE_Future_Observer<T> pointers and an interface for attaching
          and detaching ACE_Future_Observer<T> Observer objects.  The
          "attach(...)" member function allows objects which implement the
          ACE_Future_Observer<T> interface to attach themselves to
          ACE_Future_Rep<T> objects so that they will be notified of
          changes to the ACE_Future_Rep<T> Subject.  The "detach(...)"
          member function allows objects which implement the
          ACE_Future_Observer<T> interface to detach themselves from
          ACE_Future_Rep<T> objects so that they will no longer be
          notified of changes to the ACE_Future_Rep<T> Subject.

        * The ACE_Future_Rep::set() method is modified so that it invokes the
          "update()" method of each ACE_Future_Observer<T> object stored
          in its list of attached ACE_Future_Observer<T> Observer
          objects. It also removes each ACE_Future_Observer<T> Observer
          object from its list.

        * The ACE_Future_Set<T> class derives from the ACE_Future_Observer<T>
          class.

        * The ACE_Future_Set<T> class contains its own ACE_Message_Queue
          attribute which will be used by writer threads to notify reader
          threads that an ACE_Future is readable.

        * The ACE_Future_Set<T> class contains a list of ACE_Future<T>
          Subject objects which clients in the reader threads insert into
          it.  When an ACE_Future<T> is inserted into an
          ACE_Future_Set<T>, the ACE_Future_Set<T> attaches itself to the
          specified ACE_Future<T>, keeping in mind the ACE_Future_Set<T>
          implements the ACE_Future_Observer<T> interface, and also
          inserts the specified ACE_Future<T> object into its list of
          ACE_Future<T> objects.

        * The ACE_Future_Set<T> class implements its "update()" method to
          just enqueue an ACE_Message_Block with Null data onto its
          ACE_Message_Queue.  Since this "ACE_Future_Set<T>::update()"
          method will be invoked by the ACE_Future_Rep::set() method in
          the writer thread, it will allow the ACE_Future_Set<T> in the
          writer thread to signal itself that an ACE_Future has become
          readable.

        * The "int ACE_Future_Set<T>::next_readable(ACE_Future<T> &future,
          ACE_Time_Value *)" method in the reader thread will block via a
          call to "dequeue()" on its ACE_Message_Queue until is awakened
          by a call to "ACE_Future_Set<T>::update()" in the writer thread.
          Once awakened, the ACE_Future_Set<T> object iterates through its
          list of ACE_Future<T> objects until it encounters a readable
          one.  This readable ACE_Future<T> will be removed from its list
          and assigned to the specified "future" parameter".

        * The ACE_Future_Set<T> destructor detaches itself from all
          ACE_Future<T> objects remaining in its list.

        * I did not use the ACE_Reactor since I could foresee the
          ACE_Future_Set being used by applications which did not run,or
          want to run, the event loop.

Fri Jun 25 14:28:05 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/UNIX_Addr.cpp (ACE_UNIX_Addr): Moved base_set() call in
          constructor to member initializer list.  This is cleaner coding
          style.  The original code, before a bug fix was made, was like
          that.  I just forgot to put it back in the member initializer
          list after the fix.

Fri Jun 25 15:15:32 1999  Steve Huston  <shuston@riverace.com>

        * performance-tests/Misc/Makefile: set static_libs_only so the library
          selection gets done right on AIX. Clean out the tempinc dir
          between binaries on AIX.

        * performance-tests/Misc/test_singleton.cpp: Moved def of DC_Singleton
          to new file, test_singleton.h so it works on AIX w/ xlC.

        * ace/Hash_Cache_Map_Manager_T.h: Removed the "ace/" from the
          #pragma implementation line. The compiler remembers the directory
          it came from.

        * examples/ASX/UPIPE_Event_Server/Peer_Router.h:
        * examples/Connection/non_blocking/CPP-connector.h:
        * examples/Connection/non_blocking/CPP-acceptor.h:
          Added #pragma implementation, for AIX IBM C++.

        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inserver-fancy.cpp:
          Split the Options class to a new file, CPP-inclient.h, to make
          IBM C++ (xlC) like it.

        * examples/IOStream/server/iostream_server.cpp: Split the Handler
          class off to new iostream_server.h file, to make IBM C++ (xlC)
          like it.

        * examples/Logger/Acceptor-server/server_loggerd.cpp: Moved the
          Options and handler classes' definitions to new server_loggerd.h
          file to build with AIX IBM C++.

        * examples/Misc/testr_dump.cpp: Moved the program's classes'
          definitions to new server_loggerd.h file to build with AIX IBM
          C++.

        * examples/IPC_SAP/SOCK_SAP/Makefile:
        * examples/Connection/non_blocking/Makefile:
        * examples/Misc/Makefile:
          On AIX w/ IBM C++, delete the tempinc directory before compiling
          each new program. Keeps the template instantiations from one
          program from conflicting with the others.

        * include/makeinclude/rules.lib.GNU: On AIX using IBM C++ only, don't
          try to link in the auto-instantiated template object modules if
          there aren't any.

        * include/platform_aix4_cset++.GNU: Removed TMPL_OBJS - not needed now.
        * examples/Misc/Makefile: On AIX w/ IBM C++, delete the tempinc
          directory before compiling each new program. Keeps the template
          instantiations from one program from conflicting with the
          others.

Fri Jun 25 12:40:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added/expanded/moved discussions of
          enabling/increasing virtual memory on Linux and LynxOS.  Thanks
          to Fabrice Podlyski <podlyski@clrhp04.in2p3.fr> for providing
          detailed information for LynxOS.

Fri Jun 25 11:16:32 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Makefile: Updated dependencies for Cache_Map_Manager_Test
          and Map_Manager_Test.

Fri Jun 25 07:41:05 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added guideline to include
          directories containing files with template definitions in a -I.

Thu Jun 24 22:42:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/SOCK_Dgram_Mcast.cpp (subscribe): fixed UNICOS
          preprocessor usage so that it's not in the middle of the
          ACE_reintepret_cast.

Thu Jun 24 22:18:52 1999  Doug Anderson  <dla@home.com>

        * ace/CDR_Stream.*,ace/SOCK_Dgram_Mcast.cpp,ace/config-cray.h:
          updates for Cray UNICOS port.

Thu Jun 24 21:33:11 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Caching_Strategies_T.{h, cpp} (class ACE_FIFO_Caching_Strategy):
        * ace/Caching_Strategies_T.{h, cpp} (class ACE_LRU_Caching_Strategy):
        * ace/Caching_Strategies_T.{h, cpp} (class ACE_LFU_Caching_Strategy):
          Removed the overloaded clear_cache () method with entries as an
          formal argument.

        * ace/Caching_Strategy_Utility_T.{h,i,cpp}: Renamed as
          Caching_Utiltity.{h, i, cpp}. Also, removed <entries> formal
          argument from the clear_cache() method, and made purge_percent
          of type double instead of unsigned int.

        * tests/Cache_Map_Manager_Test.cpp: Changed the purge_test and
          added a test for the Cache_Map_Manager using the Map_Manager.

        * tests/Map_Manager_Test.cpp: Changed the template instantiation
          in vein with the changes to the names of the Caching_Utility
          classes.

        * tests/Cache_Map_Manager_test.dsp:
        * tests/tests.dsw:
          Made NT project for the test and added it to the tests workspace.

Thu Jun 24 20:43:54 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/Reactor/WFMO_Reactor/test_multithreading.cpp
          (Task_Handler): Change loop to go from 1 to number_of_handles
          instead of 0 to number_of_handles - 1.

Thu Jun 24 18:36:22 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Signal.h: Removed the still-born
          ACE_Sig_Action (struct sigaction *) method.  Thanks to Umar
          Syyid for reporting this.

Thu Jun 24 15:47:32 1999  Steve Huston  <shuston@riverace.com>

        * tests/run_pharlap_tests.bat: One-button script for running the tests
          built for PharLap ETS.

        * tests/tests_pharlap_msvc.lnk: PharLap ETS LinkLoc input file for
          building test for ETS. Very possible that local sites will need to
          adjust this for the target environment.

        * tests/Atomic_Op_Test.dsp:
        * tests/Barrier_Test.dsp:
        * tests/Basic_Types_Test.dsp:
        * tests/Buffer_Stream_Test.dsp:
        * tests/CDR_Test_Test.dsp:
        * tests/Collection_Test.dsp:
        * tests/Conn_Test.dsp:
        * tests/DLList_Test.dsp:
        * tests/Dynamic_Priority_Test.dsp:
        * tests/Enum_Interfaces_Test.dsp:
        * tests/Env_Value_Test.dsp:
        * tests/Future_Test.dsp:
        * tests/Handle_Set_Test.dsp:
        * tests/Hash_Map_Manager_Test.dsp:
        * tests/High_Res_Timer_Test.dsp:
        * tests/IOStream_Test.dsp:
        * tests/Map_Manager_Test.dsp:
        * tests/Map_Test.dsp:
        * tests/Mem_Map_Test.dsp:
        * tests/Message_Block_Test.dsp:
        * tests/Message_Queue_Notifications_Test.dsp:
        * tests/Message_Queue_Test.dsp:
        * tests/MM_Shared_Memory_Test.dsp:
        * tests/MT_Reactor_Timer_Test.dsp:
        * tests/MT_SOCK_Test.dsp:
        * tests/Naming_Test.dsp:
        * tests/New_Fail_Test.dsp:
        * tests/Notify_Performance_Test.dsp:
        * tests/OrdMultiSet_Test.dsp:
        * tests/Pipe_Test.dsp:
        * tests/Priority_Buffer_Test.dsp:
        * tests/Priority_Reactor_Test.dsp:
        * tests/Priority_Task_Test.dsp:
        * tests/Process_Mutex_Test.dsp:
        * tests/Process_Strategy_Test.dsp:
        * tests/RB_Tree_Test.dsp:
        * tests/Reactor_Exceptions_Test.dsp:
        * tests/Reactor_Notify_Test.dsp:
        * tests/Reactor_Performance_Test.dsp:
        * tests/Reactor_Timer_Test.dsp:
        * tests/Reactors_Test.dsp:
        * tests/Reader_Writer_Test.dsp:
        * tests/Recursive_Mutex_Test.dsp:
        * tests/Reverse_Lock_Test.dsp:
        * tests/Semaphore_Test.dsp:
        * tests/Service_Config_Test.dsp:
        * tests/Sigset_Ops_Test.dsp:
        * tests/Simple_Message_Block_Test.dsp:
        * tests/SOCK_Connector_Test.dsp:
        * tests/SOCK_Send_Recv_Test.dsp:
        * tests/SOCK_Test.dsp:
        * tests/SPIPE_Test.dsp:
        * tests/SString_Test.dsp:
        * tests/SV_Shared_Memory_Test.dsp:
        * tests/Svc_Handler_Test.dsp:
        * tests/Task_Test.dsp:
        * tests/Thread_Manager_Test.dsp:
        * tests/Thread_Mutex_Test.dsp:
        * tests/Thread_Pool_Reactor_Test.dsp:
        * tests/Thread_Pool_Test.dsp:
        * tests/Time_Service_Test.dsp:
        * tests/Time_Value_Test.dsp:
        * tests/Timeprobe_Test.dsp:
        * tests/Timer_Queue_Test.dsp:
        * tests/Tokens_Test.dsp:
        * tests/TSS_Test.dsp:
        * tests/Upgradeable_RW_Test.dsp:
        * tests/UPIPE_SAP_Test.dsp:
          Added "PharLap ETS Debug" configurations.

        * ACE-INSTALL.html: Added some info about the PharLap TNT ETS port.

Thu Jun 24 14:10:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/libsize.pl: use appropriate size command for all of
          our cross-compile platforms.

Thu Jun 24 14:00:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.7.h: with ghs only, undef ACE_HAS_PROC_FS
          and ACE_HAS_PRUSAGE_T because the Sun's sys/procfs_isa
          requires 64-bit ints.

Thu Jun 24 13:53:53 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Proactor.cpp: added missing backslash to one of
          the instantiation pragmas.

Thu Jun 24 12:53:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/OS.(h i): Added check for ACE_HAS_WINSOCK2 != 0 wherever
          the check was only for ifdef ACE_HAS_WINSOCK2. Allows building on
          Winsock 1.1.

        * ace/config-pharlap.h: New config file for use with PharLap TNT
          Embedded ToolSuite. This is not really tested yet - that activity
          continues.

Thu Jun 24 07:05:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-osf1-4.0.h,include/makeinclude/platform_osf1_4.0.GNU,
          include/makeinclude/platform_osf1_cxx.GNU: use pragmas instead of
          command line arguments to disable specific warning messages.
          This cleans up the command line, and makes it easier to control
          warning message suppression (because the compiler version is
          available in __DECCXX_VER to the preprocessor.)

Wed Jun 23 21:27:45 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: removed space from "resource requirements"
          tag to avoid problems with web browers.

Wed Jun 23 20:18:42 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/WFMO_Reactor: Added a no-op work_pending()
          implementation until we figure out how to implement this.

        * ace/Reactor_Impl.h,
        * ace/Reactor.{cpp,h},
        * ace/Select_Reactor_T.{h,cpp}: Added a work_pending() method
          that just checks if there are I/O events "ready" for
          dispatching, but doesn't actually dispatch event handlers.  This
          is needed for TAO's work_pending() API.  Thanks to Irfan for
          suggesting this.

Wed Jun 23 15:27:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/libsize.pl: added this script, which provide a size
          breakdown of either the ACE or TAO libraries.

Wed Jun 23 14:34:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added link to ACE Library Size Breakdown
          in System Resource Requirements discussion.

Wed Jun 23 14:09:27 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Caching_Strategies_T.cpp (ACE_LRU_Caching_Strategy):
          Checked and modified the creation and deletion logic of the
          caching utility object.
        * ace/Cache_Map_Manager_T.cpp (~Cache_Map_Manager):
          Added the close method call to avoid memory leaks.
        * tests/run_test.pl:
        * tests/run_test.bat:
          Added Cache_Map_Manager_Test.
        * tests/Cache_Map_Manager_Test: Removed extra comma.
        * ace/Caching_Strategies_T.{h, i, cpp}
        * ace/Cache_Map_Manager_T.{i,h,cpp}
        * ace/Caching_Strategy_Utility_T.{h,i,cpp}
        * ace/Cleanup_Strategies_T.{h, i,cpp}
        * ace/Hash_Cache_Map_Manager_T.{h, i,cpp}
        * ace/ace_dll.dsp:
          Added above caching related files into the NT ace workspace.

Wed Jun 23 10:09:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated System Resource requirements discussion.
          All of ACE+TAO requires well over 1 Gb of disk now :-/.

Wed Jun 23 00:03:31 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_Dgram.cpp (ACE_SOCK_Dgram): Fixed an unused args
          warning.  Thanks to David for reporting this.

        * ace/Service_Config.h (ACE_Service_Config): Moved the
          documentation for the open() method's "argv" parameters *to* the
          open() method.  Also clarified that by default we don't install
          the "statically configured services" (such as ACE_Svc_Manager).
          Thanks to Ian MacDonald <ianmacd@bg.com> for motivating this.

        * ace/OS.i (accept): Added a new workaround for platforms
          like VxWorks that can't handle NULL addrs to accept().  Thanks
          to James Hu <jhx@entera.com> and John Weald
          <John.Weald@sylantro.com> for this fix.

        * ace/config-vxworks5.x.h: Added a new macro
          ACE_HAS_BROKEN_ACCEPT_ADDR to work around VxWorks problems
          with NULL addrs to accept().

Tue Jun 22 21:17:49 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cache_Map_Manager_Test.cpp: Tests the Cache_Map_Manager
          as well as the Hash_Cache_Map_Manager which has additional
          features of caching and purging of entries along with the map
          properties.
        * tests/Makefile: Added Cache_Map_Manager_Test.cpp

Tue Jun 22 15:20:53 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Thread_Manager_Test.cpp (main): removed THR_DETACHED.
          That seems to solve the libthread panic problem on Solaris,
          even with group signalling enabled.  Thanks to Carlos for
          suggesting this.

Tue Jun 22 15:11:34 1999  Matthew J Braun  <mjb2@cs.wustl.edu>

        * ace/Containers_T.h,i
          Added new next(T *&) methods to the ACE_DLList_Iterator
          classes and marked the old versions as DEPRECATED.

Tue Jun 22 13:40:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/tutorials/*/Makefile: replace rm -f with $(RM).

Tue Jun 22 13:07:19 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Message_Block_Test.cpp:
        * websvcs/lib/URL_Addr.i:
        * websvcs/lib/URL_Addr.cpp:
          Removed more g++ -W warnings

Tue Jun 22 11:12:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added System Resource Requirements
          section.  Thanks to Hakan Kallberg <hk@simulina.se>
          and Eric Mitchell <emitchell@altaira.com> for the
          Linux swap space and -pipe removal suggestions.

Tue Jun 22 07:45:59 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Event_Handler_T.i: fixed some occurrences of
          ACE_INLINE that were after the function return type.

Tue Jun 22 07:30:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Stats.cpp: fixed for ACE_LACKS_LONGLONG_T platforms.
          (sample): replace return statement with an else branch, to
          make it easier to see what the code is doing.

Mon Jun 21 23:36:02 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.cpp:
          Fixed warnings about unused variables.

Mon Jun 21 23:27:01 1999  Darrell Brunsch  <brunsch@cs.wustl.edu>

        * ace/SString.h: Added ACE_TString typdef that is either a
          ACE_CString or ACE_WString, depending on whether UNICODE
          is defined.

Mon Jun 21 23:22:46 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Misc/test_trace.cpp: Improved this test so it will
          work more effectively on single-threaded *and* multi-threaded
          platforms.  Thanks to Hao Ruan <hruan@lucent.com> for reporting
          this.  Also fixed a warnng in this test caused by failure to
          return a value on every return path.  Thanks to David Levine for
          reporting this.

Mon Jun 21 14:17:22 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Stats.h:
        * ace/Stats.cpp:
          Added new class to keep latency and throughput statistics.

Mon Jun 21 13:24:41 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_freebsd.GNU,platform_linux.GNU,
          platform_linux_lxpthread.GNU,platform_psosim_g++.GNU,
          platform_qnx_neutrino.GNU,platform_sunos5_g++.GNU,
          platform_vxworks5.x_g++.GNU: added -W to CFLAGS.  -Wall
          doesn't include the -W checks, at least with egcs 1.1.2.

Mon Jun 21 10:18:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: moved FlReactor, Msg_WFMO_Reactor, TkReactor,
          and XtReactor from OTHER to DEMUX_FILES because TAO uses
          them in some configurations.  They add negligible size
          overhead when not used.  Thanks to Nanbor for pointing this
          out.

Mon Jun 21 10:11:15 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Makefile:
          The TP_Reactor is used by TAO, but was listed in the OTHER
          component. Moved to the DEMUX component to make it always
          available.  Thanks to David Levine for pointing this out.

Mon Jun 21 09:58:42 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/QoS.{h,cpp}: Removed these files from ACE since they have a
          lot of problems. Will add back later when they compile and are
          tested.

Mon Jun 21 08:40:14 1999  Steve Huston  <shuston@riverace.com>

        * examples/Connection/misc/Connection_Handler.cpp (handle_input):
          Corrected signed/unsigned mismatch I accidentally put in last week.

        * ace/CORBA_macros.h: Added __HP_aCC to the compilers that need
          special handling for throwing an exception from a value-returning
          function.

        * include/makeinclude/platform_hpux_aCC.GNU: Added +DAportable
          to CCFLAGS if no architecture specified.  Added -z to LDFLAGS
          to force SEGV on dereference 0 pointer. Added definition for
          CPP_LOCATION to not use aCC - it displays warnings for unrecognized
          #pragmas and this dirties the TAO builds. Thanks to Brian Wallis
          <Brian.Wallis@sr.com.au> for these ideas.

Sat Jun 19 22:28:35 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
          Updated the list of tests run every night.

Sat Jun 19 18:15:48 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
        * ace/CORBA_macros.h:
          The ACE_GUARD macros needed some blanks to work with a template
          as the lock type parameter.

Sat Jun 19 10:34:55 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Acceptor.cpp,
          ace/Connector.cpp: Modified the make_svc_handler() hook method
          in these classes to set the Reactor of the newly created
          SVC_HANDLER to the same reactor that the Acceptor or Connector
          is using.  Thanks to John Aughey <jha@FreeBSD.ORG> for
          this suggestion.

        * man/{html,man3}: Zapped the Ace_Export.* files since
          they don't belong here.  Thanks to Zoran Ivanovic
          <zorani@pathcom.com> for reporting this.

Fri Jun 18 20:49:09 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Synch.cpp: Added template instantiations for
          ACE_Write_Guard<ACE_Thread_Mutex>.

Fri Jun 18 19:30:09 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.42 released.

Fri Jun 18 18:49:39 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Makefile:
        * tests/run_tests.psosim:
        * tests/run_tests.sh:
        * tests/run_tests.vxworks:
          Disabled Map_Manager_Test, it does not work with too many
          platforms and the features it tests are not used (yet).

Fri Jun 18 16:54:43 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Message_Queue_Test.cpp:
        * tests/Message_Block_Test.cpp:
          Removed template instantiations for ACE_Message_Queue_Iterator
          and ACE_Message_Queue_Reverse_Iterator.  They are already
          available in the ace library.

        * ace/Service_Types.cpp: Added explicit instantiations for
          ACE_Message_Queue_Reverse_Iterator.  ACE_Message_Queue and
          ACE_Message_Queue_Iterator were already there.  This addition
          will complete the set.

Fri Jun 18 12:12:59 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_Dgram: Added the first set of hooks to support
          QoS-enabled data grams for Win2K GQoS.

Fri Jun 18 11:37:31 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * *.{mdp,mak}: Removed all MSVC++ 4.x workspaces and makefiles.
          We are no longer supporting this version of MSVC++.  If you need
          support for MSVC++ 4.x please contact Steve Huston
          <shuston@riverace.com> of Riverace to arrange a support
          contract.

Fri Jun 18 12:19:42 1999  Matthew J Braun  <mjb2@cs.wustl.edu>

        * tests/DLList_Test.cpp: Removeed unnecessary explicit template
          instantiation that mirrored ones in ace/Containers.cpp to fix
          compile errors on VxWorks. Why this _ever_ worked, I don't
          know...

Fri Jun 18 11:37:31 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.h (class ACE_Static_Svc_Descriptor): Changed
          the type of <name_> from LPTCSTR to 'const ASYS_TCHAR*'.

Thu Jun 17 12:46:30 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Conn_Test.cpp: Fixed a problem with explicit template
          instantiations so that this test will compile even if ACE isn't
          built with threads.

        * netsvcs/lib/Server_Logging_Handler.cpp: Fixed the explicit
          template instantiations so hopefully they'll work when ACE is
          compiled without threads.  Thanks to Carlos for reporting this.

        * ace/SOCK_Dgram_Mcast.cpp: We needed to modify the return values
          of subscribe_i() so that we'd have the ability to differentiate
          a "short-circuit" return on NT.  Thanks to Marina for reporting
          this.

        * ace/OS.h: Added an automatic test to check if we're running on
          an EBCDIC character set, and if so, set
          ACE_STANDARD_CHARACTER_SET_SIZE to 256 rather than 128.  Thanks
          to Jim Rogers for this suggestion.

        * performance-tests/TTCP/Makefile: Zapped the Orbix and ORBeline
          directories from the Makefile.  These are *way* out of date and
          have been superceeded by the versions in
          $TAO_ROOT/performance-tests/Thruput/.  Thanks to Youzhong Liu
          <yoliu@cise.ufl.edu> for reporting this.

Thu Jun 17 12:59:24 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
          Added accessors for the codeset translators.

Thu Jun 17 00:33:57 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/platform_freebsd.GNU (VERSION): Applied the
          patch to automatically detect FreeBSD version.  Thanks to
          Goldshtain Dmitry <goldshtain@bank.gov.ua> for providing the
          patch.

        * bin/Process_Win32.pm (TimedWait):
          Get and return the exit status from the waited process.

Wed Jun 16 22:03:29 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.h (ACE_OS): Removed ACE_WIDE_DL_TYPE and the wide char
          versions of dlopen(), dlsym(), and dlerror().  Even Win32
          doesn't support them.

          Also changed the argument type of ACE_OS::dlopen(),
          ACE_OS::dlsym(), ACE_DLL::ACE_DLL(), ACE_DLL::open(), and
          ACE_DLL::symbol() from ACE_DL_TYPE to const char *.  Now the
          ACE_OS wrappers do the correct const cast before calling the OS
          function.  Note that since this change is only adding constness
          to the argument, the change is backward compatible.

Wed Jun 16 20:47:27 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/Process_Win32.pm:
          The wait time for a process seems to be in milliseconds.

Wed Jun 16 20:03:41 1999  Steve Huston  <shuston@riverace.com>

        * ace/Containers_T.cpp: Qualify dllist_ with 'this->' to get the
          template types looked up correctly. This is what fixes the pesky
          future error 641 on HP-UX aC++.

        * ace/RB_Tree.i: Qualify node_ and tree_ with 'this->' to get the
          template types looked up correctly. aC++ is really happy now,
          and so is Steve :-)

Wed Jun 16 18:50:38 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i:
          Fixed typos in single threaded code.

Wed Jun 16 18:14:45 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.{h, cpp}: Added ATTRIBUTES to
          the template list for the Cached_Connect_Strategy_Ex class to
          ward off g++ compiler errors.

Wed Jun 16 15:54:08 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

	* ace/OS.h:
	* ace/OS.i:
	* ace/config-win32.h:
	  Auto-detect if we are using MSVC5.0 or MSVC6.0 and define the
	  ACE_HAS_WINSOCK_GQOS macro in that case. This macro is used in
	  the places where the QoS data structure of both compilers are
	  different.

Mon Jun 14 22:52:48 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Map_Manager_Test.cpp: Removed template instantiation
          regarding ACE_Read_Mutex<Thread_Mutex>. Added template
          instantiations for ACE_Pair<VALUE, int> and
          ACE_Reference_Pair<TYPE, VALUE> to make sunc++5.0 happy.

        * ace/Caching_Strategy_Utility_T.{h.cpp}: Removed math.h from the
          include list since it caused problems when native exceptions were
          enabled.

Mon Jun 14 21:41:40 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ace/Connector.h: Added a comment to clarify that if
          Connector::connect() fails the close() hook of the Svc_Handler
          is called to prevent resource leaks.  Thanks to V. Lakshmanan
          <lakshman@doplight.nssl.noaa.gov> for motivating this.

Mon Jun 14 20:54:09 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Synch.cpp: Declared template definitions for
          ACE_Read_Mutex<ACE_Thread_Mutex> to get around compiler errors
          while building $ACE_ROOT/tests. Thanks to Dr.Schmidt for
          suggesting this.

Mon Jun 14 19:33:04 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_Acceptor.cpp (accept): Fixed a bizarre problem with
          Win32 where it's imperative that the third parameter to <accept>
          must be a NULL pointer if we want to ignore the client address.

        * ace/OS.i: Cleaned up warnings in join_leaf() and ioctl() due to
          unused args.  Thanks to Marina for reporting this.

Mon Jun 14 15:56:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-qnx-neutrino.h,
          include/makeinclude/platform_qnx_neutrino.GNU: added config
          files for QNX Neutrino.  They support cross-compiling on a
          QNX4 host for Neutrino target.  Builds are almost (but not
          completely) clean.

        * include/makeinclude/platform_qnx_neutrino.GNU: only
          build static libs, because they seem to work better.  Many
          of the ACE tests pass with this configuration!  (Some of
          the usual suspects, such as Conn_Test, don't.)

        * ace/config-qnx-neutrino.h: don't need ACE_HAS_PENTIUM here,
          because it's in config-g++-common.h.  Removed
          ACE_HAS_USING_KEYWORD, because g++ 2.8.1 doesn't support
          namespaces.

Mon Jun 14 14:33:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Reactor_Performance_Test.cpp (handle_input): removed
          printout when result == 0.  It happens when the client finishes
          first, which I think is OK.

Mon Jun 14 11:55:31 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_aix4_g++.GNU: New platform file for AIX
          4.x using GNU compiler. Been tested w/ egcs 1.1.2.

        * include/makeinclude/platform_aix4_cset++.GNU: Make shared libs
          correctly and without building the static one first.
          Also, for cset++, disable warnings on AIX 4.3 to shut up the
          0-valued preprocessor warnings. This is not a great
          long-term general solution, but it'll do the job.

        * include/makeinclude/wrapper_macros.GNU:
        * include/makeinclude/rules.lib.GNU: On AIX, build shared lib w/o
          requiring static one first. When building shared libs, also link
          against them and install the proper files when done. The correct
          files built for libfoo are:
             libfoo.a: archive/static library
             libfoo.so: shared library, but not set up for run-time linker.
                        This is the one loaded by ACE dynamic loading.
             libfooshr.a: an archive library with libfoo.so as its only
                        member. This is what to link against when building
                        a program/library that uses libfoo.

          Silly?  Uh-huh. But that's life in AIX land. I tried to get things
          building/running clean using the run-time linker (-brtl) but had
          no end of trouble. And, since no other libs in /usr/lib want to
          do it that way either, it's like this.

Mon Jun 14 09:58:02 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Added ACE_UNUSED_ARG() macros for all the non-WINSOCK2
          cases in the ACE_Flow_Spec and ACE_QoS methods.  Thanks to David
          for reporting this.

        * ace/OS.i: Moved the definition of ACE_Errno_Guard's methods to
          earlier in the file to avoid problems with inline ordering.
          Thanks to David for reporting this.

        * ACE-INSTALL.html: Updated Barry Hoggard's CORBA page URL.

Mon Jun 14 07:17:23 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: fixed typo: exceptions.

Sun Jun 13 14:22:54 1999  Douglas C. Schmidt  <schmidt@maxixe.cs.wustl.edu>

        * ace/LSOCK_Acceptor.cpp: Rewrote the accept() method to use the
          same new technique that's used in ACE_SOCK_Acceptor::accept().
          This is necessary since there's no longer a shared_accept().

        * ace/SOCK_Acceptor: Removed shared_accept() since it's been split
          into two parts to make the QoS features easier to maintain.

        * ace/SOCK_Acceptor: Added the new ACE_Accept_QoS_Params parameter
          to the ACE_SOCK_Acceptor::accept().  Also created two new
          private methods, shared_accept_start() and
          shared_accept_finish(), that factor out common code.

        * ace/SOCK_Connector: Added the new ACE_Connect_QoS_Params
          parameter to ACE_SOCK_Connector::connect().  Also created two
          new private methods, shared_connect_start() and
          shared_connect_finish(), that factor out common code.

        * ace/SOCK_Connector.cpp: Cleaned up the logic that checks for
          various types of errors and updated the code to use the new
          ACE_Errno_Guard features.

        * ace/OS.h: Added an equality and in-equality operator for
          ACE_Errno_Guard and moved all the methods into OS.i rather than
          OS.h.  Also added an ACE_Export to the ACE_Errno_Guard class so
          that it can be used outside of the ACE library.

        * ace/OS.h: For Win32, added support for the WinSock2 QoS
          functions WSAAccept(), WSAConnect(), WSAJoinLeaf(), and
          WSAIoctl().

        * ace/OS.h: For Win32, added thin wrappers ACE_Flow_Spec and
          ACE_QoS that encapsulate the WinSock2 FLOWSPEC and QOS structs,
          respectively.

        * ace/OS.h: For Win32, added an implicit conversion operator from
          iovec to WSABUF since they are structurally equivalent.

Sun Jun 13 14:22:54 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * bin/README.html: Updated the information about the ACE
          documentation tools to be more helpful.

Fri Jun 11 20:04:37 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/Process_Unix.pm:
          Fixed problems on TimedWait().

Fri Jun 11 15:28:44 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.h: Need to add #include <signal.h> before <pthread.h>
          since pthread.h doesn't include signal.h on SunOS 5.7.  Thanks
          to Rick Weisner <rick.weisner@east.sun.com> for reporting this.

        * ace/OS: ACE_OS::memchr() should return a const void * rather
          than a void *.  Thanks to Rick Weisner
          <rick.weisner@east.sun.com> for reporting this.

        * ace/Dirent.i: Don't call closedir() on a NULL dirp because some
          platforms (such as SunOS 5.7) will segfault!  Thanks to Tom
          Arbuckle <arbuckle@uran.informatik.uni-bonn.de> for pointing
          this out.

Fri Jun 11 14:47:47 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile: Does not compile all the directories in TAO,
          because it takes too much space (and time).  Run several more
          tests in TAO that are stable.  Improve output.

        * ace/Log_Msg.cpp: Use ACE_HAS_THR_C_DEST for TSS "destructors",
          not ACE_HAS_THR_C_FUNC.

        * bin/ACEutils.pm:
        * bin/Process_Unix.pm:
        * bin/Process_Win32.pm: Added new routines to wait for a process
          with a timeout, ditto for the ACE::waitforfile() routine.  They
          can be used to write more reliable test drivers.

Fri Jun 11 14:40:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/create_ace_build: run the directory mode value through eval,
          to convert it from octal to decimal, if necessary.  Thanks to
          Russ Noseworthy for providing the patch.

        * include/makeinclude/platform_sunos5_sunc++.GNU: only set
          TEMPLATE_REPOSITORY for Sun C++ 4.2.  5.0 doesn't need it.
          Thanks to Dennis C. De Mars <demars@mminternet.com> for
          reporting this.

        * tests/Reactor_Performance_Test.cpp (main): return error status
          from run_event_loop () call.  And, added a few ACE_ERROR
          printouts.  Thanks to Steve for mentioned this.

        * ace/config-sunos5.5.h: properly reverted all the changes of
          today.  The comments are more helpful this way.

        * include/makeinclude/platform_linux_lxpthread.GNU: changed
          PLATFORM_AIO_SUPPORT to use := instead of =, so that it only
          invokes the shell once.  Thanks to Lothar Werzinger
          <lwerzinger@krones.de> for suggesting this.

Fri Jun 11 12:10:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * tests/RB_Tree_Test.{cpp, h (new)}: factored out class template
          declaration into a .h file to make AIX C++ happy.

Thu Jun 10 23:11:36 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Cache_Map_Manager_T.{h, i, cpp}: Added Iterator
          implementations to the template parameters to be able to build
          using the g++ compiler. Also removed unnecessary HASH_KEY and
          COMPARE_KEYS from the template list.

        * ace/Hash_Cache_Map_Manager_T.{h, i, cpp}: Made appropriate
          changes to support changes made to Cache_Map_Manager.

        * ace/Caching_Strategies_T.{h, i, cpp}: Added an overloaded
          clear_cache method which allows the user to specify the total
          number of entries in the cache. Also added the
          Caching_Strategy_Utility parameter which decouples the actual
          purging from the caching strategy.

        * ace/Caching_Strategy_Utility.{h,i,cpp}: Added a Null version of
          the utility to be used with the Null strategy.

        * ace/Cleanup_Strategies_T.{h,i,cpp}: Added the ACE_UNSED_ARGS
          macro to ward of g++ warnings.

        * tests/Map_Manager_Test.cpp: Added performance tests for the
          Cache_Map_Manager and the Hash_Cache_Map_Manager.

Thu Jun 10 20:29:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.h: Made constructors for iterator base class
          protected instead of protected, so the the base class can only
          be constructed by the derived forward and reverse iterator
          classes.  Thanks to Matt Braun for pointing this out.

        * tests/RB_Tree_Test.cpp: Major overhaul of the test to use a test
          class template that encapsulates the test details and makes the
          code much more readable.  Then, the main program merely
          instantiates a test for each of the four possible combinations
          of key/item type parameterization over int and const char *, and
          calls the run_test () method of each test instance.

Thu Jun 10 12:44:22 1999  Steve Huston  <shuston@riverace.com>

        * tests/UPIPE_SAP_Test.cpp: Disable for Win32 if !ACE_HAS_WINNT4.
          The test relies on ACE_SPIPE_Acceptor which requires NT4 to
          work.

Thu Jun 10 12:47:52 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-linux-lxpthreads.h: removed ACE_HAS_AIO_CALLS.  It's
          now enabled in the platform_macros.GNU file:

        * include/makeinclude/platform_linux_lxpthread.GNU: added
          automatic detection of AIO support, based on existence of
          /usr/lib/librt.so.

        * include/makeinclude/platform_linux_lxpthread.GNU: add -lrt to
          LIBS only if $(PLATFORM_AIO_SUPPORT) is equal to
          -DACE_HAS_AIO_CALLS.

        Thanks to Jake Hamby <jehamby@anobject.com> for reporting that not
        all Linux platforms have AIO support.

Thu Jun 10 10:17:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: with Sun C++ 5.0, #define
          _RWSTD_NO_EXCEPTIONS 1 if exceptions are not enabled.  This
          avoids a warning about throw expressions being ignored with
          -noex.  See /opt/SUNWspro_5.0/SC5.0/include/CC/stdcomp.h for
          more information.

        * ace/os-patches/vxworks-5.1.txt,ACE-INSTALL.html: added these
          notes for using ACE with VxWorks 5.1.

        * docs/ACE-guidelines.html: avoid source code filenames that
          include "Error".  Avoid #include <math.h>.

Wed Jun  9 21:45:24 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Svc_Handler_Test.cpp (main): Revised the test a bit to
          make it more clear what's going on.

        * ace/Svc_Handler.cpp: Fixed a typo in flush() -- we need to
          update the temp pointer with temp->cont() *not* entry->cont().

        * ace/Svc_Handler.cpp (dump): Fixed a typo -- I wasn't comparing
          the pointer to 0, I was comparing the ACE_Time_Value!

Wed Jun  9 21:10:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/config-psos-diab-ppc.h: added
          ACE_HAS_NONCONST_SELECT_TIMEVAL

        * tests/RB_Tree_Test.cpp: fixed constness issues revealed by
          SunC++ 5.0, added return value assertions for insert calls,
          added typedefs.

Wed Jun  9 20:40:50 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp: Added new methods to support message
          reassembly in GIOP 1.1

Wed Jun  9 15:32:37 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ace/Message_Queue_T: Added a lock() accessor method so that
          other components can access the lock used by a Message Queue.

        * ace/Svc_Handler.cpp: Added better support for timeout handling
          for the ACE_Buffered_Svc_Handler.

        * ace/Svc_Handler: Split the buffering portion of ACE_Svc_Handler
          off into a separate class called ACE_Buffered_Svc_Handler to
          avoid adding extra space and complexity to the existing
          ACE_Svc_Handler.  Thanks to Irfan for suggesting this, as well
          as also suggesting ways to improve the performance by caching
          the current size of the buffer.

        * ace/OS.h: Added a patch to work around some problems with macros
          for USYNCH_THREAD.  Thanks to David Levine and Russ Noseworthy
          for this.

        * examples/Threads/task_five.cpp (main): Improved the form and
          content of this example a bit.

        * include/makeinclude/platform_sunos5_sunc++.GNU,
        * include/makeinclude/platform_sunos5_g++.GNU,
        * include/makeinclude/platform_irix6.x_g++.GNU,
        * include/makeinclude/platform_linux_lxpthread.GNU,
        * include/makeinclude/platform_irix6.x_sgic++.GNU:
          Added support to make it easier to override various settings
          in platform_macros files.  Thanks to Dave Meyer
          <dmeyer@lima.arl.std.saic.com> for contributing this.

        * ace/SPIPE_Stream: Added sendv(), sendv_n(), and recvv_n()
          methods to SPIPE_Stream.  Thank to Carlos for pointing this out.

        * ace/config-mvs.h: Changed the size of the ACE_SIZEOF_DOUBLE and
          ACE_SIZEOF_LONG_DOUBLE from 4 and to 8 and 16, respectively.
          Thanks to Jim Rogers for reporting this.

        * ace/config-mvs.h: Added ACE_HAS_NONCONST_SELECT_TIMEVAL on the
          advice of Jim Rogers <jrogers@viasoft.com>.

        * ace/OS.h (class ACE_Errno_Guard): Propagate the return value of
          the assignment operator to allow chaining.  Thanks to Jeff for
          reporting this.

        * ace/OS.i: Fixed a bizzarre problem with lower-case ace_os::.
          Thanks to Andy for pointing this out.

        * ace/Svc_Conf.y: Don't enable YYDEBUG by default so that we can
          save some space in the generated code.

        * ace/OS: Added several more uses of ACE_Errno_Guard, which has
          been enhanced to support assignment.  Thanks to Irfan for
          suggesting this.

        * tests/Svc_Handler_Test.cpp: Added a simple test for the new
          buffering feature in ACE_Svc_Handler.

        * ace/Strategies.cpp: Added an explicit template instantiation for
          ACE_Message_Queue_Iterator <ACE_NULL_SYNCH> since this is now
          used in ACE_Svc_Handler.

        * ace/Svc_Handler: Added a "buffering" feature to the
          ACE_Svc_Handler.  This feature makes it possible to queue up
          ACE_Message_Blocks in an ACE_Message_Queue until (1) the queue
          is "full" or (2) a period of time elapses, at which point the
          queue is "flushed" via sendv_n() to the peer.

Wed Jun  9 12:23:30 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * tests/version_tests/version_tests.dsw:
        * tests/run_tests.bat:
        * tests/run_tests.psosim:
        * tests/run_tests.vxworks:
          Added Svc_Handler_Test to these.

        * tests/tests.dsw:
          Added Svc_Handler_Test.dsp (created and checked in by
          Nanbor) to the workspace.

Wed Jun  9 10:46:07 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Strategies.cpp:
          Moved template instantiations to ace/Service_Types.cpp

        * ace/Service_Types.cpp:
          Added missing template instantiations for
          ACE_Message_Queue_Iterator<>

        * ace/Svc_Handler.cpp (flush):
          Removed extra characters and the end of a #endif
          Fixed warning about unused variable
          Use right iterator for the Message_Queue

Wed Jun 09 10:11:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-g++-common.h: added #define of
          ACE_NEW_THROWS_EXCEPTIONS, with egcs if ACE_HAS_EXCEPTIONS is
          #defined.  That allows ACE's New_Fail_Test to pass.  Thanks
          to Jake Hamby <jehamby@anobject.com> for providing the fix.

Tue Jun  8 22:44:18 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * Hacked BYACC to generate a parser that doesn't have any
          incorrect const char *'s.  This clears the last major const
          issue in libACE.

Tue Jun  8 20:46:05 1999  Matthew J Braun  <mjb2@cs.wustl.edu>

        * ace/Functor.i,h: Migrated ACE_Hash template specializations
          from native types to ACE types (ACE_UINT16, etc).  This was
          necessary since native types are not portable.

Tue Jun  8 15:47:06 1999  Douglas C. Schmidt  <schmidt@danzon.cs.wustl.edu>

        * ace: Updated most of the places in ACE that can benefit from the
          new ACE_Errno_Guard class.

        * ace/OS.h: Added a new ACE_Errno_Guard class that improves
          performance when thread-specific errno must be saved/restored in
          a block of code.  Thanks to Serge Kolgan <skolgan@cisco.com> for
          motivating this and to Rick Weisner <Rick.Weisner@East.Sun.COM>
          for explaining the technique to Serge.

        * ace/Env_Value_T.h: Added a new ACE_Convert() function that works
          for const char *'s.  Thanks to David for reporting this.

Tue Jun 08 18:08:41 1999  Steve Huston  <shuston@riverace.com>

        * ace/OS.h: Added new overridable macro, ACE_LOCALHOST. This allows
          overriding of the string used to do a loopback IP socket to the
          local host. Some systems (e.g. PharLap ETS) don't have a host table
          out of the box, and require an IP address string.

        * ace/Pipe.cpp: Use the new ACE_LOCALHOST macro instead of a hard
          "localhost" when using a socket to emulate a pipe.  Thanks to
          Bruce Trask <BTRASK@contactsystems.com> for working to get this
          ironed out for PharLap ETS.

        * README: Added Bruce Trask to the Hall of Fame ;-)

        * tests/SOCK_Connector_Test.cpp: Check for failed host lookup
          before trying to connect.  Changed the way sethostent is done on
          AIX 4.3 to work around an apparent bug in AIX 4.3.

Tue Jun 08 13:46:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (wmain): Added a new macro to tweak the wchat_t version
          of main program entry point to create the non-static
          Object_Manager.  This is only enabled if UNICODE and ACE_WIN32
          is defined (although you can also use wmain under non-UNICODE
          environment).

Mon Jun 07 14:34:53 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: The member function for dumping
          TAO_Exception is changed to _tao_print_exception.

Tue Jun 08 14:44:07 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Thread_Manager_Test.cpp (main): on Sun only, added 5
          second sleep before the "main thread finished" printout.  It
          might help (but certainly doesn't prevent) avoid an occasional
          thread lib panic on SunOS 5.5 through 5.7.

Tue Jun 08 14:01:51 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.41 released.

Tue Jun  8 12:42:56 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * Fixed lots of brokens URL links.  Thanks to Eric S Rosenthal
          <esr@netcom.com> for reporting these.

Mon Jun  7 17:09:56 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Naming/test_multiple_contexts.cpp (main): Added a cast
          to resolve const problems.  Thanks to David for reporting this.

        * examples/Naming/test_writers.cpp (main): Fixed a typo.  Thanks
          to David for reporting this.

Mon Jun  7 14:21:48 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp (main): ANSI C++ spec doesnt allow void * to
          be typecasted to a function_pointer. Hence made changes to
          remove the warning due to this.  Thanks to Nanbor
          <nanbor@cs.wustl.edu> for pointing it out.

Mon Jun  7 14:12:02 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACE-INSTALL.html: Added a general section explaining the order
          of user defined macros and platform config file.  Thanks to
          Stephen E Blake <stephen_e_blake@email.moore.com> for pointing
          this out.

Mon Jun 07 10:55:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-osf1-4.0.h: added #define ACE_HAS_BROKEN_T_ERROR
          to permit building again.  Thanks to Doug for this fix.

Mon Jun  7 12:35:17 1999  Douglas C. Schmidt  <schmidt@danzon.cs.wustl.edu>

        * examples/Service_Configurator/IPC-tests/client: Fixed some more
          warnings related to const-correctness.  I believe that ACE is
          now just about completely const-correct.

        * examples/Service_Configurator/Misc/main.cpp (main): Cast to
          (ASYS_TCHAR **) rather than (ASYS_THCAR *[]).  Thanks to David
          for reporting this.

        * examples/IPC_SAP/DEV_SAP/writer/writer.cpp (main): Fixed a stray
          comma.  Thanks to David for reporting this.

        * tests/Hash_Map_Manager_Test.cpp: Changed the use of ASYS_TCHAR *
          to LPCTSTR to ensure const-correctness.

        * netsvcs/lib: Reformatted all the *.h files to conform to the ACE
          programming guidelines.

Sun Jun  6 22:02:43 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i (t_error): Fixed the broken t_error() usage on SunOS
          5.5 and 5.6...

        * ace/README: Added a new macro called ACE_HAS_BROKEN_T_ERROR to
          workaround the frigging broken prototype for t_error() on
          Solaris 2.5.  Note that this macro is required for SunOS 2.5 and
          2.6, but not SunOS 2.7 (thank goodness).

        * Fixed gazillions of incorrect usages of char * (which should
          have been const char *) throughout ACE.

        * netsvcs/clients/Tokens: Fixed some const char * inconsistencies.

        * netsvcs/lib/Name_Handler.h: Fixed another inconsistent use of
          char * that should have been const char *.

        * ace/Service_Config.h: Fixed a const incorrectness in the
          ACE_Static_Svc_Descriptor.

        * ace/Process.h (ACE_Process_Options): The parameter type of
          command_line() should be LPCTSTR argv[] *not* LPTSTR argv[].
          This fix should be ok as a further extension to what Carlos did
          below.

Sun Jun 06 20:33:00 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/SString.h:
          Added missing ACE_Export macro

Sun Jun  6 20:34:40 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Synch.h:
        * ace/Timer_Queue_T.h:
        * ace/Timer_Queue.cpp:
        * ace/Select_Reactor.cpp:
          Moved explicit template instantiations around, now ACE compiles
          and links with Sun/CC and inlining enabled.  TAO does not.

Sun Jun  6 18:05:48 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Process.h:
        * ace/Process.cpp:
          Added const-correct version of the command_line() method, in the
          future we should remove the non-const version, but I don't feel
          like breaking an interface today.


Sun Jun 06 09:08:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * PROBLEM-REPORT-FORM: added requests to not send
          as attachment, or tar'red, compressed, and/or
          uuencoded, or with line lengths >= 80 characters.

Sun Jun 06 08:08:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Functor.{h,i} (ACE_Hash<ACE_UINT64>::operator ()):
          conditionally compile only if ACE_SIZEOF_LONG is not 8,
          to avoid conflict with ACE_HASH<unsigned long> on 64-bit
          platforms (alphas).

Sat Jun  5 23:34:21 1999  Douglas C. Schmidt  <schmidt@danzon.cs.wustl.edu>

        * ace/Containers_T: Changed all uses of "index" to "slot" to avoid
          conflicts with broken C++ compilers that define macros named
          "index."

Sat Jun  5 22:57:31 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
          Added new macro (ACE_TEMPLATE_SPECIALIZATION) to handle the
          differences between compilers supporting the standard way to
          specialize a template (i.e. template<> class Foo<int>) vs. the
          old style (just saying class Foo<int>).
          Also added new macro ACE_HAS_STD_TEMPLATE_SPECIALIZATION that
          platforms must define if they want the new style.

        * ace/Filecache.cpp:
        * ace/Functor.h:
          Use the new ACE_TEMPLATE_SPECIALIZATION macro

        * ace/config-sunos5.5.h:
          Define the new ACE_HAS_STD_TEMPLATE_SPECIALIZATION for Sun/CC
          5.0

        * ACE-INSTALL.html:
          Added some notes about our success with Sun/CC 5.0

Sat Jun  5 16:48:47 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-irix6.x-common.h
        * ace/config-irix6.x-sgic++-nothreads.h
        * ace/config-irix6.x-sgic++.h
        * include/makeinclude/platform_irix6.x-sgic++.GNU
        * include/makeinclude/platform_irix6.x_common.GNU
        * include/makeinclude/platform_irix6.x_g++.GNU
        * include/makeinclude/platform_irix6.x_kcc.GNU
        * include/makeinclude/platform_irix6.x_sgic++.GNU: On IRIX 6.5 we
          must not define ACE_LACKS_NETDB_REENTRANT_FUNCTIONS, thanks to
          Bob Laferriere <laferrie@gsao.med.ge.com> for pointing this out.
          Created a new platform_*.GNU file that auto detects the IRIX
          version (couldn't find a pre-processor macro to do it); also
          renamed the platform_irix6.x-sgic++.GNU file to use underscore
          instead of '-'; that way it is more consistent with the other
          files.

Sat Jun  5 13:29:07 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Codeset_IBM1047: Minor reformatting to conform to ACE
          programming guidelines.

Sat Jun  5 13:00:46 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
        * ace/CDR_Stream.cpp:
          New methods added to the InputCDR class to simplify the process
          of reading a buffer from a socket or file.

Fri Jun  4 23:52:19 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
        * ace/CDR_Stream.cpp:
          Added support for codeset translators.
          Many thanks to Jim Rogers <jrogers@viasoft.com> for providing
          these fixes.

        * ace/Makefile:
        * ace/Codeset_IBM1047.h:
        * ace/Codeset_IBM1047.cpp:
          A pair of codeset translators between IBM1047 (aka EBCDIC) and
          ISO8859-1 (aka ISO-Latin-1)

        * ace/config-mvs.h:
          Define an ACE_MVS macro

Fri Jun  4 15:23:18 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.{h,i,cpp}: Removed common code by
          making Cached_Connect_Strategy_Ex derive from
          Cached_Connect_Strategy class.

Fri Jun 04 09:59:58 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * docs/tutorials/tutorials.dsw: Fixed "_" to "-". Thanks to Tom
          Bradley <thomas.bradley@maisel-gw.enst-bretagne.fr> for pointing
          out this problem.

Fri Jun  4 09:02:35 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * ace/POSIX_Asynch_IO.cpp: Fixed a syntax error. There were two
        consecutive commas in the ACE_DEBUG statement which were causing
        syntax errors while compiling.

Fri Jun  4 00:28:07 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/POSIX_Asynch_IO.cpp: Fixed the Linux egcs warning.

Thu Jun  3 17:05:36 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.h
        * ace/Cached_Connect_Strategy_T.i
        * ace/Cached_Connect_Strategy_T.cpp

          Caching connection strategy used by the Strategy Connector.

        * ace/Cache_Map_Manager_T.h
        * ace/Cache_Map_Manager_T.i
        * ace/Cache_Map_Manager_T.cpp

          Map Manager which performs caching depending on the caching
          strategy used.

        * ace/Hash_Cache_Map_Manager_T.h
        * ace/Hash_Cache_Map_Manager_T.i
        * ace/Hash_Cache_Map_Manager_T.cpp

          Hash_Map used as a specialised form of the Cache Map.

        * ace/Caching_Strategies_T.h
        * ace/Caching_Strategies_T.i
        * ace/Caching_Strategies_T.cpp

          Strategies used for caching purposes, example: Least Recently
          Used.

        * ace/Caching_Strategy_Utility_T.h
        * ace/Caching_Strategy_Utility_T.i
        * ace/Caching_Strategy_Utility_T.cpp

          Helper class for the caching strategy classes which does the
          purging of entries.

        * ace/Cleanup_Strategies_T.h
        * ace/Cleanup_Strategies_T.i
        * ace/Cleanup_Strategies_T.cpp

          Strategy which deals with destruction and cleanup in general.

        * ace/Makefile

          Added the above under the TEMPLATE_FILES.

        * examples/Web_Crawler/Optimal_Cache_Map_Manager_T.h
        * examples/Web_Crawler/Optimal_Cache_Map_Manager_T.i
        * examples/Web_Crawler/Optimal_Cache_Map_Manager_T.cpp
        * examples/Web_Crawler/Cached_Connect_Strategy_T.h
        * examples/Web_Crawler/Cached_Connect_Strategy_T.i
        * examples/Web_Crawler/Cached_Connect_Strategy_T.cpp
        * examples/Web_Crawler/Caching_Strategies_T.h
        * examples/Web_Crawler/Caching_Strategies_T.i
        * examples/Web_Crawler/Caching_Strategies_T.cpp

          Removed these files and added them to the ace library itself.

        * examples/Web_Crawler/Command_Processor.cpp
        * examples/Web_Crawler/Command_Processor.h
        * examples/Web_Crawler/HTTP_URL.cpp
        * examples/Web_Crawler/HTTP_URL.h
        * examples/Web_Crawler/Iterators.h
        * examples/Web_Crawler/Makefile
        * examples/Web_Crawler/Mem_Map_Stream.cpp
        * examples/Web_Crawler/Mem_Map_Stream.h
        * examples/Web_Crawler/Options.h
        * examples/Web_Crawler/URL.h
        * examples/Web_Crawler/URL_Addr.h
        * examples/Web_Crawler/URL_Status.h
        * examples/Web_Crawler/URL_Visitor.cpp
        * examples/Web_Crawler/URL_Visitor.h
        * examples/Web_Crawler/URL_Visitor_Factory.h
        * examples/Web_Crawler/Web_Crawler.h
        * examples/Web_Crawler/main.cpp

          Changed to include files pertaining to Caching and Connection
          management from ace library.

Thu Jun 03 15:57:43 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Strategies_T (ACE_Cached_Connect_Strategy): Allowed the user
          to pass in a mutex.  This allows the user to pass in a
          preconfigured mutex of his/her liking. Since the parameters
          default appropriately, no existing code should break.

        * ace/Functor: Changed ACE_Hash<unsigned long long> specialization
          to ACE_Hash<ACE_UINT64>.

Thu Jun  3 10:36:35  Matthew J Braun  <mjb2@cs.wustl.edu>

        * ace/Functor.i
        * ace/Functor.h:
          Added ACE_Hash <unsigned long long>. It truncates the ULongLong
          to a ULong and returns it. Nothing major...

Wed Jun  2 17:50:23 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/platform_mvs.GNU:
          Debugging info was not generated on the C++ files.
          The -+ flag should be added to CPPFLAGS using +=
          Thanks to Jim Rogers <jrogers@viasoft.com> for these fixes.

Wed Jun 02 16:11:34 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/TTY_IO.cpp (control): Commented out odd baud rates (56000,
          128000, 256000) which don't seem to be supported on FreeBSD.

Wed Jun 02 00:07:44 1999    <alex@cs.wustl.edu>

       * tao/test_cancel.dsp
       * tao/post_completions.
       * tao/test_end_event_lo
       * tao/test_multiple_loo
       * tao/test_proactor.dsp
       * tao/test_proactor.dsw
       * tao/test_timeout.dsp

       * examples/Reactor/Proactor/test_cancel.cpp:
       * examples/Reactor/Proactor/README:
       * examples/Reactor/Proactor/Makefile:

        Related to ChangeLog : Tue Jun  1 16:48:58 1999  Alexander Babu
        Arulanthu  <alex@cs.wustl.edu>

Tue Jun  1 21:44:05 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/platform_linux_lxpthread.GNU:
          Added the rt library to the command line, ACE uses aynchronous
          I/O by default on linux.

Tue Jun  1 16:48:58 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

           Ported <ACE_Asynch_Operation::cancel> to POSIX platforms based
           on <aio_cancel> API. Made the return values  consistent in both
           WIN32 and POSIX platforms as follows.

         All completion notifications for the I/O operations will occur
         normally.

         = Return Values:

         -1 : Operation failed. (can get only in POSIX).
          0 : All the operations were cancelled.
          1 : All the operations were already finished in this
              handle. Unable to cancel them.
          2 : Atleast one of the requested operations cannot be
              cancelled.

        * ace/Asynch_IO.cpp
        * ace/Asynch_IO.h
        * ace/POSIX_Asynch_IO.cpp
        * ace/POSIX_Asynch_IO.h
        * ace/POSIX_Proactor.h
        * ace/WIN32_Asynch_IO.cpp:
        * ace/POSIX_Proactor.cpp:

        * ace/config-linux-lxpthreads.h: Enabled the ACE_HAS_AIO_CALLS
        flag for this platform.


Tue Jun  1 15:02:34 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Connector.h:
          Documented the new connect() method

Tue Jun 01 11:18:03 1999    <alex@cs.wustl.edu>

        * examples/Reactor/Proactor/test_end_event_loop.cpp:
        * tao/post_completions.cpp
        * tao/test_end_event_loop.cpp
        * tao/test_end_event_loop.dsp
        * tao/test_proactor.dsw
        Fixed the link problems.

Tue Jun  1 09:57:42 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/TTY_IO.cpp (control),
        * ace/config-freebsd.h,
          ace/config-freebsd-pthread.h: Attached is a patch that will
          allow the ACE_TTY_IO class to work with FreeBSD tty devices.
          Thanks to John Aughey <jha@FreeBSD.ORG> for contributing these.

        * ACE-INSTALL.html: Updated the list of platforms that ACE is
          supported on.

Tue Jun 01 10:00:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated Sun C++ and DU versions in fully
          supported platforms list.

Mon May 31 22:45:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-lynxos.h: added ACE_HAS_GPERF.

Mon May 31 16:28:27 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.h:
          Added and updated some comments.

Mon May 31 16:13:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: if ACE_COMPONENTS is equal to FOR_TAO,
          override it with the proper component values.  The
          override allows it to be set on the command line, e.g.,
          make ACE_COMPONENTS=FOR_TAO.  Thanks to Carlos for
          reporting this.

Mon May 31 14:00:21 1999  Steve Huston  <shuston@riverace.com>

        * ace/RB_Tree.i: Reverted changes from May 21.  It broke the LynxOS
          build of tests/RB_Tree_Test.

Mon May 31 11:51:03 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/CORBA_Handler.h: Updated the comments to clarify how to use
          this class.  Thanks to Ram Vishnuvajjala
          <rvishnuvajjala@lucent.com> for motivating this.

        * ace/Service_Config: Added a static variable called is_initialized
          that keeps track of whether the <ACE_Service_Config> is already
          initialized.  If it is, we can't allow <yyparse> to be called
          since it's not reentrant...

Sun May 30 14:08:48 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile:
        * ace/Vector.{h,i,cpp}:
        * tests/Makefile:
        * tests/Vector_Test.cpp: Removed the ACE_Vector implementation
          from the distribution.

Sat May 29 14:14:37 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Vector.{h,i,cpp}: Added STL Vector-style insert() and
          erase() methods.  Also added a new constructor that creates an
          ACE_Vector from a specified range of iterators.  ACE_Vector
          class is now Purify clean (i.e. fixed any and all memory leaks).

        * tests/Vector_Test.cpp: Added tests for the newly added
          ACE_Vector<T>::insert() and ACE_Vector<T>::erase() methods.

Fri May 28 20:19:50 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Vector.{h,i,cpp},
          tests/Vector_Test.cpp: Implemented an ACE_Vector class based on
          the ACE_Array class.  It is not derived from it, however.  The
          ACE_Vector class provides an STL Vector-like interface.  The
          Vector_Test tests the important features of the ACE_Vector class
          and sends output to `logs/Vector_Test.log'.

        * ace/Makefile,
          tests/Makefile: Added ACE_Vector related files to the makefiles
          and updated the dependencies.

Thu May 27 15:50:17 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/UNIX_Addr.cpp (set), Explicitly set the sun_family to
          AF_UNIX, otherwise it will be zero by a previous call to
          memset().  AF_UNSPEC, which is zero, is what the call to
          memset() cause the sun_family to be.

Wed May 26 01:46:27 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/platform_freebsd.GNU:
        * include/makeinclude/platform_freebsd_pthread.GNU: Consolidated
          platform macro files for FreeBSD.

        * ace/config-freebsd-pthread.h:
        * ace/config-freebsd.h: Added ACE_HAS_NONCONST_SELECT_TIMEVAL.

Tue May 25 21:38:40 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/UNIX_Addr.cpp: The default constructor was not setting the
          address family to AF_UNIX.  Now that we do so we can let the OS
          select a ephemeral UNIX domain endpoint for us.

Tue May 25 19:20:15 1999  Steve Huston  <shuston@riverace.com>

        * tests/run_tests.(sh bat): Added SOCK_Send_Recv_Test.

Tue May 25 16:54:41 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * tests/SOCK_Send_Recv_Test.cpp:
          Fixed a signed/unsigned mismatch warning and
          changed several uses of static_cast to
          reinterpret_cast. This is a belated entry, I put it
          first in TAO/ChangeLog by mistake.

Tue May 25 15:19:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_ghs.GNU: added
          -Xleaveg7 to CFLAGS with threads=1.  It's necessary
          to avoid execution problems in multithreaded programs.
          Thanks to Stefaan Kiebooms <stefaan@ghs.com> for providing
          this fix.

Tue May 25 13:40:10 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/LSOCK_Acceptor.cpp (get_local_addr):

          Only the base class members of ACE_UNIX_Addr were being copied
          since the assignment lacked a dynamic cast.  Thanks to Carlos and
          Irfan for clarifying this.

Tue May 25 11:41:28 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Timeprobe_T.h (class ACE_Timeprobe): Moved the default size
          from Timeprobe_T.h to OS.h, where it can easily be redefined by
          the user.

Tue May 25 07:37:47 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU: removed suppression
          of warning 839: no_corresponding_delete.

Mon May 24 14:04:11 1999  Steve Huston  <shuston@riverace.com>

        * tests/SOCK_Send_Recv_Test.cpp: New test to exercise ACE_SOCK send
          and receive variations.  It concentrates on recvv/sendv-like things
          now in order to shake out Winsock 1.1 issues.  To be complete, it
          should be added to over time.

        * tests/Makefile:
        * tests/version_tests/{SOCK_Send_Recv_Test.dsp, version_tests.dsw}:
        * tests/{SOCK_Send_Recv_Test.dsp, tests.dsw}: Add new test.

Mon May 24 12:11:03 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.i (ACE_SOCKCALL_RETURN): Fixed macro by comparing against
          FAILVALUE rather than SOCKET_ERROR.  Some winsock calls don't
          return SOCKET_ERROR.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for reporting this problem.

Sun May 23 11:33:07 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

         Changes for the following enhancement in the Proactor
         implementation.  Enhanced the semantics of the <end_event_loop>,
         so that when it is called, it wakes up all the threads blocked on
         waiting for completions and end the event loop.  Thanks to Edwin
         D. Windes <ewindes@usa.net> for reporting the issue.

        * ace/Proactor.h:
        * ace/Proactor.cpp: Added static helper methods and states to post
          the wakeup completions to the CompletionPort.

        * ace/Asynch_IO.h:
        * ace/Asynch_IO.cpp: Added a method <handle_wakeup> to the
          ACE_Handler.

        * ace/Object_Manager.cpp
        * ace/Object_Manager.h: Added a new Thread_Mutex called
          <ACE_PROACTOR_EVENT_LOOP_LOCK> to protect the thread count in
          the event loop.

        * ace/POSIX_Asynch_IO.cpp
        * ace/POSIX_Proactor.cpp
        * ace/POSIX_Proactor.h
        * ace/Proactor.cpp
        * ace/Proactor.h
        * ace/Proactor_Impl.h
        * ace/WIN32_Proactor.cpp
        * ace/WIN32_Proactor.h:
          Changes for posting wakeup completions.

        * examples/Reactor/Proactor/test_end_event_loop.cpp:
        * examples/Reactor/Proactor/test_end_event_loop.dsp:
        * examples/Reactor/Proactor/post_completions.dsp:
        * examples/Reactor/Proactor/Makefile: Test file the
          <end_event_loop> enhancement.

Sat May 22 16:57:38 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/FlReactor.cpp: Sun/CC doesn't like reinterpret cast when
          converting from an int into an int; this is silly, but I cannot
          use static_cast because on NT reinterpret_cast is the right
          thing.  Use old-style casts for the moment.

        * tests/FlReactor_Test.cpp: Minor cosmetic fixes.

Sat May 22 16:36:14 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ACE version 4.6.40 released.

Sat May 22 14:53:47 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Filecache.cpp: snagged another "template <>".  Thanks to
          Bala for reporting it.

Sat May 22 07:30:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-chorus.h,ace/config-lynxos.h: added
          ACE_HAS_NONCONST_SELECT_TIMEVAL.

        * ace/Filecache.cpp: commented out "template<>" for now.  Not all
          compilers can cope with it.

Fri May 21 21:12:37 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_Manager.i (operator==): Since <map_man_> is a pointer
          now, we must compare by value, rather than by address.

Fri May 21 12:56:38 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp: fixed to
          build without threads:  #ifdef ACE_MT_SAFE is insufficient.
          Must also check if it is 0.

Fri May 21 12:45:32 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Map_Manager.i:
          Fixed minor error in previous commit.  Thanks to Irfan for
          helping out with this.

Fri May 21 11:18:21 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux11.h: Added ACE_HAS_NONCONST_SELECT_TIMEVAL.

        * ace/RB_Tree.i: Fully template-qualified references to node_ and
          tree_ in iterators; makes HP aC++ happy.

Fri May 21 11:27:44 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_Manager.h (class ACE_Map_Iterator_Base): Changed the
          ACE_Map_Manager reference to a pointer.  This way there is no
          problem in reinitializing <map_man_>, and hence the compiler
          will not have a problem in providing us a default assignment
          operator.  Thanks to Knut Johannessen <knutj@funcom.com> for
          pointing out this problem.

        * ace/Process: A nifty ACE::fork was added several months ago
          which offers the option to avoid zombies, but it is not used in
          ACE_Process::spawn.

          Mark L. Boriack <mboriack@sito.saic.com> provided patches which
          adds an <avoid_zombies_> data member to ACE_Process_Options,
          appropriate accessor functions, and changes the ACE_OS::fork
          call to ACE::fork in ACE_Process::spawn, making use of the
          option.  The default behavior is left unchanged, i.e., you get
          zombies.  Thanks Mark.

Fri May 21 10:34:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/gethrtime.cpp,Makefile (gethrtime on Green
          Hills/VxWorks): reverted to building gethrtime.cpp with g++, because
          the ghs assembly code didn't work properly.

Fri May 21 10:10:13 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ACE-INSTALL.html: Updated information about building egcs' C++
          shared libraries with an example, and emphasized the fact that
          the `--enable-shared' configuration option is not an egcs
          run-time option.  Thanks to Wallace Owen <owen@visicom.com> for
          motivating this.

Fri May 21 09:15:08 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-sunos5.5.h:
          Added ACE_HAS_NONCONST_SELECT_TIMEVAL here too

Fri May 21 07:53:58 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-vxworks5.x.h, config-osf1-4.0.h: Added
          ACE_HAS_NONCONST_SELECT_TIMEVAL.

Thu May 20 18:01:24 1999  Steve Huston  <shuston@riverace.com>

        * ace/Filecache.cpp: Added "template<>" to specializations.

        * ace/OS.i (ACE_OS::select, ACE_OS::sleep): Removed implicit
          dependency on binary object layout with regard to using an
          ACE_Time_Value object as a struct timeval; use the timeval*
          operator instead.  On platforms with ACE_HAS_NONCONST_SELECT_TIMEVAL
          don't just cast away const-ness of the ACE_Time_Value - modification
          of the timeval by select() is not consistent, and Linux is not the
          only one that modifies it (Solaris 7 does also, as well as AIX and
          possibly HP; Solaris 2.5/6 don't specify).  So, play it safe.
          Inlining and optimization should prevent this from having any
          affect on performance.

        * ace/config-sunos5.5.h, config-hpux-10.x.h, config-aix-4.x.h:
          Added #define ACE_HAS_NONCONST_SELECT_TIMEVAL.

Thu May 20 17:47:35 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.h (ACE_DES_ARRAY_FREE_*): Added new macros to facilitate
          proper destruction of arrays.

        * ace/Containers_T.cpp (ACE_Array_Base): Changed ACE_Array_Base to
          use the new ACE_DES_ARRAY_FREE_* macros in order to prevent the
          memory leaks.

Thu May 20 17:46:02 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp: Fixed Alpha configurations.  Thanks to
          Christian Schuderer <Christian.Schuderer@erl9.siemens.de> for
          reporting this.

Thu May 20 15:35:23 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/TkReactor_Test.cpp:
          It was not compiling if ACE_HAS_TK was not defined.

Thu May 20 15:33:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_ghs.GNU:
          added (and default to) LIBS for Green Hills 1.8.9.

Thu May 20 14:34:59 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: with Green Hills only, added
          ACE_LACKS_ACE_IOSTREAM.  ACE's IOStream_Test never halts
          when built with Green Hills 1.8.9.

Thu May 20 14:21:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i: (t_getname): fixed comment after #endif, to
          agree with the #ifdef.

Thu May 20 13:51:20 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h: I forgot to put '/**/' between
          #include and <blah.h> which caused MSVC to generate warnings
          when checking file dependencies.  Thanks to Christian Schuderer
          <Christian.Schuderer@erl9.siemens.de> for reporting this.

Thu May 20 13:52:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: build with threads if
          _POSIX_C_SOURCE >= 199506L or #ifdef _POSIX_PTHREAD_SEMANTICS.
          Added #define ACE_LACKS_RWLOCK_T if _POSIX_PTHREAD_SEMANTICS
          is #defined (and therefore ACE_HAS_STHREADS is not #defined).
          The rwlock functions are a Solaris threads interface, and
          are not POSIX.

        * include/makeinclude/platform_sunos5_ghs.GNU: default to
          building without threads support, because Green Hills 1.8.9
          is incompatible with the SunOS threads libraries.

Thu May 20 12:12:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},Sched_Params.cpp: with ACE_HAS_PRIOCNTL,
          moved #include of sys/{rt,ts}priocntl.h from OS.cpp and
          Sched_Params.cpp to OS.h, so that USYNC_THREAD and USYNC_PROCESS
          #defines can be protected effectively.

Thu May 20 11:19:45 1999  Joe Hoffert <joeh@cs.wustl.edu>

        * ace/ATM_Addr.cpp: Added ACE_UNUSED_ARG for selector parameter
          when appropriate.

Thu May 20 09:57:57 1999  Bill Rizzi <rizzi@softserv.com>

        * ace/Log_Msg.{h,cpp},examples/Log_Msg/test_log_msg.cpp
          (priority_mask): added optional support for process priority
          mask, in addition to the (now default) thread priority mask.

Thu May 20 09:42:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h (fcntl): changed type of last argument from int to
          long, to permit safer casting from pointer types.

        * ace/OS.i (flock_*): use ACE_OS::fcntl instead of ::fcntl.

        * ace/OS.cpp (ftruncate): use ACE_OS::fcntl instead of ::fcntl.

        Thanks to an anonymous ACE user for reporting that
        these functions weren't using ACE_OS::fcntl.

Wed May 19 23:50:18 1999  Nagarajan Surendran  <naga@cs.wustl.edu>

        * ace/TkReactor.{h,cpp}:
        * ace/Makefile:
          Added a new reactor implementation based on the Tcl/Tk Event
          loop and event handling mechanism.

        * ace/tests/TkReactor_Test.{cpp,tcl}:
        * ace/tests/Makefile:
          The Tk Reactor test and the tcl script for the GUI. This is
          similar to the XtReactor_Test.

        * ace/include/makeinclude/wrapper_macros.GNU:
        * ace/include/makeinclude/platform_sunos5_sunc++.GNU
          Added changes to Makefile flags for XtReactor.

Wed May 19 21:56:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Message_Queue.h: fixed typo in comment: interrupt.

Wed May 19 21:34:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU:  removed these
          warning suppressions:
          174: expr_has_no_effect
          610: nonoverriding_function_decl
          They're certainly not needed with cxx 6.2-020, and
          hopefully not needed with earlier versions.

Wed May 19 10:52:15 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/DLL/test_dll.cpp (main): Fixed auto pointer use.  It
          was causing "Temporary used for non-const reference" warnings.

Wed May 19 10:04:54 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/SString.i:
          Changed the default constructor to set rep_ to the
          empty string instead of the null string. Thanks to
          Knut Johannessen <knutj@funcom.com> for pointing
          this out.

Wed May 19 06:34:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-minimal.h: added #define ACE_USE_THREAD_MANAGER_ADAPTER,
          so that ACE_Thread_Exit isn't needed in the ACE_OS layer.

Tue May 18 22:03:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU,platform_osf1_cxx.GNU:
          removed suppression of warning 9 (nested comment not allowed) on
          Digital Unix 5.0 and later.

Tue May 18 15:01:39 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp: Added #include "ace/SString.h" to catch def for
          ACE_Tokenizer in Winsock 1.1 mode.

Tue May 18 13:30:55 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/rules.nested.GNU: FOR is not an excutable on
          Win32, therefore, we must bring in the command processor in to
          use FOR.  Thanks to David Hooker <DHooker@uniview.net> for
          reporting the bug.

Tue May 18 11:46:55 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/FILE_Connector.h: Changed the default perms from 0 to
          ACE_DEFAULT_FILE_PERMS.

Tue May 18 11:28:32 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * examples/IPC_SAP/TLI_SAP/CPP-ATM-server.cpp: forced
          ACE_TLI_Stream's recv method to call ACE_OS::t_rcv rather than
          ACE_OS::read to be compatible with XTI.

Tue May 18 11:00:15 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Task_T: Moved the ACE_Buffered_Task logic out of the Task
          abstraction since it doesn't belong there.

        * ace/Makefile: Regenerated the dependencies.

        * ace/FlReactor.cpp: We should be including <FL/Fl.h> rather than
          "FL/Fl.h".

Tue May 18 10:42:47 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU: removed
          suppression of warning 1180, statement causes unreachable
          return, because it's no longer necessary.

Tue May 18 10:38:53 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Thread_Manager_Test.cpp: replaced Hash_Map_Manager
          with a simple array.  This avoids dynamic allocation in
          the signal handler.  And, it avoids having to specialize
          ACE_Hash<ACE_hthread_t> on platforms that have a pthread_t
          struct.

Tue May 18 09:33:46 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/FILE_IO: Added new sendv()/recvv() and sendv_n()/recvv_n()
          methods to be consistent with SOCK_IO and SOCK_Stream.

        * ace/SOCK_IO.cpp (recvv): Make sure to 0-out the iov_base so that
          it's always ok to delete it, even if any of the internal
          operations fail!

Tue May 18 10:14:47 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Makefile:
        * ace/FlReactor.h:
        * ace/FlReactor.i:
        * ace/FlReactor.cpp:
        * include/makeinclude/platform_linux_lxpthread.GNU:
        * include/makeinclude/wrapper_macros.GNU:
        * tests/Makefile:
        * tests/FlReactor_Test.cpp:
          Added new reactor implementation based on the event loop of the
          Fast-Light toolkit, similar to the XtReactor.
          FLTK is a GUI toolkit that works on UNIX/X-Windows and on Win32,
          it is integrated to OpenGL and is pure C++.
          Check http://fltk.easysw.org for more details.

Tue May 18 09:35:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Thread_Manager_Test.{h,cpp},Makefile:
          removed Thread_Manager_Test.h.

Mon May 17 22:39:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Thread_Manager_Test.cpp: added a couple more
          explicit template instantiations.  Thanks to Carlos
          for reporting that they're needed on Irix.  And,
          added an ACE_Hash<ACE_hthread_t> specialization to
          keep DU cxx happy.

Mon May 17 16:31:16 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Task_T.cpp,
          ace/OS.h: Removed ACE_DEFAULT_WRITEV_MAX and replaced it
          with IOV_MAX.

Mon May 17 15:49:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * config-dgux-4.x-ghs.h,config-vxworks5.x.h,config-ghs-common.h:
          factored ACE_LACKS_SIGNED_CHAR to config-ghs-common.h.

        * config-dgux-4.x-ghs.h: removed ACE_LACKS_ACE_IOSTREAM.
          It should work now, though we don't have that platform
          to verify it.

Mon May 17 15:08:45 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CORBA_macros.h:
          Fixed implementation of the ACE_READ_GUARD_THROW_EX and
          ACE_WRITE_GUARD_THROW_EX macros.

Mon May 17 15:12:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * test/Thread_Manager_Test.cpp: use a hash map, instead of
          TSS, to store each thread's indication of whether it has
          been signalled.  That way, the signal handler doesn't have
          to access TSS.  Increased the delay from 1 to 2 seconds after
          the signal test, which also seems to help avoid thread lib
          panics on Solaris.

Mon May 17 14:02:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Conn_Test.cpp (handler): added comment saying that even
          the ACE_OS::exit () call isn't safe.

Mon May 17 10:31:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Repository.cpp (find_i): A missing pointer check was
          causing the remove method to segfault.  Thanks to Tom Arbuckle
          <arbuckle@uran.informatik.uni-bonn.de> for pointing this out.

Mon May 17 10:21:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/TSS_Test.cpp: removed the signal handler.  It
          wasn't used for the test, and contained an ACE_DEBUG.

Mon May 17 10:12:45 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-chorus.h,config-dgux-4.x-ghs.h,config-sunos5.5.h,
          config-vxworks5.x.h,config-ghs-common.h:
          factored out Green Hill-specific #defines to config-ghs-common.h.

Mon May 17 09:07:41 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Conn_Test.cpp (handler): commented out unused arg
          "signum".

Sun May 16 20:38:58 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CDR_Stream.{h,i} (current): Added this accesor function for
          Flick IDL compiler.  Thanks to Tim Stack <stack@aros.net> for
          recommending this.

Sun May 16 20:08:41 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Thread_Manager_Test.cpp (handler,worker):
          moved ACE_DEBUG out of signal handler.  It was
          causing occasional lockups on SunOS.  Signal
          handlers must never do anything that could cause
          a lock to be acquired.

        * tests/Conn_Test.cpp (handler): removed ACE_DEBUG.

Sun May 16 20:04:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: moved #include of ace/Trace.h to before #include of
          ace/OS.i.

        * ace/OS.{i,cpp}: enabled ACE_TRACE for most functions (except
          those that are used by ACE_TRACE).

Sun May 16 19:54:10 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/config-sunos5.7.h: Comments
        * ace/config-sunos5.6.h: Comments

        * ace/POSIX_Asynch_IO.cpp:
        * ace/POSIX_Proactor.h:
        * ace/POSIX_Proactor.cpp: - Using ACE_dynamic_cast to get
        <ACE_POSIX_Asynch_Result *> from <aiocb *> gives build errors on
        egcs. <ACE_reinterpret_cast> is not the correct solution for
        this. Solved this problem by having one more list of
        <ACE_POSIX_Asynch_Result *> so that we dont have to do any
        casting.
        * ace/Proactor.cpp (ACE_Proactor): Indentation.
        * examples/Reactor/Proactor/post_completions.cpp: Added template
        pragma's.

Sun May 16 18:35:59 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.39 released.

Sun May 16 12:34:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Log_Msg.cpp (ACE_Log_Msg_Manager::lock_): changed
          the lock type from ACE_Thread_Mutex to
          ACE_Recursive_Thread_Mutex.  This allows ACE_Log_Msg's
          methods to be called after calling ACE_Log_Msg::acquire (),
          without deadlock.  Thanks to Bill Rizzi <rizzi@softserv.com>
          for suggesting this.

Sat May 15 08:30:43 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Containers.h: added #include of ace/Malloc_Base.h.
          It's needed for the definition of ACE_Allocator when
          instantiating container classes.

Sat May 15 03:32:02 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CDR_Stream.h: Added #include of ace/SString.h.

Fri May 14 23:05:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Log_Record.h: removed unnecessary #include of ace/SString.h.

Fri May 14 21:11:46 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Task_T.h:
        * ace/Task_T.cpp:
          Fixed syntax errors in ACE_Buffered_Task

Fri May 14 21:03:30 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * netsvcs/lib/Log_Message_Receiver.cpp:
          Changed ACE_Guard instantiations with ACE_GUARD() macros to
          avoid some warnings with egcs, similar to the problem that David
          had with Message_Queue_T.cpp

Fri May 14 19:31:04 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Message_Block.cpp (total_size):

          Corrected warning caused by assignment to non-const from const.

        * ace/Message_Queue_T.cpp (close):

          Temporary variable wasn't declared.

        * ace/Message_Queue_T.cpp (remove_messages):

          Removed unused variable.

Fri May 14 19:16:06 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Task_T.cpp (put, flush):

          Corrected syntax errors where return type was placed before
          template keyword.

Fri May 14 16:46:42 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Task_T: Added a new class called ACE_Buffered_Task that
          buffers up its ACE_Message_Blocks until (1) the buffer is full
          or (2) a timeout elapses, at which point the buffers are written
          out using some type of writev()-like mechanism.

        * ace/OS.h: Added a new macro called ACE_DEFAULT_WRITEV_MAX, which
          defaults to the maximum value that writev() can have.

        * ace/Message_Block.cpp: Added a new method called total_size()
          that returns the total number of bytes in a composite
          Message_Block (i.e., a Message_Block that has a chain of
          Message_Blocks).

        * ace/Message_Queue_T.cpp: Reimplemented all the hand-coded loops
          to use the new ACE_Message_Block::total_size() method.

Fri May 14 16:17:27 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Synch.h (ACE_Null_Mutex>): Conditionally compiles ~ACE_Guard()
          destructor.  Win32 needs this definition.

Fri May 14 16:10:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Message_Queue_T.cpp: replaced raw ACE_Read_Guards
          with ACE_READ_GUARD_RETURN macros.  That avoids a compiler
          warning (egcs 1.1.1/SunOS 5.7) now that the ACE_Guard<Null_Mutex>
          destructor has been removed.  Thanks to Irfan and Carlos
          for suggesting this fix.

Fri May 14 15:35:50 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/ACE.cpp (clr_flags and set_flags): We should use ioctl()
          calls to implement on vxworks this rather than fcntl().  Thanks
          to Joseph A. Condlin <jac@slpmbo.ed.ray.com> for reporting this.

Fri May 14 13:15:02 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * examples/IPC_SAP/TLI_SAP/Makefile: Took out FORE specific
          information. Somehow my local changes got checked in - this is
          to undo that.

Fri May 14 12:58:02 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Addr.h:
        * ace/ATM_Addr.i:
        * ace/ATM_Addr.cpp: Added accessor methods for the selector byte
          of an ATM address.

        * examples/IPC_SAP/TLI_SAP/CPP-ATM-client.cpp:
        * examples/IPC_SAP/TLI_SAP/CPP-ATM-server.cpp: Modify example code
          to have the user optionally specify the selector byte.

Fri May 14 12:47:38 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Addr.cpp,ace/Synch_Options.cpp: added comments about
          the static objects.

Fri May 14 11:36:05 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/SString.h:
        * ace/SString.i: Added new class to auto destroy dynamically
          allocated strings, sort of a mixing between auto_ptr and
          CString.  Auto_Ptr_Array was not useful because we need to free
          using ACE_OS::free() (and in the future allocators).

Fri May 14 10:37:49 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Fixed a deadlock in cond_timedwait()/cond_broadcast().
          Thanks to Brian C. Olson <bolson@rtlogic.com> for reporting
          this.

        * ace/Synch.h (ACE_Null_Mutex>): Commented out the ~ACE_Guard()
          destructor to prevent segfaults on certain versions of SunC++.
          Thanks to Russ Noseworthy for reporting this bizarre bug!

Fri May 14 09:51:55 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Message_Block.h:
        * ace/Message_Block.cpp:
          Modified default constructor and constructor taking a Data_Block
          to also take an Allocator.

Fri May 14 09:14:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_cxx.GNU:
          added $(ACELIB) to SOFLAGS for DU 5.x.  It should
          have been there all along.

Thu May 13 17:27:14 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * netsvcs/servers/svc.conf:
        * netsvcs/clients/Naming/Client/svc2.conf:
        * netsvcs/clients/Naming/Client/svc2.conf: Removed relative paths
          from all DLL's.  They were hard-coded which was not portable.
          ACE should figure out the correct path automatically.

        * netsvcs/lib/Name_Handler.cpp: Replaced several calls to
          ACE_WString::rep with ACE_WString::fast_rep to avoid memory
          leaks.  Thanks to Valery Arkhangorodsky
          <valerya@servicesoft.com> for reporting this.

        * ace/Registry.cpp (close): Only close <key_> when we do own a
          key.

        * netsvcs/lib/Name_Handler.cpp (resolve): The atype string needs
          to be delete[]'ed once we are done with it.  Thanks to Valery
          Arkhangorodsky <valerya@servicesoft.com> for pointing this out.

Thu May 13 09:39:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Makefile: added Tokens_Test to BIN2 if Tokens component
          is not configured in.  This ensures that Tokens_Test gets
          cleaned up, even if the ace directory was realcleaned first
          (and ACE_BUILD_COMPONENTS is therefore empty).

Thu May 13 07:24:41 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/POSIX_Proactor.cpp (handle_events): replaced
          incorrect dynamic_cast with a reinterpret cast.

Wed May 12 17:42:09 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Message_Block.h:
        * ace/Message_Block.cpp:
          The message blocks can be obtained from an allocator now. Thanks
          to John Aughey <Aughey@concentric.net> for this cool feature.

Wed May 12 16:24:17 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/Proactor/Makefile:
        * examples/Reactor/Proactor/test_proactor.cpp:
        * ace/POSIX_Proactor.cpp:
        * ace/POSIX_Proactor.h:
        * ace/Proactor.cpp :
        * ace/POSIX_Asynch_IO.cpp: Fixed the problem with terminating the
          Timer thread. Also, fixed the places where conversion between
          void * and ACE_POSIX_Asynch_Result. Used ACE_reinterpret_cast at
          these places.

Wed May 12 12:14:09 1999  Ossama Othman  <othman@cs.wustl.edu>

        * COPYING: Additional updates/clarifications suggested by Richard
          Stallman.

Wed May 12 00:25:57 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.h (ACE_Thread_Manager): Added clarification
          for the semantics differences among wait(), wait_grp() and
          wait_task().

Tue May 11 18:11:51 1999  James C. Hu <jxh@entera.com>

        * ace/config-sunos5.7.h: SunOS 5.7 (aka Solaris 7) does not have a
          limited select.

Tue May 11 17:11:51 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Conn_Test.cpp (spawn_threads): changed some ACE_NEW
          statements to ACE_NEW_RETURN.

Tue May 11 15:43:30 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: added ACE_THR_PRI_OTHER_DEF for NT, because MT_Cubit
          uses it.

Tue May 11 14:45:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Conn_Test.cpp: fixed use of status on platforms that lack
          fork.

Tue May 11 14:10:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-osf-4.0.h: added #define of
          ACE_NEW_THROWS_EXCEPTIONS, if exception handling is enabled.

        * tests/New_Fail_Test.cpp: removed workaround for DEC cxx, and
          modified error message to mention ACE_NEW_THROWS_EXCEPTIONS.

Tue May 11 12:02:03 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-win32-common.h: set __ACE_INLINE__ to 1 if not
          #defined.  It's scary when I trip over syntax errors on Win32
          :-)

Tue May 11 10:00:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.i: fixed name of unused argument for pSOS

        * ace/RB_Tree.{cpp, h}: moved enumerated type from template to
          non-templatized base class to make old g++ happy.

Mon May 10 22:59:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU: don't set VDIR to
          .shobj/ for VxWorks, because it uses the same .o files for
          static and shared libs.

        * include/makeinclude/platform_vxworks5.x_g++.GNU: disable RTTI
          for egcs, because the Tornado 1.0.x libs don't support it.  No
          harm in disabling for old g++.

Mon May 10 15:33:56 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/INET_Addr.cpp (string_to_addr): Fixed a mistake that
          occurred when integrating Jerry D. De Master
          <jdemaste@ipdinc.com> fix.  Thanks to Zoran and Jerry for
          reporting this.

Mon May 10 15:00:31 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACE-INSTALL.html: Changed to use ACE_NO_INLINE to supress
          inlining to match with the recent dsp file changes.  Added a
          link to Barry Hoggard's CORBA page which contains ACE related
          MSVC setting hints.

        * ace/Select_Reactor_Base.cpp (unbind): We need to make sure the
          reactor's suspend_set_ also gets cleaned up when unbinding a
          handler.  Thanks to Casey Lucas <clucas@sabre.com> for pointing
          this out.

Mon May 10 17:08:29 1999  James C. Hu <jxh@entera.com>

        * ace/ACE.cpp:
        * ace/config-sunos5.6.h:
        * ace/README: Added support to enter_recv_timedwait,
          enter_send_timedwait, handle_timed_complete, and
          handle_timed_accept to use poll() instead of select() if poll()
          is available and select() is known to have problems.  Created
          ACE_HAS_LIMITED_SELECT macro.  Certain versions of SunOS 5.6 do
          not correctly select on file descriptors that are larger than
          1023.

Mon May 10 13:32:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Conn_Test.cpp (spawn_threads): wait a maximum of 200
          seconds.  Carlos reported that the test sometimes hangs on Irix.

Mon May 10 12:14:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.cpp: fixed a dangling pointer bug in
          RB_Tree::delete_fixup.  Added pointer tests to all dereferences
          in this piece of code.

Mon May 10 11:35:18 1999  Ossama Othman  <othman@cs.wustl.edu>

        * COPYING: Made some updates suggested by Richard Stallman
          <rms@gnu.org> of the Free Software Foundation
          (http://www.fsf.org/).

Mon May 10 11:01:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/New_Fail_Test.cpp: DEC cxx catches its default,
          NoNamedException.  OK, I guess.

        * tests/Upgradable_RW_Test.cpp: added -f option, which enables
          FIFO thread scheduling.  Some platforms require superuser
          privilege to use it.  Also, wait a maximum of 1 second per
          iteration.  And, replaced some u_longs with u_ints.

        * tests/Thread_Manager_Test.cpp (main): wait a maximum of 60
          seconds, because the test sometimes hangs on SunOS 5.5.1 and
          SunOS 5.7.

Mon May 10 08:26:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/g++dep: added support for our Solaris 7 machines.

Sun May  9 18:07:24 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h:
        * configure.in: Added support/tests for
          ACE_LACKS_CHAR_RIGHT_SHIFTS and
          ACE_LACKS_CHAR_STAR_RIGHT_SHIFTS.

        * ace/README: Fixed typo.  ACE_LACKS_LINEBUFFERED_STREAMBUF was
          used twice.  Corrected the appropriate one to
          ACE_LACKS_UNBUFFERED_STREAMBUF.

Sun May 09 11:45:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.cpp added explicit scoping to RB_SearchResult
          parameter in RB_Tree<...>::find_node ().

Sun May 09 11:30:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/Makefile
          examples/Connection/non_blocking/Makefile
          examples/IPC_SAP/SPIPE_SAP/Makefile
          examples/IPC_SAP/TLI_SAP/Makefile
          examples/Reactor/Misc/Makefile
          examples/Service_Configurator/IPC-tests/client/Makefile
          examples/Service_Configurator/IPC-tests/server/Makefile
          netsvcs/lib/Makefile
          netsvcs/servers/Makefile
          tests/Makefile: ran make depend after adding new RB_Tree
          interface.

Sat May 08 19:30:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.{cpp, h, i}
          tests/RB_Tree_Test.cpp: finished implementing all methods for
          the ACE_Hash_Map_Manager_Ex compliant interface, fixed a bug in
          the internal tree search method (thanks to David Levine for
          pointing this out), and added a new section to the test that
          exercises the new bind and unbind methods.

Sat May 08 17:09:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * apps/Gateway/Gateway/Event_Channel.cpp (bind_proxy,subscribe):
          wrapped final return statement with ACE_NOTREACHED, to please DU
          cxx 6.2.

Sat May 08 08:49:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/CDR_Stream.h: only use unsigned long for Boolean with Green
          Hills 1.8.8 on Chorus, not 1.8.9.

        * ace/IOStream.h,README: added ACE_LACKS_CHAR_STAR_RIGHT_SHIFTS
          and ACE_LACKS_CHAR_RIGHT_SHIFTS support.

        * ace/config-chorus.h: added ACE_LACKS_CHAR_STAR_RIGHT_SHIFTS
          #define for g++.

        * ace/config-vxworks5.x.h: added ACE_LACKS_CHAR_RIGHT_SHIFTS
          #define for Green Hills 1.8.9.

Sat May 08 08:44:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.{cpp, h, i}
          tests/RB_Tree_Test.cpp
          apps/JAWS/PROTOTYPE/HTTPU/http_headers.cpp: Added more
          implementation code and necessary template instantiations for
          migration of RB_Tree class templates to conform to the
          ACE_Hash_Map_Manager API.

Sat May 08 03:59:52 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h: Re-ordered __ACE_INLINE__ macro check
          and definition so users can turn of inlining correctly.
          However, the right thing to do is to define ACE_NO_INLINE macro.

        * ace/ace_{dll,lib}.dsp: Moved RB_Tree.cpp to template folder and
          excluded it from being built.

        * ace/ace_lib.dsp:
        * performance-tests/Misc/basic_perf.dsp:
        * performance-tests/Misc/context_switch_time.dsp:
        * tests/version_tests/*.dsp: We should have used ACE_NO_INLINE
          instead of defining __ACE_INLINE__=0 to supress the use of
          inlining.  Thanks to Nick Sawadsky
          <Nick_Sawadsky@BrooksSoftware.com> for reporting this.

Fri May 07 23:05:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-vxworks5.x.h: added ACE_LACKS_LINEBUFFERED_STREAMBUF
          for Green Hills 1.8.9.

        * ace/README: added ACE_LACKS_LINEBUFFERED_STREAMBUF.

Fri May  7 19:39:43 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Message_Block_T.i: Found little bug in
          ACE_Locked_Data_Block<> default constructor.

Fri May 07 16:54:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.{cpp, h, i}: Reorganized and optimized internal
          methods, added read and write guards, implemented all public
          find and unbind methods for the interface comparable to
          ACE_Hash_Map_Manager_Ex.

Fri May 07 14:40:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_cxx.GNU: added, to support
          uniform use of cxx across different OS versions.

        * ace/config-osf1-4.0.h: conditionally #define DIGITAL_UNIX, to
          support definition in CFLAGS.

        * ace/config-osf1.h: added, to support easy migration to DU 5.0.

Fri May 07 11:00:52 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: OK on RedHat 6.0 Linux.

Fri May 07 08:58:47 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,i}: added some QNX support.  In OS.i, this mostly
          consisted of adding a !defined (ACE_LACKS_MUTEXATTR_PSHARED)
          check to _POSIX_THREAD_PROCESS_SHARED.  Thanks to Alain Magloire
          <alain@qnx.com> for providing this support.

Thu May  6 21:48:26 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h:
        * configure.in:
        * ace/OS.h:
        * ace/README:
        * ace/config-hpux11.h:
        * ace/config-irix6.x-g++.h:
        * ace/config-irix6.x-kcc.h:
        * ace/config-irix6.x-sgic++.h:
        * ace/config-linux-lxpthreads.h:
        * ace/config-osf1-4.0.h:
        * ace/config-sco-5.0.0-mit-pthread.h:
        * ace/config-sunos5.5.h: Removed all references to
          ACE_HAS_PTHREAD_SIGMASK.  This macro has been deprecated.

Thu May  6 20:12:57 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h:
        * configure.in: Added tests/support for ACE_LACKS_PTHREAD_SIGMASK,
          ACE_LACKS_TCP_NODELAY and ACE_LACKS_NULL_PTHREAD_STATUS.  Thanks
          to David for providing a test for ACE_LACKS_NULL_PTHREAD_STATUS.

Thu May 06 14:26:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/README,ace/Pipe.cpp (open): added support for
          ACE_LACKS_TCP_NODELAY.  Thanks to Alain Magloire <alain@qnx.com>
          for providing the patch.

Thu May  6 14:23:14 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Synch_T.cpp: Removed ACE_ALLOC_HOOK_DEFINE macros for the
          Guard<> objects, they don't need them (because they are
          allocated on the stack) and the HOOK_DECLARE macros where not
          used in the header file.

        * bin/count_lines: Several new file types, fixed computations when
          multiple modules are used.

Thu May 06 12:28:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-FMM.html: replaced a > with &gt; and added RCS Id
          string.

        * ACE-INSTALL.html: added link to docs/ACE-FMM.html.

Thu May 06 12:23:51 1999  Steve Huston  <shuston@riverace.com>

        * ace/OS.i (recvv, sendv): Added code to make these functions work
          on Win32 w/ Winsock 1.1.

Wed May 05 15:10:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: added ACE_U_ONE_SECOND_IN_*SECS.  They're typed and
          unsigned.  The old ACE_ONE_SECOND_IN_*SECS macros are retained
          for backward compatibility.

Wed May  5 13:58:25 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i: Don't use poll() for the implementation of
          ACE_OS::sleep(), it has bad resolution and it gives wrong
          results on Linux.

        * tests/High_Res_Timer_Test.cpp: Added new option to run several
          iterations of each interval.

Wed May 05 13:14:52 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp: Removed DllMain - Win32 does not have the gusto to
          handle the initialization/finalization in this way. It causes
          DLL dependency problems which result in early detachment of
          winsock, and possible network data loss in some cases.

        * ace/OS.cpp, Object_Manager.cpp: Clarified some comments
          regarding multiple ACE_OS_Object_Manager and ACE_Object_Manager
          objects in existence and how they're handled.

        * tests/ACE_Init_Test.cpp: Always does ACE::init and ACE::fini
          now.  This is one example of how to handle a non-console program
          in Win32.

Wed May 05 13:07:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/Makefile: replaced /bin/rm with $(RM) and removed clean
          pseudotarget.

Tue May 04 20:38:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * tests/RB_Tree_Test.cpp: Added missing explicit template
          instantiations for ACE_RB_Tree_Iterator_Base.  Thanks to Carlos
          O'Ryan for reporting this.

        * include/makeinclude/platform_psos_diab_ppc.GNU: added -g flag
          back into debug flags since it can easily be deactivated via
          make debug=0.

1999-05-04  Seth Widoff  <swidoff@cs.cmu.edu>

        * ace/Containers_T.cpp (ACE_Array_Base<T>::max_size): When
          resizing the array to be larger, the max_size method was copying
          in the contents of the older, smaller array, but not
          initializing the new elements.

Tue May  4 17:37:30 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * examples/Web_Crawler/Options.cpp (parse_args): Change the
          default options from "www.cs.wustl.edu" to "tao.cs.wustl.edu".

Tue May 04 16:24:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.{cpp, h, i}: Added deprecation comments to methods
          that are going to be replaced by the new Hash_Map_Manager
          compliant interface.  Factored out iterator base class, added
          reverse iterator.  Interim checkin since it all compiles and
          RB_Tree_Test runs clean.

Tue May 04 15:56:41 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp: Re-enabled DllMain (see Mon May 3 entry from Chris
          Gill).

        * ace/OS.cpp, Object_Manager.cpp: In ACE_OS_Object_Manager and
          ACE_Object_Manager, differentiate between The singleton instance
          and other instances when allocating and freeing per-process
          information.

        * tests/run_tests.bat: Added ACE_Init_Test.

Mon May  3 18:04:32 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/Proactor/test_aiocb_ace.cpp: Added this
          file. If this test is sucessful, ACE_POSIX_AIOCB_PROACTOR could
          be defined for a platform.

Mon May 03 09:35:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.cpp: fixed bug in ACE_RB_Tree::RB_delete_fixup in
          which a null pointer was dereferenced while trying to determine
          the color of the node that was being pointed to.  Per the RB
          Tree discussion in Cormen Lieserson and Rivest's "Introduction
          to Algorithms", after which this implementation is modeled, a
          nil node is implicity treated as having been colored BLACK.
          Thanks to Long Hoang <LHoang@hwdcsaws.cahwnet.gov> for reporting
          the problem and providing a test program that showed the bug.

Mon May 03 15:53:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU,
          tests/run_tests.vxworks,ACE-INSTALL.html: added support for
          shared lib builds.  Thanks to Ramiro Penataro Blanco
          <penataro@ll.iac.es> and James D. Rucker
          <jdrucker@huey.jpl.nasa.gov> for figuring this out, and
          providing detailed instructions for others to follow.

Mon May 03 15:20:00 1999 Kirthika Parameswaran  <kirthika@bambuca.cs.wustl.edu>

        * examples/Web_Crawler/main.cpp:
        * examples/Web_Crawler/Web_Crawler.{h,cpp}:
        * examples/Web_Crawler/Cached_Connect_Strategy_T.{h,i,cpp}:
        * examples/Web_Crawler/Caching_Strategies_T.{h,i,cpp}:
        * examples/Web_Crawler/Command_Processor.{h,cpp}:
        * examples/Web_Crawler/HTTP_URL.{h,cpp}:
        * examples/Web_Crawler/Iterators.{h,cpp}:
        * examples/Web_Crawler/Mem_Map_Stream.{h,cpp}:
        * examples/Web_Crawler/Optimal_Cache_Map_Manager_T.{h,i,cpp}:
        * examples/Web_Crawler/Options.{h,cpp}:
        * examples/Web_Crawler/URL.{h,cpp}:
        * examples/Web_Crawler/URL_Addr.{h,cpp}:
        * examples/Web_Crawler/URL_Status.{h,cpp}:
        * examples/Web_Crawler/URL_visitor.{h,cpp}:
        * examples/Web_Crawler/URL_Visitor_Factory.{h,cpp}:
        * examples/Web_Crawler/Makefile
        * examples/Web_Crawler/README

         This example is a HTTP client which crawls over the link provided
         and checks whether the links recusively are valid or not.
         This example was used to test teh auto-purging feature where the
         connections are removed from the connection cache when the process
         runs out of file descriptors.

Mon May 03 14:46:28 1999  Steve Huston  <shuston@riverace.com>

        * tests/ACE_Init_Test.dsp: Fixed to build on all configurations (for
          Intel anyway).

Mon May 03 10:30:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.38 released.

Mon May  3 09:56:06 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/INET_Addr.cpp (get_host_name): Make sure to check if
          get_host_name() fails and do something useful in this case.
          Thanks to Frank O'Dwyer <fod@brd.ie> for reporting this.

Mon May 03 09:35:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/ACE.cpp: disabled BOOL APIENTRY DllMain(HANDLE hModule,
          DWORD ul_reason_for_call, LPVOID lpReserved) by having it
          just return TRUE.  This function is used only on NT.  This
          is a temporary workaround for the problem of tao_idl
          crashing on NT, and will be replaced ASAP with a more
          complete fix to Object Manager initialization/cleanup at
          DLL load/unload time on NT.  Thanks to David Levine for
          suggesting this fix.

Mon May 03 09:27:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added guideline to put
          spaces around comment delimiters.  Thanks to Chris
          Gill for suggesting this.

Sun May 02 14:36:43 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: Added ghs back to the list of compilers for which
          ACE_NOTREACHED disappears.  It was causing warnings for
          many ACE and TAO files.

Sun May 02 08:21:13 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (pthread_sigmask): added ACE_UNUSED_ARGs to
          NOTSUP case.

        * ace/OS.i (pthread_sigmask),ace/config-chorus.h,ace/README:
          added ACE_LACKS_PTHREAD_SIGMASK.

Sat May 01 17:33:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp,Object_Manager.cpp: reverted this change because
          it causes a seg fault on NT:

        Thu Apr 29 13:41:52 1999  Steve Huston  <shuston@riverace.com>

        * ace/{OS.cpp Object_Manager.cpp}: Fixed leaking ACE_Object_Manager
          when config has #define ACE_HAS_NONSTATIC_OBJECT_MANAGER 0.

Sat May 01 12:06:57 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ACE.cpp:
        * ace/config-win32.h:  Reverted my previous change.  I didn't
          notice David had already fixed it.  Thanks David.

Sat May 01 01:48:29 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ACE.cpp (DllMain): Only use DllMain to control
          Object_Manager's lifecycle when
          ACE_USES_DLL_TO_MANAGE_THE_LIFECYCLE_OF_OBJECT_MANAGER is
          defined and we are building ACE as a DLL.

        * ace/config-win32.h: Defining
          ACE_USES_DLL_TO_MANAGE_THE_LIFECYCLE_OF_OBJECT_MANAGER =1, when
          compiling DLL version of ACE will cause then ACE::init/fini be
          called automatically for you in DllMain when ACE gets linked
          in/unlinked.

          Defining ACE_USES_DLL_TO_MANAGE_THE_LIFECYCLE_OF_OBJECT_MANAGER
          =1 automatically define ACE_HAS_NONSTATIC_OBJECT_MANAGER to 1
          and define ACE_DOESNT_INSTANTIATE_NONSTATIC_OBJECT_MANAGER.

Fri Apr 30 22:53:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: put Object_Manager back on the stack of main,
          instead of using ACE::init () and ACE::fini ().  It
          should be functionally equivalent, and then some:  if
          the user's main () returns, the Object_Manager will get
          properly destroyed if it's on the stack.  And, it's better
          for subset support if we avoid class ACE calls from OS.h.

        * include/makeinclude/rules.lib.GNU: cleaned up a bit.

Fri Apr 30 17:42:11 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/OS.i (pthread_sigmask):
        * ace/OS.h (ACE_OS): Added wrapper for <pthread_sigmask> to get
        the Proactor code compile on LynxOS.

        * ace/config-lynxos.h (ACE_HAS_AIO_CALLS):
         Enabled ACE_HAS_AIO_CALLS for LynxOS. Also enabled
         ACE_HAS_AIOCB_PROACTOR since LynxOS 3.0.0 has not got
         <pthread_sigmask> yet, so signal proactor cannot work correctly.

        * ace/POSIX_Proactor.cpp:
        * examples/Reactor/Proactor/test_aiosig_ace.cpp
        (setup_signal_delivery): Added ACE_OS:: scope to pthread_sigmask
        so that it works (fails!!) correctly on LynxOS.

        * examples/Reactor/Proactor/post_completions.cpp:
        * examples/Reactor/Proactor/test_timeout.cpp: Added 'main'
        function for platforms where only AIOCB_Proactor is enabled so
        that the test prints out a message.

        * examples/Reactor/Proactor/Makefile:

Fri Apr 30 14:44:12 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ACE-INSTALL.html: Added a note about manually cleaning out the
          ACE_wrappers directories on Win32, which could be required for a
          true start from scratch build.  Thanks to David Hooker
          <DHooker@uniview.net> for this insight.

Fri Apr 30 14:06:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * COPYING: Updated the COPYING file to reflect the use new of
          ACE(TM) and TAO(TM).

Fri Apr 30 13:23:22 1999  Steve Huston  <shuston@riverace.com>

        * docs/tutorials/017/Barrier_i.cpp:
        * docs/tutorials/018/token.cpp:  Added explicit template
          instantiations.

Fri Apr 30 12:11:36 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.i (gethostbyname2):

          Added an IPv4-only implementation.  If ACE_HAS_IP6 is not defined,
          the IPv4-only implementation will be used.

Fri Apr 30 12:11:50 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Basic_Types_Test.cpp: Added checks for sizeof(long) ==
          sizeof(void*) and sizeof(long) >= sizeof (a_function_pointer).
          Certain code in ACE depends on the assumptions.

Fri Apr 30 11:24:26 1999  Steve Huston  <shuston@riverace.com>

        * tests/ACE_Init_Test.cpp: Added compile-time change to adapt to
          build w/ static ACE lib and ACE_HAS_NONSTATIC_OBJECT_MANAGER.
        * tests/version_tests/ACE_Init_Test.dsp: Changes to build clean on
          all configurations.

Fri Apr 30 02:06:53 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Parse_Node.cpp (symbol): According to the new ANSI C++
          specification, casting a void* pointer to a function pointer is
          not allowed.  However, casting a void* pointer to an integer
          type that is large enough to hold the pointer value is legal.  I
          chose to cast the return value to long since it should be large
          enough to hold the void* pointer's value on most platforms. I am
          not sure if casting a long value to a function pointer is legal
          or not (can't find a good explanation in spec) but it prevent
          SunC++ 5.0 compilers from complaining about illegal pointer
          conversion.

        * ace/OS.h: Removed ACE_non_function_ptr_to_function_ptr_cast,
          it is no longer needed.

Fri Apr 30 00:36:23 1999  Ossama Othman  <othman@cs.wustl.edu>


        * ace/Get_Opt.cpp:
        * ace/TLI_Acceptor.cpp:
        * ace/TLI_Connector.cpp:

          Cast away const from string literals using ACE_const_cast to make
          Sun C++ 5.0 happier.

Thu Apr 29 18:32:43 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.h: Removed ghs from the list of compilers for which
          ACE_NOTREACHED disappears.  It was causing warnings for
          TAO/orbsvcs/orbsvcs/Naming/Persistent_Context_Index_T.cpp.

Thu Apr 29 19:48:25 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.{h,i} (ACE_OS):

          More IPv6 support.  Added support for the new IPv4/IPv6
          inet_ntop() and inet_pton() calls.  If ACE_HAS_IP6 is not
          defined, these calls will use IPv4 implementations (see
          Stevens' book "UNIX Network Programming - Volume I") and
          return an error if a family other than AF_INET is passed to
          them.

        * ace/OS.h:

          Define INET_ADDRSTRLEN and INET6_ADDRSTRLEN if they don't
          get defined after including <netinet/in.h>.

Thu Apr 29 18:32:43 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/README:
        * ace/OS.h (ACE_OS):
        * ace/OS.i (gethostbyname2):

          Added support for the gethostbyname2() system call.  It is only
          enabled if ACE_HAS_IP6 is defined.  When I have time, I'll add
          more IPv6 support.

Thu Apr 29 15:30:04 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/INET_Addr.cpp (string_to_addr): Added support to check for
          both "port numbers" and "port names".  Thanks to Jerry D. De
          Master <jdemaste@ipdinc.com> for suggesting this.

        * ace/Select_Reactor_T.h,
          ace/Reactor.h,
          ace/Select_Reactor_T.h,
          ace/TP_Reactor.h (ACE_TP_Reactor): Updated the documentation to
          clarify the purpose of the <restart> flag.  Thanks to Susan
          Liebeskind <shl@cc.gatech.edu> for reporting this.

Thu Apr 29 13:41:52 1999  Steve Huston  <shuston@riverace.com>

        * ace/{OS.cpp Object_Manager.cpp}: Fixed leaking ACE_Object_Manager
          when config has #define ACE_HAS_NONSTATIC_OBJECT_MANAGER 0.  Now
          both ACE_OS_Object_Manager and ACE_Object_Manager remember if they
          were dynamically allocated whether the above #define is used or not
          and correctly clean up and track the singleton properly.
          Thanks to David and Irfan for identifying this and helping with the
          solution.

Wed Apr 28 20:21:12 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Synch_T.h (class ACE_Anti_*_Guard): I had accidentally
          checked in the anti guard classes.  These are not needed since
          we decided to stick with the reverse lock class rather than the
          anti guard classes.

Wed Apr 28 18:02:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Added a new macro called
          ACE_non_function_ptr_to_function_ptr_cast to get around some
          compiler constrain.  In face, ANSI C++ standard prevents casting
          from a non-function pointer (e.g., void *) to a function
          pointer.  Currently, only egcs check for this condition.

        * ace/Parse_Node.cpp (symbol): Changed to use the new
          ACE_non_function_ptr_to_function_ptr_cast.

Wed Apr 28 16:53:16 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/Proactor/Aio_Platform_Test_C.cpp: Added this
        file, a simple C version of the
        $ACE_ROOT/tests/Aio_Platforms_Test.cpp. Useful for submitting bug
        reports etc.

        * ace/Proactor.cpp:
        * ace/POSIX_Asynch_IO.cpp: Fixed old g++ warnings

Wed Apr 28 15:39:14 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Parse_Node.cpp (symbol): Use reinterpret_cast to cast
          dlsym's return value.

Wed Apr 28 12:40:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Synch_T.{i,cpp} (~ACE_Reverse_Lock): uninlined destructor.
          See docs/ACE-guidelines.html for an explanation of why a
          class should have at least one non-inline, non-pure virtual
          function if it has any virtual functions.  egcs 1.1.1b
          needed this one.

Wed Apr 28 09:02:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-sunos5.5.h: It appears that SunC++ 5.0 wants
          ACE_HAS_THR_C_DEST to be defined.

        * ace/SString: Clarified the comments a bit to avoid confusion.
          Also, moved the definition of ACE_SString to AFTER ACE_CString
          and ACE_WString since they are more general.  Thanks to Kevin
          Lyda <kevin.lyda@trintech.com> for reporting this.

Tue Apr 27 20:59:52 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/clients/Naming: Moved the README file into the Client/
          directory since that's what it described.

        * netsvcs/clients/Naming/Client/Client_Test.cpp: Reformatted some
          code to conform to ACE programming guidelines.

        * ace/Naming_Context.cpp (parse_args): Oops, fixed a braino
          related to strcmp().  Thanks to Valery Arkhangorodsky
          <avalery@balisoft.com> for reporting this.

Tue Apr 27 18:00:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/OS.cpp (ACE_OS_CString, ACE_OS_WString): Fixed one-off error
          in allocating new string's memory.

Tue Apr 27 17:36:28 1999  Ossama Othman  <othman@cs.wustl.edu>

        * m4/threads.m4:

          Restructured thread detection test so that it properly detects
          threads on platforms that provide PTHREADS backward compatibility
          macros, such as Digital Unix 4.0 and 5.0.

Tue Apr 27 18:56:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/Containers_T.{cpp, h}
          tests/OrdMultiSet_Test.cpp: added a workaround for a problem with
          implicit template instantiation and a do-nothing destructor
          definition.  Thanks to Sarmeesha Reddy <sreddy@tr.comm.mot.com> and
          Steven Tine <stevent@tr.comm.mot.com> for reporting this.

        * include/makeinclude/platform_psos_diab_ppc.GNU: changes to use
          the board support package linker file. Thanks to Sarmeesha
          Reddy <sreddy@tr.comm.mot.com> and Steven Tine
          <stevent@tr.comm.mot.com> for contributing this change.

Tue Apr 27 16:30:57 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/UNIX_Addr.h (ACE_UNIX_Addr):

          Corrected typographical error in comment.

Tue Apr 27 12:57:06 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:

          Removed `tests/log/Makefile' from the list of files to
          generate (i.e. removed from AC_OUTPUT macro call).

        * tests/Makefile.am:

          Corrected a typo.  I neglected to add "_SOURCES" to the end
          of the Collection_Test source variable variable.  Also added
          more missing tests to the list of test programs.  Commented out
          Cache_Manager_Test.  It appears to need a header that doesn't
          exist.

        * ace/Makefile.am (pkginclude_HEADERS):

          Removed `Timer_Queue.i' from the list of headers.

        * bin/autogen:
        * bin/bootstrap:

          Renamed the `autogen' script to `bootstrap'.

Tue Apr 27 11:54:53 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:

          Temorarily removed my experimental C++ libtool support so that
          I can get a semi-working test distribution out on the net.

        * ltconfig:
        * ltmain.sh:

          Reverted to more stable version, i.e. w/o my C++ support.

        * m4/threads.m4:

          Added KAI C++ thread flag check.

Tue Apr 27 11:45:40 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Collection_Test.cpp (main): Added some additional array
          tests and fixed template instantiation errors.  Thanks to David
          Levine for pointing them out.

        * ace/OS.h (ACE_DES_FREE): Changed all the ACE_DES* macros to
          check for zero pointers.  Thanks to Torsten Kuepper
          <kuepper2@uni-wuppertal.de> for pointing this bug out.

Tue Apr 27 11:08:35 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Basic_Types.h: Forced KAI compiler to use ACE_U_LongLong if
          ACE_LACKS_LONGLONG_T is defined.

        * ace/DLL.cpp:
        * ace/Service_Config.i:
        * ace/Service_Object.i:
        * ace/INET_Addr.cpp: Some CE related changes.

Tue Apr 27 00:03:16 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Collection_Test.cpp (main): Added test code for ACE_Array.

Mon Apr 26 23:55:43 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Synch_T.h (class ACE_Reverse_Lock): Removed constructor that
          created the lock.  There were two reasons for this: (a) it was
          unrealistic that the reverse lock would own and create the
          regular lock and (b) this constructor made it impossible that
          ACE_Reverse_Lock can be used with ACE_Lock (the abstract
          class).  Thanks to Carlos for pointing this out.

Mon Apr 26 21:43:23 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile.am (pkginclude_HEADERS, libACE_IPC_la_SOURCES):

          Added ATM_Addr sources to these variables.

        * ace/Makefile.am (EXTRA_libACE_la_SOURCES):

          Accidentally removed this variable.  It is needed for
          conditionally built sources, such as `gethrtime.cpp'.

        * tests/Makefile.am:

          Added newly added tests to the list of test programs to be built.
          Changed "noinst_PROGRAMS" variable to "check_PROGRAMS" so that
          tests only get built when a `make check' is issued by the user.

Mon Apr 26 19:29:25 1999  Ossama Othman  <othman@cs.wustl.edu>

        * tests/Reverse_Lock_Test.cpp (main):

          ACE_START_TEST macro had "Thread_Mutex_Test" instead of
          "Reverse_Lock_Test."

Mon Apr 26 17:01:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp (DllMain): Re-enabled this for use on Win32.

        * ace/OS.h (main): On non-pSoS, use ACE::init, ACE::fini rather than
          creating object manager instances on the stack.  Allows a single
          instance regardless of program type; especially helpful on Win32.

        * ace/OS.cpp (ACE_OS_Object_Manager ctor):
        * ace/Object_Manager.cpp (ACE_Object_Manager ctor):
          Don't set instance_ if it was already set.  So if two
          ACE_Object_Manager instances end up getting created, the first one
          stays The Instance, and the second gets used privately by its
          creator.  Previously, the original was forgotten.  Thanks to David
          Levine for working out this and the above details with me to get the
          Win32 crowd in business without platform-specific hacks.

Mon Apr 26 16:43:32 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Asynch_IO_Impl.h (ACE_Asynch_[Read|Write]_File_Impl):
          Declared the read/write pure virtual methods of
          ACE_Asynch_[Read|Write]_Stream_Impl again in these class to
          avoid KAI compiler's overwriting pure virtual function
          warnings.

Mon Apr 26 10:54:23 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/High_Res_Timer.h:
          Moved the static method hrtime_to_tv to the public section. It
          is useful outside this class.

        * ace/Synch_T.cpp:
          The default constructor for ACE_Reverse_Lock should not allocate
          the locking mechanism, otherwise it cannot work with ACE_Lock.

Mon Apr 26 07:30:51 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (fstat): Changed to use CE's implementation and added
          some features that're supported on other Win32 platforms.  The
          original implementation for Win32 closed down the file handle
          accidentally which is not a "Good Thing[TM]".  Thanks to Dominic
          Williams <dom@connected-place.co.uk> for pointing this out.

Sun Apr 25 21:35:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/ACE.{h,cpp},OS.{h,cpp},Object_Manager.{h,cpp} (init,fini):
          moved init_fini_count_ from ACE Object_Managers to ACE, so that
          it is only used via ACE::init () and ACE::fini ().  Thanks
          to Steve Huston for pointing out that the old way didin't work
          if an Object_Manager was created prior to starting main (),
          and there were ACE::init ()/ACE::fini () calls in main ().

Sun Apr 25 16:59:21 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_kcc.GNU: Fixed incorrect
          compiler flags.

        * ace/config-sunos5.7.h: Added definition of uint64_t on KAI.

        * ace/config-kcc-common.h: Changed to use non-static object
          manager.
          Defined ACE_SIZEOF_LONGLONG.  KAI compiler has type long long.

        * ace/OS.h: ACE_NOTREACHED should expand to nothing on KAI
          compiler.

        * ace/CDR_Stream.h (ACE_CDR): KAI compiler doesn't have
          longlong_t.

        * ace/Basic_Types.h: KAI compiler should define ACE_UINT64 as
          unsigned long long.

Sun Apr 25 14:52:18 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * COPYING,
          TAO/COPYING: Updated the ACE+TAO COPYING information to
          emphasize the relationship to open source.  Thanks to Malcolm
          Spence <spence_m@ociweb.com> for suggesting the wording.

Sat Apr 24 23:03:31 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ACE_wrappers/ace/POSIX_Asynch_IO.cpp
        * ACE_wrappers/ace/POSIX_Asynch_IO.h
        * ACE_wrappers/ace/POSIX_Proactor.cpp
        * ACE_wrappers/ace/POSIX_Proactor.h
        * ACE_wrappers/ace/Proactor.cpp
        * ACE_wrappers/ace/Proactor.h
        * ACE_wrappers/ace/Proactor_Impl.h

        * ACE_wrappers/examples/Reactor/Proactor/Makefile
        * ACE_wrappers/examples/Reactor/Proactor/README
        * ACE_wrappers/examples/Reactor/Proactor/test_aiocb.cpp
        * ACE_wrappers/examples/Reactor/Proactor/test_aiosig.cpp
        * ACE_wrappers/examples/Reactor/Proactor/test_aiosig_ace.cpp
        * ACE_wrappers/examples/Reactor/Proactor/test_proactor.cpp
        * ACE_wrappers/examples/Reactor/Proactor/test_timeout.cpp

        - Completed Multithreading of POSIX_SIG_Proactor.

        - Introduced another constructor for ACE_POSIX_SIG_Proactor for taking
          signal mask to be used with the Proactor.

        - Thanks to Dave Butenhof <butenhof@zko.dec.com> for helping a lot to
          understand the various things in the POSIX4 standard.

        - Thanks to Dave suggestion of keeping null_handler for the sigaction
          to real-time signals. With this and a couple of other correct POSIX
          things SIG proactor is now working with in Solaris 2.7.

        - Lynx OS doesnt support <pthread_sigmask>, so it couldnt be
          multithreaded. Enabled AIOCB_Proactor for this platform.

        - Added an example to make use of the real-time signal numbers for the
           asynchronous I/O calls.

        * examples/Reactor/Proactor/test_posix_sig_proactor.cpp: This
          program demonstrates how to post fake completions to The
          Proactor. It also shows the how to specify the particular
          real-time signals to post completions.

        * ace/config-lynxos.h: Enabled ACE_POSIX_AIOCB_PROACTOR for this
          platform, since <pthread_sigmask> was not available. Without
          <pthread_sigmask>, SIG_Proactor can not work correctly.

        * ace/config-linux-lxpthreads.h: Removed ACE_HAS_AIO_CALLS. Even
          simple aio calls test is hanging.

Sat Apr 24 13:09:27 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Containers_T.h: Added allocator support to ACE_Array.
          Thakns to Paul Francis <pfrancis@dkl.com> for contributing this.

        * ace/Future.h (class ACE_Future): Make sure to mention that
          get()'s ACE_Time_Value must be in absolute, not relative, time.
          Thanks to Ian MacDonald <ianmacd@bg.com> for reporting this.

Sat Apr 24 07:24:51 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Reverse_Lock_Test.cpp: removed ACE_Guard<ACE_SYNCH_MUTEX>
          instantiation because it's in ace/Synch.cpp.

        * ace/config-vxworks5.x.h: added ACE_THR_PRI_OTHER_DEF
          #define, for use by MT_Cubit.

        * ace/Object_Manager.cpp, OS.cpp (fini): unconditionally set
          instance_ to 0 at the end.  This allows init () to
          work properly if called after fini (), such as for
          repeated test on VxWorks.  Thanks to Todd Mullanix
          <Todd.Mullanix@sylantro.com> for reporting this.

Fri Apr 23 17:53:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          for PPC860, changed -m=860 to -mcpu=860.  Thanks to
          Todd Mullanix <Todd.Mullanix@sylantro.com> for reporting this.

Fri Apr 23 15:48:31 1999  James Hu <jxh@entera.com>

        * ace/OS.h:
        * ace/OS.i:
        * ace/README:
        * ace/config-sunos5.5.h:  added support for the memchr
          library call, and created ACE_HAS_MEMCHR macro.

Fri Apr 23 10:48:31 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/New_Fail_Test.cpp (main): added uses of the
          two static functions when they're not otherwise used,
          to prevent g++ warnings.

Fri Apr 23 09:11:24 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Reverse_Lock_Test.cpp:
          Fixed template instantiation problems.

Thu Apr 22 21:39:44 1999  Ossama Othman  <othman@cs.wustl.edu>

        * tests/Makefile.am:

          Added support to create the `tests/log' directory after
          the tests have been built.

        * tests/log/Makefile.am

          The above change deprecates this Makefile.am file.  Thanks to
          Nanbor for motivating this change.

Thu Apr 22 20:50:30 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.i: Modified reset() to reset all the message
          blocks, instead of just the first one as it had previously done.
          Thanks to Jerry D. De Master <jdemaste@ipdinc.com> for pointing
          out the problem and suggesting a fix.

Thu Apr 22 19:40:52 1999  Steve Huston  <shuston@riverace.com>

        * ace/OS.h: Adjust exception thrown at out-of-memory for HP-UX, aC++.

        * ace/config-hpux-10.x-hpc++.h: Add ACE_NEW_THROWS_EXCEPTIONS.

Thu Apr 22 19:30:01 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Synch_T.h (class ACE_Reverse_Lock): Added an interesting
          adapter class that changes a lock into a reverse lock, i.e.,
          acquire() on this class calls release() on the lock, and
          release() on this class calls acquire() on the lock.

          One motivation for this class is when we temporarily want to
          release a lock (which we have already acquired) but then
          reaquire it soon after.  An alternative design would be to add a
          Anti_Guard or Reverse_Guard class which would release() on
          construction and acquire() destruction.  However, there are
          *many* varieties of the Guard class and this design choice would
          lead to at least 6 new classes.  One new ACE_Reverse_Lock class
          seemed more reasonable.

        * tests/Reverse_Lock_Test.cpp: Test for the new ACE_Reverse_Lock
          class.

        * tests/Env_Value_Test.cpp (main): Fixed UNICODE string
          concatenation problem.

        * tests/version_tests: Added a bunch of missing project files.

        * ace/ace_lib.dsp: Added missing files.

Thu Apr 22 19:10:52 1999  Steve Huston  <shuston@riverace.com>

        * ace/ATM_Addr.cpp: Put in class's consts for non-FORE platforms.

Thu Apr 22 17:05:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/auto_compile_win32.pl: Added version_tests.

        * include/makeinclude/platform_sunos5_kcc.GNU: Makefile macros for
          KAI C++ compiler.

        * ace/config-sunos5.5.h: Added KAI C++ compiler support.

        * docs/exceptions.html: Explicitly state that ACE try macros will
          replace TAO try macros and advise users to take action if they
          are still using TAO try macros.  Thanks to Don Busch
          <busch_d@ociweb.com> for pointing this out.

Thu Apr 22 15:07:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          added PPC860 support.  Thanks to Todd Mullanix
          <Todd.Mullanix@sylantro.com> figuring out how to
          support it, with help from Thomas Mehrkam <Thomas_Mehrkam@i-o.com>
          and Hai Vu <Hai_Vu@Mitel.Com>.

Thu Apr 22 13:26:26 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/XtReactor.cpp (remove_handler_i): In the registration phase,
          we registered first with ACE_Select_Reactor and then with X.
          Now we are now doing things in reverse order.  Thanks to JM
          Strauss <jms97@club-internet.fr> for contributing these changes.

Thu Apr 22 13:23:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * include/makeinclude/platform_psos_diab_ppc.GNU: commented out -g
          switch which was triggering a bug in the Diab 4.2b compiler when
          compiling in debug information.  This is supposed to be fixed in
          the 4.3a release of the Diab compiler.  The ACE tests all compile
          now for pSOS/PPC.  Thanks to Sarmeesha Reddy <sreddy@tr.comm.mot.com>
          for reporting the bug to Diab and obtaining the workaround.

Thu Apr 22 10:46:17 1999  Steve Huston  <shuston@riverace.com>

        * apps/JAWS/server: Added $(ACELIB) to LDLIBS to build libJAWS on AIX
          with xlC.

        * tests/New_Fail_Test.cpp: Added __GNUG__ to the platforms which do not
          actually perform the test; added some more explanation and a better
          log message for when it doesn't actually run.

Thu Apr 22 10:28:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-minimal.h: removed suppression of ACE_TSS_EMULATION
          and enable of ACE_USE_THREAD_MANAGER_ADAPTER.  They're no
          longer necessary with the clean OS.cpp.

Thu Apr 22 08:52:48 1999  Steve Huston  <shuston@riverace.com>

        * tests/New_Fail_Test.cpp: Fixed to compile clean without exceptions.

        * tests/run_tests.{sh bat}: Added New_Fail_Test.

Wed Apr 21 16:41:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Reactor_Performance_Test.cpp (main): added 10 second
          time limit to run_event_loop () call.  That prevents the
          test from hanging forever if some of the connections
          are lost.

        * tests/Priority_Reactor_Test.cpp: default to 5 children
          instead of 10 on LynxOS.  Beyond 8, the test seems to
          take forever on LynxOS 3.0.0.

        * tests/run_tests.sh: enabled Reactor_Performance_Test,
          Priority_Reactor_Test, Time_Service_Test, and Tokens_Test
          on LynxOS.

Wed Apr 21 16:35:21 1999  Steve Huston  <shuston@riverace.com>

        * tests/New_Fail_Test.cpp: Test to be sure that the ACE_NEW[_RETURN]
          stuff works correctly when heap is exhausted.
        * tests/Makefile: Added New_Fail_Test.
        * tests/tests.dsw, New_Fail_Test.dsp: Add new test to MSVC.

Wed Apr 21 15:35:44 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp: On Win32, with ACE_HAS_NONSTATIC_OBJECT_MANAGER, use
          DllMain to do ACE::init() and ACE::fini().

        * tests/ACE_Init_Test.dsp,
        * tests/ACE_Init_Test.{cpp h},
        * tests/ACE_Init_TestDlg.{cpp h},
        * tests/ACE_Init_Test.(ico rc rc2 res},
        * tests/ACE_Init_Test_(Resource StdAfx}.h: New test to be sure that
          ACE DLL is initialized properly from an MFC app.

        * tests/tests.dsw: Added ACE_Init_Test.dsp project.

Wed Apr 21 14:59:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (ACE_OS_Object_Manager::fini): on LynxOS only,
          disabled ACE_{recursive/thread}_mutex_destroy () calls, because
          they failed on LynxOS in forked children.  The prevents
          the failure message from being printed, with no apparent
          ill effect.

Wed Apr 21 10:06:11 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU: Moved -lthread from
          the all-Orbix section to the MT-Orbix section for LIBS.

Wed Apr 21 09:25:16 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Upgradable_RW_Test.cpp (main): replaced ACE_SCHED_FIFO
          with THR_SCHED_FIFO in activate call.  Thanks to Carlos for
          finding this subtle error.

Wed Apr 21 03:34:18 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.37 released.

Tue Apr 20 22:55:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (thr_join): ifdef ACE_LACKS_PTHREAD_NULL_STATUS,
          provide the address of a temporary variable for the status
          argument of ::pthread_join (), if the caller passed 0.

        * ace/config-lynxos.h,README: added ACE_LACKS_PTHREAD_NULL_STATUS.
          LynxOS 3.0.0 fails ::pthread_join () calls with EFAULT
          if the second (status) argument is 0.

Tue Apr 20 21:53:32 1999  Joe Hoffert <joeh@cs.wustl.edu>

        * examples/IPC_SAP/TLI_SAP/Makefile: Had inadvertently checked in
          local changes. Now undoing these changes.

Tue Apr 20 18:25:45 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/{SOCK,TLI,LSOCK,Asynch}_Acceptor.h: Replaced the use of the
          hard-coded backlog value of 5 with ACE_DEFAULT_BACKLOG.  Thanks
          to Irfan for motivating this.

        * ace/OS.h: Added a new (overriddable) macro called
          ACE_DEFAULT_BACKLOG that's used to control the default number of
          connections that can be accepted by an OS.  The default value is
          5.

Tue Apr 20 18:22:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/Map_T.i
          ace/config-psos-diab-mips.h
          ace/config-psos-diab-ppc.h
          ace/config-psos-diab.h
          include/makeinclude/platform_psos_diab_ppc.GNU
          tests/Handle_Set_Test.cpp
          tests/Process_Strategy_Test.cpp: fixed the remaining tests
          for which compiler bug workarounds were available for pSOS
          PPC with the Diab 4.2b compiler.

Tue Apr 20 16:41:39 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.cpp (num_tasks_in_group): Make sure we are
          not searching for a null task.  Thanks to Umar Syyid
          <usyyid@hns.com> for pointing this out.

Tue Apr 20 15:10:33 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Reactor_Performance_Test.cpp: Changed the default number
          of connections (<opt_nconnection>) from 20 to 5 for NT.  This
          seems reasonable since the default backlog is 5.  Once we have
          the ability to set the backlog from the ACE_Acceptor class, we
          can increase this number.

Tue Apr 20 13:55:34 1999  Joe Hoffert <joeh@cs.wustl.edu>

        * ace/OS.i: Fixed ACE_OS::t_free to free memory if pointer is not
          null.

        * ace/TLI.h: Added default ACE_XTI_ATM_DEVICE.

        * ace/TLI_Connector.cpp: Disabled non-blocking connects for XTI/ATM
          since FORE's drivers have problems with this. Also, fixed t_alloc
          memory leaks.

        * ace/ATM_Addr.cpp: Added code formatting change.

        * examples/IPC_SAP/TLI_SAP/CPP-ATM-{server,client}.cpp: Added
          the use of ACE_XTI_ATM_DEVICE

Tue Apr 20 13:30:51 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/ace.icc: Added a configuration file for creating a shared
          library with Visual Age C++.

Mon Apr 19 23:50:25 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Time_Service_Test.cpp (main): Fixed error message.

        * ace/Connector.cpp (handle_close): Removed unused argument
          <mask>.

Mon Apr 19 17:17:47 1999  Steve Huston  <shuston@riverace.com>

        * docs/tutorials/tutorials.dsw: Fixed project file name for 019-021.

Mon Apr 19 17:02:42 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Connector.cpp (handle_close): There is no need to call
          cancel_timer() or remove_handler() from handle_close().  Removal
          of all svc tuples from the <reactor> is done by <cleanup_AST>.

Mon Apr 19 16:45:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},Object_Manager.{h,cpp} (ACE_OS_Object_Manager,
          ACE_Object_Manager: added static counter to match init ()/fini ()
          calls.  Don't destroy Object_Managers until final fini () call.
          Thanks to Ian MacDonald <ianmacd@bg.com> for tracking down
          the problem with multiple DLLs in a process.  This change
          delays destruction of the ACE_Object_Manager until the final
          fini () call.

Mon Apr 19 15:24:55 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/TLI_Stream.cpp (ACE_TLI_Stream): Make sure to set the value
          of rwflag_ to 0 so that purify is happy.  Thanks to Joe Hoffert
          for reporting this.

Mon Apr 19 14:35:42 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/IPC_SAP/UPIPE_SAP/ex2.cpp (supplier):
        * examples/IPC_SAP/UPIPE_SAP/ex3.cpp (consumer):

          Avoided annoying g++ warning about <auto_ptr> by explicitly
          making a temporary. Thanks to David for pointing this out.

Sun Apr 18 21:52:43 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-linux-common.h: moved ACE_LACKS_MADVISE to
          non-glibc section.  Thanks to JM Strauss <jms97@club-internet.fr>
          for reporting that it wasn't on a Linux system with a
          2.0.35 kernel.

Sun Apr 18 16:36:30 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/config-linux-common.h (ACE_LACKS_MADVISE):

          Re-enabled #define ACE_LACKS_MADVISE.  Linux doesn't appear
          to have an madvise() system call.

        * configure.in:
        * tests/Makefile.am:

          Added libtool support for modules (dlopened libraries).

Sun Apr 18 08:48:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Auto_Ptr.i: reordered inline methods to avoid use before
          definition.  Fixed a few ACE_TRACE comments.

Sun Apr 18 00:26:28 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Notify_Performance_Test.cpp (main):
        * tests/Reactor_Performance_Test.cpp (main):
        * tests/Priority_Reactor_Test.cpp (main):

          Avoided annoying g++ warning about <auto_ptr> by explicitly
          making a temporary. Thanks to David for pointing this out.

Sat Apr 17 18:52:38 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Memory_Pool.cpp (acquire): Changed use of auto_ptr.

        * ace/Auto_Ptr.i (operator=): Changed <a> to <rhs>.  Thanks to
          David Levine and Jean-Marc Strauss <strauss@club-internet.fr>
          for reporting this.

Sat Apr 17 08:34:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Naming/Makefile,performance-tests/Misc/Makefile,
          tests/Makefile,all netsvcs Makefiles:
          updated for proper support of ACE subsets, with BIN2/LIB2/SHLIB2.

Fri Apr 16 22:14:36 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Auto_Ptr: Made several changes to bring the implementation
          up to the specification:

          - Made the constructors take non-const parameters.
          - Made release() non-const.
          - Added reset().

          Thanks to Simeon Simeonov <simeons@allaire.com>, Rainer Blome
          <blome@de.ibm.com>, Jody Hagins <jody@atdesk.com>, and John
          Mulhern <John.Mulhern@lawson.com> for helping.

        * tests/Reactor_Performance_Test.cpp: Updated to work with new
          auto pointer implementation.

Fri Apr 16 19:36:35 1999 Alexander Babu Arulanthu <alex@cs.wustl.edu>

        * ace/Proactor.h (ACE_Proactor): Switched the order of TIMER_QUEUE
        and delete_implementation in the constructor.

        * examples/Reactor/Proactor/test_multiple_loops.cpp: Fixed to work
        on the WIN32 correctly. This can work only on WIN32 (combining
        Proactor with Reactor's event loop). So I have put a #if defined
        around the file.

Fri Apr 16 18:09:44 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Conn_Test.cpp (server): If we timeout on accept(), it is
          not an error, and should not be reported as one. Thanks to
          Thomas Mehrkam <Thomas_Mehrkam@i-o.com> for pointing this out.

Fri Apr 16 13:08:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},ACE.{h,cpp}: (read_n,send_n,write_n): moved
          from ACE to ACE_OS, so that the uses in OS.cpp could be localized.
          The ACE versions are now just wrappers over the ACE_OS
          versions, for backward compatibility.  Thanks to
          Erik Ivanenko <erik.ivanenko@utoronto.ca> for reporting
          that OS.cpp used a couple of the ACE static member functions.

Fri Apr 16 10:13:14 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.nested.GNU,ACE-INSTALL.html: added
          support for recursive make invocations with Windows NT's shell.
          Thanks to Dave Steele <Dave_Steele@Mitel.COM> for diagnosing the
          problem, and Tres Seaver <tseaver@palladion.com> for providing
          the wild NT FOR command.  Check it out, Darrell.

Fri Apr 16 07:52:11 1999  Darrell Brunsch  <brunsch@cs.wustl.edu>

        * ace/High_Res_Timer.cpp: Fixed my previous fix with
          calibrate being called on Windows NT when a high-res
          timer of 1 Mhz was being found.  Calibrate should not
          be called on NT now.  Thanks to Zoran Ivanovic
          <zorani@pathcom.com> for noticing this.

        * ace/Profile_Timer.cpp: Integrated the patch from Andy
          Marchewka <AndyM@who.net> for returning rusage information
          from elapsed_time.

Thu Apr 15 16:50:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated discussion of "dir unexpected"
          error when building for VxWorks on NT.  Thanks to
          Dave Steele <Dave_Steele@Mitel.COM> for providing the
          insight.

Thu Apr 15 14:04:36 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.lib.GNU: don't call $(RANLIB)
          if it is null.

        * include/makeinclude/platform_vxworks5.x_{g++,ghs}.GNU: removed
          RANLIB definition, so that it will be null.  This prevents
          calling "true" on NT hosts.

        Thanks to Thomas Mehrkam <Thomas_Mehrkam@i-o.com> for reporting
        that his NT host doesn't have "true".

Thu Apr 15 14:00:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.{h, i}: simplified the conditional compilation logic
          for a couple of the pSOS-specific ACE_OS methods, removed a
          handful of marker comments, added a conditional compilation
          branch for pid_t declaration.

Wed Apr 14 22:40:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.sh: call run_tests.check via sh, to support
          platforms that don't have /bin/sh.  Thanks to Thomas Mehrkam
          <Thomas_Mehrkam@i-o.com> for reporting that his NT host doesn't
          have /bin/sh.

Wed Apr 14 18:56:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.{h, i}
          ace/config-psos-diab-ppc.h
          include/makeinclude/platform_psos_diab_ppc.GNU: changes to adapt
          the pSOS Diab 68k/MIPS port to PPC.  Many thanks to Sarmeesha
          Reddy <sreddy@tr.comm.mot.com> and Steven Tine
          <stevent@tr.comm.mot.com> for contributing these changes.

Wed Apr 14 17:06:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-vxworks5.x.h: added #define ACE_HAS_DLL 0.
          Thanks to Thomas Mehrkam <Thomas_Mehrkam@i-o.com> for
          reporting that it's necessary on NT hosts.

Wed Apr 14 13:10:48 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/config-sunos5.7.h:
                Enabled ACE_HAS_AIO_CALLS for Solaris
                7. ACE_POSIX_AIOCB_PROACTOR works now on this.
        * examples/Reactor/Proactor/test_aiocb.cpp: Updated comments.
        * ace/config-sunos5.6.h: Removed the ACE_AIORETURN/ERROR macros.
        * ace/Proactor.cpp (ACE_Proactor): Removed debug print statments.
        * ace/config-lynxos.h: Removed the ACE_AIORETURN/ERROR macros.
        * ace/POSIX_Proactor.cpp:
        * ace/WIN32_Asynch_IO.h:
        * ace/WIN32_Asynch_IO.cpp:
        * ace/WIN32_Proactor.h:
        * ace/WIN32_Proactor.cpp:
        * ace/Proactor_Impl.h:
        Completed committing changes related to the <signal_number>
        additions done earlier.

Wed Apr 14 09:07:38 EDT 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * ace/POSIX_Proactor.cpp:

          Several methods were missing the "int signal_number" parameter
          that was added as mentioned in the log entry below. In addition,
          an undefined ACE_SIG_AIO flag was used. I found a log entry in
          ChangeLog-98b which says that ACE_SIG_AIO is ACE_SIGRTMIN. So I
          replaced the 5 occurrences of ACE_SIG_AIO with ACE_SIGRTMIN.

Wed Apr 14 02:34:13 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        Added additional parameter <int signal_number> to all the Asynchronos
        Operation method so that we can specify which real-time signal should
        be used for each of  the Asynchronous Operation. This only makes sense
        in the ACE_SIG_Proactor configuration.

        * ace/Asynch_IO_Impl.h:
        * ace/Asynch_IO.h:
        * ace/Asynch_IO.cpp:
        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Asynch_IO.cpp:
        * ace/POSIX_Proactor.h:

        - For each asynchronous call issued, the real-time signal is
          registered with the Proactor so that it can wait for the completions
          using that signal. Previously, the signal number for all the
          operations was the same signal and it was hard coded.

        - <register_aio_with_proactor> method which earlier existed only for
          <AIOCB_Proactor> has been added to <SIG_Proactor>
          also. <SIG_Proactor> just takes the <signal_number> from the result
          object and registers the signal number. Registering involves,
          masking the signal, setting the signal delivery for that RT signal
          etc.

        - Allowing to specify signal number for each operation can be useful,
          since the order in which the completions are delivered from the
          completion queue, is based on the signal numbers in addition to the
          priority. Applications might want to leverage this.

        * ace/OS.h:
        OS.h has been defined with ACE_SIGRTMIN and ACE_SIGRTMAX, which are
        defined to SIGRTMIN and SIGRTMAX respectively, for POSIX4
        platforms. For others, they are 0.

Tue Apr 13 15:29:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Object_Manager.cpp: moved ACE_Service_Config signal
          handler allocation from constructor to init ().  Tidy,
          tidy, tidy.

Tue Apr 13 14:52:15 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Addr.cpp: Fixed g++ warnings of unused parameters.

Tue Apr 13 14:47:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Basic_Types_Test.cpp (main): replaced call to sysconf ()
          with ACE_OS::sysconf ().  Thanks to Erik Ivanenko
          <erik.ivanenko@utoronto.ca> for noticing this.

Tue Apr 13 14:17:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp: replaced use of ACE_TSS<T> with ACE_WIN32 or
          ACE_HAS_TSS_EMULATION with native use of ACE_OS TSS, to remove
          dependency on ace/Synch.h.  Also, changed ACE_OS::NULL_key to
          be -1 instead of 0 with ACE_HAS_TSS_EMULATION.

Tue Apr 13 09:05:25 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Sched_Params.i (ACE_Sched_Priority_Iterator): removed
          ACE_TRACE's, because Sched_Param is in the ACE_OS (lowest)
          component.  Thanks to Erik Ivanenko <erik.ivanenko@utoronto.ca>
          for reporting this.

Tue Apr 13 08:21:41 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU
        * include/makeinclude/platform_sunos5_sunc++_orbix.GNU: Added a make
          option, mt_orbix, to control whether the MT or non-MT variant of
          Orbix is used.  Default is MT; to use non-MT, "make mt_orbix=0".

        * ace/config-sunos5.x-sunc++-4.x-orbix.h: Include correct config-sunos5
          file based on OS version at compile time.  Allow site config to
          specify ACE_HAS_MT_ORBIX 0.

Mon Apr 12 14:24:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU (realclean.local):
          added BIN2, LIB2, SHLIB2, and SHLIBA2 to support
          subsetting.  It allows realclean to remove old BIN,
          LIB, SHLIB, and SHLIBA targets after remove the
          ace_components information file.  Also, removed explicit
          -f following $(RM).  -f should be included in the RM macro
          if appropriate for the platform.

Mon Apr 12 13:01:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/gethrtime.cpp (ACE_gethrtime),Makefile: added support for
          rdtsc instruction with GHS on Intel targets.  Thanks to
          Andy Alvarez <axab@eci-esyst.com> for providing the assembly
          instructions to do this!

Mon Apr 12 12:04:20 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/Makefile,ATM_Addr.cpp:
          Added ACE_ATM_Addr class back into Makefile since it's working
          now. Fixed address initialization problem in ACE_ATM_Addr.
          NOTE: This code currently only works with Solaris 2.5/2.6. Will
          need to update the code for FORE's implementation on Solaris 2.7.
          NOTE: To use FORE's XTI/ATM implementation the following #defines
          need to be included (typically in ace/config.h):
            #define ACE_HAS_FORE_ATM_XTI
            #define ACE_HAS_TIUSER_H_BROKEN_EXTERN_C
            #define ACE_TLI_TCP_DEVICE "/dev/xtisvc*" //(e.g., /dev/xtisvc0)
          AND the following flags are needed to build the ace library
          (typically in include/makeinclude/platform_macros.GNU):
            CPPFLAGS += -I$(FORE_ROOT)/include

Mon Apr 12 10:04:31 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU:
          The default rule to compile .idl files is only enabled if
          TAO_ROOT is not defined, otherwise we should use the rule in
          $TAO_ROOT/rules.tao.GNU

Mon Apr 12 00:18:23 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.36 released.

Sun Apr 11 17:06:53 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp (run_client): Fixed
          the warnings on Linux (config-linux.h).

Sun Apr 11 16:09:16 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp (run_client): Made
          some fixes if ACE_MT_SAFE is false...  Thanks to Alex for
          reporting these.

Sun Apr 11 16:02:49 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-inserver-fancy.cpp (create_handler):
          Fixed the warnings (control reaching end of block) and error (passing
          u_long to close) which showed up on Linux(with config-linux.h)

        * performance-tests/Misc/preempt.cpp,
        * examples/Threads/task_five.cpp: Replaced ACE_MT_SYNCH by
          ACE_SYNCH to get it compile on Linux.

Sun Apr 11 14:38:22 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Added test for ACE_NEEDS_FUNC_DEFINITIONS.
          Corrected bug in ACE_TEMPLATES_REQUIRE_SOURCE test.

Sat Apr 10 14:02:11 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Malloc[_Base]: Added a new no-op constructor for
          ACE_Allocator to hopefully work around a problem with DEC UNIX
          C++.

Fri Apr 09 10:08:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          enable -fno-implicit-templates for targets other than
          Intel.  It appears to work for PPC targets, and is necessary
          to avoid compiler warnings about different symbol sizes
          in object files.  Thanks to Thomas Mehrkam <Thomas_Mehrkam@i-o.com>
          for tracking down the source of the warnings, and verifying
          that -fno-implicit-templates works for PPC targets.

Fri Apr 09 08:14:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU: replaced "ln -s" with
          $(LN_S), and set that to "ln -s" by default.  Thanks to
          Rainer Blome <rainer_blome@de.ibm.com> for suggesting this.

Fri Apr  9 00:38:03 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_Acceptor.cpp (shared_accept): Make sure to disable
          ACE_NONBLOCK on the newly accepted socket since otherwise
          applications can have weird behavior.  Thanks to Margaret Reitz
          <margaret@veritas.com> and Irfan for helping to track this down.

Thu Apr 08 13:47:03 1999  David L. Levine  <levine@cs.wustl.edu>

        * BUG-REPORT-FORM,PROBLEM-REPORT-FORM,
          README,VERSION,Makefile,Makefile.am,bin/make_release,
          docs/ACE-bug-process.html: moved BUG-REPORT-FORM
          to PROBLEM-REPORT-FORM.  Thanks to Thomas Lockhart
          <Thomas.G.Lockhart@jpl.nasa.gov> for suggesting this.

        * docs/ACE-guidelines.html: added checklist for ACE/TAO changes,
          including commit with a meaningful message, update a
          ChangeLog, and ack and respond to the requestor.

Thu Apr  8 13:18:22 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/SString.h: Updated the documentation to show that "Memory is
        _not_ allocated/freed if <release> is 0".

Wed Apr  7 20:24:48 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h (ACE_DECLARE_NEW_CORBA_ENV): Removed the
          trailing semi-column.  Thanks to Marina for the reminder.

Wed Apr  7 19:09:05 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Containers_T: Replaced all Foo &Foo::operator=() with void
          Foo::operator=() to avoid nasty problems with propagation of
          errors.  Thanks to Chris Schleicher <chrissch@cnd.hp.com> for
          reporting this.

Wed Apr 07 17:25:07 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * apps/Gateway/Gateway/connection_config: Changed the connection 1
          and 2 to use localhost since it would probably be the most
          common test case.

        * apps/Gateway/README: Replaced all references of proxy_config
          to connection_config.  Also change the example port number to
          10011 and 10012 which are the default port number used by the
          gatewayd.

          Thanks to Sam Rhine <rmsolution20@earchlink.net> for reporting
          this.

Wed Apr  7 16:36:41 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ACE-INSTALL.html: Put a note in saying to rebuild all
          when upgrading releases.

Wed Apr 07 14:25:47 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Addr.{h,cpp}: modified files to compile for
          machines without FORE XTI/ATM support.

        * examples/IPC_SAP/TLI_SAP/CPP-{server,client}.cpp:
          modified files to take out XTI/ATM code.

        * examples/IPC_SAP/TLI_SAP/Makefile,CPP-ATM-{server,client}.cpp:
          added separate test files for XTI/ATM

Wed Apr  7 14:20:59 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/Basic_Types.h:
          Added a signed companion to David's
          ACE_UINT64_LITERAL, to avoid MSVC warnings. If
          the platform has no 8-byte integer, this is
          useless, but we must keep all compilers happy.
          Also modified ACE_INT64_MAX tp use this, and
          added a signed companion to
          ACE_UINT64_FORMAT_SPECIFIER.

Wed Apr 07 13:57:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated egcs shared library discussion
          with information from Tim Rose <trose@bridgewatersys.com>
          that egcs 1.1.1 statics libs work fine on Solaris 2.6.

Wed Apr 07 13:14:34 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Object.{h,i} (fini_called): Accessor to the
          underlying fini_already_called_ flag.

        * ace/Service_Repository.cpp (find_i): Disallowed returning a
          service which fini() has been called upon.

Wed Apr  7 11:30:09 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
          Added more tests to the script.

Wed Apr 07 09:54:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU: instead of trying to
          overwrite an existing symlink with ln -f, remove it first.
          Thanks to Keith Rohrer <KRohrer@hnv.com> for reporting that
          Solaris' ln -f doesn't work.

        * ace/config-vxworks_5.x.h: added ACE_HAS_RECURSIVE_MUTEXES.
          Thanks to Tom Venturella <Thomas.Venturella@MW.Boeing.com>
          for suggesting this, because the VxWorks semaphores that
          ACE uses for mutexes are recursive.

        * ace/Synch.i (set_thread_id): added ACE_UNUSED_ARG (t), with
          ACE_HAS_RECURSIVE_MUTEXES.

Wed Apr 07 09:37:34 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU: disable warning
          1016 when optimization is enabled.  That gets rid of the
          "D:incint" warning about bzero in sys/select.h.

        * docs/ACE-guidelines.html: always use $(RM) instead of rm or
          rm -f in Makefiles.

Wed Apr 07 02:42:50 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.35 released.

Wed Apr 07 02:04:30 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.34 released.

Tue Apr  6 21:09:32 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/ATM_Addr: Added the ATM_Addr.* files into the CVS
          respository.  However, we're not going to enable this in the
          Makefile or project files until they are tested.

Tue Apr  6 20:48:16 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/Basic_Types.h:
          Added max and min #defines for various ACE data types. Now,
          when using the ACE or ACE_CDR data types, we need not
          depend on the vagaries of limits.h and float.

Tue Apr  6 20:39:01 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Log_Record.cpp (format_msg):
        * ace/Log_Record.cpp (print):

          Changed host_name[] to *host_name since null pointers were being
          passed into the host_name array.  Strictly speaking, host_name
          should thus be a pointer, not an array.  Also cleaned up
          ternary operator in format_msg() by parenthesizing some
          expressions.

Tue Apr  6 20:19:23 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Makefile: Removed the ATM_Addr files until Joe can
          get them checked in.

Tue Apr 06 19:36:24 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Active_Map_Manager.h (ACE_Active_Map_Manager_Key): Added a
          separate structure that holds the fields of the key.  This
          separate structure makes it easier to manage copying the index
          and the generation to and from the user buffer.

Tue Apr  6 16:07:29 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Synch.cpp (get_thread_id): If we have recursive mutexes then
          it's not possible to get the id of the thread that's currently
          holding the mutex.  Thanks to David for reporting this.

Tue Apr  6 15:50:14 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * docs/exceptions.html:
        Updated the documentation.

Tue Apr  6 15:25:56 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/High_Res_Timer.{h,i,cpp}: On Win32, don't call calibrate if
          we cannot get the scale factor.  Instead, just automatically
          fall back on ACE_OS::gettimeofday ().

          Also added another static variable to represent the conditions
          where the global scale factor is not set yet or high resolution
          timers are not supported.

Tue Apr 06 15:14:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Basic_Types.h:  added ACE_UINT64_LITERAL for platforms
          with ACE_LACKS_U_LONGLONG_T.

        * tests/Basic_Types_Test.cpp:  added test of ACE_UINT64_LITERAL.

Tue Apr 06 14:54:56 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Message_Queue_Test.cpp (performance_test):
        * tests/Message_Queue_Notifications_Test.cpp (producer): Unicode
          related change.

        * ace/ace_ce_dll.dsp: Added Active_Map_Manager.cpp.

        * ace/OS.h:
        * ace/config-WinCE.h: CE now uses non-static object manager.

        * WindozeCE/WindozeCE.h: Instantiate the non-static object manager
          within the class.

        * WindozeCE/WindozeCEDlg.cpp: We should register the bridge window
          using its HANDLE so it would work no matter we build ACE with or
          without MFC support.

Tue Apr  6 14:17:06 1999  Joe Hoffert  <joeh@tango.cs.wustl.edu>

        * ace/OS.h: Added support for the FORE ATM XTI interface.

        * ace/TLI_{Acceptor,Connector}: Added support for the FORE ATM XTI
          interface.

        * ace/ATM_Addr: Added support for ATM address for the XTI ATM
          driver.  Eventually, this class will be generalized to work on
          WinSock 2 ATM support, as well.

Tue Apr 06 13:56:18 1999  Thomas Lockhart <Thomas.G.Lockhart@jpl.nasa.gov>

        * include/makeinclude/rules.local.GNU: added -f to ln -s commands,
          to force overwrite of old symlink.  This eases moving of
          installed ACE code trees.

Tue Apr  6 00:17:59 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/DLL {.h, .cpp} (set_handle): Added the set_handle () method
          which allows the user to set the ACE_SHLIB_HANDLE for the DLL.
          Thanks to Bob McWhirter for bringing up this point.

Mon Apr  5 22:27:02 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-irix6.x-sgic++-nothreads.h: Added

          #if !defined (ACE_HAS_NETDB_REENTRANT_FUNCTIONS)
          #define ACE_LACKS_NETDB_REENTRANT_FUNCTIONS
          #endif /* ACE_HAS_NETDB_REENTRANT_FUNCTIONS */

          to fix a problem with SGI 6.5.  Thanks to Bob Laferrie
          <laferrie@execpc.com> for reporting this.

Mon Apr  5 19:42:11 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
        * m4/acinclude.m4:

          Created the macro ACE_CHECK_FOR_CVS_DIR to prevent the configure
          script from continuing the configuration if the current
          configuration directory is in a CVS controlled directory.  The
          idea is to prevent automatically generated files from being
          checked into the repository.  This will prevent accidental
          overwrites of ACE's current Makefiles by the automatically
          generated ones, for example.

          In addition, this should ease the transition from the current
          Makefile scheme to the new Auto{conf,make}/libtool scheme since
          the current Makefiles can remain under CVS control without
          the generate Makefiles interfering with them.

Mon Apr 05 17:02:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/High_Res_Timer.cpp (global_scale_factor ()): removed
          comment that said we use BogoMIPS on Linux/Intel.  We
          only use it on Linux/alpha.  Thanks to
          Thomas Lockhart <Thomas.G.Lockhart@jpl.nasa.gov> for
          reporting this.

Mon Apr  5 15:54:57 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/Profile_Timer.i: Removed ACE_OS::gettimeofday ()
          calls from start and stop.

Mon Apr 05 15:09:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: removed second #include of netdb.h.  Thanks to
          John H Aughey <tmpsp499@cec.wustl.edu> for reporting this.

Mon Apr 05 14:17:31 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Trace.cpp: removed unnecessary (and complicated)
          #include of ace/ACE.h.

Mon Apr  5 13:21:49 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/Proactor.cpp:
        (svc):
        * ace/POSIX_Proactor.cpp:
        * ace/POSIX_Proactor.h:
        * ace/Proactor.h:
        * ace/Proactor_Impl.h:
        * ace/WIN32_Proactor.cpp:
        * ace/WIN32_Proactor.h:
        * examples/Reactor/Proactor/test_timeout.cpp:
        Completed Timers implementation for POSIX platforms. Timers
        implementation is now common for POSIX and WIN32. Portable
        ACE_Auto_Event is used in the auxillary thread to wait for the
        Timer events.
        The Timer's code in WIN32 has been removed and the common code exists
        in Proactor.{h,cpp} only.
        A new factory method called create_asynch_timer has been created to
        create the Timer Result class. This is used internally by the Proactor
        to post timer completions to the Proactor completion
        queue. Application may want to use this directly to fake
        completions.

Mon Apr 05 12:05:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.*,Thread_Manager.{h,cpp}: moved flags members from
          ACE_Thread_Descriptor to a new ACE_OS_Thread_Descriptor base
          class, to remove dependency of OS.cpp on Thread_Manager.h.

Sun Apr  4 18:19:05 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:

          Changed ANSI C++ cast test to fail on warnings.  Currently,
          only g++ and Sun C++ warning/error conversion is supported.

          Moved the ACE_SET_COMPILER_FLAGS macro after the AC_ARG_ENABLE
          and AC_ARG_WITH calls so that user settings can influence what
          compiler flags get set.

          Removed some M4 comments (`dnl') that were inside of the
          template specialization test header block.  The test was failing
          since `dnl' was being quoted by M4 and actually placed inside
          the test program source during test source compilation.  Also
          corrected a typo in the same test.

          Changed test for ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION so
          that it attempts to link instead of just compile.  Hopefully
          this will make the test "tougher."

        * m4/compiler.m4:

          Added `-features=castop' compiler flag and completed support for
          `-features=rtti' via `--enable-rtti'.  These flags only work for
          Sun C++ 4.2.  Added support for the `-noex' Sun C++ compiler flag
          when the user disables exception handling.

        * m4/platform.m4: Minor comment updates.

Sat Apr  3 19:41:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/TTY_IO.cpp (control): Disabled support for higher baudrate
          for non-NT platforms.

Sat Apr  3 19:37:07 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/TTY_IO.cpp (control): Added support for more modem speeds.
          Thanks to Valery Arkhangorodsky <avalery@geocities.com> for
          reporting this.

Sat Apr  3 17:02:48 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/*: Regenerated all the HTML to get the hyperlinks
        into the various headers.  I'm sure somebody will let me know if I
        munged it all.

        * docs/tutorials/(019|020|021) : Finally made myself sit down and
        add Kirthika's last abstracts.

Sat Apr  3 15:27:07 1999  Ossama Othman  <othman@cs.wustl.edu>

        * Makefile.am
        * ace/Makefile.am
        * netsvcs/clients/Naming/Client/Makefile.am
        * netsvcs/clients/Tokens/manual/Makefile.am
        * netsvcs/lib/Makefile.am
        * tests/Makefile.am

          Added targets to clean up files and directories created during
          compilation.  Automake will setup the `clean-local' targets to
          run automatically whenever a `make clean' is done.

Fri Apr 02 23:25:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: added TAO/tao/Version.h.  Thanks to
          Nanbor for suggesting this.

        * ace/OS.cpp: removed use of ACE_Array with WIN32 and
          TSS_EMULATION.  In doing this, fixed an off-by-one error:
          ACE_TSS_Cleanup::remove () would try to remove key value
          "n" from an ACE_Array of size "n".

Fri Apr  2 19:19:09 1999  Ossama Othman  <othman@cs.wustl.edu>

        * bin/autogen: Update NEWS file by copying VERSION.  Temporary
          hack to make Automake happy when doing a `make dist'.

Fri Apr  2 18:37:29 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Placed the asynchronous IO checks right after
          the thread library checks.  This was done to make sure the
          library with AIO support gets added to the link list before
          the rest of the tests start, and to make sure that it doesn't
          get added if AIO isn't supported or isn't working.

        * Makefile.am (ACE_EXTRA_DIST): Changed directory names to use
          `$(top_srcdir)' instead of the current directory `.'.  This
          allows a distribution to be made from a directory other than
          ACE's top level source directory.

        * m4/compiler.m4: Explicitly add the `-xildoff' flag to Sun CC's
          LDFLAGS.  This is just a precautionary measure.  It shouldn't
          be needed.

Fri Apr  2 12:41:09 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Containers_T.h (all of the classes listed below):
        * ace/Containers_T.i (ACE_Array):
        * ace/Containers_T.i (ACE_DLList):
        * ace/Containers_T.cpp (ACE_Bounded_Stack):
        * ace/Containers_T.cpp (ACE_Fixed_Stack):
        * ace/Containers_T.cpp (ACE_Unbounded_Stack):
        * ace/Containers_T.cpp (ACE_Unbounded_Queue):
        * ace/Containers_T.cpp (ACE_Double_Linked_List):
        * ace/Containers_T.cpp (ACE_Fixed_Set):
        * ace/Containers_T.cpp (ACE_Bounded_Set):
        * ace/Containers_T.cpp (ACE_Unbounded_Set):
        * ace/Containers_T.cpp (ACE_Ordered_MultiSet):
        * ace/Handle_Set.h (ACE_Handle_Set):
        * ace/Handle_Set.i (ACE_Handle_Set):

          Changed assignment operators (operator=) to return a reference
          to `*this' so that assignments may be chained.

Thu Apr  1 23:41:56 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Fixed write_array() to memcpy if doing a byte-swap
          and size = 1. Previously, it was falling through
          without writing anything. Thanks to Jerry De Master
          <jdemaste@ipdinc.com> for pointing this out.

Thu Apr 01 22:38:25 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.33 released.

Thu Apr 01 21:09:00 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * Sequence.h (TAO_Base_Sequence): Made the copy constructor and
          the assignment operator public since making them protected was
          breaking some compilers.

        * ace/Filecache.cpp (ACE_Filecache_Object): Fixed typo: <lock_>
          should be <lock>.

Thu Apr  1 19:41:26 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/IPC_SAP.h (ACE_IPC_SAP):
        * ace/SOCK.h (ACE_SOCK):
        * ace/SOCK_IO.h (ACE_SOCK_IO):
        * ace/SV_Semaphore_Simple.h (ACE_SV_Semaphore_Simple):
        * ace/Synch.h (ACE_Barrier):
        * ace/Synch.h (ACE_Event):
        * ace/Synch.h (ACE_Guard):
        * ace/Synch.h (ACE_Null_Mutex):
        * ace/Synch.h (ACE_RW_Mutex):
        * ace/Synch.h (ACE_Semaphore):
          Reverted the changes that made these base class destructors
          virtual.  They don't need to be virtual for the way they are
          being used.

Thu Apr 01 19:01:20 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Containers.h (ACE_DLList_Node):
        * ace/Containers_T.h (ACE_Double_Linked_List_Iterator):
        * ace/Containers_T.h (ACE_Unbounded_Set_Iterator):
        * ace/Event_Handler.h (ACE_Event_Handler):
        * ace/Event_Handler.h (ACE_Notification_Buffer):
        * ace/Filecache.h (ACE_Filecache_Handle):
        * ace/Filecache.h (ACE_Filecache_Object):
        * ace/Local_Tokens.h (ACE_TPQ_Iterator):
        * ace/Local_Tokens.h (ACE_Token_Proxy):
        * ace/Local_Tokens.h (ACE_Token_Proxy_Queue):
        * ace/Malloc.h (ACE_Name_Node):
        * ace/Malloc.h (ACE_Static_Allocator_Base):
        * ace/Memory_Pool.h (ACE_MMAP_Memory_Pool):
        * ace/Memory_Pool.h (ACE_MMAP_Memory_Pool_Options):
        * ace/Memory_Pool.h (ACE_Shared_Memory_Pool):
        * ace/Memory_Pool.h (ACE_Shared_Memory_Pool_Options):
        * ace/OS.h (ACE_Countdown_Time):
        * ace/OS.h (ACE_Thread_Adapter):
        * ace/OS.h (ACE_Thread_Control):
        * ace/OS.h (ACE_Thread_Exit):
        * ace/Service_Object.h (ACE_Service_Type):
        * ace/Signal.h (ACE_Sig_Adapter):
        * ace/Synch.h (ACE_Adaptive_Lock):
        * ace/Synch.h (ACE_TSS_Adapter):

          In some cases, classes with pointers *can* use the default copy
          constructor and the assignment operator.  A more careful
          screening of the egcs -Weffc++ flag need to be done before a
          copy constructor and assignment operator can be considered
          harmful/dangerous.  For now, the changes Ossama made have been
          reverted.

        * ace/Filecache.cpp (ACE_Filecache_Object):
        * ace/Signal.i (ACE_Sig_Action):
        * ace/OS.i (ACE_Time_Value):

          Removed default contruction of structs. Old g++ is broken.

        * ace/Filecache.cpp (ACE_Filecache_Object): Fixed incorrect
          initialization of <mmap_>.

Thu Apr  1 16:22:18 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Containers_T.h (ACE_Unbounded_Set_Iterator):
        * ace/Containers_T.cpp (ACE_Unbounded_Set_Iterator):
          The signatures for the prefix and postfix operators were
          switched.  Prefix operators take a void and return a
          a reference and postfix operators take an int and returns a
          copy.

        * ace/Containers.h (ACE_DLList_Node):
        * ace/Containers_T.h (ACE_Double_Linked_List_Iterator):
        * ace/Containers_T.h (ACE_Unbounded_Set_Iterator):
        * ace/Event_Handler.h (ACE_Event_Handler):
        * ace/Event_Handler.h (ACE_Notification_Buffer):
        * ace/Filecache.h (ACE_Filecache_Handle):
        * ace/Filecache.h (ACE_Filecache_Object):
        * ace/Local_Tokens.h (ACE_TPQ_Iterator):
        * ace/Local_Tokens.h (ACE_Token_Proxy):
        * ace/Local_Tokens.h (ACE_Token_Proxy_Queue):
        * ace/Malloc.h (ACE_Name_Node):
        * ace/Malloc.h (ACE_Static_Allocator_Base):
        * ace/Memory_Pool.h (ACE_MMAP_Memory_Pool):
        * ace/Memory_Pool.h (ACE_MMAP_Memory_Pool_Options):
        * ace/Memory_Pool.h (ACE_Shared_Memory_Pool):
        * ace/Memory_Pool.h (ACE_Shared_Memory_Pool_Options):
        * ace/OS.h (ACE_Countdown_Time):
        * ace/OS.h (ACE_Thread_Adapter):
        * ace/OS.h (ACE_Thread_Control):
        * ace/OS.h (ACE_Thread_Exit):
        * ace/Service_Object.h (ACE_Service_Type):
        * ace/Signal.h (ACE_Sig_Adapter):
        * ace/Synch.h (ACE_Adaptive_Lock):
        * ace/Synch.h (ACE_TSS_Adapter):
          Explicitly disallow use of implicitly generated copy
          constructor and assignment operator to prevent inadvertent
          memory leaks.

        * ace/Filecache.cpp (ACE_Filecache_Object):
        * ace/OS.i (ACE_Time_Value):
        * ace/Signal.i (ACE_Sig_Action):
        * ace/Signal.i (ACE_Sig_Guard):
        * ace/Signal.i (ACE_Sig_Set):
        * ace/Synch_T.i (ACE_Guard):
          Added base member initializers for class members that weren't
          initialized.  Better style and helps avoid some warnings.

        * ace/IPC_SAP.h (ACE_IPC_SAP):
        * ace/SOCK.h (ACE_SOCK):
        * ace/SOCK_IO.h (ACE_SOCK_IO):
        * ace/SV_Semaphore_Simple.h (ACE_SV_Semaphore_Simple):
        * ace/Synch.h (ACE_Barrier):
        * ace/Synch.h (ACE_Event):
        * ace/Synch.h (ACE_Guard):
        * ace/Synch.h (ACE_Null_Mutex):
        * ace/Synch.h (ACE_RW_Mutex):
        * ace/Synch.h (ACE_Semaphore):
          Made base class destructor virtual to ensure that it gets
          called by derived class destructor.

Thu Apr  1 13:31:56 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.{i,cpp}:
          Moved the destructors and a couple of short output CDR
          functions from .cpp to .i.

Thu Apr  1 03:30:19 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/tao_svcconf.pl: New perl script to help converting TAO's
          svc.conf file to use static services.

Wed Mar 31 14:30:28 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Fixed mis-matched #endif comments.  Thanks to Eric
          Eide <eeide@cs.utah.edu> for pointing this out.

Thu Mar 31 14:30:20  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tests/Message_Block_Test.cpp: updated some printouts.

Wed Mar 31 10:46:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/Message_Block_T.h: Add template arg to operator = definition for
          ACE_Locked_Data_Block<>.

        * ace/config-aix-4.x.h: Don't set _BSD for AIX 4.2 (or 4.3). Setting
          it works ok on AIX 4.2, but breaks TAO builds.  Not setting it has
          caused no regressions on 4.2, and allows TAO to build more.

Tue Mar 30 23:28:41 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Message_Block.cpp (init_i): This function was not releasing
          the old data block (if <data_block_> was non-zero).  Fixed this
          problem and avoided the memory leak.  Thanks to Sangwoo Jin
          <swjinjin@sei.co.kr> for reporting this leak.

          Also changed the constructors to set <data_block_> to zero.

        * tests/Message_Queue_Test.cpp (receiver): Fixed hacked use of
          init() to prevent memory leak.  The new init_i() fixes the leak.

Tue Mar 30 23:24:02 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
        * m4/features.m4:
        * m4/threads.m4:
          Updated several library checks to use a single call of my
          re/implementation of the new autoconf AC_SEARCH_LIBS test instead
          of having several AC_CHECK_LIB calls in a row.  Nice!

          The thread detection tests were overhauled.  They are now
          simpler but retain the same functionality as the previous
          tests.  They were greatly reduced in size so debugging, updating
          and enhancing should be much easier now.

        * m4/acinclude.m4:
          Reimplemented Autoconf's AC_SEARCH_LIBS into ACE_SEARCH_LIBS.
          The functionality is the same but the ACE reimplementation
          actually works when C++ is the test language.  For some reason
          Autoconf's test isn't being generated properly by GNU M4.

Tue Mar 30 22:04:49 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h: Added definition of
          ACE_DEFAULT_THREAD_PRIORITY as 0.  Thanks to John Morey
          <jmorey@tbi.com> for reporting this.

Tue Mar 30 21:31:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * Makefile (RELEASE_LIB_FILES): added bin/ and etc/.
          Thanks to John Lindal <jafl@alice.wonderland.caltech.edu>
          for reporting that the ACE library Makefile needs
          bin/ace_components.

Tue Mar 30 18:49:58 1999  Darrell Brunsch  <brunsch@cs.wustl.edu>

        * bin/make_release: Added .ico to binary file types.

Tue Mar 30 12:23:23 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.32 released.

Tue Mar 30 11:03:31 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Synch.h (ACE_Adaptive_Lock): Clarified a comment about how
          to define a constructor in a subclass that initializes the
          lock_.  Thanks to Michael Kircher for reporting this.

Tue Mar 30 10:37:43 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.i (getpwnam_r): Added patch contributed by Roland Gigler
          <roland@mch.pn.siemens.de> for getpwnam_r on SCO UnixWare 7.

Mon Mar 29 20:22:44 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
        * m4/features.m4:
          Added new M4 macro include file, and moved asynchronous IO tests
          to `m4/features.m4'.  The asynchronous IO tests were improved by
          making them run-time tests.  Cross-compiled platforms will fall
          back to a compile-time test.  Thanks to Alex for providing
          run-time tests.  The tests are based on his AIO tests found in
          the examples/Reactor/Proactor directory.

Sun Mar 28 18:02:54 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
          Enabled the C++ libtool support mentioned below.  Removed all
          references to CXXCPPFLAGS since the CPPFLAGS variable is used
          by autoconf for both C and C++.

        * ltconfig:
          Added my experimental libtool C++ support.  The hacks I made
          allow it to build C++ shared libraries.

        * m4/acinclude.m4:
        * m4/threads.m4:
          Renamed some variables.  Namespace pollution was breaking most
          of the tests.

Sun Mar 28 12:20:44 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h:
        * ace/CORBA_macros.h: Moved ACE_NEW_THROW* and ACE_GUARD_THROW*
          macros from OS.h to CORBA_macros.h.  Also added
          ACE_*GUARD_THROW_EX which has the new ACE try macros semantics.
          CORBA_macros.h needs to include "OS.h" to source in the correct
          platform configuration macros.

Sun Mar 28 13:27:15 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * docs/exceptions.html:
        Added a new example

Fri Mar 26 23:35:28 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h: Added ACE_NEEDS_SCHED_H.

        * ace/config-irix6.x-g++.h:
        * ace/config-irix6.x-kcc.h:
        * ace/config-irix6.x-sgic++.h:
        * ace/OS.h: Reverted changes about ACE_LASKS_SCHED_H.

        * ace/config-dgux-4.x-ghs.h:
        * ace/config-irix6.x-sgic++.h:
        * ace/README:
        * ace/OS.h: Renamed ACE_LACKS_SCHED_H with ACE_NEEDS_SCHED_H to
          refect what it really means.  The original name was quite
          confusing.

Fri Mar 26 18:16:25 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-irix6.x-g++.h:
        * ace/config-irix6.x-kcc.h:
        * ace/config-irix6.x-sgic++.h:
          There is no need to explicitly include <sched.h> or to define
          ACE_LACKS_SCHED_H the file is present in IRIX 6.4.

Fri Mar 26 17:57:25 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h: Defined cuserid as an extern "C"
          function.

        * ace/OS.h: <sched.h> should only be included when !defined
          (ACE_LACKS_SCHED_H).

          Thanks to Eric Eide <eeide@cs.utah.edu> for sending the patch.

Fri Mar 26 17:12:21 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/Profile_Timer.{h,i,cpp}: On Win32 platforms that
          support RUsage, Profile_Timer will use both that and
          High Resolution Timers for measurements.  Depending
          on the method, one or the other will be used.

Fri Mar 26 17:02:00 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
          Improved ACE_HAS_USING_KEYWORD test so that it works for platforms
          that support the `using' keyword but don't have the `std' namespace.

          Updated ACE_HAS_TEMPLATE_SPECIALIZATION test so that it works for
          compilers that require the "template<>" syntax for specialization.

          Improved ACE_HAS_ONLY_SCHED_OTHER by checking for run time errors
          when a thread scheduling policy other than SCHED_OTHER is set.
          Thanks to David for suggesting this modification.

        * m4/acinclude.m4:
          Added support for converting warnings to errors for Sun C++.

        * m4/threads.m4:
          Added test to check if `-Kthread' compiler flag enables thread
          support.  SCO UnixWare 7 uses this flag.

Fri Mar 26 07:21:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Reactor_Performance_Test.cpp (handle_input): wrapped
          final return statement with ACE_NOTREACHED.

Thu Mar 25 20:16:49 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * bin/make_release: I wasn't using $bin_files for the
          ACE+TAO.zip creation, so now that is fixed.  Thanks to
          Greg Ross <gwross@west.raytheon.com> for pointing this out.

Thu Mar 25 16:31:27 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
          Added new macros for byte swapping, this are rather evil. They
          add the correct padding to use a single long to represent a
          short or char, but in such a way that the first bytes of the
          long contain the required data.
          Nobody should need that, but the IDL compiler does.

Thu Mar 25 16:25:46 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Added test for ACE_HAS_BROKEN_MAP_FAILED.

        * ace/OS.h: Added __USLC__ to list of macros in the conditional that
          keeps the compiler from complaining about parameters which are not
          used.  This is needed for the C++ compiler on SCO UnixWare 7.
          Thanks to Roland for letting me know about this.

Thu Mar 25 14:55:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Basic_Types_Test.cpp: print out ACE version
          information even with ACE_HAS_MINIMAL_ACE_OS.

Thu Mar 25 13:52:57 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Reactor_Performance_Test.cpp (handle_input): This code
          wasn't entirely correct.  Well actually, I think where was some
          change in the semantics of Windows. Previously, once the handle
          was close, it seems that the application still got notified if
          there was data on the socket.  With WinNT SP4, it seems that
          once the handle was closed, no additional FD_READs were issued
          by the OS, even if data was available on the socket.

          In ACE, both FD_READ and FD_CLOSE get mapped to handle_input().
          The way to know when the connection was closed is to do a recv()
          in handle_input() and check for a zero return. When told of new
          data, the old code in handle_input() only did one recv() of
          BUFSIZ bytes. If there was more than BUFSIZ bytes of data on the
          socket, there would be some data left on the socket.  Hence,
          when notified of FD_CLOSE, it did another recv() which
          succeeded, and handle_input() never returned -1, making the test
          hang.

          The change made was to make handle_input() call recv() until
          EWOULDBLOCK occurs (note that the socket is in non-blocking
          mode).  Hence, when FD_CLOSE occurred, the socket did not have
          any data left, recv() returned 0 and handle_input() returned -1,
          which finally closed the test down correctly.

Thu Mar 25 13:13:51 1999  Ossama Othman  <othman@cs.wustl.edu>

        * Makefile.am (ACE.ifnames):
          Placed rule generation of ACE.ifnames within a MAINTAINER_MODE
          automake conditional.  If a `--enable-maintainer-mode' option
          isn't given on the configure script command line then don't
          generate a new `ACE.ifnames' file.

        * configure.in:
          Added AM_MAINTAINER_MODE so that maintainer level Makefile
          features are disabled by default.

        * acconfig.h:
        * ace/OS.h:
        * ace/README:
          Added ACE_HAS_BROKEN_MAP_FAILED macro for platforms that do not
          cast MAP_FAILED to a (void *).  Defining this macro prevents
          compilers on those platforms from complaining about assigning
          an int to a (void *).  Thanks to Roland Gigler
          <roland@mch.pn.siemens.de> for providing feedback about this.

Thu Mar 25 11:30:44 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * docs/exceptions.html:
        Corrected a couple of links...

Thu Mar 25 01:04:00 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/OS.h (ACE_OS): Added ACE_DEFAULT_TEMP_DIR_ENV to be "TEMP"
        for WIN32 and "TMP" for Unix.

Wed Mar 24 18:30:18 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * performance-tests/TTCP/ACE-C++/wrapper-new-ttcp.cpp: Added a new
          version of this program that fixes a number of bugs with the old
          one.  Thanks to Hao Ruan <hruan@lucent.com> for these fixes.

Wed Mar 24 15:31:27 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * High_Res_Timer.cpp:
        * High_Res_Timer.h:
        * OS.i:

          Changed the implementation of the High Resolution Timer on
          Win32 to use QueryPerformanceCounter instead of assembly code.
          The docs also say that this is MP-safe.  Thanks to Gregory D.
          Fee <gdf2@cec.wustl.edu> for suggesting this.

        * Profile_Timer.cpp:
        * Profile_Timer.h:
        * Profile_Timer.i:

          Now uses the High Res Timer on Win32 instead of rusage.

Wed Mar 24 14:36:12 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.cpp (ACE_OS_PREALLOCATE_OBJECT): Initialized obj_p to zero
          to make egcs happy.

Wed Mar 24 13:23:36 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: removed note about building netsvcs before
          running the one-button test on WIN32.  Thanks to Nanbor for
          hacking run_tests.bat :-)

Wed Mar 24 13:16:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/WFMO_Reactor.i (handler):
        * ace/Select_Reactor_T.cpp (handler_i): Made sure we can safely
          pass out the event handler before we do so.  Thanks to Michael
          Preobrazhensky <mikep@xpedite.com> for reporting this.

        * tests/run_tests.bat: Do not run Time_Service_Test if
          netsvcs/servers/main.exe doesn't exist.  Thanks to
          Jeffrey_Franks@i-o.com for reporting the problem and David for
          suggesting the fix.

Wed Mar 24 12:47:56 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added note to build netsvcs on Win32
          before running run_tests.bat.  Thanks to Jeff Franks
          <Jeffrey_Franks@i-o.com> for suggesting this.

Wed Mar 24 06:53:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (thr_create): SunOS 5.7 allows thread priority of 0,
          so we no longer need to work around that.

Tue Mar 23 22:49:15 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Added a test for ACE_NEEDS_DEV_IO_CONVERSION.

Tue Mar 23 22:29:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.7.h: undef ACE_HAS_ONLY_SCHED_OTHER, because
          other scheduling policies are supported by SunOS 5.7.  Thanks
          to Ossama and autoconf for noticing this.

Tue Mar 23 20:42:44 1999  Ossama Othman  <othman@cs.wustl.edu>

        * tests/Cache_Manager_Test.cpp (main): Added missing ACE_START_TEST
          and ACE_END_TEST macros.

        * m4/threads.m4: Modified UNIX International threads check to include
          check for rwlock_destroy() in -lthread since thr_create() was
          found without explicitly linking to -lthread on Solaris 2.5.1.
          rwlock_destroy() should be found only by linking to -lthread which
          will cause the configure script to add -lthread to the library link
          list.

Tue Mar 23 16:25:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: added FOR_TAO subset sizes.

Tue Mar 23 15:15:20 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Map_Manager.{i,cpp} (ACE_Map_Iterator_Base::operator*):
          Moved this function to .cpp file to avoid compilation problem on
          SunOS 5.6 with SunCC 4.2.  Once we know a patch that will fix
          the problem, we should move it back to .i file again.  Thanks to
          James Megquier <jmegq@bbn.com> for reporting the problem.

Tue Mar 23 14:56:58 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h:
        * configure.in:
        * ace/OS.h:
        * ace/TLI.cpp:
        * ace/config-osf1-4.0.h: Removed all references to
          ACE_HAS_BROKEN_T_ERRNO and removed the definition of the _terrno()
          function from TLI.cpp since it isn't a standard TLI function (at
          least not the Steven's books that I've read).  This also fixes a
          problem on Solaris that was causing an autoconfigured build of
          TLI.cpp to fail.

        * ace/Makefile.am: Make sure template source files get installed for
          all cases.  Previously, they only got installed if the template
          source is required by the compiler.  However, they are still needed
          by compilers that don't explicitly require template sources to
          be included in a file that references them.

        * configure.in: Fixed the test for ACE_TEMPLATES_REQUIRE_SOURCE.
          Thanks to Carlos for his help on this.  Removed the test for
          ACE_HAS_BROKEN_T_ERRNO since it is no longer needed due to the
          above change.

        * README: Added Konstantinos Margaritis <kmargar@cc.uoa.gr> to the
          ACE contributor list.

Tue Mar 23 12:57:40 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp: Split off the logging to
          an ostream from the logging for STDERR.  Thanks to Bill Rizzi
          (rizzi@softserv.com) for pointing out this problem.

        * netsvcs/lib/Client_Logging_Handler.cpp: Changed the default from
          ACE_STDOUT to ACE_STDERR to be consistent.  Thanks to Bill Rizzi
          (rizzi@softserv.com) for pointing out the problem.

Tue Mar 23 12:06:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ACE_THROW_SPEC): Added prgama to disable reporting
          warning 4290 on MSVC.  MSVC "supports" the exception
          specification but doesn't provide an implementation for it.
          Instead, it warns you the specification is ignored.

Mon Mar 22 21:34:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_g++.GNU: use -m uname
          option instead of -i, because GNU uname doesn't support -i.

Mon Mar 22 18:59:55 1999  Steve Huston  <shuston@riverace.com>

        * ace/NT_Service.cpp (state): Changed the (DWORD *, ACE_Time_Value *)
          version to reliably return -1 on any error.  Thanks to Martin
          Krumpolec <krumpo@pobox.sk> for keeping me honest here, and for
          sending in better code.

Mon Mar 22 14:16:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp} (cleanup_tss): added tss_close (), to enable
          deleting the native key on program termination.  That's not
          implemented yet, because it requires a separate
          ACE_OS::thr_keyfree (ACE_OS_thread_key_t).

        * ace/OS.cpp (fini), README, ace/config-linux-lxpthreads.h:
          removed ACE_FINI_HOOK support.  It wasn't helping.

Mon Mar 22 11:14:16 1999  Ossama Othman  <othman@cs.wustl.edu>

        * Makefile.am:
        Various minor updates.

        * configure.in:
        * m4/platform.m4
        Moved known platform specific macro checks from `configure.in'
        to `platform.m4'.

        * tests/Makefile.am:
        Updated to build the DLL_Test shared library.  Support for the
        test is still broken (my fault :).

        * aclocal.m4:
        * configure:
        These are automatically generated so they shouldn't be under
        CVS control.  I Removed them from the CVS repository.

Mon Mar 22 09:42:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: added current status section.

Mon Mar 22 01:04:23 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (free_all_keys_left): Changed to remove left-over
          keys using TlsFree on Win32.  We can't use ACE_OS::thr_keyfree
          here because it tries to update the TSS in_use_ information
          which has already been deleted at this point.
          (cleanup_tss): Uncommented free_all_keys_left.

Sun Mar 21 21:26:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: fixed error status when building ACE+TAO.
          Thanks to Doug for reporting this.

Sun Mar 21 21:16:02 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.31 released.

Sun Mar 21 20:45:57 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.30 released.

Sun Mar 21 18:39:16 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ACE.ifnames:

        Updated with new macro list.

        * Makefile.am:

        Added the m4 directory to the distribution list and made some
        minor updates.

        * ace/Makefile.am:
        * m4/subsets.m4:

        Subsetting updates/corrections.

        * configure.in:

        Added work around for buggy glibc2.1 when including both
        <ucontext.h> and <sys/procfs.h>.  Added check for auto_ptr class
        declaration since some platforms have <memory> but may not
        declare the auto_ptr class.  Shortened some of the "checking"
        messages.

        * ace-config.1.in:  ace-config script man page template
        * aceConf.sh.in:    ace-config "unknown" library script

        Added these files to the CVS repository.

        * config.guess:
        * config.sub:
        * ltconfig:
        * ltmain.sh:

        Updated these files to the ones in the latest libtool.

        * libtool:

        Removed this since it is automatically generated for each platform.
        It shouldn't be under CVS control.

Sun Mar 21 17:59:22 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Fixed a problem with ACE_OutputCDR::write_octet_array_mb, thanks
          to Dave Meyer <dmeyer@std.saic.com> for isolating and reporting
          this bug again [it was fixed in TAO and somehow it crept to the
          ACE version of the CDR classes].

Sun Mar 21 17:42:08 1999  Ossama Othman  <othman@cs.wustl.edu>

        * netsvcs/lib/Server_Logging_Handler_T.cpp (handle_logging_record):
          Use ACE_NTOHL macro instead of system ntohl() to get around bug
          in egcs-2.91.6x.

Sun Mar 21 16:07:24 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/config-g++-common.h (ACE_HAS_USING_KEYWORD):
          Define ACE_HAS_USING_KEYWORD for egcs 1.1.x.

Sun Mar 21 09:44:30 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Timeprobe_Test.cpp: don't test ACE_Singleton
          creation during static construction if ACE_HAS_PURIFY
          is enabled, because it notices the memory-in-use.

        * examples/Naming/Makefile: changed SRC to PSRC.

        * examples/Naming/Makefile,performance-tests/Misc/Makefile,
          tests/Makefile:
          Use ace_components instead of the current ACE_COMPONENTS
          setting to determine what should be built.

Sat Mar 20 19:10:37 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Connector.h:
        * ace/Connector.cpp:
        * ace/Strategies_T.h:
        * ace/Strategies_T.cpp:
          Added new methods to the ACE_Connector, ACE_Strategy_Connector,
          ACE_Connect_Strategy and ACE_Cached_Connect_Strategy.
          The motivation for this new method is a bit convoluted:
            In TAO we store the Svc_Handler returned from connect() as a
            hint for later Cached_Connector lookups.  But the location
            where we store it could be shared between multiple threads.
            To minimize the number of locks this hint is only modified and
            examined by the Cached_Connector, while the lock in the
            connection map is beign held.

            The problem arises when the hint is returned: another thread
            could try to use the same hint location, detect that the hint
            is in use and replace it before the thread that just requested
            the object has a chance to read the hint value.
            The solution is to use two variables: one is the hint
            location, carefully protected by the Cached_Connector lock,
            the other is a variable in the thread stack, they return the
            same thing, but the second variable is not affected by changes
            done by other threads.

            In short: we addeda connect() method that takes two arguments,
            the first is just intented to update the cached connector
            hint, the second is where the real connection gets returned.

        * tests/Makefile:
          David discovered that using SRC to list the sources does not
          work under some platforms. But using PSRC does.

Sat Mar 20 15:51:14 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
          Added tests for: ACE_HAS_BROKEN_NAMESPACES
                           ACE_HAS_BROKEN_CONVERSIONS
                           ACE_HAS_BROKEN_CONDITIONAL_STRING_CASTS
                           ACE_HAS_PTHREAD_CONDATTR_SETKIND_NP
                           ACE_HAS_PTHREAD_MUTEXATTR_SETKIND_NP
                           ACE_HAS_PTHREAD_PROCESS_ENUM

          Added some minor updates and corrections.

Sat Mar 20 09:06:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Map_Manager_Test.cpp: changed index () to slot_index ()
          and generation () to slot_generation (), to correspond to
          Active_Map_Manager interface change.

        * examples/ASX/Message_Queue/Makefile: changed LSRC to PSRC.

        * ace/Object_Manager.{h,cpp}: removed complex support from
          ACE_Object_Manager for cleanup of some ACE_Singleton locks
          during static construction/destruction, only.  The affected
          lock types are ACE_Thread_Mutex, ACE_Mutex, and
          ACE_RW_Thread_Mutex.  ACE_Recursive_Thread_Mutex and
          ACE_Null_Mutex will still be cleaned up if used to create
          ACE_Singletons during static construction/destruction.  As
          noted in ace/Singleton.h, those are the best type of locks
          to use with ACE_Singleton, anyways.

          This support was tricky to get right, and increased the size of
          the Object_Manager object file by 46 to 59 percent.  Now, if
          ACE_Singletons are created during static construction or
          destruction, with either an ACE_Thread_Mutex, ACE_Mutex, or
          ACE_RW_Thread_Mutex lock, those locks will be dynamically
          allocated and leaked.

Sat Mar 20 02:03:53 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acinclude.m4:

          Split acinclude.m4 into several M4 macro files and moved those
          files into the new `m4' subdirectory, includind acinclude.m4.

        * m4/acinclude.m4:
        * m4/compiler.m4:
        * m4/subsets.m4:
        * m4/threads.m4:

          Added these M4 files.

        * bin/autogen:

          Script to regenerate auto{conf,make} and libtool related files.
          Additional functionality may be added to this script in the
          future.

        * Makefile.am:
        * ace/Makefile.am:
        * apps/gperf/src/Makefile.am:
        * apps/gperf/tests/Makefile.am:
        * apps/gperf/Makefile.am:
        * apps/Makefile.am:
        * netsvcs/clients/Logger/Makefile.am:
        * netsvcs/clients/Naming/Client/Makefile.am:
        * netsvcs/clients/Naming/Dump_Restore/Makefile.am:
        * netsvcs/clients/Naming/Makefile.am:
        * netsvcs/clients/Tokens/collection/Makefile.am:
        * netsvcs/clients/Tokens/deadlock/Makefile.am:
        * netsvcs/clients/Tokens/invariant/Makefile.am:
        * netsvcs/clients/Tokens/manual/Makefile.am:
        * netsvcs/clients/Tokens/mutex/Makefile.am:
        * netsvcs/clients/Tokens/rw_lock/Makefile.am:
        * netsvcs/clients/Tokens/Makefile.am:
        * netsvcs/clients/Makefile.am:
        * netsvcs/lib/Makefile.am:
        * netsvcs/servers/Makefile.am:
        * netsvcs/Makefile.am:
        * man/man3/Makefile.am:   ( NOT ADDED YET )
        * man/Makefile.am:        ( NOT ADDED YET )
        * tests/log/Makefile.am:
        * tests/Makefile.am:

        Added Automake makefile templates for ACE.

        * configure.in:
        * m4/subsets.m4:
        * ace/Makefile.am:

        Added support for David's ACE subsetting work.

Fri Mar 19 23:36:37 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Active_Map_Manager.h (ACE_Active_Map_Manager_Key): Changed
          method index() to slot_index() and generation() to
          slot_generation().  These changes were motivated by the
          OpenEdition platform/compiler, which defines a macro called
          index().  Also, changed the type of <index_> and <generation_>
          from u_long to ACE_UINT32 to get consistent size across
          platforms.

Fri Mar 19 22:50:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/ace_ld: inserted ^['"]? at beginning of patterns that check
          for -l and -L, to make sure they're at the beginning of arguments.
          Thanks to Henric Jungheim <junghelh@pe-nelson.com> for
          suggesting this.

        * tests/Makefile: removed SRC, because it caused link problems
          on DU 4.0.

Fri Mar 19 18:56:26 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Fixed several makefiles that did not have a SRC or LSRC variable
          defined.

        * Re-generated the dependencies for both ACE and TAO, this time on
          a platform that includes the template code.

        * include/makeinclude/rules.local.GNU:
          Now we can run make depend inside a build directory.
          Removed any $(ACE_ROOT)/ace/config*.h files from the dependency
          list, those are not used.

Fri Mar 19 18:05:27 1999  Ossama Othman  <othman@cs.wustl.edu>

        * netsvcs/lib/Server_Logging_Handler_T.cpp (handle_logging_record):
          Reverted change that was thought to work around egcs compiler bug.
          The call to ntohl() within the templates still causes the compiler
          to complain.

Fri Mar 19 17:31:57 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Fixed silly error in the InputCDR constructor taking an
          ACE_Message_Block.

Fri Mar 19 15:41:30 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/config-win32-common.h: Added CE fix.

Fri Mar 19 15:03:54 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
        * ace/CDR_Stream.cpp:
          Changed CDR to ACE_CDR.
          Fixed ACE_InputCDR constructor when receiving a linked list of
          Message_Blocks.

        * tests/CDR_Test.cpp:
          Added a test for the constructor above.

Fri Mar 19 10:29:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Singleton.cpp (instance): removed at_exit () calls
          from both ACE_Singleton and ACE_TSS_Singleton, only
          when the ACE_Object_Manager hasn't started or has already
          shutdown.  In those cases, the singletons will leak.

        * ace/Object_Manager.cpp (ACE_Object_Manager ctor),
          ace/OS.cpp (ACE_OS_Object_Manager ctor): allow
          newer instances to overwrite older ones, in case an application
          #defines ACE_HAS_NONSTATIC_OBJECT_MANAGER and uses the
          Object_Manager during construction of static objects.

        * tests/Timeprobe_Test.cpp: added test of ACE_Singleton
          creation during construction of static objects.  Timeprobes
          can do that, when they're enabled.

        * ace/OS.cpp (fini), README: added ACE_FINI_HOOK support.
          Applications can #define ACE_FINI_HOOK to any executable code,
          and it will be executed on program termination.

        * ace/config-linux-lxpthreads.h: with ACE_HAS_TSS_EMULATION,
          #define ACE_FINI_HOOK to insert a one-second sleep at
          program termination.  It's necessary to avoid occasional
          segfaults of unknown origin, but they appear to be in the
          LinuxThreads library.

        * bin/ace_components: added.  It is used to record/access
          which components were built into the ACE library.  See next
          entry for files that have been updated to use it.

        * ace/Makefile,tests/Makefile,tests/run_tests.sh: use
          ace_components to record which components are in the ACE library.
          Suppress build/run of tests that use Token and Other.

        * netsvcs/{clients,servers}/Makefile: use ace_components instead of
          the current ACE_COMPONENTS setting to determine what should be built.

Fri Mar 19 03:24:34 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Singleton.cpp (instance): Commented out the call to
          ACE_Object_Manager::at_exit().  Currently, this is causing
          multiple instances of ACE_Object_Manager to get created, and
          hence causing all sorts of problems.

        * ace/OS.cpp (cleanup_tss): Removed the call to
          free_all_keys_left() (WIN32 only), because it causes
          segmentation faults at shutdown.

Fri Mar 19 00:15:21 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        The following changes are specific to WindowsCE.  They are
        required to remove MFC dependency from CE port.  Thanks to Eric
        Covington <eric@nowsol.com> for motivating this.

        * ace/config-WinCE.h: We no longer enfoce the use of MFC with ACE
          CE port anymore.

        * ace/config-win32-common.h: When not using MFC, CE needs to
          include <windows.h> and <wce.h> explicitly.

        * ace/Log_Record.cpp (print):
        * ace/OS.{h,cpp} (ACE_CE_Bridge): Changed to use HWND to record
          target window handle instead of CWnd. Also, we stop passing
          output string in a CString anymore.  The string is now created
          using ACE_OS::strdup and must be released by the target window
          using ACE_OS::free..  A small smart pointer class will be added
          later.  Notice that if you used ACE CE port before, the wParam
          can no longer be casted to a CString*, it should be casted to
          LPTSTR now.

        * WindozeCE/WindozeCEDlg.cpp: <wParam> should be casted to LPTSTR
          and it should be freed using ACE_OS::free.

        * ace/ace_ce_dll.dsp: CE programs (or DLL only?) not using MFC
          must specify all libraries used by the program, even msvcrt.

Thu Mar 18 22:21:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU: changed
          ACE_QUOTE to '"', instead of "", on win32 hosts.   "" just
          evaporates to nothing; we really need one double quote.
          Thanks to Hans Rohnert for verifying this.

Thu Mar 18 18:49:32 1999  Marina Spivak  <marina@cs.wustl.edu>

        * ace/SString.i (compare): fixed the function to work properly in
        case strings have different lenghts.

        * ace/SString.cpp: fixed code to gracefully handle failed memory
        allocations.

        * ace/SString.h: added comments about strings with release=0, not
        necessarily being null terminated.

Thu Mar 18 14:31:29 1999  Steve Huston  <shuston@riverace.com>

        * tests/DLL_Test.cpp: Use the new DLL_Test.h file that contains the
          class defs - needed for AIX xlC.  This should have been done
          with the Mar 15 changes but slipped through the cracks.

        * include/makeinclude/platform_hpux_aCC.GNU: Added support for
          building HP-UX 11 distributions with both 32 and 64 bits.

        * docs/tutorials/006/client_handler.cpp (Client_Handler::open): Changed
          arg name to void_acceptor to avoid redefining it inside the function.

        * docs/tutorials/007/client_acceptor.cpp (Client_Acceptor(Thread_Pool&)
          Fixed initialization of concurrency_.

        * docs/tutorials/018/Test_T.cpp (open): Fix ACE_UNUSED_ARG(arg).

        * ace/Message_Queue.h (ACE_Message_Queue_Base): Removed "= 0" from
          ~ACE_Message_Queue_Base.  AIX xlC warns that pure virtual dtor
          needs an out-of-line definition to be a base of another class.
          There is already a definition for the dtor in Message_Queue.i.

Thu Mar 18 14:30:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (timezone): Removed the leading '::' to cope with VC
          5.  Thanks to Lan Yaolong <lyaolong@cs.sunysb.edu> for reporting
          this.

Wed Mar 17 17:23:43 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * ace/OS.i (timezone): Added support for timezone () on CHORUS

Wed Mar 17 14:06:24 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h: Some characters got removed so I put them back.

Wed Mar 17 13:59:42 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
        * acconfig.h:
          Added autoconf check for rename() system call.

Wed Mar 17 07:55:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/platform_freebsd_pthread.GNU: Made some
          adjustment for building ELF executables which are the default on
          FreeBSD 3 and above.  I'll incoporate Russell's LinuxThread
          change later.

Wed Mar 17 13:36:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: return non-zero exit status on failure.

Wed Mar 17 12:47:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (open_i): Also delete the parse buffer
          before exiting the function for it is no longer needed.  We
          still need to deallocate the buffer at close method to prevent
          the case when uses manipulate Service_Config directly using
          process_directives.

Wed Mar 17 12:33:35 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS.i: Reenabed ACE_OS::rename() and we'll see which
          platforms need to have ACE_LACKS_RENAME.  Thanks to Susan
          Liebeskind <shl@cc.gatech.edu> for reporting this.

Wed Mar 17 10:46:26 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Message_Block.i (space): Moved ACE_Message_Block::space()
          after inline declarations of ACE_Message_Block::end() and
          ACE_Message_Block::wr_ptr() to prevent "used before it was
          declared inline" warnings on end() and wr_ptr().

Wed Mar 17 10:24:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (argv_to_string): initialized temp to 0 to avoid warnings
          from VxWorks g++.
          ace/OS.i (strenvdup): initialized temp to 0 to avoid warnings from
          VxWorks g++.  Thanks to Hans Rohnert for reporting these.

        * include/makeinclude/platform_vxworks5.x_g++.GNU (RANLIB):
          replaced /bin/true with @true, to avoid build warning on
          NT hosts.  Thanks to Hans Rohnert for reporting this.

Wed Mar 17 09:58:43 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Svc_Conf.l (yy_delete_parse_buffer): Added a check for NULL
          to avoid freeing buffers multiple times.  Thanks to Tom Arbuckle
          <arbuckle@uran.informatik.uni-bonn.de> for this fix and to
          Nanbor for noticing the problem in the first place!

Wed Mar 17 08:30:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.29 released.

Wed Mar 17 03:12:43 1999  James C. Hu  <jxh@entera.com>

        * ace/Message_Block.i: Changed the definition of space () to be
          something more useful than it was.  Thanks to Bill Rizzi
          (rizzi@softserv.com) for pointing out the problem.

        * ace/Cache_*: Removed by popular decree.  Can be found in
          JAWS/PROTOTYPE.

Wed Mar 17 03:06:20 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (close): Re-enabled cleaning up the lex
          buffer.

        * ace/Svc_Conf_l.cpp (ace_yy_delete_parse_buffer): We should not
          remove uninitialize buffer.

Tue Mar 16 19:48:57 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Makefile and tests/Makefile: Reverted these files to the
          pre-Cache_Manager state.  The Cache_Manager files don't compile
          on g++ and vxworks and we need to make a release now.

        * ace/Map_T.h (class ACE_Noop_Key_Generator): Added new class.
          This class makes it easy to use the map adapters when you don't
          care about generating new keys.

Tue Mar 16 11:36:41 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h: FreeBSD 2.2 and above also support
          threads, but siginfo_t is only supported on FreeBSD 3.0 and
          above.  Thanks to Goldshtain Dmitry <goldshtain.dmitry@usa.net>
          for pointing these out.

Tue Mar 16 16:46:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Hash_Bucket_T.h: added class to friend
          ACE_Hash_Bucket_DLCStack_Iterator declaration.

Tue Mar 16 16:35:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: never use TRUE, true, FALSE, false, etc.

Tue Mar 16 15:58:07 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (close): Don't call the
          ace_yy_delete_parse_buffer for now.  It is causing access
          violation.

Tue Mar 16 15:15:00 1999 Chris Gill  <cdgill@cs.wustl.edu>

        * ace/ACE.{cpp, i}
          ace/OS.{cpp, h, i}
          ace/FIFO.cpp
          ace/Log_Record.cpp
          ace/SOCK_Dgram_Mcast.cpp
          ace/SPIPE_Connector.cpp
          ace/TLI_Acceptor.cpp
          ace/config-psos-diab-mips.h (new)
          ace/config-psos-diab.h
          ace/config-psos-tm.h
          ace/streams.h: integrated pSOS/MIPS changes into ACE.  Thanks to
          Jaepil Kim  (jpkim@lgsoft.com) for completing the ACE pSOS port
          for the MIPS platform, and for sending these modifications.

Tue Mar 16 14:25:03 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp (get_ip_interfaces, count_interfaces, get_bcast_addr):
          On AIX, use CSIOCGIFCONF instead of SIOCGIFCONF to retrieve
          interface information.  Thanks to Eric Newton <ecn@smart.net> for
          figuring this out.

Tue Mar 16 12:20:53 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Service_Config.h (ACE_Service_Config):
        Added documentation for the parse_args () method. This was in
        request to Bill Rizzi <rizzi@softserv.com>.

Tue Mar 16 10:57:46 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Svc_Conf.l: Added a new method ace_yy_delete_parse_buffer()
          that frees up FLEX buffers when the program is done.  Thanks to
          Tom Arbuckle <arbuckle@uran.informatik.uni-bonn.de> for
          this fix.

        * examples/ASX/Message_Queue/buffer_stream.cpp (main): Changed pm
          to cm and vice versa to be consistent.  Thanks to Rainer Blome
          <rainer_blome@de.ibm.com> for reporting this.

Tue Mar 16 10:50:42 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_aix4_cset++.GNU: New file to cover
          all AIX 4.x versions with the C Set++ (xlC) compiler.

        * include/makeinclude/platform_aix.GNU, platform_aix4.2.GNU: These
          files are deprecated; they simply include the new file above,
          platform_aix4_cset++.GNU.

Tue Mar 16 10:38:35 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Hash_Bucket_T.cpp:
          Removed default parameter declaration from the constructor for
          ACE_Hash_Bucket_Manager definition. Default parameter
          declarations can only show up in the function declaration.

Tue Mar 16 10:25:53 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.1.x.h, config-aix-4.2.x.h: These now simply
          include config-aix-4.x.h.  All further changes for any AIX 4.x
          version should go in config-aix-4.x.h.

Tue Mar 16 08:12:54 1999  Steve Huston  <shuston@riverace.com>

        * ace/Thread_Manager.cpp: In thread_within(ACE_thread_t), replaced use
          of '==' with ACE_OS::thr_equal.  In hthread_within (ACE_hthread_t),
          replaced use of '==' with ACE_OS::thr_cmp.  Thanks very much to
          Peter Windle <peterw@ugsolutions.com> for pointing this out.

        * README: Added Peter Windle to the list of distinguished contributors.

Tue Mar 16 03:05:22 1999  James Hu <jxh@entera.com>

        * ace/Cache_Hash_T.{cpp,h}:
        * ace/Cache_Heap_T.{cpp,h}:
        * ace/Cache_List_T.{cpp,h}:
        * ace/Cache_Manager.{cpp,h}:
        * ace/Cache_Manager_T.{cpp,h}:
        * ace/Cache_Object.{cpp,h}:
        * ace/Hash_Bucket_T.{cpp,h}:
          Incorporated fixes from purify and benchmarking sessions at Entera.
          Cosmetic changes coming soon (documentation strings and removal
          of magic numbers).

        * ace/Makefile: Added above files to Makefile.

        * ace/OS.i: FreeBSD does not support the timezone() function as
          documented by Vishal below.  Using Chris Gill's implementation
          for LynxOS.

        * tests/Makefile:
        * tests/Cache_Manager_Test.cpp:  Added this test to illustrate
          Cache_Manager.  Still needs changes to use ACE_DEBUG instead of
          cerr.

Mon Mar 15 19:05:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: New config file that covers all of the AIX 4.x
          versions with C Set++ (xlC) and g++.  Many thanks to Susan
          Liebeskind <shl@cc.gatech.edu> for doing to port to AIX 4.3 and
          testing, providing needed changes!

        * ace/OS.i (wait): Fixed to handle ACE_HAS_UNION_WAIT case correctly,
          without depending on AIX - thanks to Susan Liebeskind for this too!

        * ace/ACE.cpp (fork, with zombie avoidance): Fixed to work right
          with ACE_HAS_UNION_WAIT (ala AIX 4.2).

        * include/makeinclude/rules.lib.GNU: New template instantiation
          scheme for AIX with C Set++ (xlC); goes with...
        * etc/xlc_dummy.cpp: New file, purpose of which is to help with AIX
          xlC template instantiation.  This is the new, improved method from
          IBM suport.  It still generates a zillion duplicate definition
          warnings, but IBM doesn't have any better solution.

        * include/makeinclude/platform_aix4.2.GNU: This will work with both
          AIX 4.2 and 4.3 now.  I'll take care of the naming soon.

        * tests/Map_Test.(cpp h): Moved template defs to new file, Map_Test.h
          to satisfy AIX xlC.  Thanks to Susan for this too.

        * tests/DLL_Test.(cpp h): Moved template defs to new file, DLL_Test.h
          to satisfy AIX xlC.

        * tests/Makefile, Makefile.DLL: Fixed to build libDLL_Test correctly
          on AIX w/ xlC.

        * tests/run_tests.sh: Sets LIBPATH correctly for AIX (4.2 at least).

Mon Mar 15 00:26:31 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/ACE-netsvcs.html: Updated this to document the current
          version.  Thanks to Bill Rizzi <rizzi@softserv.com> for
          reporting this.

        * netsvcs/lib/Client_Logging_Handler.cpp: Make sure that debug
          messages go to stderr and log messages go to stdout.  Thanks to
          Bill Rizzi <rizzi@softserv.com> for reporting this.

        * netsvcs/lib/Client_Logging_Handler.cpp (fini): Oops, fixed a
          minor buglet with return values.  Thanks to David for reporting
          this.

        * netsvcs/lib/Client_Logging_Handler.cpp (send): Added a check to
          make sure we don't crash if the ostream is NULL.  Thanks to Bill
          Rizzi <rizzi@softserv.com> for reporting this.

Sun Mar 14 22:54:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp (init): Added an
          ACE_OS::unlink() to prevent STREAM pipes from getting confused
          if this application doesn't shutdown gracefully.  Thanks to Bill
          Rizzi <rizzi@softserv.com> for reporting this.

Sun Mar 14 19:51:25 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Added real-time support library `-lrt' check to
          asynchronous IO functions/libraries checks.

          GNU glibc 2.1 adds support for the POSIX 1b real-time
          specification in the library `librt'.  The POSIX asynchronous IO
          functions may be found in that library.  Currently, `-lpthread'
          must also be linked to in addition to `-lrt'.

Sun Mar 14 17:20:09 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Log_Msg: Generalized the enable_debug_messages() and
          disable_debug_messages() methods so they can be used to enable
          or disable arbitrary priorities.  Thanks to Susan Liebeskind
          <shl@janis.gtri.gatech.edu> for suggesting this.

Sun Mar 14 14:46:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.i (tzset,timezone):  pSOS doesn't support these two
          functions.

        * ace/OS.{cpp, h}: added comments clarifying usage for
          ACE_Time_Value::max_time, use of ACE_PSOS_TM in ACE_OS::signal ().

Sun Mar 14 01:30:43 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (tzset,timezone):  WinCE doesn't support these two
          functions.

Sat Mar 13 12:14:34 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Thread_Manager: Changed the following methods:

          int task_list (..)
          int thread_list (...)
          int hthread_list (..)
          int thread_grp_list (...)
          int hthread_grp_list (...)

          to return actual number of fetched values.

        * ace/Thread_Manager: Added two new methods, task_all_list() and
          thread_all_list(), which return lists of all the tasks and
          threads in a Thread_Manager, respectively.  Thanks to Zoran
          Ivanovic <zorani@pathcom.com> for contributing this.

        * ace/Shared_Memory_{MM,SV}.h: Clarified the relationship of
          these classes to the more powerful ACE_Malloc<> abstraction.
          Thanks to Ti Z <tiz@cisco.com> for suggesting this.

Sat Mar 13 13:27:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (timezone,tzset): not supported on VxWorks.

        * include/makeinclude/ platform_osf1_4.0.GNU: added suppression
          of msg 1180, statement causes unreachble return, with cxx 6.2
          and later.  It doesn't like ACE_OSCALL_RETURN and
          ACE_NOTSUP_RETURN, though it seems to be going overboard.
          The warnings appeared with cxx 6.2-009.  If someone uses
          6.2-007, they might have to manually remove the 1180 suppression.

        * examples/IPC_SAP/SOCK_SAP/CPP-inserver-fancy.cpp (handle_events),
          C-inserver.cpp (main),
          netsvcs/lib/Server_Logging_Handler_T.cpp (handle_logging_record),
          apps/Gateway/Gateway/Concrete_Connection_Handlers.cpp (svc):
          replaced NOTREACHED comment with ACE_NOTREACHED macro.  DU cxx
          started complaining about the unreached return statement.

Sat Mar 13 16:16:13 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/021: Added some comments to page04 about the
          template parameters and the use of the ACE_LOCK parameter in
          particular.  (Thanks to Bala for the suggestion.)

Sat Mar 13 00:37:17 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.28 released.

Fri Mar 12 20:17:47 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Select_Reactor_Base.cpp (handle_input):
        * ace/WFMO_Reactor.cpp (handle_signal): Added support for
          dispatching QOS_MASK and GROUP_QOS_MASK.

Fri Mar 12 19:13:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i:
          Implemented ACE_OS::timezone() for LynxOS.

Fri Mar 12 16:31:19 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ACE-INSTALL.html (Linux): added note about non-thread safe
        glibc 2.0 dynamic loader.  The dynamic loader in glibc 2.1 is
        thread safe.

Fri Mar 12 13:44:54 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp (main): Fixed the errors on VxWorks and
          LynxOS by shifting the START_TEST before the #ifdefs began.

Fri Mar 12 12:53:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: with CC 5.0, replaced ACE_LACKS_ACE_IOSTREAMS
          with ACE_USES_OLD_IOSTREAMS.

        * include/makeinclude/platform_sunos5.5_sunc++.GNU: with CC 5.0,
          added -library=iostream,no%Cstd to CCFLAGS.

        Thanks to Diethard Ohrt <Diethard.Ohrt@siemens.at> for the
        above two updates to support CC 5.0.

Fri Mar 12 12:09:14 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: fixed comment after #endif to match its #ifdef.

Fri Mar 12 11:46:55 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Added two new functions tzset () and timezone (). The former sets the
        timezone information based on an environment variable TZ which is
        set when the user logs on. (For St. Louis TZ=US/Central and
        timezone = 360 minutes or 6 hrs. from GMT.). timezone () retrieves
        the timezone value in seconds.

        * ace/OS.h (ACE_OS): Added a wrapper for timezone () and tzset ().
        * ace/OS.i (ACE_OS): Added Implementation for the above functions.

        The timezone information is being used in the Time Service.

Thu Mar 11 20:11:13 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Get_Opt.cpp (operator): Reverted the following change since
          it will break documented behavior.  Thanks to Jon Biggar for
          reporting this.

        * ace/Get_Opt.cpp (operator): When the getopt encountered an
          unknown option or an option with a missing required argument, it
          returned '?' and continues to allow processing with the next
          argument (no problem so far).  However, if it encountered an
          argument that is not an option (i.e. no '-' in front) or if it
          encounters a double dash (i.e. '--') it returns EOF which
          disallows further processing.  Now, it returns a '?'  after
          advancing optind to allow further processing.  Thanks to Mark
          Laffoon <mark.laffoon@centraxcorp.com> for reporting this.

Thu Mar 11 15:34:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/ACE.cpp: removed unnecessary #includes of ace/IPC_SAP.h,
          ace/Process.h, and ace/SString.h.  Thanks to Elias Sreih
          <sealstd1@nortelnetworks.com> and Liang Chen
          <chenl@nortelnetworks.com> for suggesting this.

        * ace/OS.cpp (ACE_OS::thr_setspecific): on ACE_WIN32 with
          ACE_HAS_TSS_EMULATION, don't register the one native key
          with ACE_TSS_Cleanup::instance ().  There's no need, because
          it doesn't have a destructor.  And, it prevents startup
          because the ACE_TSS_Cleanup structures haven't been set up
          completely when it is called.  Thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for reporting this.

 Thu Mar 11 14:04:15 1999 David L. Levine <levine@cs.wustl.edu>

        * include/makeinclude/platform_chorus_ghs.GNU: added protection
          to not reset exceptions flag if it was defined.

Thu Mar 11 12:53:41 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Thread_Manager.i:
          The method to return the number of threads was using thr_lists_
          as a pointer, but it isn't.

Thu Mar 11 10:12:51 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Thread_Manager: Added a method to return the current number
          of threads in the ACE_Thread_Manager.  Thanks to Zoran Ivanovic
          <zorani@pathcom.com> for suggesting this.

Thu Mar 11 10:27:51 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp (main): Allowed the main to be accessible on
          all platforms by shifting the #ifdefs inside the main. The
          problem arose due to the main being declared an undefined
          reference on LynxOS.

Wed Mar 10 13:31:37 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/config-linux-common.h:
        Commented out ACE_HAS_DLFCN_H_BROKEN_EXTERN_C, ACE_LACKS_MSYNC and
        ACE_LACKS_MADVISE.  They are no longer needed for recent revisions
        of glibc 2.x.  Thanks to <nbecker@fred.net> for pointing this out.

Wed Mar 10 11:05:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Thread.h,ace/Thread_Manager.h (exit): added comment
          that exit () should not be called by main thread.

        * ace/OS.h: added an ACE_OS_thread_key_t typedef on WIN32
          with ACE_HAS_TSS_EMULATION.  Thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for reporting that
          it was missing.

        * include/makeinclude/platform_osf1_4.0.GNU: disable msg 1136 with
          cxx 6.1-029.  Thanks to Doug Anderson <dla@home.com> for
          reporting this.

Wed Mar 10 10:57:16 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Basic_Types.h:
          Fixed minor problem that would show up if sizeof(int)==2; thanks
          to Cristian Ferretti <cfs@mat.puc.cl> for reporting this
          problem.

Wed Mar 10 10:13:52 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Message_Block.i (reference_count): Made sure the inline
          function is defined before used.  Thanks to David for noticing
          this.

Wed Mar 10 08:52:59 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_chorus.GNU: fixed
          exceptions=1 support.  Thanks to Wei Chiang for
          reporting this.

        * include/makeinclude/wrapper_macros.GNU: added exceptions=1
          support for pre-2.8 g++.  It's not recommended, because pre-2.8
          g++ doesn't support exceptions well.  It's provided for
          completeness.

        * include/makeinclude/platform_chorus.GNU: removed
          exceptions=1 support, because now it's in wrapper_macros.GNU.

Tue Mar 09 21:54:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * netsvcs/Makefile,netsvcs/clients/Makefile: updated
          ACE_COMPONENTS check to allow everything to be built
          in the default case, when ACE_COMPONENTS isn't set.
          Thanks to Carlos for noticing this.

        * netsvcs/Makefile,netsvcs/servers/Makefile: moved
          netsvcs/server build suppression, when ACE_COMPONENTS
          lacks Other, from netsvcs/Makefile to netsvcs/servers/Makefile.

        * examples/Naming/Makefile: suppress build if ACE_COMPONENTS
          is defined and doesn't contain Other.

        * performance-tests/Misc/Makefile: don't build test_naming
          if ACE_COMPONENTS is defined and doesn't contain Other.

        * ace/Log_Record.i (length): cast the long argument to ACE_UINT32,
          to avoid warning message if long is greater than 4 bytes.
          Thanks to Hao Ruan <hruan@lucent.com> for reporting this.

Tue Mar  9 20:56:35 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/rules.nested.GNU:
          If the DIRS macro is not set we simply do not recurse.  Before
          this change we got an error from the shell.

        * bin/auto_compile:
          If there are no errors then send a message when a warning was
          detected during compilation.

Tue Mar 09 15:15:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/create_ace_build: check for ace/ and include/ directories
          in top level directory, instead of ace/, examples/ and netsvcs/.
          This allows use with trimmed-down workspaces.  Thanks to Jeff
          for suggesting this.

        * include/makeinclude/platform_chorus_ghs.GNU: added exceptions
          make option support.  Thanks to Wei Chiang for reporting that
          it wasn't supported.

Tue Mar  9 12:59:09 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * docs/ACE-subsets.html: Updated the subsets to reflect what's
          actually in the ACE Makefile.

        * ace/Message_Block.h: Changed the private section in both
          ACE_Message_Block and ACE_Data_Block to protected allowing
          derived classes to access data members of the parent class;
          Thanks to Alexander Davidovich <sasha@ms.com> for suggesting
          this.

        * ace/Message_Block: Added new reference counting accessor methods
          to Message_Block and Data_Block.  Thanks to Alexander Davidovich
          <sasha@ms.com> for suggesting this.

Tue Mar 09 11:21:49 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Message_Block.h: For some reason, default ctor and operator=
          must be declared private instead of protected if they are not to
          be accessable.  Otherwise, VC complains.

Tue Mar 09 01:06:44 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.27 released.

Tue Mar 09 00:39:23 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.26 released.

Mon Mar 08 23:23:35 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.{h,cpp} (thread_within,hthread_within,
          thread_grp_list,hthread_grp_list): Added new functions to
          check if a thread is managed by the thread manager and collect
          the thread ids/handles in a thread group.  Thanks to XuYifeng
          <wj@puclic.hz.zj.cn> for motivating the addition.

Mon Mar 08 22:23:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: added FOR_TAO short-cut to ACE_COMPONENTS.
          If the ACE_COMPONENTS variable is set to FOR_TAO, then
          only the components necessary to support TAO will be
          built into libACE.

        * netsvcs/clients/Makefile: suppress build if Other
          ACE_COMPONENT isn't built.

        * netsvcs/Makefile: suppress server build if Other and Token
          ACE_COMPONENT aren't built.

Mon Mar  8 17:35:04 1999  Gonzalo Diethelm  <gonzo@tango.cs.wustl.edu>

        * ace/NT_Service.cpp:
        * ace/NT_Service.h:
          Now the handle_control method calls separate protected virtual
          methods to do its work. That way, it is easier to override what
          must be done on each case, just by overriding one of the new
          methods.

Mon Mar 08 15:41:08 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_hpux.GNU: Added -DACE_LACKS_PRAGMA_ONCE.
          Thanks to Hao Ruan for reporting this.

        * README: Added Hao Ruan to the list of contributors.

Mon Mar 08 12:27:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Service_Config.cpp (handle_signal): added ACE_UNUSED_ARG (sig)
          if ACE_NDEBUG is defined, to avoid compilation warning about
          unused argument with debug=0.

        * docs/ACE-subsets.html: added subset characterizations on
          several platforms.

        * include/makeinclude/platform_sunos5_ghs.GNU: fixed AR and
          ARFLAGS to use CC to build static libs.  It looks like GreenHills
          no longer supplies a separate archiver with 1.8.9.

Mon Mar 08 11:58:03 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Task.cpp (activate): Made sure we don't mess with the passed
          in grp_id if the task was not previously actived.  Thanks to
          XuYifeng <wj@puclic.hz.zj.cn> for noticing this.

Fri Mar 05 14:15:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (ACE_TSS_Cleanup (),free_all_keys_left ()):
          with ACE_TSS_Emulation only, don't free the TSS key that
          ACE_TSS_Cleanup uses internally for its in_use_ member.
          The key doesn't get freed in ACE_OS::thr_key_detach (),
          because that gets called during shutdown.  So,
          free_all_keys_left () would attempt to free it.  But,
          the dynamic memory associated with it had already been
          deleted by ACE_TSS_Cleanup::exit ().  And, there
          aren't any other resources associated with it.  So,
          free_all_keys_left () can just skip over it.

        * ace/OS.cpp (cleanup_tss): disabled call to
          free_all_keys_left () with ACE_HAS_TSS_EMULATION, because
          we can't safely access the TSS values that were created by
          the main thread.  They were destroyed when the ACE_TSS_Cleanup
          instance exit () function was called.  There don't seem to
          be any leaks if free_all_keys_left () isn't called, anyways.

Fri Mar  5 11:05:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Log_Msg/Log_Msg.dsw: Fixed the path to Callback.dsp.
          Thanks to Zoran Ivanovic <zorani@pathcom.com> for reporting
          this.

        * performance-tests/Misc/Makefile: Removed test_guard from the
          Makefile.  This test requires having
          ACE_USES_OBSOLETE_GUARD_CLASSES defined in order to compare
          ACE_Guard to ACE_Thread_Mutex_Guard (obsolete).

        * ace/OS.h: Removed ACE_THREAD_GUARD*.

        * ace/config-psos-{diab,tm}.h: Removed
          ACE_LACKS_METHOD_DEFINITIONS_IN_CLASS_TEMPLATE.  It is no longer
          needed.

        * ace/Synch_T.{h,i}: One would assume compilers are smart enough
          to treat _all_ in-class functions as inline.  Not for template
          member functions.  This is true at least for SunCC, egcs, gcc,
          and MSVC.  These functions seems to impose extra overhead.
          After removing the in-class definitions for ACE_Guard, the cost
          of using ACE_Guard is now as good as using
          ACE_Thread_Mutex_Guard (which, by the way, is depricated.)  So,
          there's no need for a ACE_THREAD_MUTEX_GUARD class.  Afterall,
          the "ACE Way[TM]" of defining inline functions is the "Right
          Way[TM]".  The motto of the change is, always put inline
          functions in .i files (even for template specialization)
          otherwise, they'll become regular functions.  If you really need
          to put function definitions within class definitions, mark
          inline function explicitly.

          Thanks to Andy Marchewka <AndyM@who.net> for noticing the
          performance differences between ACE_Thread_Mutex_Guard and (old)
          ACE_Guard.

Fri Mar  5 11:06:12 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Svc_Conf.y: Always print out an error message when we
          increment yyerror.  Thanks to Ulf Jaehrig <jaehrig@desys.com>
          for reporting this.

Thu Mar  4 12:26:47 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Message_Queue_Notifications_Test.cpp (svc): Made increment
          of <role_> thread-safe.

Thu Mar 04 07:00:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-aix-4.2.x.h: added ACE_LACKS_PRAGMA_ONCE
          to xlC section.  Thanks to Rainer Blome <rainer_blome@de.ibm.com>
          for reporting this.

        * ace/config-osf1-4.0.h: added ACE_LACKS_PRAGMA_ONCE to
          cxx section, with __DECCXX_VER < 60090010.  This should
          help avoid compilation warnings from cxx 5.x.  Thanks
          to Oliver M. Kellogg <Oliver.Kellogg@vs.dasa.de> for
          reporting this.

        * ACE-INSTALL.html: corrected name of ace/config-linux-lxpthreads.h.
          Thanks to Barry Hoggard <hoggard@cfx.com> for reporting this.

        * tests/Makefile,Makefile.DLL: instead of always running a
          recursive make to build libDLL_Test.so, only do that if it
          needs to be built.  And, added dependencies to Makefile.DLL.

        * ace/Makefile: commented out use of TEMPLATE_FILES.  I don't
          believe that it's needed.

        * ace/CLASSIX/Makefile: removed unused TEMPLATE_FILES and
          LSRC2 macros, and gethrtime build rule.

        * docs/ACE-subsets.html: updated, and added documentation for
          ACE_COMPONENTS and the ACE_OS adapation layer.

Wed Mar  3 22:30:02 1999  James CE Johnson  <jcej@lads.com>

        * ace/IOStream_T.{cpp|h|i}: Those last changes break (at least)
          examples/IOStream/server.  I'm backing them out and restoring
          the 4.6.25 versions of these files until Chris can get back to
          me about what's going on.

Wed Mar 03 21:49:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (socket_init,socket_fini): replaced use of
          cerr with ACE_OS::fprintf.

        * ace/OS.h: conditionally #include Object_Manager.h, only
          if ACE_HAS_MINIMAL_ACE_OS is not defined.  Merged main ()
          #defines for Unix/NT and WinCE, to ease maintenance.

        * ace/config-minimal.h: removed undef of
          ACE_HAS_NONSTATIC_OBJECT_MANAGER, because OS.h now conditionally
          #includes Object_Manager.h.  Added ACE_MAIN_OBJECT_MANAGER #define,
          to only instantiate the ACE_OS_Object_Manager.

        * ace/config-WinCE.h: added ACE_MAIN and ACE_MAIN_OBJECT_MANAGER
          #defines, to support merging of the main () #defines in OS.h.

        * ace/OS.{h,cpp}: added ACE_OS_Object_Manager::starting_up ()
          and shutting_down ().  (ACE_TSS_Cleanup::remove): replaced
          use of ACE_Object_Manager::shutting_down () with
          ACE_OS_Object_Manager::shutting_down ().  Thanks to Irfan
          for reporting that, otherwise, ace/Object_Manager.h had
          to be #included by OS.cpp on NT, if ACE_NONSTATIC_OBJECT_MANAGER
          wasn't #defined.

        * tests/Basic_Types_Test.cpp: hacked a bit to support building,
          and running, with ACE_HAS_MINIMAL_ACE_OS.  Don't look,
          unless you want to forever ruin all of your good coding habits.

Wed Mar 03 19:08:52 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_T.h (ACE_Map): Further degraded my code to make it
          compile with lame compilers ;-) This time it was the lame pSOS
          diab compiler that could not recongnize a typedef in the base
          template class.

Wed Mar 03 11:31:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added guideline to try to limit
          the length of source code lines to less than 80 characters.
          And, reverted to the previous version of the file.  The
          last version was apparently committed by mistake.

        * include/makeinclude/wrapper_macros.GNU (ACE_HAS_GNUG_PRE_2_8):
          added support for eg++.  Assume that it's egcs, and therefore
          ACE_HAS_GNUG_PRE_2_8 is set to 0.  Thanks to Russell L. Carter
          <rcarter@consys.com> for supplying a patch.

Wed Mar  3 09:35:20 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Memory_Pool.cpp (handle_signal): Added a check to see if the
          current mapping is up to date so that faults caused by other
          mappings will be passed on.  Thanks to
          Joseph Weihs <joseph-w@Orbotech.COM> for reporting this and for
          providing a fix.

Wed Mar  3 05:48:24 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/ACE.cpp (fork): Added an extra pair of parens within the
          WIFE*() macros to work around GCC bugs.  Thanks to Alexandre
          Karev <Alexandre.Karev@cern.ch> and Andre Folkers
          <folkers@informatik.mu-leubeck.de> for reporting this.

Tue Mar  2 22:50:18 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Proactor.cpp:
        Added forward declaration for ACE_Proactor_Impl. Using static cast
        to down cast from <aiocb *> to
        <ACE_POSIX_Asynch_Result *>. Thanks to John.Mulhern@lawson.com for
        reporting the warnings in HP UX.

Tue Mar 02 21:17:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},Object_Manager.{h,cpp}: changed Object_Manager
          state to be per-instance, instead of global.  This makes
          it easier to enforce startup and shutdown ordering,
          regardless of whether the Object_Managers are static,
          created on the stack of main (), or dynamically allocated.

        * ace/IOStream_T.h: fixed a couple more line breaks.

        * Makefile: added support for suppressing man page regeneration
          on make release command line.

        * include/makeinclude/platform_osf1_4.0.GNU: added automated
          support for warning 1136.  It's only supported by cxx 6.2.
          Thanks to James CE Johnson <jcej@lads.com> for reporting
          this, and to Andrew Hobson <ahobson@eng.mindspring.net> for
          diagnosing the problem.

        * ace/OS.i (thr_getspecific): added #else clause w/ACE_NOTSUP_RETURN
          to support ACE_HAS_MINIMAL_ACE_OS.

        * ace/config-minimal.h: added #undef of
          ACE_HAS_NONSTATIC_OBJECT_MANAGER, to avoid #include of
          Object_Manager.h.  And, added #define ACE_USE_THREAD_MANAGER_ADAPTER
          so that ACE_Thread_Adapter::invoke () won't use any
          ACE_Thread_Exit functions.

        * ace/OS.cpp (ACE_Thread_Adapter::invoke): removed
          ACE_HAS_MINIMAL_ACE_OS conditional compilation, because
          config-minimal.h now #defines ACE_USE_THREAD_MANAGER_ADAPTER.
          And, added #else clauses to three TSS-related functions.

Tue Mar 02 14:43:29 1999  Steve Huston  <shuston@riverace.com>

       * ace/Map_T.(h i): Qualified types inherited from template base
         classes; qualified with ACE_TYPENAME where needed.  Now aC++
         is happy.

       * ace/config-hpux-10.x-hpc++.h: Added ACE_HAS_TYPENAME_KEYWORD for
         aC++.

       * tests/DLL_Test.cpp: Enable on HP-UX.  Generalize the library
         prefix/suffix with the platform definitions from OS.h.

Tue Mar  2 12:41:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

       * ace/IOStream_T.{cpp, h}: Fixed some line breaks that were
         inadvertently introduced when these files were last checked in.

Tue Mar  2 10:54:16 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * Cache_{Hash,Heap}_T.{h,cpp}:
        * Cache_Manager[_T].{h,cpp}:
        * Cache_Object.cpp:
        * Hash_Bucket_T.{h,cpp}: Fixed erroneous include directives.
          Thanks to Christian.Destor@alcatel.fr for reporting this.

Tue Mar  2 10:33:47 1999  James CE Johnson  <jcej@lads.com>

        * ace/IOStream_T.{cpp|h|i}: Christopher Healey
        <chealey@entera.com> noticed occasional core dumps from
        ~ACE_IOStream on heavily loaded systems.  It turns out that
        streambuf_ was being deleted out from under the object.  These
        three files include his patches for this problem.

Tue Mar  2 02:28:54 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CDR_Stream.h (do_byte_swap): This accessor function should
          be public accessible.  Otherwise it's useless.  Reorder class
          declaration so the protected members appear before private
          members/functions.

Mon Mar  1 23:26:41 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp (ACE_HAS_SVR4_DYNAMIC_LINKING):
          Added this check to prevent this test from being run
          separately.

Mon Mar 01 17:02:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.25 released.

Mon Mar 01 16:54:02 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp,Object_Manager.cpp: fixed ObjMan state logic to
          ensure that the ACE_Object_Manager is fini'd before the
          ACE_OS_Object_Manager, even when both are static objects.
          Thanks to Carlos for reporting this problem.

Mon Mar 01 14:05:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.24 released.

Mon Mar 01 13:04:53 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.*,Object_Manager.{h,cpp},ACE.cpp: added class
          ACE_OS_Object_Manager.  It manages the three preallocated
          locks that ACE_OS uses.  Many thanks to Nanbor for
          suggesting the scheme to avoid dependency on Synch_T.h
          for the ACE_Guard instantiations:  OS.cpp now has a
          couple of lightweight guards for its internal use.

        * ace/ACE.{i,cpp},OS.*: moved ACE::strecpy () and
          ACE::unique_name () from class ACE to ACE_OS.  That
          allows ACE_OS to be self-contained.  The ACE versions
          were left for backward compatibility; they now just
          wrap the ACE_OS versions.

          With these changes, a stand-alone ACE OS adaptation layer
          can now be built.  The ace/config-minimal.h config file
          should be included in ace/config.h if you want to build
          the ACE OS adaptation layer.

          Two deficiencies remain with the ACE OS adaptation layer:
          the dependencies on ACE_Log_Msg have been conditionally
          compiled out by config-minimal.h.  Similarly, there is
          a conditional dependency of ACE_Thread_Adapter::invoke ()
          on ACE_Thread_Exit.  It would probably be best to move
          that to ACE Thread_Manager, if possible.

        * ace/config-minimal.h: suppress ACE_HAS_TSS_EMUATION, because
          it requires other ACE headers to be #included.

        * ace/Synch.{i,cpp} (~ACE_Recursive_Thread_Mutex): added
          a call to this->remove ().  Without it, the mutex wasn't
          being destroyed.  Uninlined both the destructor to avoid
          code bloat if there are multiple returns in a function
          that instantiates an ACE_Recursive_Thread_Mutex locally.
          And, uninlined the remove () function, to save code space,
          because it's non-trivial and not expected to be time critical.

Sun Feb 28 20:21:05 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Makefile.DLL (realclean): Added the realclean target to
          the makefile.

        * tests/run_tests.sh (ace_version): Disabled DLL_Test for chorus,
          LynxOS, Unicos platforms as they dont support shared libraries.

Sun Feb 28 20:08:54 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/POSIX_Proactor.cpp:
        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Asynch_IO.cpp:
        Fixed to pass <ACE_POSIX_Asynch_Result *> wherever <aiocb *> is being
        passed, since it is ok to pass the derived class pointer in place of
        base class pointer.
        Defined the fields <bytes_transferred_> and <error_> in
        <ACE_POSIX_Asynch_Result> so that they can be used instead of
        <AIO_SYSERROR> and <AIO_SYSRETURN>. Because <aiocb:;aio_return> and
        <aiocb::aio_error> fields  are not supported on HP yet.

Sun Feb 28 14:22:38 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_linux_kcc.GNU: added
          -D_GNU_SOURCE to CFLAGS, because it's needed with
          glibc 2.1.  It can't go into the config file, because
          it needs to be #defined before the #include of
          features.h.  But, features.h #defines the glibc version.
          Thanks to Ben Eng <bet@jetpen.com> for reporting this.

        * ace/config-minimal.h: disable ACE_ASSERT, ACE_DEBUG, and ACE_ERROR.

Sun Feb 28 12:57:53 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.cpp (terminate): The condition for handling
          joining thread was wrong.  Thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for reporting the bug.

Sun Feb 28 08:37:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (ACE_Thread_Adapter::invoke): replaced call
          to ACE_Thread::self () with call to ACE_OS::thr_self (),
          so that we don't need to #include ace/Thread.h.  Thanks
          to Russ Noseworthy for reporting this.

Sat Feb 27 17:25:52 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: updated dependencies.  They didn't have
          any .shobj dependencies, just .obj.

        * tests/Makefile: ran make depend.  It didn't have any
          dependencies.

        * include/makeinclude/platform_linux_kcc.GNU: added note that
          evaluation copies of KCC might come with libraries that were
          built with exception handling support.  To use them, ACE must be
          built with exception handling support
          (exceptions=1).  Thanks to John Lindal <jafl@cco.caltech.edu>
          for reporting this.

          Also, added support for the exceptions make flag.

Sat Feb 27 13:31:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Fixed the remaining problems with ACE_OSCALL_RETURN
          macro usage for sem_wait(), sem_post(), and sem_trywait().
          Thanks to David Levine for reporting this.

        * ace/OS.h: Added a set of ACE_THREAD_GUARD macros that use
          ACE_Thread_Mutex_Guard.  These seem to be faster on many
          platforms than the ACE_Guard<ACE_Thread_Mutex>.  Thanks to
          Andy Marchewka <AndyM@who.net> for reporting this.

        * ace/Dump.cpp: Moved the explicit template instantiation of
          ACE_Guard<ACE_Thread_Mutex> out of dump and put it into
          Synch.cpp, where it's with the other instantiations.

Fri Feb 26 23:58:46 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.{h,i,cpp}:
          Added some read- and write-pointer alignment
          functions, as proposed by Carlos. Also deleted some
          ACE_OutputCDR members that weren't being used.
          Checked the build on NT and suncc. Must come up with
          some kind of test for these new functions.

Fri Feb 26 21:56:05 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: moved ACE_COMPONENTS to after include
          of wrapper_macros.GNU, so that users can set it in
          their platform_macros.GNU.  Also, added ACE_LACKS_ACE_OTHER
          to CFLAGS if Other ACE_COMPONENT is not built.

Fri Feb 26 17:48:32 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_hpux_aCC.GNU: Added OCFLAGS
          value for optimize=1 builds; added support for distrib=1
          builds to build for off-site distribution.

Fri Feb 26 12:38:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp: added #include "ace/Thread_Manager.h" on
          WIN32, for ACE_Thread_Descriptor declaration.  Thanks
          to Barry Hoggard <hoggard@cfx.com> for reporting this.

        * ace/Managed_Object.h: fixed comments in description.

Fri Feb 26 11:56:08 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Log_Priority.h (ACE_Log_Priority): Removed all references to
          ACE_HAS_BROKEN_ENUMS since it has been deprecated (see David's
          ChangeLog entries from Feb 5).

Fri Feb 26 11:09:47 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.i (sema_destroy): ACE_OSCALL and ACE_OSCALL_RETURN macro
          calls for sem_destroy, sem_unlink and sem_close had too few
          arguments.  Added the missing arguments for the macros.

Fri Feb 26 10:59:45 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/WFMO_Reactor/test_talker.cpp (main): Fixed to
        use the new proactor interface.

Thu Feb 25 22:17:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (spa, for VxWorks only): updated comment about
          ::sp () default values, and added comments for each argument
          to ::taskSpawn ().  Thanks to Tad Jarosinski <tadj@qualcomm.com>
          for asking about spa ().

Thu Feb 25 20:10:06 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Synch.h:
        * ace/Synch.i:
        * ace/Synch_T.h:

        Added an ACE_Null_Semaphore class.  Thanks to Irfan for his guidance
        on this.  Also fixed ACE_SYNCH_SEMAPHORE to be ACE_Null_Semaphore
        when ACE is built without thread support.

Thu Feb 25 18:37:27 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/WFMO_Reactor (cancel_wakeup and masks_ops): Fixed the
          cancel_wakeup() method.  It was doing too much, i.e., if the
          masks were reduced to null, it was removing the event handler
          entry.  The new version behaves more like the Select Reactor in
          that it simply plays with the masks without removing the event
          handler.

          Also, implemented the mask_ops() operation.

          Thanks to Douglas C. Schmidt <schmidt@cs.wustl.edu> and Zoran
          Ivanovic <zorani@pathcom.com> for helping in pinpointing the
          problem.

        * ace/Service_Config.cpp (fini_svcs and close): Since the reactor
          and proactor singletons potentially call user code (in
          handle_close()), we must shut them down *before* the log msg is
          destroyed.  Therefore, moved the close_singletons() call from
          close() to fini_svcs().

        * ace/Select_Reactor_Base.cpp (bit_ops): Since we return the old
          masks everytime, find the old reactor masks at the start of the
          method.  This automatically does the work of the GET_MASK
          operation.

        * ace/Proactor.cpp: Added #include "ace/Object_Manager.h"

        * examples/Reactor/WFMO_Reactor/test_prerun_state_changes.cpp:
          handle_close() was getting called twice; changed code to prevent
          double deletion.

        * examples/Reactor/WFMO_Reactor/test_handle_close.cpp: Added the
          ability to cancel reads, change masks, and check for existing
          reactor masks.

Thu Feb 25 17:35:10 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp:
          Changed the OBJ_SUFFIX to ".so" as on Linux the .o file cannot
          be a shared object. Also the OBJ_PREFIX is now "./lib" for
          non-Win32 platforms.
        * tests/Makefile:
          Additional option DLL_TEST added so that a .so can be produced
          for DLL_Test.
        * tests/Makefile.DLL:
          This is the makefile which produces libDLL_Test.so for DLL_Test.

Wed Feb 24 23:47:22 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/Proactor/test_proactor.cpp:
        * ace/WIN32_Asynch_IO.h:
        * ace/Proactor.cpp:
        * ace/WIN32_Proactor.cpp:
        * ace/Proactor.h:
        * ace/Proactor_Impl.h:
        * ace/POSIX_Proactor.h:
        Changed the return values of the <ACE_Proactor::handle_events> API to
        return -1 on error, 0 on timeout, 1 on success. This has been done so
        that it looks like the <ACE_Reactor::handle_events>. Previously
        <ACE_Proactor::handle_events> was returning -1 on error, 0 on success
        and 0 on timeout also.

        Fixed the <ACE_POSIX_AIOCB_Proactor::handle_events> and
        <ACE_POSIX_SIG_Proactor::handle_events> to do indefinite blocking when
        ACE_INFINITE is passed. <sigwaitinfo> is used instead of
        <sigtimedwait>.

        Renamed the <ACE_AIO_Accept_Handler> class to more appropriate
        <ACE_Notify_Pipe_Manager>.

Wed Feb 24 22:08:50 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Fixed all the sem_* calls so that they no longer use
          the ACE_ADAPT_RETVAL() macro, which was broken since these calls
          all return -1 on failure.  Thanks to John E. Bossom
          <John.Bossom@cognos.com> for reporting this.

Wed Feb 24 17:40:49 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/combine:
        * docs/tutorials/colorize:
          A few enhancements to make the colorization better.  Also, when
          #include "ace/something.h" is seen by the colorizer, it will
          create a link to ../../../ace/something.h.  That should give
          direct links from the tutorial pages to the ACE headers.

Wed Feb 24 16:56:51 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/017/barrier2.cpp: Added this to show how you can
          change the thread count while threads are still active.

        * docs/tutorials/017/*.html: Regenerated due to the new file.

        * docs/tutorials/018/*.html: Added Kirthika's abstract &
          regenerated.

        * docs/tutorials/018/token.cpp:  Typo in the comments...

Wed Feb 24 14:57:10 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ASYS_ONLY_WIDE_STRING): New UNICODE macros to convert
          char* to wchar* when UNICODE is defined but not on CE.

        * ace/Service_Config.cpp (parse_args): Convert getopt.optarg using
          ASYS_ONLY_WIDE_STRING.

Wed Feb 24 13:54:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-minimal.h: changed #include protection to
          ACE_CONFIG_MINIMAL_H, so that this config can be #included
          by others.

        * ace/OS.{h,cpp},Thread_Manager.h: moved ACE_Thread_Control and
          ACE_Thread_Exit class definitions from Thread_Manager.h to OS.h,
          so that Task.h no longer needs to be #included by OS.cpp.

        * ace/OS.cpp: protected #include of Containers_T.h with
          defined (ACE_WIN32) || defined (ACE_HAS_TSS_EMULATION).

Wed Feb 24 05:30:59 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Message_Queue_T.i (dequeue): Replaced the improper
          self-recursive call to dequeue() with dequeue_head().  Thanks to
          Marc Engel <engelm@tlse.sofreavia.fr> for reporting this.

Tue Feb 23 20:58:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Make sure to do the right thang if we're compiling the
          ACE recursive thread mutexes on platforms that lack threading.

        * ace/Service_Object: Added a new ACE_Service_Object constructor
          that takes an ACE_Reactor * and passes this down to the
          ACE_Event_Handler base class.

        * ace/Event_Handler: Added a new ACE_Event_Handler constructor
          that takes an ACE_Reactor * and an int priority that default to
          the right values.

Tue Feb 23 21:53:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h,README: added ACE_HAS_MINIMAL_ACE_OS support.

        * ace/config-minimal.h: added this config file.  It defines
          ACE_HAS_MINIMAL_ACE_OS.  It is designed to build only
          the minimal ACE_OS adaptation layer.

Tue Feb 23 20:28:45 1999  Marina Spivak  <marina@cs.wustl.edu>

        * ace/SString.{h,i,cpp}: Added a private member <buf_len_> to the
          ACE_CString class to keep track of the size of data buffer, and
          avoid unnecessary memory reallocations.  Updated class methods
          to use buf_len_.

Tue Feb 23 19:54:55 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Asynch_IO.cpp:
          Fixed the potential dominance warnings in POSIX
          implementation. Updated the documentation.

Tue Feb 23 18:11:11 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * examples/DLL/DLL.dsw:
          examples/DLL/Main.dsp:
          examples/DLL/Newsweek.dsp:
          examples/DLL/Today.dsp:
          Added extra include and linker options to the projects.

        * tests/DLL_Test:
          Added OBJ_PREFIX to cater to the problem which arose due to the fact
          that the .o is produced under the .obj directory on SunOS.

        * tests/run_tests.sh:
          tests/run_tests.bat:
          Made an entry for DLL_Test.

Tue Feb 23 16:54:33 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.i (recursive_mutex_trylock and recursive_mutex_lock):
          Removed the "abandoned" versions of these routines.  Abandoned
          mutexes are only supported for process mutexes, but not for
          thread mutexes.

Tue Feb 23 15:50:40 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/Proactor.cpp:
        * ace/Proactor.h:
        * ace/Proactor_Impl.h:
        * ace/POSIX_Proactor.h:
        * ace/POSIX_Proactor.cpp:
        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Asynch_IO.cpp:
        * ace/WIN32_Proactor.cpp:
        Implemented <post_completion> for POSIX platforms. Thanks to Irfan
        for the cool design. This API has been changed a little bit for
        portability. <post_completion> API now exists at
        <ACE_Asynch_Result_Impl> class. To post completions, users will have
        to get hold of an <ACE_Asynch_Result_Impl> class (either get it from
        the predefined factory methods at the Proactor or derive from
        <ACE_WIN32_Asynch_Result> or <ACE_POSIX_Asynch_Result>, then call
        <post_completion> on it passing in the <Proactor_Impl *> which can
        be got through <implementation> method in the <ACE_Proactor>.
        The need for RTTI has been avioded in this design.

Tue Feb 23 15:19:33 1999  Steve Huston  <shuston@riverace.com>

        * ace/NT_Service.(h cpp): Added two new methods:
          state (DWORD *, ACE_Time_Value * = 0) as an alternate way to get the
          service's state, with definite indication of error.  Also changed
          comments on the other state() method to clarify the return value.
          test_access (DWORD) tests caller's access to the service.
          Thanks to Martin Krumpolec <krumpo@pobox.sk> for these ideas and
          suggestions!

Tue Feb 23 14:12:52 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Active_Map_Manager_T.h (npos): Added a new static member
          function that returns a key that cannot be found in the map.
          Thanks to Fernando D. Mato Mira <matomira@acm.org> for
          suggesting this.

Tue Feb 23 12:15:09 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Svc_Conf.y:
        * ace/Svc_Conf_y.cpp:
        * ace/Parse_Node.cpp (symbol):
        * ace/OS.cpp (fork_exec):
        * ace/INET_Addr.cpp (ACE_INET_Addr): More Unicode fixes.

Tue Feb 23 12:00:21 1999  Steve Huston  <shuston@riverace.com>

        * examples/NT_Service/main.cpp: Allow -i option without a value, and
          default to AUTO_START.  Also, added a README file to explain how to
          use the program.  Thanks to Zoran Ivanovic <zorani@pathcom.com> for
          the change and the README file!

Mon Feb 22 22:03:47 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/auto_compile_win32.pl: Perl script for compiling all the
          million different config. combination on Win32.  Hey, it also
          works on Alpha.  Thanks to Darrell Brunsch for testing it on
          Alpha/NT.

        * ace/ace_{dll,lib}.dsp: Fixed broken project settings.

Mon Feb 22 21:56:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Sched_Params.cpp: removed #include of ACE.h because it's
          not necessary.

        * ace/Makefile: added ACE_COMPONENTS default definition.
          Moved Sched_Params from THREADS_FILES to OS_FILES because
          OS.cpp needs it.  It only contributes 172 bytes to libACE
          on VxWorks and 248 on LynxOS.

Sun Feb 21 18:52:17 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.23 released.

Sun Feb 21 08:46:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (recursive_mutex_{init,lock,trylock}: added some
          ACE_UNUSED_ARGS.

        * ace/OS.{i,cpp} (cond_*): uninlined the ACE_OS:cond_* function
          versions with ACE_LACKS_COND_T.  Most are too big to be
          good candidates for inlining.  And the others cause use-before-
          definition problems in OS.i.

Sun Feb 21 00:17:58 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * websvcs/lib/URL_Addr.i: Can now copy null Addrs.  Also added
          hash function implementation.

        * websvcs/lib URL_Addr.h: Added hash function.

        * websvcs/lib/URL_Addr.cpp: Fixed a bug with
          ACE_HTTP_Addr::create_relative_address and urls beginning with
          "/".  It used to copy the first '/', which wasn't needed.

Sat Feb 20 15:39:16 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},Object_Manager.{h,cpp}: changed ACE_OS::exit ()
          to call an exit hook that is registered by the ACE_Object_Manager,
          instead of directly calling ACE_Object_Manager::fini ().

        * ace/OS.i (thr_self): moved definitions to before first use.

Sat Feb 20 11:50:30 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (thr_equal): Moved the body of ACE_OS::thr_equal before
          recursive_mutex methods to avoid "function redefined as inline"
          problem.  Thanks to David Levine for reporting this.

Sat Feb 20 09:05:20 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS.cpp: Changed the ACE_static_cast() in ACE_OS_Wstring to
          first use an ACE_const_cast().  Thanks to Andy Gokhale for
          reporting this.

Sat Feb 20 02:53:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (ACE_OS_WString): Need to add a statis cast when
          converting from wchar to char to eliminate a warning from Win98.

        * ace/config-win32-common.h: Do not check for library type on CE.

        * ace/config-WinCE.h: Defined ACE_HAS_WINCE as 1.

Fri Feb 19 22:54:18 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
          Fixed the return types for ACE_OS_WString and ACE_OS_CString
          assignment operators, even though they are not defined they
          should be declared to return something, otherwise egcs give us a
          ton of warnings.

Fri Feb 19 21:02:49 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-win32-common.h: #define'd ACE_HAS_RECURSIVE_MUTEXES
          for Win32.

        * ace/OS.cpp: Removed the SString.h dependency in OS.cpp!

Fri Feb 19 21:44:31 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/OS.i: Was using two many arguments to thread_mutex_lock ()
          and ACE_OS::thread_mutex_trylock ().

        * ace/Synch.i: Typo in comment

Fri Feb 19 18:18:13 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.{h,i,cpp}: Added ACE_OS_WString and ACE_OS_CString which
          should only be used within ACE_OS to perform conversion between
          wchar strings and char string.
          Changed the wide/multibyte conversion macros to use
          ACE_OS_?String classes and removed dependencies to Auto_Ptr.h
          and SString.h.

        * ace/config-win32-common.h: Removed checked for (_DLL) if
          ACE_HAS_DLL = 0.  Otherwise, the static build won't compile.

        * ace/Token_Manager.cpp (release_token):
        * ace/Service_Manager.cpp (list_services): Changed
          ASYS_MULTIBYTE_STRING to ASYS_ONLY_MULTIBYTE_STRING.  Because
          the new conversion classes have stronger type checking, these
          errors weren't found until now.

Fri Feb 19 17:01:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: moved ACE from OS_FILES to UTILS_FILES.

Fri Feb 19 15:44:23 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS,
          ace/Synch: Moved the implementation of the
          ACE_Recursive_Thread_Mutex from the Synch.* files to
          the OS.* files in order to reduce coupling in OS.* and
          other parts of ACE.

Fri Feb 19 12:36:43 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i:
          Fixed missing ACE_INLINE for ACE_OS::strenvdup()

Fri Feb 19 11:35:57 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU: Added new option
          "distrib".  If you do a "make distrib=1" the -R options won't be
          given when linking, which produces dynamic load records requiring
          objects/libraries in standard places, or use of LD_LIBRARY_PATH.
          The default is distrib=0, which is the existing behavior.

Fri Feb 19 11:22:48 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (open): Don't call CreateFileA with FILE_SHARE_DELETE
          when compiled on Win95 because it doesn't support the flag.  The
          implication of this change is that unlink before close will not
          work on Win95.  So programs that are targeted to both NT and
          Win95 cannot depend on it.  Thanks to Rod Joseph
          <rodjoseph@adt.com> for reporting the bug.

Thu Feb 18 21:10:45 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.cpp (string_to_argv): We no longer have to special case
          for WinCE since this logic has been moved into
          ACE_OS::strenvdup().

        * ace/ACE.cpp: Implemented ACE::strenvdup() using
          ACE_OS::strenvdup().

        * ace/OS: Move the implementation of strenvdup() from ACE to
          ACE_OS to remove another dependency from the OS wrappers.

        * ace/ARGV.cpp: Rewrote the ACE_ARGV::string_to_argv() and
          ACE_ARGV::argv_to_string() methods to use the new
          ACE_OS::string_to_argv() and ACE_OS::argv_to_string().

        * ace/OS.h: Added string_to_argv() and argv_to_string() methods to
          ACE_OS to remove the dependency on ACE_ARGV.

Thu Feb 18 19:21:03 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/005/client_handler.cpp: Replaced the leading '_'
        in the open() method so that we can cast _acceptor to acceptor.

Thu Feb 18 14:12:28 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * netsvcs/clients/Naming/Client/svc.conf: Changed to start up
          ACE_Naming_Context as dynamic service.  Thanks to Darren
          Whobrey <whobrey@fecit.co.uk> for reporting this problem.

        * ace/Name_Proxy.cpp (open): The timeout value was set upp
          ACE_Time_Value::zero accidentally when we want blocking
          connect.  Thanks to Darren Whobrey <whobrey@fecit.co.uk> for
          reporting the bug.

        * ace/CDR_Stream.{h,i} (ACE_InputCDR::do_byte_swap): Added
          accessor function for Flick.

        * ace/CORBA_macros.h (ACE_THROW_INT): This should return a new
          instance of the exception.  Thanks to Andy for pointing this
          out.

Wed Feb 17 16:40:56 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ACE_NEW_THROW_EX): A new ACE_NEW_THROW macro which
          makes ACE_NEW_THROW_EX behave like a exception-throwing
          function.  I.e., you need to follow ACE_NEW_THOW_EX with
          appropriate ACE_CHECK* macros.  The use of ACE_NEW_THROW,
          ACE_NEW_THROW_RETURN, ACE_NEW_TRY_THROW are deprecated.

        * docs/exceptions.html: Added documentation for
          ACE_DECLARE_NEW_CORBA_ENV.

        * ace/config-WinCE.h: Automatically define ACE_HAS_WINCE if it is
          not already defined.

        * ace/Synch.cpp: I had to shuffle the location of .i file around
          to avoid a warning from SH compiler for CE.

        * ace/config-win32-common.h: Disabled checking for DLL run-time,
          WIN32, and multi-threaded run-time on Windows CE.

        * ace/CORBA_macros.h (ACE_DECLARE_NEW_CORBA_ENV): Added this macro
          for declaring a new CORBA_Environment called ACE_TRY_ENV.
          ACE_TRY_NEW_ENV should now be avoided because it won't work if
          multiple try blocks are needed in the top-most functions.
          Instead, you can use the new macro to define the environment
          variable and use ACE_TRY/ACE_TRY_EX as usually.  This is even
          more intuitive than ACE_TRY_NEW_ENV. ;)  Thanks to Andy for
          reporting the problem.

Wed Feb 17 10:44:29 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/Proactor/test_proactor.dsp:
        * examples/Reactor/Proactor/test_proactor.cpp:
        * examples/Reactor/Proactor/Makefile:
        rtagged these files with "new_proactor"

Tue Feb 16 17:08:53 1999  Steve Huston  <shuston@riverace.com>

        * examples/ASX/Event_Server/Transceiver: Moved Event_Transceiver
          class definition to new file, transceiver.h, to build ok on AIX (P15)
          and fixed core dump if ctor fails to connect.

        * examples/Connection/misc: Moved some class definitions from
          test_upipe.cpp to new file test_upipe.h to build ok on AIX (P17).
          Same thing with Connection_Handler - new file Connection_Handler.h.

        * examples/Connection/misc/Makefile: Clean out tempinc directory
          between program compiles so AIX xlC doesn't freak out.

Tue Feb 16 16:42:23 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h (ACE_PRINT_EXCEPTION): A new macro that deal
          with printing out the exception for debugging.  Thanks to Lothar
          Werzinger <lwerzinger@krones.de> for suggesting this.

        * docs/exceptions.html: Added documentation for the new macro
          ACE_PRINT_EXCEPTION.  Since there's no portable way to print out
          the content of a CORBA_Exception, we use this macro to deal with
          differences among various ORB implementations.  This macro is
          user definable.

        Thanks to Eric Covington <eric@nowsol.com> for figuring out the
        following.

        * ace/ace_ce_dll.dsp: Added Functor.cpp and Message_Queue.cpp.

        * ace/High_Res_Timer.cpp (dump): Fixed Unicode problem.

        * ace/OS.i (truncate): WinCE does not have char* version of
          truncate.

Tue Feb 16 00:39:35 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>
        * ace/ace_dll.dsp:
        * examples/Reactor/Proactor/test_proactor.dsp:
        * examples/Reactor/Proactor/test_proactor.cpp:
        Updated the files.
        * ace/WIN32_Asynch_IO.h:
        * ace/WIN32_Asynch_IO.cpp:
        * ace/WIN32_Asynch_IO.i:
        Added the files
        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
        Updated these files
        * examples/Reactor/Proactor/Makefile:
        New make file which also compiles the test_aiosig_ace.cpp
        program.
        * ace/POSIX_Asynch_IO.i:
        Added the file.


        rTagged the ACE_wrappers repository with <before_proactor>
        After the following changes rtagged the repository with
        <after_proactor>

        * ace/
                Proactor.h
                Asynch_IO.cpp
                Asynch_IO.h
                Makefile
                Proactor.cpp
                Proactor.h
                config-lynxos.h
                config-sunos5.6.h
                config-sunos5.7.h
                POSIX_Asynch_IO.{h,CPP}
                POSIX_Proactor.{h,cpp}
                WIN32_Asynch_IO.{h,cpp}
                Asynch_IO_Impl.{h,cpp,i}
                Proactor_Impl.h
        Applied Bridge pattern to the POSIX implementation of the Proactor
        code. ACE_POSIX_AIOCB_Proactor works fine on Solaris
        2.6. ACE_POSIX_SIG_Proactor works on LynxOS. Take a look at the tests
        at the $(ACE_ROOT)/examples/Reactor/Proactor/ and the README.

        * tests/
                Aio_Platform_Test.cpp
        *examples/Reactor/Proactor/:
                test_proactor.cpp
                test_aiocb.cpp
                test_aiosig.cpp
                test_aiosig_ace.cpp
                README
        Test files for testing out the platforms.

Mon Feb 15 13:17:15 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.22 released.

Sun Feb 14 15:25:27 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ACE-configuration.txt:
        * ACE.ifnames:
        * acconfig.h:
        * ace-config.in:
        * ace-diff-config.in:
        * acinclude.m4:
        * aclocal.m4:
        * config.guess:
        * config.sub:
        * configure:
        * configure.in:
        * install-sh:
        * libtool:
        * ltconfig:
        * ltmain.sh:
        * missing:
        * mkinstalldirs:
        * ace/config.h.in:

        Started to introduce the work done by the ACE Configuration
        Project into the official ACE distribution.

        To help speed development, the work being done by the ACE
        Configuration Project is being slowly introduced into the official
        ACE distribution.  Some of the functionality in the work created by
        the ACE Configuration Project has been removed so that ACE may be
        built in the usual fashion.  Once the ACE Configuration Project
        work stabilizes on more platforms that removed functionality may be
        added to ACE.

        Currently the configure script contains most of the tests that are
        necessary to properly configure ACE on most platforms.  However,
        there are still some autoconf tests that are missing.  As such, you
        may encounter and most likely will have compilation problems.

        The `configure' script that is currently being used has been
        modified from the ACE Configuration Project's `configure' script to
        prevent makefiles from being automatically generated since there are
        still some issues that must be addressed before automatically
        generated makefiles are incorporated into the official ACE
        distribution.

Sun Feb 14 14:09:11 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/015/server.cpp (main): Force the singleton to use
        the Select Reactor instead of the OS-default.  This should fix the
        problem this tutorial has on Win32 due to blocking vs non-blocking
        socket configuration.

        * docs/tutorials/015/Protocol_Task.h : Removed the ability to
        activate this task.  The code is now a little simpler and less
        likely to behave in unpredicatable ways.

        * docs/tutorials/015/* : A few typos fixed but mostly fallout from
        removing the ability to activate the Protocol_Task.

        * docs/tutorials/016/page01.html : Added Kirthika's abstract.

        * docs/tutorials/016/condition.cpp : Made max_threads_ a
        non-static member variable that is set by open().

        * docs/tutorials/017/page01.html : Added Kirthika's abstract.

Sun Feb 14 12:47:03 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
        * ace/CDR_Stream.cpp:
          Minor cosmetic changes, mostly trailing spaces.

Sat Feb 13 22:06:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        The following changes are based on the patch Eric Covington
        <eric@nowsol.com> submitted.  Thanks very much to Eric for
        bringing ACE/CE up-to-date.

        * ace/ace_ce_dll.dsp: Updated.

        * ace/OS.cpp: (open): CE doesn't support opening files with
          attribute FILE_SHARE_DELETE.

        * ace/OS.i (abort): CE doesn't support abort.

        * ace/Stats.cpp (print_summary): CE doesn't support strerror.

        * ace/Stats.i (dump): Changed to use ACE_DEBUG.

        * tests/Thread_Manager_Test.cpp (main):
        * ace/tests/SOCK_Connector_Test.cpp (find_another_host):
        * ace/Log_Msg.cpp (log):
        * ace/INET_Addr.cpp (addr_to_string): Fixed Unicode problems.

Fri Feb 12 16:14:47 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Remote_Tokens.cpp: Replaced the typedef for
          ACE_TSS_CONNECTION_MUTEX with #define ACE_TSS_CONNECTION_MUTEX.
          Thanks to Arturo for reporting this.

Fri Feb 12 18:41:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/SString.cpp: Added "ace/" to #include "Auto_Ptr.h" to conform
          to conding guidelines.

Fri Feb 12 17:16:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.vxworks: commented out Message_Queue_Test and
          Timeprobe_Test, because they lockup the machine.  And,
          fixed string length of DLL_Test printout.

Fri Feb 12 17:06:30 1999  Arturo Montes <mitosys@colomsat.com.co>

        * ace/config-sco-5.0.0-CC-fsu-pthread.h: removed this config
          file, because it's not used.

Fri Feb 12 16:36:55 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/SOCK_IO.{h,i,cpp} (send,recv): Added back the iovec version
          of send/recv back to maintain backward compatibility.  Thanks to
          Steve for pointing this out.

Fri Feb 12 15:37:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: split FILES up into subsets.  See
          docs/ACE-subsets.html for more information.

Fri Feb 12 12:31:29 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile: Removed blank line that was added when troubleshooting
          the cvs log problem.  The extra line cause Digital Unix's make to
          complain about a missing separator.

Fri Feb 12 09:19:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: added ACE_HAS_STANDARD_CPP_LIBRARY and
          ACE_USES_STD_NAMESPACE_FOR_STDCPP_LIB #defines with Sun CC 5.0.
          Thanks to Diethard Ohrt <Diethard.Ohrt@siemens.at> for
          providing these.

Thu Feb 11 15:05:42 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ACE-INSTALL.html: Reworded the first step of the Windows
          NT installation to be a bit clearer.

Thu Feb 11 14:30:35 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/ace_dll.dsp: Fixed Alpha Configuration.

Thu Feb 11 03:48:50 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: Added #pragma once and ACE_CORBA_MACROS_H to
          prevent duplicate inclusion of this file.

          Added a new macro ACE_ANY_EXCEPTION to denote the name of the
          CORBA exception caught by the ACE_CATCHANY.  Thanks to Lothar
          Werzinger <lwerzinger@krones.de> for suggesting this.

Wed Feb 10 23:01:16 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/config-win32-common.h: Made a better effort at finding out
          if the files are compiled against the correct run-time
          libraries.  Now _DLL is checked to see if it is defined for
          ACE_HAS_DLL != 0 builds, and if it is not defined for static
          builds.

          This should help diagnose the problem of not using (Debug)
          Multithreaded DLL run-time libraries in clients that use DLL
          versions of ace (one symptom of this mistake is errno not
          working correctly because of one copy being defined in the DLL
          and one in the program itself).

Wed Feb 10 22:19:33 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/014/stream.cpp : Removed the __LINE__ displays.
        * docs/tutorials/014/page01.html : Added Kirthika's abstract

        * docs/tutorials/015/page01.html : Added Kirthika's abstract
        * docs/tutorials/015/page12.html : Oops... Wrong intro text.
        * docs/tutorials/015/Protocol_Stream.cpp : Typos fixed
        * docs/tutorials/015/Protocol_Task.cpp : Typos fixed

Wed Feb 10 15:04:26 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile: added Pair_T.cpp and Template_Instantiations.cpp
          to the TEMPLATE_FILES list/variable.  They were missing.
        * tests/Conn_Test.cpp (spawn_processes): initialized
          pid_t *children_ptr to zero to prevent "uninitialized"
          warnings from egcs 1.1.1.

Wed Feb 10 14:16:25 1999  Ossama Othman  <othman@cs.wustl.edu>

        * tests/Message_Queue_Test.cpp (performance_test): initialized
          ACE_Message_Block **send_block to zero to prevent "uninitialized"
          warnings from egcs 1.1.1.

Wed Feb 10 14:02:46 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/ACE.cpp (get_ip_interfaces): initialized struct ifreq * ifs
          to zero to prevent "uninitialized" warnings from egcs 1.1.1.

Wed Feb 10 10:53:59 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * examples/IPC_SAP/TLI_SAP/ftp-server.cpp:
          Fixed several minor syntax errors.

Tue Feb 09 16:54:10 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Put the 'XXX_DISABLE_SWAP_ON_READ' code back into the
          ACE_INputCDR methods read_array(), read_2(), read_4(),
          read_8() and read_16(). I didn't realize at first how
          crucial that is to the Boeing folks. Thanks to Carlos
          for bringing this to my attention.

Tue Feb 09 16:07:32 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Synch.{h,i,cpp}: Removed classes ACE_Null_Mutex_Guard and
          ACE_Thread_Mutex_Guard since there doesn't seem any need for
          them any more.  They should be replaced by
          ACE_Guard<ACE_Null_Mutex> and ACE_Guard<ACE_Thread_Mutex>.  If
          by any chance you still need to use them, add
          ACE_USES_OBSOLETE_GUARD_CLASSES into your config.h file.

        * ace/Local_Tokens.h: Replaced ACE_Null_Mutex_Guard and
          ACE_Thread_Mutex_Guard with ACE_Guard<ACE_Null_Mutex> and
          ACE_Guard<ACE_Thread_Mutex>.

Tue Feb  9 16:12:42 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/{010|011}/task.{h|cpp} : barrier_ doesn't need to be a
        pointer since Doug moved n_threads to the ctor.  Minor typos
        corrected also.

        * docs/tutorials/010/message_queue.cpp :  Typos...

        * docs/tutorials/002/server.cpp: Added call to notify() in the
        signal handler so that ^C will exit as expected.

Tue Feb 09 13:57:23 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/DLList_Test.cpp (main): The test should log the result to
          DLList_Test.log, not ACE_DLList_Test.log.

        * tests/run_tests.{sh,vxworks,psosim}: Added DLList_Test.

        * tests/run_tests.bat: Removed DLL_Test.

        * ace/ACE.cpp (ldfind): Win32 only.  Made sure we always look for
          the DLL at the current directory first on Win32 which is the
          default behavior on Win32.

        * ace/ace_{dll,lib}.dsp: Removed entries of Service_Record.{h,i}.
          Thanks to David for noticing this.

Tue Feb 09 10:21:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Service_Types.{i,cpp},README: removed obsolete references to
          Service_Record.

        * tests/MT_Reactor_Timer_Test.cpp (main): added printout with numbers
          of expected and actual events, if result is not ACE_MAX_TIMERS + 2

        * include/makeinclude/wrapper_macros.GNU: added BUILD line with both
          shared_libs and static_libs enabled, so that individual Makefiles
          don't need a BUILD line.

        * docs/ACE-subsets.html: updated to reflect current ACE status.

Mon Feb 08 14:32:43 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/exceptions.html: Added guidelines of switching from TAO try
          macros to ACE try macros.  Other cosmetic changes.

Mon Feb  8 13:54:32 1999  Yamuna Krishnamurthy  <yamuna@cs.wustl.edu>

        * docs/tutorials/011/task.cpp :
        In the open return this->activate (THR_NEW_LWP,
        this->n_threads_); was taking an udefined variable threads.

        * docs/tutorials/011/message_queue.cpp:
        Corrected Compilation error due to a typo (static misspelt as
        statuc!!!)

Mon Feb  8 09:21:10 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Map_T.h,
          ace/Pair_T.h: Aded parens around the #pragma implementation file
          names so the AIX compiler would be happy.  Thanks to Martin
          Krumpolec <krumpo@pobox.sk> for reporting this.

Mon Feb 08 00:39:49 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.21 released.

Sun Feb  7 22:48:01 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h (ACE_THROW_RETURN): The second macro argument
          was missing.

Sun Feb  7 22:32:21 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/CORBA_macros.h: It wasn't clear why the ACE_THROW_RETURN
          macro for non-NT platforms wasn't taking a second RETV
          parameter.  I've fixed this, however.

Sun Feb 07 13:55:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_sunc++.GNU: added
          comment about possibly needing -compat=4 with Sun CC 5.0.
          Thanks to Sush Bankapura <Sush.Bankapura@sylantro.com> for
          reporting success with it.

Sun Feb  7 00:43:32 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Turns out that read_boolean_array was declared, but
          the body was missing (?).

Sat Feb  6 22:38:40 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ACE_wrappers/tests/CDR_Test.cpp:
          Changed #include file name to ace/CDR_Stream.h (the new
          source file name).

Sat Feb  6 22:21:14 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:
          Fixed the write_boolean_array() method; it only needs a const
          array of booleans.

Sat Feb  6 22:07:45 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR.{h,i,cpp}:  Renamed these as...
        * ace/CDR_Stream.{h,i,cpp}:  Mustn't have files with the
          same name (the TAO files) for the sake of some compilers.
        * Makefile:
        * ace_dll.dsp:
          Changed to reflect the renaming above.

Sat Feb  6 20:30:51 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR.h:
        * ace/CDR.i:
        * ace/CDR.cpp:
          Fixed some indentation and style problems.

Sat Feb 06 07:47:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/test_config.h (~ACE_Test_Output): wrapped use of
          cerr with #ifndef ACE_LACKS_IOSTREAM_TOTALLY.

Sat Feb 06 02:41:07 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Map_Test.cpp: The hell of explicit template instantiation.
          Someone please save me from these stupid compilers.

        * ace/Map: Broken g++ (2.7) has deformed my beautiful code based
          on typedefs and forced me to use their basic form.  However,
          users should continue to use the typedefs provided as I do in
          the Map_Test.

Fri Feb 05 21:57:24 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_T: Added a new Map mini framework to ACE.  The classes
          in this mini framework allows the Map interface to be used
          without caring about the specific Map implementation being used.
          There is the class hierarchy of the framework:

                        forwards
          ACE_Iterator  -------->  ACE_Iterator_Impl (abstract)

          ACE_Iterator_Impl is subclassed by:

          - ACE_Map_Impl_Iterator_Adapter<IMPLEMENTATION>
          - ACE_Active_Map_Manager_Iterator_Adapter
          - ACE_Hash_Map_Manager_Ex_Iterator_Adapter
          - ACE_Map_Manager_Iterator_Adapter

                                forwards
          ACE_Reverse_Iterator  -------->  ACE_Reverse_Iterator_Impl (abstract)

          ACE_Reverse_Iterator_Impl is subclassed by:

          - ACE_Map_Impl_Reverse_Iterator_Adapter<IMPLEMENTATION>
          - ACE_Active_Map_Manager_Reverse_Iterator_Adapter
          - ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter
          - ACE_Map_Manager_Reverse_Iterator_Adapter

          ACE_Map is subclassed by:

          - ACE_Map_Impl<IMPLEMENTATION>
          - ACE_Active_Map_Manager_Adapter
          - ACE_Hash_Map_Manager_Ex_Adapter
          - ACE_Map_Manager_Adapter

          Also included in the framework is a Key Generator class and a
          Key Adapter class.  The Key Generator class is used by some map
          adapters to generate keys since the maps they adapt do not
          generate keys. The Key Adapter class is used by the active map
          adapter to allow encoding and decoding of active keys into user
          keys.

          Note that the iterators use the bridge pattern while the map
          class uses an abstract base class based inheritance approach.
          The reason for this is that STL containers return the iterators
          by value.  An abstract base class cannot be returned by value.

          An alternative design would be to add an abstract base class
          that the ACE maps would derive from.  Unfortunately, this would
          break many things including the ability to add these maps to
          shared memory and explicit template instantiations.

          This mini framework would have been idle to apply the external
          polymorphism pattern.  However, the ACE map classes are
          different enough that adaption was necessary.  This turned out
          to be a blessing in disguise since I was able to add extra
          common functionality such as the key generator and key adapter
          to the map adapters.  I did add the external polymorphic
          subclasses to the framework for future use.

          The classes in this framework are as close STL containers as I
          would dare to make them ;) Thanks to Carlos for helping design
          them.

        * tests/Map_Test: New test to illustrate and test the workings of
          the new ACE Map classes. There are two aspect to this test:
          (a) functionality testing includes testing the iterators and
          various operations, and (b) performance testing to compare the
          relative performance of the maps.

        * ace/Pair: Added new Pair class to ACE that holds instances of
          the template arguments.  Also, added a Reference_Pair class that
          only hold references of the template arguments.

        * ace/Hash_Map_Manager_T.* (ACE_Hash_Map_Manager_Ex):
        * ace/Map_Manager.* (Map_Manager):
          Added new rebind() methods to make interface compatible with
          other maps.  Also, fixed the constness of some functions.

        * ace/Hash_Map_Manager.h: Fixed order of inclusion of template
          code.

        * ace/Active_Map_Manager_T.h (ACE_Active_Map_Manager): Added new
          versions of bind, find, and unbind to reduce the number of data
          copies.

        * ace/Active_Map_Manager.h (ACE_Active_Map_Manager_Key): Added the
          ability for the active key to encode and decode into and out of
          a data stream.  This relieves the developer from concerning
          herself about the internal structure of the active key.

        * ace/config-win32-common.h: Define WIN32 if not already defined.

        * tests/SString_Test.cpp: Added testing for substring creation and
          comparisons.

        * ace/OS.h (ACE_dynamic_cast_*_ptr and ACE_dynamic_cast_*_ref):
          Added new macros to handle casting of template class.

        * tests/test_config.h: Removed global KEY class that was not being
          used anymore anyway.

Fri Feb 05 21:12:56 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.20 released.

Fri Feb 05 12:02:31 1999  Steve Huston  <shuston@riverace.com>

        * tests/run_tests.sh: Added SHLIB_PATH support for HP-UX. Fixed
          the LD_LIBRARY_PATH setting to work if there was no path set
          on entry to the script.

        * ace/config-hpux-9.x.h, config-hpux-(10,11).x-hpc++.h:
          Removed ACE_HAS_BROKEN_ENUMS.  This affects the HP C++ compiler, not
          aC++.  I made this change based on David's experience with the
          enums and Green Hills, below.  If it causes any problems, let me
          know and I'll reset it.

Fri Feb 05 10:11:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Log_Priority.h: changed ENSURE_32_BITS to LM_ENSURE_32_BITS,
          and its value from 0xffffffff to 0x7fffffff.  Green Hills 1.8.9
          properly complained that 0xffffffff doesn't fit into an int.

        * ace/config-sco-5.0.0-CC-fsu-pthread.h,config-sunos5.5.h,
          config-vxworks5.x.h: removed ACE_HAS_BROKEN_ENUMS, because
          it's not necessary with 0x7fffffff.

Thu Feb  4 23:11:26 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.i:
          Added operator= to the ACE_URL_Addr classes.

        * websvcs/lib/URL_Addr.cpp:
          Fixed minor memory allocation problem for invalid HTTP
          addresses.
          It removes './' when creating relative addresses.

Wed Feb 03 21:50:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-vxworks5.x.h: added ACE_HAS_BROKEN_ENUMS with
          Green Hills, because it's needed with 1.8.9.  And, added
          ACE_HAS_STANDARD_CPP_LIBRARY #define to 1, for Green Hills 1.8.9
          (with __STANDARD_CXX #defined) only, because it doesn't work with
          1.8.8.  Thanks to Jacob Jones <Jacob.J.Jones@notesmta.gd-is.com> for
          reporting these.

        * ace/config-sunos5.5.h: with Green Hills 1.8.9 (with
          __STANDARD_CXX #defined), added ACE_HAS_STANDARD_CPP_LIBRARY
          #define to 1.

Wed Feb 03 14:57:21 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.h (ACE_At_Thread_Exit[_Func]): Added
          ACE_Export keywords.  Thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for pointing this out.

        * ace/Service_Config.{h,i,cpp}: Added one more argument to open
          methods that allows ignoring the default svc.conf file.  You can
          still open svc.conf files using the -f option.

Wed Feb 03 10:12:14 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: fixed release_filter so that it doesn't put
          CVS files into the release.

        * ace/Object_Manager.h: updated comments to reflect that
          ACE_HAS_NONSTATIC_OBJECT_MANAGER is now #defined in
          several ace/config files, including that for Win32.
          Thanks to Dave Meyer <dmeyer@std.saic.com> for pointing
          that out.

Wed Feb  3 09:30:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.cpp:
          Fixed some memory leaks.
          HTTP_Addr::create_relative_address supports the #label syntax.

Wed Feb 03 07:02:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/CDR_Test.cpp: commented out ACE_Auto_Basic_Array_Ptr<CDR:Char>
          explicit instantiation, because it's in ace/Memory_Pool.cpp.

Tue Feb  2 21:35:21 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/007/client_handler.h:
        * docs/tutorials/007/thread_pool.h:
          A couple of syntax goofs.  I'm surprised it compiled for anyone!

        * docs/tutorials/007/thread_pool.h:
          Changed ACE_Time_Value(0.25) to ACE_Time_Value(0,250000)

        * docs/tutorials/*/Makefile:
          Added '.depend' to the list of files removed by the CLEAN
          target.  I shoulda' done this the other day.

Tue Feb  2 20:02:22 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * bin/make_release: Added .gz to the list of binary file extensions.

Tue Feb  2 19:28:46 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * docs/tutorials: ACE-ified the first 11 tutorials.  I hope
          James still recognizes this stuff now ;-)

Tue Feb  2 19:12:50 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/001/logger.h (class Logging_Handler):
          Incorporated Pradeep's suggestion to get rid of the memset() and
          use the recv() return value to drop in the null-termination.

Tue Feb  2 14:19:30 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * websvcs/websvcs.dsw:
        * websvcs/lib/websvcs.dsw:
        * websvcs/lib/websvcs.dsp:
        * websvcs/tests/tests.dsw:
        * websvcs/tests/Test_URL_Addr.dsp:
          Added MSVC project files for the websvcs library.

        * websvcs/lib/URL_addr.cpp:
          Now correctly exports classes in DLLs.

Tue Feb  2 12:48:34 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * tests/CDR_Test.cpp:
          Changed the template type of the auto_ptr for char. We were
          getting a Purify FMR message on Unix.

Tue Feb  2 12:27:13 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/ACE.cpp: Added an ACE_UNUSED_ARG for program_name for
          ACE::daemonize().  Thanks to David Levine for reporting this.

        * ace/OS.h: Generalized the WIF* macros so that they will be
          defined on any platform that lacks them, not just NT.  Thanks to
          David Levine for reporting this.

Tue Feb 02 08:58:32 1999  Steve Huston  <shuston@riverace.com>

        * tests/MT_Reactor_Timer_Test.cpp: Moved definition of status outside
          of ACE_HAS_THREADS condition since it's used in either case.  Thanks
          to Frederic Andres <andres@rd.nacsis.ac.jp> for this fix.

Mon Feb 01 23:16:34 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.19 released.

Mon Feb 01 22:06:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release (create_kit): fixed typo, bin_files
          instead of binfiles.

Mon Feb 01 21:24:45 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.18 released.

Mon Feb  1 21:02:26 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/ace_dll.dsp: Some template files were being compiled
          in the Release/Unicode/Alpha configs.  This is now not the
          case.

Mon Feb  1 13:49:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-linux-common.h:
          Added a definition for ACE_TIMER_SKEW, apparently it is only
          needed in multiple CPU machines (with SMP enabled); but it did
          solve the problems with MT_Reactor_Timer_Test.

Mon Feb 01 13:08:11 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * tests/CDR_Test.cpp:
          Used an auto_ptr to manage a string sent to string_read(). I
          had included the .h file for auto ptrs (Carlos corrected my
          typo, see below), but had never checked in the code using
          auto_ptr.

Mon Feb 01 12:54:11 1999  Steve Huston  <shuston@riverace.com>

        * ace/NT_Service.(h i): Some fixes provided by Martin Krumpolec
          <krumpo@pobox.sk> - thanks to Martin for these!
          - Supplied missing ctor for name/desc variant.
          - svc() method is not pure virtual any longer to prevent SCP-type
            applications from having to override it and never use it.

Mon Feb  1 12:04:35 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * bin/make_release: Added zip and gif to the binary files in
          zips.

Mon Feb 01 12:00:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: With CC 5.0, enabled explicit template
          instantiation and added ACE_LACKS_ACE_IOSTREAM.  Early versions
          of CC 5.0 seem to have problems with automatic template
          instantiation and ACE_IOStream.

        * include/makeinclude/platform_sunos5_sunc++.GNU: added CC 5.0
          support to enable explicit template instantiation, and disable
          inlining by default.

        Thanks to Diethard Ohrt <Diethard.Ohrt@siemens.at> for confirming
        that above fixes allow ACE and TAO to build with CC 5.0.

        * include/makeinclude/platform_sunos5_{g++,ghs}.GNU: removed -lw
          from libs.  It's not necessary, and apparently causes problems
          on Solaris 2.6, because libc now includes the code that was
          formerly in libw.  Thanks to Steve Coleman <Steve.Coleman@jhuapl.edu>
          for reporting this.

Mon Feb  1 10:41:09 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/CDR_Test.cpp:
          There was a typo in a included filename.

Mon Feb  1 08:39:15 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Synch.h: Clarified that the ACE_Semaphore::acquire() is in
          absolute, rather than relative, time.  Thanks to Jacques
          Salerian <Jacques.Salerian@era.ericsson.se> for reporting this.

Sun Jan 31 20:10:23 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/OS.h:
          Just renamed the CDR byte order macros to something more
          reasonable.

Sun Jan 31 18:19:45 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * docs/tutorials/Makefile: Now we can build the UNSHAR SHAR HTML
          right from the top-level.  Thanks James!

        * tests/Process_Strategy_Test: Updated the test to use ACE::fork()
          and the new "avoid zombies" feature of ACE_Process_Strategy.

        * ace/ACE: Added a new version of fork() that can avoid creating
          zombies.  Thanks to Garry Brother <gmbroth@romulus.ncsc.mil> for
          this code.

        * ace/Strategies_T: Changed the ACE_Process_Strategy so that
          programmers can designate to not create zombies.  Thanks to
          Garry Brother <gmbroth@romulus.ncsc.mil> for this suggestion.

        * ace/ACE.cpp (daemonize): Only do a chdir if pathname != 0.

        * ace/ACE: Added a "program_name" argument to daemonize() so that
          we can set the program name.

        * docs/tutorials: Reformatted all the header files to conform
          to the ACE programming style.

Sun Jan 31 16:09:55 1999  Jeff Parswons >parsons@cs.wustl.edu>

        * ACE_wrappers/tests/CDR_Test.cpp:
          Plugged a memory leak in a string read from the CDR stream.
          Thanks to Sangwoo Jin <swjinjin@sei.co.kr> for pointing this out.

        * ace/CDR.{h,i,cpp}:
          Changed the name of the "base" class holding the constants to
          'CDR' from 'ACE_CDR'. In leveraging this code in the TAO cdr
          classes, I've discovered that there are many files that
          use these constants, so probably best to keep the original
          name. Also made minor changes to read_string, read_wstring,
          append_string and append_wstring to prevent a memeory leak
          if the operation fails.

Sun Jan 31 11:58:32 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/{010|011|012|013|017}:
          In all of these, I'd overridden open() as open(int) to specify
          the number of threads in a thread-pool.  Steve Huston pointed
          out that this causes grief with some compilers.  I've changed
          all of these open(int) overrides to start(int) instead.

        * docs/tutorials/017/Barrier_i.cpp (threads):
          The thr_equal() call was changed to !thr_equal().

        * docs/tutorials/010/taks.cpp:
          Vishal recommended some extra commentation to make things a bit
          more clear WRT barrier synch.

        * docs/tutorials/013/page01.html:
          Added Kirthika's abstract.

Sat Jan 30 16:03:23 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.cpp:
          The HTTP address class can create an URL_Addr from a path
          relative to it.  This is useful when interpreting an address
          inside an HTML document.

Sat Jan 30 13:34:00 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Connection/non_blocking/test_sock_connector.cpp (main):
          Prevent the program from executing if compiled on non-NT Win32
          platform without Winsock2 installed.  Thanks to Greg Harrison
          <harrisog@erinet.com> for reporting ths problem.

1999-01-29  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Mem_Map.cpp (map_it): NT makes no claims about replacing
          previous mapping at the specified address.  Therefore, I have
          added a new macro ACE_LACKS_AUTO_MMAP_REPLACEMENT which is
          defined if there is no system support for replacing any previous
          mappings. In this case, we unmap() before (potentially) mapping
          to the same location.  ACE_LACKS_AUTO_MMAP_REPLACEMENT is
          defined on NT.

Fri Jan 29 17:40:34 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.cpp:
          We were not checking against nil strings in several places, also
          fixed some uninitialized members in the HTTP_Addr constructors.

        * bin/auto_compile:
          Added protection against simultaneous executions of the script;
          it checks for .disable file on the $LOGDIR directory, if present
          it does not execute; if not present it creates one; the file is
          deleted at program termination.

Fri Jan 29 16:25:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-10.x-hpc++.h: Added ACE_HAS_GPERF.
        * apps/gperf/src/List_Node.cpp (ctor): Added ACE_const_cast to
          a char * initializer.
        * apps/gperf/src/Options.cpp: Fixed -j processing (typo).

        * docs/tutorials/017/barrier.cpp: Can't init a long with a thread ID.
          On HP-UX 10.20, it's a struct.
        * docs/tutorials/017/Barrier_i.cpp: Use ACE_OS::thr_equal to check
          equality of thread IDs.

        * docs/tutorials/019/server/cpp: Removed redefinition of char *s from
          'for' loop.  Works around a compiler issue, but isn't needed anyway.

        * include/makeinclude/platform_hpux_aCC.GNU: On HP-UX 10.20, suppress
          (future)error 667 and warning 495 to stop hearing about the problems
          with the system-supplied header files.  The compiler still says
          there was 1 future error, but at least it's easy to scan the output
          for real errors now.

Fri Jan 29 14:49:37 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/ACE.cpp:
        * ace/Basic_Types.h:
        * ace/INET_Addr.cpp:
        * ace/Memory_Pool.cpp:
        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:
        * ace/SOCK_Dgram_Bcast.cpp:
        * ace/config-cray.h:
        * examples/IPC_SAP/SOCK_SAP/C-inserver.cpp:
        * examples/System_V_IPC/SV_Semaphores/Semaphores_1.cpp:
        * examples/System_V_IPC/SV_Semaphores/Semaphores_2.cpp:
        * include/makeinclude/platform_cray.GNU:
        * tests/Basic_Types_Test.cpp:
        * tests/Handle_Set_Test.cpp:
        * tests/Message_Queue_Test.cpp:
        * tests/SV_Shared_Memory_Test.cpp:
        * tests/run_tests.sh:
          Thanks to Doug Anderson <dla@home.com> for this port of ACE to
          Cray machines.

Fri Jan 29 13:51:40 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Removed definition of ACE_Thread_State.

        * ace/Thread_Manager.*: Changed the ACE_Thread_State as a bunch of
          bit-masks so we don't overwrite the thread states accidentally.
          Thanks to Tom Dobridge <dobridge@persimmon.com> for reporting
          the bug.

1999-01-28  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.cpp (open): this->close_i() must be
          called *before* the allocators are changed.

        * ace/Map_Manager.cpp (open): Close the old map (if any) before
          creating the new map.  This also make open() reentrant. Thanks
          to Zoran Ivanovic <zorani@pathcom.com> for reporting this bug.

Thu Jan 28 19:08:25 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Active_Map_Manager_T.h:
          Steve's change didn't make it, so I changed BASE to
          ACE_AMM_BASE, I don't know about the pragma.

Thu Jan 28 16:43:17 1999  Steve Huston  <shuston@riverace.com>

        * ace/Active_Map_Manager_T.(h i): Renamed BASE to ACE_AMM_BASE - BASE
          conflicted with something in AIX xlC.  Also fixed #pragma
          implementatation to work on xlC.

Thu Jan 28 10:04:39 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.cpp:
          Reverted to version 4.2, thanks to Kirthika for helping find
          this one.

Thu Jan 28 09:11:29 1999  Andreas Tobler <toa@pop.agri.ch>

        * ace/config-linuxppcr5.h: added this config file, for
          LinuxPPC R5 platforms.

Thu Jan 28 08:55:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-mklinux.h: replaced ACE_HAS_SOCKLEN_T, removed
          __USE_XOPEN.  Thanks to Andreas Tobler <toa@pop.agri.ch> for
          these clarifying this.

Wed Jan 27 19:12:48 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/008/*:
        * docs/tutorials/009/*:
        * docs/tutorials/011/*:
        * docs/tutorials/012/*:
          Updates from the reviewers.

Wed Jan 27 17:06:38 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: removed some unprintable characters.

Wed Jan 27 16:31:01 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile: Added LOCK_SOCK_Acceptor to TEMPLATE_FILES list.

Wed Jan 27 14:50:13 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Service_Configurator/Misc/main.cpp: Changed to open the
          Service_Config object with ignore_static_svc set to 0.  That
          allows this example to use static service.  (By default, static
          services are not loaded.)  Thanks to Arturo Montes
          <mitosys@colomsat.com.co> for reporting this.

Wed Jan 27 13:47:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU: use
          double double quotes around COMPILE argument to ace_ld,
          but only on WIN32 hosts.  Thanks to Peter Weat <weatp@syntron.com>
          for figuring this out.

Wed Jan 27 13:04:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.17 released.

Wed Jan 27 12:32:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html,include/makeinclude/platform_vxworks5.x_g++.GNU:
          default PERL_PATH to "perl", and added notes to set it to the full
          perl path if perl is not on your path.

Wed Jan 27 10:16:06 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * docs/ACE-guidelines.html:
          Added an entry for the creation of files containing template
          code.

Tue Jan 26 20:44:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/SOCK_IO.cpp (send,recv): Changed to use sendv/recvv to
          handle variable arguments send/recv.

        * ACE-INSTALL.html: Fixed the dead link to CE-status.  Thanks to
          Mike Preradovic <michael_preradovic@epicdata.com> for reporting
          this.

Tue Jan 26 14:38:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU: expanded
          the information on the PERL_PATH environment variable for
          NT hosts.  Thanks to Peter Weat <weatp@syntron.com> for
          reporting this.

Tue Jan 26 13:40:51 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/High_Res_Timer.cpp (elapsed_time_incr): Rearranged the
          formula to avoid compilation errors for platforms without
          ULONGLONG.  Thanks to David for the tip.

Tue Jan 26 12:01:19 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ACE_wrappers/tests/CDR_Test.dsp:
        * ACE_wrappers/tests/CDR_Test.cpp:
          Added lines to the test code to send the output to
          the log file, and deleted the unnecessary Header
          Files folder in the project.
        * ace/CDR.{i,cpp}:
          Relocated the longdouble comparison operators'
          definitions, and moved a misplaced '}', which
          were causing build errors.

Tue Jan 26 10:55:02 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Active_Map_Manager.h:
          The _T.h file has to be included *after* the inclusion of the .i
          file, otherwise the template may not see the inline functions;
          the problem only showed up on IRIX.

Mon Jan 25 22:11:36 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ACE_wrappers/tests/CDR_Test.dsp:
        * ACE_wrappers/tests/tests.dsw:
        * ACE_wrappers/tests/versions_tests/CDR_Test.dsp:
        * ACE_wrappers/tests/versions_tests/version_tests.dsw:
        * ACE_wrappers/tests/run_tests.sh:
        * ACE_wrappers/tests/run_tests.psosim:
        * ACE_wrappers/tests/run_tests.bat:
        * ACE_wrappers/tests/run_tests.vxworks:
          Fixed the project files (they had incorrrect project
          settings, I think) and updated the workspace files.
          Also, on a tip from Nanbor, added CDR_Test to the
          various run_tests files.

Mon Jan 25 20:22:01 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR.{h,i,cpp}:
        * ace/Basic_Types.h:
        * ACE_Wrappers/tests/CDR_Test.cpp:
          Better design of ACE CDR, compiles and runs on NT, g++
          and CC.

Mon Jan 25 09:35:42 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp (handle_timed_complete): If connect times out, set
          errno to ETIMEDOUT, not ETIME.  Matches what will happen if a
          simple blocking connect times out.

        * ace/OS.i (ACE_OS::accept, ACE_OS::recv): (only non-Win32), if
          call fails and errno is EAGAIN, change it to EWOULDBLOCK.

        * tests/MT_SOCK_Test.cpp: Remove EAGAIN hacks; above changes fix
          this for all programs.

Sun Jan 24 22:04:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added operator==/!= guideline.

Sun Jan 24 20:25:44 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace: When a class provides operator==, it must also provide
          operator!=.  Also, both these operators should be const.

          Fixed the above violations in:

          ACE_TSS_Ref
          ACE_Thread_ID
          ACE_Registry::Binding
          ACE_Registry::Name_Component
          ACE_Active_Map_Manager_Key

        * ace/Map_Manager: Renamed methods that may become identical if
          INT_ID is the same as size_t.  Thanks to Ossama for helping with
          this.

Sun Jan 24 19:46:55 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR.{h,i,cpp}:
        * ace/Basic_Types.h:
          Made some fixes to make DEC cxx happy, but I'm going to
          undo many of the typedefs and change the design. These
          changes will hopefully lead to a clean build with cxx,
          but the CDR classes are not yet in finished form.

Sun Jan 24 19:26:34 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/SString.cpp (set): Fixed usage case of when the incoming
          string is not zero but the length specified is zero.

        * tests/SString_Test.cpp (main): Added zero sized strings and
          single character strings to the test.

Sun Jan 24 19:09:45 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h
          (ACE_HAS_WORKING_EXPLICIT_TEMPLATE_DESTRUCTOR): VC apparently
          does it right.

Sun Jan 24 17:22:02 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/SString.cpp (substring): the variable "length" was misspelled
          on one of the lines in the method.

Sun Jan 24 16:17:58 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/README:
        * ace/OS.h:
        * ace/config-g++-common.h:
        * ace/config-osf1-4.0.h:
        * ace/config-psos-diab.h:
        * ace/config-psos-tm.h: Replace ACE_HAS_BROKEN_EXPLICIT_DESTRUCTOR
          with ACE_HAS_WORKING_EXPLITCIT_TEMPLATE_DESTRUCTOR to reflect
          the true problem.  Thanks to Ossama for suggesting the name.

Sun Jan 24 16:20:17 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/ACE-FMM:
        Added an entry about the DONT_CALL flag to remove_handler().

        * docs/tutorials/00[45789]:
        * docs/tutorials/01[012]:
        Many changes from Yamuna, Pradeep, Kirthika and Ossama.  In all,
        there were 62 files changed.  Mostly the .html's due to
        recombination and colorization.

Sun Jan 24 14:23:07 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SString.cpp: The substring() method did not check for zero
          length.  Thanks to Mike Goldman for this fix.

Sun Jan 24 02:08:57 1999  Carlos O'Ryan  <coryan@cs.wus...tl.edu>

        * websvcs/lib/URL_Addr.cpp:
        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.i:
        * websvcs/tests/Test_URL_Addr.cpp:
          Added support for mailto: URLs

Sat Jan 23 23:53:29 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/Makefile:
        * websvcs/lib/Makefile:
        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.i:
        * websvcs/lib/URL_Addr.cpp:
        * websvcs/tests/Makefile:
        * websvcs/tests/Test_URL_Addr.cpp:
          Added a small library to keep basic Web related wrappers. The
          first set is a small collection of URL address classes,
          including HTTP and FTP representations.

Sat Jan 23 23:26:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/High_Res_Timer.{h,cpp} (elapsed_time_incr): Added a new
          function to access the incremental timer in nanosecond.

Sat Jan 23 23:08:27 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR.{h,i,cpp}:
          Caught numerous inline ordering errors and mistakes in
          long double functions (not defined on NT) with g++.

Sat Jan 23 21:13:47 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * tests/tests.dsw:
        * tests/CDR_Test.dsp:
        * tests/Makefile:
        * tests/CDR_Test.cpp:
          New test in the suite for the new ACE CDR classes (see below).

        * TAO/TAOACE.dsw:
        * TAO/TAOACE_static.dsw:
        * ace/Makefile:
        * ace/CDR.{h,i,cpp}:
        * ace/OS.h:
        * ace/Basic_Types.h:
          CDR stuff modified from TAO library. Typedefs, default
          constants and macros added to OS.h and Basic_Types.h.
          There is now complete CDR functionality in ACE, except
          for the interpreter, and thus also no handling of Any
          or TypeCode types.

Sat Jan 23 17:50:22 1999  Steve Huston  <shuston@riverace.com>

        * tests/MT_SOCK_Test.cpp: 1. Check for EAGAIN as well as EWOULDBLOCK
          after an accept fail (this change will probably be removed at some
          point when we figure out how to handle EAGAIN/EWOULDBLOCK).
          2. Close the ACE_SOCK_Acceptor in the server before going into
          the "reap children" loop so any half-connected clients will get
          closed.

Sat Jan 23 17:25:48 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.{h,cpp}: Reverted changes made since the
          ACE_Hash_Map_Manager_Ex was getting used in shared memory and
          hence could not have "virtual" methods.

Sat Jan 23 04:53:12 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Active_Map_Manager: Added a new associative container (map
          abstraction) that associates system generated keys with user
          specified values. Since the key is system generated, searches
          are very fast and take a constant amount of time.  This map uses
          a key that keeps information of the index and the generation
          count of the slot it represents.  Since the index information is
          part of the key, lookups are super fast and predictable.

          This performance of this map is truely awesome:

          - inserts O(1) worse case
          - lookups O(1) worse case
          - deletes O(1) worse case

        * ace/Map_Manager: Completely reworked the internals of the
          Map_Manager.  A number of problems were addressed:

          (a) Finding an empty slot took O(n).  New code takes O(1).

          (b) Resizing was lame as it increased by ACE_DEFAULT_MAP_SIZE
              everytime.  The new scheme is cool since it grows
              exponentially up to 64K and after that grow in chunks of
              32K.

          (c) Old scheme used a simple but inefficient <is_free_> flag.
              The new scheme uses two doubly linked list to track used and
              free slots. Note that this scheme still uses an array to
              manage the search structure but manages the two linked list
              on top of the array.  Thanks to Carlos for this cool idea.

          (d) current_size() was broken.  This is fixed in the new code.

          (e) Inlined a bunch of small functions.

        * tests/SString_Test.cpp: Added empty string test.

        * ace/Containers_T.h (operator=): ACE_Array_Base must be fully
          qualified: ACE_Array_Base<T>.  Thanks to Susan Liebeskind
          <shl@janis.gtri.gatech.edu> for pointing this out.

        * tests/Map_Manager_Test.cpp (test_map_manager): Added
          Active_Map_Manager to the test.

Fri Jan 22 21:27:14 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.h
          (class ACE_Hash_Map_Entry): Modified the destructor to be
          "virtual" so that it gets invoked on the destruction of its
          derived class objects.
          (class ACE_Hash_Map_Manager_Ex): Modified the destructor to be
          "virtual" so that it gets invoked on the destruction of its
          derived class objects.
          Modified shared_find () to be "virtual" so that it can be
          defined in its derived classes.
          Declared a virtual method for creating new entries for the map
          called create_entry ().

        * ace/Hash_Map_Manager_T.cpp
          (create_entry): Added this virtual method which creates a new
          map entry. This is necessary to allow the map to contain various
          types of map entries.
          (bind_i):
          (trybind_i):
          (unbind_i):
          Used create_entry () to obtain a new entry object.

        * ace/Hash_Purgable_Map_Manager_T.{h,i,cpp}:
          The ACE_Hash_Purgable_Map_Manager_Ex derives from
          ACE_Hash_Map_Manager_Ex and provides the feature of purging
          K entries from the map. The default purging algorithm is Least
          Recently Used, which has been implemented using a virtual timer
          that increments whenever an entry is looked up or used. Each
          entry has a purge_tag which is the timestamp updated by the
          timer value whenever it is referenced. The entry is an object of
          ACE_Hash_Purgable_Map_Entry class which is derived from
          ACE_Hash_Map_Entry.
          (purge): This is the method which flushes K entries from the
          map. Locks are held.
          (purge_i): This method also flushes K entries but w.o. locks
          being held.
          (create_entry): Creates an ACE_Hash_Purgable_Map_Entry object.
          (shared_find): This method is used to lookup and verify whether
          an entry is present in the map. Also, the purge_tag of the entry
          is updated with the current timer value.

        * tests/Purgable_Map_Manager.cpp: Added this test which
          illustrates the use of the Hash_Purgable_Map_Manager to maintain
          a cache map. Also displays the change in the map size on
          purging.

Fri Jan 22 16:10:35 1999  Steve Huston  <shuston@riverace.com>

        * ace/Select_Reactor_Base.cpp (ACE_Select_Reactor_Notify::handle_input)
          EAGAIN is also a legit errno value (not only EWOULDBLOCK) for end
          of data on pipe.  Makes count of dispatches returned from
          ACE_Select_Reactor's handle_events correct in the presence of
          notifications.

        * ace/OS.i (ACE_OS::sema_init): Always init s->name_ to 0, else it
          might be non-zero (and junk) when deleted.

        * ace/config-hpux11.h: Added an overrideable ACE_TIMER_SKEW of 10 msec.

Fri Jan 22 15:07:08 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Containers_T.cpp: Yikes, don't delete the fixed stack since
          it wasn't allocated dynamically!  Thanks to Mike Goldman
          <whig@by.net> for this fix!

Fri Jan 22 13:08:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/ACE.{cpp, h}: added static methods ACE::gcd, which computes the
          greatest common divisor of two u_longs using Euclid's algorithm, and
          ACE::minimum_frame size, which computes the minimum enclosing frame
          size for two u_longs.

Thu Jan 21 20:45:09 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/006/client_acceptor.h
        * docs/tutorials/006/client_handler.cpp
        * docs/tutorials/006/client_handler.h
        * docs/tutorials/006/page01.html
        * docs/tutorials/006/page02.html
        * docs/tutorials/006/page03.html
        * docs/tutorials/006/page04.html
        * docs/tutorials/006/page05.html
          Integrated changes from Vishal and Kirthika

        * docs/tutorials/008/combine.shar
        * docs/tutorials/008/page02.html
        * docs/tutorials/008/page03.html
        * docs/tutorials/008/page04.html
        * docs/tutorials/009/combine.shar
        * docs/tutorials/009/directed_client.cpp
        * docs/tutorials/009/page01.html
        * docs/tutorials/009/page02.html
        * docs/tutorials/009/page03.html
        * docs/tutorials/009/page04.html
        * docs/tutorials/009/page05.html
        * docs/tutorials/009/server.cpp
          Changes from Kirthika plus colorization.


Thu Jan 21 16:01:50 1999  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/007/Makefile:
        * docs/tutorials/007/combine.shar:
        * docs/tutorials/007/page01.html:
        * docs/tutorials/007/page02.html:
        * docs/tutorials/007/page03.html:
        * docs/tutorials/007/page04.html:
        * docs/tutorials/007/page05.html:
        * docs/tutorials/007/page06.html:
        * docs/tutorials/007/page07.html:
        * docs/tutorials/007/page08.html:
        * docs/tutorials/007/page09.html:
        * docs/tutorials/007/thread_pool.cpp:
        * docs/tutorials/008/Makefile:
        * docs/tutorials/008/combine.shar:
        * docs/tutorials/008/directed_client.cpp:
        * docs/tutorials/008/page01.html:
        * docs/tutorials/008/page02.html:
        * docs/tutorials/008/page03.html:
        * docs/tutorials/008/page04.html:
        * docs/tutorials/008/page05.html:
        * docs/tutorials/008/server.cpp:
        * docs/tutorials/009/Makefile:
          Included Kirthika's abstract.
          Colorized both tutorials & convereted to new format.

Thu Jan 21 14:25:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/SString.h: changed !ACE_HAS_WINCE wrap of ostream
          operators to !ACE_LACKS_IOSTREAM_TOTALLY.

        * ace/OS.i (getuid): added static cast of -1 to uid_t on
          Chorus, to avoid compiler warning about change in sign.

        * ace/OS.h: moved (protected) MAXHOSTNAMELEN #define from
          pSOS and NT-only code to where its visible on all platforms.
          When we removed the #include of rpc.h, we lost the
          #define of MAXHOSTNAMELEN on Chorus.

Thu Jan 21 15:19:26 1999  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/001/Makefile:
        * docs/tutorials/001/page01.html:
        * docs/tutorials/001/page02.html:
        * docs/tutorials/001/page03.html:
        * docs/tutorials/001/page04.html:
        * docs/tutorials/001/page05.html:
        * docs/tutorials/005/client_handler.cpp:
        * docs/tutorials/005/page02.html:
        * docs/tutorials/005/page03.html:
        * docs/tutorials/005/page04.html:
        * docs/tutorials/005/page05.html:
        * docs/tutorials/005/page06.html:
        * docs/tutorials/006/client_handler.cpp:
        * docs/tutorials/006/page01.html:
        * docs/tutorials/006/page02.html:
        * docs/tutorials/006/page03.html:
        * docs/tutorials/006/page04.html:
        * docs/tutorials/006/page05.html:
          Incorporated new comments from Vishal, Yamuna and Pradeep.

Thu Jan 21 13:05:31 1999  Steve Huston  <shuston@riverace.com>

        * docs/tutorials/Makefile:  Removed include .depend to allow the
          whole set of tutorials to be built from the top.  Thanks to James
          Johnson for guiding this fix.

Wed Jan 20 19:47:16 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.{h,i,cpp} (fopen): Reimplement fopen using Win32 APIs so
          ACE_OS::unlink behaves the same as it does on UNIX platforms.
          Both ACE_OS::open and ACE_OS::fopen have been corrected.
          There's also a ACE::open_temp_file which should be the prefered
          method to open temp files when ACE_HANDLE is used.  That's
          because Win32 tries to map the file opened by
          ACE::open_temp_file to memory.

        * ace/Parse_Node.cpp (symbol): <func> need to be initialized.
          Thanks to David for reporting the bug.

Wed Jan 20 17:37:21 1999  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.h: Added "do {} while (0)" as defs for ACE_HEX_DUMP,
          ACE_ERROR, ACE_DEBUG when ACE_NLOGGING is defined.  Having null defs
          for these caused MSVC some problems.  Thanks to Doug Schmidt for
          giving (and explaining) the correct definitions.

Wed Jan 20 13:38:03 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (readdir_r): added ACE_UNUSED_ARG (entry)
          without ACE_HAS_REENTRANT_FUNCTIONS.

        * docs/ACE-guidelines.html: added guideline for calling
          ACE_OS::unlink () immediately after opening a temporary file.

        * *.h: replaced () around #pragma implementation argument.  Thanks
          to Susan Liebeskind <susan.liebeskind@gtri.gatech.edu> and
          Steve Huston for reporting and confirming that it's necessary
          on AIX.

Wed Jan 20 01:48:21 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Parse_Node.cpp (symbol): Remembered to pass down the
          "gobbler" in a Static_Function_Node.  Thanks to Eric C. Newton
          <ecn@smart.net> for reporting and providing the fix.

Tue Jan 19 17:52:49 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SString.h: Clarified the role of the <release> argument for
          the <set> method.  Thanks to Sudhanshu Garg
          <sg2@ladybug.cec.wustl.edu> for suggesting this.

Tue Jan 19 16:15:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * OS.i,README,config-cygwin32-common.h,config-linux-common.h,
          config-psos-diab.h,config-psos-tm.h,config-psosim-g++.h,
          config-sco-5.0.0-mit-pthread.h,config-sco-5.0.0.h,
          config-tandem.h: removed removed include of rpc/rpc.h, and
          ACE_LACKS_RPC_H.  Thanks to Susan Liebeskind
          <susan.liebeskind@gtri.gatech.edu> for initially suggesting this,
          and to Russ Noseworthy for reporting another problem (on
          SunOS 5.6 w/o threads) with it.  ACE doesn't need it.

        * bin/g++dep: removed /project/doc/pkg/gnu/bin from PATH so that
          I can run make depend on Linux.

Tue Jan 19 12:14:09 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * Makefile (CONTROLLED_FILES): Added ChangeLog-98b to the
          CONTROLLED_FILES macro.  Thanks to Susan Liebeskind
          <susan.liebeskind@gtri.gatech.edu> for suggesting this.

Tue Jan 19 10:24:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * apps/JAWS/PROTOTYPE/HTTPU/HTTPU.{dsp, dsw}: converted to MSVC++ 6.0
          (and backward compatible) format.

        * apps/JAWS/PROTOTYPE/HTTPU/http_headers.{cpp, h}: fixed ACE_RB_Tree
          templates, template instantiations.  Thanks to Sridhar Sabella
          (ssabbella@cemax.com) for pointing this out.

Tue Jan 19 00:42:44 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/Log_Msg/test_callback.cpp (log): Removed the use of
          cerr and used ACE_OS::printf() instead.

        * ace/Log_Record.cpp (print): Fixed comparison between signed and
          unsigned.  Thanks to David Levine for pointing this out.

Mon Jan 18 23:55:03 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ACE-INSTALL.html: Added more info on Alpha configuration
          problems and fixes.

Mon Jan 18 23:07:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (open): Files opened with CreateFileA (on Win32 of
          course,) are now opened with FILE_SHARE_DELETE flag set.  This
          allows ACE_OS::unlink to work as it should.  However, I haven't
          figured out how to make unlink work with file opened with fopen
          yet.  Apparently, fopen does not open file with
          FILE_SHARE_DELETE.

Mon Jan 18 22:54:18 1999  Darrell Brunsch <brunsch@cs.w...ustl.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Updated NT Alpha configurations.

        * apps/gperf/src/gperf.dsp:
        * apps/gperf/src/gperf_lib.dsp:
          Added NT Alpha configurations.

Mon Jan 18 22:14:00 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/011/message_queue.cpp:
        * docs/tutorials/011/page02.html:
        ACE_Message_Block::copy() will advance the wr_ptr() for us.
        Previously, I was doing that myself in run_test().  The test only
        worked because I never wrote data to the block after that.  If I
        had, things would have broken horribly.

Mon Jan 18 20:41:48 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Message_Block.h: Clarified that the wr_ptr() is incremented
          by n as a result of the copy operation.  Thanks to Zoran
          Ivanovic <zorani@pathcom.com> for suggesting this.

        * ace/INET_Addr.h (ACE_INET_Addr): Changed the default for
          ipaddr_format to 1 (which is what it had been originally) rather
          than 0 since the original way is faster since it doesn't use
          DNS.  Thanks to Zoran Ivanovic <zorani@pathcom.com> for finding
          this.

Mon Jan 18 20:31:47 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/006/client_handler.cpp:
        Typo...

        * docs/tutorials/006/*.html:
        * docs/tutorials/006/combine.shar:
        Colorized, added Kirthika's abstract.

Mon Jan 18 16:19:56 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (open): If a file is open with _O_TEMPORARY flag set
          on Win32, we also set the FILE_ATTRIBUTE_TEMPORARY so OS will
          try to cache it in memory to speed up access.

        * ace/ACE.cpp (open_temp_file): On Win32, temporary file should be
          opened with _O_TEMPORARY flag set, not FILE_DELETE_ON_CLOSE.

        * include/makeinclude/wrapper_macros.GNU: My previous fix of
          avoiding multiple definition of ACE_NDEBUG was not correct.  Now
          the macro check where should the definition go to.  Thanks to
          David for showing me the right way to do this.

Mon Jan 18 11:23:06 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/platform_irix6.x-sgic++.GNU:
          Added the -multigot flag when building shared libraries,
          otherwise TAO/orbsvcs is too big.

Mon Jan 18 09:54:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: moved ACE_HAS_PRIOCNTL #define so
          that it's defined even without threads.  Thanks to
          Russ Noseworthy for reporting this.

        * ace/OS.cpp (lwp_getparams): removed ACE_MT_SAFE check
          that Doug added Saturday.  It's not necessary with the
          above fix to config-sunos5.5.h.

        * examples/Log_Msg/test_ostream.cpp: don't try to create the
          ofstream if ACE_LACKS_IOSTREAM_TOTALLY.  Also, removed
          declarations of unused argc/argv arguments because some
          g++ versions complain about them.

Mon Jan 18 08:17:49 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_IO.cpp,
          ace/SOCK_Dgram.cpp: Added

          ACE_UNUSED_ARG (timeout);

          to the #else part of the recv (iovec *) methods.  Thanks to Mike
          Goldman for reporting this.

Mon Jan 18 01:13:57 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: ACE_TRY_NEW_ENV also needs to define a new
          CORBA::Environment even with native exceptions.  Mark exception
          caught by ACE_CATCH as unused arg to avoid compilation warnings.

Mon Jan 18 00:12:13 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.16 released.

Sun Jan 17 16:40:22 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Reactor_Exceptions_Test.cpp (main): Changed the LM_INFO
          message to indicate that C++ exception support isn't ENABLED on
          a platform, rather than saying that it's not supported at all...

Sun Jan 17 15:16:35 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/SString.cpp (operator<<): The operator<< used to print out
          ACE_WString caused an infinite loop on platform without UNICODE
          defined because we didn't convert the wide string on these
          platform.  However, since an ACE_WString always contains a wide
          string, the conversion from wide string to char string should
          always be done here.  Thanks to Scott Snyder
          <snyder@d0sgif.fnal.gov> for noticing this bug.

          (operator<<): Changed the ACE_SString and ACE_CString version to
          check against the case when the internal <rep_> contains 0.
          The ACE_CString version was printing out the string one char a
          time.  Can't see any reason why this is done like this.  Changed
          to print out the underlying <rep_> directly.

Sun Jan 17 14:42:39 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/001/*:
        * docs/tutorials/002/*:
        * docs/tutorials/003/*:
        * docs/tutorials/004/*:
        * docs/tutorials/005/*:
        Converted to the new (colorized) format used by T13 and beyond.
        I will convert the remaining tutorials (6-12) as each is reviewed.

        * docs/tutorials/005/fix.Makefile:
        * docs/tutorials/006/fix.Makefile:
        * docs/tutorials/007/fix.Makefile: Replaced by ../fix.Makefile.

        * docs/tutorials/010/Makefile:
        * docs/tutorials/011/Makefile:
        * docs/tutorials/012/Makefile:
        * docs/tutorials/013/Makefile:
        * docs/tutorials/014/Makefile:
        * docs/tutorials/016/Makefile:
        * docs/tutorials/017/Makefile:
        These all referenced ../007/fix.Makefile.  They now reference
        ../fix.Makefile instead.

Sun Jan 17 13:50:16 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/002/handler.h:
        * docs/tutorials/002/handler.h:
        * docs/tutorials/002/page03.html:
        * docs/tutorials/003/client.cpp:
        * docs/tutorials/003/page01.html:
        * docs/tutorials/004/page01.html:
        * docs/tutorials/005/client_handler.h:
        * docs/tutorials/005/page02.html:
        * docs/tutorials/005/page04.html:
        * docs/tutorials/005/page05.html:
        * docs/tutorials/005/server.cpp:

          More improvements from Doug's class (and Ossama).  Each "page2"
          includes an abstract by Kirthika.

          Reviewers to date:
          Yamuna Krishnamurthy <yamuna@cs.wustl.edu>
          Kirthika Parameswaran <kirthika@cs.wustl.edu>
          Balachandran Natarajan <bala@cs.wustl.edu>
          Pradeep Gore <pradeep@cs.wustl.edu>
          Ossama Othman <othman@cs.wustl.edu>

Sat Jan 16 19:08:12 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/High_Res_Timer.cpp: Added #ifdef so high-res timers work
          correctly on KCC.  Thanks to Scott Snyder
          <snyder@d0sgif.fnal.gov> for contributing this.

        * tests/test_config.h: Updated randomize() so that it uses a
          "fixed" seed, so that it will produce "reusable" random numbers.

        * include/makeinclude/platform_linux_kcc.GNU (LD): Added the -lm
          flag.  Thanks to Scott Snyder <snyder@d0sgif.fnal.gov> for
          contributing this.

        * tests/run_tests.sh: Added an
          LD_LIBRARY_PATH=../netsvcs/lib:$LD_LIBRARY_PATH so that we can
          use a relative name for the svc.conf files used in the
          Time_Service_Test and Tokens_Test.

        * ace/config-irix6.x-common.h: Added support for long double for
          KCC.  Thanks to Scott Snyder <snyder@d0sgif.fnal.gov> for
          contributing this.

        * ace/config-irix6.x-kcc.h: Added KCC support.  Thanks to Scott
          Snyder <snyder@d0sgif.fnal.gov> for contributing this.

        * ace/config-osf1-4.0.h: Added KCC support.  Thanks to Scott
          Snyder <snyder@d0sgif.fnal.gov> for contributing this.

        * ace/IOStream.h: Fixed up the PUT_CODE and GET_CODE macros so
          that they work with KCC.  Thanks to Scott Snyder
          <snyder@d0sgif.fnal.gov> for contributing this.

        * ace/Env_Value_T.h (ACE_Convert): Added a new ACE_Convert
          constructor for u_int so that TAO compiles correctly with KCC.
          Thanks to Scott Snyder <snyder@d0sgif.fnal.gov> for contributing
          this.

        * include/makeinclude/platform_osf1_4.0_kcc.GNU: Added a new
          platform config file for KCC.  Thanks to Scott Snyder
          <snyder@d0sgif.fnal.gov> for contributing this.

Sat Jan 16 18:13:29 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU: Commented out adding
          ACE_NDEBUG to CCFLAGS to avoid defining it twice.  Most (if not
          all) platforms include CFLAGS into CCFLAGS.  So, if "make
          debug=0" no longer work on your platform, then, you may need to
          add "CCFLAGS += $(CFLAGS)" into your platform_xxx.GNU.

Sat Jan 16 13:40:40 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Proactor.cpp (schedule_timer): Had to add an
          ACE_SYNCH_RECURSIVE_THREAD_MUTEX in place of
          ACE_Recursive_Thread_Mutex to avoid problems when threads=0.

        * ace/OS.cpp (lwp_getparams): For some reason we had to
          add

          # if defined (ACE_HAS_STHREADS) || (defined (sun) && (ACE_MT_SAFE != 0))

          instead of

          # if defined (ACE_HAS_STHREADS) || defined (sun)

          to avoid problems when threads=0.

        * ace/Asynch_IO.cpp: Replaced some ACE_Thread_Mutex decls with
          ACE_SYNCH_MUTEX to avoid problems with threads=0.

        * ace/config-sunos5.6.h: If defined(_POSIX_C_SOURCE) &&
          _POSIX_C_SOURCE >= 199506L) || defined (__EXTENSIONS__) then
          #define ACE_HAS_SIGWAIT to avoid compilation errors.  Thanks to
          Russ Noseworthy for reporting this.

        * ace/OS.i: Fixed the ACE_OS::readdir_r() so that it doesn't fail
          if threads are disabled via "make threads=0".  Thanks to Russ
          Noseworthy for reporting this.

        * ace/FILE_Connector.h (ACE_FILE_Connector): Added the O_CREAT
          flag to the list of flags passed to connect().  This ensures
          that the file is created if it doesn't already exist.  Thanks to
          Pradeep Gore <pradeep@cs.wustl.edu> for reporting this.

Fri Jan 15 21:28:04 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Log_Msg (ACE_Log_Msg_Callback): Added an interface class
          used for getting logging callbacks.  Users who are interested in
          getting the logging messages directly, can subclass this
          interface and override the log() method. They must then register
          their subclass with the Log_Msg class and make sure that they
          turn on the ACE_Log_Msg::MSG_CALLBACK flag.

          Your log() routine is called with an instance of
          ACE_Log_Record.  From this class, you can get the log
          message, the verbose log message, message type, message
          priority, and so on.

          Remember that there is one Log_Msg object per thread.
          Therefore, you may need to register your callback object with
          many Log_Msg objects (and have the correct synchronization in
          the log() method) or have a separate callback object per
          Log_Msg object.

          Thanks to Chris Lahey <clahey@ix.netcom.com> for suggesting this
          and send patches.

        * examples/Log_Msg/test_callback.cpp: Added new example for
          Log_Msg. This program tests the Log_Msg abstraction wrt writing
          to user defined callback objects.

Fri Jan 15 21:10:25 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: Made sure ACE_CORBA_HAS_EXCEPTIONS always
          gets set properly.  Added ACE_ADPOT_CORBA_ENV to reuse a
          existing CORBA::Environment variable.

Fri Jan 15 17:05:12 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Log_Record: Factored out the redundant formatting code.  The
          new scheme also allows the end user to get to verbose formatted
          string.  Thanks to Nanbor for helping out with this.

Fri Jan 15 17:15:18 EST 1999   James CE Johnson  <jcej@lads.com>

        * docs/tutorials/templates.html
          docs/tutorials/001/acceptor.h
          docs/tutorials/001/logger.h
          docs/tutorials/001/page01.html
          docs/tutorials/001/page02.html
          docs/tutorials/001/page03.html
          docs/tutorials/001/page04.html
          docs/tutorials/001/page05.html
          docs/tutorials/001/server.cpp
          docs/tutorials/003/page01.html

          Many changes from Ossama plus a new abstract (for T3) from
          Kirthika.

Fri Jan 15 14:40:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_IO,
          ace/SOCK_Dgram: Modified the recv(iovec *) and recvv(iovec *)
          methods so that they use select() to avoid spinning if no data
          is available.  Thanks to Mike Goldman <whig@by.net> for this
          fix.

Fri Jan 15 10:47:26 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Service_Repository.cpp: If a service being removed from the
          Service_Repository used the Service_Repository while being
          removed it could access objects that had already been deleted.
          Fix this by decrementing the current_size_ member in
          "real-time".  Thanks to Eric Newton for reporting this.

Fri Jan 15 08:08:31 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.15 released.

Fri Jan 15 07:20:46 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.i: Fixed variable names in isatty () on NT

Fri Jan 15 03:45:46 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/exceptions.html: Rewrote the exception handling guildlines
          based on ACE's try macros.

Fri Jan 15 01:32:55 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.14 released.

Fri Jan 15 00:03:32 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/Log_Msg/test_ostream.cpp: Added new example for
          Log_Msg. This program tests the Log_Msg abstraction wrt writing
          to stderr and to a file.

Thu Jan 14 21:50:22 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: Added a new set of try macros which help
          application developers write portable code that handles
          CORBA::Exception portably.  The macros will work with any ORB.

          The total number of macros has reduces significantly and they
          should be much easier to use because the rules all follow the
          same style.

          The new try macros should be prefered over the original try
          macro in $TAO_ROOT/TAO/try_macros.h because those macros will
          soon be *DEPRICATED* once we finished convert TAO to use the new
          macros.

          Please see ACE_wrappers/docs/exceptions.html for guidelines and
          rules of using ACE's try macros.

Thu Jan 14 20:41:33 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS: Moved some code around to consolidate the getuid() and
          isatty() functions.

        * ace/OS: Added support for the setuid() call.  Thanks to Susan
          Liebeskind <susan.liebeskind@gtri.gatech.edu> for suggesting
          this.

Thu Jan 14 16:18:37 EST 1999  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/001/page02.html:
          docs/tutorials/001/page03.html:

          Included Kirthika Parameswaran's <Kirthika@cs.wustl.edu>
          abstract and analogy.  Thanks Kirthika!

        * docs/tutorials/001/Source.tgz:
          docs/tutorials/001/acceptor.h:
          docs/tutorials/001/logger.h:
          docs/tutorials/001/server.cpp:
          docs/tutorials/001/page[345].html:
        * docs/tutorials/002/page0[23].html:
          docs/tutorials/002/handler.h:

          Added improvements from Kirthika, Pradeep and Yamuna

Thu Jan 14 11:46:25 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Synch_T.h: Pointed out that we can only parameterize
          ACE_Condition<> with ACE_Thread_Mutex and ACE_...Null_Mutex.
          Thanks to Knut-Havard Aksnes <knut@orion.no> for reporting
          this.

Thu Jan 14 02:33:37 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.13 released.

Thu Jan 14 00:07:34 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * docs/tutorials/014/stream.cpp: Added #include "ace/streams.h".

Wed Jan 13 23:18:03 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h:
        * config-g++-common.h:
        * config-osf1-4.0.h:
        * config-psos-diab.h:
        * config-psos-tm.h: Revert my previous change.  Removed the
          ChangeLog entry about the change.

Wed Jan 13 22:30:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_chorus_ghs.GNU: removed
          explicit link with libedgnoe.a, because GreenHills adds
          that implicitly.

        * ace/OS.h: added quick hack to ACE_HAS_BROKEN_EXPLICIT_DESTRUCTOR
          logic to allow compilation with g++.

Wed Jan 13 18:48:30 EST 1999  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/004/client.cpp:
          docs/tutorials/010/message_queue.cp:
          docs/tutorials/011/message_queue.cpp:
          docs/tutorials/012/message_queue.cpp:
          docs/tutorials/013/message_queue.cpp:
          docs/tutorials/014/EndTask.h:
          docs/tutorials/019/client.cpp:
          docs/tutorials/019/client2.cpp:
          docs/tutorials/019/server.cpp:
          docs/tutorials/019/server2.cpp:
          docs/tutorials/019/shmem.cpp:
          docs/tutorials/020/client.cpp:
          docs/tutorials/020/server.cpp:
          docs/tutorials/021/client.cpp:
          docs/tutorials/021/mpool.cpp:
          docs/tutorials/021/mpool.h:
          docs/tutorials/021/server.cpp:
          Fixed many NT issues found by Irfan.  Most are related to the
          fact that NT doesn't have SysV shared memory.

Wed Jan 13 04:45:59 1999  James C Hu  <jxh@cs.wustl.edu>

        * ace/Cache_Object.{h,cpp}:
        * ace/Cache_Manager.{h,cpp}:
        * ace/Cache_Manager_T.{h,cpp}:
        * ace/Cache_Hash_T.{h,cpp}:
        * ace/Cache_Heap_T.{h,cpp}:
        * ace/Hash_Bucket_T.{h,cpp}:
          Supporting infrastructure for the new Filecache.  These classes
          form the basis of a generic in memory cache engine.

Wed Jan 13 02:17:57 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.cpp (writev): This function should use ACE::write_n
          instead of ACE::send_n.  Similarly, readv() should use
          ACE::read_n instead of ACE::recv_n.

        * ace/ACE.cpp (send): This function should use ACE_OS::sendv
          instead of ACE_OS::writev.  Similarly, recv() should use
          ACE_OS::recvv instead of ACE_OS::readv.

        * docs/tutorials:  Fixed all the NT project files.

Tue Jan 12 22:41:05 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd.h: Uncommented ACE_HAS_SIGWAIT.  This is
          required for FreeBSD 2.2.8. Thanks to John Aughey
          <jha@FreeBSD.ORG> for reporting this.

        * ace/SOCK_IO.{h,i}:
        * ace/SOCK_Stream.{h,i} (sendv_n/recvv_n): Moved these functions
          from SOCK_IO to SOCK_Stream where it makes more sense to have
          the semantic of sending/receiving <n> bytes.

Tue Jan 12 19:52:26 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACE-INSTALL.html: Added more info on dynamically linking
          run-time libraries.

        * ace/SOCK_IO.{h,i,cpp} (sendv,recvv,sendv_n,recvv_n): Renamed
          vector send_n/recv_n.  There were name clashing since these
          methods have similar signatures to some send_n/recv_n in
          ACE_SOCK_Stream, they got hidden by the derived methods.
          Renaming them solve the problem.

Tue Jan 12 10:59:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_chorus_ghs.GNU: fixed location of
          libedgenoe.a, so that a symlink in $(GHS_DIR) is no longer necessary.
          Thanks to Steve Kay for reporting this.

        * ace/config-mklinux.h: removed ACE_HAS_SOCKLEN_T, added __USE_XOPEN.
          Thanks to Andreas Tobler <toa@pop.agri.ch> for these updates.

Tue Jan 12 08:44:11 EST 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * ace/Acceptor.cpp (handle_close):

          Since the reactor_ data member is made private, we need to use
          its accessor method to retrieve it.

Tue Jan 12 02:12:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ACE_DES_NO_FREE,ACE_DES_FREE): These two macros
          shouldn't be treated differently no matter
          ACE_HAS_BROKEN_EXPLICIT_DESTRUCTOR is defined or not.
          Otherwise, virtual destructor won't work in one of the original
          definitions.

          There shouldn't be different different definitions for calling
          template destructor explicitly either.  However, we need to find
          that out.  The meaning of ACE_HAS_BROKEN_EXPLICIT_DESTRUCTOR
          seems to be reversed.  That needs to be fixed also.

Tue Jan 12 00:18:15 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Event_Handler.h: Moved the priority_ and reactor_ data
          members into the private section of the class since these can
          always be accessed via their accessor methods.  Thanks to Mike
          Goldman <whig@by.net> for reporting this.

Mon Jan 11 15:30:26 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Process.{h,i} (get_process_attributes,get_thread_attributes):
          Removed the constness from the return value to avoid Intel C++
          warnings.  Thanks to Karel Zuiderveld
          <kzuiderveld@vitalimages.com> for reporting this.

        * bin/ADDIDL.DSM: A VB script to add new IDL files into DevStudio
          projects.   Thanks to Peter <weatp@syntron.com> for contributing
          this nice tool.

Mon Jan 11 12:54:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_IO: Added const qualifiers to all the send*() and
          recv*() methods that take ACE_Time_Value values.  Thanks to Jody
          Hagins <jody@atdesk.com> for reporting this.

        * ace/SOCK_IO: Added a new send_n() method that uses the new
          ACE::sendv_n() method!

        * ace/ACE: Added a new sendv_n() and writev_n() method that sends
          all the bytes in the iovec!

        * ace/ACE.h (ACE): Added default values of 0 for ACE::writev() and
          ACE::readv().

        * examples/NT_Service: Tidied up the formatting to conform to the
          ACE programming guidelines.

Mon Jan 11 10:23:06 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h: Added ACE_LACKS_READDIR_R.
        * ace/config-freebsd.h: Added ACE_LACKS_READDIR_R,
          ACE_HAS_NONCONST_MSGSND, ACE_LACKS_MALLOC_H.  ACE_HAS_SIGINFO_T
          only applies to 3.0 and above.  Thanks to Ivan Pascal
          <pascal@info.tsu.ru> for reporting the change.

Sun Jan 10 21:52:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Message_Queue_Notifications_Test.cpp (iterator_test):
          added comment explaining why a message queue size of 32 Kb
          is used, instead of the default of 16 Kb.

        * docs/ACE-guidelines.html: added guidelines for boolean types
          and function return values.

Sun Jan 10 17:33:29 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Message_Queue_Notifications_Test.cpp: Replaced delete mb
          with mb->release().  Thanks to Susan Liebeskind
          <susan.liebeskind@gtri.gatech.edu> for reporting this
          inconsistency.

        * ace/Task_T.h,
          ace/Message_Queue_T.h: Clarified the fact that the
          ACE_Time_Value arguments to the Message_Queue methods
          use absolute, rather than relative, time.  Thanks to
          Stanford S. Guillory <sguillory@vignette.com> for pointing out
          the need for this clarification.

Sun Jan 10 09:18:41 1999  Martin Krumpolec <krumpo@pobox.sk>

        * ace/Log_Msg.cpp (log): only re-enable tracing if it had
          not been explicitly disabled.

Sun Jan 10 01:06:18 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Log_Msg.cpp (log): Change call from exit() to abort().

        * ace/OS.i (abort): Added new function.

Sat Jan  9 22:05:07 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/tao_env.pl: A new perl script that help you translate _env
          to TAO_IN_ENV.

Sat Jan 09 10:53:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Name_Proxy.cpp (open): swapped branches of conditional
          so that options.time_value () is used if USE_TIMEOUT is enabled.
          Thanks to Mike Goldman <whig@by.net> for reporting this.

Fri Jan 08 19:19:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Applied ACE_TEXT to the definition of
          ACE_DEFAULT_TEMP_FILE on Win32.  Thanks to
          <gwross@west.raytheon.com> for reporting this.

Fri Jan 08 13:24:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Synch.h (ACE_Process_Mutex): made data members
          private instead of public.  Thanks to Peter Gross
          <pgross@signalsoftcorp.com> for reporting this.

        * examples/Threads/reader_writer.cpp: removed volatile
          qualifier from declaration of "shared_thr_id", so that
          the file will compile on DU 4.0 with DCE threads.  The
          volatile qualifier caused a type mismatch with
          ACE_thread_t.  And, it's not necessary, because all
          access of the shared_thr_id is guarded.

        * include/makeinclude/platform_chorus_ghs.GNU: added gnuch68
          to -alttools, and removed bin from AR; use libedgnoe.a instead
          of libedg.a with GHS 1.8.9.1.

        * ace/config-sunos5.5.h: don't define ACE_HAS_XPG4_MULTIBYTE_CHAR
          with ghs, because its version 1.8.9 doesn't seem to support it.
          Also, with ghs, replaced the __ctype [] declaration with an
          #include of <stdlib.h>, because that's cleaner.  Finally,
          added ACE_HAS_BROKEN_ENUMS for ghs (1.8.9).

Thu Jan 07 09:05:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: added ACE_HAS_SIG_C_FUNC with
          Sun CC >= 4.2.  Sun CC 5.0 needs it; Sun CC 4.2 doesn't
          object to it on SunOS 5.5.1, 5.6, and 5.7.  Thanks to
          Neil Cohen <nbc@aikisoft.com> for figuring out how to
          compile ACE with Sun CC 5.0.

        * include/makeinclude/platform_sunos5_sunc++.GNU: only
          use -features=castop and -rtti with Sun CC 4.2.  CC 5.0
          doesn't support them; I assume that it enables RTTI by
          default.  Thanks to Neil Cohen <nbc@aikisoft.com> for
          reporting this.

        * ACE-INSTALL.html: added ACE_HAS_REGEX #undef suggestion for
          shared lib link problems with egcs 1.1.x on Solaris 2.5.x.
          Thanks to Bob McWhirter <bob@werken.com> for reporting this
          problem.

Thu Jan 07 04:45:36 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.12 released.

Thu Jan 07 04:01:08 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Containers_T.cpp (max_size): No need to reallocate if the
          new size is the same.  Thanks to Mike Goldman <whig@by.net> for
          pointing this out.

        * ace/Strategies_T.cpp (check_hint_i and cleanup_hint_i):
          purge_i() should be called after the entry is closed.

        * Select_Reactor_Base.cpp (unbind): The next <max_handlep1_>
          should be calculated not only based on the <wait_set> but also
          the <suspend_set>.

          Thanks to Mark L. Boriack <mboriack@std.saic.com> for providing
          a description of this bug.

Wed Jan 06 21:42:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (thr_create): moved #endif /* ACE_LACKS_SETDETACH */
          outside of }, to allow compilation on DU 4.0/cxx with DCE threads.

        * ace/config-osf1-4.0.h: with DCE threads only, added
          ACE_LACKS_THREAD_PROCESS_SCOPING.

Wed Jan 06 16:36:21 1999  David L. Levine  <schmidt@cs.wustl.edu>

        * ACE version 4.6.11 released.

Wed Jan 06 15:15:37 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (process_directive,close): Moved the
          deletion of <svc_conf_file_queue_> into close method.
          Otherwise, there's no way to reconfigure the service
          configuration once it get started.  Thanks to Mike Goldman
          <whig@by.net> for reporting the problem.

Wed Jan  6 14:27:24 EST 1999  James CE Johnson  <jcej@lads.com

        * docs/tutorials/021/*:
        Completed the ACE_Malloc<> tutorial.  It could be a lot better
        than it is but I'm still new to ACE_Malloc...

        * docs/tutorials/021/online-tutorials.html:
        Added the link for #21

Tue Jan 05 22:55:07 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Strategies_T.cpp (cleanup_hint_i and check_hint_i): Since we
          are holding the connection cache lock in these methods, the
          Svc_Handler should not call purge().  If it does, a deadlock
          will occur (unless we have recursive locks) since we are already
          holding the connection cache lock.  Therefore, we zero out the
          recycler before calling svc_handler->close() and purge out the
          svc_handler entry ourself (through purge_i()).

          Thanks to Mark L. Boriack <mboriack@std.saic.com> for providing
          a precise example illustrating this bug.

Tue Jan  5 18:48:47  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/templates.html: Fixed a number of problems here.
          Thanks to Amos Shapira <Amos_Shapira@icomverse.com> for pointing
          them out.

        * docs/tutorials/colorize: I pulled out the colorization code from
          combine into this standalone script.  One of these days I'll fix
          combine so that the code isn't duplicated...

Tue Jan  5 16:14:00 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-irix6.x-common.h:
          Added ACE_TIMER_SKEW definition.

        * ace/FILE.cpp:
          Fixed the seek() prototype, is was declared as taking a "off_t"
          argument, but is was defined with a "long" argument,
          unfortunately in most platforms this was not a problem.

Tue Jan 05 13:15:35 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.i (open): Be sure to pass down the
          <ignore_static_svcs> argument down to the real open method.

Tue Jan 05 08:08:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/MM_Shared_Memory_Test.cpp (spawn): fixed syntax error
          by moving ) to end of ACE_ERROR invocation.

        * ace/config-osf1-4.0.h: added 10 ms ACE_TIMER_SKEW, so that
          MT_Reactor_Timer_Test passes.

        * ace/config-lynxos.h: added 10 ms ACE_TIMER_SKEW, so that
          MT_Reactor_Timer_Test comes closer to passing.  It now
          chokes on the wait () near the end.

        * ace/OS.i (thr_getspecific): moved return 0 statement inside
          the Draft 7/STD #else block, to avoid warning about unreachable
          statement with Draft 4/6.

        * ace/config-osf1-4.0.h: with Draft 4 pthreads, added
          ACE_LACKS_READDIR_R.

        * tests/MT_Reactor_Timer_Test.cpp (main): added printout if
          wait () fails.

Tue Jan  5 00:59:04 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Synch: Changed the remove() method of ACE_Thread_Mutex,
          ACE_Mutex, ACE_Semaphore, ACE_RW_Mutex, ACE_Event,
          ACE_Thread_Condition_Mutex, ACE_File_Lock, and
          ACE_Recursive_Thread_Mutex so that they check a flag to see if
          remove() has already been called.  If it has, then the remove()
          call does nothing.  This avoids nasty problems on platforms like
          Win95 that fail mysteriously if locks are destroyed multiple
          times.  Note that our solution isn't perfect since it won't
          protect against race conditions if multiple threads call
          remove() simultaneously.  However, if this happens it's a sign
          that the application was designed incorrectly...  Thanks to Paul
          Felix <pef@fluent.com> and Irfan for tracking this down....

        * ace/FILE: Added new methods, seek() and tell(), that are more
          intuitively named than the existing position() methods.  The
          position() methods have been retained for backwards
          compatiblity, but are now marked as deprecated.

        * ace/OS.h: Added a macro for ACE_DEFAULT_HTTP_PORT, which
          is 80 of course...

        * ace/INET_Addr.cpp: Make sure that addr_to_string() correctly
          checks the length of its buffer before doing a sprintf().  In
          addition, added an option to print the results in either ip-addr
          format or ip-name format.

        * ace/Mem_Map.cpp (map): where ace/Mem_Map.cpp mmap() will succeed
          if the length of the file mapping is 0, which will be the case
          if we've just created the file.  This was the wrong place to
          make this check.

        * tests/MM_Shared_Memory_Test.cpp: Cleaned up a few things
          in this test so that it'll be easier to maintain.

Mon Jan 04 08:45:45 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.7.h: only use the g++ hacks if the
          g++ version is prior to 2.8.  Assume that later versions
          were built on SunOS 5.7 host, and/or don't have header
          files that are incompatible with the system headers.

        * bin/create_ace_build: changed symlink creation failure from
          error (with termination) to warning create_ace_build.

Mon Jan  4 03:15:57 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Mem_Map: If we're remapping an already-mapped file
          (i.e., the base_addr_ != 0) && the addr parameter IS 0 (i.e.,
          the user isn't trying to respecify where to map this file), then
          we'll try to map over top of the existing region, which implies
          "MAP_FIXED".

Sun Jan 03 23:21:46 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (initialize): Both initialize methods now
          remove the service object from the repository if its init()
          method failed.

Sun Jan  3 14:39:49 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/ACE: Added a simple dirname() wrapper method.

        * ace/SString: The set(const char *, size_t, int = 1) and
          set(const char *, int) methods were inherently ambiguous.
          I've fixed this by changing removing the default parameters.
          Thanks to Irfan for suggesting this fix.

        * ace/Mem_Map.cpp: mmap() will fail if the length of the file
          mapping is 0, which will be the case if we've just created the
          file.  Therefore, don't even bother trying to mmap() in this
          case and return a successful result.

        * ace/FILE: Moved the get_remote_addr() and get_local_addr()
          methods from the FILE_IO class to the FILE class since that's
          more properly where they belong.  Also added a new remove()
          method that unlinks the file.

        * tests/Priority_Reactor_Test.cpp,
          tests/Conn_Test.cpp,
          tests/Notify_Performance_Test.cpp,
          Priority_Reactor_Test.cpp,
          Reactor_Performance_Test.cpp: Since the default is to skip argv0
          there's no sense explicitly saying this in the constructor of
          ACE_Get_Opt.

        * ace/FILE_Connector.h: Updated the comments to reflect recent
          changes.

        * ace/FILE.h: Added a new get_info() method that takes a reference
          to an ACE_FILE_Info rather than a pointer.  This is a cleaner
          API, IMHO.

        * ace/FILE_Connector.cpp (connect): When the <remote_sap> argument
          is ACE_Addr::sap_any, then connect will select a temporary
          filename using the new feature of ACE_FILE_Addr described below.

        * ace/FILE_Addr.cpp (set): When the address is ACE_Addr::sap_any,
          then we'll select a new temporary filename using the new
          ACE_DEFAULT_TEMP_FILE macro and ACE_OS::mktemp().

        * ace/OS.h: Added a new ACE_DEFAULT_TEMP_FILE macro that defaults
          to "/tmp/ace-file-XXXXXX" and is used by the ACE_FILE_Connector
          to create a temporary file when it's given an ACE_Addr::sap_any.

        * ace/FILE_Addr.h: The <set> accessor should return an int to be
          consistent.

        * ace/OS.h: Added a new ACE_sap_any_cast macro, which makes it
          much easier to cast the ACE_Addr::sap_any to the right subclass.

        * tests/Reactor_Performance_Test.cpp,
          tests/Reactor_Exceptions_Test.cpp,
          tests/Process_Strategy_Test.cpp,
          tests/Priority_Reactor_Test.cpp,
          tests/IOStream_Test.cpp,
          tests/Conn_Test.cpp: Replaced all the C-style casts for
          ACE_Addr::sap_any with the new ACE_sap_any_cast macro.

Sun Jan 03 21:48:37 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Asynch_Acceptor.cpp: Since this is a template file, I
          removed it from the ace library build on NT.

        * ace/Asynch_Acceptor.cpp (open): Changed C-style cast to use the
          new ACE_sap_any_cast macro from Dr. Schmidt.

Sun Jan 03 09:12:23 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: with GreenHills, added
          ACE_LACKS_LINEBUFFERED_STREAMBUF and ACE_LACKS_SIGNED_CHAR.

        * ace/Basic_Types.* (ACE_U_LongLong): unioned the data members
          with a double, to ensure alignment on 8-byte boundaries.  It
          could matter when an ACE_U_LongLong is used as a true 8-byte
          quantity, such as in a call to Solaris ::gethrtime ().

        * tests/Time_Value_Test.cpp: replaced remaining #ifdef
          ACE_HAS_STHREADS with #ifdef sun.

Sat Jan  2 23:48:44 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/ACE-tutorials.html
        * docs/tutorials/guide-tutorials.html
        * docs/tutorials/new-tutorials.html
        * docs/tutorials/online-tutorials.html
        Converted some of the absolute URLs to relative.  I only have the
        docs/tutorials tree here at home so I couldn't do any more than
        these.

        * docs/tutorials/021/*
        New tutorial on ACE_Malloc<>.  I haven't begun the documentation
        yet but wanted to get the code commited so it doesn't get lost.

Sat Jan 02 08:34:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/ASX/Event_Server/Event_Server/event_server.cpp
          (handle_input),
          examples/Reactor/Misc/test_early_timeouts.cpp (main):
          added ACE_UNUSED_ARG (n), to avoid compile warning with ACE_NDEBUG.

        * performance-tests/Misc/test_naming.cpp (find): moved function
          call w/side effect out of ACE_ASSERT.  Thanks to DU 4.0 cxx
          for noticiing it, with ACE_NDEBUG.

Fri Jan 01 18:57:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Containers_T.i (ACE_Array,ACE_Array::operator=):
          added missing ACE_INLINE's.

        * ace/OS.{h,cpp} (ACE_TSS_Info::operator{==,!=}): added
          constness.  It's necessary with the ACE_Array changes,
          with ACE_HAS_TSS_EMULATION.

Fri Jan  1 12:22:14 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Containers_T.h:
        * ace/Containers_T.i:
        * ace/Containers_T.cpp:
        * bin/Array_Helper:
        * bin/Array.pl:
          Moved most of the implementation of ACE_Array into
          ACE_Array_Base this class does not require == or != operators
          defined for the template parameter.
          I also added methods to access and manipulate the capacity of
          the array (max_size) as opposed to always changing its size (the
          portion actually used).

        * ace/Object_Manager.cpp:
        * ace/Template_Instantiations.cpp:
        * ace/OS.cpp:
        * apps/JAWS/clients/Caching/URL_Properties.cpp:
          Fixed ACE_Array instantiations.
