// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:301


#include "TypeCodeFactory_Loader.h"
#include "tao/Stub.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/Any_Impl_T.h"
#include "tao/Any_Dual_Impl_T.h"
#include "tao/Any_Basic_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "TypeCodeFactoryC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:59

// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:262

#if !defined (__TAO_SEQ_CORBA_STRUCTMEMBER___ARG_TRAITS_CS_)
#define __TAO_SEQ_CORBA_STRUCTMEMBER___ARG_TRAITS_CS_

  ACE_TEMPLATE_SPECIALIZATION
  class TAO_TypeCodeFactory_Export Arg_Traits<CORBA::StructMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::StructMemberSeq,
            CORBA::StructMemberSeq_var,
            CORBA::StructMemberSeq_out
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:262

#if !defined (__TAO_SEQ_CORBA_UNIONMEMBER___ARG_TRAITS_CS_)
#define __TAO_SEQ_CORBA_UNIONMEMBER___ARG_TRAITS_CS_

  ACE_TEMPLATE_SPECIALIZATION
  class TAO_TypeCodeFactory_Export Arg_Traits<CORBA::UnionMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::UnionMemberSeq,
            CORBA::UnionMemberSeq_var,
            CORBA::UnionMemberSeq_out
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:262

#if !defined (__TAO_SEQ_CORBA_IDENTIFIER___ARG_TRAITS_CS_)
#define __TAO_SEQ_CORBA_IDENTIFIER___ARG_TRAITS_CS_

  ACE_TEMPLATE_SPECIALIZATION
  class TAO_TypeCodeFactory_Export Arg_Traits<CORBA::EnumMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::EnumMemberSeq,
            CORBA::EnumMemberSeq_var,
            CORBA::EnumMemberSeq_out
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:262

#if !defined (__TAO_SEQ_CORBA_VALUEMEMBER___ARG_TRAITS_CS_)
#define __TAO_SEQ_CORBA_VALUEMEMBER___ARG_TRAITS_CS_

  ACE_TEMPLATE_SPECIALIZATION
  class TAO_TypeCodeFactory_Export Arg_Traits<CORBA::ValueMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ValueMemberSeq,
            CORBA::ValueMemberSeq_var,
            CORBA::ValueMemberSeq_out
          >
  {
  };

#endif /* end #if !defined */
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::TypeCodeFactory.

CORBA::TypeCodeFactory_ptr
TAO::Objref_Traits<CORBA::TypeCodeFactory>::tao_duplicate (
    CORBA::TypeCodeFactory_ptr p
  )
{
  return CORBA::TypeCodeFactory::_duplicate (p);
}

void
TAO::Objref_Traits<CORBA::TypeCodeFactory>::tao_release (
    CORBA::TypeCodeFactory_ptr p
  )
{
  CORBA::release (p);
}

CORBA::TypeCodeFactory_ptr
TAO::Objref_Traits<CORBA::TypeCodeFactory>::tao_nil (void)
{
  return CORBA::TypeCodeFactory::_nil ();
}

CORBA::Boolean
TAO::Objref_Traits<CORBA::TypeCodeFactory>::tao_marshal (
    CORBA::TypeCodeFactory_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_TypeCodeFactory_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::TypeCodeFactory::TypeCodeFactory (void)
{}

CORBA::TypeCodeFactory::~TypeCodeFactory (void)
{}

void
CORBA::TypeCodeFactory::_tao_any_destructor (void *_tao_void_pointer)
{
  TypeCodeFactory *_tao_tmp_pointer =
    ACE_static_cast (TypeCodeFactory *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::TypeCodeFactory_ptr
CORBA::TypeCodeFactory::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  TypeCodeFactory_ptr proxy =
    dynamic_cast<TypeCodeFactory_ptr> (_tao_objref);
  proxy->_add_ref ();
  return proxy;
}

CORBA::TypeCodeFactory_ptr
CORBA::TypeCodeFactory::_duplicate (TypeCodeFactory_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }

  return obj;
}

CORBA::Boolean
CORBA::TypeCodeFactory::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/TypeCodeFactory:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* CORBA::TypeCodeFactory::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/TypeCodeFactory:1.0";
}

CORBA::Boolean
CORBA::TypeCodeFactory::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_CORBA_TypeCodeFactory[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x434f5242),
  ACE_NTOHL (0x412f5479),
  ACE_NTOHL (0x7065436f),
  ACE_NTOHL (0x64654661),
  ACE_NTOHL (0x63746f72),
  ACE_NTOHL (0x793a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/TypeCodeFactory:1.0
    16,
  ACE_NTOHL (0x54797065),
  ACE_NTOHL (0x436f6465),
  ACE_NTOHL (0x46616374),
  ACE_NTOHL (0x6f727900),  // name = TypeCodeFactory
  };

static CORBA::TypeCode _tc_TAO_tc_CORBA_TypeCodeFactory (
    CORBA::tk_objref,
    sizeof (_oc_CORBA_TypeCodeFactory),
    (char *) &_oc_CORBA_TypeCodeFactory,
    0,
    sizeof (CORBA::TypeCodeFactory)
  );

namespace CORBA
{
  ::CORBA::TypeCode_ptr _tc_TypeCodeFactory =
    &_tc_TAO_tc_CORBA_TypeCodeFactory;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::TypeCodeFactory_ptr _tao_elem
  )
{
  CORBA::TypeCodeFactory_ptr _tao_objptr =
    CORBA::TypeCodeFactory::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::TypeCodeFactory_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::TypeCodeFactory>::insert (
      _tao_any,
      CORBA::TypeCodeFactory::_tao_any_destructor,
      CORBA::_tc_TypeCodeFactory,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::TypeCodeFactory_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::TypeCodeFactory>::extract (
        _tao_any,
        CORBA::TypeCodeFactory::_tao_any_destructor,
        CORBA::_tc_TypeCodeFactory,
        _tao_elem
      );
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::TypeCodeFactory>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::TypeCodeFactory>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<CORBA::TypeCodeFactory>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be/be_visitor_root/root.cpp:1703

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::SetOverrideType
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::PolicyError
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::InvalidPolicies
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::TCKind
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::exception_type
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::ParameterMode
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::DefinitionKind
      >;

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::ValueMemberSeq>;

  template class
    TAO::Var_Size_Arg_Traits<
        CORBA::ValueMemberSeq,
        CORBA::ValueMemberSeq_var,
        CORBA::ValueMemberSeq_out
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::StructMemberSeq>;

  template class
    TAO::Var_Size_Arg_Traits<
        CORBA::StructMemberSeq,
        CORBA::StructMemberSeq_var,
        CORBA::StructMemberSeq_out
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::UnionMemberSeq>;

  template class
    TAO::Var_Size_Arg_Traits<
        CORBA::UnionMemberSeq,
        CORBA::UnionMemberSeq_var,
        CORBA::UnionMemberSeq_out
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::EnumMemberSeq>;

  template class
    TAO::Var_Size_Arg_Traits<
        CORBA::EnumMemberSeq,
        CORBA::EnumMemberSeq_var,
        CORBA::EnumMemberSeq_out
      >;

#endif /* end #if !defined */

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::PrimitiveKind
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::AttributeMode
      >;

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::OperationMode
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::sequence
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::sequence
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::sequence
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::sequence
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::TypeCodeFactory,
        TAO::Objref_Traits<CORBA::TypeCodeFactory>
      >;

  template class
    TAO_Objref_Out_T<
        CORBA::TypeCodeFactory,
        TAO::Objref_Traits<CORBA::TypeCodeFactory>
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::TypeCodeFactory
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::SetOverrideType \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::PolicyError \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::InvalidPolicies \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::TCKind \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::exception_type \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::ParameterMode \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::DefinitionKind \
      >

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::ValueMemberSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits< \
        CORBA::ValueMemberSeq, \
        CORBA::ValueMemberSeq_var, \
        CORBA::ValueMemberSeq_out \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::StructMemberSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits< \
        CORBA::StructMemberSeq, \
        CORBA::StructMemberSeq_var, \
        CORBA::StructMemberSeq_out \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::UnionMemberSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits< \
        CORBA::UnionMemberSeq, \
        CORBA::UnionMemberSeq_var, \
        CORBA::UnionMemberSeq_out \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::EnumMemberSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits< \
        CORBA::EnumMemberSeq, \
        CORBA::EnumMemberSeq_var, \
        CORBA::EnumMemberSeq_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::PrimitiveKind \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::AttributeMode \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::OperationMode \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::sequence \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::sequence \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::sequence \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::sequence \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::TypeCodeFactory, \
        TAO::Objref_Traits<CORBA::TypeCodeFactory> \
      >

# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::TypeCodeFactory, \
        TAO::Objref_Traits<CORBA::TypeCodeFactory> \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::TypeCodeFactory \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
