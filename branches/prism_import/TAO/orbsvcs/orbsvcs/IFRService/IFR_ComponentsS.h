// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:409

#ifndef _TAO_IDL____ORBSVCS_ORBSVCS_IFRSERVICE_IFR_COMPONENTSS_H_
#define _TAO_IDL____ORBSVCS_ORBSVCS_IFRSERVICE_IFR_COMPONENTSS_H_

#include /**/ "ace/pre.h"

#include "tao/IFR_Client/IFR_ComponentsC.h"
#include "orbsvcs/IFRService/IFR_ExtendedS.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_module/module_sh.cpp:49

namespace POA_CORBA
{


  // TAO_IDL - Generated from
  // be\be_visitor_module/module_sh.cpp:49

  namespace ComponentIR
  {


    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class EventDef;
    typedef EventDef *EventDef_ptr;

    class  EventDef
      : public virtual POA_CORBA::ExtValueDef
    {
    protected:
      EventDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::EventDef _stub_type;
      typedef ::CORBA::ComponentIR::EventDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::EventDef_var _stub_var_type;

      EventDef (const EventDef& rhs);
      virtual ~EventDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::EventDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_module_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_constant_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_struct_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_union_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_enum_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_alias_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_box_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_exception_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_native_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_abstract_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_local_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_type_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_supported_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_supported_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_initializers_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_initializers_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_base_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_base_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_abstract_base_values_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_abstract_base_values_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_is_abstract_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_is_abstract_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_is_custom_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_is_custom_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_is_truncatable_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_is_truncatable_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      is_a_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_member_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_attribute_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_operation_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_ext_initializers_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_ext_initializers_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_ext_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_attribute_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class Container;
    typedef Container *Container_ptr;

    class  Container
      : public virtual POA_CORBA::Container
    {
    protected:
      Container (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::Container _stub_type;
      typedef ::CORBA::ComponentIR::Container_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::Container_var _stub_var_type;

      Container (const Container& rhs);
      virtual ~Container (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::Container *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::ComponentDef_ptr create_component (
          const char * id,
          const char * name,
          const char * version,
          ::CORBA::ComponentIR::ComponentDef_ptr base_component,
          const ::CORBA::InterfaceDefSeq & supports_interfaces
        )
        = 0;

      static void create_component_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::HomeDef_ptr create_home (
          const char * id,
          const char * name,
          const char * version,
          ::CORBA::ComponentIR::HomeDef_ptr base_home,
          ::CORBA::ComponentIR::ComponentDef_ptr managed_component,
          const ::CORBA::InterfaceDefSeq & supports_interfaces,
          ::CORBA::ValueDef_ptr primary_key
        )
        = 0;

      static void create_home_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::EventDef_ptr create_event (
          const char * id,
          const char * name,
          const char * version,
          ::CORBA::Boolean is_custom,
          ::CORBA::Boolean is_abstract,
          ::CORBA::ValueDef_ptr base_value,
          ::CORBA::Boolean is_truncatable,
          const ::CORBA::ValueDefSeq & abstract_base_values,
          const ::CORBA::InterfaceDefSeq & supported_interfaces,
          const ::CORBA::ExtInitializerSeq & initializers
        )
        = 0;

      static void create_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_module_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_constant_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_struct_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_union_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_enum_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_alias_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_box_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_exception_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_native_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_abstract_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_local_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class ModuleDef;
    typedef ModuleDef *ModuleDef_ptr;

    class  ModuleDef
      : public virtual POA_CORBA::ModuleDef,
        public virtual POA_CORBA::ComponentIR::Container
    {
    protected:
      ModuleDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::ModuleDef _stub_type;
      typedef ::CORBA::ComponentIR::ModuleDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::ModuleDef_var _stub_var_type;

      ModuleDef (const ModuleDef& rhs);
      virtual ~ModuleDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::ModuleDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_module_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_constant_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_struct_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_union_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_enum_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_alias_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_box_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_exception_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_native_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_abstract_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_local_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_component_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_home_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class Repository;
    typedef Repository *Repository_ptr;

    class  Repository
      : public virtual POA_CORBA::Repository,
        public virtual POA_CORBA::ComponentIR::Container
    {
    protected:
      Repository (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::Repository _stub_type;
      typedef ::CORBA::ComponentIR::Repository_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::Repository_var _stub_var_type;

      Repository (const Repository& rhs);
      virtual ~Repository (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::Repository *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_module_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_constant_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_struct_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_union_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_enum_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_alias_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_box_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_exception_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_native_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_abstract_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_local_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      get_canonical_typecode_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      get_primitive_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_string_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_wstring_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_sequence_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_array_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_fixed_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_component_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_home_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class ProvidesDef;
    typedef ProvidesDef *ProvidesDef_ptr;

    class  ProvidesDef
      : public virtual POA_CORBA::Contained
    {
    protected:
      ProvidesDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::ProvidesDef _stub_type;
      typedef ::CORBA::ComponentIR::ProvidesDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::ProvidesDef_var _stub_var_type;

      ProvidesDef (const ProvidesDef& rhs);
      virtual ~ProvidesDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::ProvidesDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::InterfaceDef_ptr interface_type (
        )
        = 0;

      static void _get_interface_type_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void interface_type (
          ::CORBA::InterfaceDef_ptr interface_type
        )
        = 0;

      static void _set_interface_type_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class UsesDef;
    typedef UsesDef *UsesDef_ptr;

    class  UsesDef
      : public virtual POA_CORBA::Contained
    {
    protected:
      UsesDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::UsesDef _stub_type;
      typedef ::CORBA::ComponentIR::UsesDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::UsesDef_var _stub_var_type;

      UsesDef (const UsesDef& rhs);
      virtual ~UsesDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::UsesDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::InterfaceDef_ptr interface_type (
        )
        = 0;

      static void _get_interface_type_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void interface_type (
          ::CORBA::InterfaceDef_ptr interface_type
        )
        = 0;

      static void _set_interface_type_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::Boolean is_multiple (
        )
        = 0;

      static void _get_is_multiple_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void is_multiple (
          ::CORBA::Boolean is_multiple
        )
        = 0;

      static void _set_is_multiple_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class EventPortDef;
    typedef EventPortDef *EventPortDef_ptr;

    class  EventPortDef
      : public virtual POA_CORBA::Contained
    {
    protected:
      EventPortDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::EventPortDef _stub_type;
      typedef ::CORBA::ComponentIR::EventPortDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::EventPortDef_var _stub_var_type;

      EventPortDef (const EventPortDef& rhs);
      virtual ~EventPortDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::EventPortDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::EventDef_ptr event (
        )
        = 0;

      static void _get_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void event (
          ::CORBA::ComponentIR::EventDef_ptr event
        )
        = 0;

      static void _set_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::Boolean is_a (
          const char * event_id
        )
        = 0;

      static void is_a_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class EmitsDef;
    typedef EmitsDef *EmitsDef_ptr;

    class  EmitsDef
      : public virtual POA_CORBA::ComponentIR::EventPortDef
    {
    protected:
      EmitsDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::EmitsDef _stub_type;
      typedef ::CORBA::ComponentIR::EmitsDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::EmitsDef_var _stub_var_type;

      EmitsDef (const EmitsDef& rhs);
      virtual ~EmitsDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::EmitsDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      is_a_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class PublishesDef;
    typedef PublishesDef *PublishesDef_ptr;

    class  PublishesDef
      : public virtual POA_CORBA::ComponentIR::EventPortDef
    {
    protected:
      PublishesDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::PublishesDef _stub_type;
      typedef ::CORBA::ComponentIR::PublishesDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::PublishesDef_var _stub_var_type;

      PublishesDef (const PublishesDef& rhs);
      virtual ~PublishesDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::PublishesDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      is_a_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class ConsumesDef;
    typedef ConsumesDef *ConsumesDef_ptr;

    class  ConsumesDef
      : public virtual POA_CORBA::ComponentIR::EventPortDef
    {
    protected:
      ConsumesDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::ConsumesDef _stub_type;
      typedef ::CORBA::ComponentIR::ConsumesDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::ConsumesDef_var _stub_var_type;

      ConsumesDef (const ConsumesDef& rhs);
      virtual ~ConsumesDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::ConsumesDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_event_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      is_a_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class ComponentDef;
    typedef ComponentDef *ComponentDef_ptr;

    class  ComponentDef
      : public virtual POA_CORBA::ExtInterfaceDef
    {
    protected:
      ComponentDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::ComponentDef _stub_type;
      typedef ::CORBA::ComponentIR::ComponentDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::ComponentDef_var _stub_var_type;

      ComponentDef (const ComponentDef& rhs);
      virtual ~ComponentDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::ComponentDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::ComponentDef_ptr base_component (
        )
        = 0;

      static void _get_base_component_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void base_component (
          ::CORBA::ComponentIR::ComponentDef_ptr base_component
        )
        = 0;

      static void _set_base_component_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::InterfaceDefSeq * supported_interfaces (
        )
        = 0;

      static void _get_supported_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void supported_interfaces (
          const ::CORBA::InterfaceDefSeq & supported_interfaces
        )
        = 0;

      static void _set_supported_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::ProvidesDef_ptr create_provides (
          const char * id,
          const char * name,
          const char * version,
          ::CORBA::InterfaceDef_ptr interface_type
        )
        = 0;

      static void create_provides_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::UsesDef_ptr create_uses (
          const char * id,
          const char * name,
          const char * version,
          ::CORBA::InterfaceDef_ptr interface_type,
          ::CORBA::Boolean is_multiple
        )
        = 0;

      static void create_uses_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::EmitsDef_ptr create_emits (
          const char * id,
          const char * name,
          const char * version,
          ::CORBA::ComponentIR::EventDef_ptr event
        )
        = 0;

      static void create_emits_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::PublishesDef_ptr create_publishes (
          const char * id,
          const char * name,
          const char * version,
          ::CORBA::ComponentIR::EventDef_ptr event
        )
        = 0;

      static void create_publishes_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::ConsumesDef_ptr create_consumes (
          const char * id,
          const char * name,
          const char * version,
          ::CORBA::ComponentIR::EventDef_ptr event
        )
        = 0;

      static void create_consumes_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_module_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_constant_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_struct_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_union_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_enum_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_alias_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_box_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_exception_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_native_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_abstract_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_local_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_type_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_base_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_base_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      is_a_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_attribute_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_operation_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_ext_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_attribute_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class FactoryDef;
    typedef FactoryDef *FactoryDef_ptr;

    class  FactoryDef
      : public virtual POA_CORBA::OperationDef
    {
    protected:
      FactoryDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::FactoryDef _stub_type;
      typedef ::CORBA::ComponentIR::FactoryDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::FactoryDef_var _stub_var_type;

      FactoryDef (const FactoryDef& rhs);
      virtual ~FactoryDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::FactoryDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_result_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_result_def_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_result_def_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_params_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_params_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_mode_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_mode_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_contexts_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_contexts_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_exceptions_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_exceptions_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class FinderDef;
    typedef FinderDef *FinderDef_ptr;

    class  FinderDef
      : public virtual POA_CORBA::OperationDef
    {
    protected:
      FinderDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::FinderDef _stub_type;
      typedef ::CORBA::ComponentIR::FinderDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::FinderDef_var _stub_var_type;

      FinderDef (const FinderDef& rhs);
      virtual ~FinderDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::FinderDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_result_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_result_def_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_result_def_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_params_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_params_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_mode_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_mode_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_contexts_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_contexts_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_exceptions_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_exceptions_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_sh.cpp:87

    class HomeDef;
    typedef HomeDef *HomeDef_ptr;

    class  HomeDef
      : public virtual POA_CORBA::ExtInterfaceDef
    {
    protected:
      HomeDef (void);

    public:
      // Useful for template programming.
      typedef ::CORBA::ComponentIR::HomeDef _stub_type;
      typedef ::CORBA::ComponentIR::HomeDef_ptr _stub_ptr_type;
      typedef ::CORBA::ComponentIR::HomeDef_var _stub_var_type;

      HomeDef (const HomeDef& rhs);
      virtual ~HomeDef (void);

      virtual ::CORBA::Boolean _is_a (
          const char* logical_type_id
        );

      static void _is_a_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _non_existent_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _interface_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _component_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      static void _repository_id_skel (
          TAO_ServerRequest & req,
          void * servant_upcall,
          void * servant
        );

      virtual void _dispatch (
          TAO_ServerRequest & req,
          void * servant_upcall
        );

      ::CORBA::ComponentIR::HomeDef *_this (

        );

      virtual const char* _interface_repository_id (void) const;

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::HomeDef_ptr base_home (
        )
        = 0;

      static void _get_base_home_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void base_home (
          ::CORBA::ComponentIR::HomeDef_ptr base_home
        )
        = 0;

      static void _set_base_home_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::InterfaceDefSeq * supported_interfaces (
        )
        = 0;

      static void _get_supported_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void supported_interfaces (
          const ::CORBA::InterfaceDefSeq & supported_interfaces
        )
        = 0;

      static void _set_supported_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::ComponentDef_ptr managed_component (
        )
        = 0;

      static void _get_managed_component_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void managed_component (
          ::CORBA::ComponentIR::ComponentDef_ptr managed_component
        )
        = 0;

      static void _set_managed_component_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ValueDef_ptr primary_key (
        )
        = 0;

      static void _get_primary_key_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual void primary_key (
          ::CORBA::ValueDef_ptr primary_key
        )
        = 0;

      static void _set_primary_key_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::FactoryDef_ptr create_factory (
          const char * id,
          const char * name,
          const char * version,
          const ::CORBA::ParDescriptionSeq & params,
          const ::CORBA::ExceptionDefSeq & exceptions
        )
        = 0;

      static void create_factory_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_visitor_operation/operation_sh.cpp:45

      virtual ::CORBA::ComponentIR::FinderDef_ptr create_finder (
          const char * id,
          const char * name,
          const char * version,
          const ::CORBA::ParDescriptionSeq & params,
          const ::CORBA::ExceptionDefSeq & exceptions
        )
        = 0;

      static void create_finder_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_def_kind_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      destroy_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      lookup_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_contents_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_module_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_constant_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_struct_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_union_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_enum_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_alias_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_value_box_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_exception_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_native_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_abstract_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_local_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_value_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_id_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_version_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_defined_in_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_absolute_name_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_containing_repository_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      move_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_type_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _get_base_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      static void
      _set_base_interfaces_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      is_a_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_attribute_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_operation_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      describe_ext_interface_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );

      // TAO_IDL - Generated from
      // be\be_interface.cpp:1955

      static void
      create_ext_attribute_skel (
          TAO_ServerRequest & server_request,
          void * servant_upcall,
          void * servant
        );
    };

  // TAO_IDL - Generated from
  // be\be_visitor_module/module_sh.cpp:80

  } // module CORBA::ComponentIR

// TAO_IDL - Generated from
// be\be_visitor_module/module_sh.cpp:80

} // module CORBA

// TAO_IDL - Generated from
// be\be_codegen.cpp:1219



TAO_END_VERSIONED_NAMESPACE_DECL

#include "IFR_ComponentsS_T.h"

#if defined (__ACE_INLINE__)
#include "IFR_ComponentsS.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"
#endif /* ifndef */

