// $Id$

#if !defined (COMPONENTSERVER_IDL)
#define COMPONENTSERVER_IDL

#include "ComponentServer_Base.idl"

module Components
{
  typeprefix Components "omg.org";

  module Deployment
  {
    interface Container;
    typedef sequence<Container> Containers;
    interface ServerActivator;

    interface ComponentServer
    {
      readonly attribute ConfigValues configuration;

      ServerActivator get_server_activator();

      Container create_container(in ConfigValues config)
	raises (::Components::CreateFailure,
		::Components::Deployment::InvalidConfiguration);

      void remove_container(in Container cref) raises (::Components::RemoveFailure);

      Containers get_containers();

      void remove() raises (::Components::RemoveFailure);
    };

    interface Container
    {
      readonly attribute ConfigValues configuration;

      ComponentServer get_component_server();

      CCMHome install_home(in UUID id,
                           in string entrypt,
                           in ConfigValues config)
	raises (::Components::Deployment::UnknownImplId,
		::Components::Deployment::ImplEntryPointNotFound,
		::Components::Deployment::InstallationFailure,
		::Components::Deployment::InvalidConfiguration);

      void remove_home(in CCMHome href) raises (::Components::RemoveFailure);

      CCMHomes get_homes();

      void remove() raises (::Components::RemoveFailure);
    };
  };

};

#endif /* COMPONENTSERVER_IDL */
